// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret;  return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }

  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk



function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}

function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 134217728;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
} else {
  buffer = new ArrayBuffer(TOTAL_MEMORY);
}
updateGlobalBufferViews();


// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
if (HEAPU8[0] !== 255 || HEAPU8[3] !== 0) throw 'Typed arrays 2 must be run on a little-endian system';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;





// === Body ===

var ASM_CONSTS = [];




STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 164384;
  /* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_imgui_cpp() } });
  

memoryInitializer = "yakc.html.mem";





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  
  var GL={counter:1,lastError:0,buffers:[],mappedBuffers:{},programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:[],currentContext:null,byteSizeByTypeRoot:5120,byteSizeByType:[1,1,2,2,4,4,4,2,3,4,8],programInfos:{},stringCache:{},packAlignment:4,unpackAlignment:4,init:function () {
        GL.miniTempBuffer = new Float32Array(GL.MINI_TEMP_BUFFER_SIZE);
        for (var i = 0; i < GL.MINI_TEMP_BUFFER_SIZE; i++) {
          GL.miniTempBufferViews[i] = GL.miniTempBuffer.subarray(0, i+1);
        }
      },recordError:function recordError(errorCode) {
        if (!GL.lastError) {
          GL.lastError = errorCode;
        }
      },getNewId:function (table) {
        var ret = GL.counter++;
        for (var i = table.length; i < ret; i++) {
          table[i] = null;
        }
        return ret;
      },MINI_TEMP_BUFFER_SIZE:256,miniTempBuffer:null,miniTempBufferViews:[0],getSource:function (shader, count, string, length) {
        var source = '';
        for (var i = 0; i < count; ++i) {
          var frag;
          if (length) {
            var len = HEAP32[(((length)+(i*4))>>2)];
            if (len < 0) {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
            } else {
              frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)], len);
            }
          } else {
            frag = Pointer_stringify(HEAP32[(((string)+(i*4))>>2)]);
          }
          source += frag;
        }
        return source;
      },createContext:function (canvas, webGLContextAttributes) {
        if (typeof webGLContextAttributes.majorVersion === 'undefined' && typeof webGLContextAttributes.minorVersion === 'undefined') {
          webGLContextAttributes.majorVersion = 1;
          webGLContextAttributes.minorVersion = 0;
        }
        var ctx;
        var errorInfo = '?';
        function onContextCreationError(event) {
          errorInfo = event.statusMessage || errorInfo;
        }
        try {
          canvas.addEventListener('webglcontextcreationerror', onContextCreationError, false);
          try {
            if (webGLContextAttributes.majorVersion == 1 && webGLContextAttributes.minorVersion == 0) {
              ctx = canvas.getContext("webgl", webGLContextAttributes) || canvas.getContext("experimental-webgl", webGLContextAttributes);
            } else if (webGLContextAttributes.majorVersion == 2 && webGLContextAttributes.minorVersion == 0) {
              ctx = canvas.getContext("webgl2", webGLContextAttributes) || canvas.getContext("experimental-webgl2", webGLContextAttributes);
            } else {
              throw 'Unsupported WebGL context version ' + majorVersion + '.' + minorVersion + '!'
            }
          } finally {
            canvas.removeEventListener('webglcontextcreationerror', onContextCreationError, false);
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas: ' + [errorInfo, e, JSON.stringify(webGLContextAttributes)]);
          return 0;
        }
        // possible GL_DEBUG entry point: ctx = wrapDebugGL(ctx);
  
        if (!ctx) return 0;
        return GL.registerContext(ctx, webGLContextAttributes);
      },registerContext:function (ctx, webGLContextAttributes) {
        var handle = GL.getNewId(GL.contexts);
        var context = {
          handle: handle,
          version: webGLContextAttributes.majorVersion,
          GLctx: ctx
        };
        // Store the created context object so that we can access the context given a canvas without having to pass the parameters again.
        if (ctx.canvas) ctx.canvas.GLctxObject = context;
        GL.contexts[handle] = context;
        if (typeof webGLContextAttributes['enableExtensionsByDefault'] === 'undefined' || webGLContextAttributes.enableExtensionsByDefault) {
          GL.initExtensions(context);
        }
        return handle;
      },makeContextCurrent:function (contextHandle) {
        var context = GL.contexts[contextHandle];
        if (!context) return false;
        GLctx = Module.ctx = context.GLctx; // Active WebGL context object.
        GL.currentContext = context; // Active Emscripten GL layer context object.
        return true;
      },getContext:function (contextHandle) {
        return GL.contexts[contextHandle];
      },deleteContext:function (contextHandle) {
        if (GL.currentContext === GL.contexts[contextHandle]) GL.currentContext = null;
        if (typeof JSEvents === 'object') JSEvents.removeAllHandlersOnTarget(GL.contexts[contextHandle].GLctx.canvas); // Release all JS event handlers on the DOM element that the GL context is associated with since the context is now deleted.
        if (GL.contexts[contextHandle] && GL.contexts[contextHandle].GLctx.canvas) GL.contexts[contextHandle].GLctx.canvas.GLctxObject = undefined; // Make sure the canvas object no longer refers to the context object so there are no GC surprises.
        GL.contexts[contextHandle] = null;
      },initExtensions:function (context) {
        // If this function is called without a specific context object, init the extensions of the currently active context.
        if (!context) context = GL.currentContext;
  
        if (context.initExtensionsDone) return;
        context.initExtensionsDone = true;
  
        var GLctx = context.GLctx;
  
        context.maxVertexAttribs = GLctx.getParameter(GLctx.MAX_VERTEX_ATTRIBS);
  
        // Detect the presence of a few extensions manually, this GL interop layer itself will need to know if they exist. 
  
        if (context.version < 2) {
          // Extension available from Firefox 26 and Google Chrome 30
          var instancedArraysExt = GLctx.getExtension('ANGLE_instanced_arrays');
          if (instancedArraysExt) {
            GLctx['vertexAttribDivisor'] = function(index, divisor) { instancedArraysExt['vertexAttribDivisorANGLE'](index, divisor); };
            GLctx['drawArraysInstanced'] = function(mode, first, count, primcount) { instancedArraysExt['drawArraysInstancedANGLE'](mode, first, count, primcount); };
            GLctx['drawElementsInstanced'] = function(mode, count, type, indices, primcount) { instancedArraysExt['drawElementsInstancedANGLE'](mode, count, type, indices, primcount); };
          }
  
          // Extension available from Firefox 25 and WebKit
          var vaoExt = GLctx.getExtension('OES_vertex_array_object');
          if (vaoExt) {
            GLctx['createVertexArray'] = function() { return vaoExt['createVertexArrayOES'](); };
            GLctx['deleteVertexArray'] = function(vao) { vaoExt['deleteVertexArrayOES'](vao); };
            GLctx['bindVertexArray'] = function(vao) { vaoExt['bindVertexArrayOES'](vao); };
            GLctx['isVertexArray'] = function(vao) { return vaoExt['isVertexArrayOES'](vao); };
          }
  
          var drawBuffersExt = GLctx.getExtension('WEBGL_draw_buffers');
          if (drawBuffersExt) {
            GLctx['drawBuffers'] = function(n, bufs) { drawBuffersExt['drawBuffersWEBGL'](n, bufs); };
          }
        }
  
        // These are the 'safe' feature-enabling extensions that don't add any performance impact related to e.g. debugging, and
        // should be enabled by default so that client GLES2/GL code will not need to go through extra hoops to get its stuff working.
        // As new extensions are ratified at http://www.khronos.org/registry/webgl/extensions/ , feel free to add your new extensions
        // here, as long as they don't produce a performance impact for users that might not be using those extensions.
        // E.g. debugging-related extensions should probably be off by default.
        var automaticallyEnabledExtensions = [ "OES_texture_float", "OES_texture_half_float", "OES_standard_derivatives",
                                               "OES_vertex_array_object", "WEBGL_compressed_texture_s3tc", "WEBGL_depth_texture",
                                               "OES_element_index_uint", "EXT_texture_filter_anisotropic", "ANGLE_instanced_arrays",
                                               "OES_texture_float_linear", "OES_texture_half_float_linear", "WEBGL_compressed_texture_atc",
                                               "WEBGL_compressed_texture_pvrtc", "EXT_color_buffer_half_float", "WEBGL_color_buffer_float",
                                               "EXT_frag_depth", "EXT_sRGB", "WEBGL_draw_buffers", "WEBGL_shared_resources",
                                               "EXT_shader_texture_lod", "EXT_color_buffer_float"];
  
        function shouldEnableAutomatically(extension) {
          var ret = false;
          automaticallyEnabledExtensions.forEach(function(include) {
            if (ext.indexOf(include) != -1) {
              ret = true;
            }
          });
          return ret;
        }
  
        var exts = GLctx.getSupportedExtensions();
        if (exts && exts.length > 0) {
          GLctx.getSupportedExtensions().forEach(function(ext) {
            if (automaticallyEnabledExtensions.indexOf(ext) != -1) {
              GLctx.getExtension(ext); // Calling .getExtension enables that extension permanently, no need to store the return value to be enabled.
            }
          });
        }
      },populateUniformTable:function (program) {
        var p = GL.programs[program];
        GL.programInfos[program] = {
          uniforms: {},
          maxUniformLength: 0, // This is eagerly computed below, since we already enumerate all uniforms anyway.
          maxAttributeLength: -1 // This is lazily computed and cached, computed when/if first asked, "-1" meaning not computed yet.
        };
  
        var ptable = GL.programInfos[program];
        var utable = ptable.uniforms;
        // A program's uniform table maps the string name of an uniform to an integer location of that uniform.
        // The global GL.uniforms map maps integer locations to WebGLUniformLocations.
        var numUniforms = GLctx.getProgramParameter(p, GLctx.ACTIVE_UNIFORMS);
        for (var i = 0; i < numUniforms; ++i) {
          var u = GLctx.getActiveUniform(p, i);
  
          var name = u.name;
          ptable.maxUniformLength = Math.max(ptable.maxUniformLength, name.length+1);
  
          // Strip off any trailing array specifier we might have got, e.g. "[0]".
          if (name.indexOf(']', name.length-1) !== -1) {
            var ls = name.lastIndexOf('[');
            name = name.slice(0, ls);
          }
  
          // Optimize memory usage slightly: If we have an array of uniforms, e.g. 'vec3 colors[3];', then 
          // only store the string 'colors' in utable, and 'colors[0]', 'colors[1]' and 'colors[2]' will be parsed as 'colors'+i.
          // Note that for the GL.uniforms table, we still need to fetch the all WebGLUniformLocations for all the indices.
          var loc = GLctx.getUniformLocation(p, name);
          var id = GL.getNewId(GL.uniforms);
          utable[name] = [u.size, id];
          GL.uniforms[id] = loc;
  
          for (var j = 1; j < u.size; ++j) {
            var n = name + '['+j+']';
            loc = GLctx.getUniformLocation(p, n);
            id = GL.getNewId(GL.uniforms);
  
            GL.uniforms[id] = loc;
          }
        }
      }};function _glClearColor(x0, x1, x2, x3) { GLctx.clearColor(x0, x1, x2, x3) }

  function _glStencilMaskSeparate(x0, x1) { GLctx.stencilMaskSeparate(x0, x1) }

   
  Module["_pthread_mutex_lock"] = _pthread_mutex_lock;

  function _glLinkProgram(program) {
      GLctx.linkProgram(GL.programs[program]);
      GL.programInfos[program] = null; // uniforms no longer keep the same names after linking
      GL.populateUniformTable(program);
    }

  function _glBindTexture(target, texture) {
      GLctx.bindTexture(target, texture ? GL.textures[texture] : null);
    }

  function _glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer) {
      GLctx.framebufferRenderbuffer(target, attachment, renderbuffertarget,
                                         GL.renderbuffers[renderbuffer]);
    }

  function _glGetString(name_) {
      if (GL.stringCache[name_]) return GL.stringCache[name_];
      var ret; 
      switch(name_) {
        case 0x1F00 /* GL_VENDOR */:
        case 0x1F01 /* GL_RENDERER */:
        case 0x1F02 /* GL_VERSION */:
          ret = allocate(intArrayFromString(GLctx.getParameter(name_)), 'i8', ALLOC_NORMAL);
          break;
        case 0x1F03 /* GL_EXTENSIONS */:
          var exts = GLctx.getSupportedExtensions();
          var gl_exts = [];
          for (var i in exts) {
            gl_exts.push(exts[i]);
            gl_exts.push("GL_" + exts[i]);
          }
          ret = allocate(intArrayFromString(gl_exts.join(' ')), 'i8', ALLOC_NORMAL);
          break;
        case 0x8B8C /* GL_SHADING_LANGUAGE_VERSION */:
          var glslVersion = GLctx.getParameter(GLctx.SHADING_LANGUAGE_VERSION);
          // Map WebGL GL_SHADING_LANGUAGE_VERSION string format to GLES format.
          if (glslVersion.indexOf('WebGL GLSL ES 1.0') != -1) glslVersion = 'OpenGL ES GLSL ES 1.00 (WebGL)';
          ret = allocate(intArrayFromString(glslVersion), 'i8', ALLOC_NORMAL);
          break;
        default:
          GL.recordError(0x0500/*GL_INVALID_ENUM*/);
          return 0;
      }
      GL.stringCache[name_] = ret;
      return ret;
    }

  function _pthread_mutex_init() {}

  var _llvm_pow_f32=Math_pow;

  function _emscripten_get_now() { abort() }

  
  var JSEvents={keyEvent:0,mouseEvent:0,wheelEvent:0,uiEvent:0,focusEvent:0,deviceOrientationEvent:0,deviceMotionEvent:0,fullscreenChangeEvent:0,pointerlockChangeEvent:0,visibilityChangeEvent:0,touchEvent:0,lastGamepadState:null,lastGamepadStateFrame:null,previousFullscreenElement:null,previousScreenX:null,previousScreenY:null,removeEventListenersRegistered:false,registerRemoveEventListeners:function () {
        if (!JSEvents.removeEventListenersRegistered) {
        __ATEXIT__.push(function() {
            for(var i = JSEvents.eventHandlers.length-1; i >= 0; --i) {
              JSEvents._removeHandler(i);
            }
           });
          JSEvents.removeEventListenersRegistered = true;
        }
      },findEventTarget:function (target) {
        if (target) {
          if (typeof target == "number") {
            target = Pointer_stringify(target);
          }
          if (target == '#window') return window;
          else if (target == '#document') return document;
          else if (target == '#screen') return window.screen;
          else if (target == '#canvas') return Module['canvas'];
  
          if (typeof target == 'string') return document.getElementById(target);
          else return target;
        } else {
          // The sensible target varies between events, but use window as the default
          // since DOM events mostly can default to that. Specific callback registrations
          // override their own defaults.
          return window;
        }
      },deferredCalls:[],deferCall:function (targetFunction, precedence, argsList) {
        function arraysHaveEqualContent(arrA, arrB) {
          if (arrA.length != arrB.length) return false;
  
          for(var i in arrA) {
            if (arrA[i] != arrB[i]) return false;
          }
          return true;
        }
        // Test if the given call was already queued, and if so, don't add it again.
        for(var i in JSEvents.deferredCalls) {
          var call = JSEvents.deferredCalls[i];
          if (call.targetFunction == targetFunction && arraysHaveEqualContent(call.argsList, argsList)) {
            return;
          }
        }
        JSEvents.deferredCalls.push({
          targetFunction: targetFunction,
          precedence: precedence,
          argsList: argsList
        });
  
        JSEvents.deferredCalls.sort(function(x,y) { return x.precedence < y.precedence; });
      },removeDeferredCalls:function (targetFunction) {
        for(var i = 0; i < JSEvents.deferredCalls.length; ++i) {
          if (JSEvents.deferredCalls[i].targetFunction == targetFunction) {
            JSEvents.deferredCalls.splice(i, 1);
            --i;
          }
        }
      },canPerformEventHandlerRequests:function () {
        return JSEvents.inEventHandler && JSEvents.currentEventHandler.allowsDeferredCalls;
      },runDeferredCalls:function () {
        if (!JSEvents.canPerformEventHandlerRequests()) {
          return;
        }
        for(var i = 0; i < JSEvents.deferredCalls.length; ++i) {
          var call = JSEvents.deferredCalls[i];
          JSEvents.deferredCalls.splice(i, 1);
          --i;
          call.targetFunction.apply(this, call.argsList);
        }
      },inEventHandler:0,currentEventHandler:null,eventHandlers:[],isInternetExplorer:function () { return navigator.userAgent.indexOf('MSIE') !== -1 || navigator.appVersion.indexOf('Trident/') > 0; },removeAllHandlersOnTarget:function (target, eventTypeString) {
        for(var i = 0; i < JSEvents.eventHandlers.length; ++i) {
          if (JSEvents.eventHandlers[i].target == target && 
            (!eventTypeString || eventTypeString == JSEvents.eventHandlers[i].eventTypeString)) {
             JSEvents._removeHandler(i--);
           }
        }
      },_removeHandler:function (i) {
        var h = JSEvents.eventHandlers[i];
        h.target.removeEventListener(h.eventTypeString, h.eventListenerFunc, h.useCapture);
        JSEvents.eventHandlers.splice(i, 1);
      },registerOrRemoveHandler:function (eventHandler) {
        var jsEventHandler = function jsEventHandler(event) {
          // Increment nesting count for the event handler.
          ++JSEvents.inEventHandler;
          JSEvents.currentEventHandler = eventHandler;
          // Process any old deferred calls the user has placed.
          JSEvents.runDeferredCalls();
          // Process the actual event, calls back to user C code handler.
          eventHandler.handlerFunc(event);
          // Process any new deferred calls that were placed right now from this event handler.
          JSEvents.runDeferredCalls();
          // Out of event handler - restore nesting count.
          --JSEvents.inEventHandler;
        }
        
        if (eventHandler.callbackfunc) {
          eventHandler.eventListenerFunc = jsEventHandler;
          eventHandler.target.addEventListener(eventHandler.eventTypeString, jsEventHandler, eventHandler.useCapture);
          JSEvents.eventHandlers.push(eventHandler);
          JSEvents.registerRemoveEventListeners();
        } else {
          for(var i = 0; i < JSEvents.eventHandlers.length; ++i) {
            if (JSEvents.eventHandlers[i].target == eventHandler.target
             && JSEvents.eventHandlers[i].eventTypeString == eventHandler.eventTypeString) {
               JSEvents._removeHandler(i--);
             }
          }
        }
      },registerKeyEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.keyEvent) {
          JSEvents.keyEvent = _malloc( 164 );
        }
        var handlerFunc = function(event) {
          var e = event || window.event;
          writeStringToMemory(e.key ? e.key : "", JSEvents.keyEvent + 0 );
          writeStringToMemory(e.code ? e.code : "", JSEvents.keyEvent + 32 );
          HEAP32[(((JSEvents.keyEvent)+(64))>>2)]=e.location;
          HEAP32[(((JSEvents.keyEvent)+(68))>>2)]=e.ctrlKey;
          HEAP32[(((JSEvents.keyEvent)+(72))>>2)]=e.shiftKey;
          HEAP32[(((JSEvents.keyEvent)+(76))>>2)]=e.altKey;
          HEAP32[(((JSEvents.keyEvent)+(80))>>2)]=e.metaKey;
          HEAP32[(((JSEvents.keyEvent)+(84))>>2)]=e.repeat;
          writeStringToMemory(e.locale ? e.locale : "", JSEvents.keyEvent + 88 );
          writeStringToMemory(e.char ? e.char : "", JSEvents.keyEvent + 120 );
          HEAP32[(((JSEvents.keyEvent)+(152))>>2)]=e.charCode;
          HEAP32[(((JSEvents.keyEvent)+(156))>>2)]=e.keyCode;
          HEAP32[(((JSEvents.keyEvent)+(160))>>2)]=e.which;
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.keyEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: JSEvents.findEventTarget(target),
          allowsDeferredCalls: JSEvents.isInternetExplorer() ? false : true, // MSIE doesn't allow fullscreen and pointerlock requests from key handlers, others do.
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },getBoundingClientRectOrZeros:function (target) {
        return target.getBoundingClientRect ? target.getBoundingClientRect() : { left: 0, top: 0 };
      },fillMouseEventData:function (eventStruct, e, target) {
        HEAPF64[((eventStruct)>>3)]=JSEvents.tick();
        HEAP32[(((eventStruct)+(8))>>2)]=e.screenX;
        HEAP32[(((eventStruct)+(12))>>2)]=e.screenY;
        HEAP32[(((eventStruct)+(16))>>2)]=e.clientX;
        HEAP32[(((eventStruct)+(20))>>2)]=e.clientY;
        HEAP32[(((eventStruct)+(24))>>2)]=e.ctrlKey;
        HEAP32[(((eventStruct)+(28))>>2)]=e.shiftKey;
        HEAP32[(((eventStruct)+(32))>>2)]=e.altKey;
        HEAP32[(((eventStruct)+(36))>>2)]=e.metaKey;
        HEAP16[(((eventStruct)+(40))>>1)]=e.button;
        HEAP16[(((eventStruct)+(42))>>1)]=e.buttons;
        HEAP32[(((eventStruct)+(44))>>2)]=e["movementX"] || e["mozMovementX"] || e["webkitMovementX"] || (e.screenX-JSEvents.previousScreenX);
        HEAP32[(((eventStruct)+(48))>>2)]=e["movementY"] || e["mozMovementY"] || e["webkitMovementY"] || (e.screenY-JSEvents.previousScreenY);
  
        if (Module['canvas']) {
          var rect = Module['canvas'].getBoundingClientRect();
          HEAP32[(((eventStruct)+(60))>>2)]=e.clientX - rect.left;
          HEAP32[(((eventStruct)+(64))>>2)]=e.clientY - rect.top;
        } else { // Canvas is not initialized, return 0.
          HEAP32[(((eventStruct)+(60))>>2)]=0;
          HEAP32[(((eventStruct)+(64))>>2)]=0;
        }
        if (target) {
          var rect = JSEvents.getBoundingClientRectOrZeros(target);
          HEAP32[(((eventStruct)+(52))>>2)]=e.clientX - rect.left;
          HEAP32[(((eventStruct)+(56))>>2)]=e.clientY - rect.top;        
        } else { // No specific target passed, return 0.
          HEAP32[(((eventStruct)+(52))>>2)]=0;
          HEAP32[(((eventStruct)+(56))>>2)]=0;
        }
        JSEvents.previousScreenX = e.screenX;
        JSEvents.previousScreenY = e.screenY;
      },registerMouseEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.mouseEvent) {
          JSEvents.mouseEvent = _malloc( 72 );
        }
        target = JSEvents.findEventTarget(target);
        var handlerFunc = function(event) {
          var e = event || window.event;
          JSEvents.fillMouseEventData(JSEvents.mouseEvent, e, target);
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.mouseEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: target,
          allowsDeferredCalls: eventTypeString != 'mousemove' && eventTypeString != 'mouseenter' && eventTypeString != 'mouseleave', // Mouse move events do not allow fullscreen/pointer lock requests to be handled in them!
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        // In IE, mousedown events don't either allow deferred calls to be run!
        if (JSEvents.isInternetExplorer() && eventTypeString == 'mousedown') eventHandler.allowsDeferredCalls = false;
        JSEvents.registerOrRemoveHandler(eventHandler);
      },registerWheelEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.wheelEvent) {
          JSEvents.wheelEvent = _malloc( 104 );
        }
        target = JSEvents.findEventTarget(target);
        // The DOM Level 3 events spec event 'wheel'
        var wheelHandlerFunc = function(event) {
          var e = event || window.event;
          JSEvents.fillMouseEventData(JSEvents.wheelEvent, e, target);
          HEAPF64[(((JSEvents.wheelEvent)+(72))>>3)]=e["deltaX"];
          HEAPF64[(((JSEvents.wheelEvent)+(80))>>3)]=e["deltaY"];
          HEAPF64[(((JSEvents.wheelEvent)+(88))>>3)]=e["deltaZ"];
          HEAP32[(((JSEvents.wheelEvent)+(96))>>2)]=e["deltaMode"];
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.wheelEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
        // The 'mousewheel' event as implemented in Safari 6.0.5
        var mouseWheelHandlerFunc = function(event) {
          var e = event || window.event;
          JSEvents.fillMouseEventData(JSEvents.wheelEvent, e, target);
          HEAPF64[(((JSEvents.wheelEvent)+(72))>>3)]=e["wheelDeltaX"];
          HEAPF64[(((JSEvents.wheelEvent)+(80))>>3)]=-e["wheelDeltaY"] /* Invert to unify direction with the DOM Level 3 wheel event. */;
          HEAPF64[(((JSEvents.wheelEvent)+(88))>>3)]=0 /* Not available */;
          HEAP32[(((JSEvents.wheelEvent)+(96))>>2)]=0 /* DOM_DELTA_PIXEL */;
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.wheelEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: target,
          allowsDeferredCalls: true,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: (eventTypeString == 'wheel') ? wheelHandlerFunc : mouseWheelHandlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },pageScrollPos:function () {
        if (window.pageXOffset > 0 || window.pageYOffset > 0) {
          return [window.pageXOffset, window.pageYOffset];
        }
        if (typeof document.documentElement.scrollLeft !== 'undefined' || typeof document.documentElement.scrollTop !== 'undefined') {
          return [document.documentElement.scrollLeft, document.documentElement.scrollTop];
        }
        return [document.body.scrollLeft|0, document.body.scrollTop|0];
      },registerUiEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.uiEvent) {
          JSEvents.uiEvent = _malloc( 36 );
        }
  
        if (eventTypeString == "scroll" && !target) {
          target = document; // By default read scroll events on document rather than window.
        } else {
          target = JSEvents.findEventTarget(target);
        }
  
        var handlerFunc = function(event) {
          var e = event || window.event;
          if (e.target != target) {
            // Never take ui events such as scroll via a 'bubbled' route, but always from the direct element that
            // was targeted. Otherwise e.g. if app logs a message in response to a page scroll, the Emscripten log
            // message box could cause to scroll, generating a new (bubbled) scroll message, causing a new log print,
            // causing a new scroll, etc..
            return;
          }
          var scrollPos = JSEvents.pageScrollPos();
          HEAP32[((JSEvents.uiEvent)>>2)]=e.detail;
          HEAP32[(((JSEvents.uiEvent)+(4))>>2)]=document.body.clientWidth;
          HEAP32[(((JSEvents.uiEvent)+(8))>>2)]=document.body.clientHeight;
          HEAP32[(((JSEvents.uiEvent)+(12))>>2)]=window.innerWidth;
          HEAP32[(((JSEvents.uiEvent)+(16))>>2)]=window.innerHeight;
          HEAP32[(((JSEvents.uiEvent)+(20))>>2)]=window.outerWidth;
          HEAP32[(((JSEvents.uiEvent)+(24))>>2)]=window.outerHeight;
          HEAP32[(((JSEvents.uiEvent)+(28))>>2)]=scrollPos[0];
          HEAP32[(((JSEvents.uiEvent)+(32))>>2)]=scrollPos[1];
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.uiEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: target,
          allowsDeferredCalls: false, // Neither scroll or resize events allow running requests inside them.
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },getNodeNameForTarget:function (target) {
        if (!target) return '';
        if (target == window) return '#window';
        if (target == window.screen) return '#screen';
        return (target && target.nodeName) ? target.nodeName : '';
      },registerFocusEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.focusEvent) {
          JSEvents.focusEvent = _malloc( 256 );
        }
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          var nodeName = JSEvents.getNodeNameForTarget(e.target);
          var id = e.target.id ? e.target.id : '';
          writeStringToMemory(nodeName, JSEvents.focusEvent + 0 );
          writeStringToMemory(id, JSEvents.focusEvent + 128 );
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.focusEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: JSEvents.findEventTarget(target),
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },tick:function () {
        if (window['performance'] && window['performance']['now']) return window['performance']['now']();
        else return Date.now();
      },registerDeviceOrientationEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.deviceOrientationEvent) {
          JSEvents.deviceOrientationEvent = _malloc( 40 );
        }
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          HEAPF64[((JSEvents.deviceOrientationEvent)>>3)]=JSEvents.tick();
          HEAPF64[(((JSEvents.deviceOrientationEvent)+(8))>>3)]=e.alpha;
          HEAPF64[(((JSEvents.deviceOrientationEvent)+(16))>>3)]=e.beta;
          HEAPF64[(((JSEvents.deviceOrientationEvent)+(24))>>3)]=e.gamma;
          HEAP32[(((JSEvents.deviceOrientationEvent)+(32))>>2)]=e.absolute;
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.deviceOrientationEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: JSEvents.findEventTarget(target),
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },registerDeviceMotionEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.deviceMotionEvent) {
          JSEvents.deviceMotionEvent = _malloc( 80 );
        }
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          HEAPF64[((JSEvents.deviceOrientationEvent)>>3)]=JSEvents.tick();
          HEAPF64[(((JSEvents.deviceMotionEvent)+(8))>>3)]=e.acceleration.x;
          HEAPF64[(((JSEvents.deviceMotionEvent)+(16))>>3)]=e.acceleration.y;
          HEAPF64[(((JSEvents.deviceMotionEvent)+(24))>>3)]=e.acceleration.z;
          HEAPF64[(((JSEvents.deviceMotionEvent)+(32))>>3)]=e.accelerationIncludingGravity.x;
          HEAPF64[(((JSEvents.deviceMotionEvent)+(40))>>3)]=e.accelerationIncludingGravity.y;
          HEAPF64[(((JSEvents.deviceMotionEvent)+(48))>>3)]=e.accelerationIncludingGravity.z;
          HEAPF64[(((JSEvents.deviceMotionEvent)+(56))>>3)]=e.rotationRate.alpha;
          HEAPF64[(((JSEvents.deviceMotionEvent)+(64))>>3)]=e.rotationRate.beta;
          HEAPF64[(((JSEvents.deviceMotionEvent)+(72))>>3)]=e.rotationRate.gamma;
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.deviceMotionEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: JSEvents.findEventTarget(target),
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },screenOrientation:function () {
        if (!window.screen) return undefined;
        return window.screen.orientation || window.screen.mozOrientation || window.screen.webkitOrientation || window.screen.msOrientation;
      },fillOrientationChangeEventData:function (eventStruct, e) {
        var orientations  = ["portrait-primary", "portrait-secondary", "landscape-primary", "landscape-secondary"];
        var orientations2 = ["portrait",         "portrait",           "landscape",         "landscape"];
  
        var orientationString = JSEvents.screenOrientation();
        var orientation = orientations.indexOf(orientationString);
        if (orientation == -1) {
          orientation = orientations2.indexOf(orientationString);
        }
  
        HEAP32[((eventStruct)>>2)]=1 << orientation;
        HEAP32[(((eventStruct)+(4))>>2)]=window.orientation;
      },registerOrientationChangeEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.orientationChangeEvent) {
          JSEvents.orientationChangeEvent = _malloc( 8 );
        }
  
        if (!target) {
          target = window.screen; // Orientation events need to be captured from 'window.screen' instead of 'window'
        } else {
          target = JSEvents.findEventTarget(target);
        }
  
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          JSEvents.fillOrientationChangeEventData(JSEvents.orientationChangeEvent, e);
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.orientationChangeEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        if (eventTypeString == "orientationchange" && window.screen.mozOrientation !== undefined) {
          eventTypeString = "mozorientationchange";
        }
  
        var eventHandler = {
          target: target,
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },fullscreenEnabled:function () {
        return document.fullscreenEnabled || document.mozFullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled;
      },fillFullscreenChangeEventData:function (eventStruct, e) {
        var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;
        var isFullscreen = !!fullscreenElement;
        HEAP32[((eventStruct)>>2)]=isFullscreen;
        HEAP32[(((eventStruct)+(4))>>2)]=JSEvents.fullscreenEnabled();
        // If transitioning to fullscreen, report info about the element that is now fullscreen.
        // If transitioning to windowed mode, report info about the element that just was fullscreen.
        var reportedElement = isFullscreen ? fullscreenElement : JSEvents.previousFullscreenElement;
        var nodeName = JSEvents.getNodeNameForTarget(reportedElement);
        var id = (reportedElement && reportedElement.id) ? reportedElement.id : '';
        writeStringToMemory(nodeName, eventStruct + 8 );
        writeStringToMemory(id, eventStruct + 136 );
        HEAP32[(((eventStruct)+(264))>>2)]=reportedElement ? reportedElement.clientWidth : 0;
        HEAP32[(((eventStruct)+(268))>>2)]=reportedElement ? reportedElement.clientHeight : 0;
        HEAP32[(((eventStruct)+(272))>>2)]=screen.width;
        HEAP32[(((eventStruct)+(276))>>2)]=screen.height;
        if (isFullscreen) {
          JSEvents.previousFullscreenElement = fullscreenElement;
        }
      },registerFullscreenChangeEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.fullscreenChangeEvent) {
          JSEvents.fullscreenChangeEvent = _malloc( 280 );
        }
  
        if (!target) {
          target = document; // Fullscreen change events need to be captured from 'document' by default instead of 'window'
        } else {
          target = JSEvents.findEventTarget(target);
        }
  
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          JSEvents.fillFullscreenChangeEventData(JSEvents.fullscreenChangeEvent, e);
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.fullscreenChangeEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: target,
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },resizeCanvasForFullscreen:function (target, strategy) {
        var restoreOldStyle = __registerRestoreOldStyle(target);
        var cssWidth = strategy.softFullscreen ? window.innerWidth : screen.width;
        var cssHeight = strategy.softFullscreen ? window.innerHeight : screen.height;
        var rect = target.getBoundingClientRect();
        var windowedCssWidth = rect.right - rect.left;
        var windowedCssHeight = rect.bottom - rect.top;
        var windowedRttWidth = target.width;
        var windowedRttHeight = target.height;
  
        if (strategy.scaleMode == 3) {
          __setLetterbox(target, (cssHeight - windowedCssHeight) / 2, (cssWidth - windowedCssWidth) / 2);
          cssWidth = windowedCssWidth;
          cssHeight = windowedCssHeight;
        } else if (strategy.scaleMode == 2) {
          if (cssWidth*windowedRttHeight < windowedRttWidth*cssHeight) {
            var desiredCssHeight = windowedRttHeight * cssWidth / windowedRttWidth;
            __setLetterbox(target, (cssHeight - desiredCssHeight) / 2, 0);
            cssHeight = desiredCssHeight;
          } else {
            var desiredCssWidth = windowedRttWidth * cssHeight / windowedRttHeight;
            __setLetterbox(target, 0, (cssWidth - desiredCssWidth) / 2);
            cssWidth = desiredCssWidth;
          }
        }
  
        // If we are adding padding, must choose a background color or otherwise Chrome will give the
        // padding a default white color. Do it only if user has not customized their own background color.
        if (!target.style.backgroundColor) target.style.backgroundColor = 'black';
        // IE11 does the same, but requires the color to be set in the document body.
        if (!document.body.style.backgroundColor) document.body.style.backgroundColor = 'black'; // IE11
        // Firefox always shows black letterboxes independent of style color.
  
        target.style.width = cssWidth + 'px';
        target.style.height = cssHeight + 'px';
  
        if (strategy.filteringMode == 1) {
          target.style.imageRendering = 'optimizeSpeed';
          target.style.imageRendering = '-moz-crisp-edges';
          target.style.imageRendering = '-o-crisp-edges';
          target.style.imageRendering = '-webkit-optimize-contrast';
          target.style.imageRendering = 'optimize-contrast';
          target.style.imageRendering = 'crisp-edges';
          target.style.imageRendering = 'pixelated';
        }
  
        var dpiScale = (strategy.canvasResolutionScaleMode == 2) ? window.devicePixelRatio : 1;
        if (strategy.canvasResolutionScaleMode != 0) {
          target.width = cssWidth * dpiScale;
          target.height = cssHeight * dpiScale;
          if (target.GLctxObject) target.GLctxObject.GLctx.viewport(0, 0, target.width, target.height);
        }
        return restoreOldStyle;
      },requestFullscreen:function (target, strategy) {
        // EMSCRIPTEN_FULLSCREEN_SCALE_DEFAULT + EMSCRIPTEN_FULLSCREEN_CANVAS_SCALE_NONE is a mode where no extra logic is performed to the DOM elements.
        if (strategy.scaleMode != 0 || strategy.canvasResolutionScaleMode != 0) {
          JSEvents.resizeCanvasForFullscreen(target, strategy);
        }
  
        if (target.requestFullscreen) {
          target.requestFullscreen();
        } else if (target.msRequestFullscreen) {
          target.msRequestFullscreen();
        } else if (target.mozRequestFullScreen) {
          target.mozRequestFullScreen();
        } else if (target.mozRequestFullscreen) {
          target.mozRequestFullscreen();
        } else if (target.webkitRequestFullscreen) {
          target.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
        } else {
          if (typeof JSEvents.fullscreenEnabled() === 'undefined') {
            return -1;
          } else {
            return -3;
          }
        }
  
        if (strategy.canvasResizedCallback) {
          Runtime.dynCall('iiii', strategy.canvasResizedCallback, [37, 0, strategy.canvasResizedCallbackUserData]);
        }
  
        return 0;
      },fillPointerlockChangeEventData:function (eventStruct, e) {
        var pointerLockElement = document.pointerLockElement || document.mozPointerLockElement || document.webkitPointerLockElement || document.msPointerLockElement;
        var isPointerlocked = !!pointerLockElement;
        HEAP32[((eventStruct)>>2)]=isPointerlocked;
        var nodeName = JSEvents.getNodeNameForTarget(pointerLockElement);
        var id = (pointerLockElement && pointerLockElement.id) ? pointerLockElement.id : '';
        writeStringToMemory(nodeName, eventStruct + 4 );
        writeStringToMemory(id, eventStruct + 132);
      },registerPointerlockChangeEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.pointerlockChangeEvent) {
          JSEvents.pointerlockChangeEvent = _malloc( 260 );
        }
  
        if (!target) {
          target = document; // Pointer lock change events need to be captured from 'document' by default instead of 'window'
        } else {
          target = JSEvents.findEventTarget(target);
        }
  
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          JSEvents.fillPointerlockChangeEventData(JSEvents.pointerlockChangeEvent, e);
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.pointerlockChangeEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: target,
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },requestPointerLock:function (target) {
        if (target.requestPointerLock) {
          target.requestPointerLock();
        } else if (target.mozRequestPointerLock) {
          target.mozRequestPointerLock();
        } else if (target.webkitRequestPointerLock) {
          target.webkitRequestPointerLock();
        } else if (target.msRequestPointerLock) {
          target.msRequestPointerLock();
        } else {
          // document.body is known to accept pointer lock, so use that to differentiate if the user passed a bad element,
          // or if the whole browser just doesn't support the feature.
          if (document.body.requestPointerLock || document.body.mozRequestPointerLock || document.body.webkitRequestPointerLock || document.body.msRequestPointerLock) {
            return -3;
          } else {
            return -1;
          }
        }
        return 0;
      },fillVisibilityChangeEventData:function (eventStruct, e) {
        var visibilityStates = [ "hidden", "visible", "prerender", "unloaded" ];
        var visibilityState = visibilityStates.indexOf(document.visibilityState);
  
        HEAP32[((eventStruct)>>2)]=document.hidden;
        HEAP32[(((eventStruct)+(4))>>2)]=visibilityState;
      },registerVisibilityChangeEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.visibilityChangeEvent) {
          JSEvents.visibilityChangeEvent = _malloc( 8 );
        }
  
        if (!target) {
          target = document; // Visibility change events need to be captured from 'document' by default instead of 'window'
        } else {
          target = JSEvents.findEventTarget(target);
        }
  
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          JSEvents.fillVisibilityChangeEventData(JSEvents.visibilityChangeEvent, e);
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.visibilityChangeEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: target,
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },registerTouchEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.touchEvent) {
          JSEvents.touchEvent = _malloc( 1684 );
        }
  
        target = JSEvents.findEventTarget(target);
  
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          var touches = {};
          for(var i = 0; i < e.touches.length; ++i) {
            var touch = e.touches[i];
            touches[touch.identifier] = touch;
          }
          for(var i = 0; i < e.changedTouches.length; ++i) {
            var touch = e.changedTouches[i];
            touches[touch.identifier] = touch;
            touch.changed = true;
          }
          for(var i = 0; i < e.targetTouches.length; ++i) {
            var touch = e.targetTouches[i];
            touches[touch.identifier].onTarget = true;
          }
          
          var ptr = JSEvents.touchEvent;
          HEAP32[(((ptr)+(4))>>2)]=e.ctrlKey;
          HEAP32[(((ptr)+(8))>>2)]=e.shiftKey;
          HEAP32[(((ptr)+(12))>>2)]=e.altKey;
          HEAP32[(((ptr)+(16))>>2)]=e.metaKey;
          ptr += 20; // Advance to the start of the touch array.
          var canvasRect = Module['canvas'] ? Module['canvas'].getBoundingClientRect() : undefined;
          var targetRect = JSEvents.getBoundingClientRectOrZeros(target);
          var numTouches = 0;
          for(var i in touches) {
            var t = touches[i];
            HEAP32[((ptr)>>2)]=t.identifier;
            HEAP32[(((ptr)+(4))>>2)]=t.screenX;
            HEAP32[(((ptr)+(8))>>2)]=t.screenY;
            HEAP32[(((ptr)+(12))>>2)]=t.clientX;
            HEAP32[(((ptr)+(16))>>2)]=t.clientY;
            HEAP32[(((ptr)+(20))>>2)]=t.pageX;
            HEAP32[(((ptr)+(24))>>2)]=t.pageY;
            HEAP32[(((ptr)+(28))>>2)]=t.changed;
            HEAP32[(((ptr)+(32))>>2)]=t.onTarget;
            if (canvasRect) {
              HEAP32[(((ptr)+(44))>>2)]=t.clientX - canvasRect.left;
              HEAP32[(((ptr)+(48))>>2)]=t.clientY - canvasRect.top;
            } else {
              HEAP32[(((ptr)+(44))>>2)]=0;
              HEAP32[(((ptr)+(48))>>2)]=0;            
            }
            HEAP32[(((ptr)+(36))>>2)]=t.clientX - targetRect.left;
            HEAP32[(((ptr)+(40))>>2)]=t.clientY - targetRect.top;
            
            ptr += 52;
  
            if (++numTouches >= 32) {
              break;
            }
          }
          HEAP32[((JSEvents.touchEvent)>>2)]=numTouches;
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.touchEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: target,
          allowsDeferredCalls: false, // XXX Currently disabled, see bug https://bugzilla.mozilla.org/show_bug.cgi?id=966493
          // Once the above bug is resolved, enable the following condition if possible:
          // allowsDeferredCalls: eventTypeString == 'touchstart',
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },fillGamepadEventData:function (eventStruct, e) {
        HEAPF64[((eventStruct)>>3)]=e.timestamp;
        for(var i = 0; i < e.axes.length; ++i) {
          HEAPF64[(((eventStruct+i*8)+(16))>>3)]=e.axes[i];
        }
        for(var i = 0; i < e.buttons.length; ++i) {
          if (typeof(e.buttons[i]) === 'object') {
            HEAPF64[(((eventStruct+i*8)+(528))>>3)]=e.buttons[i].value;
          } else {
            HEAPF64[(((eventStruct+i*8)+(528))>>3)]=e.buttons[i];
          }
        }
        for(var i = 0; i < e.buttons.length; ++i) {
          if (typeof(e.buttons[i]) === 'object') {
            HEAP32[(((eventStruct+i*4)+(1040))>>2)]=e.buttons[i].pressed;
          } else {
            HEAP32[(((eventStruct+i*4)+(1040))>>2)]=e.buttons[i] == 1.0;
          }
        }
        HEAP32[(((eventStruct)+(1296))>>2)]=e.connected;
        HEAP32[(((eventStruct)+(1300))>>2)]=e.index;
        HEAP32[(((eventStruct)+(8))>>2)]=e.axes.length;
        HEAP32[(((eventStruct)+(12))>>2)]=e.buttons.length;
        writeStringToMemory(e.id, eventStruct + 1304 );
        writeStringToMemory(e.mapping, eventStruct + 1368 );
      },registerGamepadEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.gamepadEvent) {
          JSEvents.gamepadEvent = _malloc( 1432 );
        }
  
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          JSEvents.fillGamepadEventData(JSEvents.gamepadEvent, e.gamepad);
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.gamepadEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: JSEvents.findEventTarget(target),
          allowsDeferredCalls: true,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },registerBeforeUnloadEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          var confirmationMessage = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, 0, userData]);
          
          if (confirmationMessage) {
            confirmationMessage = Pointer_stringify(confirmationMessage);
          }
          if (confirmationMessage) {
            e.preventDefault();
            e.returnValue = confirmationMessage;
            return confirmationMessage;
          }
        };
  
        var eventHandler = {
          target: JSEvents.findEventTarget(target),
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },battery:function () { return navigator.battery || navigator.mozBattery || navigator.webkitBattery; },fillBatteryEventData:function (eventStruct, e) {
        HEAPF64[((eventStruct)>>3)]=e.chargingTime;
        HEAPF64[(((eventStruct)+(8))>>3)]=e.dischargingTime;
        HEAPF64[(((eventStruct)+(16))>>3)]=e.level;
        HEAP32[(((eventStruct)+(24))>>2)]=e.charging;
      },registerBatteryEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!JSEvents.batteryEvent) {
          JSEvents.batteryEvent = _malloc( 32 );
        }
  
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          JSEvents.fillBatteryEventData(JSEvents.batteryEvent, JSEvents.battery());
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, JSEvents.batteryEvent, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: JSEvents.findEventTarget(target),
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      },registerWebGlEventCallback:function (target, userData, useCapture, callbackfunc, eventTypeId, eventTypeString) {
        if (!target) {
          target = Module['canvas'];
        }
        var handlerFunc = function(event) {
          var e = event || window.event;
  
          var shouldCancel = Runtime.dynCall('iiii', callbackfunc, [eventTypeId, 0, userData]);
          if (shouldCancel) {
            e.preventDefault();
          }
        };
  
        var eventHandler = {
          target: JSEvents.findEventTarget(target),
          allowsDeferredCalls: false,
          eventTypeString: eventTypeString,
          callbackfunc: callbackfunc,
          handlerFunc: handlerFunc,
          useCapture: useCapture
        };
        JSEvents.registerOrRemoveHandler(eventHandler);
      }};function _emscripten_set_mouseup_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerMouseEventCallback(target, userData, useCapture, callbackfunc, 6, "mouseup");
      return 0;
    }

  function _emscripten_webgl_destroy_context(contextHandle) {
      GL.deleteContext(contextHandle);
    }

  function _glCompileShader(shader) {
      GLctx.compileShader(GL.shaders[shader]);
    }

  
  
  
  function _emscripten_set_main_loop_timing(mode, value) {
      Browser.mainLoop.timingMode = mode;
      Browser.mainLoop.timingValue = value;
  
      if (!Browser.mainLoop.func) {
        return 1; // Return non-zero on failure, can't set timing mode when there is no main loop.
      }
  
      if (mode == 0 /*EM_TIMING_SETTIMEOUT*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setTimeout() {
          var timeUntilNextTick = Math.max(0, Browser.mainLoop.tickStartTime + value - _emscripten_get_now())|0;
          setTimeout(Browser.mainLoop.runner, timeUntilNextTick); // doing this each time means that on exception, we stop
        };
        Browser.mainLoop.method = 'timeout';
      } else if (mode == 1 /*EM_TIMING_RAF*/) {
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_rAF() {
          Browser.requestAnimationFrame(Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'rAF';
      } else if (mode == 2 /*EM_TIMING_SETIMMEDIATE*/) {
        if (!window['setImmediate']) {
          // Emulate setImmediate. (note: not a complete polyfill, we don't emulate clearImmediate() to keep code size to minimum, since not needed)
          var setImmediates = [];
          var emscriptenMainLoopMessageId = '__emcc';
          function Browser_setImmediate_messageHandler(event) {
            if (event.source === window && event.data === emscriptenMainLoopMessageId) {
              event.stopPropagation();
              setImmediates.shift()();
            }
          }
          window.addEventListener("message", Browser_setImmediate_messageHandler, true);
          window['setImmediate'] = function Browser_emulated_setImmediate(func) {
            setImmediates.push(func);
            window.postMessage(emscriptenMainLoopMessageId, "*");
          }
        }
        Browser.mainLoop.scheduler = function Browser_mainLoop_scheduler_setImmediate() {
          window['setImmediate'](Browser.mainLoop.runner);
        };
        Browser.mainLoop.method = 'immediate';
      }
      return 0;
    }function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop, arg, noSetTiming) {
      Module['noExitRuntime'] = true;
  
      assert(!Browser.mainLoop.func, 'emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.');
  
      Browser.mainLoop.func = func;
      Browser.mainLoop.arg = arg;
  
      var browserIterationFunc;
      if (typeof arg !== 'undefined') {
        var argArray = [arg];
        browserIterationFunc = function() {
          Runtime.dynCall('vi', func, argArray);
        };
      } else {
        browserIterationFunc = function() {
          Runtime.dynCall('v', func);
        };
      }
  
      var thisMainLoopId = Browser.mainLoop.currentlyRunningMainloop;
  
      Browser.mainLoop.runner = function Browser_mainLoop_runner() {
        if (ABORT) return;
        if (Browser.mainLoop.queue.length > 0) {
          var start = Date.now();
          var blocker = Browser.mainLoop.queue.shift();
          blocker.func(blocker.arg);
          if (Browser.mainLoop.remainingBlockers) {
            var remaining = Browser.mainLoop.remainingBlockers;
            var next = remaining%1 == 0 ? remaining-1 : Math.floor(remaining);
            if (blocker.counted) {
              Browser.mainLoop.remainingBlockers = next;
            } else {
              // not counted, but move the progress along a tiny bit
              next = next + 0.5; // do not steal all the next one's progress
              Browser.mainLoop.remainingBlockers = (8*remaining + next)/9;
            }
          }
          console.log('main loop blocker "' + blocker.name + '" took ' + (Date.now() - start) + ' ms'); //, left: ' + Browser.mainLoop.remainingBlockers);
          Browser.mainLoop.updateStatus();
          
          // catches pause/resume main loop from blocker execution
          if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
          
          setTimeout(Browser.mainLoop.runner, 0);
          return;
        }
  
        // catch pauses from non-main loop sources
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Implement very basic swap interval control
        Browser.mainLoop.currentFrameNumber = Browser.mainLoop.currentFrameNumber + 1 | 0;
        if (Browser.mainLoop.timingMode == 1/*EM_TIMING_RAF*/ && Browser.mainLoop.timingValue > 1 && Browser.mainLoop.currentFrameNumber % Browser.mainLoop.timingValue != 0) {
          // Not the scheduled time to render this frame - skip.
          Browser.mainLoop.scheduler();
          return;
        } else if (Browser.mainLoop.timingMode == 0/*EM_TIMING_SETTIMEOUT*/) {
          Browser.mainLoop.tickStartTime = _emscripten_get_now();
        }
  
        // Signal GL rendering layer that processing of a new frame is about to start. This helps it optimize
        // VBO double-buffering and reduce GPU stalls.
  
        if (Browser.mainLoop.method === 'timeout' && Module.ctx) {
          Module.printErr('Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!');
          Browser.mainLoop.method = ''; // just warn once per call to set main loop
        }
  
        Browser.mainLoop.runIter(browserIterationFunc);
  
  
        // catch pauses from the main loop itself
        if (thisMainLoopId < Browser.mainLoop.currentlyRunningMainloop) return;
  
        // Queue new audio data. This is important to be right after the main loop invocation, so that we will immediately be able
        // to queue the newest produced audio samples.
        // TODO: Consider adding pre- and post- rAF callbacks so that GL.newRenderingFrameStarted() and SDL.audio.queueNewAudioData()
        //       do not need to be hardcoded into this function, but can be more generic.
        if (typeof SDL === 'object' && SDL.audio && SDL.audio.queueNewAudioData) SDL.audio.queueNewAudioData();
  
        Browser.mainLoop.scheduler();
      }
  
      if (!noSetTiming) {
        if (fps && fps > 0) _emscripten_set_main_loop_timing(0/*EM_TIMING_SETTIMEOUT*/, 1000.0 / fps);
        else _emscripten_set_main_loop_timing(1/*EM_TIMING_RAF*/, 1); // Do rAF by rendering each frame (no decimating)
  
        Browser.mainLoop.scheduler();
      }
  
      if (simulateInfiniteLoop) {
        throw 'SimulateInfiniteLoop';
      }
    }var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function () {
          Browser.mainLoop.scheduler = null;
          Browser.mainLoop.currentlyRunningMainloop++; // Incrementing this signals the previous main loop that it's now become old, and it must return.
        },resume:function () {
          Browser.mainLoop.currentlyRunningMainloop++;
          var timingMode = Browser.mainLoop.timingMode;
          var timingValue = Browser.mainLoop.timingValue;
          var func = Browser.mainLoop.func;
          Browser.mainLoop.func = null;
          _emscripten_set_main_loop(func, 0, false, Browser.mainLoop.arg, true /* do not set timing and call scheduler, we will do it on the next lines */);
          _emscripten_set_main_loop_timing(timingMode, timingValue);
          Browser.mainLoop.scheduler();
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        },runIter:function (func) {
          if (ABORT) return;
          if (Module['preMainLoop']) {
            var preRet = Module['preMainLoop']();
            if (preRet === false) {
              return; // |return false| skips a frame
            }
          }
          try {
            func();
          } catch (e) {
            if (e instanceof ExitStatus) {
              return;
            } else {
              if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
              throw e;
            }
          }
          if (Module['postMainLoop']) Module['postMainLoop']();
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
  
        if (Browser.initted) return;
        Browser.initted = true;
  
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : undefined;
        if (!Module.noImageDecoding && typeof Browser.URLObject === 'undefined') {
          console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.");
          Module.noImageDecoding = true;
        }
  
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
  
        var imagePlugin = {};
        imagePlugin['canHandle'] = function imagePlugin_canHandle(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function imagePlugin_handle(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function img_onload() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function img_onerror(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
  
        var audioPlugin = {};
        audioPlugin['canHandle'] = function audioPlugin_canHandle(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function audioPlugin_handle(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function audio_onerror(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
  
        // Canvas event setup
  
        var canvas = Module['canvas'];
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas ||
                                document['msPointerLockElement'] === canvas;
        }
        if (canvas) {
          // forced aspect ratio can be enabled by defining 'forcedAspectRatio' on Module
          // Module['forcedAspectRatio'] = 4 / 3;
          
          canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                      canvas['mozRequestPointerLock'] ||
                                      canvas['webkitRequestPointerLock'] ||
                                      canvas['msRequestPointerLock'] ||
                                      function(){};
          canvas.exitPointerLock = document['exitPointerLock'] ||
                                   document['mozExitPointerLock'] ||
                                   document['webkitExitPointerLock'] ||
                                   document['msExitPointerLock'] ||
                                   function(){}; // no-op if function does not exist
          canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
  
  
          document.addEventListener('pointerlockchange', pointerLockChange, false);
          document.addEventListener('mozpointerlockchange', pointerLockChange, false);
          document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
          document.addEventListener('mspointerlockchange', pointerLockChange, false);
  
          if (Module['elementPointerLock']) {
            canvas.addEventListener("click", function(ev) {
              if (!Browser.pointerLock && canvas.requestPointerLock) {
                canvas.requestPointerLock();
                ev.preventDefault();
              }
            }, false);
          }
        }
      },createContext:function (canvas, useWebGL, setInModule, webGLContextAttributes) {
        if (useWebGL && Module.ctx && canvas == Module.canvas) return Module.ctx; // no need to recreate GL context if it's already been created for this canvas.
  
        var ctx;
        var contextHandle;
        if (useWebGL) {
          // For GLES2/desktop GL compatibility, adjust a few defaults to be different to WebGL defaults, so that they align better with the desktop defaults.
          var contextAttributes = {
            antialias: false,
            alpha: false
          };
  
          if (webGLContextAttributes) {
            for (var attribute in webGLContextAttributes) {
              contextAttributes[attribute] = webGLContextAttributes[attribute];
            }
          }
  
          contextHandle = GL.createContext(canvas, contextAttributes);
          if (contextHandle) {
            ctx = GL.getContext(contextHandle).GLctx;
          }
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
        } else {
          ctx = canvas.getContext('2d');
        }
  
        if (!ctx) return null;
  
        if (setInModule) {
          if (!useWebGL) assert(typeof GLctx === 'undefined', 'cannot set in module if GLctx is used, but we are a non-GL context that would replace it');
  
          Module.ctx = ctx;
          if (useWebGL) GL.makeContextCurrent(contextHandle);
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas, vrDevice) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        Browser.vrDevice = vrDevice;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        if (typeof Browser.vrDevice === 'undefined') Browser.vrDevice = null;
  
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          var canvasContainer = canvas.parentNode;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement'] ||
               document['msFullScreenElement'] || document['msFullscreenElement'] ||
               document['webkitCurrentFullScreenElement']) === canvasContainer) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'] ||
                                      document['msExitFullscreen'] ||
                                      document['exitFullscreen'] ||
                                      function() {};
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else {
            
            // remove the full screen specific parent of the canvas again to restore the HTML structure from before going full screen
            canvasContainer.parentNode.insertBefore(canvas, canvasContainer);
            canvasContainer.parentNode.removeChild(canvasContainer);
            
            if (Browser.resizeCanvas) Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
          Browser.updateCanvasDimensions(canvas);
        }
  
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
          document.addEventListener('MSFullscreenChange', fullScreenChange, false);
        }
  
        // create a new parent to ensure the canvas has no siblings. this allows browsers to optimize full screen performance when its parent is the full screen root
        var canvasContainer = document.createElement("div");
        canvas.parentNode.insertBefore(canvasContainer, canvas);
        canvasContainer.appendChild(canvas);
  
        // use parent of canvas as full screen root to allow aspect ratio correction (Firefox stretches the root to screen size)
        canvasContainer.requestFullScreen = canvasContainer['requestFullScreen'] ||
                                            canvasContainer['mozRequestFullScreen'] ||
                                            canvasContainer['msRequestFullscreen'] ||
                                           (canvasContainer['webkitRequestFullScreen'] ? function() { canvasContainer['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null) ||
                                           (canvasContainer['webkitRequestFullscreen'] ? function() { canvasContainer['webkitRequestFullscreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
  
        if (vrDevice) {
          canvasContainer.requestFullScreen({ vrDisplay: vrDevice });
        } else {
          canvasContainer.requestFullScreen();
        }
      },nextRAF:0,fakeRequestAnimationFrame:function (func) {
        // try to keep 60fps between calls to here
        var now = Date.now();
        if (Browser.nextRAF === 0) {
          Browser.nextRAF = now + 1000/60;
        } else {
          while (now + 2 >= Browser.nextRAF) { // fudge a little, to avoid timer jitter causing us to do lots of delay:0
            Browser.nextRAF += 1000/60;
          }
        }
        var delay = Math.max(Browser.nextRAF - now, 0);
        setTimeout(func, delay);
      },requestAnimationFrame:function requestAnimationFrame(func) {
        if (typeof window === 'undefined') { // Provide fallback to setTimeout if window is undefined (e.g. in Node.js)
          Browser.fakeRequestAnimationFrame(func);
        } else {
          if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                           window['mozRequestAnimationFrame'] ||
                                           window['webkitRequestAnimationFrame'] ||
                                           window['msRequestAnimationFrame'] ||
                                           window['oRequestAnimationFrame'] ||
                                           Browser.fakeRequestAnimationFrame;
          }
          window.requestAnimationFrame(func);
        }
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },allowAsyncCallbacks:true,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function () {
        Browser.allowAsyncCallbacks = false;
      },resumeAsyncCallbacks:function () { // marks future callbacks as ok to execute, and synchronously runs any remaining ones right now
        Browser.allowAsyncCallbacks = true;
        if (Browser.queuedAsyncCallbacks.length > 0) {
          var callbacks = Browser.queuedAsyncCallbacks;
          Browser.queuedAsyncCallbacks = [];
          callbacks.forEach(function(func) {
            func();
          });
        }
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        });
      },safeSetTimeout:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setTimeout(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } else {
            Browser.queuedAsyncCallbacks.push(func);
          }
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        Module['noExitRuntime'] = true;
        return setInterval(function() {
          if (ABORT) return;
          if (Browser.allowAsyncCallbacks) {
            func();
          } // drop it on the floor otherwise, next interval will kick in
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },getMouseWheelDelta:function (event) {
        var delta = 0;
        switch (event.type) {
          case 'DOMMouseScroll': 
            delta = event.detail;
            break;
          case 'mousewheel': 
            delta = event.wheelDelta;
            break;
          case 'wheel': 
            delta = event['deltaY'];
            break;
          default:
            throw 'unrecognized mouse wheel event: ' + event.type;
        }
        return delta;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
  
          // Neither .scrollX or .pageXOffset are defined in a spec, but
          // we prefer .scrollX because it is currently in a spec draft.
          // (see: http://www.w3.org/TR/2013/WD-cssom-view-20131217/)
          var scrollX = ((typeof window.scrollX !== 'undefined') ? window.scrollX : window.pageXOffset);
          var scrollY = ((typeof window.scrollY !== 'undefined') ? window.scrollY : window.pageYOffset);
  
          if (event.type === 'touchstart' || event.type === 'touchend' || event.type === 'touchmove') {
            var touch = event.touch;
            if (touch === undefined) {
              return; // the "touch" property is only defined in SDL
  
            }
            var adjustedX = touch.pageX - (scrollX + rect.left);
            var adjustedY = touch.pageY - (scrollY + rect.top);
  
            adjustedX = adjustedX * (cw / rect.width);
            adjustedY = adjustedY * (ch / rect.height);
  
            var coords = { x: adjustedX, y: adjustedY };
            
            if (event.type === 'touchstart') {
              Browser.lastTouches[touch.identifier] = coords;
              Browser.touches[touch.identifier] = coords;
            } else if (event.type === 'touchend' || event.type === 'touchmove') {
              var last = Browser.touches[touch.identifier];
              if (!last) last = coords;
              Browser.lastTouches[touch.identifier] = last;
              Browser.touches[touch.identifier] = coords;
            } 
            return;
          }
  
          var x = event.pageX - (scrollX + rect.left);
          var y = event.pageY - (scrollY + rect.top);
  
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
  
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Module['readAsync'](url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        Browser.updateCanvasDimensions(canvas, width, height);
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },updateCanvasDimensions:function (canvas, wNative, hNative) {
        if (wNative && hNative) {
          canvas.widthNative = wNative;
          canvas.heightNative = hNative;
        } else {
          wNative = canvas.widthNative;
          hNative = canvas.heightNative;
        }
        var w = wNative;
        var h = hNative;
        if (Module['forcedAspectRatio'] && Module['forcedAspectRatio'] > 0) {
          if (w/h < Module['forcedAspectRatio']) {
            w = Math.round(h * Module['forcedAspectRatio']);
          } else {
            h = Math.round(w / Module['forcedAspectRatio']);
          }
        }
        if (((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
             document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
             document['fullScreenElement'] || document['fullscreenElement'] ||
             document['msFullScreenElement'] || document['msFullscreenElement'] ||
             document['webkitCurrentFullScreenElement']) === canvas.parentNode) && (typeof screen != 'undefined')) {
           var factor = Math.min(screen.width / w, screen.height / h);
           w = Math.round(w * factor);
           h = Math.round(h * factor);
        }
        if (Browser.resizeCanvas) {
          if (canvas.width  != w) canvas.width  = w;
          if (canvas.height != h) canvas.height = h;
          if (typeof canvas.style != 'undefined') {
            canvas.style.removeProperty( "width");
            canvas.style.removeProperty("height");
          }
        } else {
          if (canvas.width  != wNative) canvas.width  = wNative;
          if (canvas.height != hNative) canvas.height = hNative;
          if (typeof canvas.style != 'undefined') {
            if (w != wNative || h != hNative) {
              canvas.style.setProperty( "width", w + "px", "important");
              canvas.style.setProperty("height", h + "px", "important");
            } else {
              canvas.style.removeProperty( "width");
              canvas.style.removeProperty("height");
            }
          }
        }
      },wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function () {
        var handle = Browser.nextWgetRequestHandle;
        Browser.nextWgetRequestHandle++;
        return handle;
      }};function _emscripten_cancel_main_loop() {
      Browser.mainLoop.pause();
      Browser.mainLoop.func = null;
    }

  function _glDeleteTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((textures)+(i*4))>>2)];
        var texture = GL.textures[id];
        if (!texture) continue; // GL spec: "glDeleteTextures silently ignores 0s and names that do not correspond to existing textures".
        GLctx.deleteTexture(texture);
        texture.name = 0;
        GL.textures[id] = null;
      }
    }

  function _glStencilOpSeparate(x0, x1, x2, x3) { GLctx.stencilOpSeparate(x0, x1, x2, x3) }

  function _glStencilFuncSeparate(x0, x1, x2, x3) { GLctx.stencilFuncSeparate(x0, x1, x2, x3) }

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _glClearDepthf(x0) { GLctx.clearDepth(x0) }

  function _glClearStencil(x0) { GLctx.clearStencil(x0) }

  function _glGenFramebuffers(n, ids) {
      for (var i = 0; i < n; ++i) {
        var framebuffer = GLctx.createFramebuffer();
        if (!framebuffer) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
          while(i < n) HEAP32[(((ids)+(i++*4))>>2)]=0;
          return;
        }
        var id = GL.getNewId(GL.framebuffers);
        framebuffer.name = id;
        GL.framebuffers[id] = framebuffer;
        HEAP32[(((ids)+(i*4))>>2)]=id;
      }
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  function _emscripten_set_devicemotion_callback(userData, useCapture, callbackfunc) {
      JSEvents.registerDeviceMotionEventCallback(window, userData, useCapture, callbackfunc, 17, "devicemotion");
      return 0;
    }

   
  Module["_memmove"] = _memmove;

  function _glGenTextures(n, textures) {
      for (var i = 0; i < n; i++) {
        var texture = GLctx.createTexture();
        if (!texture) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */); // GLES + EGL specs don't specify what should happen here, so best to issue an error and create IDs with 0.
          while(i < n) HEAP32[(((textures)+(i++*4))>>2)]=0;
          return;
        }
        var id = GL.getNewId(GL.textures);
        texture.name = id;
        GL.textures[id] = texture;
        HEAP32[(((textures)+(i*4))>>2)]=id;
      }
    }

  
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;
  
  function _free() {
  }
  Module["_free"] = _free;
  
  
  
  
  
  
  function _SDL_CloseAudio() {
      if (SDL.audio) {
        _SDL_PauseAudio(1);
        _free(SDL.audio.buffer);
        SDL.audio = null;
        SDL.allocateChannels(0);
      }
    }
  
  
  
  
  
  
  
  
  
  
  
  
  
  var _environ=STATICTOP; STATICTOP += 16;;var ___environ=_environ;function ___buildEnvironment(env) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = allocate(TOTAL_ENV_SIZE, 'i8', ALLOC_STATIC);
        envPtr = allocate(MAX_ENV_VALUES * 4,
                          'i8*', ALLOC_STATIC);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((_environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((_environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in env) {
        if (typeof env[key] === 'string') {
          var line = key + '=' + env[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }var ENV={};function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = Pointer_stringify(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocate(intArrayFromString(ENV[name]), 'i8', ALLOC_NORMAL);
      return _getenv.ret;
    }
  
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    }function _putenv(string) {
      // int putenv(char *string);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/putenv.html
      // WARNING: According to the standard (and the glibc implementation), the
      //          string is taken by reference so future changes are reflected.
      //          We copy it instead, possibly breaking some uses.
      if (string === 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      string = Pointer_stringify(string);
      var splitPoint = string.indexOf('=')
      if (string === '' || string.indexOf('=') === -1) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      }
      var name = string.slice(0, splitPoint);
      var value = string.slice(splitPoint + 1);
      if (!(name in ENV) || ENV[name] !== value) {
        ENV[name] = value;
        ___buildEnvironment(ENV);
      }
      return 0;
    }
  
  function _SDL_RWFromConstMem(mem, size) {
      var id = SDL.rwops.length; // TODO: recycle ids when they are null
      SDL.rwops.push({ bytes: mem, count: size });
      return id;
    }function _TTF_FontHeight(font) {
      var fontData = SDL.fonts[font];
      return fontData.size;
    }function _TTF_SizeText(font, text, w, h) {
      var fontData = SDL.fonts[font];
      if (w) {
        HEAP32[((w)>>2)]=SDL.estimateTextWidth(fontData, Pointer_stringify(text));
      }
      if (h) {
        HEAP32[((h)>>2)]=fontData.size;
      }
      return 0;
    }function _TTF_RenderText_Solid(font, text, color) {
      // XXX the font and color are ignored
      text = Pointer_stringify(text) || ' '; // if given an empty string, still return a valid surface
      var fontData = SDL.fonts[font];
      var w = SDL.estimateTextWidth(fontData, text);
      var h = fontData.size;
      var color = SDL.loadColorToCSSRGB(color); // XXX alpha breaks fonts?
      var fontString = h + 'px ' + fontData.name;
      var surf = SDL.makeSurface(w, h, 0, false, 'text:' + text); // bogus numbers..
      var surfData = SDL.surfaces[surf];
      surfData.ctx.save();
      surfData.ctx.fillStyle = color;
      surfData.ctx.font = fontString;
      surfData.ctx.textBaseline = 'top';
      surfData.ctx.fillText(text, 0, 0);
      surfData.ctx.restore();
      return surf;
    }function _Mix_HaltMusic() {
      var audio = SDL.music.audio;
      if (audio) {
        audio.src = audio.src; // rewind <media> element
        audio.currentPosition = 0; // rewind Web Audio graph playback.
        audio.pause();
      }
      SDL.music.audio = null;
      if (SDL.hookMusicFinished) {
        Runtime.dynCall('v', SDL.hookMusicFinished);
      }
      return 0;
    }function _Mix_PlayMusic(id, loops) {
      // Pause old music if it exists.
      if (SDL.music.audio) {
        if (!SDL.music.audio.paused) Module.printErr('Music is already playing. ' + SDL.music.source);
        SDL.music.audio.pause();
      }
      var info = SDL.audios[id];
      var audio;
      if (info.webAudio) { // Play via Web Audio API
        // Create an instance of the WebAudio object.
        audio = {};
        audio.resource = info; // This new webAudio object is an instance that refers to this existing resource.
        audio.paused = false;
        audio.currentPosition = 0;
        audio.play = function() { SDL.playWebAudio(this); }
        audio.pause = function() { SDL.pauseWebAudio(this); }
      } else if (info.audio) { // Play via the <audio> element
        audio = info.audio;
      }
      audio['onended'] = function() { if (SDL.music.audio == this) _Mix_HaltMusic(); } // will send callback
      audio.loop = loops != 0; // TODO: handle N loops for finite N
      audio.volume = SDL.music.volume;
      SDL.music.audio = audio;
      audio.play();
      return 0;
    }function _Mix_FreeChunk(id) {
      SDL.audios[id] = null;
    }function _Mix_LoadWAV_RW(rwopsID, freesrc) {
      var rwops = SDL.rwops[rwopsID];
  
  
      if (rwops === undefined)
        return 0;
  
      var filename = '';
      var audio;
      var webAudio;
      var bytes;
  
      if (rwops.filename !== undefined) {
        filename = PATH.resolve(rwops.filename);
        var raw = Module["preloadedAudios"][filename];
        if (!raw) {
          if (raw === null) Module.printErr('Trying to reuse preloaded audio, but freePreloadedMediaOnUse is set!');
          if (!Module.noAudioDecoding) Runtime.warnOnce('Cannot find preloaded audio ' + filename);
  
          // see if we can read the file-contents from the in-memory FS
          try {
            bytes = FS.readFile(filename);
          } catch (e) {
            Module.printErr('Couldn\'t find file for: ' + filename);
            return 0;
          }
        }
        if (Module['freePreloadedMediaOnUse']) {
          Module["preloadedAudios"][filename] = null;
        }
        audio = raw;
      }
      else if (rwops.bytes !== undefined) {
        // For Web Audio context buffer decoding, we must make a clone of the audio data, but for <media> element,
        // a view to existing data is sufficient.
        if (SDL.webAudioAvailable()) bytes = HEAPU8.buffer.slice(rwops.bytes, rwops.bytes + rwops.count);
        else bytes = HEAPU8.subarray(rwops.bytes, rwops.bytes + rwops.count);
      }
      else {
        return 0;
      }
  
      var arrayBuffer = bytes ? bytes.buffer || bytes : bytes;
  
      // To allow user code to work around browser bugs with audio playback on <audio> elements an Web Audio, enable
      // the user code to hook in a callback to decide on a file basis whether each file should use Web Audio or <audio> for decoding and playback.
      // In particular, see https://bugzilla.mozilla.org/show_bug.cgi?id=654787 and ?id=1012801 for tradeoffs.
      var canPlayWithWebAudio = Module['SDL_canPlayWithWebAudio'] === undefined || Module['SDL_canPlayWithWebAudio'](filename, arrayBuffer);
  
      if (bytes !== undefined && SDL.webAudioAvailable() && canPlayWithWebAudio) {
        audio = undefined;
        webAudio = {};
        // The audio decoding process is asynchronous, which gives trouble if user code plays the audio data back immediately
        // after loading. Therefore prepare an array of callback handlers to run when this audio decoding is complete, which
        // will then start the playback (with some delay).
        webAudio.onDecodeComplete = []; // While this member array exists, decoding hasn't finished yet.
        function onDecodeComplete(data) {
          webAudio.decodedBuffer = data;
          // Call all handlers that were waiting for this decode to finish, and clear the handler list.
          webAudio.onDecodeComplete.forEach(function(e) { e(); });
          webAudio.onDecodeComplete = undefined; // Don't allow more callback handlers since audio has finished decoding.
        }
  
        SDL.audioContext['decodeAudioData'](arrayBuffer, onDecodeComplete);
      } else if (audio === undefined && bytes) {
        // Here, we didn't find a preloaded audio but we either were passed a filepath for
        // which we loaded bytes, or we were passed some bytes
        var blob = new Blob([bytes], {type: rwops.mimetype});
        var url = URL.createObjectURL(blob);
        audio = new Audio();
        audio.src = url;
        audio.mozAudioChannelType = 'content'; // bugzilla 910340
      }
  
      var id = SDL.audios.length;
      // Keep the loaded audio in the audio arrays, ready for playback
      SDL.audios.push({
        source: filename,
        audio: audio, // Points to the <audio> element, if loaded
        webAudio: webAudio // Points to a Web Audio -specific resource object, if loaded
      });
      return id;
    }function _Mix_PlayChannel(channel, id, loops) {
      // TODO: handle fixed amount of N loops. Currently loops either 0 or infinite times.
  
      // Get the audio element associated with the ID
      var info = SDL.audios[id];
      if (!info) return -1;
      if (!info.audio && !info.webAudio) return -1;
  
      // If the user asks us to allocate a channel automatically, get the first
      // free one.
      if (channel == -1) {
        for (var i = SDL.channelMinimumNumber; i < SDL.numChannels; i++) {
          if (!SDL.channels[i].audio) {
            channel = i;
            break;
          }
        }
        if (channel == -1) {
          Module.printErr('All ' + SDL.numChannels + ' channels in use!');
          return -1;
        }
      }
      var channelInfo = SDL.channels[channel];
      var audio;
      if (info.webAudio) {
        // Create an instance of the WebAudio object.
        audio = {};
        audio.resource = info; // This new object is an instance that refers to this existing resource.
        audio.paused = false;
        audio.currentPosition = 0;
        // Make our instance look similar to the instance of a <media> to make api simple.
        audio.play = function() { SDL.playWebAudio(this); }
        audio.pause = function() { SDL.pauseWebAudio(this); }
      } else {
        // We clone the audio node to utilize the preloaded audio buffer, since
        // the browser has already preloaded the audio file.
        audio = info.audio.cloneNode(true);
        audio.numChannels = info.audio.numChannels;
        audio.frequency = info.audio.frequency;
      }
      audio['onended'] = function SDL_audio_onended() { // TODO: cache these
        if (channelInfo.audio == this) { channelInfo.audio.paused = true; channelInfo.audio = null; }
        if (SDL.channelFinished) Runtime.getFuncWrapper(SDL.channelFinished, 'vi')(channel);
      }
      channelInfo.audio = audio;
      // TODO: handle N loops. Behavior matches Mix_PlayMusic
      audio.loop = loops != 0;
      audio.volume = channelInfo.volume;
      audio.play();
      return channel;
    }function _SDL_LockSurface(surf) {
      var surfData = SDL.surfaces[surf];
  
      surfData.locked++;
      if (surfData.locked > 1) return 0;
  
      if (!surfData.buffer) {
        surfData.buffer = _malloc(surfData.width * surfData.height * 4);
        HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
      }
  
      // Mark in C/C++-accessible SDL structure
      // SDL_Surface has the following fields: Uint32 flags, SDL_PixelFormat *format; int w, h; Uint16 pitch; void *pixels; ...
      // So we have fields all of the same size, and 5 of them before us.
      // TODO: Use macros like in library.js
      HEAP32[(((surf)+(20))>>2)]=surfData.buffer;
  
      if (surf == SDL.screen && Module.screenIsReadOnly && surfData.image) return 0;
  
      if (SDL.defaults.discardOnLock) {
        if (!surfData.image) {
          surfData.image = surfData.ctx.createImageData(surfData.width, surfData.height);
        }
        if (!SDL.defaults.opaqueFrontBuffer) return;
      } else {
        surfData.image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
      }
  
      // Emulate desktop behavior and kill alpha values on the locked surface. (very costly!) Set SDL.defaults.opaqueFrontBuffer = false
      // if you don't want this.
      if (surf == SDL.screen && SDL.defaults.opaqueFrontBuffer) {
        var data = surfData.image.data;
        var num = data.length;
        for (var i = 0; i < num/4; i++) {
          data[i*4+3] = 255; // opacity, as canvases blend alpha
        }
      }
  
      if (SDL.defaults.copyOnLock && !SDL.defaults.discardOnLock) {
        // Copy pixel data to somewhere accessible to 'C/C++'
        if (surfData.isFlagSet(0x00200000 /* SDL_HWPALETTE */)) {
          // If this is neaded then
          // we should compact the data from 32bpp to 8bpp index.
          // I think best way to implement this is use
          // additional colorMap hash (color->index).
          // Something like this:
          //
          // var size = surfData.width * surfData.height;
          // var data = '';
          // for (var i = 0; i<size; i++) {
          //   var color = SDL.translateRGBAToColor(
          //     surfData.image.data[i*4   ], 
          //     surfData.image.data[i*4 +1], 
          //     surfData.image.data[i*4 +2], 
          //     255);
          //   var index = surfData.colorMap[color];
          //   HEAP8[(((surfData.buffer)+(i))>>0)]=index;
          // }
          throw 'CopyOnLock is not supported for SDL_LockSurface with SDL_HWPALETTE flag set' + new Error().stack;
        } else {
          HEAPU8.set(surfData.image.data, surfData.buffer);
        }
      }
  
      return 0;
    }
  
  function _SDL_FreeRW(rwopsID) {
      SDL.rwops[rwopsID] = null;
      while (SDL.rwops.length > 0 && SDL.rwops[SDL.rwops.length-1] === null) {
        SDL.rwops.pop();
      }
    }function _IMG_Load_RW(rwopsID, freeSrc) {
      try {
        // stb_image integration support
        function cleanup() {
          if (rwops && freeSrc) _SDL_FreeRW(rwopsID);
        };
        function addCleanup(func) {
          var old = cleanup;
          cleanup = function added_cleanup() {
            old();
            func();
          }
        }
        function callStbImage(func, params) {
          var x = Module['_malloc'](4);
          var y = Module['_malloc'](4);
          var comp = Module['_malloc'](4);
          addCleanup(function() {
            Module['_free'](x);
            Module['_free'](y);
            Module['_free'](comp);
            if (data) Module['_stbi_image_free'](data);
          });
          var data = Module['_' + func].apply(null, params.concat([x, y, comp, 0]));
          if (!data) return null;
          return {
            rawData: true,
            data: data,
            width: HEAP32[((x)>>2)],
            height: HEAP32[((y)>>2)],
            size: HEAP32[((x)>>2)] * HEAP32[((y)>>2)] * HEAP32[((comp)>>2)],
            bpp: HEAP32[((comp)>>2)]
          };
        }
  
        var rwops = SDL.rwops[rwopsID];
        if (rwops === undefined) {
          return 0;
        }
  
        var filename = rwops.filename;
        if (filename === undefined) {
          Runtime.warnOnce('Only file names that have been preloaded are supported for IMG_Load_RW. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js), or package files with --use-preload-plugins');
          return 0;
        }
  
        if (!raw) {
          filename = PATH.resolve(filename);
          var raw = Module["preloadedImages"][filename];
          if (!raw) {
            if (raw === null) Module.printErr('Trying to reuse preloaded image, but freePreloadedMediaOnUse is set!');
            Runtime.warnOnce('Cannot find preloaded image ' + filename);
            Runtime.warnOnce('Cannot find preloaded image ' + filename + '. Consider using STB_IMAGE=1 if you want synchronous image decoding (see settings.js), or package files with --use-preload-plugins');
            return 0;
          } else if (Module['freePreloadedMediaOnUse']) {
            Module["preloadedImages"][filename] = null;
          }
        }
  
        var surf = SDL.makeSurface(raw.width, raw.height, 0, false, 'load:' + filename);
        var surfData = SDL.surfaces[surf];
        surfData.ctx.globalCompositeOperation = "copy";
        if (!raw.rawData) {
          surfData.ctx.drawImage(raw, 0, 0, raw.width, raw.height, 0, 0, raw.width, raw.height);
        } else {
          var imageData = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
          if (raw.bpp == 4) {
            // rgba
            imageData.data.set(HEAPU8.subarray((raw.data),(raw.data+raw.size)));
          } else if (raw.bpp == 3) {
            // rgb
            var pixels = raw.size/3;
            var data = imageData.data;
            var sourcePtr = raw.data;
            var destPtr = 0;
            for (var i = 0; i < pixels; i++) {
              data[destPtr++] = HEAPU8[((sourcePtr++)>>0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)>>0)];
              data[destPtr++] = HEAPU8[((sourcePtr++)>>0)];
              data[destPtr++] = 255;
            }
          } else if (raw.bpp == 1) {
            // grayscale
            var pixels = raw.size;
            var data = imageData.data;
            var sourcePtr = raw.data;
            var destPtr = 0;
            for (var i = 0; i < pixels; i++) {
              var value = HEAPU8[((sourcePtr++)>>0)];
              data[destPtr++] = value;
              data[destPtr++] = value;
              data[destPtr++] = value;
              data[destPtr++] = 255;
            }
          } else {
            Module.printErr('cannot handle bpp ' + raw.bpp);
            return 0;
          }
          surfData.ctx.putImageData(imageData, 0, 0);
        }
        surfData.ctx.globalCompositeOperation = "source-over";
        // XXX SDL does not specify that loaded images must have available pixel data, in fact
        //     there are cases where you just want to blit them, so you just need the hardware
        //     accelerated version. However, code everywhere seems to assume that the pixels
        //     are in fact available, so we retrieve it here. This does add overhead though.
        _SDL_LockSurface(surf);
        surfData.locked--; // The surface is not actually locked in this hack
        if (SDL.GL) {
          // After getting the pixel data, we can free the canvas and context if we do not need to do 2D canvas blitting
          surfData.canvas = surfData.ctx = null;
        }
        return surf;
      } finally {
        cleanup();
      }
    }
  
  function _SDL_RWFromFile(_name, mode) {
      var id = SDL.rwops.length; // TODO: recycle ids when they are null
      var name = Pointer_stringify(_name)
      SDL.rwops.push({ filename: name, mimetype: Browser.getMimetype(name) });
      return id;
    }function _IMG_Load(filename){
      var rwops = _SDL_RWFromFile(filename);
      var result = _IMG_Load_RW(rwops, 1);
      return result;
    }function _SDL_UpperBlitScaled(src, srcrect, dst, dstrect) {
      return SDL.blitSurface(src, srcrect, dst, dstrect, true);
    }function _SDL_UpperBlit(src, srcrect, dst, dstrect) {
      return SDL.blitSurface(src, srcrect, dst, dstrect, false);
    }function _SDL_GetTicks() {
      return (Date.now() - SDL.startTime)|0;
    }var SDL={defaults:{width:320,height:200,copyOnLock:true,discardOnLock:false,opaqueFrontBuffer:true},version:null,surfaces:{},canvasPool:[],events:[],fonts:[null],audios:[null],rwops:[null],music:{audio:null,volume:1},mixerFrequency:22050,mixerFormat:32784,mixerNumChannels:2,mixerChunkSize:1024,channelMinimumNumber:0,GL:false,glAttributes:{0:3,1:3,2:2,3:0,4:0,5:1,6:16,7:0,8:0,9:0,10:0,11:0,12:0,13:0,14:0,15:1,16:0,17:0,18:0},keyboardState:null,keyboardMap:{},canRequestFullscreen:false,isRequestingFullscreen:false,textInput:false,startTime:null,initFlags:0,buttonState:0,modState:0,DOMButtons:[0,0,0],DOMEventToSDLEvent:{},TOUCH_DEFAULT_ID:0,eventHandler:null,eventHandlerContext:null,eventHandlerTemp:0,keyCodes:{16:1249,17:1248,18:1250,20:1081,33:1099,34:1102,35:1101,36:1098,37:1104,38:1106,39:1103,40:1105,44:316,45:1097,46:127,91:1251,93:1125,96:1122,97:1113,98:1114,99:1115,100:1116,101:1117,102:1118,103:1119,104:1120,105:1121,106:1109,107:1111,109:1110,110:1123,111:1108,112:1082,113:1083,114:1084,115:1085,116:1086,117:1087,118:1088,119:1089,120:1090,121:1091,122:1092,123:1093,124:1128,125:1129,126:1130,127:1131,128:1132,129:1133,130:1134,131:1135,132:1136,133:1137,134:1138,135:1139,144:1107,160:94,161:33,162:34,163:35,164:36,165:37,166:38,167:95,168:40,169:41,170:42,171:43,172:124,173:45,174:123,175:125,176:126,181:127,182:129,183:128,188:44,190:46,191:47,192:96,219:91,220:92,221:93,222:39,224:1251},scanCodes:{8:42,9:43,13:40,27:41,32:44,35:204,39:53,44:54,46:55,47:56,48:39,49:30,50:31,51:32,52:33,53:34,54:35,55:36,56:37,57:38,58:203,59:51,61:46,91:47,92:49,93:48,96:52,97:4,98:5,99:6,100:7,101:8,102:9,103:10,104:11,105:12,106:13,107:14,108:15,109:16,110:17,111:18,112:19,113:20,114:21,115:22,116:23,117:24,118:25,119:26,120:27,121:28,122:29,127:76,305:224,308:226,316:70},loadRect:function (rect) {
        return {
          x: HEAP32[((rect + 0)>>2)],
          y: HEAP32[((rect + 4)>>2)],
          w: HEAP32[((rect + 8)>>2)],
          h: HEAP32[((rect + 12)>>2)]
        };
      },updateRect:function (rect, r) {
        HEAP32[((rect)>>2)]=r.x;
        HEAP32[(((rect)+(4))>>2)]=r.y;
        HEAP32[(((rect)+(8))>>2)]=r.w;
        HEAP32[(((rect)+(12))>>2)]=r.h;
      },intersectionOfRects:function (first, second) {
        var leftX = Math.max(first.x, second.x);
        var leftY = Math.max(first.y, second.y);
        var rightX = Math.min(first.x + first.w, second.x + second.w);
        var rightY = Math.min(first.y + first.h, second.y + second.h);
  
        return {
          x: leftX,
          y: leftY,
          w: Math.max(leftX, rightX) - leftX,
          h: Math.max(leftY, rightY) - leftY
        }
      },checkPixelFormat:function (fmt) {
      },loadColorToCSSRGB:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgb(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ')';
      },loadColorToCSSRGBA:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgba(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ',' + (((rgba >> 24)&255)/255) + ')';
      },translateColorToCSSRGBA:function (rgba) {
        return 'rgba(' + (rgba&0xff) + ',' + (rgba>>8 & 0xff) + ',' + (rgba>>16 & 0xff) + ',' + (rgba>>>24)/0xff + ')';
      },translateRGBAToCSSRGBA:function (r, g, b, a) {
        return 'rgba(' + (r&0xff) + ',' + (g&0xff) + ',' + (b&0xff) + ',' + (a&0xff)/255 + ')';
      },translateRGBAToColor:function (r, g, b, a) {
        return r | g << 8 | b << 16 | a << 24;
      },makeSurface:function (width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
        flags = flags || 0;
        var is_SDL_HWSURFACE = flags & 0x00000001;
        var is_SDL_HWPALETTE = flags & 0x00200000;
        var is_SDL_OPENGL = flags & 0x04000000;
  
        var surf = _malloc(60);
        var pixelFormat = _malloc(44);
        //surface with SDL_HWPALETTE flag is 8bpp surface (1 byte)
        var bpp = is_SDL_HWPALETTE ? 1 : 4;
        var buffer = 0;
  
        // preemptively initialize this for software surfaces,
        // otherwise it will be lazily initialized inside of SDL_LockSurface
        if (!is_SDL_HWSURFACE && !is_SDL_OPENGL) {
          buffer = _malloc(width * height * 4);
        }
  
        HEAP32[((surf)>>2)]=flags;
        HEAP32[(((surf)+(4))>>2)]=pixelFormat;
        HEAP32[(((surf)+(8))>>2)]=width;
        HEAP32[(((surf)+(12))>>2)]=height;
        HEAP32[(((surf)+(16))>>2)]=width * bpp;  // assuming RGBA or indexed for now,
                                                                                          // since that is what ImageData gives us in browsers
        HEAP32[(((surf)+(20))>>2)]=buffer;
  
        HEAP32[(((surf)+(36))>>2)]=0;
        HEAP32[(((surf)+(40))>>2)]=0;
        HEAP32[(((surf)+(44))>>2)]=Module["canvas"].width;
        HEAP32[(((surf)+(48))>>2)]=Module["canvas"].height;
  
        HEAP32[(((surf)+(56))>>2)]=1;
  
        HEAP32[((pixelFormat)>>2)]=-2042224636;
        HEAP32[(((pixelFormat)+(4))>>2)]=0;// TODO
        HEAP8[(((pixelFormat)+(8))>>0)]=bpp * 8;
        HEAP8[(((pixelFormat)+(9))>>0)]=bpp;
  
        HEAP32[(((pixelFormat)+(12))>>2)]=rmask || 0x000000ff;
        HEAP32[(((pixelFormat)+(16))>>2)]=gmask || 0x0000ff00;
        HEAP32[(((pixelFormat)+(20))>>2)]=bmask || 0x00ff0000;
        HEAP32[(((pixelFormat)+(24))>>2)]=amask || 0xff000000;
  
        // Decide if we want to use WebGL or not
        SDL.GL = SDL.GL || is_SDL_OPENGL;
        var canvas;
        if (!usePageCanvas) {
          if (SDL.canvasPool.length > 0) {
            canvas = SDL.canvasPool.pop();
          } else {
            canvas = document.createElement('canvas');
          }
          canvas.width = width;
          canvas.height = height;
        } else {
          canvas = Module['canvas'];
        }
  
        var webGLContextAttributes = {
          antialias: ((SDL.glAttributes[13 /*SDL_GL_MULTISAMPLEBUFFERS*/] != 0) && (SDL.glAttributes[14 /*SDL_GL_MULTISAMPLESAMPLES*/] > 1)),
          depth: (SDL.glAttributes[6 /*SDL_GL_DEPTH_SIZE*/] > 0),
          stencil: (SDL.glAttributes[7 /*SDL_GL_STENCIL_SIZE*/] > 0),
          alpha: (SDL.glAttributes[3 /*SDL_GL_ALPHA_SIZE*/] > 0)
        };
        
        var ctx = Browser.createContext(canvas, is_SDL_OPENGL, usePageCanvas, webGLContextAttributes);
              
        SDL.surfaces[surf] = {
          width: width,
          height: height,
          canvas: canvas,
          ctx: ctx,
          surf: surf,
          buffer: buffer,
          pixelFormat: pixelFormat,
          alpha: 255,
          flags: flags,
          locked: 0,
          usePageCanvas: usePageCanvas,
          source: source,
  
          isFlagSet: function(flag) {
            return flags & flag;
          }
        };
  
        return surf;
      },copyIndexedColorData:function (surfData, rX, rY, rW, rH) {
        // HWPALETTE works with palette
        // setted by SDL_SetColors
        if (!surfData.colors) {
          return;
        }
        
        var fullWidth  = Module['canvas'].width;
        var fullHeight = Module['canvas'].height;
  
        var startX  = rX || 0;
        var startY  = rY || 0;
        var endX    = (rW || (fullWidth - startX)) + startX;
        var endY    = (rH || (fullHeight - startY)) + startY;
        
        var buffer  = surfData.buffer;
  
        if (!surfData.image.data32) {
          surfData.image.data32 = new Uint32Array(surfData.image.data.buffer);
        }
        var data32   = surfData.image.data32;
  
        var colors32 = surfData.colors32;
  
        for (var y = startY; y < endY; ++y) {
          var base = y * fullWidth;
          for (var x = startX; x < endX; ++x) {
            data32[base + x] = colors32[HEAPU8[((buffer + base + x)>>0)]];
          }
        }
      },freeSurface:function (surf) {
        var refcountPointer = surf + 56;
        var refcount = HEAP32[((refcountPointer)>>2)];
        if (refcount > 1) {
          HEAP32[((refcountPointer)>>2)]=refcount - 1;
          return;
        }
  
        var info = SDL.surfaces[surf];
        if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
        if (info.buffer) _free(info.buffer);
        _free(info.pixelFormat);
        _free(surf);
        SDL.surfaces[surf] = null;
  
        if (surf === SDL.screen) {
          SDL.screen = null;
        }
      },blitSurface__deps:["SDL_LockSurface"],blitSurface:function (src, srcrect, dst, dstrect, scale) {
        var srcData = SDL.surfaces[src];
        var dstData = SDL.surfaces[dst];
        var sr, dr;
        if (srcrect) {
          sr = SDL.loadRect(srcrect);
        } else {
          sr = { x: 0, y: 0, w: srcData.width, h: srcData.height };
        }
        if (dstrect) {
          dr = SDL.loadRect(dstrect);
        } else {
          dr = { x: 0, y: 0, w: srcData.width, h: srcData.height };
        }
        if (dstData.clipRect) {
          var widthScale = (!scale || sr.w === 0) ? 1 : sr.w / dr.w;
          var heightScale = (!scale || sr.h === 0) ? 1 : sr.h / dr.h;
          
          dr = SDL.intersectionOfRects(dstData.clipRect, dr);
          
          sr.w = dr.w * widthScale;
          sr.h = dr.h * heightScale;
          
          if (dstrect) {
            SDL.updateRect(dstrect, dr);
          }
        }
        var blitw, blith;
        if (scale) {
          blitw = dr.w; blith = dr.h;
        } else {
          blitw = sr.w; blith = sr.h;
        }
        if (sr.w === 0 || sr.h === 0 || blitw === 0 || blith === 0) {
          return 0;
        }
        var oldAlpha = dstData.ctx.globalAlpha;
        dstData.ctx.globalAlpha = srcData.alpha/255;
        dstData.ctx.drawImage(srcData.canvas, sr.x, sr.y, sr.w, sr.h, dr.x, dr.y, blitw, blith);
        dstData.ctx.globalAlpha = oldAlpha;
        if (dst != SDL.screen) {
          // XXX As in IMG_Load, for compatibility we write out |pixels|
          Runtime.warnOnce('WARNING: copying canvas data to memory for compatibility');
          _SDL_LockSurface(dst);
          dstData.locked--; // The surface is not actually locked in this hack
        }
        return 0;
      },downFingers:{},savedKeydown:null,receiveEvent:function (event) {
        function unpressAllPressedKeys() {
          // Un-press all pressed keys: TODO
          for (var code in SDL.keyboardMap) {
            SDL.events.push({
              type: 'keyup',
              keyCode: SDL.keyboardMap[code]
            });
          }
        };
        switch(event.type) {
          case 'touchstart': case 'touchmove': {
            event.preventDefault();
  
            var touches = [];
            
            // Clear out any touchstart events that we've already processed
            if (event.type === 'touchstart') {
              for (var i = 0; i < event.touches.length; i++) {
                var touch = event.touches[i];
                if (SDL.downFingers[touch.identifier] != true) {
                  SDL.downFingers[touch.identifier] = true;
                  touches.push(touch);
                }
              }
            } else {
              touches = event.touches;
            }
            
            var firstTouch = touches[0];
            if (event.type == 'touchstart') {
              SDL.DOMButtons[0] = 1;
            }
            var mouseEventType;
            switch(event.type) {
              case 'touchstart': mouseEventType = 'mousedown'; break;
              case 'touchmove': mouseEventType = 'mousemove'; break;
            }
            var mouseEvent = {
              type: mouseEventType,
              button: 0,
              pageX: firstTouch.clientX,
              pageY: firstTouch.clientY
            };
            SDL.events.push(mouseEvent);
  
            for (var i = 0; i < touches.length; i++) {
              var touch = touches[i];
              SDL.events.push({
                type: event.type,
                touch: touch
              });
            };
            break;
          }
          case 'touchend': {
            event.preventDefault();
            
            // Remove the entry in the SDL.downFingers hash
            // because the finger is no longer down.
            for(var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              if (SDL.downFingers[touch.identifier] === true) {
                delete SDL.downFingers[touch.identifier];
              }
            }
  
            var mouseEvent = {
              type: 'mouseup',
              button: 0,
              pageX: event.changedTouches[0].clientX,
              pageY: event.changedTouches[0].clientY
            };
            SDL.DOMButtons[0] = 0;
            SDL.events.push(mouseEvent);
            
            for (var i = 0; i < event.changedTouches.length; i++) {
              var touch = event.changedTouches[i];
              SDL.events.push({
                type: 'touchend',
                touch: touch
              });
            };
            break;
          }
          case 'DOMMouseScroll': case 'mousewheel': case 'wheel':
            var delta = -Browser.getMouseWheelDelta(event); // Flip the wheel direction to translate from browser wheel direction (+:down) to SDL direction (+:up)
            delta = (delta == 0) ? 0 : (delta > 0 ? Math.max(delta, 1) : Math.min(delta, -1)); // Quantize to integer so that minimum scroll is at least +/- 1.
  
            // Simulate old-style SDL events representing mouse wheel input as buttons
            var button = delta > 0 ? 3 /*SDL_BUTTON_WHEELUP-1*/ : 4 /*SDL_BUTTON_WHEELDOWN-1*/; // Subtract one since JS->C marshalling is defined to add one back.
            SDL.events.push({ type: 'mousedown', button: button, pageX: event.pageX, pageY: event.pageY });
            SDL.events.push({ type: 'mouseup', button: button, pageX: event.pageX, pageY: event.pageY });
  
            // Pass a delta motion event.
            SDL.events.push({ type: 'wheel', deltaX: 0, deltaY: delta });
            event.preventDefault(); // If we don't prevent this, then 'wheel' event will be sent again by the browser as 'DOMMouseScroll' and we will receive this same event the second time.
            break;
          case 'mousemove':
            if (SDL.DOMButtons[0] === 1) {
              SDL.events.push({
                type: 'touchmove',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            }
            if (Browser.pointerLock) {
              // workaround for firefox bug 750111
              if ('mozMovementX' in event) {
                event['movementX'] = event['mozMovementX'];
                event['movementY'] = event['mozMovementY'];
              }
              // workaround for Firefox bug 782777
              if (event['movementX'] == 0 && event['movementY'] == 0) {
                // ignore a mousemove event if it doesn't contain any movement info
                // (without pointer lock, we infer movement from pageX/pageY, so this check is unnecessary)
                event.preventDefault();
                return;
              }
            }
            // fall through
          case 'keydown': case 'keyup': case 'keypress': case 'mousedown': case 'mouseup':
            // If we preventDefault on keydown events, the subsequent keypress events
            // won't fire. However, it's fine (and in some cases necessary) to
            // preventDefault for keys that don't generate a character. Otherwise,
            // preventDefault is the right thing to do in general.
            if (event.type !== 'keydown' || (!SDL.unicode && !SDL.textInput) || (event.keyCode === 8 /* backspace */ || event.keyCode === 9 /* tab */)) {
              event.preventDefault();
            }
  
            if (event.type == 'mousedown') {
              SDL.DOMButtons[event.button] = 1;
              SDL.events.push({
                type: 'touchstart',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
            } else if (event.type == 'mouseup') {
              // ignore extra ups, can happen if we leave the canvas while pressing down, then return,
              // since we add a mouseup in that case
              if (!SDL.DOMButtons[event.button]) {
                return;
              }
  
              SDL.events.push({
                type: 'touchend',
                touch: {
                  identifier: 0,
                  deviceID: -1,
                  pageX: event.pageX,
                  pageY: event.pageY
                }
              });
              SDL.DOMButtons[event.button] = 0;
            }
  
            // We can only request fullscreen as the result of user input.
            // Due to this limitation, we toggle a boolean on keydown which
            // SDL_WM_ToggleFullScreen will check and subsequently set another
            // flag indicating for us to request fullscreen on the following
            // keyup. This isn't perfect, but it enables SDL_WM_ToggleFullScreen
            // to work as the result of a keypress (which is an extremely
            // common use case).
            if (event.type === 'keydown' || event.type === 'mousedown') {
              SDL.canRequestFullscreen = true;
            } else if (event.type === 'keyup' || event.type === 'mouseup') {
              if (SDL.isRequestingFullscreen) {
                Module['requestFullScreen'](true, true);
                SDL.isRequestingFullscreen = false;
              }
              SDL.canRequestFullscreen = false;
            }
  
            // SDL expects a unicode character to be passed to its keydown events.
            // Unfortunately, the browser APIs only provide a charCode property on
            // keypress events, so we must backfill in keydown events with their
            // subsequent keypress event's charCode.
            if (event.type === 'keypress' && SDL.savedKeydown) {
              // charCode is read-only
              SDL.savedKeydown.keypressCharCode = event.charCode;
              SDL.savedKeydown = null;
            } else if (event.type === 'keydown') {
              SDL.savedKeydown = event;
            }
  
            // Don't push keypress events unless SDL_StartTextInput has been called.
            if (event.type !== 'keypress' || SDL.textInput) {
              SDL.events.push(event);
            }
            break;
          case 'mouseout':
            // Un-press all pressed mouse buttons, because we might miss the release outside of the canvas
            for (var i = 0; i < 3; i++) {
              if (SDL.DOMButtons[i]) {
                SDL.events.push({
                  type: 'mouseup',
                  button: i,
                  pageX: event.pageX,
                  pageY: event.pageY
                });
                SDL.DOMButtons[i] = 0;
              }
            }
            event.preventDefault();
            break;
          case 'focus':
            SDL.events.push(event);
            event.preventDefault();
            break;
          case 'blur':
            SDL.events.push(event);
            unpressAllPressedKeys();
            event.preventDefault();
            break;
          case 'visibilitychange':
            SDL.events.push({
              type: 'visibilitychange',
              visible: !document.hidden
            });
            unpressAllPressedKeys();
            event.preventDefault();
            break;
          case 'unload':
            if (Browser.mainLoop.runner) {
              SDL.events.push(event);
              // Force-run a main event loop, since otherwise this event will never be caught!
              Browser.mainLoop.runner();
            }
            return;
          case 'resize':
            SDL.events.push(event);
            // manually triggered resize event doesn't have a preventDefault member
            if (event.preventDefault) {
              event.preventDefault();
            }
            break;
        }
        if (SDL.events.length >= 10000) {
          Module.printErr('SDL event queue full, dropping events');
          SDL.events = SDL.events.slice(0, 10000);
        }
        // If we have a handler installed, this will push the events to the app
        // instead of the app polling for them.
        SDL.flushEventsToHandler();
        return;
      },lookupKeyCodeForEvent:function (event) {
          var code = event.keyCode;
          if (code >= 65 && code <= 90) {
            code += 32; // make lowercase for SDL
          } else {
            code = SDL.keyCodes[event.keyCode] || event.keyCode;
            // If this is one of the modifier keys (224 | 1<<10 - 227 | 1<<10), and the event specifies that it is
            // a right key, add 4 to get the right key SDL key code.
            if (event.location === KeyboardEvent.DOM_KEY_LOCATION_RIGHT && code >= (224 | 1<<10) && code <= (227 | 1<<10)) {
              code += 4;
            }
          }
          return code;
      },handleEvent:function (event) {
        if (event.handled) return;
        event.handled = true;
  
        switch (event.type) {
          case 'touchstart': case 'touchend': case 'touchmove': {
            Browser.calculateMouseEvent(event);
            break;
          }
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            var code = SDL.lookupKeyCodeForEvent(event);
            HEAP8[(((SDL.keyboardState)+(code))>>0)]=down;
            // TODO: lmeta, rmeta, numlock, capslock, KMOD_MODE, KMOD_RESERVED
            SDL.modState = (HEAP8[(((SDL.keyboardState)+(1248))>>0)] ? 0x0040 : 0) | // KMOD_LCTRL
              (HEAP8[(((SDL.keyboardState)+(1249))>>0)] ? 0x0001 : 0) | // KMOD_LSHIFT
              (HEAP8[(((SDL.keyboardState)+(1250))>>0)] ? 0x0100 : 0) | // KMOD_LALT
              (HEAP8[(((SDL.keyboardState)+(1252))>>0)] ? 0x0080 : 0) | // KMOD_RCTRL
              (HEAP8[(((SDL.keyboardState)+(1253))>>0)] ? 0x0002 : 0) | // KMOD_RSHIFT
              (HEAP8[(((SDL.keyboardState)+(1254))>>0)] ? 0x0200 : 0); //  KMOD_RALT
            if (down) {
              SDL.keyboardMap[code] = event.keyCode; // save the DOM input, which we can use to unpress it during blur
            } else {
              delete SDL.keyboardMap[code];
            }
  
            break;
          }
          case 'mousedown': case 'mouseup':
            if (event.type == 'mousedown') {
              // SDL_BUTTON(x) is defined as (1 << ((x)-1)).  SDL buttons are 1-3,
              // and DOM buttons are 0-2, so this means that the below formula is
              // correct.
              SDL.buttonState |= 1 << event.button;
            } else if (event.type == 'mouseup') {
              SDL.buttonState &= ~(1 << event.button);
            }
            // fall through
          case 'mousemove': {
            Browser.calculateMouseEvent(event);
            break;
          }
        }
      },flushEventsToHandler:function () {
        if (!SDL.eventHandler) return;
  
        while (SDL.pollEvent(SDL.eventHandlerTemp)) {
          Runtime.dynCall('iii', SDL.eventHandler, [SDL.eventHandlerContext, SDL.eventHandlerTemp]);
        }
      },pollEvent:function (ptr) {
        if (SDL.initFlags & 0x200 && SDL.joystickEventState) {
          // If SDL_INIT_JOYSTICK was supplied AND the joystick system is configured
          // to automatically query for events, query for joystick events.
          SDL.queryJoysticks();
        }
        if (ptr) {
          while (SDL.events.length > 0) {
            if (SDL.makeCEvent(SDL.events.shift(), ptr) !== false) return 1;
          }
          return 0;
        } else {
          // XXX: somewhat risky in that we do not check if the event is real or not (makeCEvent returns false) if no pointer supplied
          return SDL.events.length > 0;
        }
      },makeCEvent:function (event, ptr) {
        if (typeof event === 'number') {
          // This is a pointer to a copy of a native C event that was SDL_PushEvent'ed
          _memcpy(ptr, event, 28);
          _free(event); // the copy is no longer needed
          return;
        }
  
        SDL.handleEvent(event);
  
        switch (event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            //Module.print('Received key event: ' + event.keyCode);
            var key = SDL.lookupKeyCodeForEvent(event);
            var scan;
            if (key >= 1024) {
              scan = key - 1024;
            } else {
              scan = SDL.scanCodes[key] || key;
            }
  
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(8))>>0)]=down ? 1 : 0;
            HEAP8[(((ptr)+(9))>>0)]=0; // TODO
            HEAP32[(((ptr)+(12))>>2)]=scan;
            HEAP32[(((ptr)+(16))>>2)]=key;
            HEAP16[(((ptr)+(20))>>1)]=SDL.modState;
            // some non-character keys (e.g. backspace and tab) won't have keypressCharCode set, fill in with the keyCode.
            HEAP32[(((ptr)+(24))>>2)]=event.keypressCharCode || key;
  
            break;
          }
          case 'keypress': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            // Not filling in windowID for now
            var cStr = intArrayFromString(String.fromCharCode(event.charCode));
            for (var i = 0; i < cStr.length; ++i) {
              HEAP8[(((ptr)+(8 + i))>>0)]=cStr[i];
            }
            break;
          }
          case 'mousedown': case 'mouseup': case 'mousemove': {
            if (event.type != 'mousemove') {
              var down = event.type === 'mousedown';
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP32[(((ptr)+(4))>>2)]=0;
              HEAP32[(((ptr)+(8))>>2)]=0;
              HEAP32[(((ptr)+(12))>>2)]=0;
              HEAP8[(((ptr)+(16))>>0)]=event.button+1; // DOM buttons are 0-2, SDL 1-3
              HEAP8[(((ptr)+(17))>>0)]=down ? 1 : 0;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseY;
            } else {
              HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP32[(((ptr)+(4))>>2)]=0;
              HEAP32[(((ptr)+(8))>>2)]=0;
              HEAP32[(((ptr)+(12))>>2)]=0;
              HEAP32[(((ptr)+(16))>>2)]=SDL.buttonState;
              HEAP32[(((ptr)+(20))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(24))>>2)]=Browser.mouseY;
              HEAP32[(((ptr)+(28))>>2)]=Browser.mouseMovementX;
              HEAP32[(((ptr)+(32))>>2)]=Browser.mouseMovementY;
            }
            break;
          }
          case 'wheel': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(16))>>2)]=event.deltaX;
            HEAP32[(((ptr)+(20))>>2)]=event.deltaY; 
            break;       
          }
          case 'touchstart': case 'touchend': case 'touchmove': {
            var touch = event.touch;
            if (!Browser.touches[touch.identifier]) break;
            var w = Module['canvas'].width;
            var h = Module['canvas'].height;
            var x = Browser.touches[touch.identifier].x / w;
            var y = Browser.touches[touch.identifier].y / h;
            var lx = Browser.lastTouches[touch.identifier].x / w;
            var ly = Browser.lastTouches[touch.identifier].y / h;
            var dx = x - lx;
            var dy = y - ly;
            if (touch['deviceID'] === undefined) touch.deviceID = SDL.TOUCH_DEFAULT_ID;
            if (dx === 0 && dy === 0 && event.type === 'touchmove') return false; // don't send these if nothing happened
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=_SDL_GetTicks();
            (tempI64 = [touch.deviceID>>>0,(tempDouble=touch.deviceID,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((ptr)+(8))>>2)]=tempI64[0],HEAP32[(((ptr)+(12))>>2)]=tempI64[1]);
            (tempI64 = [touch.identifier>>>0,(tempDouble=touch.identifier,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((ptr)+(16))>>2)]=tempI64[0],HEAP32[(((ptr)+(20))>>2)]=tempI64[1]);
            HEAPF32[(((ptr)+(24))>>2)]=x;
            HEAPF32[(((ptr)+(28))>>2)]=y;
            HEAPF32[(((ptr)+(32))>>2)]=dx;
            HEAPF32[(((ptr)+(36))>>2)]=dy;
            if (touch.force !== undefined) {
              HEAPF32[(((ptr)+(40))>>2)]=touch.force;
            } else { // No pressure data, send a digital 0/1 pressure.
              HEAPF32[(((ptr)+(40))>>2)]=event.type == "touchend" ? 0 : 1;
            }
            break;
          }
          case 'unload': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            break;
          }
          case 'resize': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=event.w;
            HEAP32[(((ptr)+(8))>>2)]=event.h;
            break;
          }
          case 'joystick_button_up': case 'joystick_button_down': {
            var state = event.type === 'joystick_button_up' ? 0 : 1;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))>>0)]=event.index;
            HEAP8[(((ptr)+(5))>>0)]=event.button;
            HEAP8[(((ptr)+(6))>>0)]=state;
            break;
          }
          case 'joystick_axis_motion': {
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP8[(((ptr)+(4))>>0)]=event.index;
            HEAP8[(((ptr)+(5))>>0)]=event.axis;
            HEAP32[(((ptr)+(8))>>2)]=SDL.joystickAxisValueConversion(event.value);
            break;
          }
          case 'focus': {
            var SDL_WINDOWEVENT_FOCUS_GAINED = 12 /* SDL_WINDOWEVENT_FOCUS_GAINED */;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=0;
            HEAP8[(((ptr)+(8))>>0)]=SDL_WINDOWEVENT_FOCUS_GAINED;
            break;
          }
          case 'blur': {
            var SDL_WINDOWEVENT_FOCUS_LOST = 13 /* SDL_WINDOWEVENT_FOCUS_LOST */;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=0;
            HEAP8[(((ptr)+(8))>>0)]=SDL_WINDOWEVENT_FOCUS_LOST;
            break;
          }
          case 'visibilitychange': {
            var SDL_WINDOWEVENT_SHOWN  = 1 /* SDL_WINDOWEVENT_SHOWN */;
            var SDL_WINDOWEVENT_HIDDEN = 2 /* SDL_WINDOWEVENT_HIDDEN */;
            var visibilityEventID = event.visible ? SDL_WINDOWEVENT_SHOWN : SDL_WINDOWEVENT_HIDDEN;
            HEAP32[((ptr)>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(4))>>2)]=0;
            HEAP8[(((ptr)+(8))>>0)]=visibilityEventID;
            break;
          }
          default: throw 'Unhandled SDL event: ' + event.type;
        }
      },estimateTextWidth:function (fontData, text) {
        var h = fontData.size;
        var fontString = h + 'px ' + fontData.name;
        var tempCtx = SDL.ttfContext;
        tempCtx.save();
        tempCtx.font = fontString;
        var ret = tempCtx.measureText(text).width | 0;
        tempCtx.restore();
        return ret;
      },allocateChannels:function (num) { // called from Mix_AllocateChannels and init
        if (SDL.numChannels && SDL.numChannels >= num && num != 0) return;
        SDL.numChannels = num;
        SDL.channels = [];
        for (var i = 0; i < num; i++) {
          SDL.channels[i] = {
            audio: null,
            volume: 1.0
          };
        }
      },setGetVolume:function (info, volume) {
        if (!info) return 0;
        var ret = info.volume * 128; // MIX_MAX_VOLUME
        if (volume != -1) {
          info.volume = Math.min(Math.max(volume, 0), 128) / 128;
          if (info.audio) {
            try {
              info.audio.volume = info.volume; // For <audio> element
              if (info.audio.webAudioGainNode) info.audio.webAudioGainNode['gain']['value'] = info.volume; // For WebAudio playback
            } catch(e) {
              Module.printErr('setGetVolume failed to set audio volume: ' + e);
            }
          }
        }
        return ret;
      },setPannerPosition:function (info, x, y, z) {
        if (!info) return;
        if (info.audio) {
          if (info.audio.webAudioPannerNode) {
            info.audio.webAudioPannerNode['setPosition'](x, y, z);
          }
        }
      },playWebAudio:function (audio) {
        if (!audio) return;
        if (audio.webAudioNode) return; // This instance is already playing, don't start again.
        if (!SDL.webAudioAvailable()) return;
        try {
          var webAudio = audio.resource.webAudio;
          audio.paused = false;
          if (!webAudio.decodedBuffer) {
            if (webAudio.onDecodeComplete === undefined) abort("Cannot play back audio object that was not loaded");
            webAudio.onDecodeComplete.push(function() { if (!audio.paused) SDL.playWebAudio(audio); });
            return;
          }
          audio.webAudioNode = SDL.audioContext['createBufferSource']();
          audio.webAudioNode['buffer'] = webAudio.decodedBuffer;
          audio.webAudioNode['loop'] = audio.loop;
          audio.webAudioNode['onended'] = function() { audio['onended'](); } // For <media> element compatibility, route the onended signal to the instance.
  
          audio.webAudioPannerNode = SDL.audioContext['createPanner']();
          audio.webAudioPannerNode['panningModel'] = 'equalpower';
  
          // Add an intermediate gain node to control volume.
          audio.webAudioGainNode = SDL.audioContext['createGain']();
          audio.webAudioGainNode['gain']['value'] = audio.volume;
  
          audio.webAudioNode['connect'](audio.webAudioPannerNode);
          audio.webAudioPannerNode['connect'](audio.webAudioGainNode);
          audio.webAudioGainNode['connect'](SDL.audioContext['destination']);
  
          audio.webAudioNode['start'](0, audio.currentPosition);
          audio.startTime = SDL.audioContext['currentTime'] - audio.currentPosition;
        } catch(e) {
          Module.printErr('playWebAudio failed: ' + e);
        }
      },pauseWebAudio:function (audio) {
        if (!audio) return;
        if (audio.webAudioNode) {
          try {
            // Remember where we left off, so that if/when we resume, we can restart the playback at a proper place.
            audio.currentPosition = (SDL.audioContext['currentTime'] - audio.startTime) % audio.resource.webAudio.decodedBuffer.duration;
            // Important: When we reach here, the audio playback is stopped by the user. But when calling .stop() below, the Web Audio
            // graph will send the onended signal, but we don't want to process that, since pausing should not clear/destroy the audio
            // channel.
            audio.webAudioNode['onended'] = undefined;
            audio.webAudioNode.stop(0); // 0 is a default parameter, but WebKit is confused by it #3861
            audio.webAudioNode = undefined;
          } catch(e) {
            Module.printErr('pauseWebAudio failed: ' + e);
          }
        }
        audio.paused = true;
      },openAudioContext:function () {
        // Initialize Web Audio API if we haven't done so yet. Note: Only initialize Web Audio context ever once on the web page,
        // since initializing multiple times fails on Chrome saying 'audio resources have been exhausted'.
        if (!SDL.audioContext) {
          if (typeof(AudioContext) !== 'undefined') SDL.audioContext = new AudioContext();
          else if (typeof(webkitAudioContext) !== 'undefined') SDL.audioContext = new webkitAudioContext();
        }
      },webAudioAvailable:function () { return !!SDL.audioContext; },fillWebAudioBufferFromHeap:function (heapPtr, sizeSamplesPerChannel, dstAudioBuffer) {
        // The input audio data is interleaved across the channels, i.e. [L, R, L, R, L, R, ...] and is either 8-bit or 16-bit as
        // supported by the SDL API. The output audio wave data for Web Audio API must be in planar buffers of [-1,1]-normalized Float32 data,
        // so perform a buffer conversion for the data.
        var numChannels = SDL.audio.channels;
        for(var c = 0; c < numChannels; ++c) {
          var channelData = dstAudioBuffer['getChannelData'](c);
          if (channelData.length != sizeSamplesPerChannel) {
            throw 'Web Audio output buffer length mismatch! Destination size: ' + channelData.length + ' samples vs expected ' + sizeSamplesPerChannel + ' samples!';
          }
          if (SDL.audio.format == 0x8010 /*AUDIO_S16LSB*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              channelData[j] = (HEAP16[(((heapPtr)+((j*numChannels + c)*2))>>1)]) / 0x8000;
            }
          } else if (SDL.audio.format == 0x0008 /*AUDIO_U8*/) {
            for(var j = 0; j < sizeSamplesPerChannel; ++j) {
              var v = (HEAP8[(((heapPtr)+(j*numChannels + c))>>0)]);
              channelData[j] = ((v >= 0) ? v-128 : v+128) /128;
            }
          }
        }
      },debugSurface:function (surfData) {
        console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
        var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
        var data = image.data;
        var num = Math.min(surfData.width, surfData.height);
        for (var i = 0; i < num; i++) {
          console.log('   diagonal ' + i + ':' + [data[i*surfData.width*4 + i*4 + 0], data[i*surfData.width*4 + i*4 + 1], data[i*surfData.width*4 + i*4 + 2], data[i*surfData.width*4 + i*4 + 3]]);
        }
      },joystickEventState:1,lastJoystickState:{},joystickNamePool:{},recordJoystickState:function (joystick, state) {
        // Standardize button state.
        var buttons = new Array(state.buttons.length);
        for (var i = 0; i < state.buttons.length; i++) {
          buttons[i] = SDL.getJoystickButtonState(state.buttons[i]);
        }
  
        SDL.lastJoystickState[joystick] = {
          buttons: buttons,
          axes: state.axes.slice(0),
          timestamp: state.timestamp,
          index: state.index,
          id: state.id
        };
      },getJoystickButtonState:function (button) {
        if (typeof button === 'object') {
          // Current gamepad API editor's draft (Firefox Nightly)
          // https://dvcs.w3.org/hg/gamepad/raw-file/default/gamepad.html#idl-def-GamepadButton
          return button.pressed;
        } else {
          // Current gamepad API working draft (Firefox / Chrome Stable)
          // http://www.w3.org/TR/2012/WD-gamepad-20120529/#gamepad-interface
          return button > 0;
        }
      },queryJoysticks:function () {
        for (var joystick in SDL.lastJoystickState) {
          var state = SDL.getGamepad(joystick - 1);
          var prevState = SDL.lastJoystickState[joystick];
          // Check only if the timestamp has differed.
          // NOTE: Timestamp is not available in Firefox.
          if (typeof state.timestamp !== 'number' || state.timestamp !== prevState.timestamp) {
            var i;
            for (i = 0; i < state.buttons.length; i++) {
              var buttonState = SDL.getJoystickButtonState(state.buttons[i]);
              // NOTE: The previous state already has a boolean representation of
              //       its button, so no need to standardize its button state here.
              if (buttonState !== prevState.buttons[i]) {
                // Insert button-press event.
                SDL.events.push({
                  type: buttonState ? 'joystick_button_down' : 'joystick_button_up',
                  joystick: joystick,
                  index: joystick - 1,
                  button: i
                });
              }
            }
            for (i = 0; i < state.axes.length; i++) {
              if (state.axes[i] !== prevState.axes[i]) {
                // Insert axes-change event.
                SDL.events.push({
                  type: 'joystick_axis_motion',
                  joystick: joystick,
                  index: joystick - 1,
                  axis: i,
                  value: state.axes[i]
                });
              }
            }
  
            SDL.recordJoystickState(joystick, state);
          }
        }
      },joystickAxisValueConversion:function (value) {
        // Make sure value is properly clamped
        value = Math.min(1, Math.max(value, -1));
        // Ensures that 0 is 0, 1 is 32767, and -1 is 32768.
        return Math.ceil(((value+1) * 32767.5) - 32768);
      },getGamepads:function () {
        var fcn = navigator.getGamepads || navigator.webkitGamepads || navigator.mozGamepads || navigator.gamepads || navigator.webkitGetGamepads;
        if (fcn !== undefined) {
          // The function must be applied on the navigator object.
          return fcn.apply(navigator);
        } else {
          return [];
        }
      },getGamepad:function (deviceIndex) {
        var gamepads = SDL.getGamepads();
        if (gamepads.length > deviceIndex && deviceIndex >= 0) {
          return gamepads[deviceIndex];
        }
        return null;
      }};function _SDL_PauseAudio(pauseOn) {
      if (!SDL.audio) {
        return;
      }
      if (pauseOn) {
        if (SDL.audio.timer !== undefined) {
          clearTimeout(SDL.audio.timer);
          SDL.audio.numAudioTimersPending = 0;
          SDL.audio.timer = undefined;
        }
      } else if (!SDL.audio.timer) {
        // Start the audio playback timer callback loop.
        SDL.audio.numAudioTimersPending = 1;
        SDL.audio.timer = Browser.safeSetTimeout(SDL.audio.caller, 1);
      }
      SDL.audio.paused = pauseOn;
    }

  function _glDepthFunc(x0) { GLctx.depthFunc(x0) }

  
  
   
  Module["_i64Add"] = _i64Add;
  
   
  Module["_i64Subtract"] = _i64Subtract;
  
  var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_STATIC); 
  Module["_llvm_cttz_i32"] = _llvm_cttz_i32; 
  Module["___udivmoddi4"] = ___udivmoddi4; 
  Module["___uremdi3"] = ___uremdi3;

  function _pthread_mutexattr_init() {}

  function _glUniform1f(location, v0) {
      location = GL.uniforms[location];
      GLctx.uniform1f(location, v0);
    }

  function _glCreateShader(shaderType) {
      var id = GL.getNewId(GL.shaders);
      GL.shaders[id] = GLctx.createShader(shaderType);
      return id;
    }

  function _glUniform1i(location, v0) {
      location = GL.uniforms[location];
      GLctx.uniform1i(location, v0);
    }

  function _glGenRenderbuffers(n, renderbuffers) {
      for (var i = 0; i < n; i++) {
        var renderbuffer = GLctx.createRenderbuffer();
        if (!renderbuffer) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
          while(i < n) HEAP32[(((renderbuffers)+(i++*4))>>2)]=0;
          return;
        }
        var id = GL.getNewId(GL.renderbuffers);
        renderbuffer.name = id;
        GL.renderbuffers[id] = renderbuffer;
        HEAP32[(((renderbuffers)+(i*4))>>2)]=id;
      }
    }

  
  
  function emscriptenWebGLComputeImageSize(width, height, sizePerPixel, alignment) {
      function roundedToNextMultipleOf(x, y) {
        return Math.floor((x + y - 1) / y) * y
      }
      var plainRowSize = width * sizePerPixel;
      var alignedRowSize = roundedToNextMultipleOf(plainRowSize, alignment);
      return (height <= 0) ? 0 :
               ((height - 1) * alignedRowSize + plainRowSize);
    }function emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat) {
      var sizePerPixel;
      var numChannels;
      switch(format) {
        case 0x1906 /* GL_ALPHA */:
        case 0x1909 /* GL_LUMINANCE */:
        case 0x1902 /* GL_DEPTH_COMPONENT */:
          numChannels = 1;
          break;
        case 0x190A /* GL_LUMINANCE_ALPHA */:
          numChannels = 2;
          break;
        case 0x1907 /* GL_RGB */:
        case 0x8C40 /* GL_SRGB_EXT */:
          numChannels = 3;
          break;
        case 0x1908 /* GL_RGBA */:
        case 0x8C42 /* GL_SRGB_ALPHA_EXT */:
          numChannels = 4;
          break;
        default:
          GL.recordError(0x0500); // GL_INVALID_ENUM
          return null;
      }
      switch (type) {
        case 0x1401 /* GL_UNSIGNED_BYTE */:
          sizePerPixel = numChannels*1;
          break;
        case 0x1403 /* GL_UNSIGNED_SHORT */:
        case 0x8D61 /* GL_HALF_FLOAT_OES */:
          sizePerPixel = numChannels*2;
          break;
        case 0x1405 /* GL_UNSIGNED_INT */:
        case 0x1406 /* GL_FLOAT */:
          sizePerPixel = numChannels*4;
          break;
        case 0x84FA /* GL_UNSIGNED_INT_24_8_WEBGL/GL_UNSIGNED_INT_24_8 */:
          sizePerPixel = 4;
          break;
        case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
        case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
        case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
          sizePerPixel = 2;
          break;
        default:
          GL.recordError(0x0500); // GL_INVALID_ENUM
          return null;
      }
      var bytes = emscriptenWebGLComputeImageSize(width, height, sizePerPixel, GL.unpackAlignment);
      switch(type) {
        case 0x1401 /* GL_UNSIGNED_BYTE */:
          return HEAPU8.subarray((pixels),(pixels+bytes));
        case 0x1406 /* GL_FLOAT */:
          return HEAPF32.subarray((pixels)>>2,(pixels+bytes)>>2);
        case 0x1405 /* GL_UNSIGNED_INT */:
        case 0x84FA /* GL_UNSIGNED_INT_24_8_WEBGL/GL_UNSIGNED_INT_24_8 */:
          return HEAPU32.subarray((pixels)>>2,(pixels+bytes)>>2);
        case 0x1403 /* GL_UNSIGNED_SHORT */:
        case 0x8363 /* GL_UNSIGNED_SHORT_5_6_5 */:
        case 0x8033 /* GL_UNSIGNED_SHORT_4_4_4_4 */:
        case 0x8034 /* GL_UNSIGNED_SHORT_5_5_5_1 */:
        case 0x8D61 /* GL_HALF_FLOAT_OES */:
          return HEAPU16.subarray((pixels)>>1,(pixels+bytes)>>1);
        default:
          GL.recordError(0x0500); // GL_INVALID_ENUM
          return null;
      }
    }function _glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels) {
      var pixelData = null;
      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, 0);
      GLctx.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixelData);
    }

  function _glDisable(x0) { GLctx.disable(x0) }

  function _glBlendFuncSeparate(x0, x1, x2, x3) { GLctx.blendFuncSeparate(x0, x1, x2, x3) }

   
  Module["_memset"] = _memset;

  function _glGetProgramiv(program, pname, p) {
      if (!p) {
        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense
        // if p == null, issue a GL error to notify user about it. 
        GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        return;
      }
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        var log = GLctx.getProgramInfoLog(GL.programs[program]);
        if (log === null) log = '(unknown error)';
        HEAP32[((p)>>2)]=log.length + 1;
      } else if (pname == 0x8B87 /* GL_ACTIVE_UNIFORM_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          HEAP32[((p)>>2)]=ptable.maxUniformLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else if (pname == 0x8B8A /* GL_ACTIVE_ATTRIBUTE_MAX_LENGTH */) {
        var ptable = GL.programInfos[program];
        if (ptable) {
          if (ptable.maxAttributeLength == -1) {
            var program = GL.programs[program];
            var numAttribs = GLctx.getProgramParameter(program, GLctx.ACTIVE_ATTRIBUTES);
            ptable.maxAttributeLength = 0; // Spec says if there are no active attribs, 0 must be returned.
            for (var i = 0; i < numAttribs; ++i) {
              var activeAttrib = GLctx.getActiveAttrib(program, i);
              ptable.maxAttributeLength = Math.max(ptable.maxAttributeLength, activeAttrib.name.length+1);
            }
          }
          HEAP32[((p)>>2)]=ptable.maxAttributeLength;
          return;
        } else if (program < GL.counter) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
        } else {
          GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        }
      } else {
        HEAP32[((p)>>2)]=GLctx.getProgramParameter(GL.programs[program], pname);
      }
    }

  function _glColorMask(x0, x1, x2, x3) { GLctx.colorMask(x0, x1, x2, x3) }

  function _emscripten_exit_pointerlock() {
      // Make sure no queued up calls will fire after this.
      JSEvents.removeDeferredCalls(JSEvents.requestPointerLock);
  
      if (document.exitPointerLock) {
        document.exitPointerLock();
      } else if (document.msExitPointerLock) {
        document.msExitPointerLock();
      } else if (document.mozExitPointerLock) {
        document.mozExitPointerLock();
      } else if (document.webkitExitPointerLock) {
        document.webkitExitPointerLock();
      } else {
        return -1;
      }
      return 0;
    }

  function _emscripten_async_wget_data(url, arg, onload, onerror) {
      Browser.asyncLoad(Pointer_stringify(url), function(byteArray) {
        var buffer = _malloc(byteArray.length);
        HEAPU8.set(byteArray, buffer);
        Runtime.dynCall('viii', onload, [arg, buffer, byteArray.length]);
        _free(buffer);
      }, function() {
        if (onerror) Runtime.dynCall('vi', onerror, [arg]);
      }, true /* no need for run dependency, this is async but will not do any prepare etc. step */ );
    }


  function _glGetUniformLocation(program, name) {
      name = Pointer_stringify(name);
  
      var arrayOffset = 0;
      // If user passed an array accessor "[index]", parse the array index off the accessor.
      if (name.indexOf(']', name.length-1) !== -1) {
        var ls = name.lastIndexOf('[');
        var arrayIndex = name.slice(ls+1, -1);
        if (arrayIndex.length > 0) {
          arrayOffset = parseInt(arrayIndex);
          if (arrayOffset < 0) {
            return -1;
          }
        }
        name = name.slice(0, ls);
      }
  
      var ptable = GL.programInfos[program];
      if (!ptable) {
        return -1;
      }
      var utable = ptable.uniforms;
      var uniformInfo = utable[name]; // returns pair [ dimension_of_uniform_array, uniform_location ]
      if (uniformInfo && arrayOffset < uniformInfo[0]) { // Check if user asked for an out-of-bounds element, i.e. for 'vec4 colors[3];' user could ask for 'colors[10]' which should return -1.
        return uniformInfo[1]+arrayOffset;
      } else {
        return -1;
      }
    }

   
  Module["___divdi3"] = ___divdi3;

  function _emscripten_set_touchcancel_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerTouchEventCallback(target, userData, useCapture, callbackfunc, 25, "touchcancel");
      return 0;
    }

  function _glBindFramebuffer(target, framebuffer) {
      GLctx.bindFramebuffer(target, framebuffer ? GL.framebuffers[framebuffer] : null);
    }

  function ___lock() {}

  function _glCullFace(x0) { GLctx.cullFace(x0) }

  function _glUniform4fv(location, count, value) {
      location = GL.uniforms[location];
      var view;
      if (4*count <= GL.MINI_TEMP_BUFFER_SIZE) {
        // avoid allocation when uploading few enough uniforms
        view = GL.miniTempBufferViews[4*count-1];
        for (var i = 0; i < 4*count; i += 4) {
          view[i] = HEAPF32[(((value)+(4*i))>>2)];
          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];
          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];
          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*16)>>2);
      }
      GLctx.uniform4fv(location, view);
    }

  var _llvm_fabs_f32=Math_abs;

  function _emscripten_set_keyup_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerKeyEventCallback(target, userData, useCapture, callbackfunc, 3, "keyup");
      return 0;
    }

  function _glDeleteProgram(id) {
      if (!id) return;
      var program = GL.programs[id];
      if (!program) { // glDeleteProgram actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.
        GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        return;
      }
      GLctx.deleteProgram(program);
      program.name = 0;
      GL.programs[id] = null;
      GL.programInfos[id] = null;
    }

  function _glVertexAttribDivisor(index, divisor) {
      GLctx['vertexAttribDivisor'](index, divisor);
    }

  function _glRenderbufferStorage(x0, x1, x2, x3) { GLctx.renderbufferStorage(x0, x1, x2, x3) }

  function _glAttachShader(program, shader) {
      GLctx.attachShader(GL.programs[program],
                              GL.shaders[shader]);
    }

  function _emscripten_set_mousedown_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerMouseEventCallback(target, userData, useCapture, callbackfunc, 5, "mousedown");
      return 0;
    }

  function _glCheckFramebufferStatus(x0) { return GLctx.checkFramebufferStatus(x0) }

  function _emscripten_set_mousemove_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerMouseEventCallback(target, userData, useCapture, callbackfunc, 8, "mousemove");
      return 0;
    }

  function _glUniform3f(location, v0, v1, v2) {
      location = GL.uniforms[location];
      GLctx.uniform3f(location, v0, v1, v2);
    }

  function _glBindAttribLocation(program, index, name) {
      name = Pointer_stringify(name);
      GLctx.bindAttribLocation(GL.programs[program], index, name);
    }

  function _emscripten_get_canvas_size(width, height, isFullscreen) {
      var canvas = Module['canvas'];
      HEAP32[((width)>>2)]=canvas.width;
      HEAP32[((height)>>2)]=canvas.height;
      HEAP32[((isFullscreen)>>2)]=Browser.isFullScreen ? 1 : 0;
    }

  function _glDrawElements(mode, count, type, indices) {
  
      GLctx.drawElements(mode, count, type, indices);
  
    }

  function _emscripten_webgl_init_context_attributes(attributes) {
      HEAP32[((attributes)>>2)]=1;
      HEAP32[(((attributes)+(4))>>2)]=1;
      HEAP32[(((attributes)+(8))>>2)]=0;
      HEAP32[(((attributes)+(12))>>2)]=1;
      HEAP32[(((attributes)+(16))>>2)]=1;
      HEAP32[(((attributes)+(20))>>2)]=0;
      HEAP32[(((attributes)+(24))>>2)]=0;
      HEAP32[(((attributes)+(28))>>2)]=0;
      HEAP32[(((attributes)+(32))>>2)]=1;
      HEAP32[(((attributes)+(36))>>2)]=0;
      HEAP32[(((attributes)+(40))>>2)]=1;
    }

  
  var SYSCALLS={varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

   
  Module["___udivdi3"] = ___udivdi3;

  function _glBufferSubData(target, offset, size, data) {
      GLctx.bufferSubData(target, offset, HEAPU8.subarray(data, data+size));
    }

  function _glGetShaderiv(shader, pname, p) {
      if (!p) {
        // GLES2 specification does not specify how to behave if p is a null pointer. Since calling this function does not make sense
        // if p == null, issue a GL error to notify user about it. 
        GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        return;
      }
      if (pname == 0x8B84) { // GL_INFO_LOG_LENGTH
        var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
        if (log === null) log = '(unknown error)';
        HEAP32[((p)>>2)]=log.length + 1;
      } else {
        HEAP32[((p)>>2)]=GLctx.getShaderParameter(GL.shaders[shader], pname);
      }
    }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      // hack to support printf in NO_FILESYSTEM
      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      var ret = 0;
      if (!___syscall146.buffer) {
        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr
        ___syscall146.printChar = function(stream, curr) {
          var buffer = ___syscall146.buffers[stream];
          assert(buffer);
          if (curr === 0 || curr === 10) {
            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));
            buffer.length = 0;
          } else {
            buffer.push(curr);
          }
        };
      }
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          ___syscall146.printChar(stream, HEAPU8[ptr+j]);
        }
        ret += len;
      }
      return ret;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _glBlendColor(x0, x1, x2, x3) { GLctx.blendColor(x0, x1, x2, x3) }



  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function _emscripten_set_touchmove_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerTouchEventCallback(target, userData, useCapture, callbackfunc, 24, "touchmove");
      return 0;
    }

  function _emscripten_set_touchend_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerTouchEventCallback(target, userData, useCapture, callbackfunc, 23, "touchend");
      return 0;
    }

  function _glDisableVertexAttribArray(index) {
      GLctx.disableVertexAttribArray(index);
    }

  
  
  function __setLetterbox(element, topBottom, leftRight) {
      if (JSEvents.isInternetExplorer()) {
        // Cannot use padding on IE11, because IE11 computes padding in addition to the size, unlike
        // other browsers, which treat padding to be part of the size.
        // e.g.
        // FF, Chrome: If CSS size = 1920x1080, padding-leftright = 460, padding-topbottomx40, then content size = (1920 - 2*460) x (1080-2*40) = 1000x1000px, and total element size = 1920x1080px.
        //       IE11: If CSS size = 1920x1080, padding-leftright = 460, padding-topbottomx40, then content size = 1920x1080px and total element size = (1920+2*460) x (1080+2*40)px.
        // IE11  treats margin like Chrome and FF treat padding.
        element.style.marginLeft = element.style.marginRight = leftRight + 'px';
        element.style.marginTop = element.style.marginBottom = topBottom + 'px';
      } else {
        // Cannot use margin to specify letterboxes in FF or Chrome, since those ignore margins in fullscreen mode.
        element.style.paddingLeft = element.style.paddingRight = leftRight + 'px';
        element.style.paddingTop = element.style.paddingBottom = topBottom + 'px';
      }
    }function _emscripten_do_request_fullscreen(target, strategy) {
      if (typeof JSEvents.fullscreenEnabled() === 'undefined') return -1;
      if (!JSEvents.fullscreenEnabled()) return -3;
      if (!target) target = '#canvas';
      target = JSEvents.findEventTarget(target);
      if (!target) return -4;
  
      if (!target.requestFullscreen && !target.msRequestFullscreen && !target.mozRequestFullScreen && !target.mozRequestFullscreen && !target.webkitRequestFullscreen) {
        return -3;
      }
  
      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();
  
      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.
      if (!canPerformRequests) {
        if (strategy.deferUntilInEventHandler) {
          JSEvents.deferCall(JSEvents.requestFullscreen, 1 /* priority over pointer lock */, [target, strategy]);
          return 1;
        } else {
          return -2;
        }
      }
  
      return JSEvents.requestFullscreen(target, strategy);
    }
  
  var __currentFullscreenStrategy={};
  
  function __registerRestoreOldStyle(canvas) {
      var oldWidth = canvas.width;
      var oldHeight = canvas.height;
      var oldCssWidth = canvas.style.width;
      var oldCssHeight = canvas.style.height;
      var oldBackgroundColor = canvas.style.backgroundColor; // Chrome reads color from here.
      var oldDocumentBackgroundColor = document.body.style.backgroundColor; // IE11 reads color from here.
      // Firefox always has black background color.
      var oldPaddingLeft = canvas.style.paddingLeft; // Chrome, FF, Safari
      var oldPaddingRight = canvas.style.paddingRight;
      var oldPaddingTop = canvas.style.paddingTop;
      var oldPaddingBottom = canvas.style.paddingBottom;
      var oldMarginLeft = canvas.style.marginLeft; // IE11
      var oldMarginRight = canvas.style.marginRight;
      var oldMarginTop = canvas.style.marginTop;
      var oldMarginBottom = canvas.style.marginBottom;
      var oldDocumentBodyMargin = document.body.style.margin;
      var oldDocumentOverflow = document.documentElement.style.overflow; // Chrome, Firefox
      var oldDocumentScroll = document.body.scroll; // IE
      var oldImageRendering = canvas.style.imageRendering;
  
      function restoreOldStyle() {
        var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement || document.msFullscreenElement;
        if (!fullscreenElement) {
          document.removeEventListener('fullscreenchange', restoreOldStyle);
          document.removeEventListener('mozfullscreenchange', restoreOldStyle);
          document.removeEventListener('webkitfullscreenchange', restoreOldStyle);
          document.removeEventListener('MSFullscreenChange', restoreOldStyle);
  
          canvas.width = oldWidth;
          canvas.height = oldHeight;
          canvas.style.width = oldCssWidth;
          canvas.style.height = oldCssHeight;
          canvas.style.backgroundColor = oldBackgroundColor; // Chrome
          // IE11 hack: assigning 'undefined' or an empty string to document.body.style.backgroundColor has no effect, so first assign back the default color
          // before setting the undefined value. Setting undefined value is also important, or otherwise we would later treat that as something that the user
          // had explicitly set so subsequent fullscreen transitions would not set background color properly.
          if (!oldDocumentBackgroundColor) document.body.style.backgroundColor = 'white';
          document.body.style.backgroundColor = oldDocumentBackgroundColor; // IE11
          canvas.style.paddingLeft = oldPaddingLeft; // Chrome, FF, Safari
          canvas.style.paddingRight = oldPaddingRight;
          canvas.style.paddingTop = oldPaddingTop;
          canvas.style.paddingBottom = oldPaddingBottom;
          canvas.style.marginLeft = oldMarginLeft; // IE11
          canvas.style.marginRight = oldMarginRight;
          canvas.style.marginTop = oldMarginTop;
          canvas.style.marginBottom = oldMarginBottom;
          document.body.style.margin = oldDocumentBodyMargin;
          document.documentElement.style.overflow = oldDocumentOverflow; // Chrome, Firefox
          document.body.scroll = oldDocumentScroll; // IE
          canvas.style.imageRendering = oldImageRendering;
          if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, oldWidth, oldHeight);
  
          if (__currentFullscreenStrategy.canvasResizedCallback) {
            Runtime.dynCall('iiii', __currentFullscreenStrategy.canvasResizedCallback, [37, 0, __currentFullscreenStrategy.canvasResizedCallbackUserData]);
          }
        }
      }
      document.addEventListener('fullscreenchange', restoreOldStyle);
      document.addEventListener('mozfullscreenchange', restoreOldStyle);
      document.addEventListener('webkitfullscreenchange', restoreOldStyle);
      document.addEventListener('MSFullscreenChange', restoreOldStyle);
      return restoreOldStyle;
    }function _emscripten_request_fullscreen_strategy(target, deferUntilInEventHandler, fullscreenStrategy) {
      var strategy = {};
      strategy.scaleMode = HEAP32[((fullscreenStrategy)>>2)];
      strategy.canvasResolutionScaleMode = HEAP32[(((fullscreenStrategy)+(4))>>2)];
      strategy.filteringMode = HEAP32[(((fullscreenStrategy)+(8))>>2)];
      strategy.deferUntilInEventHandler = deferUntilInEventHandler;
      strategy.canvasResizedCallback = HEAP32[(((fullscreenStrategy)+(12))>>2)];
      strategy.canvasResizedCallbackUserData = HEAP32[(((fullscreenStrategy)+(16))>>2)];
      __currentFullscreenStrategy = strategy;
  
      return _emscripten_do_request_fullscreen(target, strategy);
    }

  function _glShaderSource(shader, count, string, length) {
      var source = GL.getSource(shader, count, string, length);
      GLctx.shaderSource(GL.shaders[shader], source);
    }

  function _glBindRenderbuffer(target, renderbuffer) {
      GLctx.bindRenderbuffer(target, renderbuffer ? GL.renderbuffers[renderbuffer] : null);
    }

  function _glCompressedTexImage2D(target, level, internalFormat, width, height, border, imageSize, data) {
      var heapView;
      if (data) {
        heapView = HEAPU8.subarray((data),(data+imageSize));
      } else {
        heapView = null;
      }
      GLctx['compressedTexImage2D'](target, level, internalFormat, width, height, border, heapView);
    }

  function _glDeleteFramebuffers(n, framebuffers) {
      for (var i = 0; i < n; ++i) {
        var id = HEAP32[(((framebuffers)+(i*4))>>2)];
        var framebuffer = GL.framebuffers[id];
        if (!framebuffer) continue; // GL spec: "glDeleteFramebuffers silently ignores 0s and names that do not correspond to existing framebuffer objects".
        GLctx.deleteFramebuffer(framebuffer);
        framebuffer.name = 0;
        GL.framebuffers[id] = null;
      }
    }

  function _glDrawArrays(mode, first, count) {
  
      GLctx.drawArrays(mode, first, count);
  
    }

  function _emscripten_set_touchstart_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerTouchEventCallback(target, userData, useCapture, callbackfunc, 22, "touchstart");
      return 0;
    }

  function _emscripten_set_deviceorientation_callback(userData, useCapture, callbackfunc) {
      JSEvents.registerDeviceOrientationEventCallback(window, userData, useCapture, callbackfunc, 16, "deviceorientation");
      return 0;
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  function _emscripten_set_keypress_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerKeyEventCallback(target, userData, useCapture, callbackfunc, 1, "keypress");
      return 0;
    }

  
  function _usleep(useconds) {
      // int usleep(useconds_t useconds);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/usleep.html
      // We're single-threaded, so use a busy loop. Super-ugly.
      var msec = useconds / 1000;
      if ((ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && self['performance'] && self['performance']['now']) {
        var start = self['performance']['now']();
        while (self['performance']['now']() - start < msec) {
          // Do nothing.
        }
      } else {
        var start = Date.now();
        while (Date.now() - start < msec) {
          // Do nothing.
        }
      }
      return 0;
    }function _nanosleep(rqtp, rmtp) {
      // int nanosleep(const struct timespec  *rqtp, struct timespec *rmtp);
      var seconds = HEAP32[((rqtp)>>2)];
      var nanoseconds = HEAP32[(((rqtp)+(4))>>2)];
      if (rmtp !== 0) {
        HEAP32[((rmtp)>>2)]=0;
        HEAP32[(((rmtp)+(4))>>2)]=0;
      }
      return _usleep((seconds * 1e6) + (nanoseconds / 1000));
    }

  function _glClear(x0) { GLctx.clear(x0) }

  function ___atomic_load_8(ptr, memmodel) {
      return ((asm["setTempRet0"](HEAP32[(((ptr)+(4))>>2)]),HEAP32[((ptr)>>2)])|0);
    }

  function _glUniform2f(location, v0, v1) {
      location = GL.uniforms[location];
      GLctx.uniform2f(location, v0, v1);
    }

  function _glActiveTexture(x0) { GLctx.activeTexture(x0) }

  function _glEnableVertexAttribArray(index) {
      GLctx.enableVertexAttribArray(index);
    }

  function _glBindBuffer(target, buffer) {
      var bufferObj = buffer ? GL.buffers[buffer] : null;
  
  
      GLctx.bindBuffer(target, bufferObj);
    }

  function _glStencilOp(x0, x1, x2) { GLctx.stencilOp(x0, x1, x2) }

  function _glUniform4f(location, v0, v1, v2, v3) {
      location = GL.uniforms[location];
      GLctx.uniform4f(location, v0, v1, v2, v3);
    }

  function ___gxx_personality_v0() {
    }

  function _glUniformMatrix2fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (4*count <= GL.MINI_TEMP_BUFFER_SIZE) {
        // avoid allocation when uploading few enough uniforms
        view = GL.miniTempBufferViews[4*count-1];
        for (var i = 0; i < 4*count; i += 4) {
          view[i] = HEAPF32[(((value)+(4*i))>>2)];
          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];
          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];
          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*16)>>2);
      }
      GLctx.uniformMatrix2fv(location, transpose, view);
    }

  function _emscripten_request_pointerlock(target, deferUntilInEventHandler) {
      if (!target) target = '#canvas';
      target = JSEvents.findEventTarget(target);
      if (!target) return -4;
      if (!target.requestPointerLock && !target.mozRequestPointerLock && !target.webkitRequestPointerLock && !target.msRequestPointerLock) {
        return -1;
      }
  
      var canPerformRequests = JSEvents.canPerformEventHandlerRequests();
  
      // Queue this function call if we're not currently in an event handler and the user saw it appropriate to do so.
      if (!canPerformRequests) {
        if (deferUntilInEventHandler) {
          JSEvents.deferCall(JSEvents.requestPointerLock, 2 /* priority below fullscreen */, [target]);
          return 1;
        } else {
          return -2;
        }
      }
  
      return JSEvents.requestPointerLock(target);
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function _glUniformMatrix3fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (9*count <= GL.MINI_TEMP_BUFFER_SIZE) {
        // avoid allocation when uploading few enough uniforms
        view = GL.miniTempBufferViews[9*count-1];
        for (var i = 0; i < 9*count; i += 9) {
          view[i] = HEAPF32[(((value)+(4*i))>>2)];
          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];
          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];
          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];
          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];
          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];
          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];
          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];
          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*36)>>2);
      }
      GLctx.uniformMatrix3fv(location, transpose, view);
    }

  function _glBufferData(target, size, data, usage) {
      switch (usage) { // fix usages, WebGL only has *_DRAW
        case 0x88E1: // GL_STREAM_READ
        case 0x88E2: // GL_STREAM_COPY
          usage = 0x88E0; // GL_STREAM_DRAW
          break;
        case 0x88E5: // GL_STATIC_READ
        case 0x88E6: // GL_STATIC_COPY
          usage = 0x88E4; // GL_STATIC_DRAW
          break;
        case 0x88E9: // GL_DYNAMIC_READ
        case 0x88EA: // GL_DYNAMIC_COPY
          usage = 0x88E8; // GL_DYNAMIC_DRAW
          break;
      }
      if (!data) {
        GLctx.bufferData(target, size, usage);
      } else {
        GLctx.bufferData(target, HEAPU8.subarray(data, data+size), usage);
      }
    }

  function _emscripten_webgl_create_context(target, attributes) {
      var contextAttributes = {};
      contextAttributes.alpha = !!HEAP32[((attributes)>>2)];
      contextAttributes.depth = !!HEAP32[(((attributes)+(4))>>2)];
      contextAttributes.stencil = !!HEAP32[(((attributes)+(8))>>2)];
      contextAttributes.antialias = !!HEAP32[(((attributes)+(12))>>2)];
      contextAttributes.premultipliedAlpha = !!HEAP32[(((attributes)+(16))>>2)];
      contextAttributes.preserveDrawingBuffer = !!HEAP32[(((attributes)+(20))>>2)];
      contextAttributes.preferLowPowerToHighPerformance = !!HEAP32[(((attributes)+(24))>>2)];
      contextAttributes.failIfMajorPerformanceCaveat = !!HEAP32[(((attributes)+(28))>>2)];
      contextAttributes.majorVersion = HEAP32[(((attributes)+(32))>>2)];
      contextAttributes.minorVersion = HEAP32[(((attributes)+(36))>>2)];
      var enableExtensionsByDefault = HEAP32[(((attributes)+(40))>>2)];
  
      if (!target) {
        target = Module['canvas'];
      } else {
        target = JSEvents.findEventTarget(target);
      }
      var contextHandle = GL.createContext(target, contextAttributes);
      return contextHandle;
    }

  function _glGetError() {
      // First return any GL error generated by the emscripten library_gl.js interop layer.
      if (GL.lastError) {
        var error = GL.lastError;
        GL.lastError = 0/*GL_NO_ERROR*/;
        return error;
      } else { // If there were none, return the GL error from the browser GL context.
        return GLctx.getError();
      }
    }

  function _glDeleteRenderbuffers(n, renderbuffers) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((renderbuffers)+(i*4))>>2)];
        var renderbuffer = GL.renderbuffers[id];
        if (!renderbuffer) continue; // GL spec: "glDeleteRenderbuffers silently ignores 0s and names that do not correspond to existing renderbuffer objects".
        GLctx.deleteRenderbuffer(renderbuffer);
        renderbuffer.name = 0;
        GL.renderbuffers[id] = null;
      }
    }

   
  Module["_pthread_mutex_unlock"] = _pthread_mutex_unlock;

  function _glVertexAttribPointer(index, size, type, normalized, stride, ptr) {
      GLctx.vertexAttribPointer(index, size, type, normalized, stride, ptr);
    }

  function _emscripten_set_keydown_callback(target, userData, useCapture, callbackfunc) {
      JSEvents.registerKeyEventCallback(target, userData, useCapture, callbackfunc, 2, "keydown");
      return 0;
    }

  
  function emscriptenWebGLGet(name_, p, type) {
      // Guard against user passing a null pointer.
      // Note that GLES2 spec does not say anything about how passing a null pointer should be treated.
      // Testing on desktop core GL 3, the application crashes on glGetIntegerv to a null pointer, but
      // better to report an error instead of doing anything random.
      if (!p) {
        GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        return;
      }
      var ret = undefined;
      switch(name_) { // Handle a few trivial GLES values
        case 0x8DFA: // GL_SHADER_COMPILER
          ret = 1;
          break;
        case 0x8DF8: // GL_SHADER_BINARY_FORMATS
          if (type !== 'Integer' && type !== 'Integer64') {
            GL.recordError(0x0500); // GL_INVALID_ENUM
          }
          return; // Do not write anything to the out pointer, since no binary formats are supported.
        case 0x8DF9: // GL_NUM_SHADER_BINARY_FORMATS
          ret = 0;
          break;
        case 0x86A2: // GL_NUM_COMPRESSED_TEXTURE_FORMATS
          // WebGL doesn't have GL_NUM_COMPRESSED_TEXTURE_FORMATS (it's obsolete since GL_COMPRESSED_TEXTURE_FORMATS returns a JS array that can be queried for length),
          // so implement it ourselves to allow C++ GLES2 code get the length.
          var formats = GLctx.getParameter(0x86A3 /*GL_COMPRESSED_TEXTURE_FORMATS*/);
          ret = formats.length;
          break;
        case 0x8B9A: // GL_IMPLEMENTATION_COLOR_READ_TYPE
          ret = 0x1401; // GL_UNSIGNED_BYTE
          break;
        case 0x8B9B: // GL_IMPLEMENTATION_COLOR_READ_FORMAT
          ret = 0x1908; // GL_RGBA
          break;
      }
  
      if (ret === undefined) {
        var result = GLctx.getParameter(name_);
        switch (typeof(result)) {
          case "number":
            ret = result;
            break;
          case "boolean":
            ret = result ? 1 : 0;
            break;
          case "string":
            GL.recordError(0x0500); // GL_INVALID_ENUM
            return;
          case "object":
            if (result === null) {
              // null is a valid result for some (e.g., which buffer is bound - perhaps nothing is bound), but otherwise
              // can mean an invalid name_, which we need to report as an error
              switch(name_) {
                case 0x8894: // ARRAY_BUFFER_BINDING
                case 0x8B8D: // CURRENT_PROGRAM
                case 0x8895: // ELEMENT_ARRAY_BUFFER_BINDING
                case 0x8CA6: // FRAMEBUFFER_BINDING
                case 0x8CA7: // RENDERBUFFER_BINDING
                case 0x8069: // TEXTURE_BINDING_2D
                case 0x8514: { // TEXTURE_BINDING_CUBE_MAP
                  ret = 0;
                  break;
                }
                default: {
                  GL.recordError(0x0500); // GL_INVALID_ENUM
                  return;
                }
              }
            } else if (result instanceof Float32Array ||
                       result instanceof Uint32Array ||
                       result instanceof Int32Array ||
                       result instanceof Array) {
              for (var i = 0; i < result.length; ++i) {
                switch (type) {
                  case 'Integer': HEAP32[(((p)+(i*4))>>2)]=result[i];   break;
                  case 'Float':   HEAPF32[(((p)+(i*4))>>2)]=result[i]; break;
                  case 'Boolean': HEAP8[(((p)+(i))>>0)]=result[i] ? 1 : 0;    break;
                  default: throw 'internal glGet error, bad type: ' + type;
                }
              }
              return;
            } else if (result instanceof WebGLBuffer ||
                       result instanceof WebGLProgram ||
                       result instanceof WebGLFramebuffer ||
                       result instanceof WebGLRenderbuffer ||
                       result instanceof WebGLTexture) {
              ret = result.name | 0;
            } else {
              GL.recordError(0x0500); // GL_INVALID_ENUM
              return;
            }
            break;
          default:
            GL.recordError(0x0500); // GL_INVALID_ENUM
            return;
        }
      }
  
      switch (type) {
        case 'Integer64': (tempI64 = [ret>>>0,(tempDouble=ret,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((p)>>2)]=tempI64[0],HEAP32[(((p)+(4))>>2)]=tempI64[1]);    break;
        case 'Integer': HEAP32[((p)>>2)]=ret;    break;
        case 'Float':   HEAPF32[((p)>>2)]=ret;  break;
        case 'Boolean': HEAP8[((p)>>0)]=ret ? 1 : 0; break;
        default: throw 'internal glGet error, bad type: ' + type;
      }
    }function _glGetIntegerv(name_, p) {
      emscriptenWebGLGet(name_, p, 'Integer');
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _glStencilFunc(x0, x1, x2) { GLctx.stencilFunc(x0, x1, x2) }

  function _pthread_mutex_destroy() {}

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _SDL_OpenAudio(desired, obtained) {
      try {
        SDL.audio = {
          freq: HEAPU32[((desired)>>2)],
          format: HEAPU16[(((desired)+(4))>>1)],
          channels: HEAPU8[(((desired)+(6))>>0)],
          samples: HEAPU16[(((desired)+(8))>>1)], // Samples in the CB buffer per single sound channel.
          callback: HEAPU32[(((desired)+(16))>>2)],
          userdata: HEAPU32[(((desired)+(20))>>2)],
          paused: true,
          timer: null
        };
        // The .silence field tells the constant sample value that corresponds to the safe un-skewed silence value for the wave data.
        if (SDL.audio.format == 0x0008 /*AUDIO_U8*/) {
          SDL.audio.silence = 128; // Audio ranges in [0, 255], so silence is half-way in between.
        } else if (SDL.audio.format == 0x8010 /*AUDIO_S16LSB*/) {
          SDL.audio.silence = 0; // Signed data in range [-32768, 32767], silence is 0.
        } else {
          throw 'Invalid SDL audio format ' + SDL.audio.format + '!';
        }
        // Round the desired audio frequency up to the next 'common' frequency value.
        // Web Audio API spec states 'An implementation must support sample-rates in at least the range 22050 to 96000.'
        if (SDL.audio.freq <= 0) {
          throw 'Unsupported sound frequency ' + SDL.audio.freq + '!';
        } else if (SDL.audio.freq <= 22050) {
          SDL.audio.freq = 22050; // Take it safe and clamp everything lower than 22kHz to that.
        } else if (SDL.audio.freq <= 32000) {
          SDL.audio.freq = 32000;
        } else if (SDL.audio.freq <= 44100) {
          SDL.audio.freq = 44100;
        } else if (SDL.audio.freq <= 48000) {
          SDL.audio.freq = 48000;
        } else if (SDL.audio.freq <= 96000) {
          SDL.audio.freq = 96000;
        } else {
          throw 'Unsupported sound frequency ' + SDL.audio.freq + '!';
        }
        if (SDL.audio.channels == 0) {
          SDL.audio.channels = 1; // In SDL both 0 and 1 mean mono.
        } else if (SDL.audio.channels < 0 || SDL.audio.channels > 32) {
          throw 'Unsupported number of audio channels for SDL audio: ' + SDL.audio.channels + '!';
        } else if (SDL.audio.channels != 1 && SDL.audio.channels != 2) { // Unsure what SDL audio spec supports. Web Audio spec supports up to 32 channels.
          console.log('Warning: Using untested number of audio channels ' + SDL.audio.channels);
        }
        if (SDL.audio.samples < 128 || SDL.audio.samples > 524288 /* arbitrary cap */) {
          throw 'Unsupported audio callback buffer size ' + SDL.audio.samples + '!';
        } else if ((SDL.audio.samples & (SDL.audio.samples-1)) != 0) {
          throw 'Audio callback buffer size ' + SDL.audio.samples + ' must be a power-of-two!';
        }
        
        var totalSamples = SDL.audio.samples*SDL.audio.channels;
        SDL.audio.bytesPerSample = (SDL.audio.format == 0x0008 /*AUDIO_U8*/ || SDL.audio.format == 0x8008 /*AUDIO_S8*/) ? 1 : 2;
        SDL.audio.bufferSize = totalSamples*SDL.audio.bytesPerSample;
        SDL.audio.bufferDurationSecs = SDL.audio.bufferSize / SDL.audio.bytesPerSample / SDL.audio.channels / SDL.audio.freq; // Duration of a single queued buffer in seconds.
        SDL.audio.bufferingDelay = 50 / 1000; // Audio samples are played with a constant delay of this many seconds to account for browser and jitter.
        SDL.audio.buffer = _malloc(SDL.audio.bufferSize);
        
        // To account for jittering in frametimes, always have multiple audio buffers queued up for the audio output device.
        // This helps that we won't starve that easily if a frame takes long to complete.
        SDL.audio.numSimultaneouslyQueuedBuffers = Module['SDL_numSimultaneouslyQueuedBuffers'] || 5;
  
        // Pulls and queues new audio data if appropriate. This function gets "over-called" in both requestAnimationFrames and
        // setTimeouts to ensure that we get the finest granularity possible and as many chances from the browser to fill
        // new audio data. This is because setTimeouts alone have very poor granularity for audio streaming purposes, but also
        // the application might not be using emscripten_set_main_loop to drive the main loop, so we cannot rely on that alone.
        SDL.audio.queueNewAudioData = function SDL_queueNewAudioData() {
          if (!SDL.audio) return;
  
          for(var i = 0; i < SDL.audio.numSimultaneouslyQueuedBuffers; ++i) {
            // Only queue new data if we don't have enough audio data already in queue. Otherwise skip this time slot
            // and wait to queue more in the next time the callback is run.
            var secsUntilNextPlayStart = SDL.audio.nextPlayTime - SDL.audioContext['currentTime'];
            if (secsUntilNextPlayStart >= SDL.audio.bufferingDelay + SDL.audio.bufferDurationSecs*SDL.audio.numSimultaneouslyQueuedBuffers) return;
  
            // Ask SDL audio data from the user code.
            Runtime.dynCall('viii', SDL.audio.callback, [SDL.audio.userdata, SDL.audio.buffer, SDL.audio.bufferSize]);
            // And queue it to be played after the currently playing audio stream.
            SDL.audio.pushAudio(SDL.audio.buffer, SDL.audio.bufferSize);
          }
        } 
  
  
        // Create a callback function that will be routinely called to ask more audio data from the user application.
        SDL.audio.caller = function SDL_audioCaller() {
          if (!SDL.audio) return;
  
          --SDL.audio.numAudioTimersPending;
  
          SDL.audio.queueNewAudioData();
  
          // Queue this callback function to be called again later to pull more audio data.
          var secsUntilNextPlayStart = SDL.audio.nextPlayTime - SDL.audioContext['currentTime'];
  
          // Queue the next audio frame push to be performed half-way when the previously queued buffer has finished playing.
          var preemptBufferFeedSecs = SDL.audio.bufferDurationSecs/2.0;
  
          if (SDL.audio.numAudioTimersPending < SDL.audio.numSimultaneouslyQueuedBuffers) {
            ++SDL.audio.numAudioTimersPending;
            SDL.audio.timer = Browser.safeSetTimeout(SDL.audio.caller, Math.max(0.0, 1000.0*(secsUntilNextPlayStart-preemptBufferFeedSecs)));
  
            // If we are risking starving, immediately queue an extra buffer.
            if (SDL.audio.numAudioTimersPending < SDL.audio.numSimultaneouslyQueuedBuffers) {
              ++SDL.audio.numAudioTimersPending;
              Browser.safeSetTimeout(SDL.audio.caller, 1.0);
            }
          }
        };
        
        SDL.audio.audioOutput = new Audio();
  
        // Initialize Web Audio API if we haven't done so yet. Note: Only initialize Web Audio context ever once on the web page,
        // since initializing multiple times fails on Chrome saying 'audio resources have been exhausted'.
        SDL.openAudioContext();
        if (!SDL.audioContext) throw 'Web Audio API is not available!';
        SDL.audio.nextPlayTime = 0; // Time in seconds when the next audio block is due to start.
        
        // The pushAudio function with a new audio buffer whenever there is new audio data to schedule to be played back on the device.
        SDL.audio.pushAudio=function(ptr,sizeBytes) {
          try {
            if (SDL.audio.paused) return;
  
            var sizeSamples = sizeBytes / SDL.audio.bytesPerSample; // How many samples fit in the callback buffer?
            var sizeSamplesPerChannel = sizeSamples / SDL.audio.channels; // How many samples per a single channel fit in the cb buffer?
            if (sizeSamplesPerChannel != SDL.audio.samples) {
              throw 'Received mismatching audio buffer size!';
            }
            // Allocate new sound buffer to be played.
            var source = SDL.audioContext['createBufferSource']();
            var soundBuffer = SDL.audioContext['createBuffer'](SDL.audio.channels,sizeSamplesPerChannel,SDL.audio.freq);
            source['connect'](SDL.audioContext['destination']);
  
            SDL.fillWebAudioBufferFromHeap(ptr, sizeSamplesPerChannel, soundBuffer);
            // Workaround https://bugzilla.mozilla.org/show_bug.cgi?id=883675 by setting the buffer only after filling. The order is important here!
            source['buffer'] = soundBuffer;
            
            // Schedule the generated sample buffer to be played out at the correct time right after the previously scheduled
            // sample buffer has finished.
            var curtime = SDL.audioContext['currentTime'];
            // Don't ever start buffer playbacks earlier from current time than a given constant 'SDL.audio.bufferingDelay', since a browser 
            // may not be able to mix that audio clip in immediately, and there may be subsequent jitter that might cause the stream to starve.
            var playtime = Math.max(curtime + SDL.audio.bufferingDelay, SDL.audio.nextPlayTime);
            if (typeof source['start'] !== 'undefined') {
              source['start'](playtime); // New Web Audio API: sound sources are started with a .start() call.
            } else if (typeof source['noteOn'] !== 'undefined') {
              source['noteOn'](playtime); // Support old Web Audio API specification which had the .noteOn() API.
            }
            /*
            // Uncomment to debug SDL buffer feed starves.
            if (SDL.audio.curBufferEnd) {
              var thisBufferStart = Math.round(playtime * SDL.audio.freq);
              if (thisBufferStart != SDL.audio.curBufferEnd) console.log('SDL starved ' + (thisBufferStart - SDL.audio.curBufferEnd) + ' samples!');
            }
            SDL.audio.curBufferEnd = Math.round(playtime * SDL.audio.freq + sizeSamplesPerChannel);
            */
            
            SDL.audio.nextPlayTime = playtime + SDL.audio.bufferDurationSecs;
          } catch(e) {
            console.log('Web Audio API error playing back audio: ' + e.toString());
          }
        }
  
        if (obtained) {
          // Report back the initialized audio parameters.
          HEAP32[((obtained)>>2)]=SDL.audio.freq;
          HEAP16[(((obtained)+(4))>>1)]=SDL.audio.format;
          HEAP8[(((obtained)+(6))>>0)]=SDL.audio.channels;
          HEAP8[(((obtained)+(7))>>0)]=SDL.audio.silence;
          HEAP16[(((obtained)+(8))>>1)]=SDL.audio.samples;
          HEAP32[(((obtained)+(16))>>2)]=SDL.audio.callback;
          HEAP32[(((obtained)+(20))>>2)]=SDL.audio.userdata;
        }
        SDL.allocateChannels(32);
  
      } catch(e) {
        console.log('Initializing SDL audio threw an exception: "' + e.toString() + '"! Continuing without audio.');
        SDL.audio = null;
        SDL.allocateChannels(0);
        if (obtained) {
          HEAP32[((obtained)>>2)]=0;
          HEAP16[(((obtained)+(4))>>1)]=0;
          HEAP8[(((obtained)+(6))>>0)]=0;
          HEAP8[(((obtained)+(7))>>0)]=0;
          HEAP16[(((obtained)+(8))>>1)]=0;
          HEAP32[(((obtained)+(16))>>2)]=0;
          HEAP32[(((obtained)+(20))>>2)]=0;
        }
      }
      if (!SDL.audio) {
        return -1;
      }
      return 0;
    }

  function _glFramebufferTexture2D(target, attachment, textarget, texture, level) {
      GLctx.framebufferTexture2D(target, attachment, textarget,
                                      GL.textures[texture], level);
    }

  function _glFrontFace(x0) { GLctx.frontFace(x0) }

  function _glUseProgram(program) {
      GLctx.useProgram(program ? GL.programs[program] : null);
    }

  function _glTexImage2D(target, level, internalFormat, width, height, border, format, type, pixels) {
      var pixelData = null;
      if (pixels) pixelData = emscriptenWebGLGetTexPixelData(type, format, width, height, pixels, internalFormat);
      GLctx.texImage2D(target, level, internalFormat, width, height, border, format, type, pixelData);
    }

  function _glGetProgramInfoLog(program, maxLength, length, infoLog) {
      var log = GLctx.getProgramInfoLog(GL.programs[program]);
      if (log === null) log = '(unknown error)';
  
      log = log.substr(0, maxLength - 1);
      if (maxLength > 0 && infoLog) {
        writeStringToMemory(log, infoLog);
        if (length) HEAP32[((length)>>2)]=log.length;
      } else {
        if (length) HEAP32[((length)>>2)]=0;
      }
    }

  function _glStencilMask(x0) { GLctx.stencilMask(x0) }

  function _glGetShaderInfoLog(shader, maxLength, length, infoLog) {
      var log = GLctx.getShaderInfoLog(GL.shaders[shader]);
      if (log === null) log = '(unknown error)';
      log = log.substr(0, maxLength - 1);
      if (maxLength > 0 && infoLog) {
        writeStringToMemory(log, infoLog);
        if (length) HEAP32[((length)>>2)]=log.length;
      } else {
        if (length) HEAP32[((length)>>2)]=0;
      }
    }

  function _abort() {
      Module['abort']();
    }

  function _glDeleteBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var id = HEAP32[(((buffers)+(i*4))>>2)];
        var buffer = GL.buffers[id];
  
        // From spec: "glDeleteBuffers silently ignores 0's and names that do not
        // correspond to existing buffer objects."
        if (!buffer) continue;
  
        GLctx.deleteBuffer(buffer);
        buffer.name = 0;
        GL.buffers[id] = null;
  
        if (id == GL.currArrayBuffer) GL.currArrayBuffer = 0;
        if (id == GL.currElementArrayBuffer) GL.currElementArrayBuffer = 0;
      }
    }

  function ___unlock() {}

  function _glScissor(x0, x1, x2, x3) { GLctx.scissor(x0, x1, x2, x3) }

  function _glEnable(x0) { GLctx.enable(x0) }

  function _glBlendEquationSeparate(x0, x1) { GLctx.blendEquationSeparate(x0, x1) }

  function _glGenBuffers(n, buffers) {
      for (var i = 0; i < n; i++) {
        var buffer = GLctx.createBuffer();
        if (!buffer) {
          GL.recordError(0x0502 /* GL_INVALID_OPERATION */);
          while(i < n) HEAP32[(((buffers)+(i++*4))>>2)]=0;
          return;
        }
        var id = GL.getNewId(GL.buffers);
        buffer.name = id;
        GL.buffers[id] = buffer;
        HEAP32[(((buffers)+(i*4))>>2)]=id;
      }
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  function _glDeleteShader(id) {
      if (!id) return;
      var shader = GL.shaders[id];
      if (!shader) { // glDeleteShader actually signals an error when deleting a nonexisting object, unlike some other GL delete functions.
        GL.recordError(0x0501 /* GL_INVALID_VALUE */);
        return;
      }
      GLctx.deleteShader(shader);
      GL.shaders[id] = null;
    }

  function _glCreateProgram() {
      var id = GL.getNewId(GL.programs);
      var program = GLctx.createProgram();
      program.name = id;
      GL.programs[id] = program;
      return id;
    }

  function ___atomic_store_8(ptr, vall, valh, memmodel) {
      HEAP32[((ptr)>>2)]=vall;
      HEAP32[(((ptr)+(4))>>2)]=valh;
    }

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function _glViewport(x0, x1, x2, x3) { GLctx.viewport(x0, x1, x2, x3) }


  
  function __hideEverythingExceptGivenElement(onlyVisibleElement) {
      var child = onlyVisibleElement;
      var parent = child.parentNode;
      var hiddenElements = [];
      while (child != document.body) {
        var children = parent.children;
        for (var i = 0; i < children.length; ++i) {
          if (children[i] != child) {
            hiddenElements.push({ node: children[i], displayState: children[i].style.display });
            children[i].style.display = 'none';
          }
        }
        child = parent;
        parent = parent.parentNode;
      }
      return hiddenElements;
    }
  
  var __restoreOldWindowedStyle=null;
  
  function __restoreHiddenElements(hiddenElements) {
      for (var i = 0; i < hiddenElements.length; ++i) {
        hiddenElements[i].node.style.display = hiddenElements[i].displayState;
      }
    }
  
  function __softFullscreenResizeWebGLRenderTarget() {
      var inHiDPIFullscreenMode = __currentFullscreenStrategy.canvasResolutionScaleMode == 2;
      var inAspectRatioFixedFullscreenMode = __currentFullscreenStrategy.scaleMode == 2;
      var inPixelPerfectFullscreenMode = __currentFullscreenStrategy.canvasResolutionScaleMode != 0;
      var inCenteredWithoutScalingFullscreenMode = __currentFullscreenStrategy.scaleMode == 3;
      var screenWidth = inHiDPIFullscreenMode ? Math.round(window.innerWidth*window.devicePixelRatio) : window.innerWidth;
      var screenHeight = inHiDPIFullscreenMode ? Math.round(window.innerHeight*window.devicePixelRatio) : window.innerHeight;
      var w = screenWidth;
      var h = screenHeight;
      var canvas = __currentFullscreenStrategy.target;
      var x = canvas.width;
      var y = canvas.height;
      var topMargin;
  
      if (inAspectRatioFixedFullscreenMode) {
        if (w*y < x*h) h = (w * y / x) | 0;
        else if (w*y > x*h) w = (h * x / y) | 0;
        topMargin = ((screenHeight - h) / 2) | 0;
      }
  
      if (inPixelPerfectFullscreenMode) {
        canvas.width = w;
        canvas.height = h;
        if (canvas.GLctxObject) canvas.GLctxObject.GLctx.viewport(0, 0, canvas.width, canvas.height);
      }
  
      // Back to CSS pixels.
      if (inHiDPIFullscreenMode) {
        topMargin /= window.devicePixelRatio;
        w /= window.devicePixelRatio;
        h /= window.devicePixelRatio;
        // Round to nearest 4 digits of precision.
        w = Math.round(w*1e4)/1e4;
        h = Math.round(h*1e4)/1e4;
        topMargin = Math.round(topMargin*1e4)/1e4;
      }
  
      if (inCenteredWithoutScalingFullscreenMode) {
        var t = (window.innerHeight - parseInt(canvas.style.height)) / 2;
        var b = (window.innerWidth - parseInt(canvas.style.width)) / 2;
        __setLetterbox(canvas, t, b);
      } else {
        canvas.style.width = w + 'px';
        canvas.style.height = h + 'px';
        var b = (window.innerWidth - w) / 2;
        __setLetterbox(canvas, topMargin, b);
      }
  
      if (!inCenteredWithoutScalingFullscreenMode && __currentFullscreenStrategy.canvasResizedCallback) {
        Runtime.dynCall('iiii', __currentFullscreenStrategy.canvasResizedCallback, [37, 0, __currentFullscreenStrategy.canvasResizedCallbackUserData]);
      }
    }function _emscripten_enter_soft_fullscreen(target, fullscreenStrategy) {
      if (!target) target = '#canvas';
      target = JSEvents.findEventTarget(target);
      if (!target) return -4;
  
      var strategy = {};
      strategy.scaleMode = HEAP32[((fullscreenStrategy)>>2)];
      strategy.canvasResolutionScaleMode = HEAP32[(((fullscreenStrategy)+(4))>>2)];
      strategy.filteringMode = HEAP32[(((fullscreenStrategy)+(8))>>2)];
      strategy.canvasResizedCallback = HEAP32[(((fullscreenStrategy)+(12))>>2)];
      strategy.canvasResizedCallbackUserData = HEAP32[(((fullscreenStrategy)+(16))>>2)];
      strategy.target = target;
      strategy.softFullscreen = true;
  
      var restoreOldStyle = JSEvents.resizeCanvasForFullscreen(target, strategy);
  
      document.documentElement.style.overflow = 'hidden';  // Firefox, Chrome
      document.body.scroll = "no"; // IE11
      document.body.style.margin = '0px'; // Override default document margin area on all browsers.
  
      var hiddenElements = __hideEverythingExceptGivenElement(target);
  
      function restoreWindowedState() {
        restoreOldStyle();
        __restoreHiddenElements(hiddenElements);
        window.removeEventListener('resize', __softFullscreenResizeWebGLRenderTarget);
        if (strategy.canvasResizedCallback) {
          Runtime.dynCall('iiii', strategy.canvasResizedCallback, [37, 0, strategy.canvasResizedCallbackUserData]);
        }
      }
      __restoreOldWindowedStyle = restoreWindowedState;
      __currentFullscreenStrategy = strategy;
      window.addEventListener('resize', __softFullscreenResizeWebGLRenderTarget);
  
      // Inform the caller that the canvas size has changed.
      if (strategy.canvasResizedCallback) {
        Runtime.dynCall('iiii', strategy.canvasResizedCallback, [37, 0, strategy.canvasResizedCallbackUserData]);
      }
  
      return 0;
    }

  function _glDepthMask(x0) { GLctx.depthMask(x0) }

  var _llvm_fabs_f64=Math_abs;

  function _glUniformMatrix4fv(location, count, transpose, value) {
      location = GL.uniforms[location];
      var view;
      if (16*count <= GL.MINI_TEMP_BUFFER_SIZE) {
        // avoid allocation when uploading few enough uniforms
        view = GL.miniTempBufferViews[16*count-1];
        for (var i = 0; i < 16*count; i += 16) {
          view[i] = HEAPF32[(((value)+(4*i))>>2)];
          view[i+1] = HEAPF32[(((value)+(4*i+4))>>2)];
          view[i+2] = HEAPF32[(((value)+(4*i+8))>>2)];
          view[i+3] = HEAPF32[(((value)+(4*i+12))>>2)];
          view[i+4] = HEAPF32[(((value)+(4*i+16))>>2)];
          view[i+5] = HEAPF32[(((value)+(4*i+20))>>2)];
          view[i+6] = HEAPF32[(((value)+(4*i+24))>>2)];
          view[i+7] = HEAPF32[(((value)+(4*i+28))>>2)];
          view[i+8] = HEAPF32[(((value)+(4*i+32))>>2)];
          view[i+9] = HEAPF32[(((value)+(4*i+36))>>2)];
          view[i+10] = HEAPF32[(((value)+(4*i+40))>>2)];
          view[i+11] = HEAPF32[(((value)+(4*i+44))>>2)];
          view[i+12] = HEAPF32[(((value)+(4*i+48))>>2)];
          view[i+13] = HEAPF32[(((value)+(4*i+52))>>2)];
          view[i+14] = HEAPF32[(((value)+(4*i+56))>>2)];
          view[i+15] = HEAPF32[(((value)+(4*i+60))>>2)];
        }
      } else {
        view = HEAPF32.subarray((value)>>2,(value+count*64)>>2);
      }
      GLctx.uniformMatrix4fv(location, transpose, view);
    }

  
   
  Module["___muldsi3"] = ___muldsi3; 
  Module["___muldi3"] = ___muldi3;

  function _glTexParameteri(x0, x1, x2) { GLctx.texParameteri(x0, x1, x2) }

  function _emscripten_webgl_make_context_current(contextHandle) {
      var success = GL.makeContextCurrent(contextHandle);
      return success ? 0 : -5;
    }

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _emscripten_set_wheel_callback(target, userData, useCapture, callbackfunc) {
      target = JSEvents.findEventTarget(target);
      if (typeof target.onwheel !== 'undefined') {
        JSEvents.registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, "wheel");
        return 0;
      } else if (typeof target.onmousewheel !== 'undefined') {
        JSEvents.registerWheelEventCallback(target, userData, useCapture, callbackfunc, 9, "mousewheel");
        return 0;
      } else {
        return -1;
      }
    }

  function _emscripten_set_canvas_size(width, height) {
      Browser.setCanvasSize(width, height);
    }

   
  Module["_pthread_self"] = _pthread_self;

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        case 12: {
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        case 13:
        case 14:
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }
var GLctx; GL.init();
if (ENVIRONMENT_IS_NODE) {
    _emscripten_get_now = function _emscripten_get_now_actual() {
      var t = process['hrtime']();
      return t[0] * 1e3 + t[1] / 1e6;
    };
  } else if (typeof dateNow !== 'undefined') {
    _emscripten_get_now = dateNow;
  } else if (typeof self === 'object' && self['performance'] && typeof self['performance']['now'] === 'function') {
    _emscripten_get_now = function() { return self['performance']['now'](); };
  } else if (typeof performance === 'object' && typeof performance['now'] === 'function') {
    _emscripten_get_now = function() { return performance['now'](); };
  } else {
    _emscripten_get_now = Date.now;
  };
Module["requestFullScreen"] = function Module_requestFullScreen(lockPointer, resizeCanvas, vrDevice) { Browser.requestFullScreen(lockPointer, resizeCanvas, vrDevice) };
  Module["requestAnimationFrame"] = function Module_requestAnimationFrame(func) { Browser.requestAnimationFrame(func) };
  Module["setCanvasSize"] = function Module_setCanvasSize(width, height, noUpdates) { Browser.setCanvasSize(width, height, noUpdates) };
  Module["pauseMainLoop"] = function Module_pauseMainLoop() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function Module_resumeMainLoop() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function Module_getUserMedia() { Browser.getUserMedia() }
  Module["createContext"] = function Module_createContext(canvas, useWebGL, setInModule, webGLContextAttributes) { return Browser.createContext(canvas, useWebGL, setInModule, webGLContextAttributes) };
___buildEnvironment(ENV);;
/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module["_fflush"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);



function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_dii(index,a1,a2) {
  try {
    return Module["dynCall_dii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vid(index,a1,a2) {
  try {
    Module["dynCall_vid"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiddd(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiddd"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viid(index,a1,a2,a3) {
  try {
    Module["dynCall_viid"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiddii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiddii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiidd(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiidd"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vidii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_vidii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viidddd(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viidddd"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiii": invoke_iiii, "invoke_viiiiii": invoke_viiiiii, "invoke_dii": invoke_dii, "invoke_vid": invoke_vid, "invoke_viiiii": invoke_viiiii, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_viiii": invoke_viiii, "invoke_ii": invoke_ii, "invoke_viiddd": invoke_viiddd, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viid": invoke_viid, "invoke_viiiddii": invoke_viiiddii, "invoke_iii": invoke_iii, "invoke_viiiidd": invoke_viiiidd, "invoke_vidii": invoke_vidii, "invoke_viidddd": invoke_viidddd, "_glClearStencil": _glClearStencil, "_glUseProgram": _glUseProgram, "_glUniformMatrix3fv": _glUniformMatrix3fv, "_glUniformMatrix2fv": _glUniformMatrix2fv, "_glTexSubImage2D": _glTexSubImage2D, "_glStencilFunc": _glStencilFunc, "_glUniformMatrix4fv": _glUniformMatrix4fv, "_llvm_fabs_f64": _llvm_fabs_f64, "_SDL_RWFromFile": _SDL_RWFromFile, "___assert_fail": ___assert_fail, "_glDeleteProgram": _glDeleteProgram, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_glBindBuffer": _glBindBuffer, "_glGetShaderInfoLog": _glGetShaderInfoLog, "_emscripten_webgl_make_context_current": _emscripten_webgl_make_context_current, "_emscripten_set_touchmove_callback": _emscripten_set_touchmove_callback, "_emscripten_set_main_loop_timing": _emscripten_set_main_loop_timing, "_sbrk": _sbrk, "_glDepthFunc": _glDepthFunc, "_glDisableVertexAttribArray": _glDisableVertexAttribArray, "_Mix_PlayChannel": _Mix_PlayChannel, "_glCreateShader": _glCreateShader, "_emscripten_set_mousedown_callback": _emscripten_set_mousedown_callback, "_emscripten_set_touchstart_callback": _emscripten_set_touchstart_callback, "_Mix_PlayMusic": _Mix_PlayMusic, "___syscall221": ___syscall221, "emscriptenWebGLComputeImageSize": emscriptenWebGLComputeImageSize, "_glUniform4f": _glUniform4f, "_llvm_pow_f32": _llvm_pow_f32, "_emscripten_get_canvas_size": _emscripten_get_canvas_size, "_emscripten_request_fullscreen_strategy": _emscripten_request_fullscreen_strategy, "_glGenBuffers": _glGenBuffers, "_glShaderSource": _glShaderSource, "_glFramebufferRenderbuffer": _glFramebufferRenderbuffer, "_pthread_cleanup_push": _pthread_cleanup_push, "_Mix_HaltMusic": _Mix_HaltMusic, "___syscall140": ___syscall140, "___syscall145": ___syscall145, "___syscall146": ___syscall146, "_pthread_cleanup_pop": _pthread_cleanup_pop, "_emscripten_set_keyup_callback": _emscripten_set_keyup_callback, "_glRenderbufferStorage": _glRenderbufferStorage, "_glGetProgramInfoLog": _glGetProgramInfoLog, "_SDL_GetTicks": _SDL_GetTicks, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_glBindRenderbuffer": _glBindRenderbuffer, "_glDrawElements": _glDrawElements, "_glDepthMask": _glDepthMask, "_glBufferSubData": _glBufferSubData, "_SDL_LockSurface": _SDL_LockSurface, "_glViewport": _glViewport, "___setErrNo": ___setErrNo, "_glDeleteTextures": _glDeleteTextures, "_SDL_OpenAudio": _SDL_OpenAudio, "_glStencilOpSeparate": _glStencilOpSeparate, "_emscripten_set_canvas_size": _emscripten_set_canvas_size, "___resumeException": ___resumeException, "_nanosleep": _nanosleep, "_glBlendFuncSeparate": _glBlendFuncSeparate, "_glEnable": _glEnable, "_glGenTextures": _glGenTextures, "_glGetIntegerv": _glGetIntegerv, "_glGetString": _glGetString, "emscriptenWebGLGet": emscriptenWebGLGet, "_glStencilMaskSeparate": _glStencilMaskSeparate, "_emscripten_get_now": _emscripten_get_now, "_glAttachShader": _glAttachShader, "_glCreateProgram": _glCreateProgram, "__registerRestoreOldStyle": __registerRestoreOldStyle, "___lock": ___lock, "emscriptenWebGLGetTexPixelData": emscriptenWebGLGetTexPixelData, "___syscall6": ___syscall6, "___syscall5": ___syscall5, "___atomic_store_8": ___atomic_store_8, "_glBindFramebuffer": _glBindFramebuffer, "_emscripten_set_devicemotion_callback": _emscripten_set_devicemotion_callback, "_glGenFramebuffers": _glGenFramebuffers, "_SDL_UpperBlitScaled": _SDL_UpperBlitScaled, "_glUniform2f": _glUniform2f, "_putenv": _putenv, "_glCullFace": _glCullFace, "_emscripten_set_keypress_callback": _emscripten_set_keypress_callback, "_glDeleteFramebuffers": _glDeleteFramebuffers, "_IMG_Load": _IMG_Load, "_TTF_FontHeight": _TTF_FontHeight, "_glCheckFramebufferStatus": _glCheckFramebufferStatus, "_emscripten_webgl_create_context": _emscripten_webgl_create_context, "_glClearColor": _glClearColor, "___cxa_allocate_exception": ___cxa_allocate_exception, "_glVertexAttribPointer": _glVertexAttribPointer, "___buildEnvironment": ___buildEnvironment, "_glCompressedTexImage2D": _glCompressedTexImage2D, "_emscripten_set_mouseup_callback": _emscripten_set_mouseup_callback, "_glClearDepthf": _glClearDepthf, "_emscripten_set_deviceorientation_callback": _emscripten_set_deviceorientation_callback, "_glBindTexture": _glBindTexture, "_glUniform1f": _glUniform1f, "_glUniform1i": _glUniform1i, "_glDrawArrays": _glDrawArrays, "_TTF_RenderText_Solid": _TTF_RenderText_Solid, "_glGetError": _glGetError, "_llvm_fabs_f32": _llvm_fabs_f32, "_pthread_mutex_destroy": _pthread_mutex_destroy, "_getenv": _getenv, "_SDL_UpperBlit": _SDL_UpperBlit, "_SDL_PauseAudio": _SDL_PauseAudio, "_glActiveTexture": _glActiveTexture, "__setLetterbox": __setLetterbox, "_glFrontFace": _glFrontFace, "_glCompileShader": _glCompileShader, "_emscripten_exit_pointerlock": _emscripten_exit_pointerlock, "_glEnableVertexAttribArray": _glEnableVertexAttribArray, "_abort": _abort, "_glDeleteBuffers": _glDeleteBuffers, "_glBufferData": _glBufferData, "_emscripten_async_wget_data": _emscripten_async_wget_data, "_glTexImage2D": _glTexImage2D, "__restoreHiddenElements": __restoreHiddenElements, "___atomic_load_8": ___atomic_load_8, "___cxa_pure_virtual": ___cxa_pure_virtual, "_Mix_LoadWAV_RW": _Mix_LoadWAV_RW, "_glDeleteShader": _glDeleteShader, "_glGetProgramiv": _glGetProgramiv, "_glUniform3f": _glUniform3f, "_glScissor": _glScissor, "_emscripten_request_pointerlock": _emscripten_request_pointerlock, "_glStencilOp": _glStencilOp, "_SDL_CloseAudio": _SDL_CloseAudio, "_emscripten_set_keydown_callback": _emscripten_set_keydown_callback, "___gxx_personality_v0": ___gxx_personality_v0, "_emscripten_set_touchcancel_callback": _emscripten_set_touchcancel_callback, "_emscripten_set_mousemove_callback": _emscripten_set_mousemove_callback, "_glDeleteRenderbuffers": _glDeleteRenderbuffers, "_usleep": _usleep, "_glLinkProgram": _glLinkProgram, "_emscripten_set_touchend_callback": _emscripten_set_touchend_callback, "_SDL_FreeRW": _SDL_FreeRW, "_glGenRenderbuffers": _glGenRenderbuffers, "_glGetUniformLocation": _glGetUniformLocation, "_emscripten_cancel_main_loop": _emscripten_cancel_main_loop, "_glClear": _glClear, "_glUniform4fv": _glUniform4fv, "_Mix_FreeChunk": _Mix_FreeChunk, "__softFullscreenResizeWebGLRenderTarget": __softFullscreenResizeWebGLRenderTarget, "_IMG_Load_RW": _IMG_Load_RW, "_glBindAttribLocation": _glBindAttribLocation, "_glGetShaderiv": _glGetShaderiv, "_emscripten_webgl_destroy_context": _emscripten_webgl_destroy_context, "_glVertexAttribDivisor": _glVertexAttribDivisor, "_emscripten_enter_soft_fullscreen": _emscripten_enter_soft_fullscreen, "_TTF_SizeText": _TTF_SizeText, "_emscripten_set_wheel_callback": _emscripten_set_wheel_callback, "___syscall54": ___syscall54, "___unlock": ___unlock, "_glFramebufferTexture2D": _glFramebufferTexture2D, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_emscripten_set_main_loop": _emscripten_set_main_loop, "_pthread_mutexattr_init": _pthread_mutexattr_init, "_emscripten_webgl_init_context_attributes": _emscripten_webgl_init_context_attributes, "___cxa_throw": ___cxa_throw, "_glColorMask": _glColorMask, "__hideEverythingExceptGivenElement": __hideEverythingExceptGivenElement, "_glDisable": _glDisable, "_glTexParameteri": _glTexParameteri, "_glBlendColor": _glBlendColor, "_glStencilMask": _glStencilMask, "_pthread_mutex_init": _pthread_mutex_init, "_glBlendEquationSeparate": _glBlendEquationSeparate, "_SDL_RWFromConstMem": _SDL_RWFromConstMem, "_glStencilFuncSeparate": _glStencilFuncSeparate, "_emscripten_do_request_fullscreen": _emscripten_do_request_fullscreen, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_dii=env.invoke_dii;
  var invoke_vid=env.invoke_vid;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_i=env.invoke_i;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_ii=env.invoke_ii;
  var invoke_viiddd=env.invoke_viiddd;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_viid=env.invoke_viid;
  var invoke_viiiddii=env.invoke_viiiddii;
  var invoke_iii=env.invoke_iii;
  var invoke_viiiidd=env.invoke_viiiidd;
  var invoke_vidii=env.invoke_vidii;
  var invoke_viidddd=env.invoke_viidddd;
  var _glClearStencil=env._glClearStencil;
  var _glUseProgram=env._glUseProgram;
  var _glUniformMatrix3fv=env._glUniformMatrix3fv;
  var _glUniformMatrix2fv=env._glUniformMatrix2fv;
  var _glTexSubImage2D=env._glTexSubImage2D;
  var _glStencilFunc=env._glStencilFunc;
  var _glUniformMatrix4fv=env._glUniformMatrix4fv;
  var _llvm_fabs_f64=env._llvm_fabs_f64;
  var _SDL_RWFromFile=env._SDL_RWFromFile;
  var ___assert_fail=env.___assert_fail;
  var _glDeleteProgram=env._glDeleteProgram;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _glBindBuffer=env._glBindBuffer;
  var _glGetShaderInfoLog=env._glGetShaderInfoLog;
  var _emscripten_webgl_make_context_current=env._emscripten_webgl_make_context_current;
  var _emscripten_set_touchmove_callback=env._emscripten_set_touchmove_callback;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _sbrk=env._sbrk;
  var _glDepthFunc=env._glDepthFunc;
  var _glDisableVertexAttribArray=env._glDisableVertexAttribArray;
  var _Mix_PlayChannel=env._Mix_PlayChannel;
  var _glCreateShader=env._glCreateShader;
  var _emscripten_set_mousedown_callback=env._emscripten_set_mousedown_callback;
  var _emscripten_set_touchstart_callback=env._emscripten_set_touchstart_callback;
  var _Mix_PlayMusic=env._Mix_PlayMusic;
  var ___syscall221=env.___syscall221;
  var emscriptenWebGLComputeImageSize=env.emscriptenWebGLComputeImageSize;
  var _glUniform4f=env._glUniform4f;
  var _llvm_pow_f32=env._llvm_pow_f32;
  var _emscripten_get_canvas_size=env._emscripten_get_canvas_size;
  var _emscripten_request_fullscreen_strategy=env._emscripten_request_fullscreen_strategy;
  var _glGenBuffers=env._glGenBuffers;
  var _glShaderSource=env._glShaderSource;
  var _glFramebufferRenderbuffer=env._glFramebufferRenderbuffer;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var _Mix_HaltMusic=env._Mix_HaltMusic;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _emscripten_set_keyup_callback=env._emscripten_set_keyup_callback;
  var _glRenderbufferStorage=env._glRenderbufferStorage;
  var _glGetProgramInfoLog=env._glGetProgramInfoLog;
  var _SDL_GetTicks=env._SDL_GetTicks;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var _glBindRenderbuffer=env._glBindRenderbuffer;
  var _glDrawElements=env._glDrawElements;
  var _glDepthMask=env._glDepthMask;
  var _glBufferSubData=env._glBufferSubData;
  var _SDL_LockSurface=env._SDL_LockSurface;
  var _glViewport=env._glViewport;
  var ___setErrNo=env.___setErrNo;
  var _glDeleteTextures=env._glDeleteTextures;
  var _SDL_OpenAudio=env._SDL_OpenAudio;
  var _glStencilOpSeparate=env._glStencilOpSeparate;
  var _emscripten_set_canvas_size=env._emscripten_set_canvas_size;
  var ___resumeException=env.___resumeException;
  var _nanosleep=env._nanosleep;
  var _glBlendFuncSeparate=env._glBlendFuncSeparate;
  var _glEnable=env._glEnable;
  var _glGenTextures=env._glGenTextures;
  var _glGetIntegerv=env._glGetIntegerv;
  var _glGetString=env._glGetString;
  var emscriptenWebGLGet=env.emscriptenWebGLGet;
  var _glStencilMaskSeparate=env._glStencilMaskSeparate;
  var _emscripten_get_now=env._emscripten_get_now;
  var _glAttachShader=env._glAttachShader;
  var _glCreateProgram=env._glCreateProgram;
  var __registerRestoreOldStyle=env.__registerRestoreOldStyle;
  var ___lock=env.___lock;
  var emscriptenWebGLGetTexPixelData=env.emscriptenWebGLGetTexPixelData;
  var ___syscall6=env.___syscall6;
  var ___syscall5=env.___syscall5;
  var ___atomic_store_8=env.___atomic_store_8;
  var _glBindFramebuffer=env._glBindFramebuffer;
  var _emscripten_set_devicemotion_callback=env._emscripten_set_devicemotion_callback;
  var _glGenFramebuffers=env._glGenFramebuffers;
  var _SDL_UpperBlitScaled=env._SDL_UpperBlitScaled;
  var _glUniform2f=env._glUniform2f;
  var _putenv=env._putenv;
  var _glCullFace=env._glCullFace;
  var _emscripten_set_keypress_callback=env._emscripten_set_keypress_callback;
  var _glDeleteFramebuffers=env._glDeleteFramebuffers;
  var _IMG_Load=env._IMG_Load;
  var _TTF_FontHeight=env._TTF_FontHeight;
  var _glCheckFramebufferStatus=env._glCheckFramebufferStatus;
  var _emscripten_webgl_create_context=env._emscripten_webgl_create_context;
  var _glClearColor=env._glClearColor;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _glVertexAttribPointer=env._glVertexAttribPointer;
  var ___buildEnvironment=env.___buildEnvironment;
  var _glCompressedTexImage2D=env._glCompressedTexImage2D;
  var _emscripten_set_mouseup_callback=env._emscripten_set_mouseup_callback;
  var _glClearDepthf=env._glClearDepthf;
  var _emscripten_set_deviceorientation_callback=env._emscripten_set_deviceorientation_callback;
  var _glBindTexture=env._glBindTexture;
  var _glUniform1f=env._glUniform1f;
  var _glUniform1i=env._glUniform1i;
  var _glDrawArrays=env._glDrawArrays;
  var _TTF_RenderText_Solid=env._TTF_RenderText_Solid;
  var _glGetError=env._glGetError;
  var _llvm_fabs_f32=env._llvm_fabs_f32;
  var _pthread_mutex_destroy=env._pthread_mutex_destroy;
  var _getenv=env._getenv;
  var _SDL_UpperBlit=env._SDL_UpperBlit;
  var _SDL_PauseAudio=env._SDL_PauseAudio;
  var _glActiveTexture=env._glActiveTexture;
  var __setLetterbox=env.__setLetterbox;
  var _glFrontFace=env._glFrontFace;
  var _glCompileShader=env._glCompileShader;
  var _emscripten_exit_pointerlock=env._emscripten_exit_pointerlock;
  var _glEnableVertexAttribArray=env._glEnableVertexAttribArray;
  var _abort=env._abort;
  var _glDeleteBuffers=env._glDeleteBuffers;
  var _glBufferData=env._glBufferData;
  var _emscripten_async_wget_data=env._emscripten_async_wget_data;
  var _glTexImage2D=env._glTexImage2D;
  var __restoreHiddenElements=env.__restoreHiddenElements;
  var ___atomic_load_8=env.___atomic_load_8;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var _Mix_LoadWAV_RW=env._Mix_LoadWAV_RW;
  var _glDeleteShader=env._glDeleteShader;
  var _glGetProgramiv=env._glGetProgramiv;
  var _glUniform3f=env._glUniform3f;
  var _glScissor=env._glScissor;
  var _emscripten_request_pointerlock=env._emscripten_request_pointerlock;
  var _glStencilOp=env._glStencilOp;
  var _SDL_CloseAudio=env._SDL_CloseAudio;
  var _emscripten_set_keydown_callback=env._emscripten_set_keydown_callback;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var _emscripten_set_touchcancel_callback=env._emscripten_set_touchcancel_callback;
  var _emscripten_set_mousemove_callback=env._emscripten_set_mousemove_callback;
  var _glDeleteRenderbuffers=env._glDeleteRenderbuffers;
  var _usleep=env._usleep;
  var _glLinkProgram=env._glLinkProgram;
  var _emscripten_set_touchend_callback=env._emscripten_set_touchend_callback;
  var _SDL_FreeRW=env._SDL_FreeRW;
  var _glGenRenderbuffers=env._glGenRenderbuffers;
  var _glGetUniformLocation=env._glGetUniformLocation;
  var _emscripten_cancel_main_loop=env._emscripten_cancel_main_loop;
  var _glClear=env._glClear;
  var _glUniform4fv=env._glUniform4fv;
  var _Mix_FreeChunk=env._Mix_FreeChunk;
  var __softFullscreenResizeWebGLRenderTarget=env.__softFullscreenResizeWebGLRenderTarget;
  var _IMG_Load_RW=env._IMG_Load_RW;
  var _glBindAttribLocation=env._glBindAttribLocation;
  var _glGetShaderiv=env._glGetShaderiv;
  var _emscripten_webgl_destroy_context=env._emscripten_webgl_destroy_context;
  var _glVertexAttribDivisor=env._glVertexAttribDivisor;
  var _emscripten_enter_soft_fullscreen=env._emscripten_enter_soft_fullscreen;
  var _TTF_SizeText=env._TTF_SizeText;
  var _emscripten_set_wheel_callback=env._emscripten_set_wheel_callback;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var _glFramebufferTexture2D=env._glFramebufferTexture2D;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var _pthread_mutexattr_init=env._pthread_mutexattr_init;
  var _emscripten_webgl_init_context_attributes=env._emscripten_webgl_init_context_attributes;
  var ___cxa_throw=env.___cxa_throw;
  var _glColorMask=env._glColorMask;
  var __hideEverythingExceptGivenElement=env.__hideEverythingExceptGivenElement;
  var _glDisable=env._glDisable;
  var _glTexParameteri=env._glTexParameteri;
  var _glBlendColor=env._glBlendColor;
  var _glStencilMask=env._glStencilMask;
  var _pthread_mutex_init=env._pthread_mutex_init;
  var _glBlendEquationSeparate=env._glBlendEquationSeparate;
  var _SDL_RWFromConstMem=env._SDL_RWFromConstMem;
  var _glStencilFuncSeparate=env._glStencilFuncSeparate;
  var _emscripten_do_request_fullscreen=env._emscripten_do_request_fullscreen;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function __ZN4yakc3z805do_opEh($this, $op) {
 $this = $this | 0;
 $op = $op | 0;
 var $$0 = 0, $$0$i = 0, $1 = 0, $10 = 0, $101 = 0, $1011 = 0, $1012 = 0, $102 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $103 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1043 = 0, $1046 = 0, $1063 = 0, $1065 = 0, $1072 = 0, $1080 = 0, $1093 = 0, $1096 = 0, $1097 = 0, $1100 = 0, $1102 = 0, $1105 = 0, $1121 = 0, $1122 = 0, $1125 = 0, $1127 = 0, $1133 = 0, $1146 = 0, $1147 = 0, $1149 = 0, $115 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $117 = 0, $1189 = 0, $119 = 0, $120 = 0, $1215 = 0, $122 = 0, $1232 = 0, $1246 = 0, $125 = 0, $1265 = 0, $1277 = 0, $1305 = 0, $1308 = 0, $1310 = 0, $1335 = 0, $1338 = 0, $1340 = 0, $1353 = 0, $1354 = 0, $1366 = 0, $1367 = 0, $1378 = 0, $1379 = 0, $1392 = 0, $1393 = 0, $1403 = 0, $1405 = 0, $1406 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $1429 = 0, $143 = 0, $1433 = 0, $1435 = 0, $1472 = 0, $1483 = 0, $1484 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1491 = 0, $1493 = 0, $1504 = 0, $1513 = 0, $1514 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1521 = 0, $1523 = 0, $1534 = 0, $1545 = 0, $1546 = 0, $1548 = 0, $1549 = 0, $1550 = 0, $1553 = 0, $1555 = 0, $156 = 0, $1566 = 0, $1576 = 0, $1577 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1584 = 0, $1586 = 0, $1597 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1616 = 0, $1618 = 0, $1629 = 0, $1638 = 0, $1639 = 0, $1641 = 0, $1643 = 0, $1646 = 0, $1648 = 0, $1659 = 0, $1668 = 0, $1676 = 0, $1678 = 0, $1679 = 0, $1680 = 0, $1683 = 0, $1685 = 0, $1696 = 0, $1704 = 0, $1705 = 0, $1707 = 0, $1708 = 0, $1711 = 0, $1713 = 0, $172 = 0, $1732 = 0, $1733 = 0, $1736 = 0, $1738 = 0, $1739 = 0, $1740 = 0, $1741 = 0, $1744 = 0, $1746 = 0, $1757 = 0, $1766 = 0, $1768 = 0, $1779 = 0, $1787 = 0, $1788 = 0, $1791 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1799 = 0, $180 = 0, $1801 = 0, $1812 = 0, $182 = 0, $1821 = 0, $1823 = 0, $1834 = 0, $1844 = 0, $1845 = 0, $1848 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1856 = 0, $1858 = 0, $1869 = 0, $1878 = 0, $188 = 0, $1880 = 0, $1891 = 0, $1900 = 0, $1901 = 0, $1904 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $1912 = 0, $1914 = 0, $1925 = 0, $1934 = 0, $1936 = 0, $1947 = 0, $1957 = 0, $1958 = 0, $196 = 0, $1961 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1969 = 0, $1971 = 0, $1982 = 0, $1991 = 0, $1993 = 0, $2004 = 0, $2012 = 0, $2013 = 0, $2016 = 0, $2017 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2023 = 0, $2025 = 0, $203 = 0, $2036 = 0, $2045 = 0, $2047 = 0, $205 = 0, $2058 = 0, $2066 = 0, $2074 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $2080 = 0, $2081 = 0, $2084 = 0, $2086 = 0, $2097 = 0, $2106 = 0, $2108 = 0, $2119 = 0, $212 = 0, $2126 = 0, $2127 = 0, $2129 = 0, $213 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2139 = 0, $2141 = 0, $215 = 0, $2152 = 0, $2161 = 0, $2163 = 0, $2174 = 0, $2183 = 0, $2184 = 0, $2186 = 0, $2187 = 0, $2188 = 0, $2191 = 0, $2193 = 0, $2204 = 0, $2213 = 0, $2214 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2221 = 0, $2223 = 0, $2234 = 0, $2245 = 0, $2246 = 0, $2248 = 0, $2249 = 0, $2250 = 0, $2253 = 0, $2255 = 0, $226 = 0, $2266 = 0, $2276 = 0, $2277 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2284 = 0, $2286 = 0, $2297 = 0, $230 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2311 = 0, $2312 = 0, $2313 = 0, $2316 = 0, $2318 = 0, $232 = 0, $2329 = 0, $2338 = 0, $2339 = 0, $2341 = 0, $2343 = 0, $2346 = 0, $2348 = 0, $2359 = 0, $2368 = 0, $2376 = 0, $2378 = 0, $2379 = 0, $2380 = 0, $2383 = 0, $2385 = 0, $2396 = 0, $2404 = 0, $2408 = 0, $2409 = 0, $2412 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2420 = 0, $2422 = 0, $2433 = 0, $244 = 0, $2442 = 0, $2444 = 0, $2455 = 0, $246 = 0, $2463 = 0, $2464 = 0, $2467 = 0, $2469 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2475 = 0, $2477 = 0, $2488 = 0, $2497 = 0, $2499 = 0, $2510 = 0, $2520 = 0, $2521 = 0, $2524 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0, $253 = 0, $2532 = 0, $2534 = 0, $2545 = 0, $2554 = 0, $2556 = 0, $2567 = 0, $2576 = 0, $2577 = 0, $2580 = 0, $2582 = 0, $2583 = 0, $2584 = 0, $2585 = 0, $2588 = 0, $2590 = 0, $26 = 0, $2601 = 0, $2610 = 0, $2612 = 0, $2623 = 0, $2633 = 0, $2634 = 0, $2637 = 0, $2639 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2645 = 0, $2647 = 0, $2658 = 0, $2667 = 0, $2669 = 0, $2680 = 0, $2688 = 0, $2689 = 0, $2692 = 0, $2693 = 0, $2695 = 0, $2696 = 0, $2699 = 0, $27 = 0, $2701 = 0, $271 = 0, $2712 = 0, $272 = 0, $2721 = 0, $2723 = 0, $2734 = 0, $2742 = 0, $2750 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2760 = 0, $2762 = 0, $2773 = 0, $2782 = 0, $2784 = 0, $2795 = 0, $2802 = 0, $2803 = 0, $2805 = 0, $2809 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2815 = 0, $2817 = 0, $2828 = 0, $283 = 0, $2837 = 0, $2839 = 0, $2850 = 0, $2859 = 0, $2860 = 0, $2862 = 0, $287 = 0, $2870 = 0, $2871 = 0, $2873 = 0, $2883 = 0, $2884 = 0, $2886 = 0, $2895 = 0, $2896 = 0, $2898 = 0, $290 = 0, $2908 = 0, $2909 = 0, $2911 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2923 = 0, $2931 = 0, $2939 = 0, $2943 = 0, $295 = 0, $2950 = 0, $2961 = 0, $2962 = 0, $2964 = 0, $2969 = 0, $2970 = 0, $2972 = 0, $2979 = 0, $2980 = 0, $2982 = 0, $2988 = 0, $2989 = 0, $2991 = 0, $2998 = 0, $2999 = 0, $3 = 0, $3001 = 0, $3006 = 0, $3007 = 0, $3010 = 0, $3016 = 0, $3024 = 0, $3028 = 0, $3032 = 0, $3038 = 0, $3039 = 0, $3041 = 0, $3046 = 0, $3047 = 0, $3049 = 0, $3056 = 0, $3057 = 0, $3059 = 0, $306 = 0, $3065 = 0, $3066 = 0, $3068 = 0, $3075 = 0, $3076 = 0, $3078 = 0, $3083 = 0, $3084 = 0, $3087 = 0, $3093 = 0, $3101 = 0, $3105 = 0, $3109 = 0, $3117 = 0, $3120 = 0, $3121 = 0, $3122 = 0, $3125 = 0, $3127 = 0, $313 = 0, $3138 = 0, $3146 = 0, $3149 = 0, $3150 = 0, $3151 = 0, $3154 = 0, $3156 = 0, $316 = 0, $3167 = 0, $3177 = 0, $318 = 0, $3180 = 0, $3181 = 0, $3182 = 0, $3185 = 0, $3187 = 0, $3198 = 0, $3207 = 0, $3210 = 0, $3211 = 0, $3212 = 0, $3215 = 0, $3217 = 0, $3228 = 0, $3238 = 0, $324 = 0, $3241 = 0, $3242 = 0, $3243 = 0, $3246 = 0, $3248 = 0, $3259 = 0, $3267 = 0, $3269 = 0, $3271 = 0, $3274 = 0, $3276 = 0, $3287 = 0, $3295 = 0, $3304 = 0, $3305 = 0, $3306 = 0, $3309 = 0, $3311 = 0, $332 = 0, $3322 = 0, $3334 = 0, $3336 = 0, $3343 = 0, $3359 = 0, $3361 = 0, $3368 = 0, $338 = 0, $3387 = 0, $3389 = 0, $339 = 0, $3396 = 0, $341 = 0, $3410 = 0, $3411 = 0, $3413 = 0, $3420 = 0, $3437 = 0, $3439 = 0, $3440 = 0, $3442 = 0, $3445 = 0, $3448 = 0, $3459 = 0, $3470 = 0, $3477 = 0, $3490 = 0, $3495 = 0, $3497 = 0, $3498 = 0, $350 = 0, $3500 = 0, $3502 = 0, $351 = 0, $3513 = 0, $352 = 0, $3523 = 0, $3524 = 0, $3526 = 0, $3533 = 0, $3534 = 0, $3536 = 0, $3537 = 0, $3538 = 0, $3541 = 0, $3543 = 0, $3554 = 0, $356 = 0, $3562 = 0, $3564 = 0, $3565 = 0, $3567 = 0, $3568 = 0, $3570 = 0, $3581 = 0, $3595 = 0, $3597 = 0, $3604 = 0, $3620 = 0, $3622 = 0, $3629 = 0, $363 = 0, $3649 = 0, $365 = 0, $3651 = 0, $3658 = 0, $3672 = 0, $3673 = 0, $3679 = 0, $3680 = 0, $3682 = 0, $3694 = 0, $3696 = 0, $3697 = 0, $3699 = 0, $3702 = 0, $3705 = 0, $3716 = 0, $3727 = 0, $3734 = 0, $3747 = 0, $3752 = 0, $3754 = 0, $3755 = 0, $3757 = 0, $376 = 0, $3760 = 0, $3763 = 0, $377 = 0, $3774 = 0, $3785 = 0, $3792 = 0, $380 = 0, $3805 = 0, $3806 = 0, $3808 = 0, $3815 = 0, $3816 = 0, $3819 = 0, $3821 = 0, $3822 = 0, $3823 = 0, $3824 = 0, $3827 = 0, $3829 = 0, $383 = 0, $3840 = 0, $3849 = 0, $3851 = 0, $3862 = 0, $3869 = 0, $3871 = 0, $3872 = 0, $3874 = 0, $3875 = 0, $3877 = 0, $3888 = 0, $3902 = 0, $3904 = 0, $3911 = 0, $3927 = 0, $3929 = 0, $3936 = 0, $3956 = 0, $3958 = 0, $3965 = 0, $3979 = 0, $3982 = 0, $3983 = 0, $3984 = 0, $3986 = 0, $3988 = 0, $40 = 0, $4007 = 0, $4009 = 0, $4010 = 0, $4012 = 0, $4015 = 0, $4018 = 0, $402 = 0, $4029 = 0, $4040 = 0, $4047 = 0, $4060 = 0, $4065 = 0, $4067 = 0, $4068 = 0, $4071 = 0, $4073 = 0, $4084 = 0, $4094 = 0, $4095 = 0, $4097 = 0, $4104 = 0, $4105 = 0, $4107 = 0, $4108 = 0, $4109 = 0, $411 = 0, $4112 = 0, $4114 = 0, $4125 = 0, $4133 = 0, $4135 = 0, $4136 = 0, $4138 = 0, $4139 = 0, $414 = 0, $4141 = 0, $4152 = 0, $4166 = 0, $4168 = 0, $417 = 0, $4175 = 0, $419 = 0, $4191 = 0, $4192 = 0, $4194 = 0, $4195 = 0, $4196 = 0, $4198 = 0, $4199 = 0, $4200 = 0, $4206 = 0, $4208 = 0, $4215 = 0, $422 = 0, $4229 = 0, $4231 = 0, $4232 = 0, $4233 = 0, $4234 = 0, $4236 = 0, $4238 = 0, $4258 = 0, $4260 = 0, $4261 = 0, $4263 = 0, $4266 = 0, $4269 = 0, $4280 = 0, $4291 = 0, $4298 = 0, $43 = 0, $4311 = 0, $4316 = 0, $4322 = 0, $4323 = 0, $4325 = 0, $433 = 0, $4333 = 0, $4334 = 0, $4336 = 0, $4343 = 0, $4344 = 0, $4347 = 0, $4349 = 0, $4350 = 0, $4351 = 0, $4352 = 0, $4355 = 0, $4357 = 0, $4368 = 0, $4377 = 0, $4379 = 0, $439 = 0, $4390 = 0, $4397 = 0, $4399 = 0, $4400 = 0, $4402 = 0, $4403 = 0, $4405 = 0, $4416 = 0, $442 = 0, $4430 = 0, $4432 = 0, $4439 = 0, $444 = 0, $4455 = 0, $4457 = 0, $4464 = 0, $4484 = 0, $4486 = 0, $4493 = 0, $45 = 0, $450 = 0, $4507 = 0, $4510 = 0, $4512 = 0, $4515 = 0, $4517 = 0, $4518 = 0, $4520 = 0, $4521 = 0, $4529 = 0, $4530 = 0, $4531 = 0, $4547 = 0, $4549 = 0, $4550 = 0, $4552 = 0, $4555 = 0, $4558 = 0, $4569 = 0, $458 = 0, $4580 = 0, $4587 = 0, $4600 = 0, $4605 = 0, $4607 = 0, $4608 = 0, $4611 = 0, $4613 = 0, $4624 = 0, $4634 = 0, $4635 = 0, $4637 = 0, $464 = 0, $4644 = 0, $4645 = 0, $4647 = 0, $465 = 0, $4654 = 0, $4656 = 0, $4657 = 0, $4659 = 0, $4660 = 0, $4662 = 0, $467 = 0, $4673 = 0, $4687 = 0, $4689 = 0, $4696 = 0, $4719 = 0, $4721 = 0, $4728 = 0, $4742 = 0, $4743 = 0, $4744 = 0, $4745 = 0, $475 = 0, $4751 = 0, $4753 = 0, $4754 = 0, $4756 = 0, $4759 = 0, $476 = 0, $4762 = 0, $4773 = 0, $478 = 0, $4784 = 0, $4791 = 0, $48 = 0, $4804 = 0, $4809 = 0, $481 = 0, $4815 = 0, $4816 = 0, $4818 = 0, $4826 = 0, $4827 = 0, $4829 = 0, $4836 = 0, $4837 = 0, $4839 = 0, $4843 = 0, $4845 = 0, $4846 = 0, $4848 = 0, $4849 = 0, $4851 = 0, $4862 = 0, $4875 = 0, $4877 = 0, $4884 = 0, $4900 = 0, $4902 = 0, $4909 = 0, $491 = 0, $492 = 0, $4928 = 0, $493 = 0, $4930 = 0, $4937 = 0, $4951 = 0, $4957 = 0, $4959 = 0, $4960 = 0, $4962 = 0, $4965 = 0, $4968 = 0, $4979 = 0, $4990 = 0, $4997 = 0, $5010 = 0, $5015 = 0, $5017 = 0, $5018 = 0, $5021 = 0, $5023 = 0, $5034 = 0, $5044 = 0, $5045 = 0, $5047 = 0, $505 = 0, $5054 = 0, $5055 = 0, $5057 = 0, $5061 = 0, $5063 = 0, $5064 = 0, $5066 = 0, $5067 = 0, $5069 = 0, $507 = 0, $5080 = 0, $5093 = 0, $5095 = 0, $5102 = 0, $5124 = 0, $5126 = 0, $5133 = 0, $514 = 0, $5147 = 0, $5152 = 0, $5154 = 0, $5155 = 0, $5157 = 0, $5160 = 0, $5163 = 0, $5174 = 0, $5185 = 0, $5192 = 0, $5205 = 0, $5210 = 0, $5216 = 0, $5217 = 0, $5219 = 0, $5227 = 0, $5228 = 0, $5230 = 0, $5237 = 0, $5240 = 0, $5241 = 0, $5242 = 0, $5245 = 0, $5247 = 0, $5258 = 0, $5265 = 0, $5267 = 0, $5268 = 0, $5270 = 0, $5271 = 0, $5273 = 0, $5284 = 0, $530 = 0, $532 = 0, $539 = 0, $547 = 0, $550 = 0, $552 = 0, $553 = 0, $562 = 0, $564 = 0, $578 = 0, $582 = 0, $585 = 0, $587 = 0, $59 = 0, $590 = 0, $601 = 0, $608 = 0, $611 = 0, $613 = 0, $619 = 0, $627 = 0, $633 = 0, $634 = 0, $636 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $653 = 0, $658 = 0, $68 = 0, $693 = 0, $694 = 0, $695 = 0, $70 = 0, $707 = 0, $708 = 0, $709 = 0, $714 = 0, $723 = 0, $725 = 0, $732 = 0, $740 = 0, $743 = 0, $750 = 0, $76 = 0, $766 = 0, $769 = 0, $770 = 0, $772 = 0, $774 = 0, $777 = 0, $793 = 0, $794 = 0, $796 = 0, $798 = 0, $805 = 0, $817 = 0, $818 = 0, $820 = 0, $828 = 0, $829 = 0, $832 = 0, $84 = 0, $845 = 0, $846 = 0, $847 = 0, $859 = 0, $861 = 0, $868 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $895 = 0, $896 = 0, $90 = 0, $91 = 0, $916 = 0, $919 = 0, $923 = 0, $926 = 0, $929 = 0, $93 = 0, $932 = 0, $934 = 0, $937 = 0, $957 = 0, $960 = 0, $963 = 0, $966 = 0, $968 = 0, $975 = 0, $991 = 0, $992 = 0, $993 = 0, $995 = 0, $996 = 0, $997 = 0, $f$0$i = 0, $f$0$i$i = 0, $f$0$i$i$i = 0, $f$0$i$i$i123 = 0, $f$0$i$i$i135 = 0, $f$0$i$i$i147 = 0, $f$0$i$i$i159 = 0, $f$0$i$i$i171 = 0, $f$0$i$i$i183 = 0, $f$0$i$i$i195 = 0, $f$0$i$i$i207 = 0, $f$0$i$i101 = 0, $f$0$i$i107 = 0, $f$0$i$i113 = 0, $f$0$i$i221 = 0, $f$0$i$i227 = 0, $f$0$i$i233 = 0, $f$0$i$i239 = 0, $f$0$i$i245 = 0, $f$0$i$i251 = 0, $f$0$i$i257 = 0, $f$0$i$i265 = 0, $f$0$i$i275 = 0, $f$0$i$i285 = 0, $f$0$i$i295 = 0, $f$0$i$i305 = 0, $f$0$i$i315 = 0, $f$0$i$i325 = 0, $f$0$i$i335 = 0, $f$0$i$i36 = 0, $f$0$i$i50 = 0, $f$0$i$i77 = 0, $f$0$i$i83 = 0, $f$0$i$i89 = 0, $f$0$i$i95 = 0, $f$0$i119 = 0, $f$0$i131 = 0, $f$0$i143 = 0, $f$0$i155 = 0, $f$0$i167 = 0, $f$0$i179 = 0, $f$0$i191 = 0, $f$0$i203 = 0, $f$0$i25 = 0, $f$0$i262 = 0, $f$0$i272 = 0, $f$0$i28 = 0, $f$0$i282 = 0, $f$0$i292 = 0, $f$0$i302 = 0, $f$0$i312 = 0, $f$0$i322 = 0, $f$0$i332 = 0, $f$0$i342 = 0, $f$0$i347 = 0, $f$0$i352 = 0, $f$0$i357 = 0, $f$0$i362 = 0, $f$0$i367 = 0, $f$0$i372 = 0, $f$0$i377 = 0, $f$0$i391 = 0, $f$0$i395 = 0, $f$0$i402 = 0, $f$0$i407 = 0, $f$0$i413 = 0, $f$0$i417 = 0, $f$0$i423 = 0, $f$0$i427 = 0, $f$0$i436 = 0, $f$0$i440 = 0, $f$0$i448 = 0, $f$0$i452 = 0, $f$0$i458 = 0, $f$0$i462 = 0, $f$0$i47 = 0, $f$0$i63 = 0, $f$1$i = 0, $f$1$i$i = 0, $f$1$i$i$i = 0, $f$1$i$i$i124 = 0, $f$1$i$i$i136 = 0, $f$1$i$i$i148 = 0, $f$1$i$i$i160 = 0, $f$1$i$i$i172 = 0, $f$1$i$i$i184 = 0, $f$1$i$i$i196 = 0, $f$1$i$i$i208 = 0, $f$1$i$i102 = 0, $f$1$i$i108 = 0, $f$1$i$i114 = 0, $f$1$i$i222 = 0, $f$1$i$i228 = 0, $f$1$i$i234 = 0, $f$1$i$i240 = 0, $f$1$i$i246 = 0, $f$1$i$i252 = 0, $f$1$i$i258 = 0, $f$1$i$i266 = 0, $f$1$i$i276 = 0, $f$1$i$i286 = 0, $f$1$i$i296 = 0, $f$1$i$i306 = 0, $f$1$i$i316 = 0, $f$1$i$i326 = 0, $f$1$i$i336 = 0, $f$1$i$i37 = 0, $f$1$i$i51 = 0, $f$1$i$i78 = 0, $f$1$i$i84 = 0, $f$1$i$i90 = 0, $f$1$i$i96 = 0, $f$1$i120 = 0, $f$1$i132 = 0, $f$1$i144 = 0, $f$1$i156 = 0, $f$1$i168 = 0, $f$1$i180 = 0, $f$1$i192 = 0, $f$1$i204 = 0, $f$1$i26 = 0, $f$1$i263 = 0, $f$1$i273 = 0, $f$1$i283 = 0, $f$1$i29 = 0, $f$1$i293 = 0, $f$1$i303 = 0, $f$1$i313 = 0, $f$1$i323 = 0, $f$1$i333 = 0, $f$1$i343 = 0, $f$1$i348 = 0, $f$1$i353 = 0, $f$1$i358 = 0, $f$1$i363 = 0, $f$1$i368 = 0, $f$1$i373 = 0, $f$1$i378 = 0, $f$1$i392 = 0, $f$1$i396 = 0, $f$1$i403 = 0, $f$1$i408 = 0, $f$1$i414 = 0, $f$1$i418 = 0, $f$1$i424 = 0, $f$1$i428 = 0, $f$1$i437 = 0, $f$1$i441 = 0, $f$1$i449 = 0, $f$1$i453 = 0, $f$1$i459 = 0, $f$1$i463 = 0, $f$1$i48 = 0, $f$1$i64 = 0, $f$2$i = 0, $f$2$i$i = 0, $f$2$i$i104 = 0, $f$2$i$i110 = 0, $f$2$i$i116 = 0, $f$2$i$i224 = 0, $f$2$i$i230 = 0, $f$2$i$i236 = 0, $f$2$i$i242 = 0, $f$2$i$i248 = 0, $f$2$i$i254 = 0, $f$2$i$i260 = 0, $f$2$i$i39 = 0, $f$2$i$i80 = 0, $f$2$i$i86 = 0, $f$2$i$i92 = 0, $f$2$i$i98 = 0, $f$2$i345 = 0, $f$2$i350 = 0, $f$2$i355 = 0, $f$2$i360 = 0, $f$2$i365 = 0, $f$2$i370 = 0, $f$2$i375 = 0, $f$2$i380 = 0, $or$cond4$i = 0, $storemerge$in$i = 0, $storemerge$in$i127 = 0, $storemerge$in$i139 = 0, $storemerge$in$i151 = 0, $storemerge$in$i163 = 0, $storemerge$in$i175 = 0, $storemerge$in$i187 = 0, $storemerge$in$i199 = 0, $storemerge$in$i211 = 0, $storemerge$in$i269 = 0, $storemerge$in$i279 = 0, $storemerge$in$i289 = 0, $storemerge$in$i299 = 0, $storemerge$in$i309 = 0, $storemerge$in$i319 = 0, $storemerge$in$i329 = 0, $storemerge$in$i339 = 0, $storemerge$in$i54 = 0, $storemerge1$i = 0, $storemerge1$i126 = 0, $storemerge1$i138 = 0, $storemerge1$i150 = 0, $storemerge1$i162 = 0, $storemerge1$i174 = 0, $storemerge1$i186 = 0, $storemerge1$i198 = 0, $storemerge1$i210 = 0, $storemerge1$i268 = 0, $storemerge1$i278 = 0, $storemerge1$i288 = 0, $storemerge1$i298 = 0, $storemerge1$i308 = 0, $storemerge1$i318 = 0, $storemerge1$i328 = 0, $storemerge1$i338 = 0, $storemerge1$i53 = 0, $val$0$i = 0, $val$1$i = 0, $val$2$i = 0;
 do switch ($op & 255 | 0) {
 case 1:
  {
   $1 = $this + 22 | 0;
   $3 = HEAPU16[$1 >> 1] | 0;
   $10 = $3 + 1 | 0;
   HEAP16[$this >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($10 >>> 11 & 31) << 3) >> 2] | 0) + ($10 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3 >>> 11 << 3) >> 2] | 0) + ($3 & 2047) >> 0];
   HEAP16[$1 >> 1] = $3 + 2;
   $$0 = 10;
   return $$0 | 0;
  }
 case 2:
  {
   $26 = HEAPU16[$this >> 1] | 0;
   $27 = $26 >>> 11;
   if (!(HEAP8[$this + 1312 + ($27 << 3) + 4 >> 0] | 0)) {
    $$0 = 7;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($27 << 3) >> 2] | 0) + ($26 & 2047) >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 3:
  {
   HEAP16[$this >> 1] = (HEAP16[$this >> 1] | 0) + 1 << 16 >> 16;
   $$0 = 6;
   return $$0 | 0;
  }
 case 4:
  {
   $40 = $this + 1 | 0;
   $43 = (HEAPU8[$40 >> 0] | 0) + 1 | 0;
   $45 = $43 & 255;
   $48 = ($45 | 0) == 0 ? 64 : $43 & 128;
   if (!($43 & 15)) $f$0$i = ($48 & 255 | 16) & 255; else $f$0$i = $48;
   if (($45 | 0) == 128) $f$1$i = ($f$0$i & 255 | 4) & 255; else $f$1$i = $f$0$i;
   $59 = $this + 6 | 0;
   HEAP8[$59 >> 0] = HEAPU8[$59 >> 0] & 1 | $f$1$i & 255;
   HEAP8[$40 >> 0] = $43;
   $$0 = 4;
   return $$0 | 0;
  }
 case 5:
  {
   $65 = $this + 1 | 0;
   $68 = (HEAPU8[$65 >> 0] | 0) + 255 | 0;
   $70 = $68 & 255;
   if (!$70) $76 = 66; else $76 = ($68 & 128 | 2) & 255;
   if (($68 & 15 | 0) == 15) $f$0$i28 = ($76 & 255 | 16) & 255; else $f$0$i28 = $76;
   if (($70 | 0) == 127) $f$1$i29 = ($f$0$i28 & 255 | 4) & 255; else $f$1$i29 = $f$0$i28;
   $84 = $this + 6 | 0;
   HEAP8[$84 >> 0] = HEAPU8[$84 >> 0] & 1 | $f$1$i29 & 255;
   HEAP8[$65 >> 0] = $68;
   $$0 = 4;
   return $$0 | 0;
  }
 case 6:
  {
   $90 = $this + 22 | 0;
   $91 = HEAP16[$90 >> 1] | 0;
   HEAP16[$90 >> 1] = $91 + 1 << 16 >> 16;
   $93 = $91 & 65535;
   HEAP8[$this + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($93 >>> 11 << 3) >> 2] | 0) + ($93 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 7:
  {
   $101 = $this + 6 | 0;
   $102 = $101 + 1 | 0;
   $103 = HEAP8[$102 >> 0] | 0;
   $104 = $103 & 255;
   HEAP8[$101 >> 0] = HEAPU8[$101 >> 0] & 196 | ($103 & 255) >>> 7 & 255;
   HEAP8[$102 >> 0] = $104 << 1 | $104 >>> 7;
   $$0 = 4;
   return $$0 | 0;
  }
 case 8:
  {
   $115 = $this + 6 | 0;
   $116 = $this + 20 | 0;
   $117 = HEAP16[$115 >> 1] | 0;
   HEAP16[$115 >> 1] = HEAP16[$116 >> 1] | 0;
   HEAP16[$116 >> 1] = $117;
   $$0 = 4;
   return $$0 | 0;
  }
 case 9:
  {
   $119 = $this + 4 | 0;
   $120 = HEAP32[$119 >> 2] | 0;
   $122 = HEAP16[$this >> 1] | 0;
   $125 = ($122 & 65535) + ($120 & 65535) | 0;
   HEAP8[$this + 6 >> 0] = $120 >>> 16 & 196 | $125 >>> 16 | $125 >>> 8 & 40 | (($122 ^ $120 & 65535) & 65535 ^ $125) >>> 8 & 16;
   HEAP16[$119 >> 1] = $125;
   $$0 = 11;
   return $$0 | 0;
  }
 case 10:
  {
   $143 = HEAPU16[$this >> 1] | 0;
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($143 >>> 11 << 3) >> 2] | 0) + ($143 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 11:
  {
   HEAP16[$this >> 1] = (HEAP16[$this >> 1] | 0) + -1 << 16 >> 16;
   $$0 = 6;
   return $$0 | 0;
  }
 case 12:
  {
   $156 = (HEAPU8[$this >> 0] | 0) + 1 | 0;
   $158 = $156 & 255;
   $161 = ($158 | 0) == 0 ? 64 : $156 & 128;
   if (!($156 & 15)) $f$0$i462 = ($161 & 255 | 16) & 255; else $f$0$i462 = $161;
   if (($158 | 0) == 128) $f$1$i463 = ($f$0$i462 & 255 | 4) & 255; else $f$1$i463 = $f$0$i462;
   $172 = $this + 6 | 0;
   HEAP8[$172 >> 0] = HEAPU8[$172 >> 0] & 1 | $f$1$i463 & 255;
   HEAP8[$this >> 0] = $156;
   $$0 = 4;
   return $$0 | 0;
  }
 case 13:
  {
   $180 = (HEAPU8[$this >> 0] | 0) + 255 | 0;
   $182 = $180 & 255;
   if (!$182) $188 = 66; else $188 = ($180 & 128 | 2) & 255;
   if (($180 & 15 | 0) == 15) $f$0$i458 = ($188 & 255 | 16) & 255; else $f$0$i458 = $188;
   if (($182 | 0) == 127) $f$1$i459 = ($f$0$i458 & 255 | 4) & 255; else $f$1$i459 = $f$0$i458;
   $196 = $this + 6 | 0;
   HEAP8[$196 >> 0] = HEAPU8[$196 >> 0] & 1 | $f$1$i459 & 255;
   HEAP8[$this >> 0] = $180;
   $$0 = 4;
   return $$0 | 0;
  }
 case 14:
  {
   $202 = $this + 22 | 0;
   $203 = HEAP16[$202 >> 1] | 0;
   HEAP16[$202 >> 1] = $203 + 1 << 16 >> 16;
   $205 = $203 & 65535;
   HEAP8[$this >> 0] = HEAP8[(HEAP32[$this + 1312 + ($205 >>> 11 << 3) >> 2] | 0) + ($205 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 15:
  {
   $212 = $this + 6 | 0;
   $213 = $212 + 1 | 0;
   $215 = HEAPU8[$213 >> 0] | 0;
   HEAP8[$212 >> 0] = HEAPU8[$212 >> 0] & 196 | $215 & 1;
   HEAP8[$213 >> 0] = $215 >>> 1 | $215 << 7;
   $$0 = 4;
   return $$0 | 0;
  }
 case 16:
  {
   $226 = $this + 1 | 0;
   $228 = (HEAP8[$226 >> 0] | 0) + -1 << 24 >> 24;
   HEAP8[$226 >> 0] = $228;
   $230 = $this + 22 | 0;
   $231 = HEAP16[$230 >> 1] | 0;
   if (!($228 << 24 >> 24)) {
    HEAP16[$230 >> 1] = $231 + 1 << 16 >> 16;
    $$0 = 8;
    return $$0 | 0;
   } else {
    $232 = $231 & 65535;
    HEAP16[$230 >> 1] = $232 + 1 + (HEAP8[(HEAP32[$this + 1312 + ($232 >>> 11 << 3) >> 2] | 0) + ($232 & 2047) >> 0] | 0);
    $$0 = 13;
    return $$0 | 0;
   }
   break;
  }
 case 17:
  {
   $244 = $this + 22 | 0;
   $246 = HEAPU16[$244 >> 1] | 0;
   $253 = $246 + 1 | 0;
   HEAP16[$this + 2 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($253 >>> 11 & 31) << 3) >> 2] | 0) + ($253 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($246 >>> 11 << 3) >> 2] | 0) + ($246 & 2047) >> 0];
   HEAP16[$244 >> 1] = $246 + 2;
   $$0 = 10;
   return $$0 | 0;
  }
 case 18:
  {
   $271 = HEAPU16[$this + 2 >> 1] | 0;
   $272 = $271 >>> 11;
   if (!(HEAP8[$this + 1312 + ($272 << 3) + 4 >> 0] | 0)) {
    $$0 = 7;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($272 << 3) >> 2] | 0) + ($271 & 2047) >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 19:
  {
   $283 = $this + 2 | 0;
   HEAP16[$283 >> 1] = (HEAP16[$283 >> 1] | 0) + 1 << 16 >> 16;
   $$0 = 6;
   return $$0 | 0;
  }
 case 20:
  {
   $287 = $this + 2 + 1 | 0;
   $290 = (HEAPU8[$287 >> 0] | 0) + 1 | 0;
   $292 = $290 & 255;
   $295 = ($292 | 0) == 0 ? 64 : $290 & 128;
   if (!($290 & 15)) $f$0$i452 = ($295 & 255 | 16) & 255; else $f$0$i452 = $295;
   if (($292 | 0) == 128) $f$1$i453 = ($f$0$i452 & 255 | 4) & 255; else $f$1$i453 = $f$0$i452;
   $306 = $this + 6 | 0;
   HEAP8[$306 >> 0] = HEAPU8[$306 >> 0] & 1 | $f$1$i453 & 255;
   HEAP8[$287 >> 0] = $290;
   $$0 = 4;
   return $$0 | 0;
  }
 case 21:
  {
   $313 = $this + 2 + 1 | 0;
   $316 = (HEAPU8[$313 >> 0] | 0) + 255 | 0;
   $318 = $316 & 255;
   if (!$318) $324 = 66; else $324 = ($316 & 128 | 2) & 255;
   if (($316 & 15 | 0) == 15) $f$0$i448 = ($324 & 255 | 16) & 255; else $f$0$i448 = $324;
   if (($318 | 0) == 127) $f$1$i449 = ($f$0$i448 & 255 | 4) & 255; else $f$1$i449 = $f$0$i448;
   $332 = $this + 6 | 0;
   HEAP8[$332 >> 0] = HEAPU8[$332 >> 0] & 1 | $f$1$i449 & 255;
   HEAP8[$313 >> 0] = $316;
   $$0 = 4;
   return $$0 | 0;
  }
 case 22:
  {
   $338 = $this + 22 | 0;
   $339 = HEAP16[$338 >> 1] | 0;
   HEAP16[$338 >> 1] = $339 + 1 << 16 >> 16;
   $341 = $339 & 65535;
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($341 >>> 11 << 3) >> 2] | 0) + ($341 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 23:
  {
   $350 = $this + 6 | 0;
   $351 = $350 + 1 | 0;
   $352 = HEAP8[$351 >> 0] | 0;
   $356 = HEAPU8[$350 >> 0] | 0;
   HEAP8[$350 >> 0] = $356 & 196 | ($352 & 255) >>> 7 & 255;
   HEAP8[$351 >> 0] = $356 & 1 | ($352 & 255) << 1;
   $$0 = 4;
   return $$0 | 0;
  }
 case 24:
  {
   $363 = $this + 22 | 0;
   $365 = HEAPU16[$363 >> 1] | 0;
   HEAP16[$363 >> 1] = $365 + 1 + (HEAP8[(HEAP32[$this + 1312 + ($365 >>> 11 << 3) >> 2] | 0) + ($365 & 2047) >> 0] | 0);
   $$0 = 12;
   return $$0 | 0;
  }
 case 25:
  {
   $376 = $this + 4 | 0;
   $377 = HEAP32[$376 >> 2] | 0;
   $380 = HEAP16[$this + 2 >> 1] | 0;
   $383 = ($380 & 65535) + ($377 & 65535) | 0;
   HEAP8[$this + 6 >> 0] = $377 >>> 16 & 196 | $383 >>> 16 | $383 >>> 8 & 40 | (($380 ^ $377 & 65535) & 65535 ^ $383) >>> 8 & 16;
   HEAP16[$376 >> 1] = $383;
   $$0 = 11;
   return $$0 | 0;
  }
 case 26:
  {
   $402 = HEAPU16[$this + 2 >> 1] | 0;
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($402 >>> 11 << 3) >> 2] | 0) + ($402 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 27:
  {
   $411 = $this + 2 | 0;
   HEAP16[$411 >> 1] = (HEAP16[$411 >> 1] | 0) + -1 << 16 >> 16;
   $$0 = 6;
   return $$0 | 0;
  }
 case 28:
  {
   $414 = $this + 2 | 0;
   $417 = (HEAPU8[$414 >> 0] | 0) + 1 | 0;
   $419 = $417 & 255;
   $422 = ($419 | 0) == 0 ? 64 : $417 & 128;
   if (!($417 & 15)) $f$0$i440 = ($422 & 255 | 16) & 255; else $f$0$i440 = $422;
   if (($419 | 0) == 128) $f$1$i441 = ($f$0$i440 & 255 | 4) & 255; else $f$1$i441 = $f$0$i440;
   $433 = $this + 6 | 0;
   HEAP8[$433 >> 0] = HEAPU8[$433 >> 0] & 1 | $f$1$i441 & 255;
   HEAP8[$414 >> 0] = $417;
   $$0 = 4;
   return $$0 | 0;
  }
 case 29:
  {
   $439 = $this + 2 | 0;
   $442 = (HEAPU8[$439 >> 0] | 0) + 255 | 0;
   $444 = $442 & 255;
   if (!$444) $450 = 66; else $450 = ($442 & 128 | 2) & 255;
   if (($442 & 15 | 0) == 15) $f$0$i436 = ($450 & 255 | 16) & 255; else $f$0$i436 = $450;
   if (($444 | 0) == 127) $f$1$i437 = ($f$0$i436 & 255 | 4) & 255; else $f$1$i437 = $f$0$i436;
   $458 = $this + 6 | 0;
   HEAP8[$458 >> 0] = HEAPU8[$458 >> 0] & 1 | $f$1$i437 & 255;
   HEAP8[$439 >> 0] = $442;
   $$0 = 4;
   return $$0 | 0;
  }
 case 30:
  {
   $464 = $this + 22 | 0;
   $465 = HEAP16[$464 >> 1] | 0;
   HEAP16[$464 >> 1] = $465 + 1 << 16 >> 16;
   $467 = $465 & 65535;
   HEAP8[$this + 2 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($467 >>> 11 << 3) >> 2] | 0) + ($467 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 31:
  {
   $475 = $this + 6 | 0;
   $476 = $475 + 1 | 0;
   $478 = HEAPU8[$476 >> 0] | 0;
   $481 = HEAPU8[$475 >> 0] | 0;
   HEAP8[$475 >> 0] = $481 & 196 | $478 & 1;
   HEAP8[$476 >> 0] = $481 << 7 | $478 >>> 1;
   $$0 = 4;
   return $$0 | 0;
  }
 case 32:
  {
   $491 = $this + 22 | 0;
   $492 = HEAP16[$491 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 64)) {
    $493 = $492 & 65535;
    HEAP16[$491 >> 1] = $493 + 1 + (HEAP8[(HEAP32[$this + 1312 + ($493 >>> 11 << 3) >> 2] | 0) + ($493 & 2047) >> 0] | 0);
    $$0 = 12;
    return $$0 | 0;
   } else {
    HEAP16[$491 >> 1] = $492 + 1 << 16 >> 16;
    $$0 = 7;
    return $$0 | 0;
   }
   break;
  }
 case 33:
  {
   $505 = $this + 22 | 0;
   $507 = HEAPU16[$505 >> 1] | 0;
   $514 = $507 + 1 | 0;
   HEAP16[$this + 4 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($514 >>> 11 & 31) << 3) >> 2] | 0) + ($514 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($507 >>> 11 << 3) >> 2] | 0) + ($507 & 2047) >> 0];
   HEAP16[$505 >> 1] = $507 + 2;
   $$0 = 10;
   return $$0 | 0;
  }
 case 34:
  {
   $530 = $this + 22 | 0;
   $532 = HEAPU16[$530 >> 1] | 0;
   $539 = $532 + 1 | 0;
   $547 = HEAPU8[(HEAP32[$this + 1312 + (($539 >>> 11 & 31) << 3) >> 2] | 0) + ($539 & 2047) >> 0] | 0;
   $550 = $547 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($532 >>> 11 << 3) >> 2] | 0) + ($532 & 2047) >> 0];
   $552 = HEAP16[$this + 4 >> 1] | 0;
   $553 = $547 >>> 3;
   if (HEAP8[$this + 1312 + ($553 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($553 << 3) >> 2] | 0) + ($550 & 2047) >> 0] = $552;
   $562 = $550 + 1 | 0;
   $564 = $562 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($564 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($564 << 3) >> 2] | 0) + ($562 & 2047) >> 0] = ($552 & 65535) >>> 8;
   HEAP16[$530 >> 1] = (HEAPU16[$530 >> 1] | 0) + 2;
   $$0 = 16;
   return $$0 | 0;
  }
 case 35:
  {
   $578 = $this + 4 | 0;
   HEAP16[$578 >> 1] = (HEAP16[$578 >> 1] | 0) + 1 << 16 >> 16;
   $$0 = 6;
   return $$0 | 0;
  }
 case 36:
  {
   $582 = $this + 4 + 1 | 0;
   $585 = (HEAPU8[$582 >> 0] | 0) + 1 | 0;
   $587 = $585 & 255;
   $590 = ($587 | 0) == 0 ? 64 : $585 & 128;
   if (!($585 & 15)) $f$0$i427 = ($590 & 255 | 16) & 255; else $f$0$i427 = $590;
   if (($587 | 0) == 128) $f$1$i428 = ($f$0$i427 & 255 | 4) & 255; else $f$1$i428 = $f$0$i427;
   $601 = $this + 6 | 0;
   HEAP8[$601 >> 0] = HEAPU8[$601 >> 0] & 1 | $f$1$i428 & 255;
   HEAP8[$582 >> 0] = $585;
   $$0 = 4;
   return $$0 | 0;
  }
 case 37:
  {
   $608 = $this + 4 + 1 | 0;
   $611 = (HEAPU8[$608 >> 0] | 0) + 255 | 0;
   $613 = $611 & 255;
   if (!$613) $619 = 66; else $619 = ($611 & 128 | 2) & 255;
   if (($611 & 15 | 0) == 15) $f$0$i423 = ($619 & 255 | 16) & 255; else $f$0$i423 = $619;
   if (($613 | 0) == 127) $f$1$i424 = ($f$0$i423 & 255 | 4) & 255; else $f$1$i424 = $f$0$i423;
   $627 = $this + 6 | 0;
   HEAP8[$627 >> 0] = HEAPU8[$627 >> 0] & 1 | $f$1$i424 & 255;
   HEAP8[$608 >> 0] = $611;
   $$0 = 4;
   return $$0 | 0;
  }
 case 38:
  {
   $633 = $this + 22 | 0;
   $634 = HEAP16[$633 >> 1] | 0;
   HEAP16[$633 >> 1] = $634 + 1 << 16 >> 16;
   $636 = $634 & 65535;
   HEAP8[$this + 4 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($636 >>> 11 << 3) >> 2] | 0) + ($636 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 39:
  {
   $645 = $this + 6 | 0;
   $646 = $645 + 1 | 0;
   $647 = HEAP8[$646 >> 0] | 0;
   $648 = HEAP16[$645 >> 1] | 0;
   $649 = $648 & 255;
   $650 = $648 & 255;
   $653 = $647 & 255;
   $or$cond4$i = ($653 & 14) >>> 0 < 10 & ($650 & 16 | 0) == 0;
   $658 = ($648 & 65535) >>> 8 & 255;
   if (!($650 & 2)) {
    $val$1$i = $or$cond4$i ? $647 : $653 + 6 & 255;
    if (($647 & 255) < 154 & ($649 & 1) == 0) $val$2$i = $val$1$i; else $val$2$i = ($val$1$i & 255) + 96 & 255;
   } else {
    $val$0$i = $or$cond4$i ? $647 : $653 + 250 & 255;
    if (($647 & 255) < 154 & ($649 & 1) == 0) $val$2$i = $val$0$i; else $val$2$i = ($val$0$i & 255) + 160 & 255;
   }
   HEAP8[$645 >> 0] = ($658 & 255) > 153 | $650 & 3 | HEAPU8[($val$2$i & 255) + ($this + 31) >> 0] | ($val$2$i ^ $658) & 16;
   HEAP8[$646 >> 0] = $val$2$i;
   $$0 = 4;
   return $$0 | 0;
  }
 case 40:
  {
   $693 = $this + 22 | 0;
   $694 = HEAP16[$693 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 64)) {
    HEAP16[$693 >> 1] = $694 + 1 << 16 >> 16;
    $$0 = 7;
    return $$0 | 0;
   } else {
    $695 = $694 & 65535;
    HEAP16[$693 >> 1] = $695 + 1 + (HEAP8[(HEAP32[$this + 1312 + ($695 >>> 11 << 3) >> 2] | 0) + ($695 & 2047) >> 0] | 0);
    $$0 = 12;
    return $$0 | 0;
   }
   break;
  }
 case 41:
  {
   $707 = $this + 4 | 0;
   $708 = HEAP32[$707 >> 2] | 0;
   $709 = $708 & 65535;
   $714 = $709 >>> 7;
   HEAP8[$this + 6 >> 0] = $714 & 40 | $709 >>> 15 | $714 & 16 | $708 >>> 16 & 196;
   HEAP16[$707 >> 1] = $709 << 1;
   $$0 = 11;
   return $$0 | 0;
  }
 case 42:
  {
   $723 = $this + 22 | 0;
   $725 = HEAPU16[$723 >> 1] | 0;
   $732 = $725 + 1 | 0;
   $740 = HEAPU8[(HEAP32[$this + 1312 + (($732 >>> 11 & 31) << 3) >> 2] | 0) + ($732 & 2047) >> 0] | 0;
   $743 = $740 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($725 >>> 11 << 3) >> 2] | 0) + ($725 & 2047) >> 0];
   $750 = $743 + 1 | 0;
   HEAP16[$this + 4 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($750 >>> 11 & 31) << 3) >> 2] | 0) + ($750 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($740 >>> 3 << 3) >> 2] | 0) + ($743 & 2047) >> 0];
   HEAP16[$723 >> 1] = $725 + 2;
   $$0 = 16;
   return $$0 | 0;
  }
 case 43:
  {
   $766 = $this + 4 | 0;
   HEAP16[$766 >> 1] = (HEAP16[$766 >> 1] | 0) + -1 << 16 >> 16;
   $$0 = 6;
   return $$0 | 0;
  }
 case 44:
  {
   $769 = $this + 4 | 0;
   $770 = HEAP32[$769 >> 2] | 0;
   $772 = ($770 & 255) + 1 | 0;
   $774 = $770 + 1 & 255;
   $777 = ($774 | 0) == 0 ? 64 : $772 & 128;
   if (!($770 + 1 & 15)) $f$0$i417 = ($777 & 255 | 16) & 255; else $f$0$i417 = $777;
   if (($774 | 0) == 128) $f$1$i418 = ($f$0$i417 & 255 | 4) & 255; else $f$1$i418 = $f$0$i417;
   HEAP8[$this + 6 >> 0] = $770 >>> 16 & 1 | $f$1$i418 & 255;
   HEAP8[$769 >> 0] = $772;
   $$0 = 4;
   return $$0 | 0;
  }
 case 45:
  {
   $793 = $this + 4 | 0;
   $794 = HEAP32[$793 >> 2] | 0;
   $796 = ($794 & 255) + 255 | 0;
   $798 = $794 + 255 & 255;
   if (!$798) $805 = 66; else $805 = ($796 & 128 | 2) & 255;
   if (($794 + 15 & 15 | 0) == 15) $f$0$i413 = ($805 & 255 | 16) & 255; else $f$0$i413 = $805;
   if (($798 | 0) == 127) $f$1$i414 = ($f$0$i413 & 255 | 4) & 255; else $f$1$i414 = $f$0$i413;
   HEAP8[$this + 6 >> 0] = $794 >>> 16 & 1 | $f$1$i414 & 255;
   HEAP8[$793 >> 0] = $796;
   $$0 = 4;
   return $$0 | 0;
  }
 case 46:
  {
   $817 = $this + 22 | 0;
   $818 = HEAP16[$817 >> 1] | 0;
   HEAP16[$817 >> 1] = $818 + 1 << 16 >> 16;
   $820 = $818 & 65535;
   HEAP8[$this + 4 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($820 >>> 11 << 3) >> 2] | 0) + ($820 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 47:
  {
   $828 = $this + 6 | 0;
   $829 = $828 + 1 | 0;
   $832 = HEAPU8[$829 >> 0] ^ 255;
   HEAP8[$829 >> 0] = $832;
   HEAP8[$828 >> 0] = $832 & 40 | HEAPU8[$828 >> 0] & 197 | 18;
   $$0 = 4;
   return $$0 | 0;
  }
 case 48:
  {
   $845 = $this + 22 | 0;
   $846 = HEAP16[$845 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 1)) {
    $847 = $846 & 65535;
    HEAP16[$845 >> 1] = $847 + 1 + (HEAP8[(HEAP32[$this + 1312 + ($847 >>> 11 << 3) >> 2] | 0) + ($847 & 2047) >> 0] | 0);
    $$0 = 12;
    return $$0 | 0;
   } else {
    HEAP16[$845 >> 1] = $846 + 1 << 16 >> 16;
    $$0 = 7;
    return $$0 | 0;
   }
   break;
  }
 case 49:
  {
   $859 = $this + 22 | 0;
   $861 = HEAPU16[$859 >> 1] | 0;
   $868 = $861 + 1 | 0;
   HEAP16[$this + 12 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($868 >>> 11 & 31) << 3) >> 2] | 0) + ($868 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($861 >>> 11 << 3) >> 2] | 0) + ($861 & 2047) >> 0];
   HEAP16[$859 >> 1] = $861 + 2;
   $$0 = 10;
   return $$0 | 0;
  }
 case 50:
  {
   $884 = $this + 22 | 0;
   $885 = HEAP16[$884 >> 1] | 0;
   $886 = $885 & 65535;
   $887 = $886 + 1 | 0;
   $895 = HEAPU8[(HEAP32[$this + 1312 + (($887 >>> 11 & 31) << 3) >> 2] | 0) + ($887 & 2047) >> 0] | 0;
   $896 = $895 >>> 3;
   if (!(HEAP8[$this + 1312 + ($896 << 3) + 4 >> 0] | 0)) $916 = $885; else {
    HEAP8[(HEAP32[$this + 1312 + ($896 << 3) >> 2] | 0) + (HEAPU8[(HEAP32[$this + 1312 + ($886 >>> 11 << 3) >> 2] | 0) + ($886 & 2047) >> 0] | $895 << 8 & 1792) >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
    $916 = HEAP16[$884 >> 1] | 0;
   }
   HEAP16[$884 >> 1] = ($916 & 65535) + 2;
   $$0 = 13;
   return $$0 | 0;
  }
 case 51:
  {
   $919 = $this + 12 | 0;
   HEAP16[$919 >> 1] = (HEAP16[$919 >> 1] | 0) + 1 << 16 >> 16;
   $$0 = 6;
   return $$0 | 0;
  }
 case 52:
  {
   $923 = HEAP32[$this + 4 >> 2] | 0;
   $926 = $923 >>> 11 & 31;
   $929 = (HEAP32[$this + 1312 + ($926 << 3) >> 2] | 0) + ($923 & 2047) | 0;
   $932 = (HEAPU8[$929 >> 0] | 0) + 1 | 0;
   $934 = $932 & 255;
   $937 = ($934 | 0) == 0 ? 64 : $932 & 128;
   if (!($932 & 15)) $f$0$i407 = ($937 & 255 | 16) & 255; else $f$0$i407 = $937;
   if (($934 | 0) == 128) $f$1$i408 = ($f$0$i407 & 255 | 4) & 255; else $f$1$i408 = $f$0$i407;
   HEAP8[$this + 6 >> 0] = $923 >>> 16 & 1 | $f$1$i408 & 255;
   if (!(HEAP8[$this + 1312 + ($926 << 3) + 4 >> 0] | 0)) {
    $$0 = 11;
    return $$0 | 0;
   }
   HEAP8[$929 >> 0] = $932;
   $$0 = 11;
   return $$0 | 0;
  }
 case 53:
  {
   $957 = HEAP32[$this + 4 >> 2] | 0;
   $960 = $957 >>> 11 & 31;
   $963 = (HEAP32[$this + 1312 + ($960 << 3) >> 2] | 0) + ($957 & 2047) | 0;
   $966 = (HEAPU8[$963 >> 0] | 0) + 255 | 0;
   $968 = $966 & 255;
   if (!$968) $975 = 66; else $975 = ($966 & 128 | 2) & 255;
   if (($966 & 15 | 0) == 15) $f$0$i402 = ($975 & 255 | 16) & 255; else $f$0$i402 = $975;
   if (($968 | 0) == 127) $f$1$i403 = ($f$0$i402 & 255 | 4) & 255; else $f$1$i403 = $f$0$i402;
   HEAP8[$this + 6 >> 0] = $957 >>> 16 & 1 | $f$1$i403 & 255;
   if (!(HEAP8[$this + 1312 + ($960 << 3) + 4 >> 0] | 0)) {
    $$0 = 11;
    return $$0 | 0;
   }
   HEAP8[$963 >> 0] = $966;
   $$0 = 11;
   return $$0 | 0;
  }
 case 54:
  {
   $991 = HEAP16[$this + 4 >> 1] | 0;
   $992 = $this + 22 | 0;
   $993 = HEAP16[$992 >> 1] | 0;
   HEAP16[$992 >> 1] = $993 + 1 << 16 >> 16;
   $995 = $993 & 65535;
   $996 = $991 & 65535;
   $997 = $996 >>> 11;
   if (!(HEAP8[$this + 1312 + ($997 << 3) + 4 >> 0] | 0)) {
    $$0 = 10;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($997 << 3) >> 2] | 0) + ($996 & 2047) >> 0] = HEAP8[(HEAP32[$this + 1312 + ($995 >>> 11 << 3) >> 2] | 0) + ($995 & 2047) >> 0] | 0;
   $$0 = 10;
   return $$0 | 0;
  }
 case 55:
  {
   $1011 = $this + 6 | 0;
   $1012 = HEAP16[$1011 >> 1] | 0;
   HEAP8[$1011 >> 0] = $1012 & 236 | ($1012 & 65535) >>> 8 & 40 | 1;
   $$0 = 4;
   return $$0 | 0;
  }
 case 56:
  {
   $1025 = $this + 22 | 0;
   $1026 = HEAP16[$1025 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 1)) {
    HEAP16[$1025 >> 1] = $1026 + 1 << 16 >> 16;
    $$0 = 7;
    return $$0 | 0;
   } else {
    $1027 = $1026 & 65535;
    HEAP16[$1025 >> 1] = $1027 + 1 + (HEAP8[(HEAP32[$this + 1312 + ($1027 >>> 11 << 3) >> 2] | 0) + ($1027 & 2047) >> 0] | 0);
    $$0 = 12;
    return $$0 | 0;
   }
   break;
  }
 case 57:
  {
   $1039 = $this + 4 | 0;
   $1040 = HEAP32[$1039 >> 2] | 0;
   $1043 = HEAP16[$this + 12 >> 1] | 0;
   $1046 = ($1043 & 65535) + ($1040 & 65535) | 0;
   HEAP8[$this + 6 >> 0] = $1040 >>> 16 & 196 | $1046 >>> 16 | $1046 >>> 8 & 40 | (($1043 ^ $1040 & 65535) & 65535 ^ $1046) >>> 8 & 16;
   HEAP16[$1039 >> 1] = $1046;
   $$0 = 11;
   return $$0 | 0;
  }
 case 58:
  {
   $1063 = $this + 22 | 0;
   $1065 = HEAPU16[$1063 >> 1] | 0;
   $1072 = $1065 + 1 | 0;
   $1080 = HEAPU8[(HEAP32[$this + 1312 + (($1072 >>> 11 & 31) << 3) >> 2] | 0) + ($1072 & 2047) >> 0] | 0;
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($1080 >>> 3 << 3) >> 2] | 0) + ($1080 << 8 & 1792 | HEAPU8[(HEAP32[$this + 1312 + ($1065 >>> 11 << 3) >> 2] | 0) + ($1065 & 2047) >> 0]) >> 0] | 0;
   HEAP16[$1063 >> 1] = $1065 + 2;
   $$0 = 13;
   return $$0 | 0;
  }
 case 59:
  {
   $1093 = $this + 12 | 0;
   HEAP16[$1093 >> 1] = (HEAP16[$1093 >> 1] | 0) + -1 << 16 >> 16;
   $$0 = 6;
   return $$0 | 0;
  }
 case 60:
  {
   $1096 = $this + 6 | 0;
   $1097 = $1096 + 1 | 0;
   $1100 = (HEAPU8[$1097 >> 0] | 0) + 1 | 0;
   $1102 = $1100 & 255;
   $1105 = ($1102 | 0) == 0 ? 64 : $1100 & 128;
   if (!($1100 & 15)) $f$0$i395 = ($1105 & 255 | 16) & 255; else $f$0$i395 = $1105;
   if (($1102 | 0) == 128) $f$1$i396 = ($f$0$i395 & 255 | 4) & 255; else $f$1$i396 = $f$0$i395;
   HEAP8[$1096 >> 0] = HEAPU8[$1096 >> 0] & 1 | $f$1$i396 & 255;
   HEAP8[$1097 >> 0] = $1100;
   $$0 = 4;
   return $$0 | 0;
  }
 case 61:
  {
   $1121 = $this + 6 | 0;
   $1122 = $1121 + 1 | 0;
   $1125 = (HEAPU8[$1122 >> 0] | 0) + 255 | 0;
   $1127 = $1125 & 255;
   if (!$1127) $1133 = 66; else $1133 = ($1125 & 128 | 2) & 255;
   if (($1125 & 15 | 0) == 15) $f$0$i391 = ($1133 & 255 | 16) & 255; else $f$0$i391 = $1133;
   if (($1127 | 0) == 127) $f$1$i392 = ($f$0$i391 & 255 | 4) & 255; else $f$1$i392 = $f$0$i391;
   HEAP8[$1121 >> 0] = HEAPU8[$1121 >> 0] & 1 | $f$1$i392 & 255;
   HEAP8[$1122 >> 0] = $1125;
   $$0 = 4;
   return $$0 | 0;
  }
 case 62:
  {
   $1146 = $this + 22 | 0;
   $1147 = HEAP16[$1146 >> 1] | 0;
   HEAP16[$1146 >> 1] = $1147 + 1 << 16 >> 16;
   $1149 = $1147 & 65535;
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($1149 >>> 11 << 3) >> 2] | 0) + ($1149 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 63:
  {
   $1158 = $this + 6 | 0;
   $1159 = HEAP16[$1158 >> 1] | 0;
   $1160 = $1159 & 65535;
   HEAP8[$1158 >> 0] = ($1160 << 4 & 16 | $1160 & 237 | ($1159 & 65535) >>> 8 & 40) ^ 1;
   $$0 = 4;
   return $$0 | 0;
  }
 case 65:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 66:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 67:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 68:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 4 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 69:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 4 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 70:
  {
   $1189 = HEAPU16[$this + 4 >> 1] | 0;
   HEAP8[$this + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($1189 >>> 11 << 3) >> 2] | 0) + ($1189 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 71:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 72:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 74:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 75:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 76:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 4 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 77:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 4 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 78:
  {
   $1215 = HEAPU16[$this + 4 >> 1] | 0;
   HEAP8[$this >> 0] = HEAP8[(HEAP32[$this + 1312 + ($1215 >>> 11 << 3) >> 2] | 0) + ($1215 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 79:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 80:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 81:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 83:
  {
   $1232 = $this + 2 | 0;
   HEAP8[$1232 + 1 >> 0] = HEAP8[$1232 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 84:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 4 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 85:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 4 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 86:
  {
   $1246 = HEAPU16[$this + 4 >> 1] | 0;
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($1246 >>> 11 << 3) >> 2] | 0) + ($1246 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 87:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 88:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 89:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 90:
  {
   $1265 = $this + 2 | 0;
   HEAP8[$1265 >> 0] = HEAP8[$1265 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 92:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 4 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 93:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 4 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 94:
  {
   $1277 = HEAPU16[$this + 4 >> 1] | 0;
   HEAP8[$this + 2 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($1277 >>> 11 << 3) >> 2] | 0) + ($1277 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 95:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 96:
  {
   HEAP8[$this + 4 + 1 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 97:
  {
   HEAP8[$this + 4 + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 98:
  {
   HEAP8[$this + 4 + 1 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 99:
  {
   HEAP8[$this + 4 + 1 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 101:
  {
   $1305 = $this + 4 | 0;
   HEAP8[$1305 + 1 >> 0] = HEAP8[$1305 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 102:
  {
   $1308 = $this + 4 | 0;
   $1310 = HEAPU16[$1308 >> 1] | 0;
   HEAP8[$1308 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($1310 >>> 11 << 3) >> 2] | 0) + ($1310 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 103:
  {
   HEAP8[$this + 4 + 1 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 104:
  {
   HEAP8[$this + 4 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 105:
  {
   HEAP8[$this + 4 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 106:
  {
   HEAP8[$this + 4 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 107:
  {
   HEAP8[$this + 4 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 108:
  {
   $1335 = $this + 4 | 0;
   HEAP8[$1335 >> 0] = HEAP8[$1335 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 110:
  {
   $1338 = $this + 4 | 0;
   $1340 = HEAPU16[$1338 >> 1] | 0;
   HEAP8[$1338 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($1340 >>> 11 << 3) >> 2] | 0) + ($1340 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 111:
  {
   HEAP8[$this + 4 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 112:
  {
   $1353 = HEAPU16[$this + 4 >> 1] | 0;
   $1354 = $1353 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1354 << 3) + 4 >> 0] | 0)) {
    $$0 = 7;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($1354 << 3) >> 2] | 0) + ($1353 & 2047) >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 113:
  {
   $1366 = HEAPU16[$this + 4 >> 1] | 0;
   $1367 = $1366 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1367 << 3) + 4 >> 0] | 0)) {
    $$0 = 7;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($1367 << 3) >> 2] | 0) + ($1366 & 2047) >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 114:
  {
   $1378 = HEAPU16[$this + 4 >> 1] | 0;
   $1379 = $1378 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1379 << 3) + 4 >> 0] | 0)) {
    $$0 = 7;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($1379 << 3) >> 2] | 0) + ($1378 & 2047) >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 115:
  {
   $1392 = HEAPU16[$this + 4 >> 1] | 0;
   $1393 = $1392 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1393 << 3) + 4 >> 0] | 0)) {
    $$0 = 7;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($1393 << 3) >> 2] | 0) + ($1392 & 2047) >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 116:
  {
   $1403 = $this + 4 | 0;
   $1405 = HEAPU16[$1403 >> 1] | 0;
   $1406 = $1405 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1406 << 3) + 4 >> 0] | 0)) {
    $$0 = 7;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($1406 << 3) >> 2] | 0) + ($1405 & 2047) >> 0] = HEAP8[$1403 + 1 >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 117:
  {
   $1417 = HEAP16[$this + 4 >> 1] | 0;
   $1418 = $1417 & 65535;
   $1419 = $1418 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1419 << 3) + 4 >> 0] | 0)) {
    $$0 = 7;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($1419 << 3) >> 2] | 0) + ($1418 & 2047) >> 0] = $1417;
   $$0 = 7;
   return $$0 | 0;
  }
 case 118:
  {
   HEAP8[$this + 27 >> 0] = 1;
   $1429 = $this + 22 | 0;
   HEAP16[$1429 >> 1] = (HEAP16[$1429 >> 1] | 0) + -1 << 16 >> 16;
   $$0 = 4;
   return $$0 | 0;
  }
 case 119:
  {
   $1433 = HEAP32[$this + 4 >> 2] | 0;
   $1435 = $1433 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($1435 << 3) + 4 >> 0] | 0)) {
    $$0 = 7;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($1435 << 3) >> 2] | 0) + ($1433 & 2047) >> 0] = $1433 >>> 24;
   $$0 = 7;
   return $$0 | 0;
  }
 case 120:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 121:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 122:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 123:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 124:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 4 + 1 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 125:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 4 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 126:
  {
   $1472 = HEAPU16[$this + 4 >> 1] | 0;
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($1472 >>> 11 << 3) >> 2] | 0) + ($1472 & 2047) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 128:
  {
   $1483 = $this + 6 | 0;
   $1484 = $1483 + 1 | 0;
   $1486 = HEAPU8[$1484 >> 0] | 0;
   $1487 = HEAPU8[$this + 1 >> 0] | 0;
   $1488 = $1486 + $1487 | 0;
   $1491 = $1488 & 128;
   $1493 = $1488 & 255 | 0 ? $1491 & 255 : 64;
   if ($1488 >>> 0 > 255) $f$0$i377 = ($1493 & 255 | 1) & 255; else $f$0$i377 = $1493;
   if (($1488 & 15) >>> 0 < ($1486 & 15) >>> 0) $f$1$i378 = ($f$0$i377 & 255 | 16) & 255; else $f$1$i378 = $f$0$i377;
   $1504 = $1486 & 128;
   if (($1504 | 0) != ($1487 & 128 | 0) | ($1491 | 0) == ($1504 | 0)) $f$2$i380 = $f$1$i378; else $f$2$i380 = ($f$1$i378 & 255 | 4) & 255;
   HEAP8[$1483 >> 0] = $f$2$i380;
   HEAP8[$1484 >> 0] = $1488;
   $$0 = 4;
   return $$0 | 0;
  }
 case 129:
  {
   $1513 = $this + 6 | 0;
   $1514 = $1513 + 1 | 0;
   $1516 = HEAPU8[$1514 >> 0] | 0;
   $1517 = HEAPU8[$this >> 0] | 0;
   $1518 = $1516 + $1517 | 0;
   $1521 = $1518 & 128;
   $1523 = $1518 & 255 | 0 ? $1521 & 255 : 64;
   if ($1518 >>> 0 > 255) $f$0$i372 = ($1523 & 255 | 1) & 255; else $f$0$i372 = $1523;
   if (($1518 & 15) >>> 0 < ($1516 & 15) >>> 0) $f$1$i373 = ($f$0$i372 & 255 | 16) & 255; else $f$1$i373 = $f$0$i372;
   $1534 = $1516 & 128;
   if (($1534 | 0) != ($1517 & 128 | 0) | ($1521 | 0) == ($1534 | 0)) $f$2$i375 = $f$1$i373; else $f$2$i375 = ($f$1$i373 & 255 | 4) & 255;
   HEAP8[$1513 >> 0] = $f$2$i375;
   HEAP8[$1514 >> 0] = $1518;
   $$0 = 4;
   return $$0 | 0;
  }
 case 130:
  {
   $1545 = $this + 6 | 0;
   $1546 = $1545 + 1 | 0;
   $1548 = HEAPU8[$1546 >> 0] | 0;
   $1549 = HEAPU8[$this + 2 + 1 >> 0] | 0;
   $1550 = $1548 + $1549 | 0;
   $1553 = $1550 & 128;
   $1555 = $1550 & 255 | 0 ? $1553 & 255 : 64;
   if ($1550 >>> 0 > 255) $f$0$i367 = ($1555 & 255 | 1) & 255; else $f$0$i367 = $1555;
   if (($1550 & 15) >>> 0 < ($1548 & 15) >>> 0) $f$1$i368 = ($f$0$i367 & 255 | 16) & 255; else $f$1$i368 = $f$0$i367;
   $1566 = $1548 & 128;
   if (($1566 | 0) != ($1549 & 128 | 0) | ($1553 | 0) == ($1566 | 0)) $f$2$i370 = $f$1$i368; else $f$2$i370 = ($f$1$i368 & 255 | 4) & 255;
   HEAP8[$1545 >> 0] = $f$2$i370;
   HEAP8[$1546 >> 0] = $1550;
   $$0 = 4;
   return $$0 | 0;
  }
 case 131:
  {
   $1576 = $this + 6 | 0;
   $1577 = $1576 + 1 | 0;
   $1579 = HEAPU8[$1577 >> 0] | 0;
   $1580 = HEAPU8[$this + 2 >> 0] | 0;
   $1581 = $1579 + $1580 | 0;
   $1584 = $1581 & 128;
   $1586 = $1581 & 255 | 0 ? $1584 & 255 : 64;
   if ($1581 >>> 0 > 255) $f$0$i362 = ($1586 & 255 | 1) & 255; else $f$0$i362 = $1586;
   if (($1581 & 15) >>> 0 < ($1579 & 15) >>> 0) $f$1$i363 = ($f$0$i362 & 255 | 16) & 255; else $f$1$i363 = $f$0$i362;
   $1597 = $1579 & 128;
   if (($1597 | 0) != ($1580 & 128 | 0) | ($1584 | 0) == ($1597 | 0)) $f$2$i365 = $f$1$i363; else $f$2$i365 = ($f$1$i363 & 255 | 4) & 255;
   HEAP8[$1576 >> 0] = $f$2$i365;
   HEAP8[$1577 >> 0] = $1581;
   $$0 = 4;
   return $$0 | 0;
  }
 case 132:
  {
   $1608 = $this + 6 | 0;
   $1609 = $1608 + 1 | 0;
   $1611 = HEAPU8[$1609 >> 0] | 0;
   $1612 = HEAPU8[$this + 4 + 1 >> 0] | 0;
   $1613 = $1611 + $1612 | 0;
   $1616 = $1613 & 128;
   $1618 = $1613 & 255 | 0 ? $1616 & 255 : 64;
   if ($1613 >>> 0 > 255) $f$0$i357 = ($1618 & 255 | 1) & 255; else $f$0$i357 = $1618;
   if (($1613 & 15) >>> 0 < ($1611 & 15) >>> 0) $f$1$i358 = ($f$0$i357 & 255 | 16) & 255; else $f$1$i358 = $f$0$i357;
   $1629 = $1611 & 128;
   if (($1629 | 0) != ($1612 & 128 | 0) | ($1616 | 0) == ($1629 | 0)) $f$2$i360 = $f$1$i358; else $f$2$i360 = ($f$1$i358 & 255 | 4) & 255;
   HEAP8[$1608 >> 0] = $f$2$i360;
   HEAP8[$1609 >> 0] = $1613;
   $$0 = 4;
   return $$0 | 0;
  }
 case 133:
  {
   $1638 = HEAP32[$this + 4 >> 2] | 0;
   $1639 = $this + 6 | 0;
   $1641 = $1638 >>> 24;
   $1643 = $1641 + ($1638 & 255) | 0;
   $1646 = $1643 & 128;
   $1648 = $1638 + $1641 & 255 | 0 ? $1646 & 255 : 64;
   if ($1643 >>> 0 > 255) $f$0$i352 = ($1648 & 255 | 1) & 255; else $f$0$i352 = $1648;
   if (($1638 + $1641 & 15) >>> 0 < ($1641 & 15) >>> 0) $f$1$i353 = ($f$0$i352 & 255 | 16) & 255; else $f$1$i353 = $f$0$i352;
   $1659 = $1641 & 128;
   if (($1659 | 0) != ($1638 & 128 | 0) | ($1646 | 0) == ($1659 | 0)) $f$2$i355 = $f$1$i353; else $f$2$i355 = ($f$1$i353 & 255 | 4) & 255;
   HEAP8[$1639 >> 0] = $f$2$i355;
   HEAP8[$1639 + 1 >> 0] = $1643;
   $$0 = 4;
   return $$0 | 0;
  }
 case 134:
  {
   $1668 = HEAP32[$this + 4 >> 2] | 0;
   $1676 = $this + 6 | 0;
   $1678 = $1668 >>> 24;
   $1679 = HEAPU8[(HEAP32[$this + 1312 + (($1668 >>> 11 & 31) << 3) >> 2] | 0) + ($1668 & 2047) >> 0] | 0;
   $1680 = $1678 + $1679 | 0;
   $1683 = $1680 & 128;
   $1685 = $1680 & 255 | 0 ? $1683 & 255 : 64;
   if ($1680 >>> 0 > 255) $f$0$i347 = ($1685 & 255 | 1) & 255; else $f$0$i347 = $1685;
   if (($1680 & 15) >>> 0 < ($1678 & 15) >>> 0) $f$1$i348 = ($f$0$i347 & 255 | 16) & 255; else $f$1$i348 = $f$0$i347;
   $1696 = $1678 & 128;
   if (($1696 | 0) != ($1679 & 128 | 0) | ($1683 | 0) == ($1696 | 0)) $f$2$i350 = $f$1$i348; else $f$2$i350 = ($f$1$i348 & 255 | 4) & 255;
   HEAP8[$1676 >> 0] = $f$2$i350;
   HEAP8[$1676 + 1 >> 0] = $1680;
   $$0 = 7;
   return $$0 | 0;
  }
 case 135:
  {
   $1704 = $this + 6 | 0;
   $1705 = $1704 + 1 | 0;
   $1707 = HEAPU8[$1705 >> 0] | 0;
   $1708 = $1707 << 1;
   $1711 = $1708 & 128;
   $1713 = $1708 & 254 | 0 ? $1711 & 255 : 64;
   if ($1708 >>> 0 > 255) $f$0$i342 = ($1713 & 255 | 1) & 255; else $f$0$i342 = $1713;
   if (($1708 & 14) >>> 0 < ($1707 & 15) >>> 0) $f$1$i343 = ($f$0$i342 & 255 | 16) & 255; else $f$1$i343 = $f$0$i342;
   if (($1711 | 0) == ($1707 & 128 | 0)) $f$2$i345 = $f$1$i343; else $f$2$i345 = ($f$1$i343 & 255 | 4) & 255;
   HEAP8[$1704 >> 0] = $f$2$i345;
   HEAP8[$1705 >> 0] = $1708;
   $$0 = 4;
   return $$0 | 0;
  }
 case 136:
  {
   $1732 = $this + 6 | 0;
   $1733 = HEAP16[$1732 >> 1] | 0;
   $1736 = $1732 + 1 | 0;
   $1738 = ($1733 & 65535) >>> 8 & 65535;
   $1739 = HEAPU8[$this + 1 >> 0] | 0;
   $1740 = $1738 + $1739 | 0;
   if (!($1733 & 1)) {
    $1766 = $1740 & 128;
    $1768 = $1740 & 255 | 0 ? $1766 & 255 : 64;
    if ($1740 >>> 0 > 255) $f$0$i$i335 = ($1768 & 255 | 1) & 255; else $f$0$i$i335 = $1768;
    if (($1740 & 15) >>> 0 < ($1738 & 15) >>> 0) $f$1$i$i336 = ($f$0$i$i335 & 255 | 16) & 255; else $f$1$i$i336 = $f$0$i$i335;
    $1779 = $1738 & 128;
    if (($1779 | 0) != ($1739 & 128 | 0) | ($1766 | 0) == ($1779 | 0)) {
     $storemerge$in$i339 = $1740;
     $storemerge1$i338 = $f$1$i$i336;
    } else {
     $storemerge$in$i339 = $1740;
     $storemerge1$i338 = ($f$1$i$i336 & 255 | 4) & 255;
    }
   } else {
    $1741 = $1740 + 1 | 0;
    $1744 = $1741 & 128;
    $1746 = $1741 & 255 | 0 ? $1744 & 255 : 64;
    if ($1741 >>> 0 > 255) $f$0$i332 = ($1746 & 255 | 1) & 255; else $f$0$i332 = $1746;
    if (($1741 & 15) >>> 0 > ($1738 & 15) >>> 0) $f$1$i333 = $f$0$i332; else $f$1$i333 = ($f$0$i332 & 255 | 16) & 255;
    $1757 = $1738 & 128;
    if (($1757 | 0) != ($1739 & 128 | 0) | ($1744 | 0) == ($1757 | 0)) {
     $storemerge$in$i339 = $1741;
     $storemerge1$i338 = $f$1$i333;
    } else {
     $storemerge$in$i339 = $1741;
     $storemerge1$i338 = ($f$1$i333 & 255 | 4) & 255;
    }
   }
   HEAP8[$1732 >> 0] = $storemerge1$i338;
   HEAP8[$1736 >> 0] = $storemerge$in$i339;
   $$0 = 4;
   return $$0 | 0;
  }
 case 137:
  {
   $1787 = $this + 6 | 0;
   $1788 = HEAP16[$1787 >> 1] | 0;
   $1791 = $1787 + 1 | 0;
   $1793 = ($1788 & 65535) >>> 8 & 65535;
   $1794 = HEAPU8[$this >> 0] | 0;
   $1795 = $1793 + $1794 | 0;
   if (!($1788 & 1)) {
    $1821 = $1795 & 128;
    $1823 = $1795 & 255 | 0 ? $1821 & 255 : 64;
    if ($1795 >>> 0 > 255) $f$0$i$i325 = ($1823 & 255 | 1) & 255; else $f$0$i$i325 = $1823;
    if (($1795 & 15) >>> 0 < ($1793 & 15) >>> 0) $f$1$i$i326 = ($f$0$i$i325 & 255 | 16) & 255; else $f$1$i$i326 = $f$0$i$i325;
    $1834 = $1793 & 128;
    if (($1834 | 0) != ($1794 & 128 | 0) | ($1821 | 0) == ($1834 | 0)) {
     $storemerge$in$i329 = $1795;
     $storemerge1$i328 = $f$1$i$i326;
    } else {
     $storemerge$in$i329 = $1795;
     $storemerge1$i328 = ($f$1$i$i326 & 255 | 4) & 255;
    }
   } else {
    $1796 = $1795 + 1 | 0;
    $1799 = $1796 & 128;
    $1801 = $1796 & 255 | 0 ? $1799 & 255 : 64;
    if ($1796 >>> 0 > 255) $f$0$i322 = ($1801 & 255 | 1) & 255; else $f$0$i322 = $1801;
    if (($1796 & 15) >>> 0 > ($1793 & 15) >>> 0) $f$1$i323 = $f$0$i322; else $f$1$i323 = ($f$0$i322 & 255 | 16) & 255;
    $1812 = $1793 & 128;
    if (($1812 | 0) != ($1794 & 128 | 0) | ($1799 | 0) == ($1812 | 0)) {
     $storemerge$in$i329 = $1796;
     $storemerge1$i328 = $f$1$i323;
    } else {
     $storemerge$in$i329 = $1796;
     $storemerge1$i328 = ($f$1$i323 & 255 | 4) & 255;
    }
   }
   HEAP8[$1787 >> 0] = $storemerge1$i328;
   HEAP8[$1791 >> 0] = $storemerge$in$i329;
   $$0 = 4;
   return $$0 | 0;
  }
 case 138:
  {
   $1844 = $this + 6 | 0;
   $1845 = HEAP16[$1844 >> 1] | 0;
   $1848 = $1844 + 1 | 0;
   $1850 = ($1845 & 65535) >>> 8 & 65535;
   $1851 = HEAPU8[$this + 2 + 1 >> 0] | 0;
   $1852 = $1850 + $1851 | 0;
   if (!($1845 & 1)) {
    $1878 = $1852 & 128;
    $1880 = $1852 & 255 | 0 ? $1878 & 255 : 64;
    if ($1852 >>> 0 > 255) $f$0$i$i315 = ($1880 & 255 | 1) & 255; else $f$0$i$i315 = $1880;
    if (($1852 & 15) >>> 0 < ($1850 & 15) >>> 0) $f$1$i$i316 = ($f$0$i$i315 & 255 | 16) & 255; else $f$1$i$i316 = $f$0$i$i315;
    $1891 = $1850 & 128;
    if (($1891 | 0) != ($1851 & 128 | 0) | ($1878 | 0) == ($1891 | 0)) {
     $storemerge$in$i319 = $1852;
     $storemerge1$i318 = $f$1$i$i316;
    } else {
     $storemerge$in$i319 = $1852;
     $storemerge1$i318 = ($f$1$i$i316 & 255 | 4) & 255;
    }
   } else {
    $1853 = $1852 + 1 | 0;
    $1856 = $1853 & 128;
    $1858 = $1853 & 255 | 0 ? $1856 & 255 : 64;
    if ($1853 >>> 0 > 255) $f$0$i312 = ($1858 & 255 | 1) & 255; else $f$0$i312 = $1858;
    if (($1853 & 15) >>> 0 > ($1850 & 15) >>> 0) $f$1$i313 = $f$0$i312; else $f$1$i313 = ($f$0$i312 & 255 | 16) & 255;
    $1869 = $1850 & 128;
    if (($1869 | 0) != ($1851 & 128 | 0) | ($1856 | 0) == ($1869 | 0)) {
     $storemerge$in$i319 = $1853;
     $storemerge1$i318 = $f$1$i313;
    } else {
     $storemerge$in$i319 = $1853;
     $storemerge1$i318 = ($f$1$i313 & 255 | 4) & 255;
    }
   }
   HEAP8[$1844 >> 0] = $storemerge1$i318;
   HEAP8[$1848 >> 0] = $storemerge$in$i319;
   $$0 = 4;
   return $$0 | 0;
  }
 case 139:
  {
   $1900 = $this + 6 | 0;
   $1901 = HEAP16[$1900 >> 1] | 0;
   $1904 = $1900 + 1 | 0;
   $1906 = ($1901 & 65535) >>> 8 & 65535;
   $1907 = HEAPU8[$this + 2 >> 0] | 0;
   $1908 = $1906 + $1907 | 0;
   if (!($1901 & 1)) {
    $1934 = $1908 & 128;
    $1936 = $1908 & 255 | 0 ? $1934 & 255 : 64;
    if ($1908 >>> 0 > 255) $f$0$i$i305 = ($1936 & 255 | 1) & 255; else $f$0$i$i305 = $1936;
    if (($1908 & 15) >>> 0 < ($1906 & 15) >>> 0) $f$1$i$i306 = ($f$0$i$i305 & 255 | 16) & 255; else $f$1$i$i306 = $f$0$i$i305;
    $1947 = $1906 & 128;
    if (($1947 | 0) != ($1907 & 128 | 0) | ($1934 | 0) == ($1947 | 0)) {
     $storemerge$in$i309 = $1908;
     $storemerge1$i308 = $f$1$i$i306;
    } else {
     $storemerge$in$i309 = $1908;
     $storemerge1$i308 = ($f$1$i$i306 & 255 | 4) & 255;
    }
   } else {
    $1909 = $1908 + 1 | 0;
    $1912 = $1909 & 128;
    $1914 = $1909 & 255 | 0 ? $1912 & 255 : 64;
    if ($1909 >>> 0 > 255) $f$0$i302 = ($1914 & 255 | 1) & 255; else $f$0$i302 = $1914;
    if (($1909 & 15) >>> 0 > ($1906 & 15) >>> 0) $f$1$i303 = $f$0$i302; else $f$1$i303 = ($f$0$i302 & 255 | 16) & 255;
    $1925 = $1906 & 128;
    if (($1925 | 0) != ($1907 & 128 | 0) | ($1912 | 0) == ($1925 | 0)) {
     $storemerge$in$i309 = $1909;
     $storemerge1$i308 = $f$1$i303;
    } else {
     $storemerge$in$i309 = $1909;
     $storemerge1$i308 = ($f$1$i303 & 255 | 4) & 255;
    }
   }
   HEAP8[$1900 >> 0] = $storemerge1$i308;
   HEAP8[$1904 >> 0] = $storemerge$in$i309;
   $$0 = 4;
   return $$0 | 0;
  }
 case 140:
  {
   $1957 = $this + 6 | 0;
   $1958 = HEAP16[$1957 >> 1] | 0;
   $1961 = $1957 + 1 | 0;
   $1963 = ($1958 & 65535) >>> 8 & 65535;
   $1964 = HEAPU8[$this + 4 + 1 >> 0] | 0;
   $1965 = $1963 + $1964 | 0;
   if (!($1958 & 1)) {
    $1991 = $1965 & 128;
    $1993 = $1965 & 255 | 0 ? $1991 & 255 : 64;
    if ($1965 >>> 0 > 255) $f$0$i$i295 = ($1993 & 255 | 1) & 255; else $f$0$i$i295 = $1993;
    if (($1965 & 15) >>> 0 < ($1963 & 15) >>> 0) $f$1$i$i296 = ($f$0$i$i295 & 255 | 16) & 255; else $f$1$i$i296 = $f$0$i$i295;
    $2004 = $1963 & 128;
    if (($2004 | 0) != ($1964 & 128 | 0) | ($1991 | 0) == ($2004 | 0)) {
     $storemerge$in$i299 = $1965;
     $storemerge1$i298 = $f$1$i$i296;
    } else {
     $storemerge$in$i299 = $1965;
     $storemerge1$i298 = ($f$1$i$i296 & 255 | 4) & 255;
    }
   } else {
    $1966 = $1965 + 1 | 0;
    $1969 = $1966 & 128;
    $1971 = $1966 & 255 | 0 ? $1969 & 255 : 64;
    if ($1966 >>> 0 > 255) $f$0$i292 = ($1971 & 255 | 1) & 255; else $f$0$i292 = $1971;
    if (($1966 & 15) >>> 0 > ($1963 & 15) >>> 0) $f$1$i293 = $f$0$i292; else $f$1$i293 = ($f$0$i292 & 255 | 16) & 255;
    $1982 = $1963 & 128;
    if (($1982 | 0) != ($1964 & 128 | 0) | ($1969 | 0) == ($1982 | 0)) {
     $storemerge$in$i299 = $1966;
     $storemerge1$i298 = $f$1$i293;
    } else {
     $storemerge$in$i299 = $1966;
     $storemerge1$i298 = ($f$1$i293 & 255 | 4) & 255;
    }
   }
   HEAP8[$1957 >> 0] = $storemerge1$i298;
   HEAP8[$1961 >> 0] = $storemerge$in$i299;
   $$0 = 4;
   return $$0 | 0;
  }
 case 141:
  {
   $2012 = HEAP32[$this + 4 >> 2] | 0;
   $2013 = $this + 6 | 0;
   $2016 = $2013 + 1 | 0;
   $2017 = $2012 >>> 24;
   $2019 = $2017 + ($2012 & 255) | 0;
   if (!($2012 & 65536)) {
    $2045 = $2019 & 128;
    $2047 = $2012 + $2017 & 255 | 0 ? $2045 & 255 : 64;
    if ($2019 >>> 0 > 255) $f$0$i$i285 = ($2047 & 255 | 1) & 255; else $f$0$i$i285 = $2047;
    if (($2012 + $2017 & 15) >>> 0 < ($2017 & 15) >>> 0) $f$1$i$i286 = ($f$0$i$i285 & 255 | 16) & 255; else $f$1$i$i286 = $f$0$i$i285;
    $2058 = $2017 & 128;
    if (($2058 | 0) != ($2012 & 128 | 0) | ($2045 | 0) == ($2058 | 0)) {
     $storemerge$in$i289 = $2019;
     $storemerge1$i288 = $f$1$i$i286;
    } else {
     $storemerge$in$i289 = $2019;
     $storemerge1$i288 = ($f$1$i$i286 & 255 | 4) & 255;
    }
   } else {
    $2020 = $2019 + 1 | 0;
    $2023 = $2020 & 128;
    $2025 = $2020 & 255 | 0 ? $2023 & 255 : 64;
    if ($2020 >>> 0 > 255) $f$0$i282 = ($2025 & 255 | 1) & 255; else $f$0$i282 = $2025;
    if (($2020 & 15) >>> 0 > ($2017 & 15) >>> 0) $f$1$i283 = $f$0$i282; else $f$1$i283 = ($f$0$i282 & 255 | 16) & 255;
    $2036 = $2017 & 128;
    if (($2036 | 0) != ($2012 & 128 | 0) | ($2023 | 0) == ($2036 | 0)) {
     $storemerge$in$i289 = $2020;
     $storemerge1$i288 = $f$1$i283;
    } else {
     $storemerge$in$i289 = $2020;
     $storemerge1$i288 = ($f$1$i283 & 255 | 4) & 255;
    }
   }
   HEAP8[$2013 >> 0] = $storemerge1$i288;
   HEAP8[$2016 >> 0] = $storemerge$in$i289;
   $$0 = 4;
   return $$0 | 0;
  }
 case 142:
  {
   $2066 = HEAP32[$this + 4 >> 2] | 0;
   $2074 = $this + 6 | 0;
   $2077 = $2074 + 1 | 0;
   $2078 = $2066 >>> 24;
   $2079 = HEAPU8[(HEAP32[$this + 1312 + (($2066 >>> 11 & 31) << 3) >> 2] | 0) + ($2066 & 2047) >> 0] | 0;
   $2080 = $2078 + $2079 | 0;
   if (!($2066 & 65536)) {
    $2106 = $2080 & 128;
    $2108 = $2080 & 255 | 0 ? $2106 & 255 : 64;
    if ($2080 >>> 0 > 255) $f$0$i$i275 = ($2108 & 255 | 1) & 255; else $f$0$i$i275 = $2108;
    if (($2080 & 15) >>> 0 < ($2078 & 15) >>> 0) $f$1$i$i276 = ($f$0$i$i275 & 255 | 16) & 255; else $f$1$i$i276 = $f$0$i$i275;
    $2119 = $2078 & 128;
    if (($2119 | 0) != ($2079 & 128 | 0) | ($2106 | 0) == ($2119 | 0)) {
     $storemerge$in$i279 = $2080;
     $storemerge1$i278 = $f$1$i$i276;
    } else {
     $storemerge$in$i279 = $2080;
     $storemerge1$i278 = ($f$1$i$i276 & 255 | 4) & 255;
    }
   } else {
    $2081 = $2080 + 1 | 0;
    $2084 = $2081 & 128;
    $2086 = $2081 & 255 | 0 ? $2084 & 255 : 64;
    if ($2081 >>> 0 > 255) $f$0$i272 = ($2086 & 255 | 1) & 255; else $f$0$i272 = $2086;
    if (($2081 & 15) >>> 0 > ($2078 & 15) >>> 0) $f$1$i273 = $f$0$i272; else $f$1$i273 = ($f$0$i272 & 255 | 16) & 255;
    $2097 = $2078 & 128;
    if (($2097 | 0) != ($2079 & 128 | 0) | ($2084 | 0) == ($2097 | 0)) {
     $storemerge$in$i279 = $2081;
     $storemerge1$i278 = $f$1$i273;
    } else {
     $storemerge$in$i279 = $2081;
     $storemerge1$i278 = ($f$1$i273 & 255 | 4) & 255;
    }
   }
   HEAP8[$2074 >> 0] = $storemerge1$i278;
   HEAP8[$2077 >> 0] = $storemerge$in$i279;
   $$0 = 7;
   return $$0 | 0;
  }
 case 143:
  {
   $2126 = $this + 6 | 0;
   $2127 = $2126 + 1 | 0;
   $2129 = HEAP16[$2126 >> 1] | 0;
   $2133 = ($2129 & 65535) >>> 8 & 65535;
   $2134 = HEAPU8[$2127 >> 0] | 0;
   $2135 = $2133 + $2134 | 0;
   if (!($2129 & 1)) {
    $2161 = $2135 & 128;
    $2163 = $2135 & 255 | 0 ? $2161 & 255 : 64;
    if ($2135 >>> 0 > 255) $f$0$i$i265 = ($2163 & 255 | 1) & 255; else $f$0$i$i265 = $2163;
    if (($2135 & 15) >>> 0 < ($2133 & 15) >>> 0) $f$1$i$i266 = ($f$0$i$i265 & 255 | 16) & 255; else $f$1$i$i266 = $f$0$i$i265;
    $2174 = $2133 & 128;
    if (($2174 | 0) != ($2134 & 128 | 0) | ($2161 | 0) == ($2174 | 0)) {
     $storemerge$in$i269 = $2135;
     $storemerge1$i268 = $f$1$i$i266;
    } else {
     $storemerge$in$i269 = $2135;
     $storemerge1$i268 = ($f$1$i$i266 & 255 | 4) & 255;
    }
   } else {
    $2136 = $2135 + 1 | 0;
    $2139 = $2136 & 128;
    $2141 = $2136 & 255 | 0 ? $2139 & 255 : 64;
    if ($2136 >>> 0 > 255) $f$0$i262 = ($2141 & 255 | 1) & 255; else $f$0$i262 = $2141;
    if (($2136 & 15) >>> 0 > ($2133 & 15) >>> 0) $f$1$i263 = $f$0$i262; else $f$1$i263 = ($f$0$i262 & 255 | 16) & 255;
    $2152 = $2133 & 128;
    if (($2152 | 0) != ($2134 & 128 | 0) | ($2139 | 0) == ($2152 | 0)) {
     $storemerge$in$i269 = $2136;
     $storemerge1$i268 = $f$1$i263;
    } else {
     $storemerge$in$i269 = $2136;
     $storemerge1$i268 = ($f$1$i263 & 255 | 4) & 255;
    }
   }
   HEAP8[$2126 >> 0] = $storemerge1$i268;
   HEAP8[$2127 >> 0] = $storemerge$in$i269;
   $$0 = 4;
   return $$0 | 0;
  }
 case 144:
  {
   $2183 = $this + 6 | 0;
   $2184 = $2183 + 1 | 0;
   $2186 = HEAPU8[$2184 >> 0] | 0;
   $2187 = HEAPU8[$this + 1 >> 0] | 0;
   $2188 = $2186 - $2187 | 0;
   $2191 = $2188 & 128;
   $2193 = $2188 & 255 | 0 ? ($2191 | 2) & 255 : 66;
   if (($2188 | 0) < 0) $f$0$i$i257 = ($2193 & 255 | 1) & 255; else $f$0$i$i257 = $2193;
   if (($2188 & 15) >>> 0 > ($2186 & 15) >>> 0) $f$1$i$i258 = ($f$0$i$i257 & 255 | 16) & 255; else $f$1$i$i258 = $f$0$i$i257;
   $2204 = $2186 & 128;
   if (($2204 | 0) == ($2187 & 128 | 0) | ($2191 | 0) == ($2204 | 0)) $f$2$i$i260 = $f$1$i$i258; else $f$2$i$i260 = ($f$1$i$i258 & 255 | 4) & 255;
   HEAP8[$2183 >> 0] = $f$2$i$i260;
   HEAP8[$2184 >> 0] = $2188;
   $$0 = 4;
   return $$0 | 0;
  }
 case 145:
  {
   $2213 = $this + 6 | 0;
   $2214 = $2213 + 1 | 0;
   $2216 = HEAPU8[$2214 >> 0] | 0;
   $2217 = HEAPU8[$this >> 0] | 0;
   $2218 = $2216 - $2217 | 0;
   $2221 = $2218 & 128;
   $2223 = $2218 & 255 | 0 ? ($2221 | 2) & 255 : 66;
   if (($2218 | 0) < 0) $f$0$i$i251 = ($2223 & 255 | 1) & 255; else $f$0$i$i251 = $2223;
   if (($2218 & 15) >>> 0 > ($2216 & 15) >>> 0) $f$1$i$i252 = ($f$0$i$i251 & 255 | 16) & 255; else $f$1$i$i252 = $f$0$i$i251;
   $2234 = $2216 & 128;
   if (($2234 | 0) == ($2217 & 128 | 0) | ($2221 | 0) == ($2234 | 0)) $f$2$i$i254 = $f$1$i$i252; else $f$2$i$i254 = ($f$1$i$i252 & 255 | 4) & 255;
   HEAP8[$2213 >> 0] = $f$2$i$i254;
   HEAP8[$2214 >> 0] = $2218;
   $$0 = 4;
   return $$0 | 0;
  }
 case 146:
  {
   $2245 = $this + 6 | 0;
   $2246 = $2245 + 1 | 0;
   $2248 = HEAPU8[$2246 >> 0] | 0;
   $2249 = HEAPU8[$this + 2 + 1 >> 0] | 0;
   $2250 = $2248 - $2249 | 0;
   $2253 = $2250 & 128;
   $2255 = $2250 & 255 | 0 ? ($2253 | 2) & 255 : 66;
   if (($2250 | 0) < 0) $f$0$i$i245 = ($2255 & 255 | 1) & 255; else $f$0$i$i245 = $2255;
   if (($2250 & 15) >>> 0 > ($2248 & 15) >>> 0) $f$1$i$i246 = ($f$0$i$i245 & 255 | 16) & 255; else $f$1$i$i246 = $f$0$i$i245;
   $2266 = $2248 & 128;
   if (($2266 | 0) == ($2249 & 128 | 0) | ($2253 | 0) == ($2266 | 0)) $f$2$i$i248 = $f$1$i$i246; else $f$2$i$i248 = ($f$1$i$i246 & 255 | 4) & 255;
   HEAP8[$2245 >> 0] = $f$2$i$i248;
   HEAP8[$2246 >> 0] = $2250;
   $$0 = 4;
   return $$0 | 0;
  }
 case 147:
  {
   $2276 = $this + 6 | 0;
   $2277 = $2276 + 1 | 0;
   $2279 = HEAPU8[$2277 >> 0] | 0;
   $2280 = HEAPU8[$this + 2 >> 0] | 0;
   $2281 = $2279 - $2280 | 0;
   $2284 = $2281 & 128;
   $2286 = $2281 & 255 | 0 ? ($2284 | 2) & 255 : 66;
   if (($2281 | 0) < 0) $f$0$i$i239 = ($2286 & 255 | 1) & 255; else $f$0$i$i239 = $2286;
   if (($2281 & 15) >>> 0 > ($2279 & 15) >>> 0) $f$1$i$i240 = ($f$0$i$i239 & 255 | 16) & 255; else $f$1$i$i240 = $f$0$i$i239;
   $2297 = $2279 & 128;
   if (($2297 | 0) == ($2280 & 128 | 0) | ($2284 | 0) == ($2297 | 0)) $f$2$i$i242 = $f$1$i$i240; else $f$2$i$i242 = ($f$1$i$i240 & 255 | 4) & 255;
   HEAP8[$2276 >> 0] = $f$2$i$i242;
   HEAP8[$2277 >> 0] = $2281;
   $$0 = 4;
   return $$0 | 0;
  }
 case 148:
  {
   $2308 = $this + 6 | 0;
   $2309 = $2308 + 1 | 0;
   $2311 = HEAPU8[$2309 >> 0] | 0;
   $2312 = HEAPU8[$this + 4 + 1 >> 0] | 0;
   $2313 = $2311 - $2312 | 0;
   $2316 = $2313 & 128;
   $2318 = $2313 & 255 | 0 ? ($2316 | 2) & 255 : 66;
   if (($2313 | 0) < 0) $f$0$i$i233 = ($2318 & 255 | 1) & 255; else $f$0$i$i233 = $2318;
   if (($2313 & 15) >>> 0 > ($2311 & 15) >>> 0) $f$1$i$i234 = ($f$0$i$i233 & 255 | 16) & 255; else $f$1$i$i234 = $f$0$i$i233;
   $2329 = $2311 & 128;
   if (($2329 | 0) == ($2312 & 128 | 0) | ($2316 | 0) == ($2329 | 0)) $f$2$i$i236 = $f$1$i$i234; else $f$2$i$i236 = ($f$1$i$i234 & 255 | 4) & 255;
   HEAP8[$2308 >> 0] = $f$2$i$i236;
   HEAP8[$2309 >> 0] = $2313;
   $$0 = 4;
   return $$0 | 0;
  }
 case 149:
  {
   $2338 = HEAP32[$this + 4 >> 2] | 0;
   $2339 = $this + 6 | 0;
   $2341 = $2338 >>> 24;
   $2343 = $2341 - ($2338 & 255) | 0;
   $2346 = $2343 & 128;
   $2348 = $2343 & 255 | 0 ? ($2346 | 2) & 255 : 66;
   if (($2343 | 0) < 0) $f$0$i$i227 = ($2348 & 255 | 1) & 255; else $f$0$i$i227 = $2348;
   if (($2343 & 15) >>> 0 > ($2341 & 15) >>> 0) $f$1$i$i228 = ($f$0$i$i227 & 255 | 16) & 255; else $f$1$i$i228 = $f$0$i$i227;
   $2359 = $2341 & 128;
   if (($2359 | 0) == ($2338 & 128 | 0) | ($2346 | 0) == ($2359 | 0)) $f$2$i$i230 = $f$1$i$i228; else $f$2$i$i230 = ($f$1$i$i228 & 255 | 4) & 255;
   HEAP8[$2339 >> 0] = $f$2$i$i230;
   HEAP8[$2339 + 1 >> 0] = $2343;
   $$0 = 4;
   return $$0 | 0;
  }
 case 150:
  {
   $2368 = HEAP32[$this + 4 >> 2] | 0;
   $2376 = $this + 6 | 0;
   $2378 = $2368 >>> 24;
   $2379 = HEAPU8[(HEAP32[$this + 1312 + (($2368 >>> 11 & 31) << 3) >> 2] | 0) + ($2368 & 2047) >> 0] | 0;
   $2380 = $2378 - $2379 | 0;
   $2383 = $2380 & 128;
   $2385 = $2380 & 255 | 0 ? ($2383 | 2) & 255 : 66;
   if (($2380 | 0) < 0) $f$0$i$i221 = ($2385 & 255 | 1) & 255; else $f$0$i$i221 = $2385;
   if (($2380 & 15) >>> 0 > ($2378 & 15) >>> 0) $f$1$i$i222 = ($f$0$i$i221 & 255 | 16) & 255; else $f$1$i$i222 = $f$0$i$i221;
   $2396 = $2378 & 128;
   if (($2396 | 0) == ($2379 & 128 | 0) | ($2383 | 0) == ($2396 | 0)) $f$2$i$i224 = $f$1$i$i222; else $f$2$i$i224 = ($f$1$i$i222 & 255 | 4) & 255;
   HEAP8[$2376 >> 0] = $f$2$i$i224;
   HEAP8[$2376 + 1 >> 0] = $2380;
   $$0 = 7;
   return $$0 | 0;
  }
 case 151:
  {
   $2404 = $this + 6 | 0;
   HEAP8[$2404 >> 0] = 66;
   HEAP8[$2404 + 1 >> 0] = 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 152:
  {
   $2408 = $this + 6 | 0;
   $2409 = HEAP16[$2408 >> 1] | 0;
   $2412 = $2408 + 1 | 0;
   $2414 = ($2409 & 65535) >>> 8 & 65535;
   $2415 = HEAPU8[$this + 1 >> 0] | 0;
   $2416 = $2414 - $2415 | 0;
   if (!($2409 & 1)) {
    $2442 = $2416 & 128;
    $2444 = $2416 & 255 | 0 ? ($2442 | 2) & 255 : 66;
    if (($2416 | 0) < 0) $f$0$i$i$i207 = ($2444 & 255 | 1) & 255; else $f$0$i$i$i207 = $2444;
    if (($2416 & 15) >>> 0 > ($2414 & 15) >>> 0) $f$1$i$i$i208 = ($f$0$i$i$i207 & 255 | 16) & 255; else $f$1$i$i$i208 = $f$0$i$i$i207;
    $2455 = $2414 & 128;
    if (($2455 | 0) == ($2415 & 128 | 0) | ($2442 | 0) == ($2455 | 0)) {
     $storemerge$in$i211 = $2416;
     $storemerge1$i210 = $f$1$i$i$i208;
    } else {
     $storemerge$in$i211 = $2416;
     $storemerge1$i210 = ($f$1$i$i$i208 & 255 | 4) & 255;
    }
   } else {
    $2417 = $2416 + -1 | 0;
    $2420 = $2417 & 128;
    $2422 = $2417 & 255 | 0 ? ($2420 | 2) & 255 : 66;
    if (($2416 | 0) < 1) $f$0$i203 = ($2422 & 255 | 1) & 255; else $f$0$i203 = $2422;
    if (($2417 & 15) >>> 0 < ($2414 & 15) >>> 0) $f$1$i204 = $f$0$i203; else $f$1$i204 = ($f$0$i203 & 255 | 16) & 255;
    $2433 = $2414 & 128;
    if (($2433 | 0) == ($2415 & 128 | 0) | ($2420 | 0) == ($2433 | 0)) {
     $storemerge$in$i211 = $2417;
     $storemerge1$i210 = $f$1$i204;
    } else {
     $storemerge$in$i211 = $2417;
     $storemerge1$i210 = ($f$1$i204 & 255 | 4) & 255;
    }
   }
   HEAP8[$2408 >> 0] = $storemerge1$i210;
   HEAP8[$2412 >> 0] = $storemerge$in$i211;
   $$0 = 4;
   return $$0 | 0;
  }
 case 153:
  {
   $2463 = $this + 6 | 0;
   $2464 = HEAP16[$2463 >> 1] | 0;
   $2467 = $2463 + 1 | 0;
   $2469 = ($2464 & 65535) >>> 8 & 65535;
   $2470 = HEAPU8[$this >> 0] | 0;
   $2471 = $2469 - $2470 | 0;
   if (!($2464 & 1)) {
    $2497 = $2471 & 128;
    $2499 = $2471 & 255 | 0 ? ($2497 | 2) & 255 : 66;
    if (($2471 | 0) < 0) $f$0$i$i$i195 = ($2499 & 255 | 1) & 255; else $f$0$i$i$i195 = $2499;
    if (($2471 & 15) >>> 0 > ($2469 & 15) >>> 0) $f$1$i$i$i196 = ($f$0$i$i$i195 & 255 | 16) & 255; else $f$1$i$i$i196 = $f$0$i$i$i195;
    $2510 = $2469 & 128;
    if (($2510 | 0) == ($2470 & 128 | 0) | ($2497 | 0) == ($2510 | 0)) {
     $storemerge$in$i199 = $2471;
     $storemerge1$i198 = $f$1$i$i$i196;
    } else {
     $storemerge$in$i199 = $2471;
     $storemerge1$i198 = ($f$1$i$i$i196 & 255 | 4) & 255;
    }
   } else {
    $2472 = $2471 + -1 | 0;
    $2475 = $2472 & 128;
    $2477 = $2472 & 255 | 0 ? ($2475 | 2) & 255 : 66;
    if (($2471 | 0) < 1) $f$0$i191 = ($2477 & 255 | 1) & 255; else $f$0$i191 = $2477;
    if (($2472 & 15) >>> 0 < ($2469 & 15) >>> 0) $f$1$i192 = $f$0$i191; else $f$1$i192 = ($f$0$i191 & 255 | 16) & 255;
    $2488 = $2469 & 128;
    if (($2488 | 0) == ($2470 & 128 | 0) | ($2475 | 0) == ($2488 | 0)) {
     $storemerge$in$i199 = $2472;
     $storemerge1$i198 = $f$1$i192;
    } else {
     $storemerge$in$i199 = $2472;
     $storemerge1$i198 = ($f$1$i192 & 255 | 4) & 255;
    }
   }
   HEAP8[$2463 >> 0] = $storemerge1$i198;
   HEAP8[$2467 >> 0] = $storemerge$in$i199;
   $$0 = 4;
   return $$0 | 0;
  }
 case 154:
  {
   $2520 = $this + 6 | 0;
   $2521 = HEAP16[$2520 >> 1] | 0;
   $2524 = $2520 + 1 | 0;
   $2526 = ($2521 & 65535) >>> 8 & 65535;
   $2527 = HEAPU8[$this + 2 + 1 >> 0] | 0;
   $2528 = $2526 - $2527 | 0;
   if (!($2521 & 1)) {
    $2554 = $2528 & 128;
    $2556 = $2528 & 255 | 0 ? ($2554 | 2) & 255 : 66;
    if (($2528 | 0) < 0) $f$0$i$i$i183 = ($2556 & 255 | 1) & 255; else $f$0$i$i$i183 = $2556;
    if (($2528 & 15) >>> 0 > ($2526 & 15) >>> 0) $f$1$i$i$i184 = ($f$0$i$i$i183 & 255 | 16) & 255; else $f$1$i$i$i184 = $f$0$i$i$i183;
    $2567 = $2526 & 128;
    if (($2567 | 0) == ($2527 & 128 | 0) | ($2554 | 0) == ($2567 | 0)) {
     $storemerge$in$i187 = $2528;
     $storemerge1$i186 = $f$1$i$i$i184;
    } else {
     $storemerge$in$i187 = $2528;
     $storemerge1$i186 = ($f$1$i$i$i184 & 255 | 4) & 255;
    }
   } else {
    $2529 = $2528 + -1 | 0;
    $2532 = $2529 & 128;
    $2534 = $2529 & 255 | 0 ? ($2532 | 2) & 255 : 66;
    if (($2528 | 0) < 1) $f$0$i179 = ($2534 & 255 | 1) & 255; else $f$0$i179 = $2534;
    if (($2529 & 15) >>> 0 < ($2526 & 15) >>> 0) $f$1$i180 = $f$0$i179; else $f$1$i180 = ($f$0$i179 & 255 | 16) & 255;
    $2545 = $2526 & 128;
    if (($2545 | 0) == ($2527 & 128 | 0) | ($2532 | 0) == ($2545 | 0)) {
     $storemerge$in$i187 = $2529;
     $storemerge1$i186 = $f$1$i180;
    } else {
     $storemerge$in$i187 = $2529;
     $storemerge1$i186 = ($f$1$i180 & 255 | 4) & 255;
    }
   }
   HEAP8[$2520 >> 0] = $storemerge1$i186;
   HEAP8[$2524 >> 0] = $storemerge$in$i187;
   $$0 = 4;
   return $$0 | 0;
  }
 case 155:
  {
   $2576 = $this + 6 | 0;
   $2577 = HEAP16[$2576 >> 1] | 0;
   $2580 = $2576 + 1 | 0;
   $2582 = ($2577 & 65535) >>> 8 & 65535;
   $2583 = HEAPU8[$this + 2 >> 0] | 0;
   $2584 = $2582 - $2583 | 0;
   if (!($2577 & 1)) {
    $2610 = $2584 & 128;
    $2612 = $2584 & 255 | 0 ? ($2610 | 2) & 255 : 66;
    if (($2584 | 0) < 0) $f$0$i$i$i171 = ($2612 & 255 | 1) & 255; else $f$0$i$i$i171 = $2612;
    if (($2584 & 15) >>> 0 > ($2582 & 15) >>> 0) $f$1$i$i$i172 = ($f$0$i$i$i171 & 255 | 16) & 255; else $f$1$i$i$i172 = $f$0$i$i$i171;
    $2623 = $2582 & 128;
    if (($2623 | 0) == ($2583 & 128 | 0) | ($2610 | 0) == ($2623 | 0)) {
     $storemerge$in$i175 = $2584;
     $storemerge1$i174 = $f$1$i$i$i172;
    } else {
     $storemerge$in$i175 = $2584;
     $storemerge1$i174 = ($f$1$i$i$i172 & 255 | 4) & 255;
    }
   } else {
    $2585 = $2584 + -1 | 0;
    $2588 = $2585 & 128;
    $2590 = $2585 & 255 | 0 ? ($2588 | 2) & 255 : 66;
    if (($2584 | 0) < 1) $f$0$i167 = ($2590 & 255 | 1) & 255; else $f$0$i167 = $2590;
    if (($2585 & 15) >>> 0 < ($2582 & 15) >>> 0) $f$1$i168 = $f$0$i167; else $f$1$i168 = ($f$0$i167 & 255 | 16) & 255;
    $2601 = $2582 & 128;
    if (($2601 | 0) == ($2583 & 128 | 0) | ($2588 | 0) == ($2601 | 0)) {
     $storemerge$in$i175 = $2585;
     $storemerge1$i174 = $f$1$i168;
    } else {
     $storemerge$in$i175 = $2585;
     $storemerge1$i174 = ($f$1$i168 & 255 | 4) & 255;
    }
   }
   HEAP8[$2576 >> 0] = $storemerge1$i174;
   HEAP8[$2580 >> 0] = $storemerge$in$i175;
   $$0 = 4;
   return $$0 | 0;
  }
 case 156:
  {
   $2633 = $this + 6 | 0;
   $2634 = HEAP16[$2633 >> 1] | 0;
   $2637 = $2633 + 1 | 0;
   $2639 = ($2634 & 65535) >>> 8 & 65535;
   $2640 = HEAPU8[$this + 4 + 1 >> 0] | 0;
   $2641 = $2639 - $2640 | 0;
   if (!($2634 & 1)) {
    $2667 = $2641 & 128;
    $2669 = $2641 & 255 | 0 ? ($2667 | 2) & 255 : 66;
    if (($2641 | 0) < 0) $f$0$i$i$i159 = ($2669 & 255 | 1) & 255; else $f$0$i$i$i159 = $2669;
    if (($2641 & 15) >>> 0 > ($2639 & 15) >>> 0) $f$1$i$i$i160 = ($f$0$i$i$i159 & 255 | 16) & 255; else $f$1$i$i$i160 = $f$0$i$i$i159;
    $2680 = $2639 & 128;
    if (($2680 | 0) == ($2640 & 128 | 0) | ($2667 | 0) == ($2680 | 0)) {
     $storemerge$in$i163 = $2641;
     $storemerge1$i162 = $f$1$i$i$i160;
    } else {
     $storemerge$in$i163 = $2641;
     $storemerge1$i162 = ($f$1$i$i$i160 & 255 | 4) & 255;
    }
   } else {
    $2642 = $2641 + -1 | 0;
    $2645 = $2642 & 128;
    $2647 = $2642 & 255 | 0 ? ($2645 | 2) & 255 : 66;
    if (($2641 | 0) < 1) $f$0$i155 = ($2647 & 255 | 1) & 255; else $f$0$i155 = $2647;
    if (($2642 & 15) >>> 0 < ($2639 & 15) >>> 0) $f$1$i156 = $f$0$i155; else $f$1$i156 = ($f$0$i155 & 255 | 16) & 255;
    $2658 = $2639 & 128;
    if (($2658 | 0) == ($2640 & 128 | 0) | ($2645 | 0) == ($2658 | 0)) {
     $storemerge$in$i163 = $2642;
     $storemerge1$i162 = $f$1$i156;
    } else {
     $storemerge$in$i163 = $2642;
     $storemerge1$i162 = ($f$1$i156 & 255 | 4) & 255;
    }
   }
   HEAP8[$2633 >> 0] = $storemerge1$i162;
   HEAP8[$2637 >> 0] = $storemerge$in$i163;
   $$0 = 4;
   return $$0 | 0;
  }
 case 157:
  {
   $2688 = HEAP32[$this + 4 >> 2] | 0;
   $2689 = $this + 6 | 0;
   $2692 = $2689 + 1 | 0;
   $2693 = $2688 >>> 24;
   $2695 = $2693 - ($2688 & 255) | 0;
   if (!($2688 & 65536)) {
    $2721 = $2695 & 128;
    $2723 = $2695 & 255 | 0 ? ($2721 | 2) & 255 : 66;
    if (($2695 | 0) < 0) $f$0$i$i$i147 = ($2723 & 255 | 1) & 255; else $f$0$i$i$i147 = $2723;
    if (($2695 & 15) >>> 0 > ($2693 & 15) >>> 0) $f$1$i$i$i148 = ($f$0$i$i$i147 & 255 | 16) & 255; else $f$1$i$i$i148 = $f$0$i$i$i147;
    $2734 = $2693 & 128;
    if (($2734 | 0) == ($2688 & 128 | 0) | ($2721 | 0) == ($2734 | 0)) {
     $storemerge$in$i151 = $2695;
     $storemerge1$i150 = $f$1$i$i$i148;
    } else {
     $storemerge$in$i151 = $2695;
     $storemerge1$i150 = ($f$1$i$i$i148 & 255 | 4) & 255;
    }
   } else {
    $2696 = $2695 + -1 | 0;
    $2699 = $2696 & 128;
    $2701 = $2696 & 255 | 0 ? ($2699 | 2) & 255 : 66;
    if (($2695 | 0) < 1) $f$0$i143 = ($2701 & 255 | 1) & 255; else $f$0$i143 = $2701;
    if (($2696 & 15) >>> 0 < ($2693 & 15) >>> 0) $f$1$i144 = $f$0$i143; else $f$1$i144 = ($f$0$i143 & 255 | 16) & 255;
    $2712 = $2693 & 128;
    if (($2712 | 0) == ($2688 & 128 | 0) | ($2699 | 0) == ($2712 | 0)) {
     $storemerge$in$i151 = $2696;
     $storemerge1$i150 = $f$1$i144;
    } else {
     $storemerge$in$i151 = $2696;
     $storemerge1$i150 = ($f$1$i144 & 255 | 4) & 255;
    }
   }
   HEAP8[$2689 >> 0] = $storemerge1$i150;
   HEAP8[$2692 >> 0] = $storemerge$in$i151;
   $$0 = 4;
   return $$0 | 0;
  }
 case 158:
  {
   $2742 = HEAP32[$this + 4 >> 2] | 0;
   $2750 = $this + 6 | 0;
   $2753 = $2750 + 1 | 0;
   $2754 = $2742 >>> 24;
   $2755 = HEAPU8[(HEAP32[$this + 1312 + (($2742 >>> 11 & 31) << 3) >> 2] | 0) + ($2742 & 2047) >> 0] | 0;
   $2756 = $2754 - $2755 | 0;
   if (!($2742 & 65536)) {
    $2782 = $2756 & 128;
    $2784 = $2756 & 255 | 0 ? ($2782 | 2) & 255 : 66;
    if (($2756 | 0) < 0) $f$0$i$i$i135 = ($2784 & 255 | 1) & 255; else $f$0$i$i$i135 = $2784;
    if (($2756 & 15) >>> 0 > ($2754 & 15) >>> 0) $f$1$i$i$i136 = ($f$0$i$i$i135 & 255 | 16) & 255; else $f$1$i$i$i136 = $f$0$i$i$i135;
    $2795 = $2754 & 128;
    if (($2795 | 0) == ($2755 & 128 | 0) | ($2782 | 0) == ($2795 | 0)) {
     $storemerge$in$i139 = $2756;
     $storemerge1$i138 = $f$1$i$i$i136;
    } else {
     $storemerge$in$i139 = $2756;
     $storemerge1$i138 = ($f$1$i$i$i136 & 255 | 4) & 255;
    }
   } else {
    $2757 = $2756 + -1 | 0;
    $2760 = $2757 & 128;
    $2762 = $2757 & 255 | 0 ? ($2760 | 2) & 255 : 66;
    if (($2756 | 0) < 1) $f$0$i131 = ($2762 & 255 | 1) & 255; else $f$0$i131 = $2762;
    if (($2757 & 15) >>> 0 < ($2754 & 15) >>> 0) $f$1$i132 = $f$0$i131; else $f$1$i132 = ($f$0$i131 & 255 | 16) & 255;
    $2773 = $2754 & 128;
    if (($2773 | 0) == ($2755 & 128 | 0) | ($2760 | 0) == ($2773 | 0)) {
     $storemerge$in$i139 = $2757;
     $storemerge1$i138 = $f$1$i132;
    } else {
     $storemerge$in$i139 = $2757;
     $storemerge1$i138 = ($f$1$i132 & 255 | 4) & 255;
    }
   }
   HEAP8[$2750 >> 0] = $storemerge1$i138;
   HEAP8[$2753 >> 0] = $storemerge$in$i139;
   $$0 = 7;
   return $$0 | 0;
  }
 case 159:
  {
   $2802 = $this + 6 | 0;
   $2803 = $2802 + 1 | 0;
   $2805 = HEAP16[$2802 >> 1] | 0;
   $2809 = ($2805 & 65535) >>> 8 & 65535;
   $2810 = HEAPU8[$2803 >> 0] | 0;
   $2811 = $2809 - $2810 | 0;
   if (!($2805 & 1)) {
    $2837 = $2811 & 128;
    $2839 = $2811 & 255 | 0 ? ($2837 | 2) & 255 : 66;
    if (($2811 | 0) < 0) $f$0$i$i$i123 = ($2839 & 255 | 1) & 255; else $f$0$i$i$i123 = $2839;
    if (($2811 & 15) >>> 0 > ($2809 & 15) >>> 0) $f$1$i$i$i124 = ($f$0$i$i$i123 & 255 | 16) & 255; else $f$1$i$i$i124 = $f$0$i$i$i123;
    $2850 = $2809 & 128;
    if (($2850 | 0) == ($2810 & 128 | 0) | ($2837 | 0) == ($2850 | 0)) {
     $storemerge$in$i127 = $2811;
     $storemerge1$i126 = $f$1$i$i$i124;
    } else {
     $storemerge$in$i127 = $2811;
     $storemerge1$i126 = ($f$1$i$i$i124 & 255 | 4) & 255;
    }
   } else {
    $2812 = $2811 + -1 | 0;
    $2815 = $2812 & 128;
    $2817 = $2812 & 255 | 0 ? ($2815 | 2) & 255 : 66;
    if (($2811 | 0) < 1) $f$0$i119 = ($2817 & 255 | 1) & 255; else $f$0$i119 = $2817;
    if (($2812 & 15) >>> 0 < ($2809 & 15) >>> 0) $f$1$i120 = $f$0$i119; else $f$1$i120 = ($f$0$i119 & 255 | 16) & 255;
    $2828 = $2809 & 128;
    if (($2828 | 0) == ($2810 & 128 | 0) | ($2815 | 0) == ($2828 | 0)) {
     $storemerge$in$i127 = $2812;
     $storemerge1$i126 = $f$1$i120;
    } else {
     $storemerge$in$i127 = $2812;
     $storemerge1$i126 = ($f$1$i120 & 255 | 4) & 255;
    }
   }
   HEAP8[$2802 >> 0] = $storemerge1$i126;
   HEAP8[$2803 >> 0] = $storemerge$in$i127;
   $$0 = 4;
   return $$0 | 0;
  }
 case 160:
  {
   $2859 = $this + 6 | 0;
   $2860 = $2859 + 1 | 0;
   $2862 = HEAP8[$2860 >> 0] & HEAP8[$this + 1 >> 0];
   HEAP8[$2860 >> 0] = $2862;
   HEAP8[$2859 >> 0] = HEAPU8[($2862 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 4;
   return $$0 | 0;
  }
 case 161:
  {
   $2870 = $this + 6 | 0;
   $2871 = $2870 + 1 | 0;
   $2873 = HEAP8[$2871 >> 0] & HEAP8[$this >> 0];
   HEAP8[$2871 >> 0] = $2873;
   HEAP8[$2870 >> 0] = HEAPU8[($2873 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 4;
   return $$0 | 0;
  }
 case 162:
  {
   $2883 = $this + 6 | 0;
   $2884 = $2883 + 1 | 0;
   $2886 = HEAP8[$2884 >> 0] & HEAP8[$this + 2 + 1 >> 0];
   HEAP8[$2884 >> 0] = $2886;
   HEAP8[$2883 >> 0] = HEAPU8[($2886 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 4;
   return $$0 | 0;
  }
 case 163:
  {
   $2895 = $this + 6 | 0;
   $2896 = $2895 + 1 | 0;
   $2898 = HEAP8[$2896 >> 0] & HEAP8[$this + 2 >> 0];
   HEAP8[$2896 >> 0] = $2898;
   HEAP8[$2895 >> 0] = HEAPU8[($2898 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 4;
   return $$0 | 0;
  }
 case 164:
  {
   $2908 = $this + 6 | 0;
   $2909 = $2908 + 1 | 0;
   $2911 = HEAP8[$2909 >> 0] & HEAP8[$this + 4 + 1 >> 0];
   HEAP8[$2909 >> 0] = $2911;
   HEAP8[$2908 >> 0] = HEAPU8[($2911 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 4;
   return $$0 | 0;
  }
 case 165:
  {
   $2919 = HEAP32[$this + 4 >> 2] | 0;
   $2920 = $this + 6 | 0;
   $2923 = $2919 >>> 24 & $2919;
   HEAP8[$2920 + 1 >> 0] = $2923;
   HEAP8[$2920 >> 0] = HEAPU8[$this + 31 + $2923 >> 0] | 16;
   $$0 = 4;
   return $$0 | 0;
  }
 case 166:
  {
   $2931 = HEAP32[$this + 4 >> 2] | 0;
   $2939 = $this + 6 | 0;
   $2943 = $2931 >>> 24 & 255 & HEAP8[(HEAP32[$this + 1312 + (($2931 >>> 11 & 31) << 3) >> 2] | 0) + ($2931 & 2047) >> 0];
   HEAP8[$2939 + 1 >> 0] = $2943;
   HEAP8[$2939 >> 0] = HEAPU8[($2943 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 7;
   return $$0 | 0;
  }
 case 167:
  {
   $2950 = $this + 6 | 0;
   HEAP8[$2950 >> 0] = HEAPU8[(HEAPU8[$2950 + 1 >> 0] | 0) + ($this + 31) >> 0] | 16;
   $$0 = 4;
   return $$0 | 0;
  }
 case 168:
  {
   $2961 = $this + 6 | 0;
   $2962 = $2961 + 1 | 0;
   $2964 = HEAP8[$2962 >> 0] ^ HEAP8[$this + 1 >> 0];
   HEAP8[$2962 >> 0] = $2964;
   HEAP8[$2961 >> 0] = HEAP8[($2964 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 169:
  {
   $2969 = $this + 6 | 0;
   $2970 = $2969 + 1 | 0;
   $2972 = HEAP8[$2970 >> 0] ^ HEAP8[$this >> 0];
   HEAP8[$2970 >> 0] = $2972;
   HEAP8[$2969 >> 0] = HEAP8[($2972 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 170:
  {
   $2979 = $this + 6 | 0;
   $2980 = $2979 + 1 | 0;
   $2982 = HEAP8[$2980 >> 0] ^ HEAP8[$this + 2 + 1 >> 0];
   HEAP8[$2980 >> 0] = $2982;
   HEAP8[$2979 >> 0] = HEAP8[($2982 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 171:
  {
   $2988 = $this + 6 | 0;
   $2989 = $2988 + 1 | 0;
   $2991 = HEAP8[$2989 >> 0] ^ HEAP8[$this + 2 >> 0];
   HEAP8[$2989 >> 0] = $2991;
   HEAP8[$2988 >> 0] = HEAP8[($2991 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 172:
  {
   $2998 = $this + 6 | 0;
   $2999 = $2998 + 1 | 0;
   $3001 = HEAP8[$2999 >> 0] ^ HEAP8[$this + 4 + 1 >> 0];
   HEAP8[$2999 >> 0] = $3001;
   HEAP8[$2998 >> 0] = HEAP8[($3001 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 173:
  {
   $3006 = HEAP32[$this + 4 >> 2] | 0;
   $3007 = $this + 6 | 0;
   $3010 = $3006 >>> 24 ^ $3006;
   HEAP8[$3007 + 1 >> 0] = $3010;
   HEAP8[$3007 >> 0] = HEAP8[($3010 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 174:
  {
   $3016 = HEAP32[$this + 4 >> 2] | 0;
   $3024 = $this + 6 | 0;
   $3028 = $3016 >>> 24 & 255 ^ HEAP8[(HEAP32[$this + 1312 + (($3016 >>> 11 & 31) << 3) >> 2] | 0) + ($3016 & 2047) >> 0];
   HEAP8[$3024 + 1 >> 0] = $3028;
   HEAP8[$3024 >> 0] = HEAP8[($3028 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 175:
  {
   $3032 = $this + 6 | 0;
   HEAP8[$3032 + 1 >> 0] = 0;
   HEAP8[$3032 >> 0] = HEAP8[$this + 31 >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 176:
  {
   $3038 = $this + 6 | 0;
   $3039 = $3038 + 1 | 0;
   $3041 = HEAP8[$3039 >> 0] | HEAP8[$this + 1 >> 0];
   HEAP8[$3039 >> 0] = $3041;
   HEAP8[$3038 >> 0] = HEAP8[($3041 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 177:
  {
   $3046 = $this + 6 | 0;
   $3047 = $3046 + 1 | 0;
   $3049 = HEAP8[$3047 >> 0] | HEAP8[$this >> 0];
   HEAP8[$3047 >> 0] = $3049;
   HEAP8[$3046 >> 0] = HEAP8[($3049 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 178:
  {
   $3056 = $this + 6 | 0;
   $3057 = $3056 + 1 | 0;
   $3059 = HEAP8[$3057 >> 0] | HEAP8[$this + 2 + 1 >> 0];
   HEAP8[$3057 >> 0] = $3059;
   HEAP8[$3056 >> 0] = HEAP8[($3059 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 179:
  {
   $3065 = $this + 6 | 0;
   $3066 = $3065 + 1 | 0;
   $3068 = HEAP8[$3066 >> 0] | HEAP8[$this + 2 >> 0];
   HEAP8[$3066 >> 0] = $3068;
   HEAP8[$3065 >> 0] = HEAP8[($3068 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 180:
  {
   $3075 = $this + 6 | 0;
   $3076 = $3075 + 1 | 0;
   $3078 = HEAP8[$3076 >> 0] | HEAP8[$this + 4 + 1 >> 0];
   HEAP8[$3076 >> 0] = $3078;
   HEAP8[$3075 >> 0] = HEAP8[($3078 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 181:
  {
   $3083 = HEAP32[$this + 4 >> 2] | 0;
   $3084 = $this + 6 | 0;
   $3087 = $3083 >>> 24 | $3083;
   HEAP8[$3084 + 1 >> 0] = $3087;
   HEAP8[$3084 >> 0] = HEAP8[($3087 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 182:
  {
   $3093 = HEAP32[$this + 4 >> 2] | 0;
   $3101 = $this + 6 | 0;
   $3105 = $3093 >>> 24 & 255 | HEAP8[(HEAP32[$this + 1312 + (($3093 >>> 11 & 31) << 3) >> 2] | 0) + ($3093 & 2047) >> 0];
   HEAP8[$3101 + 1 >> 0] = $3105;
   HEAP8[$3101 >> 0] = HEAP8[($3105 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 183:
  {
   $3109 = $this + 6 | 0;
   HEAP8[$3109 >> 0] = HEAP8[(HEAPU8[$3109 + 1 >> 0] | 0) + ($this + 31) >> 0] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 184:
  {
   $3117 = $this + 6 | 0;
   $3120 = HEAPU8[$3117 + 1 >> 0] | 0;
   $3121 = HEAPU8[$this + 1 >> 0] | 0;
   $3122 = $3120 - $3121 | 0;
   $3125 = $3122 & 128;
   $3127 = $3122 & 255 | 0 ? ($3125 | 2) & 255 : 66;
   if (($3122 | 0) < 0) $f$0$i$i113 = ($3127 & 255 | 1) & 255; else $f$0$i$i113 = $3127;
   if (($3122 & 15) >>> 0 > ($3120 & 15) >>> 0) $f$1$i$i114 = ($f$0$i$i113 & 255 | 16) & 255; else $f$1$i$i114 = $f$0$i$i113;
   $3138 = $3120 & 128;
   if (($3138 | 0) == ($3121 & 128 | 0) | ($3125 | 0) == ($3138 | 0)) $f$2$i$i116 = $f$1$i$i114; else $f$2$i$i116 = ($f$1$i$i114 & 255 | 4) & 255;
   HEAP8[$3117 >> 0] = $f$2$i$i116;
   $$0 = 4;
   return $$0 | 0;
  }
 case 185:
  {
   $3146 = $this + 6 | 0;
   $3149 = HEAPU8[$3146 + 1 >> 0] | 0;
   $3150 = HEAPU8[$this >> 0] | 0;
   $3151 = $3149 - $3150 | 0;
   $3154 = $3151 & 128;
   $3156 = $3151 & 255 | 0 ? ($3154 | 2) & 255 : 66;
   if (($3151 | 0) < 0) $f$0$i$i107 = ($3156 & 255 | 1) & 255; else $f$0$i$i107 = $3156;
   if (($3151 & 15) >>> 0 > ($3149 & 15) >>> 0) $f$1$i$i108 = ($f$0$i$i107 & 255 | 16) & 255; else $f$1$i$i108 = $f$0$i$i107;
   $3167 = $3149 & 128;
   if (($3167 | 0) == ($3150 & 128 | 0) | ($3154 | 0) == ($3167 | 0)) $f$2$i$i110 = $f$1$i$i108; else $f$2$i$i110 = ($f$1$i$i108 & 255 | 4) & 255;
   HEAP8[$3146 >> 0] = $f$2$i$i110;
   $$0 = 4;
   return $$0 | 0;
  }
 case 186:
  {
   $3177 = $this + 6 | 0;
   $3180 = HEAPU8[$3177 + 1 >> 0] | 0;
   $3181 = HEAPU8[$this + 2 + 1 >> 0] | 0;
   $3182 = $3180 - $3181 | 0;
   $3185 = $3182 & 128;
   $3187 = $3182 & 255 | 0 ? ($3185 | 2) & 255 : 66;
   if (($3182 | 0) < 0) $f$0$i$i101 = ($3187 & 255 | 1) & 255; else $f$0$i$i101 = $3187;
   if (($3182 & 15) >>> 0 > ($3180 & 15) >>> 0) $f$1$i$i102 = ($f$0$i$i101 & 255 | 16) & 255; else $f$1$i$i102 = $f$0$i$i101;
   $3198 = $3180 & 128;
   if (($3198 | 0) == ($3181 & 128 | 0) | ($3185 | 0) == ($3198 | 0)) $f$2$i$i104 = $f$1$i$i102; else $f$2$i$i104 = ($f$1$i$i102 & 255 | 4) & 255;
   HEAP8[$3177 >> 0] = $f$2$i$i104;
   $$0 = 4;
   return $$0 | 0;
  }
 case 187:
  {
   $3207 = $this + 6 | 0;
   $3210 = HEAPU8[$3207 + 1 >> 0] | 0;
   $3211 = HEAPU8[$this + 2 >> 0] | 0;
   $3212 = $3210 - $3211 | 0;
   $3215 = $3212 & 128;
   $3217 = $3212 & 255 | 0 ? ($3215 | 2) & 255 : 66;
   if (($3212 | 0) < 0) $f$0$i$i95 = ($3217 & 255 | 1) & 255; else $f$0$i$i95 = $3217;
   if (($3212 & 15) >>> 0 > ($3210 & 15) >>> 0) $f$1$i$i96 = ($f$0$i$i95 & 255 | 16) & 255; else $f$1$i$i96 = $f$0$i$i95;
   $3228 = $3210 & 128;
   if (($3228 | 0) == ($3211 & 128 | 0) | ($3215 | 0) == ($3228 | 0)) $f$2$i$i98 = $f$1$i$i96; else $f$2$i$i98 = ($f$1$i$i96 & 255 | 4) & 255;
   HEAP8[$3207 >> 0] = $f$2$i$i98;
   $$0 = 4;
   return $$0 | 0;
  }
 case 188:
  {
   $3238 = $this + 6 | 0;
   $3241 = HEAPU8[$3238 + 1 >> 0] | 0;
   $3242 = HEAPU8[$this + 4 + 1 >> 0] | 0;
   $3243 = $3241 - $3242 | 0;
   $3246 = $3243 & 128;
   $3248 = $3243 & 255 | 0 ? ($3246 | 2) & 255 : 66;
   if (($3243 | 0) < 0) $f$0$i$i89 = ($3248 & 255 | 1) & 255; else $f$0$i$i89 = $3248;
   if (($3243 & 15) >>> 0 > ($3241 & 15) >>> 0) $f$1$i$i90 = ($f$0$i$i89 & 255 | 16) & 255; else $f$1$i$i90 = $f$0$i$i89;
   $3259 = $3241 & 128;
   if (($3259 | 0) == ($3242 & 128 | 0) | ($3246 | 0) == ($3259 | 0)) $f$2$i$i92 = $f$1$i$i90; else $f$2$i$i92 = ($f$1$i$i90 & 255 | 4) & 255;
   HEAP8[$3238 >> 0] = $f$2$i$i92;
   $$0 = 4;
   return $$0 | 0;
  }
 case 189:
  {
   $3267 = HEAP32[$this + 4 >> 2] | 0;
   $3269 = $3267 >>> 24;
   $3271 = $3269 - ($3267 & 255) | 0;
   $3274 = $3271 & 128;
   $3276 = $3271 & 255 | 0 ? ($3274 | 2) & 255 : 66;
   if (($3271 | 0) < 0) $f$0$i$i83 = ($3276 & 255 | 1) & 255; else $f$0$i$i83 = $3276;
   if (($3271 & 15) >>> 0 > ($3269 & 15) >>> 0) $f$1$i$i84 = ($f$0$i$i83 & 255 | 16) & 255; else $f$1$i$i84 = $f$0$i$i83;
   $3287 = $3269 & 128;
   if (($3287 | 0) == ($3267 & 128 | 0) | ($3274 | 0) == ($3287 | 0)) $f$2$i$i86 = $f$1$i$i84; else $f$2$i$i86 = ($f$1$i$i84 & 255 | 4) & 255;
   HEAP8[$this + 6 >> 0] = $f$2$i$i86;
   $$0 = 4;
   return $$0 | 0;
  }
 case 190:
  {
   $3295 = HEAP32[$this + 4 >> 2] | 0;
   $3304 = $3295 >>> 24;
   $3305 = HEAPU8[(HEAP32[$this + 1312 + (($3295 >>> 11 & 31) << 3) >> 2] | 0) + ($3295 & 2047) >> 0] | 0;
   $3306 = $3304 - $3305 | 0;
   $3309 = $3306 & 128;
   $3311 = $3306 & 255 | 0 ? ($3309 | 2) & 255 : 66;
   if (($3306 | 0) < 0) $f$0$i$i77 = ($3311 & 255 | 1) & 255; else $f$0$i$i77 = $3311;
   if (($3306 & 15) >>> 0 > ($3304 & 15) >>> 0) $f$1$i$i78 = ($f$0$i$i77 & 255 | 16) & 255; else $f$1$i$i78 = $f$0$i$i77;
   $3322 = $3304 & 128;
   if (($3322 | 0) == ($3305 & 128 | 0) | ($3309 | 0) == ($3322 | 0)) $f$2$i$i80 = $f$1$i$i78; else $f$2$i$i80 = ($f$1$i$i78 & 255 | 4) & 255;
   HEAP8[$this + 6 >> 0] = $f$2$i$i80;
   $$0 = 7;
   return $$0 | 0;
  }
 case 191:
  {
   HEAP8[$this + 6 >> 0] = 66;
   $$0 = 4;
   return $$0 | 0;
  }
 case 192:
  {
   if (HEAP8[$this + 6 >> 0] & 64) {
    $$0 = 5;
    return $$0 | 0;
   }
   $3334 = $this + 12 | 0;
   $3336 = HEAPU16[$3334 >> 1] | 0;
   $3343 = $3336 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3343 >>> 11 & 31) << 3) >> 2] | 0) + ($3343 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3336 >>> 11 << 3) >> 2] | 0) + ($3336 & 2047) >> 0];
   HEAP16[$3334 >> 1] = $3336 + 2;
   $$0 = 11;
   return $$0 | 0;
  }
 case 193:
  {
   $3359 = $this + 12 | 0;
   $3361 = HEAPU16[$3359 >> 1] | 0;
   $3368 = $3361 + 1 | 0;
   HEAP16[$this >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3368 >>> 11 & 31) << 3) >> 2] | 0) + ($3368 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3361 >>> 11 << 3) >> 2] | 0) + ($3361 & 2047) >> 0];
   HEAP16[$3359 >> 1] = $3361 + 2;
   $$0 = 10;
   return $$0 | 0;
  }
 case 194:
  {
   $3387 = $this + 22 | 0;
   $3389 = HEAPU16[$3387 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 64)) {
    $3396 = $3389 + 1 | 0;
    $3410 = HEAPU8[(HEAP32[$this + 1312 + (($3396 >>> 11 & 31) << 3) >> 2] | 0) + ($3396 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3389 >>> 11 << 3) >> 2] | 0) + ($3389 & 2047) >> 0];
   } else $3410 = $3389 + 2 | 0;
   HEAP16[$3387 >> 1] = $3410;
   $$0 = 10;
   return $$0 | 0;
  }
 case 195:
  {
   $3411 = $this + 22 | 0;
   $3413 = HEAPU16[$3411 >> 1] | 0;
   $3420 = $3413 + 1 | 0;
   HEAP16[$3411 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3420 >>> 11 & 31) << 3) >> 2] | 0) + ($3420 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3413 >>> 11 << 3) >> 2] | 0) + ($3413 & 2047) >> 0];
   $$0 = 10;
   return $$0 | 0;
  }
 case 196:
  {
   if (HEAP8[$this + 6 >> 0] & 64) {
    $3490 = $this + 22 | 0;
    HEAP16[$3490 >> 1] = (HEAPU16[$3490 >> 1] | 0) + 2;
    $$0 = 10;
    return $$0 | 0;
   }
   $3437 = $this + 12 | 0;
   $3439 = HEAPU16[$3437 >> 1] | 0;
   $3440 = $3439 + 65534 | 0;
   HEAP16[$3437 >> 1] = $3440;
   $3442 = $this + 22 | 0;
   $3445 = (HEAPU16[$3442 >> 1] | 0) + 2 | 0;
   $3448 = $3440 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3448 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3448 << 3) >> 2] | 0) + ($3440 & 2047) >> 0] = $3445;
   $3459 = ($3439 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3459 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3459 << 3) >> 2] | 0) + ($3439 + 2047 & 2047) >> 0] = ($3445 & 65535) >>> 8;
   $3470 = HEAPU16[$3442 >> 1] | 0;
   $3477 = $3470 + 1 | 0;
   HEAP16[$3442 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3477 >>> 11 & 31) << 3) >> 2] | 0) + ($3477 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3470 >>> 11 << 3) >> 2] | 0) + ($3470 & 2047) >> 0];
   $$0 = 17;
   return $$0 | 0;
  }
 case 197:
  {
   $3495 = $this + 12 | 0;
   $3497 = HEAPU16[$3495 >> 1] | 0;
   $3498 = $3497 + 65534 | 0;
   HEAP16[$3495 >> 1] = $3498;
   $3500 = HEAP16[$this >> 1] | 0;
   $3502 = $3498 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3502 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3502 << 3) >> 2] | 0) + ($3498 & 2047) >> 0] = $3500;
   $3513 = ($3497 + 65535 | 0) >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($3513 << 3) + 4 >> 0] | 0)) {
    $$0 = 11;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($3513 << 3) >> 2] | 0) + ($3497 + 2047 & 2047) >> 0] = ($3500 & 65535) >>> 8;
   $$0 = 11;
   return $$0 | 0;
  }
 case 198:
  {
   $3523 = $this + 22 | 0;
   $3524 = HEAP16[$3523 >> 1] | 0;
   HEAP16[$3523 >> 1] = $3524 + 1 << 16 >> 16;
   $3526 = $3524 & 65535;
   $3533 = $this + 6 | 0;
   $3534 = $3533 + 1 | 0;
   $3536 = HEAPU8[$3534 >> 0] | 0;
   $3537 = HEAPU8[(HEAP32[$this + 1312 + ($3526 >>> 11 << 3) >> 2] | 0) + ($3526 & 2047) >> 0] | 0;
   $3538 = $3536 + $3537 | 0;
   $3541 = $3538 & 128;
   $3543 = $3538 & 255 | 0 ? $3541 & 255 : 64;
   if ($3538 >>> 0 > 255) $f$0$i63 = ($3543 & 255 | 1) & 255; else $f$0$i63 = $3543;
   if (($3538 & 15) >>> 0 < ($3536 & 15) >>> 0) $f$1$i64 = ($f$0$i63 & 255 | 16) & 255; else $f$1$i64 = $f$0$i63;
   $3554 = $3536 & 128;
   if (($3554 | 0) != ($3537 & 128 | 0) | ($3541 | 0) == ($3554 | 0)) $f$2$i = $f$1$i64; else $f$2$i = ($f$1$i64 & 255 | 4) & 255;
   HEAP8[$3533 >> 0] = $f$2$i;
   HEAP8[$3534 >> 0] = $3538;
   $$0 = 7;
   return $$0 | 0;
  }
 case 199:
  {
   $3562 = $this + 12 | 0;
   $3564 = HEAPU16[$3562 >> 1] | 0;
   $3565 = $3564 + 65534 | 0;
   HEAP16[$3562 >> 1] = $3565;
   $3567 = $this + 22 | 0;
   $3568 = HEAP16[$3567 >> 1] | 0;
   $3570 = $3565 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3570 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3570 << 3) >> 2] | 0) + ($3565 & 2047) >> 0] = $3568;
   $3581 = ($3564 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3581 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3581 << 3) >> 2] | 0) + ($3564 + 2047 & 2047) >> 0] = ($3568 & 65535) >>> 8;
   HEAP16[$3567 >> 1] = 0;
   $$0 = 11;
   return $$0 | 0;
  }
 case 200:
  {
   if (!(HEAP8[$this + 6 >> 0] & 64)) {
    $$0 = 5;
    return $$0 | 0;
   }
   $3595 = $this + 12 | 0;
   $3597 = HEAPU16[$3595 >> 1] | 0;
   $3604 = $3597 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3604 >>> 11 & 31) << 3) >> 2] | 0) + ($3604 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3597 >>> 11 << 3) >> 2] | 0) + ($3597 & 2047) >> 0];
   HEAP16[$3595 >> 1] = $3597 + 2;
   $$0 = 11;
   return $$0 | 0;
  }
 case 201:
  {
   $3620 = $this + 12 | 0;
   $3622 = HEAPU16[$3620 >> 1] | 0;
   $3629 = $3622 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3629 >>> 11 & 31) << 3) >> 2] | 0) + ($3629 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3622 >>> 11 << 3) >> 2] | 0) + ($3622 & 2047) >> 0];
   HEAP16[$3620 >> 1] = $3622 + 2;
   $$0 = 10;
   return $$0 | 0;
  }
 case 202:
  {
   $3649 = $this + 22 | 0;
   $3651 = HEAPU16[$3649 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 64)) $3672 = $3651 + 2 | 0; else {
    $3658 = $3651 + 1 | 0;
    $3672 = HEAPU8[(HEAP32[$this + 1312 + (($3658 >>> 11 & 31) << 3) >> 2] | 0) + ($3658 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3651 >>> 11 << 3) >> 2] | 0) + ($3651 & 2047) >> 0];
   }
   HEAP16[$3649 >> 1] = $3672;
   $$0 = 10;
   return $$0 | 0;
  }
 case 203:
  {
   $3673 = $this + 25 | 0;
   HEAP8[$3673 >> 0] = (HEAPU8[$3673 >> 0] | 0) + 1 & 127;
   $3679 = $this + 22 | 0;
   $3680 = HEAP16[$3679 >> 1] | 0;
   HEAP16[$3679 >> 1] = $3680 + 1 << 16 >> 16;
   $3682 = $3680 & 65535;
   $$0 = __ZN4yakc3z8010do_op_0xcbEh($this, HEAP8[(HEAP32[$this + 1312 + ($3682 >>> 11 << 3) >> 2] | 0) + ($3682 & 2047) >> 0] | 0) | 0;
   return $$0 | 0;
  }
 case 204:
  {
   if (!(HEAP8[$this + 6 >> 0] & 64)) {
    $3747 = $this + 22 | 0;
    HEAP16[$3747 >> 1] = (HEAPU16[$3747 >> 1] | 0) + 2;
    $$0 = 10;
    return $$0 | 0;
   }
   $3694 = $this + 12 | 0;
   $3696 = HEAPU16[$3694 >> 1] | 0;
   $3697 = $3696 + 65534 | 0;
   HEAP16[$3694 >> 1] = $3697;
   $3699 = $this + 22 | 0;
   $3702 = (HEAPU16[$3699 >> 1] | 0) + 2 | 0;
   $3705 = $3697 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3705 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3705 << 3) >> 2] | 0) + ($3697 & 2047) >> 0] = $3702;
   $3716 = ($3696 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3716 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3716 << 3) >> 2] | 0) + ($3696 + 2047 & 2047) >> 0] = ($3702 & 65535) >>> 8;
   $3727 = HEAPU16[$3699 >> 1] | 0;
   $3734 = $3727 + 1 | 0;
   HEAP16[$3699 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3734 >>> 11 & 31) << 3) >> 2] | 0) + ($3734 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3727 >>> 11 << 3) >> 2] | 0) + ($3727 & 2047) >> 0];
   $$0 = 17;
   return $$0 | 0;
  }
 case 205:
  {
   $3752 = $this + 12 | 0;
   $3754 = HEAPU16[$3752 >> 1] | 0;
   $3755 = $3754 + 65534 | 0;
   HEAP16[$3752 >> 1] = $3755;
   $3757 = $this + 22 | 0;
   $3760 = (HEAPU16[$3757 >> 1] | 0) + 2 | 0;
   $3763 = $3755 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3763 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3763 << 3) >> 2] | 0) + ($3755 & 2047) >> 0] = $3760;
   $3774 = ($3754 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3774 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3774 << 3) >> 2] | 0) + ($3754 + 2047 & 2047) >> 0] = ($3760 & 65535) >>> 8;
   $3785 = HEAPU16[$3757 >> 1] | 0;
   $3792 = $3785 + 1 | 0;
   HEAP16[$3757 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3792 >>> 11 & 31) << 3) >> 2] | 0) + ($3792 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3785 >>> 11 << 3) >> 2] | 0) + ($3785 & 2047) >> 0];
   $$0 = 17;
   return $$0 | 0;
  }
 case 206:
  {
   $3805 = $this + 22 | 0;
   $3806 = HEAP16[$3805 >> 1] | 0;
   HEAP16[$3805 >> 1] = $3806 + 1 << 16 >> 16;
   $3808 = $3806 & 65535;
   $3815 = $this + 6 | 0;
   $3816 = HEAP16[$3815 >> 1] | 0;
   $3819 = $3815 + 1 | 0;
   $3821 = ($3816 & 65535) >>> 8 & 65535;
   $3822 = HEAPU8[(HEAP32[$this + 1312 + ($3808 >>> 11 << 3) >> 2] | 0) + ($3808 & 2047) >> 0] | 0;
   $3823 = $3821 + $3822 | 0;
   if (!($3816 & 1)) {
    $3849 = $3823 & 128;
    $3851 = $3823 & 255 | 0 ? $3849 & 255 : 64;
    if ($3823 >>> 0 > 255) $f$0$i$i50 = ($3851 & 255 | 1) & 255; else $f$0$i$i50 = $3851;
    if (($3823 & 15) >>> 0 < ($3821 & 15) >>> 0) $f$1$i$i51 = ($f$0$i$i50 & 255 | 16) & 255; else $f$1$i$i51 = $f$0$i$i50;
    $3862 = $3821 & 128;
    if (($3862 | 0) != ($3822 & 128 | 0) | ($3849 | 0) == ($3862 | 0)) {
     $storemerge$in$i54 = $3823;
     $storemerge1$i53 = $f$1$i$i51;
    } else {
     $storemerge$in$i54 = $3823;
     $storemerge1$i53 = ($f$1$i$i51 & 255 | 4) & 255;
    }
   } else {
    $3824 = $3823 + 1 | 0;
    $3827 = $3824 & 128;
    $3829 = $3824 & 255 | 0 ? $3827 & 255 : 64;
    if ($3824 >>> 0 > 255) $f$0$i47 = ($3829 & 255 | 1) & 255; else $f$0$i47 = $3829;
    if (($3824 & 15) >>> 0 > ($3821 & 15) >>> 0) $f$1$i48 = $f$0$i47; else $f$1$i48 = ($f$0$i47 & 255 | 16) & 255;
    $3840 = $3821 & 128;
    if (($3840 | 0) != ($3822 & 128 | 0) | ($3827 | 0) == ($3840 | 0)) {
     $storemerge$in$i54 = $3824;
     $storemerge1$i53 = $f$1$i48;
    } else {
     $storemerge$in$i54 = $3824;
     $storemerge1$i53 = ($f$1$i48 & 255 | 4) & 255;
    }
   }
   HEAP8[$3815 >> 0] = $storemerge1$i53;
   HEAP8[$3819 >> 0] = $storemerge$in$i54;
   $$0 = 7;
   return $$0 | 0;
  }
 case 207:
  {
   $3869 = $this + 12 | 0;
   $3871 = HEAPU16[$3869 >> 1] | 0;
   $3872 = $3871 + 65534 | 0;
   HEAP16[$3869 >> 1] = $3872;
   $3874 = $this + 22 | 0;
   $3875 = HEAP16[$3874 >> 1] | 0;
   $3877 = $3872 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3877 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3877 << 3) >> 2] | 0) + ($3872 & 2047) >> 0] = $3875;
   $3888 = ($3871 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($3888 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($3888 << 3) >> 2] | 0) + ($3871 + 2047 & 2047) >> 0] = ($3875 & 65535) >>> 8;
   HEAP16[$3874 >> 1] = 8;
   $$0 = 11;
   return $$0 | 0;
  }
 case 208:
  {
   if (HEAP8[$this + 6 >> 0] & 1) {
    $$0 = 5;
    return $$0 | 0;
   }
   $3902 = $this + 12 | 0;
   $3904 = HEAPU16[$3902 >> 1] | 0;
   $3911 = $3904 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3911 >>> 11 & 31) << 3) >> 2] | 0) + ($3911 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3904 >>> 11 << 3) >> 2] | 0) + ($3904 & 2047) >> 0];
   HEAP16[$3902 >> 1] = $3904 + 2;
   $$0 = 11;
   return $$0 | 0;
  }
 case 209:
  {
   $3927 = $this + 12 | 0;
   $3929 = HEAPU16[$3927 >> 1] | 0;
   $3936 = $3929 + 1 | 0;
   HEAP16[$this + 2 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($3936 >>> 11 & 31) << 3) >> 2] | 0) + ($3936 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3929 >>> 11 << 3) >> 2] | 0) + ($3929 & 2047) >> 0];
   HEAP16[$3927 >> 1] = $3929 + 2;
   $$0 = 10;
   return $$0 | 0;
  }
 case 210:
  {
   $3956 = $this + 22 | 0;
   $3958 = HEAPU16[$3956 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 1)) {
    $3965 = $3958 + 1 | 0;
    $3979 = HEAPU8[(HEAP32[$this + 1312 + (($3965 >>> 11 & 31) << 3) >> 2] | 0) + ($3965 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($3958 >>> 11 << 3) >> 2] | 0) + ($3958 & 2047) >> 0];
   } else $3979 = $3958 + 2 | 0;
   HEAP16[$3956 >> 1] = $3979;
   $$0 = 10;
   return $$0 | 0;
  }
 case 211:
  {
   $3982 = HEAP8[$this + 6 + 1 >> 0] | 0;
   $3983 = $this + 22 | 0;
   $3984 = HEAP16[$3983 >> 1] | 0;
   HEAP16[$3983 >> 1] = $3984 + 1 << 16 >> 16;
   $3986 = $3984 & 65535;
   $3988 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$3988) {
    $$0 = 11;
    return $$0 | 0;
   }
   FUNCTION_TABLE_viii[$3988 & 7](HEAP32[$this + 3624 >> 2] | 0, (HEAPU8[(HEAP32[$this + 1312 + ($3986 >>> 11 << 3) >> 2] | 0) + ($3986 & 2047) >> 0] | ($3982 & 255) << 8) & 65535, $3982);
   $$0 = 11;
   return $$0 | 0;
  }
 case 212:
  {
   if (HEAP8[$this + 6 >> 0] & 1) {
    $4060 = $this + 22 | 0;
    HEAP16[$4060 >> 1] = (HEAPU16[$4060 >> 1] | 0) + 2;
    $$0 = 10;
    return $$0 | 0;
   }
   $4007 = $this + 12 | 0;
   $4009 = HEAPU16[$4007 >> 1] | 0;
   $4010 = $4009 + 65534 | 0;
   HEAP16[$4007 >> 1] = $4010;
   $4012 = $this + 22 | 0;
   $4015 = (HEAPU16[$4012 >> 1] | 0) + 2 | 0;
   $4018 = $4010 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4018 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4018 << 3) >> 2] | 0) + ($4010 & 2047) >> 0] = $4015;
   $4029 = ($4009 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4029 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4029 << 3) >> 2] | 0) + ($4009 + 2047 & 2047) >> 0] = ($4015 & 65535) >>> 8;
   $4040 = HEAPU16[$4012 >> 1] | 0;
   $4047 = $4040 + 1 | 0;
   HEAP16[$4012 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4047 >>> 11 & 31) << 3) >> 2] | 0) + ($4047 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4040 >>> 11 << 3) >> 2] | 0) + ($4040 & 2047) >> 0];
   $$0 = 17;
   return $$0 | 0;
  }
 case 213:
  {
   $4065 = $this + 12 | 0;
   $4067 = HEAPU16[$4065 >> 1] | 0;
   $4068 = $4067 + 65534 | 0;
   HEAP16[$4065 >> 1] = $4068;
   $4071 = HEAP16[$this + 2 >> 1] | 0;
   $4073 = $4068 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4073 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4073 << 3) >> 2] | 0) + ($4068 & 2047) >> 0] = $4071;
   $4084 = ($4067 + 65535 | 0) >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($4084 << 3) + 4 >> 0] | 0)) {
    $$0 = 11;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($4084 << 3) >> 2] | 0) + ($4067 + 2047 & 2047) >> 0] = ($4071 & 65535) >>> 8;
   $$0 = 11;
   return $$0 | 0;
  }
 case 214:
  {
   $4094 = $this + 22 | 0;
   $4095 = HEAP16[$4094 >> 1] | 0;
   HEAP16[$4094 >> 1] = $4095 + 1 << 16 >> 16;
   $4097 = $4095 & 65535;
   $4104 = $this + 6 | 0;
   $4105 = $4104 + 1 | 0;
   $4107 = HEAPU8[$4105 >> 0] | 0;
   $4108 = HEAPU8[(HEAP32[$this + 1312 + ($4097 >>> 11 << 3) >> 2] | 0) + ($4097 & 2047) >> 0] | 0;
   $4109 = $4107 - $4108 | 0;
   $4112 = $4109 & 128;
   $4114 = $4109 & 255 | 0 ? ($4112 | 2) & 255 : 66;
   if (($4109 | 0) < 0) $f$0$i$i36 = ($4114 & 255 | 1) & 255; else $f$0$i$i36 = $4114;
   if (($4109 & 15) >>> 0 > ($4107 & 15) >>> 0) $f$1$i$i37 = ($f$0$i$i36 & 255 | 16) & 255; else $f$1$i$i37 = $f$0$i$i36;
   $4125 = $4107 & 128;
   if (($4125 | 0) == ($4108 & 128 | 0) | ($4112 | 0) == ($4125 | 0)) $f$2$i$i39 = $f$1$i$i37; else $f$2$i$i39 = ($f$1$i$i37 & 255 | 4) & 255;
   HEAP8[$4104 >> 0] = $f$2$i$i39;
   HEAP8[$4105 >> 0] = $4109;
   $$0 = 7;
   return $$0 | 0;
  }
 case 215:
  {
   $4133 = $this + 12 | 0;
   $4135 = HEAPU16[$4133 >> 1] | 0;
   $4136 = $4135 + 65534 | 0;
   HEAP16[$4133 >> 1] = $4136;
   $4138 = $this + 22 | 0;
   $4139 = HEAP16[$4138 >> 1] | 0;
   $4141 = $4136 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4141 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4141 << 3) >> 2] | 0) + ($4136 & 2047) >> 0] = $4139;
   $4152 = ($4135 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4152 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4152 << 3) >> 2] | 0) + ($4135 + 2047 & 2047) >> 0] = ($4139 & 65535) >>> 8;
   HEAP16[$4138 >> 1] = 16;
   $$0 = 11;
   return $$0 | 0;
  }
 case 216:
  {
   if (!(HEAP8[$this + 6 >> 0] & 1)) {
    $$0 = 5;
    return $$0 | 0;
   }
   $4166 = $this + 12 | 0;
   $4168 = HEAPU16[$4166 >> 1] | 0;
   $4175 = $4168 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4175 >>> 11 & 31) << 3) >> 2] | 0) + ($4175 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4168 >>> 11 << 3) >> 2] | 0) + ($4168 & 2047) >> 0];
   HEAP16[$4166 >> 1] = $4168 + 2;
   $$0 = 11;
   return $$0 | 0;
  }
 case 217:
  {
   $4191 = $this + 14 | 0;
   $4192 = HEAP16[$this >> 1] | 0;
   HEAP16[$this >> 1] = HEAP16[$4191 >> 1] | 0;
   HEAP16[$4191 >> 1] = $4192;
   $4194 = $this + 2 | 0;
   $4195 = $this + 16 | 0;
   $4196 = HEAP16[$4194 >> 1] | 0;
   HEAP16[$4194 >> 1] = HEAP16[$4195 >> 1] | 0;
   HEAP16[$4195 >> 1] = $4196;
   $4198 = $this + 4 | 0;
   $4199 = $this + 18 | 0;
   $4200 = HEAP16[$4198 >> 1] | 0;
   HEAP16[$4198 >> 1] = HEAP16[$4199 >> 1] | 0;
   HEAP16[$4199 >> 1] = $4200;
   $$0 = 4;
   return $$0 | 0;
  }
 case 218:
  {
   $4206 = $this + 22 | 0;
   $4208 = HEAPU16[$4206 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 1)) $4229 = $4208 + 2 | 0; else {
    $4215 = $4208 + 1 | 0;
    $4229 = HEAPU8[(HEAP32[$this + 1312 + (($4215 >>> 11 & 31) << 3) >> 2] | 0) + ($4215 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4208 >>> 11 << 3) >> 2] | 0) + ($4208 & 2047) >> 0];
   }
   HEAP16[$4206 >> 1] = $4229;
   $$0 = 10;
   return $$0 | 0;
  }
 case 219:
  {
   $4231 = $this + 6 + 1 | 0;
   $4232 = HEAP8[$4231 >> 0] | 0;
   $4233 = $this + 22 | 0;
   $4234 = HEAP16[$4233 >> 1] | 0;
   HEAP16[$4233 >> 1] = $4234 + 1 << 16 >> 16;
   $4236 = $4234 & 65535;
   $4238 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$4238) $$0$i = 0; else $$0$i = FUNCTION_TABLE_iii[$4238 & 31](HEAP32[$this + 3624 >> 2] | 0, (HEAPU8[(HEAP32[$this + 1312 + ($4236 >>> 11 << 3) >> 2] | 0) + ($4236 & 2047) >> 0] | ($4232 & 255) << 8) & 65535) | 0;
   HEAP8[$4231 >> 0] = $$0$i;
   $$0 = 11;
   return $$0 | 0;
  }
 case 220:
  {
   if (!(HEAP8[$this + 6 >> 0] & 1)) {
    $4311 = $this + 22 | 0;
    HEAP16[$4311 >> 1] = (HEAPU16[$4311 >> 1] | 0) + 2;
    $$0 = 10;
    return $$0 | 0;
   }
   $4258 = $this + 12 | 0;
   $4260 = HEAPU16[$4258 >> 1] | 0;
   $4261 = $4260 + 65534 | 0;
   HEAP16[$4258 >> 1] = $4261;
   $4263 = $this + 22 | 0;
   $4266 = (HEAPU16[$4263 >> 1] | 0) + 2 | 0;
   $4269 = $4261 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4269 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4269 << 3) >> 2] | 0) + ($4261 & 2047) >> 0] = $4266;
   $4280 = ($4260 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4280 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4280 << 3) >> 2] | 0) + ($4260 + 2047 & 2047) >> 0] = ($4266 & 65535) >>> 8;
   $4291 = HEAPU16[$4263 >> 1] | 0;
   $4298 = $4291 + 1 | 0;
   HEAP16[$4263 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4298 >>> 11 & 31) << 3) >> 2] | 0) + ($4298 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4291 >>> 11 << 3) >> 2] | 0) + ($4291 & 2047) >> 0];
   $$0 = 17;
   return $$0 | 0;
  }
 case 221:
  {
   $4316 = $this + 25 | 0;
   HEAP8[$4316 >> 0] = (HEAPU8[$4316 >> 0] | 0) + 1 & 127;
   $4322 = $this + 22 | 0;
   $4323 = HEAP16[$4322 >> 1] | 0;
   HEAP16[$4322 >> 1] = $4323 + 1 << 16 >> 16;
   $4325 = $4323 & 65535;
   $$0 = __ZN4yakc3z8010do_op_0xddEh($this, HEAP8[(HEAP32[$this + 1312 + ($4325 >>> 11 << 3) >> 2] | 0) + ($4325 & 2047) >> 0] | 0) | 0;
   return $$0 | 0;
  }
 case 222:
  {
   $4333 = $this + 22 | 0;
   $4334 = HEAP16[$4333 >> 1] | 0;
   HEAP16[$4333 >> 1] = $4334 + 1 << 16 >> 16;
   $4336 = $4334 & 65535;
   $4343 = $this + 6 | 0;
   $4344 = HEAP16[$4343 >> 1] | 0;
   $4347 = $4343 + 1 | 0;
   $4349 = ($4344 & 65535) >>> 8 & 65535;
   $4350 = HEAPU8[(HEAP32[$this + 1312 + ($4336 >>> 11 << 3) >> 2] | 0) + ($4336 & 2047) >> 0] | 0;
   $4351 = $4349 - $4350 | 0;
   if (!($4344 & 1)) {
    $4377 = $4351 & 128;
    $4379 = $4351 & 255 | 0 ? ($4377 | 2) & 255 : 66;
    if (($4351 | 0) < 0) $f$0$i$i$i = ($4379 & 255 | 1) & 255; else $f$0$i$i$i = $4379;
    if (($4351 & 15) >>> 0 > ($4349 & 15) >>> 0) $f$1$i$i$i = ($f$0$i$i$i & 255 | 16) & 255; else $f$1$i$i$i = $f$0$i$i$i;
    $4390 = $4349 & 128;
    if (($4390 | 0) == ($4350 & 128 | 0) | ($4377 | 0) == ($4390 | 0)) {
     $storemerge$in$i = $4351;
     $storemerge1$i = $f$1$i$i$i;
    } else {
     $storemerge$in$i = $4351;
     $storemerge1$i = ($f$1$i$i$i & 255 | 4) & 255;
    }
   } else {
    $4352 = $4351 + -1 | 0;
    $4355 = $4352 & 128;
    $4357 = $4352 & 255 | 0 ? ($4355 | 2) & 255 : 66;
    if (($4351 | 0) < 1) $f$0$i25 = ($4357 & 255 | 1) & 255; else $f$0$i25 = $4357;
    if (($4352 & 15) >>> 0 < ($4349 & 15) >>> 0) $f$1$i26 = $f$0$i25; else $f$1$i26 = ($f$0$i25 & 255 | 16) & 255;
    $4368 = $4349 & 128;
    if (($4368 | 0) == ($4350 & 128 | 0) | ($4355 | 0) == ($4368 | 0)) {
     $storemerge$in$i = $4352;
     $storemerge1$i = $f$1$i26;
    } else {
     $storemerge$in$i = $4352;
     $storemerge1$i = ($f$1$i26 & 255 | 4) & 255;
    }
   }
   HEAP8[$4343 >> 0] = $storemerge1$i;
   HEAP8[$4347 >> 0] = $storemerge$in$i;
   $$0 = 7;
   return $$0 | 0;
  }
 case 223:
  {
   $4397 = $this + 12 | 0;
   $4399 = HEAPU16[$4397 >> 1] | 0;
   $4400 = $4399 + 65534 | 0;
   HEAP16[$4397 >> 1] = $4400;
   $4402 = $this + 22 | 0;
   $4403 = HEAP16[$4402 >> 1] | 0;
   $4405 = $4400 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4405 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4405 << 3) >> 2] | 0) + ($4400 & 2047) >> 0] = $4403;
   $4416 = ($4399 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4416 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4416 << 3) >> 2] | 0) + ($4399 + 2047 & 2047) >> 0] = ($4403 & 65535) >>> 8;
   HEAP16[$4402 >> 1] = 24;
   $$0 = 11;
   return $$0 | 0;
  }
 case 224:
  {
   if (HEAP8[$this + 6 >> 0] & 4) {
    $$0 = 5;
    return $$0 | 0;
   }
   $4430 = $this + 12 | 0;
   $4432 = HEAPU16[$4430 >> 1] | 0;
   $4439 = $4432 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4439 >>> 11 & 31) << 3) >> 2] | 0) + ($4439 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4432 >>> 11 << 3) >> 2] | 0) + ($4432 & 2047) >> 0];
   HEAP16[$4430 >> 1] = $4432 + 2;
   $$0 = 11;
   return $$0 | 0;
  }
 case 225:
  {
   $4455 = $this + 12 | 0;
   $4457 = HEAPU16[$4455 >> 1] | 0;
   $4464 = $4457 + 1 | 0;
   HEAP16[$this + 4 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4464 >>> 11 & 31) << 3) >> 2] | 0) + ($4464 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4457 >>> 11 << 3) >> 2] | 0) + ($4457 & 2047) >> 0];
   HEAP16[$4455 >> 1] = $4457 + 2;
   $$0 = 10;
   return $$0 | 0;
  }
 case 226:
  {
   $4484 = $this + 22 | 0;
   $4486 = HEAPU16[$4484 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 4)) {
    $4493 = $4486 + 1 | 0;
    $4507 = HEAPU8[(HEAP32[$this + 1312 + (($4493 >>> 11 & 31) << 3) >> 2] | 0) + ($4493 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4486 >>> 11 << 3) >> 2] | 0) + ($4486 & 2047) >> 0];
   } else $4507 = $4486 + 2 | 0;
   HEAP16[$4484 >> 1] = $4507;
   $$0 = 10;
   return $$0 | 0;
  }
 case 227:
  {
   $4510 = HEAPU16[$this + 12 >> 1] | 0;
   $4512 = $4510 >>> 11;
   $4515 = (HEAP32[$this + 1312 + ($4512 << 3) >> 2] | 0) + ($4510 & 2047) | 0;
   $4517 = $4510 + 1 | 0;
   $4518 = $4517 & 2047;
   $4520 = $4517 >>> 11 & 31;
   $4521 = $this + 1312 + ($4520 << 3) | 0;
   $4529 = (HEAPU8[(HEAP32[$4521 >> 2] | 0) + $4518 >> 0] << 8 | HEAPU8[$4515 >> 0]) & 65535;
   $4530 = $this + 4 | 0;
   $4531 = HEAP16[$4530 >> 1] | 0;
   if (HEAP8[$this + 1312 + ($4512 << 3) + 4 >> 0] | 0) HEAP8[$4515 >> 0] = $4531;
   if (HEAP8[$this + 1312 + ($4520 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$4521 >> 2] | 0) + $4518 >> 0] = ($4531 & 65535) >>> 8;
   HEAP16[$4530 >> 1] = $4529;
   $$0 = 19;
   return $$0 | 0;
  }
 case 228:
  {
   if (HEAP8[$this + 6 >> 0] & 4) {
    $4600 = $this + 22 | 0;
    HEAP16[$4600 >> 1] = (HEAPU16[$4600 >> 1] | 0) + 2;
    $$0 = 10;
    return $$0 | 0;
   }
   $4547 = $this + 12 | 0;
   $4549 = HEAPU16[$4547 >> 1] | 0;
   $4550 = $4549 + 65534 | 0;
   HEAP16[$4547 >> 1] = $4550;
   $4552 = $this + 22 | 0;
   $4555 = (HEAPU16[$4552 >> 1] | 0) + 2 | 0;
   $4558 = $4550 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4558 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4558 << 3) >> 2] | 0) + ($4550 & 2047) >> 0] = $4555;
   $4569 = ($4549 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4569 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4569 << 3) >> 2] | 0) + ($4549 + 2047 & 2047) >> 0] = ($4555 & 65535) >>> 8;
   $4580 = HEAPU16[$4552 >> 1] | 0;
   $4587 = $4580 + 1 | 0;
   HEAP16[$4552 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4587 >>> 11 & 31) << 3) >> 2] | 0) + ($4587 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4580 >>> 11 << 3) >> 2] | 0) + ($4580 & 2047) >> 0];
   $$0 = 17;
   return $$0 | 0;
  }
 case 229:
  {
   $4605 = $this + 12 | 0;
   $4607 = HEAPU16[$4605 >> 1] | 0;
   $4608 = $4607 + 65534 | 0;
   HEAP16[$4605 >> 1] = $4608;
   $4611 = HEAP16[$this + 4 >> 1] | 0;
   $4613 = $4608 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4613 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4613 << 3) >> 2] | 0) + ($4608 & 2047) >> 0] = $4611;
   $4624 = ($4607 + 65535 | 0) >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($4624 << 3) + 4 >> 0] | 0)) {
    $$0 = 11;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($4624 << 3) >> 2] | 0) + ($4607 + 2047 & 2047) >> 0] = ($4611 & 65535) >>> 8;
   $$0 = 11;
   return $$0 | 0;
  }
 case 230:
  {
   $4634 = $this + 22 | 0;
   $4635 = HEAP16[$4634 >> 1] | 0;
   HEAP16[$4634 >> 1] = $4635 + 1 << 16 >> 16;
   $4637 = $4635 & 65535;
   $4644 = $this + 6 | 0;
   $4645 = $4644 + 1 | 0;
   $4647 = HEAP8[$4645 >> 0] & HEAP8[(HEAP32[$this + 1312 + ($4637 >>> 11 << 3) >> 2] | 0) + ($4637 & 2047) >> 0];
   HEAP8[$4645 >> 0] = $4647;
   HEAP8[$4644 >> 0] = HEAPU8[($4647 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 7;
   return $$0 | 0;
  }
 case 231:
  {
   $4654 = $this + 12 | 0;
   $4656 = HEAPU16[$4654 >> 1] | 0;
   $4657 = $4656 + 65534 | 0;
   HEAP16[$4654 >> 1] = $4657;
   $4659 = $this + 22 | 0;
   $4660 = HEAP16[$4659 >> 1] | 0;
   $4662 = $4657 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4662 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4662 << 3) >> 2] | 0) + ($4657 & 2047) >> 0] = $4660;
   $4673 = ($4656 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4673 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4673 << 3) >> 2] | 0) + ($4656 + 2047 & 2047) >> 0] = ($4660 & 65535) >>> 8;
   HEAP16[$4659 >> 1] = 32;
   $$0 = 11;
   return $$0 | 0;
  }
 case 232:
  {
   if (!(HEAP8[$this + 6 >> 0] & 4)) {
    $$0 = 5;
    return $$0 | 0;
   }
   $4687 = $this + 12 | 0;
   $4689 = HEAPU16[$4687 >> 1] | 0;
   $4696 = $4689 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4696 >>> 11 & 31) << 3) >> 2] | 0) + ($4696 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4689 >>> 11 << 3) >> 2] | 0) + ($4689 & 2047) >> 0];
   HEAP16[$4687 >> 1] = $4689 + 2;
   $$0 = 11;
   return $$0 | 0;
  }
 case 233:
  {
   HEAP16[$this + 22 >> 1] = HEAP16[$this + 4 >> 1] | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 234:
  {
   $4719 = $this + 22 | 0;
   $4721 = HEAPU16[$4719 >> 1] | 0;
   if (!(HEAP8[$this + 6 >> 0] & 4)) $4742 = $4721 + 2 | 0; else {
    $4728 = $4721 + 1 | 0;
    $4742 = HEAPU8[(HEAP32[$this + 1312 + (($4728 >>> 11 & 31) << 3) >> 2] | 0) + ($4728 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4721 >>> 11 << 3) >> 2] | 0) + ($4721 & 2047) >> 0];
   }
   HEAP16[$4719 >> 1] = $4742;
   $$0 = 10;
   return $$0 | 0;
  }
 case 235:
  {
   $4743 = $this + 2 | 0;
   $4744 = $this + 4 | 0;
   $4745 = HEAP16[$4743 >> 1] | 0;
   HEAP16[$4743 >> 1] = HEAP16[$4744 >> 1] | 0;
   HEAP16[$4744 >> 1] = $4745;
   $$0 = 4;
   return $$0 | 0;
  }
 case 236:
  {
   if (!(HEAP8[$this + 6 >> 0] & 4)) {
    $4804 = $this + 22 | 0;
    HEAP16[$4804 >> 1] = (HEAPU16[$4804 >> 1] | 0) + 2;
    $$0 = 10;
    return $$0 | 0;
   }
   $4751 = $this + 12 | 0;
   $4753 = HEAPU16[$4751 >> 1] | 0;
   $4754 = $4753 + 65534 | 0;
   HEAP16[$4751 >> 1] = $4754;
   $4756 = $this + 22 | 0;
   $4759 = (HEAPU16[$4756 >> 1] | 0) + 2 | 0;
   $4762 = $4754 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4762 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4762 << 3) >> 2] | 0) + ($4754 & 2047) >> 0] = $4759;
   $4773 = ($4753 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4773 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4773 << 3) >> 2] | 0) + ($4753 + 2047 & 2047) >> 0] = ($4759 & 65535) >>> 8;
   $4784 = HEAPU16[$4756 >> 1] | 0;
   $4791 = $4784 + 1 | 0;
   HEAP16[$4756 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4791 >>> 11 & 31) << 3) >> 2] | 0) + ($4791 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4784 >>> 11 << 3) >> 2] | 0) + ($4784 & 2047) >> 0];
   $$0 = 17;
   return $$0 | 0;
  }
 case 237:
  {
   $4809 = $this + 25 | 0;
   HEAP8[$4809 >> 0] = (HEAPU8[$4809 >> 0] | 0) + 1 & 127;
   $4815 = $this + 22 | 0;
   $4816 = HEAP16[$4815 >> 1] | 0;
   HEAP16[$4815 >> 1] = $4816 + 1 << 16 >> 16;
   $4818 = $4816 & 65535;
   $$0 = __ZN4yakc3z8010do_op_0xedEh($this, HEAP8[(HEAP32[$this + 1312 + ($4818 >>> 11 << 3) >> 2] | 0) + ($4818 & 2047) >> 0] | 0) | 0;
   return $$0 | 0;
  }
 case 238:
  {
   $4826 = $this + 22 | 0;
   $4827 = HEAP16[$4826 >> 1] | 0;
   HEAP16[$4826 >> 1] = $4827 + 1 << 16 >> 16;
   $4829 = $4827 & 65535;
   $4836 = $this + 6 | 0;
   $4837 = $4836 + 1 | 0;
   $4839 = HEAP8[$4837 >> 0] ^ HEAP8[(HEAP32[$this + 1312 + ($4829 >>> 11 << 3) >> 2] | 0) + ($4829 & 2047) >> 0];
   HEAP8[$4837 >> 0] = $4839;
   HEAP8[$4836 >> 0] = HEAP8[($4839 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 239:
  {
   $4843 = $this + 12 | 0;
   $4845 = HEAPU16[$4843 >> 1] | 0;
   $4846 = $4845 + 65534 | 0;
   HEAP16[$4843 >> 1] = $4846;
   $4848 = $this + 22 | 0;
   $4849 = HEAP16[$4848 >> 1] | 0;
   $4851 = $4846 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4851 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4851 << 3) >> 2] | 0) + ($4846 & 2047) >> 0] = $4849;
   $4862 = ($4845 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4862 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4862 << 3) >> 2] | 0) + ($4845 + 2047 & 2047) >> 0] = ($4849 & 65535) >>> 8;
   HEAP16[$4848 >> 1] = 40;
   $$0 = 11;
   return $$0 | 0;
  }
 case 240:
  {
   if ((HEAP8[$this + 6 >> 0] | 0) < 0) {
    $$0 = 5;
    return $$0 | 0;
   }
   $4875 = $this + 12 | 0;
   $4877 = HEAPU16[$4875 >> 1] | 0;
   $4884 = $4877 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4884 >>> 11 & 31) << 3) >> 2] | 0) + ($4884 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4877 >>> 11 << 3) >> 2] | 0) + ($4877 & 2047) >> 0];
   HEAP16[$4875 >> 1] = $4877 + 2;
   $$0 = 11;
   return $$0 | 0;
  }
 case 241:
  {
   $4900 = $this + 12 | 0;
   $4902 = HEAPU16[$4900 >> 1] | 0;
   $4909 = $4902 + 1 | 0;
   HEAP16[$this + 6 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4909 >>> 11 & 31) << 3) >> 2] | 0) + ($4909 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4902 >>> 11 << 3) >> 2] | 0) + ($4902 & 2047) >> 0];
   HEAP16[$4900 >> 1] = $4902 + 2;
   $$0 = 10;
   return $$0 | 0;
  }
 case 242:
  {
   $4928 = $this + 22 | 0;
   $4930 = HEAPU16[$4928 >> 1] | 0;
   if ((HEAP8[$this + 6 >> 0] | 0) < 0) $4951 = $4930 + 2 | 0; else {
    $4937 = $4930 + 1 | 0;
    $4951 = HEAPU8[(HEAP32[$this + 1312 + (($4937 >>> 11 & 31) << 3) >> 2] | 0) + ($4937 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4930 >>> 11 << 3) >> 2] | 0) + ($4930 & 2047) >> 0];
   }
   HEAP16[$4928 >> 1] = $4951;
   $$0 = 10;
   return $$0 | 0;
  }
 case 243:
  {
   HEAP8[$this + 28 >> 0] = 0;
   HEAP8[$this + 29 >> 0] = 0;
   $$0 = 4;
   return $$0 | 0;
  }
 case 244:
  {
   if ((HEAP8[$this + 6 >> 0] | 0) < 0) {
    $5010 = $this + 22 | 0;
    HEAP16[$5010 >> 1] = (HEAPU16[$5010 >> 1] | 0) + 2;
    $$0 = 10;
    return $$0 | 0;
   }
   $4957 = $this + 12 | 0;
   $4959 = HEAPU16[$4957 >> 1] | 0;
   $4960 = $4959 + 65534 | 0;
   HEAP16[$4957 >> 1] = $4960;
   $4962 = $this + 22 | 0;
   $4965 = (HEAPU16[$4962 >> 1] | 0) + 2 | 0;
   $4968 = $4960 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4968 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4968 << 3) >> 2] | 0) + ($4960 & 2047) >> 0] = $4965;
   $4979 = ($4959 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($4979 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($4979 << 3) >> 2] | 0) + ($4959 + 2047 & 2047) >> 0] = ($4965 & 65535) >>> 8;
   $4990 = HEAPU16[$4962 >> 1] | 0;
   $4997 = $4990 + 1 | 0;
   HEAP16[$4962 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($4997 >>> 11 & 31) << 3) >> 2] | 0) + ($4997 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($4990 >>> 11 << 3) >> 2] | 0) + ($4990 & 2047) >> 0];
   $$0 = 17;
   return $$0 | 0;
  }
 case 245:
  {
   $5015 = $this + 12 | 0;
   $5017 = HEAPU16[$5015 >> 1] | 0;
   $5018 = $5017 + 65534 | 0;
   HEAP16[$5015 >> 1] = $5018;
   $5021 = HEAP16[$this + 6 >> 1] | 0;
   $5023 = $5018 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($5023 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($5023 << 3) >> 2] | 0) + ($5018 & 2047) >> 0] = $5021;
   $5034 = ($5017 + 65535 | 0) >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($5034 << 3) + 4 >> 0] | 0)) {
    $$0 = 11;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($5034 << 3) >> 2] | 0) + ($5017 + 2047 & 2047) >> 0] = ($5021 & 65535) >>> 8;
   $$0 = 11;
   return $$0 | 0;
  }
 case 246:
  {
   $5044 = $this + 22 | 0;
   $5045 = HEAP16[$5044 >> 1] | 0;
   HEAP16[$5044 >> 1] = $5045 + 1 << 16 >> 16;
   $5047 = $5045 & 65535;
   $5054 = $this + 6 | 0;
   $5055 = $5054 + 1 | 0;
   $5057 = HEAP8[$5055 >> 0] | HEAP8[(HEAP32[$this + 1312 + ($5047 >>> 11 << 3) >> 2] | 0) + ($5047 & 2047) >> 0];
   HEAP8[$5055 >> 0] = $5057;
   HEAP8[$5054 >> 0] = HEAP8[($5057 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 7;
   return $$0 | 0;
  }
 case 247:
  {
   $5061 = $this + 12 | 0;
   $5063 = HEAPU16[$5061 >> 1] | 0;
   $5064 = $5063 + 65534 | 0;
   HEAP16[$5061 >> 1] = $5064;
   $5066 = $this + 22 | 0;
   $5067 = HEAP16[$5066 >> 1] | 0;
   $5069 = $5064 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($5069 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($5069 << 3) >> 2] | 0) + ($5064 & 2047) >> 0] = $5067;
   $5080 = ($5063 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($5080 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($5080 << 3) >> 2] | 0) + ($5063 + 2047 & 2047) >> 0] = ($5067 & 65535) >>> 8;
   HEAP16[$5066 >> 1] = 48;
   $$0 = 11;
   return $$0 | 0;
  }
 case 248:
  {
   if ((HEAP8[$this + 6 >> 0] | 0) >= 0) {
    $$0 = 5;
    return $$0 | 0;
   }
   $5093 = $this + 12 | 0;
   $5095 = HEAPU16[$5093 >> 1] | 0;
   $5102 = $5095 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($5102 >>> 11 & 31) << 3) >> 2] | 0) + ($5102 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($5095 >>> 11 << 3) >> 2] | 0) + ($5095 & 2047) >> 0];
   HEAP16[$5093 >> 1] = $5095 + 2;
   $$0 = 11;
   return $$0 | 0;
  }
 case 249:
  {
   HEAP16[$this + 12 >> 1] = HEAP16[$this + 4 >> 1] | 0;
   $$0 = 6;
   return $$0 | 0;
  }
 case 250:
  {
   $5124 = $this + 22 | 0;
   $5126 = HEAPU16[$5124 >> 1] | 0;
   if ((HEAP8[$this + 6 >> 0] | 0) < 0) {
    $5133 = $5126 + 1 | 0;
    $5147 = HEAPU8[(HEAP32[$this + 1312 + (($5133 >>> 11 & 31) << 3) >> 2] | 0) + ($5133 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($5126 >>> 11 << 3) >> 2] | 0) + ($5126 & 2047) >> 0];
   } else $5147 = $5126 + 2 | 0;
   HEAP16[$5124 >> 1] = $5147;
   $$0 = 10;
   return $$0 | 0;
  }
 case 251:
  {
   HEAP8[$this + 3633 >> 0] = 1;
   $$0 = 4;
   return $$0 | 0;
  }
 case 252:
  {
   if ((HEAP8[$this + 6 >> 0] | 0) >= 0) {
    $5205 = $this + 22 | 0;
    HEAP16[$5205 >> 1] = (HEAPU16[$5205 >> 1] | 0) + 2;
    $$0 = 10;
    return $$0 | 0;
   }
   $5152 = $this + 12 | 0;
   $5154 = HEAPU16[$5152 >> 1] | 0;
   $5155 = $5154 + 65534 | 0;
   HEAP16[$5152 >> 1] = $5155;
   $5157 = $this + 22 | 0;
   $5160 = (HEAPU16[$5157 >> 1] | 0) + 2 | 0;
   $5163 = $5155 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($5163 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($5163 << 3) >> 2] | 0) + ($5155 & 2047) >> 0] = $5160;
   $5174 = ($5154 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($5174 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($5174 << 3) >> 2] | 0) + ($5154 + 2047 & 2047) >> 0] = ($5160 & 65535) >>> 8;
   $5185 = HEAPU16[$5157 >> 1] | 0;
   $5192 = $5185 + 1 | 0;
   HEAP16[$5157 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($5192 >>> 11 & 31) << 3) >> 2] | 0) + ($5192 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($5185 >>> 11 << 3) >> 2] | 0) + ($5185 & 2047) >> 0];
   $$0 = 17;
   return $$0 | 0;
  }
 case 253:
  {
   $5210 = $this + 25 | 0;
   HEAP8[$5210 >> 0] = (HEAPU8[$5210 >> 0] | 0) + 1 & 127;
   $5216 = $this + 22 | 0;
   $5217 = HEAP16[$5216 >> 1] | 0;
   HEAP16[$5216 >> 1] = $5217 + 1 << 16 >> 16;
   $5219 = $5217 & 65535;
   $$0 = __ZN4yakc3z8010do_op_0xfdEh($this, HEAP8[(HEAP32[$this + 1312 + ($5219 >>> 11 << 3) >> 2] | 0) + ($5219 & 2047) >> 0] | 0) | 0;
   return $$0 | 0;
  }
 case 254:
  {
   $5227 = $this + 22 | 0;
   $5228 = HEAP16[$5227 >> 1] | 0;
   HEAP16[$5227 >> 1] = $5228 + 1 << 16 >> 16;
   $5230 = $5228 & 65535;
   $5237 = $this + 6 | 0;
   $5240 = HEAPU8[$5237 + 1 >> 0] | 0;
   $5241 = HEAPU8[(HEAP32[$this + 1312 + ($5230 >>> 11 << 3) >> 2] | 0) + ($5230 & 2047) >> 0] | 0;
   $5242 = $5240 - $5241 | 0;
   $5245 = $5242 & 128;
   $5247 = $5242 & 255 | 0 ? ($5245 | 2) & 255 : 66;
   if (($5242 | 0) < 0) $f$0$i$i = ($5247 & 255 | 1) & 255; else $f$0$i$i = $5247;
   if (($5242 & 15) >>> 0 > ($5240 & 15) >>> 0) $f$1$i$i = ($f$0$i$i & 255 | 16) & 255; else $f$1$i$i = $f$0$i$i;
   $5258 = $5240 & 128;
   if (($5258 | 0) == ($5241 & 128 | 0) | ($5245 | 0) == ($5258 | 0)) $f$2$i$i = $f$1$i$i; else $f$2$i$i = ($f$1$i$i & 255 | 4) & 255;
   HEAP8[$5237 >> 0] = $f$2$i$i;
   $$0 = 7;
   return $$0 | 0;
  }
 case 255:
  {
   $5265 = $this + 12 | 0;
   $5267 = HEAPU16[$5265 >> 1] | 0;
   $5268 = $5267 + 65534 | 0;
   HEAP16[$5265 >> 1] = $5268;
   $5270 = $this + 22 | 0;
   $5271 = HEAP16[$5270 >> 1] | 0;
   $5273 = $5268 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($5273 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($5273 << 3) >> 2] | 0) + ($5268 & 2047) >> 0] = $5271;
   $5284 = ($5267 + 65535 | 0) >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($5284 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($5284 << 3) >> 2] | 0) + ($5267 + 2047 & 2047) >> 0] = ($5271 & 65535) >>> 8;
   HEAP16[$5270 >> 1] = 56;
   $$0 = 11;
   return $$0 | 0;
  }
 case 127:
 case 109:
 case 100:
 case 91:
 case 82:
 case 73:
 case 64:
 case 0:
  {
   $$0 = 4;
   return $$0 | 0;
  }
 default:
  {}
 } while (0);
 return 0;
}

function __ZN5ImGui11InputTextExEPKcPciRK6ImVec2iPFiP25ImGuiTextEditCallbackDataEPv($label, $buf, $buf_size, $size_arg, $flags, $callback, $user_data) {
 $label = $label | 0;
 $buf = $buf | 0;
 $buf_size = $buf_size | 0;
 $size_arg = $size_arg | 0;
 $flags = $flags | 0;
 $callback = $callback | 0;
 $user_data = $user_data | 0;
 var $$ = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i389 = 0, $$0$i$i$i22$i = 0, $$0$i$i$i23$i = 0, $$0$i$i302 = 0, $$0$i$i320 = 0, $$0$i$us$i = 0, $$0$i$us$i$i = 0, $$0$i$us$i$i$i = 0, $$0$i$us$i$i$i381 = 0, $$0$i$us$i$i14$i = 0, $$0$i$us$i$i15$i = 0, $$0$i$us$i296 = 0, $$0$i$us$i314 = 0, $$0$i201 = 0, $$0$i201$lcssa = 0, $$015$i = 0, $$015$i232 = 0, $$015$i264 = 0, $$015$us$i227595 = 0, $$015$us$i259599 = 0, $$015$us$i592 = 0, $$028$us$i = 0, $$028$us$i246 = 0, $$028$us$i278 = 0, $$03$i = 0, $$03$i$i = 0, $$03$i$i$i = 0, $$03$i$i$i385 = 0, $$03$i$i18$i = 0, $$03$i$i19$i = 0, $$03$i298 = 0, $$03$i316 = 0, $$03$us$i292606 = 0, $$03$us$i310610 = 0, $$03$us$i4$i$i = 0, $$03$us$i4$i$i378 = 0, $$03$us$i4$i11$i = 0, $$03$us$i4$i12$i = 0, $$03$us$i40$i = 0, $$03$us$i602 = 0, $$1 = 0, $$1$i253 = 0, $$1$i285 = 0, $$2 = 0, $$2$i$i = 0, $$2$i$i358472 = 0, $$89 = 0, $$byval_copy = 0, $$char_count$0$i = 0, $$char_count$0$i234 = 0, $$char_count$0$i266 = 0, $$char_count$0$us$i = 0, $$char_count$0$us$i229 = 0, $$char_count$0$us$i261 = 0, $$idx127$val = 0.0, $$idx139$val = 0.0, $$in$i = 0, $$in$i$i = 0, $$in$i$i190 = 0, $$in$i$us$i = 0, $$lcssa = 0, $$lcssa855 = 0, $$lcssa856 = 0, $$lcssa859 = 0, $$lcssa860 = 0, $$lcssa861 = 0, $$lcssa864 = 0, $$lcssa865 = 0, $$lcssa866 = 0, $$lcssa871 = 0, $$lcssa889 = 0, $$lcssa891 = 0, $$lobit = 0, $$not37463 = 0, $$ph22$i = 0.0, $$ph22$i$lcssa = 0.0, $$ph22$i193 = 0.0, $$ph22$i193$lcssa = 0.0, $$pn = 0.0, $$pre = 0, $$pre$i$i409 = 0, $$pre$i410478 = 0, $$pre$i410479 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi2$i$iZ2D = 0, $$pre$phi44$iZ2D = 0, $$pre$phi47$iZ2D = 0, $$pre$phi48$iZ2D = 0, $$pre$phi687Z2D = 0, $$pre682 = 0.0, $$searches_result_line_number$sroa$0$3 = 0, $$sroa$0448$0 = 0, $$sroa$0448$0$lcssa = 0, $$sroa$0450$0 = 0, $$sroa$0450$0$lcssa = 0, $$sroa$0450$1 = 0, $0 = 0, $1 = 0, $1000 = 0.0, $1002 = 0.0, $1003 = 0, $1011 = 0, $1015 = 0.0, $1018 = 0.0, $1021 = 0.0, $1022 = 0.0, $1024 = 0.0, $1025 = 0, $1039 = 0.0, $1042 = 0.0, $1045 = 0.0, $1046 = 0.0, $1048 = 0.0, $1049 = 0, $1056 = 0, $1058 = 0, $1062 = 0, $1065 = 0, $1069 = 0, $1071 = 0, $1079 = 0, $108 = 0.0, $1081 = 0, $1082 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1092 = 0, $1093 = 0, $1095 = 0, $1100 = 0, $1101 = 0, $1104 = 0, $1106 = 0, $1111 = 0, $1114 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1128 = 0, $1129 = 0, $113 = 0.0, $1130 = 0, $1132 = 0, $1134 = 0, $1136 = 0, $1138 = 0, $1140 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1146 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1160 = 0, $1163 = 0, $1170 = 0, $1177 = 0, $1182 = 0, $1187 = 0, $1190 = 0, $1191 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1198 = 0, $120 = 0.0, $1200 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1206 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1220 = 0, $1223 = 0, $1230 = 0, $1237 = 0, $1242 = 0, $1247 = 0, $125 = 0.0, $1250 = 0, $1251 = 0, $1254 = 0, $1255 = 0, $1257 = 0, $126 = 0, $1261 = 0.0, $1264 = 0.0, $1267 = 0.0, $1268 = 0.0, $127 = 0.0, $1270 = 0.0, $1271 = 0, $1279 = 0, $128 = 0.0, $1281 = 0, $1285 = 0, $1286 = 0, $129 = 0.0, $1291 = 0, $1296 = 0, $130 = 0.0, $1306 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $1322 = 0, $1323 = 0, $1327 = 0, $1328 = 0, $133 = 0, $1330 = 0, $1332 = 0, $1333 = 0, $1335 = 0, $1337 = 0, $1339 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1345 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1359 = 0, $136 = 0, $1362 = 0, $1369 = 0, $137 = 0, $1376 = 0, $1381 = 0, $1385 = 0, $1386 = 0, $1389 = 0, $1390 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1397 = 0, $1399 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1405 = 0, $141 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1419 = 0, $1422 = 0, $1429 = 0, $143 = 0.0, $1436 = 0, $144 = 0, $1441 = 0, $1445 = 0, $1446 = 0, $1449 = 0, $145 = 0.0, $1450 = 0, $1453 = 0, $1454 = 0, $1456 = 0, $1457 = 0, $146 = 0.0, $1461 = 0, $1465 = 0, $1468 = 0, $1475 = 0, $1482 = 0, $1487 = 0, $1492 = 0, $1495 = 0, $15 = 0, $150 = 0.0, $1501 = 0, $151 = 0.0, $1513 = 0, $1514 = 0, $1519 = 0, $152 = 0.0, $153 = 0, $1530 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1541 = 0, $1542 = 0, $1544 = 0, $1549 = 0, $1550 = 0, $1553 = 0, $1555 = 0, $1568 = 0, $1572 = 0.0, $1575 = 0.0, $1578 = 0.0, $1579 = 0.0, $1581 = 0.0, $1582 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1595 = 0.0, $1598 = 0.0, $16 = 0, $1601 = 0.0, $1602 = 0.0, $1604 = 0.0, $1605 = 0, $1613 = 0, $1617 = 0.0, $1620 = 0.0, $1623 = 0.0, $1624 = 0.0, $1626 = 0.0, $1627 = 0, $1637 = 0, $1644 = 0, $1646 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1657 = 0, $1661 = 0, $1664 = 0, $167 = 0, $1671 = 0, $1678 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1689 = 0, $1693 = 0, $1696 = 0, $170 = 0, $1703 = 0, $1710 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $1721 = 0, $1725 = 0, $1728 = 0, $1735 = 0, $1742 = 0, $1747 = 0, $1748 = 0, $1756 = 0, $1758 = 0, $1759 = 0, $1763 = 0, $1764 = 0, $177 = 0.0, $1773 = 0, $1774 = 0, $178 = 0.0, $1780 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1788 = 0, $1789 = 0, $1798 = 0, $1799 = 0, $180 = 0, $1805 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $1813 = 0, $1814 = 0, $1823 = 0, $1824 = 0, $1835 = 0, $1842 = 0, $1858 = 0, $186 = 0, $1861 = 0, $1863 = 0, $1866 = 0, $1867 = 0, $187 = 0.0, $1871 = 0, $1873 = 0, $1876 = 0, $1877 = 0, $1882 = 0.0, $1884 = 0.0, $1886 = 0.0, $189 = 0.0, $1891 = 0.0, $19 = 0, $190 = 0, $191 = 0.0, $1916 = 0.0, $1917 = 0.0, $1919 = 0, $1920 = 0.0, $1923 = 0, $1924 = 0, $1925 = 0, $1927 = 0, $1932 = 0, $1933 = 0, $1938 = 0.0, $194 = 0, $1940 = 0, $1941 = 0, $1945 = 0, $1952 = 0, $196 = 0.0, $1960 = 0, $1964 = 0, $1967 = 0, $1969 = 0, $197 = 0, $1971 = 0, $1972 = 0, $1978 = 0, $198 = 0, $1988 = 0, $1992 = 0, $1996 = 0, $2 = 0, $2000 = 0.0, $2001 = 0, $2002 = 0, $2003 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2016 = 0.0, $2021 = 0, $2022 = 0.0, $2023 = 0.0, $2026 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2041 = 0.0, $2050 = 0, $2055 = 0.0, $2056 = 0.0, $2057 = 0, $2058 = 0.0, $2060 = 0.0, $2064 = 0.0, $2065 = 0.0, $2069 = 0.0, $2071 = 0, $2072 = 0.0, $2073 = 0.0, $2077 = 0.0, $2080 = 0, $2082 = 0.0, $2085 = 0, $2087 = 0, $2088 = 0, $2089 = 0.0, $2090 = 0.0, $2092 = 0.0, $2094 = 0.0, $2096 = 0.0, $21 = 0, $2101 = 0.0, $2124 = 0, $2129 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0.0, $2136 = 0.0, $2138 = 0.0, $2140 = 0.0, $2143 = 0, $2147 = 0, $2151 = 0.0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2159 = 0, $217 = 0.0, $2170 = 0, $218 = 0, $2183 = 0.0, $2184 = 0.0, $2185 = 0.0, $2186 = 0.0, $2187 = 0.0, $2188 = 0.0, $219 = 0.0, $2194 = 0.0, $2196 = 0.0, $2198 = 0.0, $2200 = 0.0, $2203 = 0.0, $2205 = 0, $2206 = 0, $2208 = 0, $2212 = 0.0, $2214 = 0.0, $2216 = 0.0, $222 = 0, $2221 = 0.0, $223 = 0.0, $2248 = 0.0, $2251 = 0.0, $2252 = 0.0, $2253 = 0.0, $2257 = 0, $2260 = 0.0, $2261 = 0.0, $2266 = 0.0, $2268 = 0.0, $2270 = 0.0, $2275 = 0.0, $229 = 0, $23 = 0, $2302 = 0.0, $2305 = 0, $231 = 0, $2311 = 0.0, $2319 = 0.0, $232 = 0, $2321 = 0.0, $2323 = 0.0, $2328 = 0.0, $233 = 0, $2352 = 0.0, $2355 = 0.0, $2358 = 0.0, $2366 = 0.0, $2369 = 0.0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0.0, $2378 = 0.0, $2379 = 0.0, $240 = 0, $245 = 0, $246 = 0, $272 = 0, $274 = 0, $276 = 0, $277 = 0, $278 = 0, $280 = 0, $281 = 0, $287 = 0, $294 = 0, $295 = 0, $296 = 0, $3 = 0, $30 = 0, $309 = 0, $311 = 0, $318 = 0, $326 = 0, $328 = 0, $329 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $344 = 0, $345 = 0, $348 = 0, $35 = 0, $353 = 0, $354 = 0, $358 = 0, $360 = 0, $365 = 0, $366 = 0, $367 = 0, $373 = 0, $374 = 0, $376 = 0, $38 = 0, $381 = 0, $382 = 0, $385 = 0, $387 = 0, $393 = 0, $395 = 0, $398 = 0, $4 = 0, $403 = 0, $404 = 0, $414 = 0, $420 = 0, $423 = 0, $424 = 0, $427 = 0, $428 = 0, $43 = 0, $431 = 0, $432 = 0, $463 = 0, $471 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $48 = 0, $484 = 0, $485 = 0, $488 = 0, $493 = 0, $494 = 0, $498 = 0, $5 = 0, $50 = 0.0, $500 = 0, $506 = 0, $508 = 0, $513 = 0, $514 = 0, $524 = 0, $529 = 0, $53 = 0.0, $530 = 0, $533 = 0, $534 = 0, $537 = 0, $538 = 0, $54 = 0.0, $541 = 0, $542 = 0, $543 = 0, $553 = 0.0, $569 = 0, $573 = 0, $577 = 0, $58 = 0.0, $580 = 0.0, $581 = 0, $596 = 0, $597 = 0, $599 = 0, $6 = 0, $60 = 0.0, $602 = 0, $610 = 0, $616 = 0, $62 = 0.0, $623 = 0, $624 = 0, $625 = 0, $628 = 0, $632 = 0.0, $635 = 0.0, $638 = 0.0, $639 = 0.0, $641 = 0.0, $642 = 0, $65 = 0, $651 = 0, $655 = 0.0, $658 = 0.0, $661 = 0.0, $662 = 0.0, $664 = 0.0, $665 = 0, $67 = 0, $674 = 0, $678 = 0.0, $681 = 0.0, $684 = 0.0, $685 = 0.0, $687 = 0.0, $688 = 0, $695 = 0, $696 = 0.0, $699 = 0.0, $7 = 0, $70 = 0, $700 = 0, $702 = 0.0, $706 = 0, $710 = 0.0, $713 = 0.0, $716 = 0.0, $717 = 0.0, $719 = 0.0, $72 = 0, $720 = 0, $727 = 0, $728 = 0.0, $73 = 0, $731 = 0.0, $732 = 0, $734 = 0.0, $738 = 0, $742 = 0.0, $745 = 0.0, $748 = 0.0, $749 = 0.0, $75 = 0.0, $751 = 0.0, $752 = 0, $761 = 0, $765 = 0.0, $768 = 0.0, $771 = 0.0, $772 = 0.0, $774 = 0.0, $775 = 0, $784 = 0, $788 = 0.0, $79 = 0.0, $791 = 0.0, $794 = 0.0, $795 = 0.0, $797 = 0.0, $798 = 0, $807 = 0, $811 = 0.0, $814 = 0.0, $817 = 0.0, $818 = 0.0, $820 = 0.0, $821 = 0, $83 = 0.0, $830 = 0, $834 = 0.0, $837 = 0.0, $840 = 0.0, $841 = 0.0, $843 = 0.0, $844 = 0, $852 = 0, $860 = 0, $864 = 0.0, $867 = 0.0, $870 = 0.0, $871 = 0.0, $873 = 0.0, $874 = 0, $88 = 0, $886 = 0, $89 = 0, $890 = 0.0, $893 = 0.0, $896 = 0.0, $897 = 0.0, $899 = 0.0, $9 = 0, $900 = 0, $908 = 0, $912 = 0.0, $915 = 0.0, $918 = 0.0, $919 = 0.0, $92 = 0.0, $921 = 0.0, $922 = 0, $93 = 0.0, $930 = 0, $934 = 0, $938 = 0.0, $94 = 0.0, $941 = 0.0, $944 = 0.0, $945 = 0.0, $947 = 0.0, $948 = 0, $956 = 0, $96 = 0.0, $960 = 0, $964 = 0.0, $967 = 0.0, $970 = 0.0, $971 = 0.0, $973 = 0.0, $974 = 0, $983 = 0, $989 = 0, $99 = 0, $990 = 0, $993 = 0.0, $996 = 0.0, $999 = 0.0, $buf_end7$0 = 0, $buf_out$04$i = 0, $buf_out$04$i252 = 0, $buf_out$04$i284 = 0, $buf_out$07$us$i = 0, $buf_out$07$us$i$lcssa872 = 0, $buf_out$07$us$i247 = 0, $buf_out$07$us$i247$lcssa890 = 0, $buf_out$07$us$i279 = 0, $buf_out$07$us$i279$lcssa888 = 0, $buf_out$2$ph$us$i = 0, $buf_out$2$ph$us$i249 = 0, $buf_out$2$ph$us$i281 = 0, $bytes_count$0$be$i = 0, $bytes_count$0$be$i$i = 0, $bytes_count$0$be$i$i$i = 0, $bytes_count$0$be$i$i$i391 = 0, $bytes_count$0$be$i$i24$i = 0, $bytes_count$0$be$i$i25$i = 0, $bytes_count$0$be$i304 = 0, $bytes_count$0$be$i322 = 0, $bytes_count$0$lcssa$i = 0, $bytes_count$0$lcssa$i$i = 0, $bytes_count$0$lcssa$i$i$i = 0, $bytes_count$0$lcssa$i$i$i393 = 0, $bytes_count$0$lcssa$i$i26$i = 0, $bytes_count$0$lcssa$i$i27$i = 0, $bytes_count$0$lcssa$i306 = 0, $bytes_count$0$lcssa$i324 = 0, $bytes_count$02$i = 0, $bytes_count$02$i$i = 0, $bytes_count$02$i$i$i = 0, $bytes_count$02$i$i$i386 = 0, $bytes_count$02$i$i19$i = 0, $bytes_count$02$i$i20$i = 0, $bytes_count$02$i299 = 0, $bytes_count$02$i317 = 0, $bytes_count$02$us$i$be = 0, $bytes_count$02$us$i$be$i = 0, $bytes_count$02$us$i$be$i$i = 0, $bytes_count$02$us$i$be$i$i383 = 0, $bytes_count$02$us$i$be$i16$i = 0, $bytes_count$02$us$i$be$i17$i = 0, $bytes_count$02$us$i293$be = 0, $bytes_count$02$us$i293607 = 0, $bytes_count$02$us$i311$be = 0, $bytes_count$02$us$i311611 = 0, $bytes_count$02$us$i41$i = 0, $bytes_count$02$us$i5$i$i = 0, $bytes_count$02$us$i5$i$i377 = 0, $bytes_count$02$us$i5$i10$i = 0, $bytes_count$02$us$i5$i11$i = 0, $bytes_count$02$us$i603 = 0, $char_count$0$lcssa2$i = 0, $char_count$0$lcssa2$i236 = 0, $char_count$0$lcssa2$i268 = 0, $char_count$03$i = 0, $char_count$03$i238 = 0, $char_count$03$i270 = 0, $char_count$06$i = 0, $char_count$06$i231 = 0, $char_count$06$i263 = 0, $char_count$06$us$i226594 = 0, $char_count$06$us$i258598 = 0, $char_count$06$us$i591 = 0, $clipboard_filtered_len$0575 = 0, $clipboard_filtered_len$0615 = 0, $clipboard_filtered_len$0615$lcssa = 0, $clipboard_filtered_len$1$ph = 0, $content_max$sroa$0$0$i = 0.0, $content_max$sroa$5$0$i = 0.0, $draw_window$0 = 0, $dst$0$lcssa$i$i = 0, $dst$0$lcssa$i$i398 = 0, $dst$0$lcssa$i31$i = 0, $dst$0$lcssa$i32$i = 0, $dst$03$i$i = 0, $dst$03$i$i395 = 0, $dst$03$i28$i = 0, $dst$03$i29$i = 0, $enter_pressed$1$ph = 0, $enter_pressed$1$ph482 = 0, $enter_pressed$1$ph483 = 0, $enter_pressed$2$off0 = 0, $event_flag$0 = 0, $event_flag$0495 = 0, $event_key$0 = 0, $event_key$0494 = 0, $frame_bb = 0, $i$01$i$i$i = 0, $i$01$i$i$i371 = 0, $i$01$i$i3$i = 0, $i$01$i$i3$i404 = 0, $id = 0, $label_size$sroa$0$0 = 0, $label_size$sroa$6$0 = 0, $line_count$0 = 0, $line_count$0$ph$i = 0, $line_count$0$ph$i$lcssa = 0, $line_count$1 = 0, $line_count$2 = 0, $line_width$0$ph$i = 0.0, $line_width$0$ph$i$lcssa = 0.0, $line_width$0$ph$i$lcssa863 = 0.0, $line_width$0$ph$i185 = 0.0, $line_width$0$ph$i185$lcssa = 0.0, $line_width$0$ph$i185$lcssa868 = 0.0, $line_width$0$ph$us$i = 0.0, $line_width$0$ph$us$i$lcssa858 = 0.0, $line_width$2$i = 0.0, $n$0618 = 0, $not$ = 0, $p$0586 = 0, $p$1 = 0, $p$2 = 0, $rect_pos$sroa$0$0589 = 0.0, $rect_pos$sroa$6$0587 = 0.0, $rect_size$sroa$0$0 = 0.0, $rect_size$sroa$0$1 = 0.0, $rect_size$sroa$0$2 = 0.0, $render_pos = 0, $s$0$i = 0, $s$0$i$lcssa = 0, $s$0$i177 = 0, $s$0$i187 = 0, $s$0$ph$i = 0, $s$0$ph$i175 = 0, $s$0$ph$i184 = 0, $s$0$ph$ph$i = 0, $s$0$ph$ph$i194 = 0, $s$0$ph$us$i = 0, $s$0$us$i = 0, $s$0614 = 0, $s$1$i = 0, $s6$0 = 0, $scroll_y$0 = 0.0, $searches_input_ptr$sroa$6$0 = 0, $searches_remaining$0 = 0, $searches_remaining$1 = 0, $searches_remaining$2 = 0, $searches_remaining$3 = 0, $searches_result_line_number$sroa$0$0 = 0, $searches_result_line_number$sroa$0$1 = 0, $searches_result_line_number$sroa$0$2 = 0, $searches_result_line_number$sroa$0$3 = 0, $searches_result_line_number$sroa$8$0 = 0, $searches_result_line_number$sroa$8$1 = 0, $searches_result_line_number$sroa$8$2 = 0, $searches_result_line_number$sroa$8$3 = 0, $searches_result_line_number$sroa$8$4 = 0, $select_all$0 = 0, $select_all$2 = 0, $select_all$3$off0 = 0, $select_start_offset$sroa$0$0 = 0.0, $select_start_offset$sroa$5$0 = 0.0, $size$sroa$0$0 = 0, $src$02$i$i = 0, $src$02$i$i396 = 0, $src$02$i29$i = 0, $src$02$i30$i = 0, $str$idx$i = 0, $str$idx$i$i = 0, $str$idx$val$i = 0, $str$idx$val$i$i = 0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $text_size$sroa$0$0 = 0, $text_size$sroa$0$1 = 0, $text_size$sroa$0$2 = 0, $text_size$sroa$6$0 = 0, $text_size$sroa$6$1 = 0, $text_size$sroa$6$2 = 0, $tmpcast141$sroa$0$0 = 0, $tmpcast141$sroa$6$0 = 0, $tmpcast16$idx124$val = 0.0, $tmpcast16$idx97 = 0, $tmpcast16$idx97$val517 = 0, $tmpcast9$byval_copy = 0, $total_bb = 0, $value_changed$1$off0 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer7 = 0, $w$0$i = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $$byval_copy = sp + 80 | 0;
 $tmpcast9$byval_copy = sp + 152 | 0;
 $vararg_buffer10 = sp + 72 | 0;
 $vararg_buffer7 = sp + 64 | 0;
 $vararg_buffer = sp + 56 | 0;
 $id = sp + 104 | 0;
 $frame_bb = sp + 24 | 0;
 $total_bb = sp + 8 | 0;
 $0 = sp + 144 | 0;
 $1 = sp + 48 | 0;
 $2 = sp + 40 | 0;
 $render_pos = sp;
 $3 = sp + 136 | 0;
 $4 = sp + 128 | 0;
 $5 = sp + 120 | 0;
 $6 = sp + 112 | 0;
 $7 = sp + 96 | 0;
 $9 = HEAP32[38201] | 0;
 HEAP8[$9 + 114 >> 0] = 1;
 if (HEAP8[$9 + 116 >> 0] | 0) {
  $$2 = 0;
  STACKTOP = sp;
  return $$2 | 0;
 }
 $15 = ($flags & 128 | 0) != 0;
 $16 = $flags & 1048576;
 if (!(($16 | 0) == 0 | $15 ^ 1)) ___assert_fail(124294, 124187, 7220, 124386);
 $19 = ($flags & 64 | 0) != 0;
 $21 = ($flags & 1024 | 0) == 0;
 if (!($21 | $19 ^ 1)) ___assert_fail(124398, 124187, 7221, 124386);
 $23 = HEAP32[$9 + 424 >> 2] | 0;
 if (($23 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $30 = __Z6ImHashPKvij($label, 0, HEAP32[(HEAP32[$9 + 432 >> 2] | 0) + ($23 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($30 | 0)) HEAP8[152852] = 1;
 HEAP32[$id >> 2] = $30;
 $35 = ($16 | 0) != 0;
 $$lobit = $flags >>> 14 & 1;
 $38 = ($flags & 32768 | 0) != 0;
 if (($label | 0) == (-1 | 0)) {
  $53 = +HEAPF32[38187];
  label = 17;
 } else {
  $text_display_end$03$i$i = $label;
  L18 : while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     break L18;
     break;
    }
   case 35:
    {
     $43 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$43 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      break L18;
     } else $$pre$phi$i$iZ2D = $43;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    break;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
  $48 = HEAP32[38186] | 0;
  $50 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($label | 0)) {
   $53 = $50;
   label = 17;
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($$byval_copy, $48, $50, 3402823466385288598117041.0e14, -1.0, $label, $text_display_end$0$i, 0);
   $54 = +HEAPF32[$$byval_copy >> 2];
   if ($54 > 0.0) {
    $58 = $54 - $50 / +HEAPF32[$48 >> 2];
    HEAPF32[$$byval_copy >> 2] = $58;
    $60 = $58;
   } else $60 = $54;
   $62 = +(~~($60 + .949999988079071) | 0);
   HEAPF32[$$byval_copy >> 2] = $62;
   $72 = 146892;
   $label_size$sroa$0$0 = (HEAPF32[tempDoublePtr >> 2] = $62, HEAP32[tempDoublePtr >> 2] | 0);
   $label_size$sroa$6$0 = HEAP32[$$byval_copy + 4 >> 2] | 0;
  }
 }
 if ((label | 0) == 17) {
  $72 = 146892;
  $label_size$sroa$0$0 = 0;
  $label_size$sroa$6$0 = (HEAPF32[tempDoublePtr >> 2] = $53, HEAP32[tempDoublePtr >> 2] | 0);
 }
 $65 = $size_arg;
 $67 = HEAP32[$65 >> 2] | 0;
 $70 = HEAP32[$65 + 4 >> 2] | 0;
 $73 = HEAP32[$72 + 5912 >> 2] | 0;
 $75 = +HEAPF32[$73 + 268 >> 2];
 if ($75 < 0.0) {
  __ZN5ImGui19GetContentRegionMaxEv($$byval_copy);
  $79 = $75 + (+HEAPF32[$$byval_copy >> 2] - (+HEAPF32[$73 + 164 >> 2] - +HEAPF32[$73 + 20 >> 2]));
  $w$0$i = $79 <= 1.0 ? 1.0 : $79;
 } else $w$0$i = $75;
 $83 = +(~~$w$0$i | 0);
 if ($35) $93 = +HEAPF32[38187] * 8.0; else $93 = (HEAP32[tempDoublePtr >> 2] = $label_size$sroa$6$0, +HEAPF32[tempDoublePtr >> 2]);
 $88 = 151968;
 $89 = 151972;
 $92 = $93 + +HEAPF32[$89 >> 2] * 2.0;
 $94 = (HEAP32[tempDoublePtr >> 2] = $67, +HEAPF32[tempDoublePtr >> 2]);
 $96 = (HEAP32[tempDoublePtr >> 2] = $70, +HEAPF32[tempDoublePtr >> 2]);
 if ($94 < 0.0 | $96 < 0.0) {
  $99 = HEAP32[38201] | 0;
  __ZN5ImGui19GetContentRegionMaxEv($$byval_copy);
  $content_max$sroa$0$0$i = +HEAPF32[$99 + 20 >> 2] + +HEAPF32[$$byval_copy >> 2];
  $content_max$sroa$5$0$i = +HEAPF32[$99 + 24 >> 2] + +HEAPF32[$$byval_copy + 4 >> 2];
 } else {
  $content_max$sroa$0$0$i = 0.0;
  $content_max$sroa$5$0$i = 0.0;
 }
 if (!($94 <= 0.0)) $tmpcast141$sroa$0$0 = $67; else {
  if ($94 == 0.0) $113 = $83; else {
   $108 = $content_max$sroa$0$0$i - +HEAPF32[(HEAP32[38201] | 0) + 164 >> 2];
   $113 = $94 + ($108 >= 4.0 ? $108 : 4.0);
  }
  $tmpcast141$sroa$0$0 = (HEAPF32[tempDoublePtr >> 2] = $113, HEAP32[tempDoublePtr >> 2] | 0);
 }
 if (!($96 <= 0.0)) $tmpcast141$sroa$6$0 = $70; else {
  if ($96 == 0.0) $125 = $92; else {
   $120 = $content_max$sroa$5$0$i - +HEAPF32[(HEAP32[38201] | 0) + 168 >> 2];
   $125 = $96 + ($120 >= 4.0 ? $120 : 4.0);
  }
  $tmpcast141$sroa$6$0 = (HEAPF32[tempDoublePtr >> 2] = $125, HEAP32[tempDoublePtr >> 2] | 0);
 }
 $126 = $9 + 164 | 0;
 $127 = (HEAP32[tempDoublePtr >> 2] = $tmpcast141$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]);
 $128 = (HEAP32[tempDoublePtr >> 2] = $tmpcast141$sroa$6$0, +HEAPF32[tempDoublePtr >> 2]);
 $129 = $127 + +HEAPF32[$126 >> 2];
 $130 = $128 + +HEAPF32[$9 + 168 >> 2];
 $131 = $126;
 $133 = HEAP32[$131 >> 2] | 0;
 $136 = HEAP32[$131 + 4 >> 2] | 0;
 $137 = $frame_bb;
 HEAP32[$137 >> 2] = $133;
 HEAP32[$137 + 4 >> 2] = $136;
 $141 = $frame_bb + 8 | 0;
 HEAPF32[$141 >> 2] = $129;
 HEAPF32[$frame_bb + 12 >> 2] = $130;
 $143 = (HEAP32[tempDoublePtr >> 2] = $label_size$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]);
 $144 = $143 > 0.0;
 $145 = (HEAP32[tempDoublePtr >> 2] = $133, +HEAPF32[tempDoublePtr >> 2]);
 $146 = (HEAP32[tempDoublePtr >> 2] = $136, +HEAPF32[tempDoublePtr >> 2]);
 if ($144) $151 = $143 + +HEAPF32[37997]; else $151 = 0.0;
 $150 = $151 + $129;
 $152 = $130 + 0.0;
 $153 = $total_bb;
 HEAP32[$153 >> 2] = $133;
 HEAP32[$153 + 4 >> 2] = $136;
 HEAPF32[$total_bb + 8 >> 2] = $150;
 HEAPF32[$total_bb + 12 >> 2] = $152;
 do if ($35) {
  __ZN5ImGui10BeginGroupEv();
  $159 = HEAP32[$id >> 2] | 0;
  HEAPF32[$0 >> 2] = $129 - $145;
  HEAPF32[$0 + 4 >> 2] = $130 - $146;
  if (__ZN5ImGui15BeginChildFrameEjRK6ImVec2i($159, $0, 0) | 0) {
   $165 = HEAP32[38201] | 0;
   HEAP8[$165 + 114 >> 0] = 1;
   $$idx139$val = +HEAPF32[$89 >> 2];
   $167 = $165 + 164 | 0;
   HEAPF32[$167 >> 2] = +HEAPF32[$88 >> 2] + +HEAPF32[$167 >> 2];
   $170 = $165 + 168 | 0;
   HEAPF32[$170 >> 2] = $$idx139$val + +HEAPF32[$170 >> 2];
   $draw_window$0 = $165;
   $size$sroa$0$0 = (HEAPF32[tempDoublePtr >> 2] = $127 - +HEAPF32[$165 + 100 >> 2], HEAP32[tempDoublePtr >> 2] | 0);
   label = 45;
   break;
  } else {
   __ZN5ImGui13EndChildFrameEv();
   __ZN5ImGui8EndGroupEv();
   $$1 = 0;
   break;
  }
 } else {
  $177 = +HEAPF32[$89 >> 2];
  $178 = $152 - $146;
  $180 = HEAP32[38201] | 0;
  HEAP8[$180 + 114 >> 0] = 1;
  if (!(HEAP8[$180 + 116 >> 0] | 0)) {
   $186 = $180 + 196 | 0;
   $187 = +HEAPF32[$186 >> 2];
   $189 = $187 >= $178 ? $187 : $178;
   $190 = $180 + 200 | 0;
   $191 = +HEAPF32[$190 >> 2];
   $194 = $180 + 164 | 0;
   $196 = $150 - $145 + +HEAPF32[$194 >> 2];
   $197 = $180 + 168 | 0;
   $198 = HEAP32[$197 >> 2] | 0;
   HEAPF32[$180 + 172 >> 2] = $196;
   HEAP32[$180 + 176 >> 2] = $198;
   $217 = +(~~($189 + (HEAP32[tempDoublePtr >> 2] = $198, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
   HEAPF32[$194 >> 2] = +(~~(+HEAPF32[$180 + 20 >> 2] + +HEAPF32[$180 + 368 >> 2] + +HEAPF32[$180 + 372 >> 2]) | 0);
   HEAPF32[$197 >> 2] = $217;
   $218 = $180 + 188 | 0;
   $219 = +HEAPF32[$218 >> 2];
   HEAPF32[$218 >> 2] = $219 >= $196 ? $219 : $196;
   $222 = $180 + 192 | 0;
   $223 = +HEAPF32[$222 >> 2];
   HEAPF32[$222 >> 2] = $223 >= $217 ? $223 : $217;
   HEAPF32[$180 + 204 >> 2] = $189;
   HEAPF32[$180 + 208 >> 2] = $191 >= $177 ? $191 : $177;
   HEAPF32[$190 >> 2] = 0.0;
   HEAPF32[$186 >> 2] = 0.0;
  }
  if (__ZN5ImGui7ItemAddERK6ImRectPKj($total_bb, $id) | 0) {
   $draw_window$0 = $9;
   $size$sroa$0$0 = $tmpcast141$sroa$0$0;
   label = 45;
  } else $$1 = 0;
 } while (0);
 if ((label | 0) == 45) {
  do if ($38) {
   $229 = 152744;
   $231 = __ZNK6ImFont9FindGlyphEt(HEAP32[$229 >> 2] | 0, 42) | 0;
   $232 = 156812;
   $233 = HEAP32[$229 >> 2] | 0;
   HEAP32[$232 >> 2] = HEAP32[$233 >> 2];
   HEAP32[39204] = HEAP32[$233 + 4 >> 2];
   $240 = $233 + 8 | 0;
   $245 = HEAP32[$240 + 4 >> 2] | 0;
   $246 = 156820;
   HEAP32[$246 >> 2] = HEAP32[$240 >> 2];
   HEAP32[$246 + 4 >> 2] = $245;
   HEAP32[39210] = HEAP32[$233 + 28 >> 2];
   HEAP32[39211] = HEAP32[$233 + 32 >> 2];
   HEAP32[39212] = HEAP32[$233 + 36 >> 2];
   HEAP32[39216] = $231;
   HEAP32[39217] = HEAP32[$231 + 4 >> 2];
   if (HEAP32[39213] | 0) ___assert_fail(125298, 124187, 7271, 124386);
   if (HEAP32[39218] | 0) ___assert_fail(125298, 124187, 7271, 124386);
   if (!(HEAP32[39221] | 0)) {
    __ZN5ImGui8PushFontEP6ImFont($232);
    break;
   } else ___assert_fail(125298, 124187, 7271, 124386);
  } while (0);
  $272 = 153528;
  $274 = HEAP8[147105] | 0;
  $276 = HEAP16[73553] | 0;
  $277 = $276 & 255;
  $278 = $277 << 24 >> 24 != 0;
  $280 = ($276 & 65535) >>> 8 & 255;
  $281 = 152844;
  $287 = __ZN5ImGui21FocusableItemRegisterEP11ImGuiWindowbb($9, (HEAP32[$281 >> 2] | 0) == (HEAP32[$id >> 2] | 0), ($flags & 1088 | 0) == 0) | 0;
  if ($287) $294 = (HEAP32[$9 + 584 >> 2] | 0) == (HEAP32[$9 + 592 >> 2] | 0); else $294 = 0;
  $$ = $287 & ($294 ^ 1);
  $295 = HEAP32[$id >> 2] | 0;
  $296 = __ZN5ImGui9IsHoveredERK6ImRectjb($frame_bb, $295, 0) | 0;
  if ($296) {
   HEAP32[38208] = $295;
   HEAP8[152836] = 0;
   HEAP32[38290] = 1;
   $331 = (HEAP8[147696] | 0) != 0;
  } else $331 = 0;
  if ($35 & (HEAP32[$281 >> 2] | 0) == 0) if ((HEAP32[$272 >> 2] | 0) == (HEAP32[$id >> 2] | 0)) {
   $309 = HEAP32[38212] | 0;
   $311 = HEAP32[$draw_window$0 + 424 >> 2] | 0;
   if (($311 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
   $318 = __Z6ImHashPKvij(124961, 0, HEAP32[(HEAP32[$draw_window$0 + 432 >> 2] | 0) + ($311 + -1 << 2) >> 2] | 0) | 0;
   if ((HEAP32[38211] | 0) == ($318 | 0)) HEAP8[152852] = 1;
   $332 = ($309 | 0) == ($318 | 0);
  } else $332 = 0; else $332 = 0;
  $326 = (HEAP32[$281 >> 2] | 0) == (HEAP32[$id >> 2] | 0);
  $328 = ($flags & 16 | 0) != 0;
  $not$ = $326 ^ 1;
  $329 = $328 & $not$;
  $330 = $329 & 1;
  do if ($287 | $331 | $332) {
   do if ($326) $select_all$2 = $330; else {
    $333 = 153572;
    $334 = HEAP32[$333 >> 2] | 0;
    $335 = 153532;
    $336 = $buf_size + 1 | 0;
    $337 = 153536;
    $338 = HEAP32[$337 >> 2] | 0;
    do if (($338 | 0) <= ($buf_size | 0)) {
     if (!$338) $344 = 8; else $344 = (($338 | 0) / 2 | 0) + $338 | 0;
     $345 = ($344 | 0) > ($336 | 0) ? $344 : $336;
     if (($338 | 0) >= ($345 | 0)) break;
     $348 = 147664;
     HEAP32[$348 >> 2] = (HEAP32[$348 >> 2] | 0) + 1;
     $353 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($345 << 1) | 0;
     $354 = 153540;
     _memcpy($353 | 0, HEAP32[$354 >> 2] | 0, HEAP32[$335 >> 2] << 1 | 0) | 0;
     $358 = HEAP32[$354 >> 2] | 0;
     if ($358 | 0) {
      $360 = 147664;
      HEAP32[$360 >> 2] = (HEAP32[$360 >> 2] | 0) + -1;
     }
     FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($358);
     HEAP32[$354 >> 2] = $353;
     HEAP32[$337 >> 2] = $345;
    } while (0);
    HEAP32[$335 >> 2] = $336;
    $365 = 153544;
    $366 = 153548;
    $367 = HEAP32[$366 >> 2] | 0;
    do if (($367 | 0) <= ($buf_size | 0)) {
     if (!$367) $373 = 8; else $373 = (($367 | 0) / 2 | 0) + $367 | 0;
     $374 = ($373 | 0) > ($336 | 0) ? $373 : $336;
     if (($367 | 0) >= ($374 | 0)) break;
     $376 = 147664;
     HEAP32[$376 >> 2] = (HEAP32[$376 >> 2] | 0) + 1;
     $381 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($374) | 0;
     $382 = 153552;
     _memcpy($381 | 0, HEAP32[$382 >> 2] | 0, HEAP32[$365 >> 2] | 0) | 0;
     $385 = HEAP32[$382 >> 2] | 0;
     if ($385 | 0) {
      $387 = 147664;
      HEAP32[$387 >> 2] = (HEAP32[$387 >> 2] | 0) + -1;
     }
     FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($385);
     HEAP32[$382 >> 2] = $381;
     HEAP32[$366 >> 2] = $374;
    } while (0);
    HEAP32[$365 >> 2] = $336;
    $393 = HEAP32[38388] | 0;
    HEAP32[$vararg_buffer >> 2] = $buf;
    __Z14ImFormatStringPciPKcz($393, $336, 124291, $vararg_buffer) | 0;
    $395 = HEAP32[38385] | 0;
    $398 = $395 + (HEAP32[$335 >> 2] << 1) + -2 | 0;
    L120 : do if ($398 >>> 0 > $395 >>> 0) {
     $$028$us$i246 = $buf;
     $buf_out$07$us$i247 = $395;
     while (1) {
      if (!(HEAP8[$$028$us$i246 >> 0] | 0)) {
       $$1$i253 = $$028$us$i246;
       $buf_out$04$i252 = $buf_out$07$us$i247;
       break L120;
      }
      $403 = $$028$us$i246 + (__Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $$028$us$i246, 0) | 0) | 0;
      $404 = HEAP32[$$byval_copy >> 2] | 0;
      if (!$404) {
       $$lcssa891 = $403;
       $buf_out$07$us$i247$lcssa890 = $buf_out$07$us$i247;
       break;
      }
      if ($404 >>> 0 < 65536) {
       HEAP16[$buf_out$07$us$i247 >> 1] = $404;
       $buf_out$2$ph$us$i249 = $buf_out$07$us$i247 + 2 | 0;
      } else $buf_out$2$ph$us$i249 = $buf_out$07$us$i247;
      if ($buf_out$2$ph$us$i249 >>> 0 < $398 >>> 0) {
       $$028$us$i246 = $403;
       $buf_out$07$us$i247 = $buf_out$2$ph$us$i249;
      } else {
       $$1$i253 = $403;
       $buf_out$04$i252 = $buf_out$2$ph$us$i249;
       break L120;
      }
     }
     $$1$i253 = $$lcssa891;
     $buf_out$04$i252 = $buf_out$07$us$i247$lcssa890;
    } else {
     $$1$i253 = $buf;
     $buf_out$04$i252 = $395;
    } while (0);
    HEAP16[$buf_out$04$i252 >> 1] = 0;
    $414 = $buf_out$04$i252 - $395 >> 1;
    HEAP32[$333 >> 2] = $414;
    HEAP32[38392] = $$1$i253 - $buf;
    HEAPF32[39201] = -.30000001192092896;
    $420 = HEAP32[$id >> 2] | 0;
    if (($334 | 0) == ($414 | 0) ? (HEAP32[$272 >> 2] | 0) == ($420 | 0) : 0) {
     $423 = 153584;
     $424 = HEAP32[$423 >> 2] | 0;
     HEAP32[$423 >> 2] = ($424 | 0) < ($334 | 0) ? $424 : $334;
     $427 = 153588;
     $428 = HEAP32[$427 >> 2] | 0;
     HEAP32[$427 >> 2] = ($428 | 0) < ($334 | 0) ? $428 : $334;
     $431 = 153592;
     $432 = HEAP32[$431 >> 2] | 0;
     HEAP32[$431 >> 2] = ($432 | 0) < ($334 | 0) ? $432 : $334;
     $select_all$0 = $330;
    } else {
     HEAP32[$272 >> 2] = $420;
     HEAPF32[38395] = 0.0;
     HEAP16[78397] = 0;
     HEAP16[78399] = 0;
     HEAP16[78398] = 99;
     HEAP16[78400] = 999;
     HEAP32[38397] = 0;
     HEAP32[38398] = 0;
     HEAP32[38396] = 0;
     HEAP8[153599] = 0;
     HEAPF32[38401] = 0.0;
     HEAP8[153597] = 0;
     HEAP8[153598] = 1;
     HEAP8[153600] = $16 >>> 20 ^ 1;
     HEAP8[153596] = 0;
     $select_all$0 = $35 ? $330 : $294 ? 1 : $330;
    }
    if ($flags & 8192 | 0) HEAP8[153596] = 1;
    if ($35) {
     $select_all$2 = $select_all$0;
     break;
    }
    if (!$$) if ($274 << 24 >> 24 == 0 | $331 ^ 1) {
     $select_all$2 = $select_all$0;
     break;
    }
    $select_all$2 = 1;
   } while (0);
   HEAP32[38211] = HEAP32[$id >> 2];
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = $9;
   __ZN5ImGui11FocusWindowEP11ImGuiWindow($9);
   $select_all$3$off0 = ($select_all$2 & 1) != 0;
  } else {
   $463 = (HEAP8[147696] | 0) == 0;
   if ($463 | $not$) {
    $select_all$3$off0 = $463 ? $329 : $328;
    break;
   }
   HEAP32[38211] = 0;
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = 0;
   $select_all$3$off0 = 0;
  } while (0);
  L146 : do if ((HEAP32[$281 >> 2] | 0) == (HEAP32[$id >> 2] | 0)) {
   $471 = ($$lobit | 0) == 0;
   do if (!$471) {
    if (HEAP8[152853] | 0) break;
    $475 = 153532;
    $476 = $buf_size + 1 | 0;
    $477 = 153536;
    $478 = HEAP32[$477 >> 2] | 0;
    do if (($478 | 0) <= ($buf_size | 0)) {
     if (!$478) $484 = 8; else $484 = (($478 | 0) / 2 | 0) + $478 | 0;
     $485 = ($484 | 0) > ($476 | 0) ? $484 : $476;
     if (($478 | 0) >= ($485 | 0)) break;
     $488 = 147664;
     HEAP32[$488 >> 2] = (HEAP32[$488 >> 2] | 0) + 1;
     $493 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($485 << 1) | 0;
     $494 = 153540;
     _memcpy($493 | 0, HEAP32[$494 >> 2] | 0, HEAP32[$475 >> 2] << 1 | 0) | 0;
     $498 = HEAP32[$494 >> 2] | 0;
     if ($498 | 0) {
      $500 = 147664;
      HEAP32[$500 >> 2] = (HEAP32[$500 >> 2] | 0) + -1;
     }
     FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($498);
     HEAP32[$494 >> 2] = $493;
     HEAP32[$477 >> 2] = $485;
    } while (0);
    HEAP32[$475 >> 2] = $476;
    $506 = HEAP32[38385] | 0;
    $508 = $506 + ($476 << 1) + -2 | 0;
    L161 : do if ($508 >>> 0 > $506 >>> 0) {
     $$028$us$i278 = $buf;
     $buf_out$07$us$i279 = $506;
     while (1) {
      if (!(HEAP8[$$028$us$i278 >> 0] | 0)) {
       $$1$i285 = $$028$us$i278;
       $buf_out$04$i284 = $buf_out$07$us$i279;
       break L161;
      }
      $513 = $$028$us$i278 + (__Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $$028$us$i278, 0) | 0) | 0;
      $514 = HEAP32[$$byval_copy >> 2] | 0;
      if (!$514) {
       $$lcssa889 = $513;
       $buf_out$07$us$i279$lcssa888 = $buf_out$07$us$i279;
       break;
      }
      if ($514 >>> 0 < 65536) {
       HEAP16[$buf_out$07$us$i279 >> 1] = $514;
       $buf_out$2$ph$us$i281 = $buf_out$07$us$i279 + 2 | 0;
      } else $buf_out$2$ph$us$i281 = $buf_out$07$us$i279;
      if ($buf_out$2$ph$us$i281 >>> 0 < $508 >>> 0) {
       $$028$us$i278 = $513;
       $buf_out$07$us$i279 = $buf_out$2$ph$us$i281;
      } else {
       $$1$i285 = $513;
       $buf_out$04$i284 = $buf_out$2$ph$us$i281;
       break L161;
      }
     }
     $$1$i285 = $$lcssa889;
     $buf_out$04$i284 = $buf_out$07$us$i279$lcssa888;
    } else {
     $$1$i285 = $buf;
     $buf_out$04$i284 = $506;
    } while (0);
    HEAP16[$buf_out$04$i284 >> 1] = 0;
    $524 = $buf_out$04$i284 - $506 >> 1;
    HEAP32[38393] = $524;
    HEAP32[38392] = $$1$i285 - $buf;
    $529 = 153584;
    $530 = HEAP32[$529 >> 2] | 0;
    HEAP32[$529 >> 2] = ($530 | 0) < ($524 | 0) ? $530 : $524;
    $533 = 153588;
    $534 = HEAP32[$533 >> 2] | 0;
    HEAP32[$533 >> 2] = ($534 | 0) < ($524 | 0) ? $534 : $524;
    $537 = 153592;
    $538 = HEAP32[$537 >> 2] | 0;
    HEAP32[$537 >> 2] = ($538 | 0) < ($524 | 0) ? $538 : $524;
   } while (0);
   $541 = 153576;
   HEAP32[$541 >> 2] = $buf_size;
   $542 = 147092;
   $543 = HEAP8[$542 >> 0] | 0;
   HEAP8[152854] = $543 ^ 1;
   $553 = +HEAPF32[36771] - $145 - +HEAPF32[$88 >> 2] + +HEAPF32[38395];
   if ($35) $580 = +HEAPF32[36772] - +HEAPF32[$draw_window$0 + 168 >> 2] - +HEAPF32[$89 >> 2]; else $580 = +HEAPF32[38187] * .5;
   L177 : do if ($select_all$3$off0) label = 123; else {
    if ($296) if (HEAP8[147764] | 0) {
     label = 123;
     break;
    }
    do if (HEAP8[147696] | 0) {
     $577 = 156809;
     if (HEAP8[$577 >> 0] | 0) break;
     $581 = __ZN8ImGuiStbL21stb_text_locate_coordEP18ImGuiTextEditStateff($272, $553, $580) | 0;
     HEAP32[38396] = $581;
     HEAP32[38397] = $581;
     HEAP32[38398] = $581;
     HEAP8[153599] = 0;
     HEAPF32[39201] = -.30000001192092896;
     $$pre$phi687Z2D = $577;
     break L177;
    } while (0);
    $$pre = 156809;
    if (!($543 << 24 >> 24 != 0 & (HEAP8[$$pre >> 0] | 0) == 0)) {
     $$pre$phi687Z2D = $$pre;
     break;
    }
    if (!(+HEAPF32[36922] != 0.0)) if (!(+HEAPF32[36923] != 0.0)) {
     $$pre$phi687Z2D = $$pre;
     break;
    }
    $596 = __ZN8ImGuiStbL21stb_text_locate_coordEP18ImGuiTextEditStateff($272, $553, $580) | 0;
    $597 = 153588;
    $599 = 153592;
    $602 = 153584;
    if ((HEAP32[$597 >> 2] | 0) == (HEAP32[$599 >> 2] | 0)) HEAP32[$597 >> 2] = HEAP32[$602 >> 2];
    HEAP32[$599 >> 2] = $596;
    HEAP32[$602 >> 2] = $596;
    HEAPF32[39201] = -.30000001192092896;
    HEAP8[156808] = 1;
    $$pre$phi687Z2D = $$pre;
   } while (0);
   if ((label | 0) == 123) {
    HEAP32[38397] = 0;
    $569 = HEAP32[38393] | 0;
    HEAP32[38398] = $569;
    HEAP32[38396] = $569;
    HEAP8[153599] = 0;
    $573 = 156809;
    HEAP8[$573 >> 0] = 1;
    $$pre$phi687Z2D = $573;
   }
   if ((HEAP8[$$pre$phi687Z2D >> 0] | 0) != 0 & (HEAP8[$542 >> 0] | 0) == 0) HEAP8[$$pre$phi687Z2D >> 0] = 0;
   $610 = 147620;
   if (HEAP16[$610 >> 1] | 0) {
    L201 : do if (!($274 << 24 >> 24 != 0 & $280 << 24 >> 24 == 0 | $471 ^ 1)) {
     $n$0618 = 0;
     do {
      $616 = HEAP16[147620 + ($n$0618 << 1) >> 1] | 0;
      if (!($616 << 16 >> 16)) break L201;
      HEAP32[$$byval_copy >> 2] = $616 & 65535;
      if (__ZL24InputTextFilterCharacterPjiPFiP25ImGuiTextEditCallbackDataEPv($$byval_copy, $flags, $callback, $user_data) | 0) __ZN18ImGuiTextEditState12OnKeyPressedEi($272, HEAP32[$$byval_copy >> 2] | 0);
      $n$0618 = $n$0618 + 1 | 0;
     } while (($n$0618 | 0) < 17);
    } while (0);
    HEAP32[$610 >> 2] = 0;
    HEAP32[$610 + 4 >> 2] = 0;
    HEAP32[$610 + 8 >> 2] = 0;
    HEAP32[$610 + 12 >> 2] = 0;
    HEAP32[$610 + 16 >> 2] = 0;
    HEAP32[$610 + 20 >> 2] = 0;
    HEAP32[$610 + 24 >> 2] = 0;
    HEAP32[$610 + 28 >> 2] = 0;
    HEAP16[$610 + 32 >> 1] = 0;
   }
   $623 = $278 ? 131072 : 0;
   $624 = $274 << 24 >> 24 != 0;
   $625 = $280 << 24 >> 24 == 0;
   $$89 = $624 & $625 & ($278 ^ 1);
   $628 = HEAP32[36734] | 0;
   do if (($628 | 0) < 0) label = 150; else {
    if ($628 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
    $632 = +HEAPF32[147840 + ($628 << 2) >> 2];
    if (!($632 == 0.0)) {
     $635 = +HEAPF32[36752];
     if (!($632 > $635)) {
      label = 150;
      break;
     }
     $638 = +HEAPF32[36753];
     $639 = $632 - $635;
     $641 = $638 * .5;
     $642 = +_fmodf($639, $638) > $641;
     if (!($642 ^ +_fmodf($639 - +HEAPF32[36726], $638) > $641)) {
      label = 150;
      break;
     }
    }
    __ZN18ImGuiTextEditState12OnKeyPressedEi($272, $623 | ($624 ? 65548 : 65536));
    $enter_pressed$1$ph = 0;
    label = 492;
   } while (0);
   L220 : do if ((label | 0) == 150) {
    $651 = HEAP32[36735] | 0;
    do if (($651 | 0) >= 0) {
     if ($651 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $655 = +HEAPF32[147840 + ($651 << 2) >> 2];
     if (!($655 == 0.0)) {
      $658 = +HEAPF32[36752];
      if (!($655 > $658)) break;
      $661 = +HEAPF32[36753];
      $662 = $655 - $658;
      $664 = $661 * .5;
      $665 = +_fmodf($662, $661) > $664;
      if (!($665 ^ +_fmodf($662 - +HEAPF32[36726], $661) > $664)) break;
     }
     __ZN18ImGuiTextEditState12OnKeyPressedEi($272, $623 | ($624 ? 65549 : 65537));
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    do if ($35) {
     $674 = HEAP32[36736] | 0;
     do if (($674 | 0) >= 0) {
      if ($674 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
      $678 = +HEAPF32[147840 + ($674 << 2) >> 2];
      if (!($678 == 0.0)) {
       $681 = +HEAPF32[36752];
       if (!($678 > $681)) break;
       $684 = +HEAPF32[36753];
       $685 = $678 - $681;
       $687 = $684 * .5;
       $688 = +_fmodf($685, $684) > $687;
       if (!($688 ^ +_fmodf($685 - +HEAPF32[36726], $684) > $687)) break;
      }
      if ($624) {
       $695 = $draw_window$0 + 76 | 0;
       $696 = +HEAPF32[$695 >> 2];
       $699 = $696 - +HEAPF32[38187];
       $700 = $draw_window$0 + 192 | 0;
       $702 = $696 + +HEAPF32[$700 >> 2];
       HEAPF32[$695 >> 2] = $699;
       HEAPF32[$700 >> 2] = $702 - $699;
       $enter_pressed$1$ph = 0;
       label = 492;
       break L220;
      } else {
       __ZN18ImGuiTextEditState12OnKeyPressedEi($272, $623 | 65538);
       $enter_pressed$1$ph = 0;
       label = 492;
       break L220;
      }
     } while (0);
     $706 = HEAP32[36737] | 0;
     if (($706 | 0) < 0) break;
     if ($706 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $710 = +HEAPF32[147840 + ($706 << 2) >> 2];
     if (!($710 == 0.0)) {
      $713 = +HEAPF32[36752];
      if (!($710 > $713)) break;
      $716 = +HEAPF32[36753];
      $717 = $710 - $713;
      $719 = $716 * .5;
      $720 = +_fmodf($717, $716) > $719;
      if (!($720 ^ +_fmodf($717 - +HEAPF32[36726], $716) > $719)) break;
     }
     if ($624) {
      $727 = $draw_window$0 + 76 | 0;
      $728 = +HEAPF32[$727 >> 2];
      $731 = $728 + +HEAPF32[38187];
      $732 = $draw_window$0 + 192 | 0;
      $734 = $728 + +HEAPF32[$732 >> 2];
      HEAPF32[$727 >> 2] = $731;
      HEAPF32[$732 >> 2] = $734 - $731;
      $enter_pressed$1$ph = 0;
      label = 492;
      break L220;
     } else {
      __ZN18ImGuiTextEditState12OnKeyPressedEi($272, $623 | 65539);
      $enter_pressed$1$ph = 0;
      label = 492;
      break L220;
     }
    } while (0);
    $738 = HEAP32[36740] | 0;
    do if (($738 | 0) >= 0) {
     if ($738 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $742 = +HEAPF32[147840 + ($738 << 2) >> 2];
     if (!($742 == 0.0)) {
      $745 = +HEAPF32[36752];
      if (!($742 > $745)) break;
      $748 = +HEAPF32[36753];
      $749 = $742 - $745;
      $751 = $748 * .5;
      $752 = +_fmodf($749, $748) > $751;
      if (!($752 ^ +_fmodf($749 - +HEAPF32[36726], $748) > $751)) break;
     }
     __ZN18ImGuiTextEditState12OnKeyPressedEi($272, $623 | ($624 ? 65542 : 65540));
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    $761 = HEAP32[36741] | 0;
    do if (($761 | 0) >= 0) {
     if ($761 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $765 = +HEAPF32[147840 + ($761 << 2) >> 2];
     if (!($765 == 0.0)) {
      $768 = +HEAPF32[36752];
      if (!($765 > $768)) break;
      $771 = +HEAPF32[36753];
      $772 = $765 - $768;
      $774 = $771 * .5;
      $775 = +_fmodf($772, $771) > $774;
      if (!($775 ^ +_fmodf($772 - +HEAPF32[36726], $771) > $774)) break;
     }
     __ZN18ImGuiTextEditState12OnKeyPressedEi($272, $623 | ($624 ? 65543 : 65541));
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    $784 = HEAP32[36742] | 0;
    do if (($784 | 0) >= 0) {
     if ($784 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $788 = +HEAPF32[147840 + ($784 << 2) >> 2];
     if ($788 == 0.0) {
      if (!$471) break;
     } else {
      $791 = +HEAPF32[36752];
      if (!($788 > $791)) break;
      $794 = +HEAPF32[36753];
      $795 = $788 - $791;
      $797 = $794 * .5;
      $798 = +_fmodf($795, $794) > $797;
      if (!($471 & ($798 ^ +_fmodf($795 - +HEAPF32[36726], $794) > $797))) break;
     }
     __ZN18ImGuiTextEditState12OnKeyPressedEi($272, $623 | 65544);
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    $$not37463 = $471 ^ 1;
    $807 = HEAP32[36743] | 0;
    do if (($807 | 0) >= 0) {
     if ($807 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $811 = +HEAPF32[147840 + ($807 << 2) >> 2];
     if ($811 == 0.0) {
      if (!$471) break;
     } else {
      $814 = +HEAPF32[36752];
      if (!($811 > $814)) break;
      $817 = +HEAPF32[36753];
      $818 = $811 - $814;
      $820 = $817 * .5;
      $821 = +_fmodf($818, $817) > $820;
      if ($$not37463 | $821 ^ +_fmodf($818 - +HEAPF32[36726], $817) > $820 ^ 1) break;
     }
     __ZN18ImGuiTextEditState12OnKeyPressedEi($272, $623 | 65545);
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    $830 = HEAP32[36744] | 0;
    do if (($830 | 0) >= 0) {
     if ($830 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $834 = +HEAPF32[147840 + ($830 << 2) >> 2];
     if (!($834 == 0.0)) {
      $837 = +HEAPF32[36752];
      if (!($834 > $837)) break;
      $840 = +HEAPF32[36753];
      $841 = $834 - $837;
      $843 = $840 * .5;
      $844 = +_fmodf($841, $840) > $843;
      if (!($844 ^ +_fmodf($841 - +HEAPF32[36726], $840) > $843)) break;
     }
     do if ($35) {
      $852 = ($flags & 2048 | 0) != 0;
      if (!(($624 | $852 ^ 1) & ($852 | $624 ^ 1))) break;
      if (!$471) {
       $enter_pressed$1$ph482 = 0;
       break L220;
      }
      HEAP32[$$byval_copy >> 2] = 10;
      if (__ZL24InputTextFilterCharacterPjiPFiP25ImGuiTextEditCallbackDataEPv($$byval_copy, $flags, $callback, $user_data) | 0) __ZN18ImGuiTextEditState12OnKeyPressedEi($272, HEAP32[$$byval_copy >> 2] | 0);
      $enter_pressed$1$ph483 = 0;
      label = 493;
      break L220;
     } while (0);
     HEAP32[38211] = 0;
     HEAP8[152854] = 0;
     HEAP8[152853] = 1;
     HEAP32[38214] = 0;
     $enter_pressed$1$ph = 1;
     label = 492;
     break L220;
    } while (0);
    do if (!$21) {
     $860 = HEAP32[36733] | 0;
     if (($860 | 0) < 0) break;
     if ($860 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $864 = +HEAPF32[147840 + ($860 << 2) >> 2];
     if (!($864 == 0.0)) {
      $867 = +HEAPF32[36752];
      if (!($864 > $867)) break;
      $870 = +HEAPF32[36753];
      $871 = $864 - $867;
      $873 = $870 * .5;
      $874 = +_fmodf($871, $870) > $873;
      if (!($874 ^ +_fmodf($871 - +HEAPF32[36726], $870) > $873)) break;
     }
     if (($277 | $274) << 24 >> 24 != 0 | $625 ^ 1 | $$not37463) break;
     HEAP32[$$byval_copy >> 2] = 9;
     if (__ZL24InputTextFilterCharacterPjiPFiP25ImGuiTextEditCallbackDataEPv($$byval_copy, $flags, $callback, $user_data) | 0) __ZN18ImGuiTextEditState12OnKeyPressedEi($272, HEAP32[$$byval_copy >> 2] | 0);
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    $886 = HEAP32[36745] | 0;
    do if (($886 | 0) >= 0) {
     if ($886 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $890 = +HEAPF32[147840 + ($886 << 2) >> 2];
     if (!($890 == 0.0)) {
      $893 = +HEAPF32[36752];
      if (!($890 > $893)) break;
      $896 = +HEAPF32[36753];
      $897 = $890 - $893;
      $899 = $896 * .5;
      $900 = +_fmodf($897, $896) > $899;
      if (!($900 ^ +_fmodf($897 - +HEAPF32[36726], $896) > $899)) break;
     }
     HEAP32[38211] = 0;
     HEAP8[152854] = 0;
     HEAP8[152853] = 1;
     HEAP32[38214] = 0;
     if (!$471) {
      $enter_pressed$2$off0 = 0;
      $value_changed$1$off0 = 0;
      break L146;
     }
     HEAP32[$vararg_buffer7 >> 2] = HEAP32[38388];
     __Z14ImFormatStringPciPKcz($buf, $buf_size, 124291, $vararg_buffer7) | 0;
     $enter_pressed$2$off0 = 0;
     $value_changed$1$off0 = 1;
     break L146;
    } while (0);
    if (!$$89) {
     $enter_pressed$1$ph = 0;
     label = 492;
     break;
    }
    $908 = HEAP32[36751] | 0;
    do if (($908 | 0) >= 0) {
     if ($908 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $912 = +HEAPF32[147840 + ($908 << 2) >> 2];
     if ($912 == 0.0) {
      if (!$471) break;
     } else {
      $915 = +HEAPF32[36752];
      if (!($912 > $915)) break;
      $918 = +HEAPF32[36753];
      $919 = $912 - $915;
      $921 = $918 * .5;
      $922 = +_fmodf($919, $918) > $921;
      if ($$not37463 | $922 ^ +_fmodf($919 - +HEAPF32[36726], $918) > $921 ^ 1) break;
     }
     __ZN18ImGuiTextEditState12OnKeyPressedEi($272, 65546);
     $930 = HEAP32[38396] | 0;
     HEAP32[38398] = $930;
     HEAP32[38397] = $930;
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    $934 = HEAP32[36750] | 0;
    do if (($934 | 0) >= 0) {
     if ($934 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $938 = +HEAPF32[147840 + ($934 << 2) >> 2];
     if ($938 == 0.0) {
      if (!$471) break;
     } else {
      $941 = +HEAPF32[36752];
      if (!($938 > $941)) break;
      $944 = +HEAPF32[36753];
      $945 = $938 - $941;
      $947 = $944 * .5;
      $948 = +_fmodf($945, $944) > $947;
      if ($$not37463 | $948 ^ +_fmodf($945 - +HEAPF32[36726], $944) > $947 ^ 1) break;
     }
     __ZN18ImGuiTextEditState12OnKeyPressedEi($272, 65547);
     $956 = HEAP32[38396] | 0;
     HEAP32[38398] = $956;
     HEAP32[38397] = $956;
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    $960 = HEAP32[36746] | 0;
    do if (($960 | 0) >= 0) {
     if ($960 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
     $964 = +HEAPF32[147840 + ($960 << 2) >> 2];
     if (!($964 == 0.0)) {
      $967 = +HEAPF32[36752];
      if (!($964 > $967)) break;
      $970 = +HEAPF32[36753];
      $971 = $964 - $967;
      $973 = $970 * .5;
      $974 = +_fmodf($971, $970) > $973;
      if (!($974 ^ +_fmodf($971 - +HEAPF32[36726], $970) > $973)) break;
     }
     HEAP32[38397] = 0;
     $983 = HEAP32[38393] | 0;
     HEAP32[38398] = $983;
     HEAP32[38396] = $983;
     HEAP8[153599] = 0;
     HEAP8[156808] = 1;
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    L378 : do if (!$38) {
     $989 = HEAP32[36749] | 0;
     $990 = ($989 | 0) < 0;
     do if ($990) label = 268; else {
      if ($989 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
      $993 = +HEAPF32[147840 + ($989 << 2) >> 2];
      if ($993 == 0.0) if ($471) break; else {
       label = 268;
       break;
      }
      $996 = +HEAPF32[36752];
      if (!($993 > $996)) {
       label = 268;
       break;
      }
      $999 = +HEAPF32[36753];
      $1000 = $993 - $996;
      $1002 = $999 * .5;
      $1003 = +_fmodf($1000, $999) > $1002;
      if ($$not37463 | $1003 ^ +_fmodf($1000 - +HEAPF32[36726], $999) > $1002 ^ 1) label = 268;
     } while (0);
     do if ((label | 0) == 268) {
      $1011 = HEAP32[36747] | 0;
      if (($1011 | 0) < 0) break L378;
      if ($1011 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
      $1015 = +HEAPF32[147840 + ($1011 << 2) >> 2];
      if ($1015 == 0.0) break;
      $1018 = +HEAPF32[36752];
      if (!($1015 > $1018)) break L378;
      $1021 = +HEAPF32[36753];
      $1022 = $1015 - $1018;
      $1024 = $1021 * .5;
      $1025 = +_fmodf($1022, $1021) > $1024;
      if (!($1025 ^ +_fmodf($1022 - +HEAPF32[36726], $1021) > $1024)) break L378;
     } while (0);
     if ($35) if ((HEAP32[38397] | 0) == (HEAP32[38398] | 0)) break;
     do if ($990) $$2$i$i358472 = 0; else {
      if ($989 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
      $1039 = +HEAPF32[147840 + ($989 << 2) >> 2];
      if (!($1039 == 0.0)) {
       $1042 = +HEAPF32[36752];
       if (!($1039 > $1042)) {
        $$2$i$i358472 = 0;
        break;
       }
       $1045 = +HEAPF32[36753];
       $1046 = $1039 - $1042;
       $1048 = $1045 * .5;
       $1049 = +_fmodf($1046, $1045) > $1048;
       if (!($1049 ^ +_fmodf($1046 - +HEAPF32[36726], $1045) > $1048)) {
        $$2$i$i358472 = 0;
        break;
       }
      }
      $1056 = 153588;
      $1058 = 153592;
      if ((HEAP32[$1056 >> 2] | 0) != (HEAP32[$1058 >> 2] | 0)) {
       $$2$i$i358472 = 1;
       break;
      }
      HEAP32[$1056 >> 2] = 0;
      $1062 = HEAP32[38393] | 0;
      HEAP32[$1058 >> 2] = $1062;
      HEAP32[38396] = $1062;
      HEAP8[153599] = 0;
      $$2$i$i358472 = 1;
     } while (0);
     $1065 = 147064;
     if (HEAP32[$1065 >> 2] | 0) {
      $1069 = HEAP32[38397] | 0;
      $1071 = HEAP32[38398] | 0;
      if (($1069 | 0) == ($1071 | 0)) {
       $1081 = HEAP32[38393] | 0;
       $1082 = 0;
      } else {
       $1081 = ($1069 | 0) >= ($1071 | 0) ? $1069 : $1071;
       $1082 = ($1069 | 0) < ($1071 | 0) ? $1069 : $1071;
      }
      $1079 = 153556;
      $1084 = $1081 - $1082 << 2 | 1;
      $1085 = 153560;
      $1086 = HEAP32[$1085 >> 2] | 0;
      do if (($1086 | 0) < ($1084 | 0)) {
       if (!$1086) $1092 = 8; else $1092 = (($1086 | 0) / 2 | 0) + $1086 | 0;
       $1093 = ($1092 | 0) > ($1084 | 0) ? $1092 : $1084;
       if (($1086 | 0) >= ($1093 | 0)) break;
       $1095 = 147664;
       HEAP32[$1095 >> 2] = (HEAP32[$1095 >> 2] | 0) + 1;
       $1100 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($1093) | 0;
       $1101 = 153564;
       _memcpy($1100 | 0, HEAP32[$1101 >> 2] | 0, HEAP32[$1079 >> 2] | 0) | 0;
       $1104 = HEAP32[$1101 >> 2] | 0;
       if ($1104 | 0) {
        $1106 = 147664;
        HEAP32[$1106 >> 2] = (HEAP32[$1106 >> 2] | 0) + -1;
       }
       FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($1104);
       HEAP32[$1101 >> 2] = $1100;
       HEAP32[$1085 >> 2] = $1093;
      } while (0);
      HEAP32[$1079 >> 2] = $1084;
      $1111 = 153564;
      $1114 = HEAP32[38385] | 0;
      __Z15ImTextStrToUtf8PciPKtS1_(HEAP32[$1111 >> 2] | 0, $1084, $1114 + ($1082 << 1) | 0, $1114 + ($1081 << 1) | 0) | 0;
      FUNCTION_TABLE_vi[HEAP32[$1065 >> 2] & 255](HEAP32[$1111 >> 2] | 0);
     }
     if (!$$2$i$i358472) {
      $enter_pressed$1$ph = 0;
      label = 492;
      break L220;
     }
     HEAP8[156808] = 1;
     $1120 = 153588;
     $1121 = HEAP32[$1120 >> 2] | 0;
     $1122 = 153592;
     $1123 = HEAP32[$1122 >> 2] | 0;
     if (($1121 | 0) == ($1123 | 0)) {
      $enter_pressed$1$ph = 0;
      label = 492;
      break L220;
     }
     $str$idx$i$i = 153572;
     $str$idx$val$i$i = HEAP32[$str$idx$i$i >> 2] | 0;
     if (($1121 | 0) > ($str$idx$val$i$i | 0)) {
      HEAP32[$1120 >> 2] = $str$idx$val$i$i;
      $1128 = $str$idx$val$i$i;
     } else $1128 = $1121;
     if (($1123 | 0) > ($str$idx$val$i$i | 0)) {
      HEAP32[$1122 >> 2] = $str$idx$val$i$i;
      $1129 = $str$idx$val$i$i;
     } else $1129 = $1123;
     $1130 = 153584;
     if (($1128 | 0) == ($1129 | 0)) {
      HEAP32[$1130 >> 2] = $1128;
      $1132 = $1128;
      $1134 = $1128;
     } else {
      $1132 = HEAP32[$1130 >> 2] | 0;
      $1134 = $1129;
     }
     if (($1132 | 0) > ($str$idx$val$i$i | 0)) HEAP32[$1130 >> 2] = $str$idx$val$i$i;
     if (($1128 | 0) == ($1134 | 0)) $$pre$phi47$iZ2D = 153599; else {
      if (($1128 | 0) < ($1134 | 0)) {
       $1136 = $1134 - $1128 | 0;
       $1138 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii(153608, $1128, $1136, 0) | 0;
       $1140 = ($1136 | 0) > 0;
       L449 : do if ($1140 & ($1138 | 0) != 0) {
        $1142 = HEAP32[38383] | 0;
        $1143 = 153540;
        $i$01$i$i$i = 0;
        while (1) {
         $1144 = $i$01$i$i$i + $1128 | 0;
         if (($1142 | 0) <= ($1144 | 0)) break;
         $1146 = HEAP32[$1143 >> 2] | 0;
         HEAP16[$1138 + ($i$01$i$i$i << 1) >> 1] = HEAP16[$1146 + ($1144 << 1) >> 1] | 0;
         $i$01$i$i$i = $i$01$i$i$i + 1 | 0;
         if (($i$01$i$i$i | 0) >= ($1136 | 0)) {
          $1153 = $1146;
          break L449;
         }
        }
        ___assert_fail(127217, 127226, 806, 127272);
       } else $1153 = HEAP32[38385] | 0; while (0);
       $1152 = $1153 + ($1128 << 1) | 0;
       $1154 = $1152 + ($1136 << 1) | 0;
       $1155 = ($1154 | 0) == 0;
       L457 : do if ($1140 | $1155) if ($1155) {
        $1156 = HEAP16[$1152 >> 1] | 0;
        if (!($1156 << 16 >> 16)) {
         $bytes_count$0$lcssa$i$i$i = 0;
         break;
        } else {
         $$03$us$i4$i$i = $1152;
         $1160 = $1156;
         $bytes_count$02$us$i5$i$i = 0;
        }
        while (1) {
         $$03$us$i4$i$i = $$03$us$i4$i$i + 2 | 0;
         if (($1160 & 65535) < 128) $bytes_count$02$us$i$be$i$i = $bytes_count$02$us$i5$i$i + 1 | 0; else {
          do if (($1160 & 65535) < 2048) $$0$i$us$i$i$i = 2; else {
           $1163 = $1160 & 64512;
           if (($1163 | 0) == 56320) {
            $$0$i$us$i$i$i = 0;
            break;
           }
           $$0$i$us$i$i$i = ($1163 | 0) == 55296 ? 4 : 3;
          } while (0);
          $bytes_count$02$us$i$be$i$i = $$0$i$us$i$i$i + $bytes_count$02$us$i5$i$i | 0;
         }
         $1160 = HEAP16[$$03$us$i4$i$i >> 1] | 0;
         if (!($1160 << 16 >> 16)) {
          $bytes_count$0$lcssa$i$i$i = $bytes_count$02$us$i$be$i$i;
          break;
         } else $bytes_count$02$us$i5$i$i = $bytes_count$02$us$i$be$i$i;
        }
       } else {
        $$03$i$i$i = $1152;
        $bytes_count$02$i$i$i = 0;
        while (1) {
         $1170 = HEAP16[$$03$i$i$i >> 1] | 0;
         if (!($1170 << 16 >> 16)) {
          $bytes_count$0$lcssa$i$i$i = $bytes_count$02$i$i$i;
          break L457;
         }
         $$03$i$i$i = $$03$i$i$i + 2 | 0;
         if (($1170 & 65535) < 128) $bytes_count$0$be$i$i$i = $bytes_count$02$i$i$i + 1 | 0; else {
          do if (($1170 & 65535) < 2048) $$0$i$i$i$i = 2; else {
           $1177 = $1170 & 64512;
           if (($1177 | 0) == 56320) {
            $$0$i$i$i$i = 0;
            break;
           }
           $$0$i$i$i$i = ($1177 | 0) == 55296 ? 4 : 3;
          } while (0);
          $bytes_count$0$be$i$i$i = $$0$i$i$i$i + $bytes_count$02$i$i$i | 0;
         }
         if ($$03$i$i$i >>> 0 >= $1154 >>> 0) {
          $bytes_count$0$lcssa$i$i$i = $bytes_count$0$be$i$i$i;
          break;
         } else $bytes_count$02$i$i$i = $bytes_count$0$be$i$i$i;
        }
       } else $bytes_count$0$lcssa$i$i$i = 0; while (0);
       $1182 = 153568;
       HEAP32[$1182 >> 2] = (HEAP32[$1182 >> 2] | 0) - $bytes_count$0$lcssa$i$i$i;
       HEAP32[$str$idx$i$i >> 2] = (HEAP32[$str$idx$i$i >> 2] | 0) - $1136;
       $1187 = HEAP16[$1154 >> 1] | 0;
       if (!($1187 << 16 >> 16)) $dst$0$lcssa$i$i = $1152; else {
        $1191 = $1187;
        $dst$03$i$i = $1152;
        $src$02$i$i = $1154;
        while (1) {
         $src$02$i$i = $src$02$i$i + 2 | 0;
         $1190 = $dst$03$i$i + 2 | 0;
         HEAP16[$dst$03$i$i >> 1] = $1191;
         $1191 = HEAP16[$src$02$i$i >> 1] | 0;
         if (!($1191 << 16 >> 16)) {
          $dst$0$lcssa$i$i = $1190;
          break;
         } else $dst$03$i$i = $1190;
        }
       }
       HEAP16[$dst$0$lcssa$i$i >> 1] = 0;
       $1194 = 153599;
       HEAP8[$1194 >> 0] = 0;
       $1195 = HEAP32[$1120 >> 2] | 0;
       HEAP32[$1130 >> 2] = $1195;
       HEAP32[$1122 >> 2] = $1195;
       $$pre$phi44$iZ2D = $1194;
      } else {
       $1196 = $1128 - $1134 | 0;
       $1198 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii(153608, $1134, $1196, 0) | 0;
       $1200 = ($1196 | 0) > 0;
       L488 : do if ($1200 & ($1198 | 0) != 0) {
        $1202 = HEAP32[38383] | 0;
        $1203 = 153540;
        $i$01$i$i3$i = 0;
        while (1) {
         $1204 = $i$01$i$i3$i + $1134 | 0;
         if (($1202 | 0) <= ($1204 | 0)) break;
         $1206 = HEAP32[$1203 >> 2] | 0;
         HEAP16[$1198 + ($i$01$i$i3$i << 1) >> 1] = HEAP16[$1206 + ($1204 << 1) >> 1] | 0;
         $i$01$i$i3$i = $i$01$i$i3$i + 1 | 0;
         if (($i$01$i$i3$i | 0) >= ($1196 | 0)) {
          $1213 = $1206;
          break L488;
         }
        }
        ___assert_fail(127217, 127226, 806, 127272);
       } else $1213 = HEAP32[38385] | 0; while (0);
       $1212 = $1213 + ($1134 << 1) | 0;
       $1214 = $1212 + ($1196 << 1) | 0;
       $1215 = ($1214 | 0) == 0;
       L496 : do if ($1200 | $1215) if ($1215) {
        $1216 = HEAP16[$1212 >> 1] | 0;
        if (!($1216 << 16 >> 16)) {
         $bytes_count$0$lcssa$i$i26$i = 0;
         break;
        } else {
         $$03$us$i4$i11$i = $1212;
         $1220 = $1216;
         $bytes_count$02$us$i5$i10$i = 0;
        }
        while (1) {
         $$03$us$i4$i11$i = $$03$us$i4$i11$i + 2 | 0;
         if (($1220 & 65535) < 128) $bytes_count$02$us$i$be$i16$i = $bytes_count$02$us$i5$i10$i + 1 | 0; else {
          do if (($1220 & 65535) < 2048) $$0$i$us$i$i14$i = 2; else {
           $1223 = $1220 & 64512;
           if (($1223 | 0) == 56320) {
            $$0$i$us$i$i14$i = 0;
            break;
           }
           $$0$i$us$i$i14$i = ($1223 | 0) == 55296 ? 4 : 3;
          } while (0);
          $bytes_count$02$us$i$be$i16$i = $$0$i$us$i$i14$i + $bytes_count$02$us$i5$i10$i | 0;
         }
         $1220 = HEAP16[$$03$us$i4$i11$i >> 1] | 0;
         if (!($1220 << 16 >> 16)) {
          $bytes_count$0$lcssa$i$i26$i = $bytes_count$02$us$i$be$i16$i;
          break;
         } else $bytes_count$02$us$i5$i10$i = $bytes_count$02$us$i$be$i16$i;
        }
       } else {
        $$03$i$i18$i = $1212;
        $bytes_count$02$i$i19$i = 0;
        while (1) {
         $1230 = HEAP16[$$03$i$i18$i >> 1] | 0;
         if (!($1230 << 16 >> 16)) {
          $bytes_count$0$lcssa$i$i26$i = $bytes_count$02$i$i19$i;
          break L496;
         }
         $$03$i$i18$i = $$03$i$i18$i + 2 | 0;
         if (($1230 & 65535) < 128) $bytes_count$0$be$i$i24$i = $bytes_count$02$i$i19$i + 1 | 0; else {
          do if (($1230 & 65535) < 2048) $$0$i$i$i22$i = 2; else {
           $1237 = $1230 & 64512;
           if (($1237 | 0) == 56320) {
            $$0$i$i$i22$i = 0;
            break;
           }
           $$0$i$i$i22$i = ($1237 | 0) == 55296 ? 4 : 3;
          } while (0);
          $bytes_count$0$be$i$i24$i = $$0$i$i$i22$i + $bytes_count$02$i$i19$i | 0;
         }
         if ($$03$i$i18$i >>> 0 >= $1214 >>> 0) {
          $bytes_count$0$lcssa$i$i26$i = $bytes_count$0$be$i$i24$i;
          break;
         } else $bytes_count$02$i$i19$i = $bytes_count$0$be$i$i24$i;
        }
       } else $bytes_count$0$lcssa$i$i26$i = 0; while (0);
       $1242 = 153568;
       HEAP32[$1242 >> 2] = (HEAP32[$1242 >> 2] | 0) - $bytes_count$0$lcssa$i$i26$i;
       HEAP32[$str$idx$i$i >> 2] = (HEAP32[$str$idx$i$i >> 2] | 0) - $1196;
       $1247 = HEAP16[$1214 >> 1] | 0;
       if (!($1247 << 16 >> 16)) $dst$0$lcssa$i31$i = $1212; else {
        $1251 = $1247;
        $dst$03$i28$i = $1212;
        $src$02$i29$i = $1214;
        while (1) {
         $src$02$i29$i = $src$02$i29$i + 2 | 0;
         $1250 = $dst$03$i28$i + 2 | 0;
         HEAP16[$dst$03$i28$i >> 1] = $1251;
         $1251 = HEAP16[$src$02$i29$i >> 1] | 0;
         if (!($1251 << 16 >> 16)) {
          $dst$0$lcssa$i31$i = $1250;
          break;
         } else $dst$03$i28$i = $1250;
        }
       }
       HEAP16[$dst$0$lcssa$i31$i >> 1] = 0;
       $1254 = 153599;
       HEAP8[$1254 >> 0] = 0;
       $1255 = HEAP32[$1122 >> 2] | 0;
       HEAP32[$1130 >> 2] = $1255;
       HEAP32[$1120 >> 2] = $1255;
       $$pre$phi44$iZ2D = $1254;
      }
      HEAP8[$$pre$phi44$iZ2D >> 0] = 0;
      $$pre$phi47$iZ2D = $$pre$phi44$iZ2D;
     }
     HEAP8[$$pre$phi47$iZ2D >> 0] = 0;
     $enter_pressed$1$ph = 0;
     label = 492;
     break L220;
    } while (0);
    $1257 = HEAP32[36748] | 0;
    if (($1257 | 0) < 0) {
     $enter_pressed$1$ph = 0;
     label = 492;
     break;
    }
    if ($1257 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
    $1261 = +HEAPF32[147840 + ($1257 << 2) >> 2];
    if ($1261 == 0.0) {
     if (!$471) {
      $enter_pressed$1$ph482 = 0;
      break;
     }
    } else {
     $1264 = +HEAPF32[36752];
     if (!($1261 > $1264)) {
      $enter_pressed$1$ph = 0;
      label = 492;
      break;
     }
     $1267 = +HEAPF32[36753];
     $1268 = $1261 - $1264;
     $1270 = $1267 * .5;
     $1271 = +_fmodf($1268, $1267) > $1270;
     if ($$not37463 | $1271 ^ +_fmodf($1268 - +HEAPF32[36726], $1267) > $1270 ^ 1) {
      $enter_pressed$1$ph = 0;
      label = 492;
      break;
     }
    }
    $1279 = HEAP32[36765] | 0;
    if (!$1279) {
     $enter_pressed$1$ph = 0;
     label = 492;
     break;
    }
    $1281 = FUNCTION_TABLE_i[$1279 & 1]() | 0;
    if (!$1281) {
     $enter_pressed$1$ph = 0;
     label = 492;
     break;
    }
    $1285 = ((_strlen($1281) | 0) << 1) + 2 | 0;
    $1286 = 147664;
    HEAP32[$1286 >> 2] = (HEAP32[$1286 >> 2] | 0) + 1;
    $1291 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($1285) | 0;
    do if (!(HEAP8[$1281 >> 0] | 0)) {
     HEAP16[$1291 >> 1] = 0;
     $$pre$i410478 = 146892;
     label = 488;
    } else {
     $clipboard_filtered_len$0615 = 0;
     $s$0614 = $1281;
     while (1) {
      $s$0614 = $s$0614 + (__Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $s$0614, 0) | 0) | 0;
      $1296 = HEAP32[$$byval_copy >> 2] | 0;
      if (!$1296) {
       $clipboard_filtered_len$0615$lcssa = $clipboard_filtered_len$0615;
       label = 383;
       break;
      }
      do if ($1296 >>> 0 > 65535) $clipboard_filtered_len$1$ph = $clipboard_filtered_len$0615; else {
       if (!(__ZL24InputTextFilterCharacterPjiPFiP25ImGuiTextEditCallbackDataEPv($$byval_copy, $flags, $callback, $user_data) | 0)) {
        $clipboard_filtered_len$1$ph = $clipboard_filtered_len$0615;
        break;
       }
       HEAP16[$1291 + ($clipboard_filtered_len$0615 << 1) >> 1] = HEAP32[$$byval_copy >> 2];
       $clipboard_filtered_len$1$ph = $clipboard_filtered_len$0615 + 1 | 0;
      } while (0);
      if (!(HEAP8[$s$0614 >> 0] | 0)) {
       $clipboard_filtered_len$0575 = $clipboard_filtered_len$1$ph;
       break;
      } else $clipboard_filtered_len$0615 = $clipboard_filtered_len$1$ph;
     }
     if ((label | 0) == 383) $clipboard_filtered_len$0575 = $clipboard_filtered_len$0615$lcssa;
     $1306 = $1291 + ($clipboard_filtered_len$0575 << 1) | 0;
     HEAP16[$1306 >> 1] = 0;
     if (($clipboard_filtered_len$0575 | 0) <= 0) {
      $$pre$i410478 = 146892;
      label = 488;
      break;
     }
     $1308 = 153584;
     $str$idx$i = 153572;
     $str$idx$val$i = HEAP32[$str$idx$i >> 2] | 0;
     $1309 = 153588;
     $1310 = HEAP32[$1309 >> 2] | 0;
     $1311 = 153592;
     $1312 = HEAP32[$1311 >> 2] | 0;
     do if (($1310 | 0) == ($1312 | 0)) {
      $1322 = $1310;
      $1323 = $1310;
     } else {
      if (($1310 | 0) > ($str$idx$val$i | 0)) {
       HEAP32[$1309 >> 2] = $str$idx$val$i;
       $1317 = $str$idx$val$i;
      } else $1317 = $1310;
      if (($1312 | 0) > ($str$idx$val$i | 0)) {
       HEAP32[$1311 >> 2] = $str$idx$val$i;
       $1318 = $str$idx$val$i;
      } else $1318 = $1312;
      if (($1317 | 0) != ($1318 | 0)) {
       $1322 = $1317;
       $1323 = $1318;
       break;
      }
      HEAP32[$1308 >> 2] = $1317;
      $1322 = $1317;
      $1323 = $1317;
     } while (0);
     $1319 = HEAP32[$1308 >> 2] | 0;
     if (($1319 | 0) > ($str$idx$val$i | 0)) {
      HEAP32[$1308 >> 2] = $str$idx$val$i;
      $2373 = $str$idx$val$i;
     } else $2373 = $1319;
     do if (($1322 | 0) == ($1323 | 0)) {
      $1330 = $2373;
      $1332 = $1323;
      $1333 = $1323;
     } else {
      if (($1322 | 0) > ($str$idx$val$i | 0)) {
       HEAP32[$1309 >> 2] = $str$idx$val$i;
       $1327 = $str$idx$val$i;
      } else $1327 = $1322;
      if (($1323 | 0) > ($str$idx$val$i | 0)) {
       HEAP32[$1311 >> 2] = $str$idx$val$i;
       $1328 = $str$idx$val$i;
      } else $1328 = $1323;
      if (($1327 | 0) != ($1328 | 0)) {
       $1330 = $2373;
       $1332 = $1327;
       $1333 = $1328;
       break;
      }
      HEAP32[$1308 >> 2] = $1327;
      $1330 = $1327;
      $1332 = $1327;
      $1333 = $1327;
     } while (0);
     if (($1330 | 0) > ($str$idx$val$i | 0)) {
      HEAP32[$1308 >> 2] = $str$idx$val$i;
      $2374 = $str$idx$val$i;
     } else $2374 = $1330;
     if (($1332 | 0) == ($1333 | 0)) {
      $1456 = $str$idx$val$i;
      $1495 = $2374;
     } else {
      if (($1332 | 0) < ($1333 | 0)) {
       $1335 = $1333 - $1332 | 0;
       $1337 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii(153608, $1332, $1335, 0) | 0;
       $1339 = ($1335 | 0) > 0;
       L584 : do if ($1339 & ($1337 | 0) != 0) {
        $1341 = HEAP32[38383] | 0;
        $1342 = 153540;
        $i$01$i$i$i371 = 0;
        while (1) {
         $1343 = $i$01$i$i$i371 + $1332 | 0;
         if (($1341 | 0) <= ($1343 | 0)) break;
         $1345 = HEAP32[$1342 >> 2] | 0;
         HEAP16[$1337 + ($i$01$i$i$i371 << 1) >> 1] = HEAP16[$1345 + ($1343 << 1) >> 1] | 0;
         $i$01$i$i$i371 = $i$01$i$i$i371 + 1 | 0;
         if (($i$01$i$i$i371 | 0) >= ($1335 | 0)) {
          $1352 = $1345;
          break L584;
         }
        }
        ___assert_fail(127217, 127226, 806, 127272);
       } else $1352 = HEAP32[38385] | 0; while (0);
       $1351 = $1352 + ($1332 << 1) | 0;
       $1353 = $1351 + ($1335 << 1) | 0;
       $1354 = ($1353 | 0) == 0;
       L592 : do if ($1339 | $1354) if ($1354) {
        $1355 = HEAP16[$1351 >> 1] | 0;
        if (!($1355 << 16 >> 16)) {
         $bytes_count$0$lcssa$i$i$i393 = 0;
         break;
        } else {
         $$03$us$i4$i$i378 = $1351;
         $1359 = $1355;
         $bytes_count$02$us$i5$i$i377 = 0;
        }
        while (1) {
         $$03$us$i4$i$i378 = $$03$us$i4$i$i378 + 2 | 0;
         if (($1359 & 65535) < 128) $bytes_count$02$us$i$be$i$i383 = $bytes_count$02$us$i5$i$i377 + 1 | 0; else {
          do if (($1359 & 65535) < 2048) $$0$i$us$i$i$i381 = 2; else {
           $1362 = $1359 & 64512;
           if (($1362 | 0) == 56320) {
            $$0$i$us$i$i$i381 = 0;
            break;
           }
           $$0$i$us$i$i$i381 = ($1362 | 0) == 55296 ? 4 : 3;
          } while (0);
          $bytes_count$02$us$i$be$i$i383 = $$0$i$us$i$i$i381 + $bytes_count$02$us$i5$i$i377 | 0;
         }
         $1359 = HEAP16[$$03$us$i4$i$i378 >> 1] | 0;
         if (!($1359 << 16 >> 16)) {
          $bytes_count$0$lcssa$i$i$i393 = $bytes_count$02$us$i$be$i$i383;
          break;
         } else $bytes_count$02$us$i5$i$i377 = $bytes_count$02$us$i$be$i$i383;
        }
       } else {
        $$03$i$i$i385 = $1351;
        $bytes_count$02$i$i$i386 = 0;
        while (1) {
         $1369 = HEAP16[$$03$i$i$i385 >> 1] | 0;
         if (!($1369 << 16 >> 16)) {
          $bytes_count$0$lcssa$i$i$i393 = $bytes_count$02$i$i$i386;
          break L592;
         }
         $$03$i$i$i385 = $$03$i$i$i385 + 2 | 0;
         if (($1369 & 65535) < 128) $bytes_count$0$be$i$i$i391 = $bytes_count$02$i$i$i386 + 1 | 0; else {
          do if (($1369 & 65535) < 2048) $$0$i$i$i$i389 = 2; else {
           $1376 = $1369 & 64512;
           if (($1376 | 0) == 56320) {
            $$0$i$i$i$i389 = 0;
            break;
           }
           $$0$i$i$i$i389 = ($1376 | 0) == 55296 ? 4 : 3;
          } while (0);
          $bytes_count$0$be$i$i$i391 = $$0$i$i$i$i389 + $bytes_count$02$i$i$i386 | 0;
         }
         if ($$03$i$i$i385 >>> 0 >= $1353 >>> 0) {
          $bytes_count$0$lcssa$i$i$i393 = $bytes_count$0$be$i$i$i391;
          break;
         } else $bytes_count$02$i$i$i386 = $bytes_count$0$be$i$i$i391;
        }
       } else $bytes_count$0$lcssa$i$i$i393 = 0; while (0);
       $1381 = 153568;
       HEAP32[$1381 >> 2] = (HEAP32[$1381 >> 2] | 0) - $bytes_count$0$lcssa$i$i$i393;
       $1385 = (HEAP32[$str$idx$i >> 2] | 0) - $1335 | 0;
       HEAP32[$str$idx$i >> 2] = $1385;
       $1386 = HEAP16[$1353 >> 1] | 0;
       if (!($1386 << 16 >> 16)) $dst$0$lcssa$i$i398 = $1351; else {
        $1390 = $1386;
        $dst$03$i$i395 = $1351;
        $src$02$i$i396 = $1353;
        while (1) {
         $src$02$i$i396 = $src$02$i$i396 + 2 | 0;
         $1389 = $dst$03$i$i395 + 2 | 0;
         HEAP16[$dst$03$i$i395 >> 1] = $1390;
         $1390 = HEAP16[$src$02$i$i396 >> 1] | 0;
         if (!($1390 << 16 >> 16)) {
          $dst$0$lcssa$i$i398 = $1389;
          break;
         } else $dst$03$i$i395 = $1389;
        }
       }
       HEAP16[$dst$0$lcssa$i$i398 >> 1] = 0;
       $1393 = 153599;
       HEAP8[$1393 >> 0] = 0;
       $1394 = HEAP32[$1309 >> 2] | 0;
       HEAP32[$1308 >> 2] = $1394;
       HEAP32[$1311 >> 2] = $1394;
       $$pre$phi48$iZ2D = $1393;
       $2375 = $1385;
       $2376 = $1394;
      } else {
       $1395 = $1332 - $1333 | 0;
       $1397 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii(153608, $1333, $1395, 0) | 0;
       $1399 = ($1395 | 0) > 0;
       L623 : do if ($1399 & ($1397 | 0) != 0) {
        $1401 = HEAP32[38383] | 0;
        $1402 = 153540;
        $i$01$i$i3$i404 = 0;
        while (1) {
         $1403 = $i$01$i$i3$i404 + $1333 | 0;
         if (($1401 | 0) <= ($1403 | 0)) break;
         $1405 = HEAP32[$1402 >> 2] | 0;
         HEAP16[$1397 + ($i$01$i$i3$i404 << 1) >> 1] = HEAP16[$1405 + ($1403 << 1) >> 1] | 0;
         $i$01$i$i3$i404 = $i$01$i$i3$i404 + 1 | 0;
         if (($i$01$i$i3$i404 | 0) >= ($1395 | 0)) {
          $1412 = $1405;
          break L623;
         }
        }
        ___assert_fail(127217, 127226, 806, 127272);
       } else $1412 = HEAP32[38385] | 0; while (0);
       $1411 = $1412 + ($1333 << 1) | 0;
       $1413 = $1411 + ($1395 << 1) | 0;
       $1414 = ($1413 | 0) == 0;
       L631 : do if ($1399 | $1414) if ($1414) {
        $1415 = HEAP16[$1411 >> 1] | 0;
        if (!($1415 << 16 >> 16)) {
         $bytes_count$0$lcssa$i$i27$i = 0;
         break;
        } else {
         $$03$us$i4$i12$i = $1411;
         $1419 = $1415;
         $bytes_count$02$us$i5$i11$i = 0;
        }
        while (1) {
         $$03$us$i4$i12$i = $$03$us$i4$i12$i + 2 | 0;
         if (($1419 & 65535) < 128) $bytes_count$02$us$i$be$i17$i = $bytes_count$02$us$i5$i11$i + 1 | 0; else {
          do if (($1419 & 65535) < 2048) $$0$i$us$i$i15$i = 2; else {
           $1422 = $1419 & 64512;
           if (($1422 | 0) == 56320) {
            $$0$i$us$i$i15$i = 0;
            break;
           }
           $$0$i$us$i$i15$i = ($1422 | 0) == 55296 ? 4 : 3;
          } while (0);
          $bytes_count$02$us$i$be$i17$i = $$0$i$us$i$i15$i + $bytes_count$02$us$i5$i11$i | 0;
         }
         $1419 = HEAP16[$$03$us$i4$i12$i >> 1] | 0;
         if (!($1419 << 16 >> 16)) {
          $bytes_count$0$lcssa$i$i27$i = $bytes_count$02$us$i$be$i17$i;
          break;
         } else $bytes_count$02$us$i5$i11$i = $bytes_count$02$us$i$be$i17$i;
        }
       } else {
        $$03$i$i19$i = $1411;
        $bytes_count$02$i$i20$i = 0;
        while (1) {
         $1429 = HEAP16[$$03$i$i19$i >> 1] | 0;
         if (!($1429 << 16 >> 16)) {
          $bytes_count$0$lcssa$i$i27$i = $bytes_count$02$i$i20$i;
          break L631;
         }
         $$03$i$i19$i = $$03$i$i19$i + 2 | 0;
         if (($1429 & 65535) < 128) $bytes_count$0$be$i$i25$i = $bytes_count$02$i$i20$i + 1 | 0; else {
          do if (($1429 & 65535) < 2048) $$0$i$i$i23$i = 2; else {
           $1436 = $1429 & 64512;
           if (($1436 | 0) == 56320) {
            $$0$i$i$i23$i = 0;
            break;
           }
           $$0$i$i$i23$i = ($1436 | 0) == 55296 ? 4 : 3;
          } while (0);
          $bytes_count$0$be$i$i25$i = $$0$i$i$i23$i + $bytes_count$02$i$i20$i | 0;
         }
         if ($$03$i$i19$i >>> 0 >= $1413 >>> 0) {
          $bytes_count$0$lcssa$i$i27$i = $bytes_count$0$be$i$i25$i;
          break;
         } else $bytes_count$02$i$i20$i = $bytes_count$0$be$i$i25$i;
        }
       } else $bytes_count$0$lcssa$i$i27$i = 0; while (0);
       $1441 = 153568;
       HEAP32[$1441 >> 2] = (HEAP32[$1441 >> 2] | 0) - $bytes_count$0$lcssa$i$i27$i;
       $1445 = (HEAP32[$str$idx$i >> 2] | 0) - $1395 | 0;
       HEAP32[$str$idx$i >> 2] = $1445;
       $1446 = HEAP16[$1413 >> 1] | 0;
       if (!($1446 << 16 >> 16)) $dst$0$lcssa$i32$i = $1411; else {
        $1450 = $1446;
        $dst$03$i29$i = $1411;
        $src$02$i30$i = $1413;
        while (1) {
         $src$02$i30$i = $src$02$i30$i + 2 | 0;
         $1449 = $dst$03$i29$i + 2 | 0;
         HEAP16[$dst$03$i29$i >> 1] = $1450;
         $1450 = HEAP16[$src$02$i30$i >> 1] | 0;
         if (!($1450 << 16 >> 16)) {
          $dst$0$lcssa$i32$i = $1449;
          break;
         } else $dst$03$i29$i = $1449;
        }
       }
       HEAP16[$dst$0$lcssa$i32$i >> 1] = 0;
       $1453 = 153599;
       HEAP8[$1453 >> 0] = 0;
       $1454 = HEAP32[$1311 >> 2] | 0;
       HEAP32[$1308 >> 2] = $1454;
       HEAP32[$1309 >> 2] = $1454;
       $$pre$phi48$iZ2D = $1453;
       $2375 = $1445;
       $2376 = $1454;
      }
      HEAP8[$$pre$phi48$iZ2D >> 0] = 0;
      $1456 = $2375;
      $1495 = $2376;
     }
     $1457 = 153532;
     do if (($1456 + $clipboard_filtered_len$0575 | 0) < (HEAP32[$1457 >> 2] | 0)) {
      L665 : do if (!$1306) {
       $1461 = HEAP16[$1291 >> 1] | 0;
       if (!($1461 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i = 0;
        break;
       } else {
        $$03$us$i40$i = $1291;
        $1465 = $1461;
        $bytes_count$02$us$i41$i = 0;
       }
       while (1) {
        $$03$us$i40$i = $$03$us$i40$i + 2 | 0;
        if (($1465 & 65535) < 128) $bytes_count$02$us$i$be$i = $bytes_count$02$us$i41$i + 1 | 0; else {
         do if (($1465 & 65535) < 2048) $$0$i$us$i$i = 2; else {
          $1468 = $1465 & 64512;
          if (($1468 | 0) == 56320) {
           $$0$i$us$i$i = 0;
           break;
          }
          $$0$i$us$i$i = ($1468 | 0) == 55296 ? 4 : 3;
         } while (0);
         $bytes_count$02$us$i$be$i = $$0$i$us$i$i + $bytes_count$02$us$i41$i | 0;
        }
        $1465 = HEAP16[$$03$us$i40$i >> 1] | 0;
        if (!($1465 << 16 >> 16)) {
         $bytes_count$0$lcssa$i$i = $bytes_count$02$us$i$be$i;
         break;
        } else $bytes_count$02$us$i41$i = $bytes_count$02$us$i$be$i;
       }
      } else {
       $$03$i$i = $1291;
       $bytes_count$02$i$i = 0;
       while (1) {
        $1475 = HEAP16[$$03$i$i >> 1] | 0;
        if (!($1475 << 16 >> 16)) {
         $bytes_count$0$lcssa$i$i = $bytes_count$02$i$i;
         break L665;
        }
        $$03$i$i = $$03$i$i + 2 | 0;
        if (($1475 & 65535) < 128) $bytes_count$0$be$i$i = $bytes_count$02$i$i + 1 | 0; else {
         do if (($1475 & 65535) < 2048) $$0$i$i$i = 2; else {
          $1482 = $1475 & 64512;
          if (($1482 | 0) == 56320) {
           $$0$i$i$i = 0;
           break;
          }
          $$0$i$i$i = ($1482 | 0) == 55296 ? 4 : 3;
         } while (0);
         $bytes_count$0$be$i$i = $$0$i$i$i + $bytes_count$02$i$i | 0;
        }
        if ($$03$i$i >>> 0 >= $1306 >>> 0) {
         $bytes_count$0$lcssa$i$i = $bytes_count$0$be$i$i;
         break;
        } else $bytes_count$02$i$i = $bytes_count$0$be$i$i;
       }
      } while (0);
      $1487 = 153568;
      if (((HEAP32[$1487 >> 2] | 0) + $bytes_count$0$lcssa$i$i | 0) >= (HEAP32[$541 >> 2] | 0)) {
       label = 485;
       break;
      }
      $1492 = 153540;
      $$pre$i$i409 = (HEAP32[$1492 >> 2] | 0) + ($1495 << 1) | 0;
      if (($1456 | 0) == ($1495 | 0)) $$pre$phi2$i$iZ2D = $$pre$i$i409; else {
       _memmove($$pre$i$i409 + ($clipboard_filtered_len$0575 << 1) | 0, $$pre$i$i409 | 0, $1456 - $1495 << 1 | 0) | 0;
       $$pre$phi2$i$iZ2D = $$pre$i$i409;
      }
      _memcpy($$pre$phi2$i$iZ2D | 0, $1291 | 0, $clipboard_filtered_len$0575 << 1 | 0) | 0;
      $1501 = (HEAP32[$str$idx$i >> 2] | 0) + $clipboard_filtered_len$0575 | 0;
      HEAP32[$str$idx$i >> 2] = $1501;
      HEAP32[$1487 >> 2] = (HEAP32[$1487 >> 2] | 0) + $bytes_count$0$lcssa$i$i;
      if ((HEAP32[$1457 >> 2] | 0) > ($1501 | 0)) {
       HEAP16[(HEAP32[$1492 >> 2] | 0) + ($1501 << 1) >> 1] = 0;
       __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii(153608, HEAP32[$1308 >> 2] | 0, 0, $clipboard_filtered_len$0575) | 0;
       HEAP32[$1308 >> 2] = (HEAP32[$1308 >> 2] | 0) + $clipboard_filtered_len$0575;
       HEAP8[153599] = 0;
       break;
      } else ___assert_fail(127217, 127226, 805, 127272);
     } else label = 485; while (0);
     do if ((label | 0) == 485) {
      $1513 = 156794;
      $1514 = HEAP16[$1513 >> 1] | 0;
      if (!($1514 << 16 >> 16)) break;
      HEAP16[$1513 >> 1] = $1514 + -1 << 16 >> 16;
     } while (0);
     HEAP8[156808] = 1;
     if (!$1291) $$pre$i410479 = 146892; else {
      $$pre$i410478 = 146892;
      label = 488;
     }
    } while (0);
    if ((label | 0) == 488) {
     $1519 = $$pre$i410478 + 772 | 0;
     HEAP32[$1519 >> 2] = (HEAP32[$1519 >> 2] | 0) + -1;
     $$pre$i410479 = $$pre$i410478;
    }
    FUNCTION_TABLE_vi[HEAP32[$$pre$i410479 + 180 >> 2] & 255]($1291);
    $enter_pressed$1$ph = 0;
    label = 492;
   } while (0);
   if ((label | 0) == 492) if ($471) {
    $enter_pressed$1$ph483 = $enter_pressed$1$ph;
    label = 493;
   } else $enter_pressed$1$ph482 = $enter_pressed$1$ph;
   if ((label | 0) == 493) {
    $1530 = 153556;
    $1533 = HEAP32[38383] << 2;
    $1534 = 153560;
    $1535 = HEAP32[$1534 >> 2] | 0;
    do if (($1535 | 0) < ($1533 | 0)) {
     if (!$1535) $1541 = 8; else $1541 = (($1535 | 0) / 2 | 0) + $1535 | 0;
     $1542 = ($1541 | 0) > ($1533 | 0) ? $1541 : $1533;
     if (($1535 | 0) >= ($1542 | 0)) break;
     $1544 = 147664;
     HEAP32[$1544 >> 2] = (HEAP32[$1544 >> 2] | 0) + 1;
     $1549 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($1542) | 0;
     $1550 = 153564;
     _memcpy($1549 | 0, HEAP32[$1550 >> 2] | 0, HEAP32[$1530 >> 2] | 0) | 0;
     $1553 = HEAP32[$1550 >> 2] | 0;
     if ($1553 | 0) {
      $1555 = 147664;
      HEAP32[$1555 >> 2] = (HEAP32[$1555 >> 2] | 0) + -1;
     }
     FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($1553);
     HEAP32[$1550 >> 2] = $1549;
     HEAP32[$1534 >> 2] = $1542;
    } while (0);
    HEAP32[$1530 >> 2] = $1533;
    __Z15ImTextStrToUtf8PciPKtS1_(HEAP32[38391] | 0, $1533, HEAP32[38385] | 0, 0) | 0;
    $enter_pressed$1$ph482 = $enter_pressed$1$ph483;
   }
   do if ($flags & 448 | 0) {
    if (!$callback) ___assert_fail(125562, 124187, 7522, 124386);
    L724 : do if ($19) {
     $1568 = HEAP32[36733] | 0;
     do if (($1568 | 0) >= 0) {
      if ($1568 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
      $1572 = +HEAPF32[147840 + ($1568 << 2) >> 2];
      if ($1572 == 0.0) {
       $event_flag$0495 = 64;
       $event_key$0494 = 0;
       break L724;
      }
      $1575 = +HEAPF32[36752];
      if (!($1572 > $1575)) break;
      $1578 = +HEAPF32[36753];
      $1579 = $1572 - $1575;
      $1581 = $1578 * .5;
      $1582 = +_fmodf($1579, $1578) > $1581;
      if ($1582 ^ +_fmodf($1579 - +HEAPF32[36726], $1578) > $1581) {
       $event_flag$0495 = 64;
       $event_key$0494 = 0;
       break L724;
      }
     } while (0);
     if ($15) {
      $1590 = 146892;
      label = 513;
     } else {
      $event_flag$0 = 0;
      $event_key$0 = 19;
      label = 527;
     }
    } else if ($15) {
     $1590 = 146892;
     label = 513;
    } else {
     $event_flag$0 = 0;
     $event_key$0 = 19;
     label = 527;
    } while (0);
    L735 : do if ((label | 0) == 513) {
     $1591 = HEAP32[$1590 + 52 >> 2] | 0;
     do if (($1591 | 0) >= 0) {
      if ($1591 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
      $1595 = +HEAPF32[$1590 + 948 + ($1591 << 2) >> 2];
      if ($1595 == 0.0) {
       $event_flag$0495 = 128;
       $event_key$0494 = 3;
       break L735;
      }
      $1598 = +HEAPF32[$1590 + 116 >> 2];
      if (!($1595 > $1598)) break;
      $1601 = +HEAPF32[$1590 + 120 >> 2];
      $1602 = $1595 - $1598;
      $1604 = $1601 * .5;
      $1605 = +_fmodf($1602, $1601) > $1604;
      if ($1605 ^ +_fmodf($1602 - +HEAPF32[$1590 + 12 >> 2], $1601) > $1604) {
       $event_flag$0495 = 128;
       $event_key$0494 = 3;
       break L735;
      }
     } while (0);
     $1613 = HEAP32[$1590 + 56 >> 2] | 0;
     do if (($1613 | 0) < 0) $$2$i$i = 0; else {
      if ($1613 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
      $1617 = +HEAPF32[$1590 + 948 + ($1613 << 2) >> 2];
      if ($1617 == 0.0) {
       $$2$i$i = 1;
       break;
      }
      $1620 = +HEAPF32[$1590 + 116 >> 2];
      if ($1617 > $1620) {
       $1623 = +HEAPF32[$1590 + 120 >> 2];
       $1624 = $1617 - $1620;
       $1626 = $1623 * .5;
       $1627 = +_fmodf($1624, $1623) > $1626;
       if ($1627 ^ +_fmodf($1624 - +HEAPF32[$1590 + 12 >> 2], $1623) > $1626) {
        $$2$i$i = 1;
        break;
       }
      }
      $$2$i$i = 0;
     } while (0);
     $event_flag$0 = $$2$i$i ? 128 : 0;
     $event_key$0 = $$2$i$i ? 4 : 19;
     label = 527;
    } while (0);
    if ((label | 0) == 527) if (($flags & 256 | 0) == 0 & ($event_key$0 | 0) == 19) break; else {
     $event_flag$0495 = $event_flag$0;
     $event_key$0494 = $event_key$0;
    }
    HEAP32[$tmpcast9$byval_copy >> 2] = $event_flag$0495;
    $1637 = $tmpcast9$byval_copy + 4 | 0;
    HEAP32[$1637 >> 2] = $flags;
    HEAP32[$tmpcast9$byval_copy + 8 >> 2] = $user_data;
    HEAP8[$tmpcast9$byval_copy + 12 >> 0] = ($$lobit ^ 1) & 255 ^ 1;
    HEAP32[$tmpcast9$byval_copy + 16 >> 2] = $event_key$0494;
    $1644 = 153564;
    $1646 = $tmpcast9$byval_copy + 20 | 0;
    HEAP32[$1646 >> 2] = HEAP32[$1644 >> 2];
    $1648 = $tmpcast9$byval_copy + 24 | 0;
    HEAP32[$1648 >> 2] = HEAP32[$541 >> 2];
    $1649 = $tmpcast9$byval_copy + 28 | 0;
    HEAP8[$1649 >> 0] = 0;
    $1651 = HEAP32[38385] | 0;
    $1652 = 153584;
    $1653 = HEAP32[$1652 >> 2] | 0;
    $1654 = $1651 + ($1653 << 1) | 0;
    $1655 = ($1654 | 0) == 0;
    L758 : do if (($1653 | 0) > 0 | $1655) if ($1655) {
     $1657 = HEAP16[$1651 >> 1] | 0;
     if (!($1657 << 16 >> 16)) {
      $bytes_count$0$lcssa$i324 = 0;
      break;
     } else {
      $$03$us$i310610 = $1651;
      $1661 = $1657;
      $bytes_count$02$us$i311611 = 0;
     }
     while (1) {
      $$03$us$i310610 = $$03$us$i310610 + 2 | 0;
      if (($1661 & 65535) < 128) $bytes_count$02$us$i311$be = $bytes_count$02$us$i311611 + 1 | 0; else {
       do if (($1661 & 65535) < 2048) $$0$i$us$i314 = 2; else {
        $1664 = $1661 & 64512;
        if (($1664 | 0) == 56320) {
         $$0$i$us$i314 = 0;
         break;
        }
        $$0$i$us$i314 = ($1664 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$02$us$i311$be = $$0$i$us$i314 + $bytes_count$02$us$i311611 | 0;
      }
      $1661 = HEAP16[$$03$us$i310610 >> 1] | 0;
      if (!($1661 << 16 >> 16)) {
       $bytes_count$0$lcssa$i324 = $bytes_count$02$us$i311$be;
       break;
      } else $bytes_count$02$us$i311611 = $bytes_count$02$us$i311$be;
     }
    } else {
     $$03$i316 = $1651;
     $bytes_count$02$i317 = 0;
     while (1) {
      $1671 = HEAP16[$$03$i316 >> 1] | 0;
      if (!($1671 << 16 >> 16)) {
       $bytes_count$0$lcssa$i324 = $bytes_count$02$i317;
       break L758;
      }
      $$03$i316 = $$03$i316 + 2 | 0;
      if (($1671 & 65535) < 128) $bytes_count$0$be$i322 = $bytes_count$02$i317 + 1 | 0; else {
       do if (($1671 & 65535) < 2048) $$0$i$i320 = 2; else {
        $1678 = $1671 & 64512;
        if (($1678 | 0) == 56320) {
         $$0$i$i320 = 0;
         break;
        }
        $$0$i$i320 = ($1678 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$0$be$i322 = $$0$i$i320 + $bytes_count$02$i317 | 0;
      }
      if ($$03$i316 >>> 0 >= $1654 >>> 0) {
       $bytes_count$0$lcssa$i324 = $bytes_count$0$be$i322;
       break;
      } else $bytes_count$02$i317 = $bytes_count$0$be$i322;
     }
    } else $bytes_count$0$lcssa$i324 = 0; while (0);
    $1683 = $tmpcast9$byval_copy + 32 | 0;
    HEAP32[$1683 >> 2] = $bytes_count$0$lcssa$i324;
    $1684 = 153588;
    $1685 = HEAP32[$1684 >> 2] | 0;
    $1686 = $1651 + ($1685 << 1) | 0;
    $1687 = ($1686 | 0) == 0;
    L784 : do if (($1685 | 0) > 0 | $1687) if ($1687) {
     $1689 = HEAP16[$1651 >> 1] | 0;
     if (!($1689 << 16 >> 16)) {
      $bytes_count$0$lcssa$i306 = 0;
      break;
     } else {
      $$03$us$i292606 = $1651;
      $1693 = $1689;
      $bytes_count$02$us$i293607 = 0;
     }
     while (1) {
      $$03$us$i292606 = $$03$us$i292606 + 2 | 0;
      if (($1693 & 65535) < 128) $bytes_count$02$us$i293$be = $bytes_count$02$us$i293607 + 1 | 0; else {
       do if (($1693 & 65535) < 2048) $$0$i$us$i296 = 2; else {
        $1696 = $1693 & 64512;
        if (($1696 | 0) == 56320) {
         $$0$i$us$i296 = 0;
         break;
        }
        $$0$i$us$i296 = ($1696 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$02$us$i293$be = $$0$i$us$i296 + $bytes_count$02$us$i293607 | 0;
      }
      $1693 = HEAP16[$$03$us$i292606 >> 1] | 0;
      if (!($1693 << 16 >> 16)) {
       $bytes_count$0$lcssa$i306 = $bytes_count$02$us$i293$be;
       break;
      } else $bytes_count$02$us$i293607 = $bytes_count$02$us$i293$be;
     }
    } else {
     $$03$i298 = $1651;
     $bytes_count$02$i299 = 0;
     while (1) {
      $1703 = HEAP16[$$03$i298 >> 1] | 0;
      if (!($1703 << 16 >> 16)) {
       $bytes_count$0$lcssa$i306 = $bytes_count$02$i299;
       break L784;
      }
      $$03$i298 = $$03$i298 + 2 | 0;
      if (($1703 & 65535) < 128) $bytes_count$0$be$i304 = $bytes_count$02$i299 + 1 | 0; else {
       do if (($1703 & 65535) < 2048) $$0$i$i302 = 2; else {
        $1710 = $1703 & 64512;
        if (($1710 | 0) == 56320) {
         $$0$i$i302 = 0;
         break;
        }
        $$0$i$i302 = ($1710 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$0$be$i304 = $$0$i$i302 + $bytes_count$02$i299 | 0;
      }
      if ($$03$i298 >>> 0 >= $1686 >>> 0) {
       $bytes_count$0$lcssa$i306 = $bytes_count$0$be$i304;
       break;
      } else $bytes_count$02$i299 = $bytes_count$0$be$i304;
     }
    } else $bytes_count$0$lcssa$i306 = 0; while (0);
    $1715 = $tmpcast9$byval_copy + 36 | 0;
    HEAP32[$1715 >> 2] = $bytes_count$0$lcssa$i306;
    $1716 = 153592;
    $1717 = HEAP32[$1716 >> 2] | 0;
    $1718 = $1651 + ($1717 << 1) | 0;
    $1719 = ($1718 | 0) == 0;
    L810 : do if (($1717 | 0) > 0 | $1719) if ($1719) {
     $1721 = HEAP16[$1651 >> 1] | 0;
     if (!($1721 << 16 >> 16)) {
      $bytes_count$0$lcssa$i = 0;
      break;
     } else {
      $$03$us$i602 = $1651;
      $1725 = $1721;
      $bytes_count$02$us$i603 = 0;
     }
     while (1) {
      $$03$us$i602 = $$03$us$i602 + 2 | 0;
      if (($1725 & 65535) < 128) $bytes_count$02$us$i$be = $bytes_count$02$us$i603 + 1 | 0; else {
       do if (($1725 & 65535) < 2048) $$0$i$us$i = 2; else {
        $1728 = $1725 & 64512;
        if (($1728 | 0) == 56320) {
         $$0$i$us$i = 0;
         break;
        }
        $$0$i$us$i = ($1728 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$02$us$i$be = $$0$i$us$i + $bytes_count$02$us$i603 | 0;
      }
      $1725 = HEAP16[$$03$us$i602 >> 1] | 0;
      if (!($1725 << 16 >> 16)) {
       $bytes_count$0$lcssa$i = $bytes_count$02$us$i$be;
       break;
      } else $bytes_count$02$us$i603 = $bytes_count$02$us$i$be;
     }
    } else {
     $$03$i = $1651;
     $bytes_count$02$i = 0;
     while (1) {
      $1735 = HEAP16[$$03$i >> 1] | 0;
      if (!($1735 << 16 >> 16)) {
       $bytes_count$0$lcssa$i = $bytes_count$02$i;
       break L810;
      }
      $$03$i = $$03$i + 2 | 0;
      if (($1735 & 65535) < 128) $bytes_count$0$be$i = $bytes_count$02$i + 1 | 0; else {
       do if (($1735 & 65535) < 2048) $$0$i$i = 2; else {
        $1742 = $1735 & 64512;
        if (($1742 | 0) == 56320) {
         $$0$i$i = 0;
         break;
        }
        $$0$i$i = ($1742 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$0$be$i = $$0$i$i + $bytes_count$02$i | 0;
      }
      if ($$03$i >>> 0 >= $1718 >>> 0) {
       $bytes_count$0$lcssa$i = $bytes_count$0$be$i;
       break;
      } else $bytes_count$02$i = $bytes_count$0$be$i;
     }
    } else $bytes_count$0$lcssa$i = 0; while (0);
    $1747 = $tmpcast9$byval_copy + 40 | 0;
    HEAP32[$1747 >> 2] = $bytes_count$0$lcssa$i;
    FUNCTION_TABLE_ii[$callback & 63]($tmpcast9$byval_copy) | 0;
    $1748 = HEAP32[$1646 >> 2] | 0;
    if (($1748 | 0) != (HEAP32[$1644 >> 2] | 0)) ___assert_fail(125577, 124187, 7566, 124386);
    if ((HEAP32[$1648 >> 2] | 0) != (HEAP32[$541 >> 2] | 0)) ___assert_fail(125629, 124187, 7567, 124386);
    if ((HEAP32[$1637 >> 2] | 0) != ($flags | 0)) ___assert_fail(125674, 124187, 7568, 124386);
    $1756 = HEAP32[$1683 >> 2] | 0;
    if (($1756 | 0) != ($bytes_count$0$lcssa$i324 | 0)) {
     $1758 = $1748 + $1756 | 0;
     $1759 = ($1758 | 0) == 0;
     L847 : do if (($1756 | 0) > 0 | $1759) {
      L849 : do if ($1759) {
       if (!(HEAP8[$1748 >> 0] | 0)) {
        $char_count$03$i270 = 0;
        break L847;
       } else {
        $$015$us$i259599 = $1748;
        $char_count$06$us$i258598 = 0;
       }
       while (1) {
        $1763 = __Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $$015$us$i259599, 0) | 0;
        $1764 = HEAP32[$$byval_copy >> 2] | 0;
        if (!$1764) {
         $char_count$0$lcssa2$i268 = $char_count$06$us$i258598;
         break L849;
        }
        $$015$us$i259599 = $$015$us$i259599 + $1763 | 0;
        $$char_count$0$us$i261 = ($1764 >>> 0 < 65536 & 1) + $char_count$06$us$i258598 | 0;
        if (!(HEAP8[$$015$us$i259599 >> 0] | 0)) {
         $char_count$03$i270 = $$char_count$0$us$i261;
         break L847;
        } else $char_count$06$us$i258598 = $$char_count$0$us$i261;
       }
      } else {
       $$015$i264 = $1748;
       $char_count$06$i263 = 0;
       while (1) {
        if (!(HEAP8[$$015$i264 >> 0] | 0)) {
         $char_count$03$i270 = $char_count$06$i263;
         break L847;
        }
        $1773 = __Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $$015$i264, $1758) | 0;
        $1774 = HEAP32[$$byval_copy >> 2] | 0;
        if (!$1774) {
         $char_count$0$lcssa2$i268 = $char_count$06$i263;
         break L849;
        }
        $$015$i264 = $$015$i264 + $1773 | 0;
        $$char_count$0$i266 = ($1774 >>> 0 < 65536 & 1) + $char_count$06$i263 | 0;
        if ($$015$i264 >>> 0 >= $1758 >>> 0) {
         $char_count$03$i270 = $$char_count$0$i266;
         break L847;
        } else $char_count$06$i263 = $$char_count$0$i266;
       }
      } while (0);
      $char_count$03$i270 = $char_count$0$lcssa2$i268;
     } else $char_count$03$i270 = 0; while (0);
     HEAP32[$1652 >> 2] = $char_count$03$i270;
    }
    $1780 = HEAP32[$1715 >> 2] | 0;
    if (($1780 | 0) != ($bytes_count$0$lcssa$i306 | 0)) {
     $1782 = HEAP32[$1646 >> 2] | 0;
     $1783 = $1782 + $1780 | 0;
     $1784 = ($1783 | 0) == 0;
     L863 : do if (($1780 | 0) > 0 | $1784) {
      L865 : do if ($1784) {
       if (!(HEAP8[$1782 >> 0] | 0)) {
        $char_count$03$i238 = 0;
        break L863;
       } else {
        $$015$us$i227595 = $1782;
        $char_count$06$us$i226594 = 0;
       }
       while (1) {
        $1788 = __Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $$015$us$i227595, 0) | 0;
        $1789 = HEAP32[$$byval_copy >> 2] | 0;
        if (!$1789) {
         $char_count$0$lcssa2$i236 = $char_count$06$us$i226594;
         break L865;
        }
        $$015$us$i227595 = $$015$us$i227595 + $1788 | 0;
        $$char_count$0$us$i229 = ($1789 >>> 0 < 65536 & 1) + $char_count$06$us$i226594 | 0;
        if (!(HEAP8[$$015$us$i227595 >> 0] | 0)) {
         $char_count$03$i238 = $$char_count$0$us$i229;
         break L863;
        } else $char_count$06$us$i226594 = $$char_count$0$us$i229;
       }
      } else {
       $$015$i232 = $1782;
       $char_count$06$i231 = 0;
       while (1) {
        if (!(HEAP8[$$015$i232 >> 0] | 0)) {
         $char_count$03$i238 = $char_count$06$i231;
         break L863;
        }
        $1798 = __Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $$015$i232, $1783) | 0;
        $1799 = HEAP32[$$byval_copy >> 2] | 0;
        if (!$1799) {
         $char_count$0$lcssa2$i236 = $char_count$06$i231;
         break L865;
        }
        $$015$i232 = $$015$i232 + $1798 | 0;
        $$char_count$0$i234 = ($1799 >>> 0 < 65536 & 1) + $char_count$06$i231 | 0;
        if ($$015$i232 >>> 0 >= $1783 >>> 0) {
         $char_count$03$i238 = $$char_count$0$i234;
         break L863;
        } else $char_count$06$i231 = $$char_count$0$i234;
       }
      } while (0);
      $char_count$03$i238 = $char_count$0$lcssa2$i236;
     } else $char_count$03$i238 = 0; while (0);
     HEAP32[$1684 >> 2] = $char_count$03$i238;
    }
    $1805 = HEAP32[$1747 >> 2] | 0;
    if (($1805 | 0) != ($bytes_count$0$lcssa$i | 0)) {
     $1807 = HEAP32[$1646 >> 2] | 0;
     $1808 = $1807 + $1805 | 0;
     $1809 = ($1808 | 0) == 0;
     L879 : do if (($1805 | 0) > 0 | $1809) {
      L881 : do if ($1809) {
       if (!(HEAP8[$1807 >> 0] | 0)) {
        $char_count$03$i = 0;
        break L879;
       } else {
        $$015$us$i592 = $1807;
        $char_count$06$us$i591 = 0;
       }
       while (1) {
        $1813 = __Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $$015$us$i592, 0) | 0;
        $1814 = HEAP32[$$byval_copy >> 2] | 0;
        if (!$1814) {
         $char_count$0$lcssa2$i = $char_count$06$us$i591;
         break L881;
        }
        $$015$us$i592 = $$015$us$i592 + $1813 | 0;
        $$char_count$0$us$i = ($1814 >>> 0 < 65536 & 1) + $char_count$06$us$i591 | 0;
        if (!(HEAP8[$$015$us$i592 >> 0] | 0)) {
         $char_count$03$i = $$char_count$0$us$i;
         break L879;
        } else $char_count$06$us$i591 = $$char_count$0$us$i;
       }
      } else {
       $$015$i = $1807;
       $char_count$06$i = 0;
       while (1) {
        if (!(HEAP8[$$015$i >> 0] | 0)) {
         $char_count$03$i = $char_count$06$i;
         break L879;
        }
        $1823 = __Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $$015$i, $1808) | 0;
        $1824 = HEAP32[$$byval_copy >> 2] | 0;
        if (!$1824) {
         $char_count$0$lcssa2$i = $char_count$06$i;
         break L881;
        }
        $$015$i = $$015$i + $1823 | 0;
        $$char_count$0$i = ($1824 >>> 0 < 65536 & 1) + $char_count$06$i | 0;
        if ($$015$i >>> 0 >= $1808 >>> 0) {
         $char_count$03$i = $$char_count$0$i;
         break L879;
        } else $char_count$06$i = $$char_count$0$i;
       }
      } while (0);
      $char_count$03$i = $char_count$0$lcssa2$i;
     } else $char_count$03$i = 0; while (0);
     HEAP32[$1716 >> 2] = $char_count$03$i;
    }
    if (HEAP8[$1649 >> 0] | 0) {
     $1835 = $1651 + (HEAP32[38383] << 1) + -2 | 0;
     L895 : do if ($1835 >>> 0 > $1651 >>> 0) {
      $$028$us$i = HEAP32[$1644 >> 2] | 0;
      $buf_out$07$us$i = $1651;
      while (1) {
       if (!(HEAP8[$$028$us$i >> 0] | 0)) {
        $buf_out$04$i = $buf_out$07$us$i;
        break L895;
       }
       $$028$us$i = $$028$us$i + (__Z18ImTextCharFromUtf8PjPKcS1_($$byval_copy, $$028$us$i, 0) | 0) | 0;
       $1842 = HEAP32[$$byval_copy >> 2] | 0;
       if (!$1842) {
        $buf_out$07$us$i$lcssa872 = $buf_out$07$us$i;
        break;
       }
       if ($1842 >>> 0 < 65536) {
        HEAP16[$buf_out$07$us$i >> 1] = $1842;
        $buf_out$2$ph$us$i = $buf_out$07$us$i + 2 | 0;
       } else $buf_out$2$ph$us$i = $buf_out$07$us$i;
       if ($buf_out$2$ph$us$i >>> 0 >= $1835 >>> 0) {
        $buf_out$04$i = $buf_out$2$ph$us$i;
        break L895;
       } else $buf_out$07$us$i = $buf_out$2$ph$us$i;
      }
      $buf_out$04$i = $buf_out$07$us$i$lcssa872;
     } else $buf_out$04$i = $1651; while (0);
     HEAP16[$buf_out$04$i >> 1] = 0;
     HEAP32[38393] = $buf_out$04$i - $1651 >> 1;
     HEAP32[38392] = _strlen(HEAP32[$1644 >> 2] | 0) | 0;
     HEAPF32[39201] = -.30000001192092896;
    }
   } while (0);
   if (!$471) {
    $enter_pressed$2$off0 = $enter_pressed$1$ph482;
    $value_changed$1$off0 = 0;
    break;
   }
   $1858 = HEAP32[38391] | 0;
   if (!(_strcmp($1858, $buf) | 0)) {
    $enter_pressed$2$off0 = $enter_pressed$1$ph482;
    $value_changed$1$off0 = 0;
    break;
   }
   HEAP32[$vararg_buffer10 >> 2] = $1858;
   __Z14ImFormatStringPciPKcz($buf, $buf_size, 124291, $vararg_buffer10) | 0;
   $enter_pressed$2$off0 = $enter_pressed$1$ph482;
   $value_changed$1$off0 = 1;
  } else {
   $enter_pressed$2$off0 = 0;
   $value_changed$1$off0 = 0;
  } while (0);
  if ($35) {
   $$idx127$val = $145;
   $2366 = $129;
  } else {
   $1861 = $frame_bb;
   $1863 = HEAP32[$1861 >> 2] | 0;
   $1866 = HEAP32[$1861 + 4 >> 2] | 0;
   $1867 = $1;
   HEAP32[$1867 >> 2] = $1863;
   HEAP32[$1867 + 4 >> 2] = $1866;
   $1871 = $141;
   $1873 = HEAP32[$1871 >> 2] | 0;
   $1876 = HEAP32[$1871 + 4 >> 2] | 0;
   $1877 = $2;
   HEAP32[$1877 >> 2] = $1873;
   HEAP32[$1877 + 4 >> 2] = $1876;
   $1882 = +HEAPF32[38038];
   $1884 = +HEAPF32[38039];
   $1886 = +HEAPF32[38040];
   $1891 = +HEAPF32[38041] * +HEAPF32[37984];
   $1916 = +HEAPF32[37994];
   HEAP32[$tmpcast9$byval_copy >> 2] = HEAP32[$1 >> 2];
   HEAP32[$tmpcast9$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   __ZN5ImGui11RenderFrameE6ImVec2S0_jbf($tmpcast9$byval_copy, $$byval_copy, ($1884 < 0.0 ? 0 : ~~(($1884 > 1.0 ? 1.0 : $1884) * 255.0 + .5) << 8) | ($1882 < 0.0 ? 0 : ~~(($1882 > 1.0 ? 1.0 : $1882) * 255.0 + .5)) | ($1886 < 0.0 ? 0 : ~~(($1886 > 1.0 ? 1.0 : $1886) * 255.0 + .5) << 16) | ($1891 < 0.0 ? 0 : ~~(($1891 > 1.0 ? 1.0 : $1891) * 255.0 + .5) << 24), 1, $1916);
   $1917 = (HEAP32[tempDoublePtr >> 2] = $1863, +HEAPF32[tempDoublePtr >> 2]);
   $$idx127$val = $1917;
   $2366 = (HEAP32[tempDoublePtr >> 2] = $1873, +HEAPF32[tempDoublePtr >> 2]);
  }
  $1919 = $frame_bb + 4 | 0;
  $1920 = (HEAP32[tempDoublePtr >> 2] = $size$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]);
  HEAPF32[$tmpcast9$byval_copy >> 2] = $$idx127$val;
  $1923 = $tmpcast9$byval_copy + 4 | 0;
  HEAP32[$1923 >> 2] = $136;
  $1924 = $tmpcast9$byval_copy + 8 | 0;
  HEAPF32[$1924 >> 2] = $1920 + $$idx127$val;
  $1925 = $tmpcast9$byval_copy + 12 | 0;
  HEAPF32[$1925 >> 2] = $128 + $146;
  if ($35) {
   $1927 = $draw_window$0 + 164 | 0;
   $1932 = HEAP32[$1927 + 4 >> 2] | 0;
   $1933 = $render_pos;
   HEAP32[$1933 >> 2] = HEAP32[$1927 >> 2];
   HEAP32[$1933 + 4 >> 2] = $1932;
  } else {
   $1938 = $146 + +HEAPF32[$89 >> 2];
   HEAPF32[$render_pos >> 2] = $$idx127$val + +HEAPF32[$88 >> 2];
   HEAPF32[$render_pos + 4 >> 2] = $1938;
  }
  $1940 = HEAP32[$281 >> 2] | 0;
  $1941 = HEAP32[$id >> 2] | 0;
  do if (($1940 | 0) == ($1941 | 0)) label = 647; else {
   if (!((HEAP32[$272 >> 2] | 0) != ($1941 | 0) | $35 ^ 1)) {
    $1945 = HEAP32[$draw_window$0 + 424 >> 2] | 0;
    if (($1945 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
    $1952 = __Z6ImHashPKvij(124961, 0, HEAP32[(HEAP32[$draw_window$0 + 432 >> 2] | 0) + ($1945 + -1 << 2) >> 2] | 0) | 0;
    if ((HEAP32[38211] | 0) == ($1952 | 0)) HEAP8[152852] = 1;
    if (($1940 | 0) == ($1952 | 0)) {
     label = 647;
     break;
    }
   }
   if ($35) {
    $line_count$0$ph$i = 0;
    $s$0$ph$i = $buf;
    L930 : while (1) {
     $s$0$i = $s$0$ph$i;
     L932 : while (1) {
      $2305 = $s$0$i + 1 | 0;
      switch (HEAP8[$s$0$i >> 0] | 0) {
      case 0:
       {
        $line_count$0$ph$i$lcssa = $line_count$0$ph$i;
        $s$0$i$lcssa = $s$0$i;
        break L930;
        break;
       }
      case 10:
       {
        $$lcssa871 = $2305;
        break L932;
        break;
       }
      default:
       $s$0$i = $2305;
      }
     }
     $line_count$0$ph$i = $line_count$0$ph$i + 1 | 0;
     $s$0$ph$i = $$lcssa871;
    }
    $2311 = +HEAPF32[38187];
    $2352 = $2311;
    $buf_end7$0 = $s$0$i$lcssa;
    $text_size$sroa$0$1 = $size$sroa$0$0;
    $text_size$sroa$6$1 = (HEAPF32[tempDoublePtr >> 2] = +($line_count$0$ph$i$lcssa + 1 | 0) * $2311, HEAP32[tempDoublePtr >> 2] | 0);
   } else {
    $2352 = +HEAPF32[38187];
    $buf_end7$0 = 0;
    $text_size$sroa$0$1 = 0;
    $text_size$sroa$6$1 = 0;
   }
   $2319 = +HEAPF32[38014];
   $2321 = +HEAPF32[38015];
   $2323 = +HEAPF32[38016];
   $2328 = +HEAPF32[38017] * +HEAPF32[37984];
   __ZN10ImDrawList7AddTextEPK6ImFontfRK6ImVec2jPKcS7_fPK6ImVec4(HEAP32[$draw_window$0 + 572 >> 2] | 0, HEAP32[38186] | 0, $2352, $render_pos, ($2321 < 0.0 ? 0 : ~~(($2321 > 1.0 ? 1.0 : $2321) * 255.0 + .5) << 8) | ($2319 < 0.0 ? 0 : ~~(($2319 > 1.0 ? 1.0 : $2319) * 255.0 + .5)) | ($2323 < 0.0 ? 0 : ~~(($2323 > 1.0 ? 1.0 : $2323) * 255.0 + .5) << 16) | ($2328 < 0.0 ? 0 : ~~(($2328 > 1.0 ? 1.0 : $2328) * 255.0 + .5) << 24), $buf, $buf_end7$0, 0.0, $35 ? 0 : $tmpcast9$byval_copy);
   $text_size$sroa$0$2 = $text_size$sroa$0$1;
   $text_size$sroa$6$2 = $text_size$sroa$6$1;
  } while (0);
  do if ((label | 0) == 647) {
   $1960 = 156804;
   HEAPF32[$1960 >> 2] = +HEAPF32[36726] + +HEAPF32[$1960 >> 2];
   $1964 = HEAP32[38385] | 0;
   $1967 = $1964 + (HEAP32[38396] << 1) | 0;
   $1969 = HEAP32[38397] | 0;
   $1971 = HEAP32[38398] | 0;
   $1972 = ($1969 | 0) == ($1971 | 0);
   if ($1972) {
    $searches_input_ptr$sroa$6$0 = 0;
    $searches_remaining$0 = 1;
    $searches_result_line_number$sroa$8$0 = -999;
   } else {
    $searches_input_ptr$sroa$6$0 = $1964 + ((($1969 | 0) < ($1971 | 0) ? $1969 : $1971) << 1) | 0;
    $searches_remaining$0 = 2;
    $searches_result_line_number$sroa$8$0 = -1;
   }
   $line_count$0 = 0;
   $s6$0 = $1964;
   $searches_remaining$1 = $searches_remaining$0 + ($16 >>> 20) | 0;
   $searches_result_line_number$sroa$0$0 = -1;
   $searches_result_line_number$sroa$8$1 = $searches_result_line_number$sroa$8$0;
   L943 : while (1) {
    L945 : do switch (HEAP16[$s6$0 >> 1] | 0) {
    case 0:
     {
      $line_count$2 = $line_count$0;
      $searches_result_line_number$sroa$0$3 = $searches_result_line_number$sroa$0$0;
      $searches_result_line_number$sroa$8$3 = $searches_result_line_number$sroa$8$1;
      break L943;
      break;
     }
    case 10:
     {
      $1978 = $line_count$0 + 1 | 0;
      if (($searches_result_line_number$sroa$0$0 | 0) != -1 | $s6$0 >>> 0 < $1967 >>> 0) {
       $searches_remaining$2 = $searches_remaining$1;
       $searches_result_line_number$sroa$0$1 = $searches_result_line_number$sroa$0$0;
      } else if (($searches_remaining$1 | 0) < 2) {
       $line_count$2 = $1978;
       $searches_result_line_number$sroa$0$3 = $1978;
       $searches_result_line_number$sroa$8$3 = $searches_result_line_number$sroa$8$1;
       break L943;
      } else {
       $searches_remaining$2 = $searches_remaining$1 + -1 | 0;
       $searches_result_line_number$sroa$0$1 = $1978;
      }
      if (($searches_result_line_number$sroa$8$1 | 0) != -1 | $s6$0 >>> 0 < $searches_input_ptr$sroa$6$0 >>> 0) {
       $line_count$1 = $1978;
       $searches_remaining$3 = $searches_remaining$2;
       $searches_result_line_number$sroa$0$2 = $searches_result_line_number$sroa$0$1;
       $searches_result_line_number$sroa$8$2 = $searches_result_line_number$sroa$8$1;
       break L945;
      }
      if (($searches_remaining$2 | 0) < 2) {
       $line_count$2 = $1978;
       $searches_result_line_number$sroa$0$3 = $searches_result_line_number$sroa$0$1;
       $searches_result_line_number$sroa$8$3 = $1978;
       break L943;
      } else {
       $line_count$1 = $1978;
       $searches_remaining$3 = $searches_remaining$2 + -1 | 0;
       $searches_result_line_number$sroa$0$2 = $searches_result_line_number$sroa$0$1;
       $searches_result_line_number$sroa$8$2 = $1978;
      }
      break;
     }
    default:
     {
      $line_count$1 = $line_count$0;
      $searches_remaining$3 = $searches_remaining$1;
      $searches_result_line_number$sroa$0$2 = $searches_result_line_number$sroa$0$0;
      $searches_result_line_number$sroa$8$2 = $searches_result_line_number$sroa$8$1;
     }
    } while (0);
    $line_count$0 = $line_count$1;
    $s6$0 = $s6$0 + 2 | 0;
    $searches_remaining$1 = $searches_remaining$3;
    $searches_result_line_number$sroa$0$0 = $searches_result_line_number$sroa$0$2;
    $searches_result_line_number$sroa$8$1 = $searches_result_line_number$sroa$8$2;
   }
   $1988 = $line_count$2 + 1 | 0;
   $$searches_result_line_number$sroa$0$3 = ($searches_result_line_number$sroa$0$3 | 0) == -1 ? $1988 : $searches_result_line_number$sroa$0$3;
   $searches_result_line_number$sroa$8$4 = ($searches_result_line_number$sroa$8$3 | 0) == -1 ? $1988 : $searches_result_line_number$sroa$8$3;
   $$0$i201 = $1967;
   while (1) {
    if ($$0$i201 >>> 0 <= $1964 >>> 0) {
     $$0$i201$lcssa = $$0$i201;
     break;
    }
    $1992 = $$0$i201 + -2 | 0;
    if ((HEAP16[$1992 >> 1] | 0) == 10) {
     $$0$i201$lcssa = $$0$i201;
     break;
    } else $$0$i201 = $1992;
   }
   $1996 = HEAP32[38186] | 0;
   $2000 = +HEAPF32[38187] / +HEAPF32[$1996 >> 2];
   $2001 = $1996 + 60 | 0;
   $2002 = $1996 + 68 | 0;
   $2003 = $1996 + 56 | 0;
   $$ph22$i193 = 0.0;
   $$sroa$0450$0 = 0;
   $s$0$ph$ph$i194 = $$0$i201$lcssa;
   L957 : while (1) {
    $line_width$0$ph$i185 = 0.0;
    $s$0$ph$i184 = $s$0$ph$ph$i194;
    L959 : while (1) {
     $s$0$i187 = $s$0$ph$i184;
     L961 : while (1) {
      if ($s$0$i187 >>> 0 >= $1967 >>> 0) {
       $$ph22$i193$lcssa = $$ph22$i193;
       $$sroa$0450$0$lcssa = $$sroa$0450$0;
       $line_width$0$ph$i185$lcssa = $line_width$0$ph$i185;
       break L957;
      }
      $2005 = $s$0$i187 + 2 | 0;
      $2006 = HEAP16[$s$0$i187 >> 1] | 0;
      switch ($2006 << 16 >> 16) {
      case 10:
       {
        $$lcssa865 = $2005;
        $line_width$0$ph$i185$lcssa868 = $line_width$0$ph$i185;
        break L959;
        break;
       }
      case 13:
       {
        $s$0$i187 = $2005;
        break;
       }
      default:
       {
        $$lcssa864 = $2005;
        $$lcssa866 = $2006;
        break L961;
       }
      }
     }
     $2007 = $$lcssa866 & 65535;
     if (($2007 | 0) < (HEAP32[$2001 >> 2] | 0)) $$in$i$i190 = (HEAP32[$2002 >> 2] | 0) + ($2007 << 2) | 0; else $$in$i$i190 = $2003;
     $line_width$0$ph$i185 = $line_width$0$ph$i185 + $2000 * +HEAPF32[$$in$i$i190 >> 2];
     $s$0$ph$i184 = $$lcssa864;
    }
    $2016 = $$ph22$i193 >= $line_width$0$ph$i185$lcssa868 ? $$ph22$i193 : $line_width$0$ph$i185$lcssa868;
    $$ph22$i193 = $2016;
    $$sroa$0450$0 = (HEAPF32[tempDoublePtr >> 2] = $2016, HEAP32[tempDoublePtr >> 2] | 0);
    $s$0$ph$ph$i194 = $$lcssa865;
   }
   $$sroa$0450$1 = $$ph22$i193$lcssa < $line_width$0$ph$i185$lcssa ? (HEAPF32[tempDoublePtr >> 2] = $line_width$0$ph$i185$lcssa, HEAP32[tempDoublePtr >> 2] | 0) : $$sroa$0450$0$lcssa;
   $2021 = 152748;
   $2022 = +HEAPF32[$2021 >> 2];
   $2023 = +($$searches_result_line_number$sroa$0$3 | 0) * $2022;
   if (($searches_result_line_number$sroa$8$4 | 0) > -1) {
    $$0$i = $searches_input_ptr$sroa$6$0;
    while (1) {
     if ($$0$i >>> 0 <= $1964 >>> 0) {
      $$ph22$i = 0.0;
      $$sroa$0448$0 = 0;
      $s$0$ph$ph$i = $$0$i;
      break;
     }
     $2026 = $$0$i + -2 | 0;
     if ((HEAP16[$2026 >> 1] | 0) == 10) {
      $$ph22$i = 0.0;
      $$sroa$0448$0 = 0;
      $s$0$ph$ph$i = $$0$i;
      break;
     } else $$0$i = $2026;
    }
    L974 : while (1) {
     $line_width$0$ph$i = 0.0;
     $s$0$ph$i175 = $s$0$ph$ph$i;
     L976 : while (1) {
      $s$0$i177 = $s$0$ph$i175;
      L978 : while (1) {
       if ($s$0$i177 >>> 0 >= $searches_input_ptr$sroa$6$0 >>> 0) {
        $$ph22$i$lcssa = $$ph22$i;
        $$sroa$0448$0$lcssa = $$sroa$0448$0;
        $line_width$0$ph$i$lcssa = $line_width$0$ph$i;
        break L974;
       }
       $2030 = $s$0$i177 + 2 | 0;
       $2031 = HEAP16[$s$0$i177 >> 1] | 0;
       switch ($2031 << 16 >> 16) {
       case 10:
        {
         $$lcssa860 = $2030;
         $line_width$0$ph$i$lcssa863 = $line_width$0$ph$i;
         break L976;
         break;
        }
       case 13:
        {
         $s$0$i177 = $2030;
         break;
        }
       default:
        {
         $$lcssa859 = $2030;
         $$lcssa861 = $2031;
         break L978;
        }
       }
      }
      $2032 = $$lcssa861 & 65535;
      if (($2032 | 0) < (HEAP32[$2001 >> 2] | 0)) $$in$i$i = (HEAP32[$2002 >> 2] | 0) + ($2032 << 2) | 0; else $$in$i$i = $2003;
      $line_width$0$ph$i = $line_width$0$ph$i + $2000 * +HEAPF32[$$in$i$i >> 2];
      $s$0$ph$i175 = $$lcssa859;
     }
     $2041 = $$ph22$i >= $line_width$0$ph$i$lcssa863 ? $$ph22$i : $line_width$0$ph$i$lcssa863;
     $$ph22$i = $2041;
     $$sroa$0448$0 = (HEAPF32[tempDoublePtr >> 2] = $2041, HEAP32[tempDoublePtr >> 2] | 0);
     $s$0$ph$ph$i = $$lcssa860;
    }
    $select_start_offset$sroa$0$0 = (HEAP32[tempDoublePtr >> 2] = $$ph22$i$lcssa < $line_width$0$ph$i$lcssa ? (HEAPF32[tempDoublePtr >> 2] = $line_width$0$ph$i$lcssa, HEAP32[tempDoublePtr >> 2] | 0) : $$sroa$0448$0$lcssa, +HEAPF32[tempDoublePtr >> 2]);
    $select_start_offset$sroa$5$0 = +($searches_result_line_number$sroa$8$4 | 0) * $2022;
   } else {
    $select_start_offset$sroa$0$0 = 0.0;
    $select_start_offset$sroa$5$0 = 0.0;
   }
   if ($35) {
    $text_size$sroa$0$0 = $size$sroa$0$0;
    $text_size$sroa$6$0 = (HEAPF32[tempDoublePtr >> 2] = +($1988 | 0) * $2022, HEAP32[tempDoublePtr >> 2] | 0);
   } else {
    $text_size$sroa$0$0 = 0;
    $text_size$sroa$6$0 = 0;
   }
   $2050 = 156808;
   do if (!(HEAP8[$2050 >> 0] | 0)) $2135 = +HEAPF32[38395]; else {
    do if (!($flags & 4096)) {
     $2055 = $1920 * .25;
     $2056 = (HEAP32[tempDoublePtr >> 2] = $$sroa$0450$1, +HEAPF32[tempDoublePtr >> 2]);
     $2057 = 153580;
     $2058 = +HEAPF32[$2057 >> 2];
     if ($2056 < $2058) {
      $2060 = $2056 - $2055;
      $2064 = +(~~($2060 <= 0.0 ? 0.0 : $2060) | 0);
      HEAPF32[$2057 >> 2] = $2064;
      $2377 = $2064;
      break;
     }
     $2065 = $2056 - $1920;
     if (!($2065 >= $2058)) {
      $2377 = $2058;
      break;
     }
     $2069 = +(~~($2055 + $2065) | 0);
     HEAPF32[$2057 >> 2] = $2069;
     $2377 = $2069;
    } else {
     HEAPF32[38395] = 0.0;
     $2377 = 0.0;
    } while (0);
    if (!$35) {
     $2135 = $2377;
     break;
    }
    $2071 = $draw_window$0 + 76 | 0;
    $2072 = +HEAPF32[$2071 >> 2];
    $2073 = $2023 - $2022;
    do if ($2073 < $2072) $scroll_y$0 = $2073 <= 0.0 ? 0.0 : $2073; else {
     $2077 = $2023 - $128;
     if (!($2077 >= $2072)) {
      $scroll_y$0 = $2072;
      break;
     }
     $scroll_y$0 = $2077;
    } while (0);
    $2080 = $draw_window$0 + 168 | 0;
    $2082 = +HEAPF32[$2080 >> 2] + ($2072 - $scroll_y$0);
    HEAPF32[$2080 >> 2] = $2082;
    HEAPF32[$2071 >> 2] = $scroll_y$0;
    HEAPF32[$render_pos + 4 >> 2] = $2082;
    $2135 = $2377;
   } while (0);
   HEAP8[$2050 >> 0] = 0;
   L1009 : do if ($1972) $2248 = $2022; else {
    $2085 = ($1969 | 0) < ($1971 | 0) ? $1969 : $1971;
    $2087 = ($1969 | 0) >= ($1971 | 0) ? $1969 : $1971;
    $2088 = $1964 + ($2087 << 1) | 0;
    $2089 = $35 ? 0.0 : -1.0;
    $2090 = $35 ? 0.0 : 2.0;
    $2092 = +HEAPF32[38174];
    $2094 = +HEAPF32[38175];
    $2096 = +HEAPF32[38176];
    $2101 = +HEAPF32[38177] * +HEAPF32[37984];
    $2124 = ($2094 < 0.0 ? 0 : ~~(($2094 > 1.0 ? 1.0 : $2094) * 255.0 + .5) << 8) | ($2092 < 0.0 ? 0 : ~~(($2092 > 1.0 ? 1.0 : $2092) * 255.0 + .5)) | ($2096 < 0.0 ? 0 : ~~(($2096 > 1.0 ? 1.0 : $2096) * 255.0 + .5) << 16) | ($2101 < 0.0 ? 0 : ~~(($2101 > 1.0 ? 1.0 : $2101) * 255.0 + .5) << 24);
    if (($2085 | 0) >= ($2087 | 0)) {
     $2248 = $2022;
     break;
    }
    $tmpcast16$idx124$val = +HEAPF32[$render_pos >> 2];
    $2129 = $$byval_copy + 4 | 0;
    $2130 = $$byval_copy + 8 | 0;
    $2131 = $$byval_copy + 12 | 0;
    $2132 = $$byval_copy + 8 | 0;
    $2133 = $draw_window$0 + 572 | 0;
    $2134 = 152744;
    $$pn = $select_start_offset$sroa$0$0 + $tmpcast16$idx124$val;
    $2138 = $2022;
    $2378 = $tmpcast16$idx124$val;
    $p$0586 = $1964 + ($2085 << 1) | 0;
    $rect_pos$sroa$6$0587 = $select_start_offset$sroa$5$0 + +HEAPF32[$render_pos + 4 >> 2];
    while (1) {
     $rect_pos$sroa$0$0589 = $$pn - $2135;
     $2136 = +HEAPF32[$1925 >> 2];
     if ($rect_pos$sroa$6$0587 > $2136 + $2138) {
      $2248 = $2138;
      break L1009;
     }
     $2140 = +HEAPF32[$1923 >> 2];
     L1015 : do if ($rect_pos$sroa$6$0587 < $2140) {
      $p$1 = $p$0586;
      while (1) {
       if ($p$1 >>> 0 >= $2088 >>> 0) {
        $2203 = $2138;
        $2379 = $2378;
        $p$2 = $p$1;
        break L1015;
       }
       $2143 = $p$1 + 2 | 0;
       if ((HEAP16[$p$1 >> 1] | 0) == 10) {
        $2203 = $2138;
        $2379 = $2378;
        $p$2 = $2143;
        break;
       } else $p$1 = $2143;
      }
     } else {
      $2147 = HEAP32[38186] | 0;
      $2151 = +HEAPF32[38187] / +HEAPF32[$2147 >> 2];
      $2152 = $2147 + 60 | 0;
      $2153 = $2147 + 68 | 0;
      $2154 = $2147 + 56 | 0;
      $line_width$0$ph$us$i = 0.0;
      $s$0$ph$us$i = $p$0586;
      L1020 : while (1) {
       $s$0$us$i = $s$0$ph$us$i;
       L1022 : while (1) {
        if ($s$0$us$i >>> 0 >= $2088 >>> 0) {
         $line_width$2$i = $line_width$0$ph$us$i;
         $rect_size$sroa$0$0 = 0.0;
         $s$1$i = $s$0$us$i;
         break L1020;
        }
        $2155 = $s$0$us$i + 2 | 0;
        $2156 = HEAP16[$s$0$us$i >> 1] | 0;
        switch ($2156 << 16 >> 16) {
        case 10:
         {
          $$lcssa855 = $2155;
          $line_width$0$ph$us$i$lcssa858 = $line_width$0$ph$us$i;
          label = 706;
          break L1020;
          break;
         }
        case 13:
         {
          $s$0$us$i = $2155;
          break;
         }
        default:
         {
          $$lcssa = $2155;
          $$lcssa856 = $2156;
          break L1022;
         }
        }
       }
       $2159 = $$lcssa856 & 65535;
       if (($2159 | 0) < (HEAP32[$2152 >> 2] | 0)) $$in$i$us$i = (HEAP32[$2153 >> 2] | 0) + ($2159 << 2) | 0; else $$in$i$us$i = $2154;
       $line_width$0$ph$us$i = $line_width$0$ph$us$i + $2151 * +HEAPF32[$$in$i$us$i >> 2];
       $s$0$ph$us$i = $$lcssa;
      }
      if ((label | 0) == 706) {
       label = 0;
       $line_width$2$i = 0.0;
       $rect_size$sroa$0$0 = $line_width$0$ph$us$i$lcssa858 <= 0.0 ? 0.0 : $line_width$0$ph$us$i$lcssa858;
       $s$1$i = $$lcssa855;
      }
      $rect_size$sroa$0$1 = $rect_size$sroa$0$0 < $line_width$2$i ? $line_width$2$i : $rect_size$sroa$0$0;
      if (!($rect_size$sroa$0$1 <= 0.0)) $rect_size$sroa$0$2 = $rect_size$sroa$0$1; else {
       $2170 = HEAP32[$2134 >> 2] | 0;
       if ((HEAP32[$2170 + 60 >> 2] | 0) > 32) $$in$i = (HEAP32[$2170 + 68 >> 2] | 0) + 128 | 0; else $$in$i = $2170 + 56 | 0;
       $rect_size$sroa$0$2 = +(~~(+HEAPF32[$$in$i >> 2] * .5) | 0);
      }
      $2183 = $rect_pos$sroa$0$0589 + 0.0;
      $2184 = $rect_pos$sroa$6$0587 + ($2089 - $2138);
      $2185 = $rect_pos$sroa$0$0589 + $rect_size$sroa$0$2;
      $2186 = $2090 + $rect_pos$sroa$6$0587;
      HEAPF32[$$byval_copy >> 2] = $2183;
      HEAPF32[$2129 >> 2] = $2184;
      HEAPF32[$2130 >> 2] = $2185;
      HEAPF32[$2131 >> 2] = $2186;
      $2187 = +HEAPF32[$tmpcast9$byval_copy >> 2];
      $2188 = +HEAPF32[$1924 >> 2];
      if ($2183 < $2187) {
       HEAPF32[$$byval_copy >> 2] = $2187;
       $2200 = $2187;
      } else $2200 = $2183;
      if ($2184 < $2140) {
       HEAPF32[$2129 >> 2] = $2140;
       $2196 = $2140;
      } else $2196 = $2184;
      if ($2185 > $2188) {
       HEAPF32[$2132 >> 2] = $2188;
       $2198 = $2188;
      } else $2198 = $2185;
      if ($2186 > $2136) {
       HEAPF32[$2131 >> 2] = $2136;
       $2194 = $2136;
      } else $2194 = $2186;
      do if ($2140 < $2194) {
       if (!($2136 > $2196 & $2187 < $2198 & $2188 > $2200)) {
        $$pre682 = $2378;
        break;
       }
       __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi(HEAP32[$2133 >> 2] | 0, $$byval_copy, $2130, $2124, 0.0, 15);
       $$pre682 = +HEAPF32[$render_pos >> 2];
      } else $$pre682 = $2378; while (0);
      $2203 = +HEAPF32[$2021 >> 2];
      $2379 = $$pre682;
      $p$2 = $s$1$i;
     } while (0);
     if ($p$2 >>> 0 < $2088 >>> 0) {
      $$pn = $2379;
      $2138 = $2203;
      $2378 = $2379;
      $p$0586 = $p$2;
      $rect_pos$sroa$6$0587 = $rect_pos$sroa$6$0587 + $2203;
     } else {
      $2248 = $2203;
      break;
     }
    }
   } while (0);
   $2205 = $draw_window$0 + 572 | 0;
   $2206 = HEAP32[$2205 >> 2] | 0;
   $2208 = HEAP32[38186] | 0;
   $tmpcast16$idx97 = $render_pos + 4 | 0;
   $tmpcast16$idx97$val517 = HEAP32[$tmpcast16$idx97 >> 2] | 0;
   HEAPF32[$3 >> 2] = +HEAPF32[$render_pos >> 2] - $2135;
   HEAP32[$3 + 4 >> 2] = $tmpcast16$idx97$val517;
   $2212 = +HEAPF32[38014];
   $2214 = +HEAPF32[38015];
   $2216 = +HEAPF32[38016];
   $2221 = +HEAPF32[38017] * +HEAPF32[37984];
   __ZN10ImDrawList7AddTextEPK6ImFontfRK6ImVec2jPKcS7_fPK6ImVec4($2206, $2208, $2248, $3, ($2214 < 0.0 ? 0 : ~~(($2214 > 1.0 ? 1.0 : $2214) * 255.0 + .5) << 8) | ($2212 < 0.0 ? 0 : ~~(($2212 > 1.0 ? 1.0 : $2212) * 255.0 + .5)) | ($2216 < 0.0 ? 0 : ~~(($2216 > 1.0 ? 1.0 : $2216) * 255.0 + .5) << 16) | ($2221 < 0.0 ? 0 : ~~(($2221 > 1.0 ? 1.0 : $2221) * 255.0 + .5) << 24), $buf, $buf + (HEAP32[38392] | 0) | 0, 0.0, $35 ? 0 : $tmpcast9$byval_copy);
   $2251 = $2023 + +HEAPF32[$tmpcast16$idx97 >> 2];
   $2252 = (HEAP32[tempDoublePtr >> 2] = $$sroa$0450$1, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[$render_pos >> 2] - $2135;
   $2253 = +HEAPF32[$1960 >> 2];
   if (!($2253 <= 0.0)) {
    if (+_fmodf($2253, 1.2000000476837158) <= .800000011920929) label = 731;
   } else label = 731;
   if ((label | 0) == 731) {
    $2257 = HEAP32[$2205 >> 2] | 0;
    $2260 = $2252 + 0.0;
    $2261 = $2251 + (.5 - +HEAPF32[$2021 >> 2]);
    HEAPF32[$4 >> 2] = $2260;
    HEAPF32[$4 + 4 >> 2] = $2261;
    HEAPF32[$5 >> 2] = $2260;
    HEAPF32[$5 + 4 >> 2] = $2251 + -1.5;
    $2266 = +HEAPF32[38014];
    $2268 = +HEAPF32[38015];
    $2270 = +HEAPF32[38016];
    $2275 = +HEAPF32[38017] * +HEAPF32[37984];
    __ZN10ImDrawList7AddLineERK6ImVec2S2_jf($2257, $4, $5, ($2268 < 0.0 ? 0 : ~~(($2268 > 1.0 ? 1.0 : $2268) * 255.0 + .5) << 8) | ($2266 < 0.0 ? 0 : ~~(($2266 > 1.0 ? 1.0 : $2266) * 255.0 + .5)) | ($2270 < 0.0 ? 0 : ~~(($2270 > 1.0 ? 1.0 : $2270) * 255.0 + .5) << 16) | ($2275 < 0.0 ? 0 : ~~(($2275 > 1.0 ? 1.0 : $2275) * 255.0 + .5) << 24), 1.0);
   }
   if ($$lobit | 0) {
    $text_size$sroa$0$2 = $text_size$sroa$0$0;
    $text_size$sroa$6$2 = $text_size$sroa$6$0;
    break;
   }
   $2302 = $2251 - +HEAPF32[$2021 >> 2];
   HEAPF32[39495] = $2252 + -1.0;
   HEAPF32[39496] = $2302;
   $text_size$sroa$0$2 = $text_size$sroa$0$0;
   $text_size$sroa$6$2 = $text_size$sroa$6$0;
  } while (0);
  if ($35) {
   $2355 = (HEAP32[tempDoublePtr >> 2] = $text_size$sroa$0$2, +HEAPF32[tempDoublePtr >> 2]);
   $2358 = (HEAP32[tempDoublePtr >> 2] = $text_size$sroa$6$2, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[38187];
   HEAPF32[$6 >> 2] = $2355 + 0.0;
   HEAPF32[$6 + 4 >> 2] = $2358;
   __ZN5ImGui5DummyERK6ImVec2($6);
   __ZN5ImGui13EndChildFrameEv();
   __ZN5ImGui8EndGroupEv();
  }
  do if ($38) __ZN5ImGui7PopFontEv(); else {
   if (!(HEAP8[157996] | 0)) break;
   __ZL15LogRenderedTextRK6ImVec2PKcS3_(+HEAPF32[$render_pos + 4 >> 2], $buf, 0);
  } while (0);
  if ($144) {
   $2369 = +HEAPF32[$1919 >> 2] + +HEAPF32[$89 >> 2];
   HEAPF32[$7 >> 2] = $2366 + +HEAPF32[37997];
   HEAPF32[$7 + 4 >> 2] = $2369;
   HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   __ZN5ImGui10RenderTextE6ImVec2PKcS2_b($$byval_copy, $label, 0, 1);
  }
  $$1 = ($flags & 32 | 0) == 0 ? $value_changed$1$off0 : $enter_pressed$2$off0;
 }
 $$2 = $$1;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN18ImGuiTextEditState12OnKeyPressedEi($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i73$i = 0, $$0$i$i$i112$i = 0, $$0$i$i$i145$i = 0, $$0$i$i$i207$i = 0, $$0$i$i$i252$i = 0, $$0$i$i$i286$i = 0, $$0$i$i$i313$i = 0, $$0$i$i$i352$i = 0, $$0$i$i$i387$i = 0, $$0$i$i$i48$i = 0, $$0$i$i$i88$i = 0, $$0$i$lcssa = 0, $$0$i$us$i$i$i = 0, $$0$i$us$i$i$i$i = 0, $$0$i$us$i$i$i65$i = 0, $$0$i$us$i$i137$i = 0, $$0$i$us$i$i244$i = 0, $$0$i$us$i$i278$i = 0, $$0$i$us$i$i344$i = 0, $$0$i$us$i$i379$i = 0, $$03$i$i$i = 0, $$03$i$i$i$i = 0, $$03$i$i$i69$i = 0, $$03$i$i108$i = 0, $$03$i$i141$i = 0, $$03$i$i203$i = 0, $$03$i$i248$i = 0, $$03$i$i282$i = 0, $$03$i$i309$i = 0, $$03$i$i348$i = 0, $$03$i$i383$i = 0, $$03$i$i44$i = 0, $$03$i$i84$i = 0, $$03$us$i4$i$i = 0, $$03$us$i4$i$i$i = 0, $$03$us$i4$i$i62$i = 0, $$03$us$i4$i134$i = 0, $$03$us$i4$i241$i = 0, $$03$us$i4$i275$i = 0, $$03$us$i4$i341$i = 0, $$03$us$i4$i376$i = 0, $$c$0$i$i = 0, $$c$0$i199$i = 0, $$in$i$i$i = 0, $$in$i$i404$i = 0, $$lcssa299 = 0, $$lcssa301 = 0, $$lcssa338 = 0, $$lcssa339 = 0, $$phi$trans$insert$pre$phiZZZZ2D = 0, $$phi$trans$insert113$pre$phiZZZZ2D = 0, $$phi$trans$insert566$i = 0, $$pre = 0, $$pre$i$i94$i = 0, $$pre$i1$i$i = 0, $$pre$i33$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i99$iZ2D = 0, $$pre$phi121Z2D = 0, $$pre$phi2$i$i$iZ2D = 0, $$pre$phi2$i$i97$iZ2D = 0, $$pre$phi2$i$iZ2D = 0, $$pre$phi2$i36$iZ2D = 0, $$pre$phi572$iZ2D = 0, $$pre$phi574$iZ2D = 0, $$pre$phi578$iZ2D = 0, $$pre$phi583$iZ2D = 0, $$pre$phi591$i124Z2D = 0, $$pre$phi591$iZ2D = 0, $$pre$phi595$iZ2D = 0, $$pre$phiZ2D = 0, $$pre114 = 0, $$pre588$i = 0, $$pre590$i = 0, $0 = 0, $1 = 0, $1001 = 0, $1008 = 0, $101 = 0, $1013 = 0, $1018 = 0, $1021 = 0, $1022 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1029 = 0, $103 = 0, $1031 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1037 = 0, $104 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $105 = 0, $1051 = 0, $1054 = 0, $1061 = 0, $1068 = 0, $107 = 0, $1073 = 0, $1078 = 0, $1081 = 0, $1082 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1090 = 0, $1096 = 0, $1099 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1109 = 0, $1114 = 0, $1119 = 0, $1122 = 0, $1123 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1136 = 0, $1137 = 0, $1139 = 0, $114 = 0, $1141 = 0, $1143 = 0, $1145 = 0, $1147 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1153 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1167 = 0, $117 = 0, $1170 = 0, $1177 = 0, $1184 = 0, $1189 = 0, $1194 = 0, $1197 = 0, $1198 = 0, $12 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1205 = 0, $1207 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1213 = 0, $1219 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1227 = 0, $1230 = 0, $1237 = 0, $124 = 0, $1244 = 0, $1249 = 0, $1254 = 0, $1257 = 0, $1258 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1266 = 0, $1267 = 0, $1269 = 0, $1275 = 0, $1278 = 0, $1279 = 0, $1280 = 0, $1281 = 0, $1288 = 0, $1293 = 0, $1298 = 0, $13 = 0, $1301 = 0, $1302 = 0, $131 = 0, $1315 = 0, $1317 = 0, $1318 = 0, $1320 = 0, $1322 = 0, $1324 = 0, $1325 = 0, $1327 = 0, $1329 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $1342 = 0, $1343 = 0, $1345 = 0, $1346 = 0, $1349 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1365 = 0, $1366 = 0, $1368 = 0, $1372 = 0, $1376 = 0, $1377 = 0, $1379 = 0, $138 = 0, $1389 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1407 = 0, $1409 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1419 = 0, $1420 = 0, $1421 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1429 = 0, $143 = 0, $1433 = 0, $1434 = 0, $1436 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $147 = 0, $148 = 0, $151 = 0, $152 = 0, $155 = 0, $156 = 0, $157 = 0, $159 = 0, $16 = 0, $161 = 0, $163 = 0, $164 = 0, $165 = 0, $167 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $181 = 0, $184 = 0, $19 = 0, $191 = 0, $198 = 0, $203 = 0, $207 = 0, $208 = 0, $211 = 0, $212 = 0, $215 = 0, $216 = 0, $218 = 0, $219 = 0, $225 = 0, $228 = 0, $234 = 0, $237 = 0, $24 = 0, $242 = 0, $25 = 0, $254 = 0, $255 = 0, $258 = 0, $260 = 0, $262 = 0, $264 = 0, $266 = 0, $267 = 0, $270 = 0, $272 = 0, $277 = 0, $279 = 0, $28 = 0, $282 = 0, $283 = 0, $284 = 0, $286 = 0, $288 = 0, $289 = 0, $29 = 0, $292 = 0, $296 = 0, $298 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $306 = 0, $309 = 0, $31 = 0, $310 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $323 = 0, $332 = 0, $339 = 0, $340 = 0, $341 = 0, $354 = 0, $355 = 0, $356 = 0, $358 = 0, $362 = 0, $365 = 0, $372 = 0, $379 = 0, $384 = 0, $387 = 0, $39 = 0, $390 = 0, $393 = 0, $394 = 0, $399 = 0, $400 = 0, $401 = 0, $402 = 0, $404 = 0, $407 = 0, $409 = 0, $416 = 0, $421 = 0, $427 = 0, $435 = 0, $44 = 0, $442 = 0, $453 = 0, $454 = 0, $456 = 0, $457 = 0, $459 = 0, $46 = 0, $461 = 0, $463 = 0, $465 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $473 = 0, $474 = 0, $476 = 0, $48 = 0, $488 = 0, $489 = 0, $49 = 0, $491 = 0, $5 = 0, $506 = 0, $507 = 0, $508 = 0, $510 = 0, $514 = 0, $517 = 0, $52 = 0, $524 = 0, $53 = 0, $531 = 0, $536 = 0, $539 = 0, $542 = 0, $545 = 0, $546 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $556 = 0, $559 = 0, $56 = 0, $561 = 0, $568 = 0, $573 = 0, $579 = 0, $587 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $606 = 0, $608 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $619 = 0, $62 = 0, $620 = 0, $624 = 0, $625 = 0, $629 = 0, $630 = 0, $633 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $643 = 0, $644 = 0, $645 = 0, $648 = 0, $649 = 0, $650 = 0, $652 = 0, $653 = 0, $654 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $662 = 0, $668 = 0, $669 = 0, $674 = 0, $675 = 0, $677 = 0, $678 = 0, $679 = 0, $680 = 0, $681 = 0, $685 = 0, $686 = 0, $690 = 0, $691 = 0, $694 = 0, $700 = 0, $701 = 0, $706 = 0, $707 = 0, $709 = 0, $710 = 0, $712 = 0, $715 = 0, $720 = 0, $725 = 0, $726 = 0, $728 = 0, $729 = 0, $73 = 0, $731 = 0, $734 = 0, $739 = 0, $744 = 0, $745 = 0, $747 = 0, $748 = 0, $749 = 0, $750 = 0, $751 = 0, $753 = 0, $754 = 0, $755 = 0, $757 = 0, $761 = 0, $762 = 0, $764 = 0, $765 = 0, $767 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $779 = 0, $780 = 0, $784 = 0, $785 = 0, $788 = 0, $793 = 0, $794 = 0, $796 = 0, $797 = 0, $799 = 0, $801 = 0, $809 = 0, $810 = 0, $811 = 0, $813 = 0, $818 = 0, $819 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $828 = 0, $830 = 0, $831 = 0, $84 = 0, $843 = 0.0, $847 = 0.0, $848 = 0, $849 = 0, $85 = 0, $852 = 0, $853 = 0, $858 = 0, $859 = 0, $861 = 0, $863 = 0, $865 = 0, $868 = 0, $869 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $876 = 0, $881 = 0, $882 = 0, $884 = 0, $885 = 0, $887 = 0, $89 = 0, $891 = 0, $897 = 0, $898 = 0, $90 = 0, $900 = 0, $905 = 0, $906 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $915 = 0, $917 = 0, $918 = 0, $930 = 0.0, $934 = 0.0, $935 = 0, $936 = 0, $939 = 0, $94 = 0, $940 = 0, $945 = 0, $946 = 0, $948 = 0, $95 = 0, $950 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $960 = 0, $961 = 0, $963 = 0, $965 = 0, $967 = 0, $969 = 0, $97 = 0, $971 = 0, $973 = 0, $974 = 0, $975 = 0, $977 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $99 = 0, $991 = 0, $994 = 0, $_str$idx$i$i = 0, $_str$idx$i230$i = 0, $_str$idx$val$i$i = 0, $_str$idx$val$i231$i = 0, $bytes_count$0$be$i$i$i = 0, $bytes_count$0$be$i$i$i$i = 0, $bytes_count$0$be$i$i$i75$i = 0, $bytes_count$0$be$i$i114$i = 0, $bytes_count$0$be$i$i147$i = 0, $bytes_count$0$be$i$i209$i = 0, $bytes_count$0$be$i$i254$i = 0, $bytes_count$0$be$i$i288$i = 0, $bytes_count$0$be$i$i315$i = 0, $bytes_count$0$be$i$i354$i = 0, $bytes_count$0$be$i$i389$i = 0, $bytes_count$0$be$i$i50$i = 0, $bytes_count$0$be$i$i90$i = 0, $bytes_count$0$lcssa$i$i = 0, $bytes_count$0$lcssa$i$i$i = 0, $bytes_count$0$lcssa$i$i$i$i = 0, $bytes_count$0$lcssa$i$i$i77$i = 0, $bytes_count$0$lcssa$i$i116$i = 0, $bytes_count$0$lcssa$i$i149$i = 0, $bytes_count$0$lcssa$i$i211$i = 0, $bytes_count$0$lcssa$i$i256$i = 0, $bytes_count$0$lcssa$i$i290$i = 0, $bytes_count$0$lcssa$i$i317$i = 0, $bytes_count$0$lcssa$i$i356$i = 0, $bytes_count$0$lcssa$i$i391$i = 0, $bytes_count$0$lcssa$i$i52$i = 0, $bytes_count$0$lcssa$i$i92$i = 0, $bytes_count$0$lcssa$i168$i = 0, $bytes_count$02$i$i$i = 0, $bytes_count$02$i$i$i$i = 0, $bytes_count$02$i$i$i70$i = 0, $bytes_count$02$i$i109$i = 0, $bytes_count$02$i$i142$i = 0, $bytes_count$02$i$i204$i = 0, $bytes_count$02$i$i249$i = 0, $bytes_count$02$i$i283$i = 0, $bytes_count$02$i$i310$i = 0, $bytes_count$02$i$i349$i = 0, $bytes_count$02$i$i384$i = 0, $bytes_count$02$i$i45$i = 0, $bytes_count$02$i$i85$i = 0, $bytes_count$02$us$i$be$i$i = 0, $bytes_count$02$us$i$be$i$i$i = 0, $bytes_count$02$us$i$be$i$i67$i = 0, $bytes_count$02$us$i$be$i139$i = 0, $bytes_count$02$us$i$be$i246$i = 0, $bytes_count$02$us$i$be$i280$i = 0, $bytes_count$02$us$i$be$i346$i = 0, $bytes_count$02$us$i$be$i381$i = 0, $bytes_count$02$us$i5$i$i = 0, $bytes_count$02$us$i5$i$i$i = 0, $bytes_count$02$us$i5$i$i61$i = 0, $bytes_count$02$us$i5$i133$i = 0, $bytes_count$02$us$i5$i240$i = 0, $bytes_count$02$us$i5$i274$i = 0, $bytes_count$02$us$i5$i340$i = 0, $bytes_count$02$us$i5$i375$i = 0, $c$0$$i$i = 0, $c$0$$i234$i = 0, $c$0$i$i = 0, $c$0$i$i$lcssa = 0, $c$0$i182$i = 0, $c$0$i182$i$lcssa = 0, $c$0$i198$i = 0, $c$0$i198$i$lcssa = 0, $c$0$i233$i = 0, $c$0$i233$i$lcssa = 0, $c$0$in$i$i = 0, $c$0$in$i$i$lcssa = 0, $c$0$in$i181$i = 0, $c$0$in$i181$i$lcssa = 0, $c$0$in$i197$i = 0, $c$0$in$i197$i$lcssa = 0, $c$0$in$i232$i = 0, $c$0$in$i232$i$lcssa = 0, $dst$0$lcssa$i$i = 0, $dst$0$lcssa$i$i$i = 0, $dst$0$lcssa$i$i82$i = 0, $dst$0$lcssa$i121$i = 0, $dst$0$lcssa$i154$i = 0, $dst$0$lcssa$i216$i = 0, $dst$0$lcssa$i261$i = 0, $dst$0$lcssa$i295$i = 0, $dst$0$lcssa$i322$i = 0, $dst$0$lcssa$i361$i = 0, $dst$0$lcssa$i396$i = 0, $dst$03$i$i = 0, $dst$03$i$i$i = 0, $dst$03$i$i79$i = 0, $dst$03$i118$i = 0, $dst$03$i151$i = 0, $dst$03$i213$i = 0, $dst$03$i258$i = 0, $dst$03$i292$i = 0, $dst$03$i319$i = 0, $dst$03$i358$i = 0, $dst$03$i393$i = 0, $find$i = 0, $i$01$i$i$i = 0, $i$01$i$i127$i = 0, $i$01$i$i227$i = 0, $i$01$i$i267$i = 0, $i$01$i$i332$i = 0, $i$01$i$i368$i = 0, $i$01$i$i41$i = 0, $i$010$i$i = 0, $i$03$i$i = 0, $i$0484$i = 0, $i5$0489$i = 0, $s$0$us$i$i416493$i = 0, $s$0$us$i$i486$i = 0, $s$1$i$i$i = 0, $s$1$i$i420$i = 0, $src$02$i$i = 0, $src$02$i$i$i = 0, $src$02$i$i80$i = 0, $src$02$i119$i = 0, $src$02$i152$i = 0, $src$02$i214$i = 0, $src$02$i259$i = 0, $src$02$i293$i = 0, $src$02$i320$i = 0, $src$02$i359$i = 0, $src$02$i394$i = 0, $str$idx$i$i = 0, $str$idx$i$i122 = 0, $str$idx$i$i125 = 0, $str$idx$i303$i = 0, $str$idx$val$i = 0, $str$idx$val$i$i = 0, $str$idx$val$i$i128 = 0, $str$idx$val$i102$i = 0, $str$idx$val$i177$i = 0, $str$idx$val$i304$i = 0, $str$idx10$val$i = 0, $str$idx11$val$i = 0, $str$idx12$val$i = 0, $str$idx13$val$i = 0, $str$idx14$val$i = 0, $str$idx15$val$i = 0, $str$idx16$val$i = 0, $str$idx17$val$i = 0, $str$idx18$i = 0, $str$idx18$val$i = 0, $str$idx20$i = 0, $str$idx20$val$i = 0, $str$idx20$val607$i = 0, $str$idx20604$i = 0, $str$idx20606$i = 0, $str$idx22$i = 0, $str$idx22$val$i = 0, $str$idx22$val602$i = 0, $str$idx22599$i = 0, $str$idx22601$i = 0, $str$idx23$val$i = 0, $str$idx24$val$i = 0, $str$idx25$val$i = 0, $str$idx26$val$i = 0, $str$idx27$val$i = 0, $str$idx28$val$i = 0, $str$idx29$val597$i = 0, $str$idx8$i = 0, $str$idx8$val$i = 0, $str$idx9$i = 0, $x$0483$i = 0.0, $x8$0490$i = 0.0, label = 0, sp = 0, $$03$i$i$i$looptemp = 0, $$03$i$i309$i$looptemp = 0, $$03$i$i203$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $find$i = sp;
 $0 = $this + 56 | 0;
 $1 = $this + 72 | 0;
 $$0$i = $key;
 L1 : while (1) {
  if (($$0$i | 0) < 65549) switch ($$0$i | 0) {
  case 65546:
   {
    label = 119;
    break L1;
    break;
   }
  case 65547:
   {
    label = 182;
    break L1;
    break;
   }
  case 65536:
   {
    label = 232;
    break L1;
    break;
   }
  case 65537:
   {
    label = 239;
    break L1;
    break;
   }
  case 65548:
   {
    label = 271;
    break L1;
    break;
   }
  case 65544:
   {
    label = 457;
    break L1;
    break;
   }
  case 65545:
   {
    label = 543;
    break L1;
    break;
   }
  case 65542:
   {
    label = 631;
    break L1;
    break;
   }
  case 65543:
   {
    label = 632;
    break L1;
    break;
   }
  case 65540:
   {
    label = 641;
    break L1;
    break;
   }
  case 65541:
   {
    label = 656;
    break L1;
    break;
   }
  case 65539:
   {
    label = 352;
    break;
   }
  case 65538:
   {
    label = 409;
    break;
   }
  default:
   {
    $$0$i$lcssa = $$0$i;
    label = 3;
    break L1;
   }
  } else {
   if (($$0$i | 0) >= 196613) {
    label = 710;
    break;
   }
   if (($$0$i | 0) < 196610) {
    label = 711;
    break;
   }
   switch ($$0$i | 0) {
   case 196612:
    {
     label = 675;
     break L1;
     break;
    }
   case 196611:
    {
     label = 352;
     break;
    }
   case 196610:
    {
     label = 409;
     break;
    }
   default:
    {
     $$0$i$lcssa = $$0$i;
     label = 3;
     break L1;
    }
   }
  }
  if ((label | 0) == 352) {
   label = 0;
   $767 = $$0$i & 131072;
   if (!(HEAP8[$1 >> 0] | 0)) {
    $$lcssa339 = $767;
    label = 353;
    break;
   }
   $$0$i = $767 | 65537;
   continue;
  } else if ((label | 0) == 409) {
   label = 0;
   $865 = $$0$i & 131072;
   if (!(HEAP8[$1 >> 0] | 0)) {
    $$lcssa338 = $865;
    label = 410;
    break;
   }
   $$0$i = $865 | 65536;
   continue;
  }
 }
 L13 : switch (label | 0) {
 case 119:
  {
   $254 = $this + 3266 | 0;
   $255 = HEAP16[$254 >> 1] | 0;
   L160 : do if ($255 << 16 >> 16) {
    $258 = ($255 << 16 >> 16) + -1 | 0;
    $260 = HEAP32[$this + 80 + ($258 * 12 | 0) >> 2] | 0;
    $262 = HEAP16[$this + 80 + ($258 * 12 | 0) + 4 >> 1] | 0;
    $264 = HEAP16[$this + 80 + ($258 * 12 | 0) + 6 >> 1] | 0;
    $266 = HEAP16[$this + 80 + ($258 * 12 | 0) + 8 >> 1] | 0;
    $267 = $this + 3268 | 0;
    $270 = (HEAP16[$267 >> 1] | 0) + -1 | 0;
    HEAP16[$this + 80 + ($270 * 12 | 0) + 8 >> 1] = -1;
    $272 = $this + 80 + ($270 * 12 | 0) + 4 | 0;
    HEAP16[$272 >> 1] = $264;
    HEAP16[$this + 80 + ($270 * 12 | 0) + 6 >> 1] = $262;
    HEAP32[$this + 80 + ($270 * 12 | 0) >> 2] = $260;
    if ($264 << 16 >> 16) {
     $277 = HEAP16[$this + 3270 >> 1] | 0;
     $279 = $264 << 16 >> 16;
     L164 : do if ((($277 << 16 >> 16) + $279 | 0) > 998) HEAP16[$272 >> 1] = 0; else {
      $282 = $this + 3272 | 0;
      $283 = $this + 1264 | 0;
      $284 = $this + 1260 | 0;
      $286 = $277;
      $292 = HEAP16[$267 >> 1] | 0;
      while (1) {
       $288 = HEAP16[$282 >> 1] | 0;
       $289 = $288 << 16 >> 16;
       if ((($286 << 16 >> 16) + $279 | 0) <= ($289 | 0)) {
        $$lcssa299 = $292;
        $$lcssa301 = $289;
        break;
       }
       if ($292 << 16 >> 16 < 99) {
        if ((HEAP16[$283 >> 1] | 0) > -1) {
         $296 = HEAP16[$284 >> 1] | 0;
         $298 = $296 + ($288 & 65535) | 0;
         HEAP16[$282 >> 1] = $298;
         $300 = $298 << 16 >> 16;
         $301 = $this + 1268 + ($300 << 1) | 0;
         _memmove($301 | 0, $301 + (0 - $296 << 1) | 0, 99 - $300 << 1 | 0) | 0;
         $306 = HEAP16[$267 >> 1] | 0;
         if ($306 << 16 >> 16 < 98) {
          $i$01$i$i41$i = $306 << 16 >> 16;
          do {
           $309 = $this + 80 + ($i$01$i$i41$i * 12 | 0) + 8 | 0;
           $310 = HEAP16[$309 >> 1] | 0;
           if ($310 << 16 >> 16 > -1) HEAP16[$309 >> 1] = ($310 & 65535) + $296;
           $i$01$i$i41$i = $i$01$i$i41$i + 1 | 0;
          } while (($i$01$i$i41$i | 0) != 98);
          $317 = HEAP16[$267 >> 1] | 0;
         } else $317 = $306;
        } else $317 = $292;
        $316 = $317 + 1 << 16 >> 16;
        HEAP16[$267 >> 1] = $316;
        $318 = $316 << 16 >> 16;
        $319 = $this + 80 + ($318 * 12 | 0) | 0;
        _memmove($319 + -12 | 0, $319 | 0, (99 - $318 | 0) * 12 | 0) | 0;
       }
       $323 = HEAP32[$267 >> 2] | 0;
       $292 = $323 & 65535;
       if ($292 << 16 >> 16 == 99) break L160; else $286 = $323 >>> 16 & 65535;
      }
      $332 = $this + 80 + ((($$lcssa299 << 16 >> 16) + -1 | 0) * 12 | 0) + 8 | 0;
      HEAP16[$332 >> 1] = $$lcssa301 - $279;
      HEAP16[$282 >> 1] = (HEAPU16[$282 >> 1] | 0) - $279;
      if ($264 << 16 >> 16 > 0) {
       $339 = HEAP32[$this + 4 >> 2] | 0;
       $340 = $this + 12 | 0;
       $i$010$i$i = 0;
       while (1) {
        $341 = $i$010$i$i + $260 | 0;
        if (($339 | 0) <= ($341 | 0)) break;
        HEAP16[$this + 1268 + ((HEAP16[$332 >> 1] | 0) + $i$010$i$i << 1) >> 1] = HEAP16[(HEAP32[$340 >> 2] | 0) + ($341 << 1) >> 1] | 0;
        $i$010$i$i = $i$010$i$i + 1 | 0;
        if (($i$010$i$i | 0) >= ($279 | 0)) break L164;
       }
       ___assert_fail(127217, 127226, 806, 127272);
      }
     } while (0);
     $354 = (HEAP32[$this + 12 >> 2] | 0) + ($260 << 1) | 0;
     $355 = $354 + ($279 << 1) | 0;
     $356 = ($355 | 0) == 0;
     L190 : do if ($264 << 16 >> 16 > 0 | $356) if ($356) {
      $358 = HEAP16[$354 >> 1] | 0;
      if (!($358 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i$i$i = 0;
       break;
      } else {
       $$03$us$i4$i$i$i = $354;
       $362 = $358;
       $bytes_count$02$us$i5$i$i$i = 0;
      }
      while (1) {
       $$03$us$i4$i$i$i = $$03$us$i4$i$i$i + 2 | 0;
       if (($362 & 65535) < 128) $bytes_count$02$us$i$be$i$i$i = $bytes_count$02$us$i5$i$i$i + 1 | 0; else {
        if (($362 & 65535) < 2048) $$0$i$us$i$i$i$i = 2; else {
         $365 = $362 & 64512;
         if (($365 | 0) == 56320) $$0$i$us$i$i$i$i = 0; else $$0$i$us$i$i$i$i = ($365 | 0) == 55296 ? 4 : 3;
        }
        $bytes_count$02$us$i$be$i$i$i = $$0$i$us$i$i$i$i + $bytes_count$02$us$i5$i$i$i | 0;
       }
       $362 = HEAP16[$$03$us$i4$i$i$i >> 1] | 0;
       if (!($362 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i$i$i = $bytes_count$02$us$i$be$i$i$i;
        break;
       } else $bytes_count$02$us$i5$i$i$i = $bytes_count$02$us$i$be$i$i$i;
      }
     } else {
      $$03$i$i$i$i = $354;
      $bytes_count$02$i$i$i$i = 0;
      while (1) {
       $372 = HEAP16[$$03$i$i$i$i >> 1] | 0;
       if (!($372 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i$i$i = $bytes_count$02$i$i$i$i;
        break L190;
       }
       $$03$i$i$i$i = $$03$i$i$i$i + 2 | 0;
       if (($372 & 65535) < 128) $bytes_count$0$be$i$i$i$i = $bytes_count$02$i$i$i$i + 1 | 0; else {
        if (($372 & 65535) < 2048) $$0$i$i$i$i$i = 2; else {
         $379 = $372 & 64512;
         if (($379 | 0) == 56320) $$0$i$i$i$i$i = 0; else $$0$i$i$i$i$i = ($379 | 0) == 55296 ? 4 : 3;
        }
        $bytes_count$0$be$i$i$i$i = $$0$i$i$i$i$i + $bytes_count$02$i$i$i$i | 0;
       }
       if ($$03$i$i$i$i >>> 0 >= $355 >>> 0) {
        $bytes_count$0$lcssa$i$i$i$i = $bytes_count$0$be$i$i$i$i;
        break;
       } else $bytes_count$02$i$i$i$i = $bytes_count$0$be$i$i$i$i;
      }
     } else $bytes_count$0$lcssa$i$i$i$i = 0; while (0);
     $384 = $this + 40 | 0;
     HEAP32[$384 >> 2] = (HEAP32[$384 >> 2] | 0) - $bytes_count$0$lcssa$i$i$i$i;
     $387 = $this + 44 | 0;
     HEAP32[$387 >> 2] = (HEAP32[$387 >> 2] | 0) - $279;
     $390 = HEAP16[$355 >> 1] | 0;
     if (!($390 << 16 >> 16)) $dst$0$lcssa$i$i$i = $354; else {
      $394 = $390;
      $dst$03$i$i$i = $354;
      $src$02$i$i$i = $355;
      while (1) {
       $src$02$i$i$i = $src$02$i$i$i + 2 | 0;
       $393 = $dst$03$i$i$i + 2 | 0;
       HEAP16[$dst$03$i$i$i >> 1] = $394;
       $394 = HEAP16[$src$02$i$i$i >> 1] | 0;
       if (!($394 << 16 >> 16)) {
        $dst$0$lcssa$i$i$i = $393;
        break;
       } else $dst$03$i$i$i = $393;
      }
     }
     HEAP16[$dst$0$lcssa$i$i$i >> 1] = 0;
    }
    if (!($262 << 16 >> 16)) $$pre$phi$i$iZ2D = 0; else {
     $399 = $this + 1268 + ($266 << 16 >> 16 << 1) | 0;
     $400 = $262 << 16 >> 16;
     $401 = $this + 44 | 0;
     $402 = HEAP32[$401 >> 2] | 0;
     $404 = $this + 4 | 0;
     do if (($402 + $400 | 0) < (HEAP32[$404 >> 2] | 0)) {
      $407 = $399 + ($400 << 1) | 0;
      L225 : do if ($262 << 16 >> 16 > 0) {
       $$03$i$i44$i = $399;
       $bytes_count$02$i$i45$i = 0;
       while (1) {
        $409 = HEAP16[$$03$i$i44$i >> 1] | 0;
        if (!($409 << 16 >> 16)) {
         $bytes_count$0$lcssa$i$i52$i = $bytes_count$02$i$i45$i;
         break L225;
        }
        $$03$i$i44$i = $$03$i$i44$i + 2 | 0;
        if (($409 & 65535) < 128) $bytes_count$0$be$i$i50$i = $bytes_count$02$i$i45$i + 1 | 0; else {
         if (($409 & 65535) < 2048) $$0$i$i$i48$i = 2; else {
          $416 = $409 & 64512;
          if (($416 | 0) == 56320) $$0$i$i$i48$i = 0; else $$0$i$i$i48$i = ($416 | 0) == 55296 ? 4 : 3;
         }
         $bytes_count$0$be$i$i50$i = $$0$i$i$i48$i + $bytes_count$02$i$i45$i | 0;
        }
        if ($$03$i$i44$i >>> 0 >= $407 >>> 0) {
         $bytes_count$0$lcssa$i$i52$i = $bytes_count$0$be$i$i50$i;
         break;
        } else $bytes_count$02$i$i45$i = $bytes_count$0$be$i$i50$i;
       }
      } else $bytes_count$0$lcssa$i$i52$i = 0; while (0);
      $421 = $this + 40 | 0;
      if (((HEAP32[$421 >> 2] | 0) + $bytes_count$0$lcssa$i$i52$i | 0) < (HEAP32[$this + 48 >> 2] | 0)) {
       $427 = $this + 12 | 0;
       $$pre$i1$i$i = (HEAP32[$427 >> 2] | 0) + ($260 << 1) | 0;
       if (($402 | 0) == ($260 | 0)) $$pre$phi2$i$i$iZ2D = $$pre$i1$i$i; else {
        _memmove($$pre$i1$i$i + ($400 << 1) | 0, $$pre$i1$i$i | 0, $402 - $260 << 1 | 0) | 0;
        $$pre$phi2$i$i$iZ2D = $$pre$i1$i$i;
       }
       _memcpy($$pre$phi2$i$i$iZ2D | 0, $399 | 0, $400 << 1 | 0) | 0;
       $435 = (HEAP32[$401 >> 2] | 0) + $400 | 0;
       HEAP32[$401 >> 2] = $435;
       HEAP32[$421 >> 2] = (HEAP32[$421 >> 2] | 0) + $bytes_count$0$lcssa$i$i52$i;
       if ((HEAP32[$404 >> 2] | 0) > ($435 | 0)) {
        HEAP16[(HEAP32[$427 >> 2] | 0) + ($435 << 1) >> 1] = 0;
        break;
       } else ___assert_fail(127217, 127226, 805, 127272);
      }
     } while (0);
     $442 = $this + 3270 | 0;
     HEAP16[$442 >> 1] = (HEAPU16[$442 >> 1] | 0) - $400;
     $$pre$phi$i$iZ2D = $400;
    }
    HEAP32[$0 >> 2] = $$pre$phi$i$iZ2D + $260;
    HEAP16[$254 >> 1] = (HEAP16[$254 >> 1] | 0) + -1 << 16 >> 16;
    HEAP16[$267 >> 1] = (HEAP16[$267 >> 1] | 0) + -1 << 16 >> 16;
   } while (0);
   HEAP8[$this + 71 >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 182:
  {
   $453 = $this + 3268 | 0;
   $454 = HEAP16[$453 >> 1] | 0;
   if ($454 << 16 >> 16 != 99) {
    $456 = $454 << 16 >> 16;
    $457 = $this + 3266 | 0;
    $459 = HEAP16[$457 >> 1] | 0;
    $461 = HEAP32[$this + 80 + ($456 * 12 | 0) >> 2] | 0;
    $463 = HEAP16[$this + 80 + ($456 * 12 | 0) + 4 >> 1] | 0;
    $465 = HEAP16[$this + 80 + ($456 * 12 | 0) + 6 >> 1] | 0;
    $467 = HEAP16[$this + 80 + ($456 * 12 | 0) + 8 >> 1] | 0;
    $468 = $this + 80 + ($459 * 12 | 0) + 6 | 0;
    HEAP16[$468 >> 1] = $463;
    $469 = $this + 80 + ($459 * 12 | 0) + 4 | 0;
    HEAP16[$469 >> 1] = $465;
    $470 = $this + 80 + ($459 * 12 | 0) | 0;
    HEAP32[$470 >> 2] = $461;
    $471 = $this + 80 + ($459 * 12 | 0) + 8 | 0;
    HEAP16[$471 >> 1] = -1;
    if ($465 << 16 >> 16) {
     $473 = $this + 3270 | 0;
     $474 = HEAP16[$473 >> 1] | 0;
     $476 = $465 << 16 >> 16;
     L255 : do if ((($474 << 16 >> 16) + $476 | 0) > (HEAP16[$this + 3272 >> 1] | 0)) {
      HEAP16[$469 >> 1] = 0;
      HEAP16[$468 >> 1] = 0;
     } else {
      HEAP16[$471 >> 1] = $474;
      HEAP16[$473 >> 1] = ($474 & 65535) + ($465 & 65535);
      if ($465 << 16 >> 16 > 0) {
       $488 = HEAP32[$this + 4 >> 2] | 0;
       $489 = $this + 12 | 0;
       $i$03$i$i = 0;
       while (1) {
        $491 = (HEAP32[$470 >> 2] | 0) + $i$03$i$i | 0;
        if (($488 | 0) <= ($491 | 0)) break;
        HEAP16[$this + 1268 + ((HEAP16[$471 >> 1] | 0) + $i$03$i$i << 1) >> 1] = HEAP16[(HEAP32[$489 >> 2] | 0) + ($491 << 1) >> 1] | 0;
        $i$03$i$i = $i$03$i$i + 1 | 0;
        if (($i$03$i$i | 0) >= (HEAP16[$469 >> 1] | 0)) break L255;
       }
       ___assert_fail(127217, 127226, 806, 127272);
      }
     } while (0);
     $506 = (HEAP32[$this + 12 >> 2] | 0) + ($461 << 1) | 0;
     $507 = $506 + ($476 << 1) | 0;
     $508 = ($507 | 0) == 0;
     L264 : do if ($465 << 16 >> 16 > 0 | $508) if ($508) {
      $510 = HEAP16[$506 >> 1] | 0;
      if (!($510 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i$i77$i = 0;
       break;
      } else {
       $$03$us$i4$i$i62$i = $506;
       $514 = $510;
       $bytes_count$02$us$i5$i$i61$i = 0;
      }
      while (1) {
       $$03$us$i4$i$i62$i = $$03$us$i4$i$i62$i + 2 | 0;
       if (($514 & 65535) < 128) $bytes_count$02$us$i$be$i$i67$i = $bytes_count$02$us$i5$i$i61$i + 1 | 0; else {
        if (($514 & 65535) < 2048) $$0$i$us$i$i$i65$i = 2; else {
         $517 = $514 & 64512;
         if (($517 | 0) == 56320) $$0$i$us$i$i$i65$i = 0; else $$0$i$us$i$i$i65$i = ($517 | 0) == 55296 ? 4 : 3;
        }
        $bytes_count$02$us$i$be$i$i67$i = $$0$i$us$i$i$i65$i + $bytes_count$02$us$i5$i$i61$i | 0;
       }
       $514 = HEAP16[$$03$us$i4$i$i62$i >> 1] | 0;
       if (!($514 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i$i77$i = $bytes_count$02$us$i$be$i$i67$i;
        break;
       } else $bytes_count$02$us$i5$i$i61$i = $bytes_count$02$us$i$be$i$i67$i;
      }
     } else {
      $$03$i$i$i69$i = $506;
      $bytes_count$02$i$i$i70$i = 0;
      while (1) {
       $524 = HEAP16[$$03$i$i$i69$i >> 1] | 0;
       if (!($524 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i$i77$i = $bytes_count$02$i$i$i70$i;
        break L264;
       }
       $$03$i$i$i69$i = $$03$i$i$i69$i + 2 | 0;
       if (($524 & 65535) < 128) $bytes_count$0$be$i$i$i75$i = $bytes_count$02$i$i$i70$i + 1 | 0; else {
        if (($524 & 65535) < 2048) $$0$i$i$i$i73$i = 2; else {
         $531 = $524 & 64512;
         if (($531 | 0) == 56320) $$0$i$i$i$i73$i = 0; else $$0$i$i$i$i73$i = ($531 | 0) == 55296 ? 4 : 3;
        }
        $bytes_count$0$be$i$i$i75$i = $$0$i$i$i$i73$i + $bytes_count$02$i$i$i70$i | 0;
       }
       if ($$03$i$i$i69$i >>> 0 >= $507 >>> 0) {
        $bytes_count$0$lcssa$i$i$i77$i = $bytes_count$0$be$i$i$i75$i;
        break;
       } else $bytes_count$02$i$i$i70$i = $bytes_count$0$be$i$i$i75$i;
      }
     } else $bytes_count$0$lcssa$i$i$i77$i = 0; while (0);
     $536 = $this + 40 | 0;
     HEAP32[$536 >> 2] = (HEAP32[$536 >> 2] | 0) - $bytes_count$0$lcssa$i$i$i77$i;
     $539 = $this + 44 | 0;
     HEAP32[$539 >> 2] = (HEAP32[$539 >> 2] | 0) - $476;
     $542 = HEAP16[$507 >> 1] | 0;
     if (!($542 << 16 >> 16)) $dst$0$lcssa$i$i82$i = $506; else {
      $546 = $542;
      $dst$03$i$i79$i = $506;
      $src$02$i$i80$i = $507;
      while (1) {
       $src$02$i$i80$i = $src$02$i$i80$i + 2 | 0;
       $545 = $dst$03$i$i79$i + 2 | 0;
       HEAP16[$dst$03$i$i79$i >> 1] = $546;
       $546 = HEAP16[$src$02$i$i80$i >> 1] | 0;
       if (!($546 << 16 >> 16)) {
        $dst$0$lcssa$i$i82$i = $545;
        break;
       } else $dst$03$i$i79$i = $545;
      }
     }
     HEAP16[$dst$0$lcssa$i$i82$i >> 1] = 0;
    }
    do if (!($463 << 16 >> 16)) $$pre$phi$i99$iZ2D = 0; else {
     $551 = $this + 1268 + ($467 << 16 >> 16 << 1) | 0;
     $552 = $463 << 16 >> 16;
     $553 = $this + 44 | 0;
     $554 = HEAP32[$553 >> 2] | 0;
     $556 = $this + 4 | 0;
     if (($554 + $552 | 0) < (HEAP32[$556 >> 2] | 0)) {
      $559 = $551 + ($552 << 1) | 0;
      L298 : do if ($463 << 16 >> 16 > 0) {
       $$03$i$i84$i = $551;
       $bytes_count$02$i$i85$i = 0;
       while (1) {
        $561 = HEAP16[$$03$i$i84$i >> 1] | 0;
        if (!($561 << 16 >> 16)) {
         $bytes_count$0$lcssa$i$i92$i = $bytes_count$02$i$i85$i;
         break L298;
        }
        $$03$i$i84$i = $$03$i$i84$i + 2 | 0;
        if (($561 & 65535) < 128) $bytes_count$0$be$i$i90$i = $bytes_count$02$i$i85$i + 1 | 0; else {
         if (($561 & 65535) < 2048) $$0$i$i$i88$i = 2; else {
          $568 = $561 & 64512;
          if (($568 | 0) == 56320) $$0$i$i$i88$i = 0; else $$0$i$i$i88$i = ($568 | 0) == 55296 ? 4 : 3;
         }
         $bytes_count$0$be$i$i90$i = $$0$i$i$i88$i + $bytes_count$02$i$i85$i | 0;
        }
        if ($$03$i$i84$i >>> 0 >= $559 >>> 0) {
         $bytes_count$0$lcssa$i$i92$i = $bytes_count$0$be$i$i90$i;
         break;
        } else $bytes_count$02$i$i85$i = $bytes_count$0$be$i$i90$i;
       }
      } else $bytes_count$0$lcssa$i$i92$i = 0; while (0);
      $573 = $this + 40 | 0;
      if (((HEAP32[$573 >> 2] | 0) + $bytes_count$0$lcssa$i$i92$i | 0) < (HEAP32[$this + 48 >> 2] | 0)) {
       $579 = $this + 12 | 0;
       $$pre$i$i94$i = (HEAP32[$579 >> 2] | 0) + ($461 << 1) | 0;
       if (($554 | 0) == ($461 | 0)) $$pre$phi2$i$i97$iZ2D = $$pre$i$i94$i; else {
        _memmove($$pre$i$i94$i + ($552 << 1) | 0, $$pre$i$i94$i | 0, $554 - $461 << 1 | 0) | 0;
        $$pre$phi2$i$i97$iZ2D = $$pre$i$i94$i;
       }
       _memcpy($$pre$phi2$i$i97$iZ2D | 0, $551 | 0, $552 << 1 | 0) | 0;
       $587 = (HEAP32[$553 >> 2] | 0) + $552 | 0;
       HEAP32[$553 >> 2] = $587;
       HEAP32[$573 >> 2] = (HEAP32[$573 >> 2] | 0) + $bytes_count$0$lcssa$i$i92$i;
       if ((HEAP32[$556 >> 2] | 0) > ($587 | 0)) {
        HEAP16[(HEAP32[$579 >> 2] | 0) + ($587 << 1) >> 1] = 0;
        $$pre$phi$i99$iZ2D = $552;
        break;
       } else ___assert_fail(127217, 127226, 805, 127272);
      } else $$pre$phi$i99$iZ2D = $552;
     } else $$pre$phi$i99$iZ2D = $552;
    } while (0);
    HEAP32[$0 >> 2] = $$pre$phi$i99$iZ2D + $461;
    HEAP16[$457 >> 1] = (HEAP16[$457 >> 1] | 0) + 1 << 16 >> 16;
    HEAP16[$453 >> 1] = (HEAP16[$453 >> 1] | 0) + 1 << 16 >> 16;
   }
   HEAP8[$this + 71 >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 232:
  {
   $600 = $this + 60 | 0;
   $601 = HEAP32[$600 >> 2] | 0;
   $602 = $this + 64 | 0;
   $603 = HEAP32[$602 >> 2] | 0;
   if (($601 | 0) == ($603 | 0)) {
    $608 = HEAP32[$0 >> 2] | 0;
    if (($608 | 0) > 0) HEAP32[$0 >> 2] = $608 + -1;
   } else {
    if (($603 | 0) < ($601 | 0)) {
     HEAP32[$602 >> 2] = $601;
     HEAP32[$600 >> 2] = $603;
     $606 = $603;
    } else $606 = $601;
    HEAP32[$0 >> 2] = $606;
    HEAP32[$602 >> 2] = $606;
    HEAP8[$this + 71 >> 0] = 0;
   }
   HEAP8[$this + 71 >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 239:
  {
   $612 = $this + 60 | 0;
   $613 = HEAP32[$612 >> 2] | 0;
   $614 = $this + 64 | 0;
   $615 = HEAP32[$614 >> 2] | 0;
   if (($613 | 0) == ($615 | 0)) {
    $629 = (HEAP32[$0 >> 2] | 0) + 1 | 0;
    HEAP32[$0 >> 2] = $629;
    $633 = $629;
    $str$idx29$val597$i = HEAP32[$this + 44 >> 2] | 0;
   } else {
    if (($615 | 0) < ($613 | 0)) {
     HEAP32[$614 >> 2] = $613;
     HEAP32[$612 >> 2] = $615;
     $619 = $615;
     $620 = $613;
    } else {
     $619 = $613;
     $620 = $615;
    }
    $str$idx$val$i102$i = HEAP32[$this + 44 >> 2] | 0;
    if (($619 | 0) == ($620 | 0)) $630 = $620; else {
     if (($619 | 0) > ($str$idx$val$i102$i | 0)) {
      HEAP32[$612 >> 2] = $str$idx$val$i102$i;
      $624 = $str$idx$val$i102$i;
     } else $624 = $619;
     if (($620 | 0) > ($str$idx$val$i102$i | 0)) {
      HEAP32[$614 >> 2] = $str$idx$val$i102$i;
      $625 = $str$idx$val$i102$i;
     } else $625 = $620;
     if (($624 | 0) == ($625 | 0)) {
      HEAP32[$0 >> 2] = $624;
      $630 = $624;
     } else $630 = $625;
    }
    if ((HEAP32[$0 >> 2] | 0) > ($str$idx$val$i102$i | 0)) HEAP32[$0 >> 2] = $str$idx$val$i102$i;
    HEAP32[$0 >> 2] = $630;
    HEAP32[$612 >> 2] = $630;
    HEAP8[$this + 71 >> 0] = 0;
    $633 = $630;
    $str$idx29$val597$i = $str$idx$val$i102$i;
   }
   if (($633 | 0) > ($str$idx29$val597$i | 0)) HEAP32[$0 >> 2] = $str$idx29$val597$i;
   HEAP8[$this + 71 >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 271:
  {
   $656 = $this + 60 | 0;
   $657 = HEAP32[$656 >> 2] | 0;
   $658 = $this + 64 | 0;
   $659 = HEAP32[$658 >> 2] | 0;
   if (($657 | 0) != ($659 | 0)) {
    if (($659 | 0) < ($657 | 0)) {
     HEAP32[$658 >> 2] = $657;
     HEAP32[$656 >> 2] = $659;
     $662 = $659;
    } else $662 = $657;
    HEAP32[$0 >> 2] = $662;
    HEAP32[$658 >> 2] = $662;
    HEAP8[$this + 71 >> 0] = 0;
    $1446 = $this + 3280 | 0;
    HEAP8[$1446 >> 0] = 1;
    $1447 = $this + 3276 | 0;
    HEAPF32[$1447 >> 2] = -.30000001192092896;
    STACKTOP = sp;
    return;
   }
   $c$0$in$i$i = HEAP32[$0 >> 2] | 0;
   while (1) {
    $c$0$i$i = $c$0$in$i$i + -1 | 0;
    if (($c$0$in$i$i | 0) <= 0) {
     $c$0$i$i$lcssa = $c$0$i$i;
     $c$0$in$i$i$lcssa = $c$0$in$i$i;
     break;
    }
    if (!(__ZN8ImGuiStbL16is_word_boundaryEP18ImGuiTextEditStatei($this, $c$0$i$i) | 0)) $c$0$in$i$i = $c$0$i$i; else {
     $c$0$i$i$lcssa = $c$0$i$i;
     $c$0$in$i$i$lcssa = $c$0$in$i$i;
     break;
    }
   }
   $$c$0$i$i = ($c$0$in$i$i$lcssa | 0) < 1 ? 0 : $c$0$i$i$lcssa;
   HEAP32[$0 >> 2] = $$c$0$i$i;
   $str$idx27$val$i = HEAP32[$this + 44 >> 2] | 0;
   $668 = HEAP32[$656 >> 2] | 0;
   $669 = HEAP32[$658 >> 2] | 0;
   if (($668 | 0) == ($669 | 0)) $677 = $$c$0$i$i; else {
    if (($668 | 0) > ($str$idx27$val$i | 0)) {
     HEAP32[$656 >> 2] = $str$idx27$val$i;
     $674 = $str$idx27$val$i;
    } else $674 = $668;
    if (($669 | 0) > ($str$idx27$val$i | 0)) {
     HEAP32[$658 >> 2] = $str$idx27$val$i;
     $675 = $str$idx27$val$i;
    } else $675 = $669;
    if (($674 | 0) == ($675 | 0)) {
     HEAP32[$0 >> 2] = $674;
     $677 = $674;
    } else $677 = $$c$0$i$i;
   }
   if (($677 | 0) <= ($str$idx27$val$i | 0)) {
    $1446 = $this + 3280 | 0;
    HEAP8[$1446 >> 0] = 1;
    $1447 = $this + 3276 | 0;
    HEAPF32[$1447 >> 2] = -.30000001192092896;
    STACKTOP = sp;
    return;
   }
   HEAP32[$0 >> 2] = $str$idx27$val$i;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 353:
  {
   $770 = ($$lcssa339 | 0) != 0;
   $771 = $this + 60 | 0;
   $772 = HEAP32[$771 >> 2] | 0;
   $773 = $this + 64 | 0;
   $774 = HEAP32[$773 >> 2] | 0;
   $775 = ($772 | 0) == ($774 | 0);
   do if ($770) {
    if ($775) {
     $776 = HEAP32[$0 >> 2] | 0;
     HEAP32[$773 >> 2] = $776;
     HEAP32[$771 >> 2] = $776;
     $$phi$trans$insert113$pre$phiZZZZ2D = $0;
     $$pre114 = $776;
     label = 370;
     break;
    }
    HEAP32[$0 >> 2] = $774;
    $str$idx22$i = $this + 44 | 0;
    $str$idx22$val$i = HEAP32[$str$idx22$i >> 2] | 0;
    if (($772 | 0) > ($str$idx22$val$i | 0)) {
     HEAP32[$771 >> 2] = $str$idx22$val$i;
     $793 = $str$idx22$val$i;
    } else $793 = $772;
    if (($774 | 0) > ($str$idx22$val$i | 0)) {
     HEAP32[$773 >> 2] = $str$idx22$val$i;
     $794 = $str$idx22$val$i;
    } else $794 = $774;
    if (($793 | 0) == ($794 | 0)) {
     HEAP32[$0 >> 2] = $793;
     $$pre$phiZ2D = $0;
     $796 = $793;
     $str$idx22$val602$i = $str$idx22$val$i;
     $str$idx22601$i = $str$idx22$i;
    } else {
     $$pre$phiZ2D = $0;
     $796 = $774;
     $str$idx22$val602$i = $str$idx22$val$i;
     $str$idx22601$i = $str$idx22$i;
    }
   } else {
    if ($775) {
     $$phi$trans$insert113$pre$phiZZZZ2D = $0;
     $$pre114 = HEAP32[$0 >> 2] | 0;
     label = 370;
     break;
    }
    if (($774 | 0) < ($772 | 0)) {
     HEAP32[$773 >> 2] = $772;
     HEAP32[$771 >> 2] = $774;
     $779 = $774;
     $780 = $772;
    } else {
     $779 = $772;
     $780 = $774;
    }
    $str$idx$i303$i = $this + 44 | 0;
    $str$idx$val$i304$i = HEAP32[$str$idx$i303$i >> 2] | 0;
    if (($779 | 0) == ($780 | 0)) $788 = $780; else {
     if (($779 | 0) > ($str$idx$val$i304$i | 0)) {
      HEAP32[$771 >> 2] = $str$idx$val$i304$i;
      $784 = $str$idx$val$i304$i;
     } else $784 = $779;
     if (($780 | 0) > ($str$idx$val$i304$i | 0)) {
      HEAP32[$773 >> 2] = $str$idx$val$i304$i;
      $785 = $str$idx$val$i304$i;
     } else $785 = $780;
     if (($784 | 0) == ($785 | 0)) {
      HEAP32[$0 >> 2] = $784;
      $788 = $784;
     } else $788 = $785;
    }
    if ((HEAP32[$0 >> 2] | 0) > ($str$idx$val$i304$i | 0)) HEAP32[$0 >> 2] = $str$idx$val$i304$i;
    HEAP32[$0 >> 2] = $788;
    HEAP32[$771 >> 2] = $788;
    HEAP8[$this + 71 >> 0] = 0;
    $$pre$phiZ2D = $0;
    $796 = $788;
    $str$idx22$val602$i = $str$idx$val$i304$i;
    $str$idx22601$i = $str$idx$i303$i;
   } while (0);
   if ((label | 0) == 370) {
    $str$idx22599$i = $this + 44 | 0;
    $$pre$phiZ2D = $$phi$trans$insert113$pre$phiZZZZ2D;
    $796 = $$pre114;
    $str$idx22$val602$i = HEAP32[$str$idx22599$i >> 2] | 0;
    $str$idx22601$i = $str$idx22599$i;
   }
   if (($796 | 0) > ($str$idx22$val602$i | 0)) {
    HEAP32[$$pre$phiZ2D >> 2] = $str$idx22$val602$i;
    $797 = $str$idx22$val602$i;
   } else $797 = $796;
   __ZN8ImGuiStbL25stb_textedit_find_charposEPNS_12StbFindStateEP18ImGuiTextEditStateii($find$i, $this, $797, 0);
   $799 = HEAP32[$find$i + 16 >> 2] | 0;
   if ($799 | 0) {
    $801 = $this + 71 | 0;
    if (!(HEAP8[$801 >> 0] | 0)) $847 = +HEAPF32[$find$i >> 2]; else $847 = +HEAPF32[$this + 76 >> 2];
    $809 = (HEAP32[$find$i + 12 >> 2] | 0) + $799 | 0;
    HEAP32[$$pre$phiZ2D >> 2] = $809;
    $str$idx12$val$i = HEAP32[$this + 12 >> 2] | 0;
    $str$idx13$val$i = HEAP32[$str$idx22601$i >> 2] | 0;
    $810 = $str$idx12$val$i + ($809 << 1) | 0;
    $811 = $str$idx12$val$i + ($str$idx13$val$i << 1) | 0;
    if (($809 | 0) < ($str$idx13$val$i | 0)) {
     $s$0$us$i$i486$i = $810;
     while (1) {
      $813 = $s$0$us$i$i486$i + 2 | 0;
      if ((HEAP16[$s$0$us$i$i486$i >> 1] | 0) != 10 & $813 >>> 0 < $811 >>> 0) $s$0$us$i$i486$i = $813; else {
       $s$1$i$i$i = $813;
       break;
      }
     }
    } else $s$1$i$i$i = $810;
    $818 = $s$1$i$i$i - $810 | 0;
    $819 = $818 >> 1;
    L63 : do if (($818 | 0) > 0) {
     $822 = HEAP32[$this + 4 >> 2] | 0;
     $823 = 152744;
     $824 = 152748;
     $849 = $809;
     $i$0484$i = 0;
     $x$0483$i = 0.0;
     while (1) {
      $825 = $i$0484$i + $809 | 0;
      if (($822 | 0) <= ($825 | 0)) break;
      $828 = HEAP16[$str$idx12$val$i + ($825 << 1) >> 1] | 0;
      if ($828 << 16 >> 16 == 10) {
       $1451 = $849;
       break L63;
      }
      $830 = HEAP32[$823 >> 2] | 0;
      $831 = $828 & 65535;
      if (($831 | 0) < (HEAP32[$830 + 60 >> 2] | 0)) $$in$i$i$i = (HEAP32[$830 + 68 >> 2] | 0) + ($831 << 2) | 0; else $$in$i$i$i = $830 + 56 | 0;
      $843 = +HEAPF32[$$in$i$i$i >> 2] * (+HEAPF32[$824 >> 2] / +HEAPF32[$830 >> 2]);
      if ($843 == -1.0) {
       $1451 = $849;
       break L63;
      }
      $x$0483$i = $x$0483$i + $843;
      if ($x$0483$i > $847) {
       $1451 = $849;
       break L63;
      }
      $848 = $849 + 1 | 0;
      HEAP32[$$pre$phiZ2D >> 2] = $848;
      $i$0484$i = $i$0484$i + 1 | 0;
      if (($i$0484$i | 0) >= ($819 | 0)) {
       $1451 = $848;
       break L63;
      } else $849 = $848;
     }
     ___assert_fail(127217, 127226, 805, 127272);
    } else $1451 = $809; while (0);
    $852 = HEAP32[$771 >> 2] | 0;
    $853 = HEAP32[$773 >> 2] | 0;
    if (($852 | 0) == ($853 | 0)) $861 = $1451; else {
     if (($852 | 0) > ($str$idx13$val$i | 0)) {
      HEAP32[$771 >> 2] = $str$idx13$val$i;
      $858 = $str$idx13$val$i;
     } else $858 = $852;
     if (($853 | 0) > ($str$idx13$val$i | 0)) {
      HEAP32[$773 >> 2] = $str$idx13$val$i;
      $859 = $str$idx13$val$i;
     } else $859 = $853;
     if (($858 | 0) == ($859 | 0)) {
      HEAP32[$$pre$phiZ2D >> 2] = $858;
      $861 = $858;
     } else $861 = $1451;
    }
    if (($861 | 0) > ($str$idx13$val$i | 0)) {
     HEAP32[$$pre$phiZ2D >> 2] = $str$idx13$val$i;
     $863 = $str$idx13$val$i;
    } else $863 = $861;
    HEAP8[$801 >> 0] = 1;
    HEAPF32[$this + 76 >> 2] = $847;
    if ($770) HEAP32[$773 >> 2] = $863;
   }
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 410:
  {
   $868 = ($$lcssa338 | 0) != 0;
   $869 = $this + 60 | 0;
   $870 = HEAP32[$869 >> 2] | 0;
   $871 = $this + 64 | 0;
   $872 = HEAP32[$871 >> 2] | 0;
   $873 = ($870 | 0) == ($872 | 0);
   do if ($868) {
    if ($873) {
     $874 = HEAP32[$0 >> 2] | 0;
     HEAP32[$871 >> 2] = $874;
     HEAP32[$869 >> 2] = $874;
     $$phi$trans$insert$pre$phiZZZZ2D = $0;
     $$pre = $874;
     label = 418;
     break;
    }
    HEAP32[$0 >> 2] = $872;
    $str$idx20$i = $this + 44 | 0;
    $str$idx20$val$i = HEAP32[$str$idx20$i >> 2] | 0;
    if (($870 | 0) > ($str$idx20$val$i | 0)) {
     HEAP32[$869 >> 2] = $str$idx20$val$i;
     $881 = $str$idx20$val$i;
    } else $881 = $870;
    if (($872 | 0) > ($str$idx20$val$i | 0)) {
     HEAP32[$871 >> 2] = $str$idx20$val$i;
     $882 = $str$idx20$val$i;
    } else $882 = $872;
    if (($881 | 0) == ($882 | 0)) {
     HEAP32[$0 >> 2] = $881;
     $$pre$phi121Z2D = $0;
     $884 = $881;
     $str$idx20$val607$i = $str$idx20$val$i;
     $str$idx20606$i = $str$idx20$i;
    } else {
     $$pre$phi121Z2D = $0;
     $884 = $872;
     $str$idx20$val607$i = $str$idx20$val$i;
     $str$idx20606$i = $str$idx20$i;
    }
   } else {
    if ($873) {
     $$phi$trans$insert$pre$phiZZZZ2D = $0;
     $$pre = HEAP32[$0 >> 2] | 0;
     label = 418;
     break;
    }
    if (($872 | 0) < ($870 | 0)) {
     HEAP32[$871 >> 2] = $870;
     HEAP32[$869 >> 2] = $872;
     $876 = $872;
    } else $876 = $870;
    HEAP32[$0 >> 2] = $876;
    HEAP32[$871 >> 2] = $876;
    HEAP8[$this + 71 >> 0] = 0;
    $$phi$trans$insert$pre$phiZZZZ2D = $0;
    $$pre = $876;
    label = 418;
   } while (0);
   if ((label | 0) == 418) {
    $str$idx20604$i = $this + 44 | 0;
    $$pre$phi121Z2D = $$phi$trans$insert$pre$phiZZZZ2D;
    $884 = $$pre;
    $str$idx20$val607$i = HEAP32[$str$idx20604$i >> 2] | 0;
    $str$idx20606$i = $str$idx20604$i;
   }
   if (($884 | 0) > ($str$idx20$val607$i | 0)) {
    HEAP32[$$pre$phi121Z2D >> 2] = $str$idx20$val607$i;
    $885 = $str$idx20$val607$i;
   } else $885 = $884;
   __ZN8ImGuiStbL25stb_textedit_find_charposEPNS_12StbFindStateEP18ImGuiTextEditStateii($find$i, $this, $885, 0);
   $887 = HEAP32[$find$i + 20 >> 2] | 0;
   if (($887 | 0) != (HEAP32[$find$i + 12 >> 2] | 0)) {
    $891 = $this + 71 | 0;
    if (!(HEAP8[$891 >> 0] | 0)) $934 = +HEAPF32[$find$i >> 2]; else $934 = +HEAPF32[$this + 76 >> 2];
    HEAP32[$$pre$phi121Z2D >> 2] = $887;
    $str$idx10$val$i = HEAP32[$this + 12 >> 2] | 0;
    $str$idx11$val$i = HEAP32[$str$idx20606$i >> 2] | 0;
    $897 = $str$idx10$val$i + ($887 << 1) | 0;
    $898 = $str$idx10$val$i + ($str$idx11$val$i << 1) | 0;
    if (($887 | 0) < ($str$idx11$val$i | 0)) {
     $s$0$us$i$i416493$i = $897;
     while (1) {
      $900 = $s$0$us$i$i416493$i + 2 | 0;
      if ((HEAP16[$s$0$us$i$i416493$i >> 1] | 0) != 10 & $900 >>> 0 < $898 >>> 0) $s$0$us$i$i416493$i = $900; else {
       $s$1$i$i420$i = $900;
       break;
      }
     }
    } else $s$1$i$i420$i = $897;
    $905 = $s$1$i$i420$i - $897 | 0;
    $906 = $905 >> 1;
    L129 : do if (($905 | 0) > 0) {
     $909 = HEAP32[$this + 4 >> 2] | 0;
     $910 = 152744;
     $911 = 152748;
     $936 = $887;
     $i5$0489$i = 0;
     $x8$0490$i = 0.0;
     while (1) {
      $912 = $i5$0489$i + $887 | 0;
      if (($909 | 0) <= ($912 | 0)) break;
      $915 = HEAP16[$str$idx10$val$i + ($912 << 1) >> 1] | 0;
      if ($915 << 16 >> 16 == 10) {
       $1452 = $936;
       break L129;
      }
      $917 = HEAP32[$910 >> 2] | 0;
      $918 = $915 & 65535;
      if (($918 | 0) < (HEAP32[$917 + 60 >> 2] | 0)) $$in$i$i404$i = (HEAP32[$917 + 68 >> 2] | 0) + ($918 << 2) | 0; else $$in$i$i404$i = $917 + 56 | 0;
      $930 = +HEAPF32[$$in$i$i404$i >> 2] * (+HEAPF32[$911 >> 2] / +HEAPF32[$917 >> 2]);
      if ($930 == -1.0) {
       $1452 = $936;
       break L129;
      }
      $x8$0490$i = $x8$0490$i + $930;
      if ($x8$0490$i > $934) {
       $1452 = $936;
       break L129;
      }
      $935 = $936 + 1 | 0;
      HEAP32[$$pre$phi121Z2D >> 2] = $935;
      $i5$0489$i = $i5$0489$i + 1 | 0;
      if (($i5$0489$i | 0) >= ($906 | 0)) {
       $1452 = $935;
       break L129;
      } else $936 = $935;
     }
     ___assert_fail(127217, 127226, 805, 127272);
    } else $1452 = $887; while (0);
    $939 = HEAP32[$869 >> 2] | 0;
    $940 = HEAP32[$871 >> 2] | 0;
    if (($939 | 0) == ($940 | 0)) $948 = $1452; else {
     if (($939 | 0) > ($str$idx11$val$i | 0)) {
      HEAP32[$869 >> 2] = $str$idx11$val$i;
      $945 = $str$idx11$val$i;
     } else $945 = $939;
     if (($940 | 0) > ($str$idx11$val$i | 0)) {
      HEAP32[$871 >> 2] = $str$idx11$val$i;
      $946 = $str$idx11$val$i;
     } else $946 = $940;
     if (($945 | 0) == ($946 | 0)) {
      HEAP32[$$pre$phi121Z2D >> 2] = $945;
      $948 = $945;
     } else $948 = $1452;
    }
    if (($948 | 0) > ($str$idx11$val$i | 0)) {
     HEAP32[$$pre$phi121Z2D >> 2] = $str$idx11$val$i;
     $950 = $str$idx11$val$i;
    } else $950 = $948;
    HEAP8[$891 >> 0] = 1;
    HEAPF32[$this + 76 >> 2] = $934;
    if ($868) HEAP32[$871 >> 2] = $950;
   }
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 631:
  {
   HEAP32[$this + 64 >> 2] = 0;
   HEAP32[$this + 60 >> 2] = 0;
   HEAP32[$0 >> 2] = 0;
   HEAP8[$this + 71 >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 632:
  {
   HEAP32[$0 >> 2] = HEAP32[$this + 44 >> 2];
   HEAP32[$this + 64 >> 2] = 0;
   HEAP32[$this + 60 >> 2] = 0;
   HEAP8[$this + 71 >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 641:
  {
   $str$idx17$val$i = HEAP32[$this + 44 >> 2] | 0;
   $1329 = $this + 60 | 0;
   $1330 = HEAP32[$1329 >> 2] | 0;
   $1331 = $this + 64 | 0;
   $1332 = HEAP32[$1331 >> 2] | 0;
   if (($1330 | 0) == ($1332 | 0)) {
    $1342 = $1330;
    $1343 = $1330;
   } else {
    if (($1330 | 0) > ($str$idx17$val$i | 0)) {
     HEAP32[$1329 >> 2] = $str$idx17$val$i;
     $1337 = $str$idx17$val$i;
    } else $1337 = $1330;
    if (($1332 | 0) > ($str$idx17$val$i | 0)) {
     HEAP32[$1331 >> 2] = $str$idx17$val$i;
     $1338 = $str$idx17$val$i;
    } else $1338 = $1332;
    if (($1337 | 0) == ($1338 | 0)) {
     HEAP32[$0 >> 2] = $1337;
     $1342 = $1337;
     $1343 = $1337;
    } else {
     $1342 = $1337;
     $1343 = $1338;
    }
   }
   $1339 = HEAP32[$0 >> 2] | 0;
   if (($1339 | 0) > ($str$idx17$val$i | 0)) {
    HEAP32[$0 >> 2] = $str$idx17$val$i;
    $1453 = $str$idx17$val$i;
   } else $1453 = $1339;
   if (($1342 | 0) == ($1343 | 0)) {
    $$pre$phi595$iZ2D = $this + 71 | 0;
    $1349 = $1453;
   } else {
    if (($1343 | 0) < ($1342 | 0)) {
     HEAP32[$1331 >> 2] = $1342;
     HEAP32[$1329 >> 2] = $1343;
     $1345 = $1343;
    } else $1345 = $1342;
    HEAP32[$0 >> 2] = $1345;
    HEAP32[$1331 >> 2] = $1345;
    $1346 = $this + 71 | 0;
    HEAP8[$1346 >> 0] = 0;
    $$pre$phi595$iZ2D = $1346;
    $1349 = $1345;
   }
   __ZN8ImGuiStbL25stb_textedit_find_charposEPNS_12StbFindStateEP18ImGuiTextEditStateii($find$i, $this, $1349, HEAPU8[$1 >> 0] | 0);
   HEAP32[$0 >> 2] = HEAP32[$find$i + 12 >> 2];
   HEAP8[$$pre$phi595$iZ2D >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 656:
  {
   $str$idx16$val$i = HEAP32[$this + 44 >> 2] | 0;
   $1352 = $this + 60 | 0;
   $1353 = HEAP32[$1352 >> 2] | 0;
   $1354 = $this + 64 | 0;
   $1355 = HEAP32[$1354 >> 2] | 0;
   if (($1353 | 0) == ($1355 | 0)) {
    $1365 = $1353;
    $1366 = $1353;
   } else {
    if (($1353 | 0) > ($str$idx16$val$i | 0)) {
     HEAP32[$1352 >> 2] = $str$idx16$val$i;
     $1360 = $str$idx16$val$i;
    } else $1360 = $1353;
    if (($1355 | 0) > ($str$idx16$val$i | 0)) {
     HEAP32[$1354 >> 2] = $str$idx16$val$i;
     $1361 = $str$idx16$val$i;
    } else $1361 = $1355;
    if (($1360 | 0) == ($1361 | 0)) {
     HEAP32[$0 >> 2] = $1360;
     $1365 = $1360;
     $1366 = $1360;
    } else {
     $1365 = $1360;
     $1366 = $1361;
    }
   }
   $1362 = HEAP32[$0 >> 2] | 0;
   if (($1362 | 0) > ($str$idx16$val$i | 0)) {
    HEAP32[$0 >> 2] = $str$idx16$val$i;
    $1454 = $str$idx16$val$i;
   } else $1454 = $1362;
   if (($1365 | 0) == ($1366 | 0)) $1372 = $1454; else {
    if (($1366 | 0) < ($1365 | 0)) {
     HEAP32[$1354 >> 2] = $1365;
     HEAP32[$1352 >> 2] = $1366;
     $1368 = $1366;
    } else $1368 = $1365;
    HEAP32[$0 >> 2] = $1368;
    HEAP32[$1354 >> 2] = $1368;
    HEAP8[$this + 71 >> 0] = 0;
    $1372 = $1368;
   }
   __ZN8ImGuiStbL25stb_textedit_find_charposEPNS_12StbFindStateEP18ImGuiTextEditStateii($find$i, $this, $1372, HEAPU8[$1 >> 0] | 0);
   $1376 = HEAP32[$find$i + 16 >> 2] | 0;
   $1377 = $1376 + (HEAP32[$find$i + 12 >> 2] | 0) | 0;
   HEAP32[$0 >> 2] = $1377;
   if (($1376 | 0) > 0) {
    $1379 = $1377 + -1 | 0;
    if ((HEAP32[$this + 4 >> 2] | 0) < ($1377 | 0)) ___assert_fail(127217, 127226, 806, 127272);
    if ((HEAP16[(HEAP32[$this + 12 >> 2] | 0) + ($1379 << 1) >> 1] | 0) == 10) HEAP32[$0 >> 2] = $1379;
   }
   HEAP8[$this + 71 >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 675:
  {
   $str$idx15$val$i = HEAP32[$this + 44 >> 2] | 0;
   $1389 = $this + 60 | 0;
   $1390 = HEAP32[$1389 >> 2] | 0;
   $1391 = $this + 64 | 0;
   $1392 = HEAP32[$1391 >> 2] | 0;
   if (($1390 | 0) == ($1392 | 0)) {
    $1402 = $1390;
    $1403 = $1390;
   } else {
    if (($1390 | 0) > ($str$idx15$val$i | 0)) {
     HEAP32[$1389 >> 2] = $str$idx15$val$i;
     $1397 = $str$idx15$val$i;
    } else $1397 = $1390;
    if (($1392 | 0) > ($str$idx15$val$i | 0)) {
     HEAP32[$1391 >> 2] = $str$idx15$val$i;
     $1398 = $str$idx15$val$i;
    } else $1398 = $1392;
    if (($1397 | 0) == ($1398 | 0)) {
     HEAP32[$0 >> 2] = $1397;
     $1402 = $1397;
     $1403 = $1397;
    } else {
     $1402 = $1397;
     $1403 = $1398;
    }
   }
   $1399 = HEAP32[$0 >> 2] | 0;
   if (($1399 | 0) > ($str$idx15$val$i | 0)) {
    HEAP32[$0 >> 2] = $str$idx15$val$i;
    $1404 = $str$idx15$val$i;
   } else $1404 = $1399;
   if (($1402 | 0) == ($1403 | 0)) {
    HEAP32[$1391 >> 2] = $1404;
    HEAP32[$1389 >> 2] = $1404;
    $1407 = $1404;
   } else {
    HEAP32[$0 >> 2] = $1403;
    $1407 = $1403;
   }
   __ZN8ImGuiStbL25stb_textedit_find_charposEPNS_12StbFindStateEP18ImGuiTextEditStateii($find$i, $this, $1407, HEAPU8[$1 >> 0] | 0);
   $1409 = HEAP32[$find$i + 12 >> 2] | 0;
   HEAP32[$1391 >> 2] = $1409;
   HEAP32[$0 >> 2] = $1409;
   HEAP8[$this + 71 >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 case 710:
  {
   switch ($$0$i | 0) {
   case 196616:
    {
     label = 457;
     break L13;
     break;
    }
   case 196617:
    {
     label = 543;
     break L13;
     break;
    }
   case 196620:
    {
     $710 = $this + 60 | 0;
     $712 = $this + 64 | 0;
     $715 = HEAP32[$0 >> 2] | 0;
     if ((HEAP32[$710 >> 2] | 0) == (HEAP32[$712 >> 2] | 0)) {
      HEAP32[$712 >> 2] = $715;
      HEAP32[$710 >> 2] = $715;
      $c$0$in$i197$i = $715;
     } else $c$0$in$i197$i = $715;
     while (1) {
      $c$0$i198$i = $c$0$in$i197$i + -1 | 0;
      if (($c$0$in$i197$i | 0) <= 0) {
       $c$0$i198$i$lcssa = $c$0$i198$i;
       $c$0$in$i197$i$lcssa = $c$0$in$i197$i;
       break;
      }
      if (!(__ZN8ImGuiStbL16is_word_boundaryEP18ImGuiTextEditStatei($this, $c$0$i198$i) | 0)) $c$0$in$i197$i = $c$0$i198$i; else {
       $c$0$i198$i$lcssa = $c$0$i198$i;
       $c$0$in$i197$i$lcssa = $c$0$in$i197$i;
       break;
      }
     }
     $$c$0$i199$i = ($c$0$in$i197$i$lcssa | 0) < 1 ? 0 : $c$0$i198$i$lcssa;
     HEAP32[$0 >> 2] = $$c$0$i199$i;
     HEAP32[$712 >> 2] = $$c$0$i199$i;
     $str$idx25$val$i = HEAP32[$this + 44 >> 2] | 0;
     $720 = HEAP32[$710 >> 2] | 0;
     if (($720 | 0) == ($$c$0$i199$i | 0)) $728 = $$c$0$i199$i; else {
      if (($720 | 0) > ($str$idx25$val$i | 0)) {
       HEAP32[$710 >> 2] = $str$idx25$val$i;
       $725 = $str$idx25$val$i;
      } else $725 = $720;
      if (($$c$0$i199$i | 0) > ($str$idx25$val$i | 0)) {
       HEAP32[$712 >> 2] = $str$idx25$val$i;
       $726 = $str$idx25$val$i;
      } else $726 = $$c$0$i199$i;
      if (($725 | 0) == ($726 | 0)) {
       HEAP32[$0 >> 2] = $725;
       $728 = $725;
      } else $728 = $$c$0$i199$i;
     }
     if (($728 | 0) <= ($str$idx25$val$i | 0)) {
      $1446 = $this + 3280 | 0;
      HEAP8[$1446 >> 0] = 1;
      $1447 = $this + 3276 | 0;
      HEAPF32[$1447 >> 2] = -.30000001192092896;
      STACKTOP = sp;
      return;
     }
     HEAP32[$0 >> 2] = $str$idx25$val$i;
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
   case 196621:
    {
     $729 = $this + 60 | 0;
     $731 = $this + 64 | 0;
     $734 = HEAP32[$0 >> 2] | 0;
     if ((HEAP32[$729 >> 2] | 0) == (HEAP32[$731 >> 2] | 0)) {
      HEAP32[$731 >> 2] = $734;
      HEAP32[$729 >> 2] = $734;
     }
     $_str$idx$i230$i = $this + 44 | 0;
     $_str$idx$val$i231$i = HEAP32[$_str$idx$i230$i >> 2] | 0;
     $c$0$in$i232$i = $734;
     while (1) {
      $c$0$i233$i = $c$0$in$i232$i + 1 | 0;
      if (($c$0$i233$i | 0) >= ($_str$idx$val$i231$i | 0)) {
       $c$0$i233$i$lcssa = $c$0$i233$i;
       $c$0$in$i232$i$lcssa = $c$0$in$i232$i;
       break;
      }
      if (!(__ZN8ImGuiStbL16is_word_boundaryEP18ImGuiTextEditStatei($this, $c$0$i233$i) | 0)) $c$0$in$i232$i = $c$0$i233$i; else {
       $c$0$i233$i$lcssa = $c$0$i233$i;
       $c$0$in$i232$i$lcssa = $c$0$in$i232$i;
       break;
      }
     }
     $c$0$$i234$i = ($c$0$in$i232$i$lcssa | 0) < ($_str$idx$val$i231$i | 0) ? $c$0$i233$i$lcssa : $_str$idx$val$i231$i;
     HEAP32[$0 >> 2] = $c$0$$i234$i;
     HEAP32[$731 >> 2] = $c$0$$i234$i;
     $str$idx24$val$i = HEAP32[$_str$idx$i230$i >> 2] | 0;
     $739 = HEAP32[$729 >> 2] | 0;
     if (($739 | 0) == ($c$0$$i234$i | 0)) $747 = $c$0$$i234$i; else {
      if (($739 | 0) > ($str$idx24$val$i | 0)) {
       HEAP32[$729 >> 2] = $str$idx24$val$i;
       $744 = $str$idx24$val$i;
      } else $744 = $739;
      if (($c$0$$i234$i | 0) > ($str$idx24$val$i | 0)) {
       HEAP32[$731 >> 2] = $str$idx24$val$i;
       $745 = $str$idx24$val$i;
      } else $745 = $c$0$$i234$i;
      if (($744 | 0) == ($745 | 0)) {
       HEAP32[$0 >> 2] = $744;
       $747 = $744;
      } else $747 = $c$0$$i234$i;
     }
     if (($747 | 0) <= ($str$idx24$val$i | 0)) {
      $1446 = $this + 3280 | 0;
      HEAP8[$1446 >> 0] = 1;
      $1447 = $this + 3276 | 0;
      HEAPF32[$1447 >> 2] = -.30000001192092896;
      STACKTOP = sp;
      return;
     }
     HEAP32[$0 >> 2] = $str$idx24$val$i;
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
   case 196614:
    {
     $1315 = $this + 60 | 0;
     $1317 = $this + 64 | 0;
     $1318 = HEAP32[$1317 >> 2] | 0;
     if ((HEAP32[$1315 >> 2] | 0) == ($1318 | 0)) {
      $1320 = HEAP32[$0 >> 2] | 0;
      HEAP32[$1317 >> 2] = $1320;
      HEAP32[$1315 >> 2] = $1320;
     } else HEAP32[$0 >> 2] = $1318;
     HEAP32[$1317 >> 2] = 0;
     HEAP32[$0 >> 2] = 0;
     HEAP8[$this + 71 >> 0] = 0;
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
   case 196615:
    {
     $1322 = $this + 60 | 0;
     $1324 = $this + 64 | 0;
     $1325 = HEAP32[$1324 >> 2] | 0;
     if ((HEAP32[$1322 >> 2] | 0) == ($1325 | 0)) {
      $1327 = HEAP32[$0 >> 2] | 0;
      HEAP32[$1324 >> 2] = $1327;
      HEAP32[$1322 >> 2] = $1327;
     } else HEAP32[$0 >> 2] = $1325;
     $str$idx$val$i = HEAP32[$this + 44 >> 2] | 0;
     HEAP32[$1324 >> 2] = $str$idx$val$i;
     HEAP32[$0 >> 2] = $str$idx$val$i;
     HEAP8[$this + 71 >> 0] = 0;
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
   case 196613:
    {
     $str$idx14$val$i = HEAP32[$this + 44 >> 2] | 0;
     $1411 = $this + 60 | 0;
     $1412 = HEAP32[$1411 >> 2] | 0;
     $1413 = $this + 64 | 0;
     $1414 = HEAP32[$1413 >> 2] | 0;
     if (($1412 | 0) == ($1414 | 0)) {
      $1424 = $1412;
      $1425 = $1412;
     } else {
      if (($1412 | 0) > ($str$idx14$val$i | 0)) {
       HEAP32[$1411 >> 2] = $str$idx14$val$i;
       $1419 = $str$idx14$val$i;
      } else $1419 = $1412;
      if (($1414 | 0) > ($str$idx14$val$i | 0)) {
       HEAP32[$1413 >> 2] = $str$idx14$val$i;
       $1420 = $str$idx14$val$i;
      } else $1420 = $1414;
      if (($1419 | 0) == ($1420 | 0)) {
       HEAP32[$0 >> 2] = $1419;
       $1424 = $1419;
       $1425 = $1419;
      } else {
       $1424 = $1419;
       $1425 = $1420;
      }
     }
     $1421 = HEAP32[$0 >> 2] | 0;
     if (($1421 | 0) > ($str$idx14$val$i | 0)) {
      HEAP32[$0 >> 2] = $str$idx14$val$i;
      $1426 = $str$idx14$val$i;
     } else $1426 = $1421;
     if (($1424 | 0) == ($1425 | 0)) {
      HEAP32[$1413 >> 2] = $1426;
      HEAP32[$1411 >> 2] = $1426;
      $1429 = $1426;
     } else {
      HEAP32[$0 >> 2] = $1425;
      $1429 = $1425;
     }
     __ZN8ImGuiStbL25stb_textedit_find_charposEPNS_12StbFindStateEP18ImGuiTextEditStateii($find$i, $this, $1429, HEAPU8[$1 >> 0] | 0);
     $1433 = HEAP32[$find$i + 16 >> 2] | 0;
     $1434 = $1433 + (HEAP32[$find$i + 12 >> 2] | 0) | 0;
     HEAP32[$1413 >> 2] = $1434;
     HEAP32[$0 >> 2] = $1434;
     if (($1433 | 0) > 0) {
      $1436 = $1434 + -1 | 0;
      if ((HEAP32[$this + 4 >> 2] | 0) < ($1434 | 0)) ___assert_fail(127217, 127226, 806, 127272);
      if ((HEAP16[(HEAP32[$this + 12 >> 2] | 0) + ($1436 << 1) >> 1] | 0) == 10) {
       HEAP32[$1413 >> 2] = $1436;
       HEAP32[$0 >> 2] = $1436;
      }
     }
     HEAP8[$this + 71 >> 0] = 0;
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
   default:
    {
     $$0$i$lcssa = $$0$i;
     label = 3;
     break L13;
    }
   }
   break;
  }
 case 711:
  {
   if (($$0$i | 0) < 196608) {
    switch ($$0$i | 0) {
    case 65549:
     break;
    default:
     {
      $$0$i$lcssa = $$0$i;
      label = 3;
      break L13;
     }
    }
    $678 = $this + 60 | 0;
    $679 = HEAP32[$678 >> 2] | 0;
    $680 = $this + 64 | 0;
    $681 = HEAP32[$680 >> 2] | 0;
    if (($679 | 0) != ($681 | 0)) {
     if (($681 | 0) < ($679 | 0)) {
      HEAP32[$680 >> 2] = $679;
      HEAP32[$678 >> 2] = $681;
      $685 = $681;
      $686 = $679;
     } else {
      $685 = $679;
      $686 = $681;
     }
     $str$idx$val$i177$i = HEAP32[$this + 44 >> 2] | 0;
     if (($685 | 0) == ($686 | 0)) $694 = $686; else {
      if (($685 | 0) > ($str$idx$val$i177$i | 0)) {
       HEAP32[$678 >> 2] = $str$idx$val$i177$i;
       $690 = $str$idx$val$i177$i;
      } else $690 = $685;
      if (($686 | 0) > ($str$idx$val$i177$i | 0)) {
       HEAP32[$680 >> 2] = $str$idx$val$i177$i;
       $691 = $str$idx$val$i177$i;
      } else $691 = $686;
      if (($690 | 0) == ($691 | 0)) {
       HEAP32[$0 >> 2] = $690;
       $694 = $690;
      } else $694 = $691;
     }
     if ((HEAP32[$0 >> 2] | 0) > ($str$idx$val$i177$i | 0)) HEAP32[$0 >> 2] = $str$idx$val$i177$i;
     HEAP32[$0 >> 2] = $694;
     HEAP32[$678 >> 2] = $694;
     HEAP8[$this + 71 >> 0] = 0;
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
    $_str$idx$i$i = $this + 44 | 0;
    $_str$idx$val$i$i = HEAP32[$_str$idx$i$i >> 2] | 0;
    $c$0$in$i181$i = HEAP32[$0 >> 2] | 0;
    while (1) {
     $c$0$i182$i = $c$0$in$i181$i + 1 | 0;
     if (($c$0$i182$i | 0) >= ($_str$idx$val$i$i | 0)) {
      $c$0$i182$i$lcssa = $c$0$i182$i;
      $c$0$in$i181$i$lcssa = $c$0$in$i181$i;
      break;
     }
     if (!(__ZN8ImGuiStbL16is_word_boundaryEP18ImGuiTextEditStatei($this, $c$0$i182$i) | 0)) $c$0$in$i181$i = $c$0$i182$i; else {
      $c$0$i182$i$lcssa = $c$0$i182$i;
      $c$0$in$i181$i$lcssa = $c$0$in$i181$i;
      break;
     }
    }
    $c$0$$i$i = ($c$0$in$i181$i$lcssa | 0) < ($_str$idx$val$i$i | 0) ? $c$0$i182$i$lcssa : $_str$idx$val$i$i;
    HEAP32[$0 >> 2] = $c$0$$i$i;
    $str$idx26$val$i = HEAP32[$_str$idx$i$i >> 2] | 0;
    $700 = HEAP32[$678 >> 2] | 0;
    $701 = HEAP32[$680 >> 2] | 0;
    if (($700 | 0) == ($701 | 0)) $709 = $c$0$$i$i; else {
     if (($700 | 0) > ($str$idx26$val$i | 0)) {
      HEAP32[$678 >> 2] = $str$idx26$val$i;
      $706 = $str$idx26$val$i;
     } else $706 = $700;
     if (($701 | 0) > ($str$idx26$val$i | 0)) {
      HEAP32[$680 >> 2] = $str$idx26$val$i;
      $707 = $str$idx26$val$i;
     } else $707 = $701;
     if (($706 | 0) == ($707 | 0)) {
      HEAP32[$0 >> 2] = $706;
      $709 = $706;
     } else $709 = $c$0$$i$i;
    }
    if (($709 | 0) <= ($str$idx26$val$i | 0)) {
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
    HEAP32[$0 >> 2] = $str$idx26$val$i;
    $1446 = $this + 3280 | 0;
    HEAP8[$1446 >> 0] = 1;
    $1447 = $this + 3276 | 0;
    HEAPF32[$1447 >> 2] = -.30000001192092896;
    STACKTOP = sp;
    return;
   }
   switch ($$0$i | 0) {
   case 196608:
    break;
   case 196609:
    {
     $748 = $this + 60 | 0;
     $749 = HEAP32[$748 >> 2] | 0;
     $750 = $this + 64 | 0;
     $751 = HEAP32[$750 >> 2] | 0;
     if (($749 | 0) == ($751 | 0)) {
      $753 = HEAP32[$0 >> 2] | 0;
      HEAP32[$750 >> 2] = $753;
      HEAP32[$748 >> 2] = $753;
      $755 = $753;
      $757 = $753;
     } else {
      HEAP32[$0 >> 2] = $751;
      $755 = $751;
      $757 = $749;
     }
     $754 = $755 + 1 | 0;
     HEAP32[$750 >> 2] = $754;
     $str$idx23$val$i = HEAP32[$this + 44 >> 2] | 0;
     if (($757 | 0) == ($754 | 0)) {
      $764 = $755;
      $765 = $757;
     } else {
      if (($757 | 0) > ($str$idx23$val$i | 0)) {
       HEAP32[$748 >> 2] = $str$idx23$val$i;
       $761 = $str$idx23$val$i;
      } else $761 = $757;
      if (($755 | 0) < ($str$idx23$val$i | 0)) $762 = $754; else {
       HEAP32[$750 >> 2] = $str$idx23$val$i;
       $762 = $str$idx23$val$i;
      }
      if (($761 | 0) == ($762 | 0)) {
       HEAP32[$0 >> 2] = $761;
       $764 = $761;
       $765 = $761;
      } else {
       $764 = $755;
       $765 = $762;
      }
     }
     if (($764 | 0) > ($str$idx23$val$i | 0)) HEAP32[$0 >> 2] = $str$idx23$val$i;
     HEAP32[$0 >> 2] = $765;
     HEAP8[$this + 71 >> 0] = 0;
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
   default:
    {
     $$0$i$lcssa = $$0$i;
     label = 3;
     break L13;
    }
   }
   $str$idx28$val$i = HEAP32[$this + 44 >> 2] | 0;
   $635 = $this + 60 | 0;
   $636 = HEAP32[$635 >> 2] | 0;
   $637 = $this + 64 | 0;
   $638 = HEAP32[$637 >> 2] | 0;
   if (($636 | 0) == ($638 | 0)) {
    $648 = $636;
    $649 = $636;
   } else {
    if (($636 | 0) > ($str$idx28$val$i | 0)) {
     HEAP32[$635 >> 2] = $str$idx28$val$i;
     $643 = $str$idx28$val$i;
    } else $643 = $636;
    if (($638 | 0) > ($str$idx28$val$i | 0)) {
     HEAP32[$637 >> 2] = $str$idx28$val$i;
     $644 = $str$idx28$val$i;
    } else $644 = $638;
    if (($643 | 0) == ($644 | 0)) {
     HEAP32[$0 >> 2] = $643;
     $648 = $643;
     $649 = $643;
    } else {
     $648 = $643;
     $649 = $644;
    }
   }
   $645 = HEAP32[$0 >> 2] | 0;
   if (($645 | 0) > ($str$idx28$val$i | 0)) {
    HEAP32[$0 >> 2] = $str$idx28$val$i;
    $650 = $str$idx28$val$i;
   } else $650 = $645;
   if (($648 | 0) == ($649 | 0)) {
    HEAP32[$637 >> 2] = $650;
    HEAP32[$635 >> 2] = $650;
    $652 = $650;
   } else {
    HEAP32[$0 >> 2] = $649;
    $652 = $649;
   }
   if (($652 | 0) > 0) {
    $653 = $652 + -1 | 0;
    HEAP32[$637 >> 2] = $653;
    $654 = $653;
   } else $654 = $652;
   HEAP32[$0 >> 2] = $654;
   HEAP8[$this + 71 >> 0] = 0;
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
 }
 if ((label | 0) == 3) {
  $3 = ($$0$i$lcssa | 0) > 65535 ? 0 : $$0$i$lcssa;
  if (($3 | 0) <= 0) {
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
  $5 = $3 & 65535;
  if (($3 | 0) == 10) if (HEAP8[$1 >> 0] | 0) {
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
  $$pre588$i = $this + 60 | 0;
  do if (!(HEAP8[$this + 68 >> 0] | 0)) {
   $$pre590$i = $this + 64 | 0;
   $$pre$phi591$iZ2D = $$pre590$i;
   $84 = HEAP32[$$pre588$i >> 2] | 0;
   $85 = HEAP32[$$pre590$i >> 2] | 0;
   label = 40;
  } else {
   $12 = HEAP32[$$pre588$i >> 2] | 0;
   $13 = $this + 64 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   if (($12 | 0) == ($14 | 0)) {
    $16 = HEAP32[$0 >> 2] | 0;
    $str$idx9$i = $this + 44 | 0;
    if (($16 | 0) >= (HEAP32[$str$idx9$i >> 2] | 0)) {
     $str$idx$i$i122 = $this + 44 | 0;
     $$pre$phi591$i124Z2D = $13;
     $94 = $12;
     $95 = $12;
     $str$idx$i$i125 = $str$idx$i$i122;
     $str$idx$val$i$i128 = HEAP32[$str$idx$i$i122 >> 2] | 0;
     break;
    }
    $19 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, $16, 1, 1) | 0;
    do if (!$19) {
     $$phi$trans$insert566$i = $this + 12 | 0;
     $$pre$phi574$iZ2D = $$phi$trans$insert566$i;
     $30 = HEAP32[$$phi$trans$insert566$i >> 2] | 0;
    } else if ((HEAP32[$this + 4 >> 2] | 0) > ($16 | 0)) {
     $24 = $this + 12 | 0;
     $25 = HEAP32[$24 >> 2] | 0;
     HEAP16[$19 >> 1] = HEAP16[$25 + ($16 << 1) >> 1] | 0;
     $$pre$phi574$iZ2D = $24;
     $30 = $25;
     break;
    } else ___assert_fail(127217, 127226, 806, 127272); while (0);
    $28 = HEAP32[$0 >> 2] | 0;
    $29 = $30 + ($28 << 1) | 0;
    $31 = $29 + 2 | 0;
    $$03$i$i$i = $29;
    $bytes_count$02$i$i$i = 0;
    while (1) {
     $32 = HEAP16[$$03$i$i$i >> 1] | 0;
     if (!($32 << 16 >> 16)) {
      $bytes_count$0$lcssa$i$i$i = $bytes_count$02$i$i$i;
      break;
     }
     $$03$i$i$i$looptemp = $$03$i$i$i;
     $$03$i$i$i = $$03$i$i$i + 2 | 0;
     if (($32 & 65535) < 128) $bytes_count$0$be$i$i$i = $bytes_count$02$i$i$i + 1 | 0; else {
      if (($32 & 65535) < 2048) $$0$i$i$i$i = 2; else {
       $39 = $32 & 64512;
       if (($39 | 0) == 56320) $$0$i$i$i$i = 0; else $$0$i$i$i$i = ($39 | 0) == 55296 ? 4 : 3;
      }
      $bytes_count$0$be$i$i$i = $$0$i$i$i$i + $bytes_count$02$i$i$i | 0;
     }
     if ($$03$i$i$i$looptemp >>> 0 >= $29 >>> 0) {
      $bytes_count$0$lcssa$i$i$i = $bytes_count$0$be$i$i$i;
      break;
     } else $bytes_count$02$i$i$i = $bytes_count$0$be$i$i$i;
    }
    $44 = $this + 40 | 0;
    $46 = (HEAP32[$44 >> 2] | 0) - $bytes_count$0$lcssa$i$i$i | 0;
    HEAP32[$44 >> 2] = $46;
    $47 = HEAP32[$str$idx9$i >> 2] | 0;
    $48 = $47 + -1 | 0;
    HEAP32[$str$idx9$i >> 2] = $48;
    $49 = HEAP16[$31 >> 1] | 0;
    if (!($49 << 16 >> 16)) $dst$0$lcssa$i$i = $29; else {
     $53 = $49;
     $dst$03$i$i = $29;
     $src$02$i$i = $31;
     while (1) {
      $src$02$i$i = $src$02$i$i + 2 | 0;
      $52 = $dst$03$i$i + 2 | 0;
      HEAP16[$dst$03$i$i >> 1] = $53;
      $53 = HEAP16[$src$02$i$i >> 1] | 0;
      if (!($53 << 16 >> 16)) {
       $dst$0$lcssa$i$i = $52;
       break;
      } else $dst$03$i$i = $52;
     }
    }
    HEAP16[$dst$0$lcssa$i$i >> 1] = 0;
    $56 = $this + 4 | 0;
    if (($47 | 0) >= (HEAP32[$56 >> 2] | 0)) {
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
    if (!($5 << 16 >> 16)) $bytes_count$0$lcssa$i168$i = 0; else if (($5 & 65535) < 128) $bytes_count$0$lcssa$i168$i = 1; else if (($5 & 65535) < 2048) $bytes_count$0$lcssa$i168$i = 2; else {
     $62 = $3 & 64512;
     if (($62 | 0) == 56320) $bytes_count$0$lcssa$i168$i = 0; else $bytes_count$0$lcssa$i168$i = ($62 | 0) == 55296 ? 4 : 3;
    }
    if (($bytes_count$0$lcssa$i168$i + $46 | 0) >= (HEAP32[$this + 48 >> 2] | 0)) {
     $1446 = $this + 3280 | 0;
     HEAP8[$1446 >> 0] = 1;
     $1447 = $this + 3276 | 0;
     HEAPF32[$1447 >> 2] = -.30000001192092896;
     STACKTOP = sp;
     return;
    }
    if (($48 | 0) == ($28 | 0)) $$pre$phi2$i$iZ2D = $29; else {
     _memmove($31 | 0, $29 | 0, $48 - $28 << 1 | 0) | 0;
     $$pre$phi2$i$iZ2D = $29;
    }
    HEAP16[$$pre$phi2$i$iZ2D >> 1] = $5;
    $73 = (HEAP32[$str$idx9$i >> 2] | 0) + 1 | 0;
    HEAP32[$str$idx9$i >> 2] = $73;
    HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + $bytes_count$0$lcssa$i168$i;
    if ((HEAP32[$56 >> 2] | 0) <= ($73 | 0)) ___assert_fail(127217, 127226, 805, 127272);
    HEAP16[(HEAP32[$$pre$phi574$iZ2D >> 2] | 0) + ($73 << 1) >> 1] = 0;
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
    HEAP8[$this + 71 >> 0] = 0;
    $1446 = $this + 3280 | 0;
    HEAP8[$1446 >> 0] = 1;
    $1447 = $this + 3276 | 0;
    HEAPF32[$1447 >> 2] = -.30000001192092896;
    STACKTOP = sp;
    return;
   } else {
    $$pre$phi591$iZ2D = $13;
    $84 = $12;
    $85 = $14;
    label = 40;
   }
  } while (0);
  if ((label | 0) == 40) {
   $str$idx$i$i = $this + 44 | 0;
   $str$idx$val$i$i = HEAP32[$str$idx$i$i >> 2] | 0;
   if (($84 | 0) == ($85 | 0)) {
    $$pre$phi591$i124Z2D = $$pre$phi591$iZ2D;
    $94 = $85;
    $95 = $85;
    $str$idx$i$i125 = $str$idx$i$i;
    $str$idx$val$i$i128 = $str$idx$val$i$i;
   } else {
    if (($84 | 0) > ($str$idx$val$i$i | 0)) {
     HEAP32[$$pre588$i >> 2] = $str$idx$val$i$i;
     $89 = $str$idx$val$i$i;
    } else $89 = $84;
    if (($85 | 0) > ($str$idx$val$i$i | 0)) {
     HEAP32[$$pre$phi591$iZ2D >> 2] = $str$idx$val$i$i;
     $90 = $str$idx$val$i$i;
    } else $90 = $85;
    if (($89 | 0) == ($90 | 0)) {
     HEAP32[$0 >> 2] = $89;
     $$pre$phi591$i124Z2D = $$pre$phi591$iZ2D;
     $94 = $89;
     $95 = $89;
     $str$idx$i$i125 = $str$idx$i$i;
     $str$idx$val$i$i128 = $str$idx$val$i$i;
    } else {
     $$pre$phi591$i124Z2D = $$pre$phi591$iZ2D;
     $94 = $89;
     $95 = $90;
     $str$idx$i$i125 = $str$idx$i$i;
     $str$idx$val$i$i128 = $str$idx$val$i$i;
    }
   }
  }
  $91 = HEAP32[$0 >> 2] | 0;
  if (($91 | 0) > ($str$idx$val$i$i128 | 0)) {
   HEAP32[$0 >> 2] = $str$idx$val$i$i128;
   $1448 = $str$idx$val$i$i128;
  } else $1448 = $91;
  if (($94 | 0) == ($95 | 0)) {
   $218 = $str$idx$val$i$i128;
   $237 = $1448;
  } else {
   if (($94 | 0) < ($95 | 0)) {
    $97 = $95 - $94 | 0;
    $99 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, $94, $97, 0) | 0;
    $101 = ($97 | 0) > 0;
    L701 : do if ($101 & ($99 | 0) != 0) {
     $103 = HEAP32[$this + 4 >> 2] | 0;
     $104 = $this + 12 | 0;
     $i$01$i$i$i = 0;
     while (1) {
      $105 = $i$01$i$i$i + $94 | 0;
      if (($103 | 0) <= ($105 | 0)) break;
      $107 = HEAP32[$104 >> 2] | 0;
      HEAP16[$99 + ($i$01$i$i$i << 1) >> 1] = HEAP16[$107 + ($105 << 1) >> 1] | 0;
      $i$01$i$i$i = $i$01$i$i$i + 1 | 0;
      if (($i$01$i$i$i | 0) >= ($97 | 0)) {
       $114 = $107;
       break L701;
      }
     }
     ___assert_fail(127217, 127226, 806, 127272);
    } else $114 = HEAP32[$this + 12 >> 2] | 0; while (0);
    $113 = $114 + ($94 << 1) | 0;
    $115 = $113 + ($97 << 1) | 0;
    $116 = ($115 | 0) == 0;
    L709 : do if ($101 | $116) if ($116) {
     $117 = HEAP16[$113 >> 1] | 0;
     if (!($117 << 16 >> 16)) {
      $bytes_count$0$lcssa$i$i116$i = 0;
      break;
     } else {
      $$03$us$i4$i$i = $113;
      $121 = $117;
      $bytes_count$02$us$i5$i$i = 0;
     }
     while (1) {
      $$03$us$i4$i$i = $$03$us$i4$i$i + 2 | 0;
      if (($121 & 65535) < 128) $bytes_count$02$us$i$be$i$i = $bytes_count$02$us$i5$i$i + 1 | 0; else {
       do if (($121 & 65535) < 2048) $$0$i$us$i$i$i = 2; else {
        $124 = $121 & 64512;
        if (($124 | 0) == 56320) {
         $$0$i$us$i$i$i = 0;
         break;
        }
        $$0$i$us$i$i$i = ($124 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$02$us$i$be$i$i = $$0$i$us$i$i$i + $bytes_count$02$us$i5$i$i | 0;
      }
      $121 = HEAP16[$$03$us$i4$i$i >> 1] | 0;
      if (!($121 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i116$i = $bytes_count$02$us$i$be$i$i;
       break;
      } else $bytes_count$02$us$i5$i$i = $bytes_count$02$us$i$be$i$i;
     }
    } else {
     $$03$i$i108$i = $113;
     $bytes_count$02$i$i109$i = 0;
     while (1) {
      $131 = HEAP16[$$03$i$i108$i >> 1] | 0;
      if (!($131 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i116$i = $bytes_count$02$i$i109$i;
       break L709;
      }
      $$03$i$i108$i = $$03$i$i108$i + 2 | 0;
      if (($131 & 65535) < 128) $bytes_count$0$be$i$i114$i = $bytes_count$02$i$i109$i + 1 | 0; else {
       do if (($131 & 65535) < 2048) $$0$i$i$i112$i = 2; else {
        $138 = $131 & 64512;
        if (($138 | 0) == 56320) {
         $$0$i$i$i112$i = 0;
         break;
        }
        $$0$i$i$i112$i = ($138 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$0$be$i$i114$i = $$0$i$i$i112$i + $bytes_count$02$i$i109$i | 0;
      }
      if ($$03$i$i108$i >>> 0 >= $115 >>> 0) {
       $bytes_count$0$lcssa$i$i116$i = $bytes_count$0$be$i$i114$i;
       break;
      } else $bytes_count$02$i$i109$i = $bytes_count$0$be$i$i114$i;
     }
    } else $bytes_count$0$lcssa$i$i116$i = 0; while (0);
    $143 = $this + 40 | 0;
    HEAP32[$143 >> 2] = (HEAP32[$143 >> 2] | 0) - $bytes_count$0$lcssa$i$i116$i;
    $147 = (HEAP32[$str$idx$i$i125 >> 2] | 0) - $97 | 0;
    HEAP32[$str$idx$i$i125 >> 2] = $147;
    $148 = HEAP16[$115 >> 1] | 0;
    if (!($148 << 16 >> 16)) $dst$0$lcssa$i121$i = $113; else {
     $152 = $148;
     $dst$03$i118$i = $113;
     $src$02$i119$i = $115;
     while (1) {
      $src$02$i119$i = $src$02$i119$i + 2 | 0;
      $151 = $dst$03$i118$i + 2 | 0;
      HEAP16[$dst$03$i118$i >> 1] = $152;
      $152 = HEAP16[$src$02$i119$i >> 1] | 0;
      if (!($152 << 16 >> 16)) {
       $dst$0$lcssa$i121$i = $151;
       break;
      } else $dst$03$i118$i = $151;
     }
    }
    HEAP16[$dst$0$lcssa$i121$i >> 1] = 0;
    $155 = $this + 71 | 0;
    HEAP8[$155 >> 0] = 0;
    $156 = HEAP32[$$pre588$i >> 2] | 0;
    HEAP32[$0 >> 2] = $156;
    HEAP32[$$pre$phi591$i124Z2D >> 2] = $156;
    $$pre$phi572$iZ2D = $155;
    $1449 = $147;
    $1450 = $156;
   } else {
    $157 = $94 - $95 | 0;
    $159 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, $95, $157, 0) | 0;
    $161 = ($157 | 0) > 0;
    L740 : do if ($161 & ($159 | 0) != 0) {
     $163 = HEAP32[$this + 4 >> 2] | 0;
     $164 = $this + 12 | 0;
     $i$01$i$i127$i = 0;
     while (1) {
      $165 = $i$01$i$i127$i + $95 | 0;
      if (($163 | 0) <= ($165 | 0)) break;
      $167 = HEAP32[$164 >> 2] | 0;
      HEAP16[$159 + ($i$01$i$i127$i << 1) >> 1] = HEAP16[$167 + ($165 << 1) >> 1] | 0;
      $i$01$i$i127$i = $i$01$i$i127$i + 1 | 0;
      if (($i$01$i$i127$i | 0) >= ($157 | 0)) {
       $174 = $167;
       break L740;
      }
     }
     ___assert_fail(127217, 127226, 806, 127272);
    } else $174 = HEAP32[$this + 12 >> 2] | 0; while (0);
    $173 = $174 + ($95 << 1) | 0;
    $175 = $173 + ($157 << 1) | 0;
    $176 = ($175 | 0) == 0;
    L748 : do if ($161 | $176) if ($176) {
     $177 = HEAP16[$173 >> 1] | 0;
     if (!($177 << 16 >> 16)) {
      $bytes_count$0$lcssa$i$i149$i = 0;
      break;
     } else {
      $$03$us$i4$i134$i = $173;
      $181 = $177;
      $bytes_count$02$us$i5$i133$i = 0;
     }
     while (1) {
      $$03$us$i4$i134$i = $$03$us$i4$i134$i + 2 | 0;
      if (($181 & 65535) < 128) $bytes_count$02$us$i$be$i139$i = $bytes_count$02$us$i5$i133$i + 1 | 0; else {
       do if (($181 & 65535) < 2048) $$0$i$us$i$i137$i = 2; else {
        $184 = $181 & 64512;
        if (($184 | 0) == 56320) {
         $$0$i$us$i$i137$i = 0;
         break;
        }
        $$0$i$us$i$i137$i = ($184 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$02$us$i$be$i139$i = $$0$i$us$i$i137$i + $bytes_count$02$us$i5$i133$i | 0;
      }
      $181 = HEAP16[$$03$us$i4$i134$i >> 1] | 0;
      if (!($181 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i149$i = $bytes_count$02$us$i$be$i139$i;
       break;
      } else $bytes_count$02$us$i5$i133$i = $bytes_count$02$us$i$be$i139$i;
     }
    } else {
     $$03$i$i141$i = $173;
     $bytes_count$02$i$i142$i = 0;
     while (1) {
      $191 = HEAP16[$$03$i$i141$i >> 1] | 0;
      if (!($191 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i149$i = $bytes_count$02$i$i142$i;
       break L748;
      }
      $$03$i$i141$i = $$03$i$i141$i + 2 | 0;
      if (($191 & 65535) < 128) $bytes_count$0$be$i$i147$i = $bytes_count$02$i$i142$i + 1 | 0; else {
       do if (($191 & 65535) < 2048) $$0$i$i$i145$i = 2; else {
        $198 = $191 & 64512;
        if (($198 | 0) == 56320) {
         $$0$i$i$i145$i = 0;
         break;
        }
        $$0$i$i$i145$i = ($198 | 0) == 55296 ? 4 : 3;
       } while (0);
       $bytes_count$0$be$i$i147$i = $$0$i$i$i145$i + $bytes_count$02$i$i142$i | 0;
      }
      if ($$03$i$i141$i >>> 0 >= $175 >>> 0) {
       $bytes_count$0$lcssa$i$i149$i = $bytes_count$0$be$i$i147$i;
       break;
      } else $bytes_count$02$i$i142$i = $bytes_count$0$be$i$i147$i;
     }
    } else $bytes_count$0$lcssa$i$i149$i = 0; while (0);
    $203 = $this + 40 | 0;
    HEAP32[$203 >> 2] = (HEAP32[$203 >> 2] | 0) - $bytes_count$0$lcssa$i$i149$i;
    $207 = (HEAP32[$str$idx$i$i125 >> 2] | 0) - $157 | 0;
    HEAP32[$str$idx$i$i125 >> 2] = $207;
    $208 = HEAP16[$175 >> 1] | 0;
    if (!($208 << 16 >> 16)) $dst$0$lcssa$i154$i = $173; else {
     $212 = $208;
     $dst$03$i151$i = $173;
     $src$02$i152$i = $175;
     while (1) {
      $src$02$i152$i = $src$02$i152$i + 2 | 0;
      $211 = $dst$03$i151$i + 2 | 0;
      HEAP16[$dst$03$i151$i >> 1] = $212;
      $212 = HEAP16[$src$02$i152$i >> 1] | 0;
      if (!($212 << 16 >> 16)) {
       $dst$0$lcssa$i154$i = $211;
       break;
      } else $dst$03$i151$i = $211;
     }
    }
    HEAP16[$dst$0$lcssa$i154$i >> 1] = 0;
    $215 = $this + 71 | 0;
    HEAP8[$215 >> 0] = 0;
    $216 = HEAP32[$$pre$phi591$i124Z2D >> 2] | 0;
    HEAP32[$0 >> 2] = $216;
    HEAP32[$$pre588$i >> 2] = $216;
    $$pre$phi572$iZ2D = $215;
    $1449 = $207;
    $1450 = $216;
   }
   HEAP8[$$pre$phi572$iZ2D >> 0] = 0;
   $218 = $1449;
   $237 = $1450;
  }
  $219 = $this + 4 | 0;
  if (($218 + 1 | 0) >= (HEAP32[$219 >> 2] | 0)) {
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
  if (!($5 << 16 >> 16)) $bytes_count$0$lcssa$i$i = 0; else if (($5 & 65535) < 128) $bytes_count$0$lcssa$i$i = 1; else if (($5 & 65535) < 2048) $bytes_count$0$lcssa$i$i = 2; else {
   $225 = $3 & 64512;
   if (($225 | 0) == 56320) $bytes_count$0$lcssa$i$i = 0; else $bytes_count$0$lcssa$i$i = ($225 | 0) == 55296 ? 4 : 3;
  }
  $228 = $this + 40 | 0;
  if (((HEAP32[$228 >> 2] | 0) + $bytes_count$0$lcssa$i$i | 0) >= (HEAP32[$this + 48 >> 2] | 0)) {
   $1446 = $this + 3280 | 0;
   HEAP8[$1446 >> 0] = 1;
   $1447 = $this + 3276 | 0;
   HEAPF32[$1447 >> 2] = -.30000001192092896;
   STACKTOP = sp;
   return;
  }
  $234 = $this + 12 | 0;
  $$pre$i33$i = (HEAP32[$234 >> 2] | 0) + ($237 << 1) | 0;
  if (($218 | 0) == ($237 | 0)) $$pre$phi2$i36$iZ2D = $$pre$i33$i; else {
   _memmove($$pre$i33$i + 2 | 0, $$pre$i33$i | 0, $218 - $237 << 1 | 0) | 0;
   $$pre$phi2$i36$iZ2D = $$pre$i33$i;
  }
  HEAP16[$$pre$phi2$i36$iZ2D >> 1] = $5;
  $242 = (HEAP32[$str$idx$i$i125 >> 2] | 0) + 1 | 0;
  HEAP32[$str$idx$i$i125 >> 2] = $242;
  HEAP32[$228 >> 2] = (HEAP32[$228 >> 2] | 0) + $bytes_count$0$lcssa$i$i;
  if ((HEAP32[$219 >> 2] | 0) <= ($242 | 0)) ___assert_fail(127217, 127226, 805, 127272);
  HEAP16[(HEAP32[$234 >> 2] | 0) + ($242 << 1) >> 1] = 0;
  __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, HEAP32[$0 >> 2] | 0, 0, 1) | 0;
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
  HEAP8[$this + 71 >> 0] = 0;
  $1446 = $this + 3280 | 0;
  HEAP8[$1446 >> 0] = 1;
  $1447 = $this + 3276 | 0;
  HEAPF32[$1447 >> 2] = -.30000001192092896;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 457) {
  $952 = $this + 60 | 0;
  $953 = HEAP32[$952 >> 2] | 0;
  $954 = $this + 64 | 0;
  $955 = HEAP32[$954 >> 2] | 0;
  $str$idx8$i = $this + 44 | 0;
  $str$idx8$val$i = HEAP32[$str$idx8$i >> 2] | 0;
  if (($953 | 0) == ($955 | 0)) {
   $1087 = HEAP32[$0 >> 2] | 0;
   if (($1087 | 0) < ($str$idx8$val$i | 0)) {
    $1090 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, $1087, 1, 0) | 0;
    do if (!$1090) $1100 = HEAP32[$this + 12 >> 2] | 0; else if ((HEAP32[$this + 4 >> 2] | 0) > ($1087 | 0)) {
     $1096 = HEAP32[$this + 12 >> 2] | 0;
     HEAP16[$1090 >> 1] = HEAP16[$1096 + ($1087 << 1) >> 1] | 0;
     $1100 = $1096;
     break;
    } else ___assert_fail(127217, 127226, 806, 127272); while (0);
    $1099 = $1100 + ($1087 << 1) | 0;
    $1101 = $1099 + 2 | 0;
    $$03$i$i309$i = $1099;
    $bytes_count$02$i$i310$i = 0;
    while (1) {
     $1102 = HEAP16[$$03$i$i309$i >> 1] | 0;
     if (!($1102 << 16 >> 16)) {
      $bytes_count$0$lcssa$i$i317$i = $bytes_count$02$i$i310$i;
      break;
     }
     $$03$i$i309$i$looptemp = $$03$i$i309$i;
     $$03$i$i309$i = $$03$i$i309$i + 2 | 0;
     if (($1102 & 65535) < 128) $bytes_count$0$be$i$i315$i = $bytes_count$02$i$i310$i + 1 | 0; else {
      if (($1102 & 65535) < 2048) $$0$i$i$i313$i = 2; else {
       $1109 = $1102 & 64512;
       if (($1109 | 0) == 56320) $$0$i$i$i313$i = 0; else $$0$i$i$i313$i = ($1109 | 0) == 55296 ? 4 : 3;
      }
      $bytes_count$0$be$i$i315$i = $$0$i$i$i313$i + $bytes_count$02$i$i310$i | 0;
     }
     if ($$03$i$i309$i$looptemp >>> 0 >= $1099 >>> 0) {
      $bytes_count$0$lcssa$i$i317$i = $bytes_count$0$be$i$i315$i;
      break;
     } else $bytes_count$02$i$i310$i = $bytes_count$0$be$i$i315$i;
    }
    $1114 = $this + 40 | 0;
    HEAP32[$1114 >> 2] = (HEAP32[$1114 >> 2] | 0) - $bytes_count$0$lcssa$i$i317$i;
    HEAP32[$str$idx8$i >> 2] = (HEAP32[$str$idx8$i >> 2] | 0) + -1;
    $1119 = HEAP16[$1101 >> 1] | 0;
    if (!($1119 << 16 >> 16)) $dst$0$lcssa$i322$i = $1099; else {
     $1123 = $1119;
     $dst$03$i319$i = $1099;
     $src$02$i320$i = $1101;
     while (1) {
      $src$02$i320$i = $src$02$i320$i + 2 | 0;
      $1122 = $dst$03$i319$i + 2 | 0;
      HEAP16[$dst$03$i319$i >> 1] = $1123;
      $1123 = HEAP16[$src$02$i320$i >> 1] | 0;
      if (!($1123 << 16 >> 16)) {
       $dst$0$lcssa$i322$i = $1122;
       break;
      } else $dst$03$i319$i = $1122;
     }
    }
    HEAP16[$dst$0$lcssa$i322$i >> 1] = 0;
    HEAP8[$this + 71 >> 0] = 0;
   }
  } else {
   if (($953 | 0) > ($str$idx8$val$i | 0)) {
    HEAP32[$952 >> 2] = $str$idx8$val$i;
    $960 = $str$idx8$val$i;
   } else $960 = $953;
   if (($955 | 0) > ($str$idx8$val$i | 0)) {
    HEAP32[$954 >> 2] = $str$idx8$val$i;
    $961 = $str$idx8$val$i;
   } else $961 = $955;
   if (($960 | 0) == ($961 | 0)) {
    HEAP32[$0 >> 2] = $960;
    $963 = $960;
    $965 = $960;
   } else {
    $963 = HEAP32[$0 >> 2] | 0;
    $965 = $961;
   }
   if (($963 | 0) > ($str$idx8$val$i | 0)) HEAP32[$0 >> 2] = $str$idx8$val$i;
   if (($960 | 0) != ($965 | 0)) {
    if (($960 | 0) < ($965 | 0)) {
     $967 = $965 - $960 | 0;
     $969 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, $960, $967, 0) | 0;
     $971 = ($967 | 0) > 0;
     L844 : do if ($971 & ($969 | 0) != 0) {
      $973 = HEAP32[$this + 4 >> 2] | 0;
      $974 = $this + 12 | 0;
      $i$01$i$i332$i = 0;
      while (1) {
       $975 = $i$01$i$i332$i + $960 | 0;
       if (($973 | 0) <= ($975 | 0)) break;
       $977 = HEAP32[$974 >> 2] | 0;
       HEAP16[$969 + ($i$01$i$i332$i << 1) >> 1] = HEAP16[$977 + ($975 << 1) >> 1] | 0;
       $i$01$i$i332$i = $i$01$i$i332$i + 1 | 0;
       if (($i$01$i$i332$i | 0) >= ($967 | 0)) {
        $984 = $977;
        break L844;
       }
      }
      ___assert_fail(127217, 127226, 806, 127272);
     } else $984 = HEAP32[$this + 12 >> 2] | 0; while (0);
     $983 = $984 + ($960 << 1) | 0;
     $985 = $983 + ($967 << 1) | 0;
     $986 = ($985 | 0) == 0;
     L852 : do if ($971 | $986) if ($986) {
      $987 = HEAP16[$983 >> 1] | 0;
      if (!($987 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i356$i = 0;
       break;
      } else {
       $$03$us$i4$i341$i = $983;
       $991 = $987;
       $bytes_count$02$us$i5$i340$i = 0;
      }
      while (1) {
       $$03$us$i4$i341$i = $$03$us$i4$i341$i + 2 | 0;
       if (($991 & 65535) < 128) $bytes_count$02$us$i$be$i346$i = $bytes_count$02$us$i5$i340$i + 1 | 0; else {
        do if (($991 & 65535) < 2048) $$0$i$us$i$i344$i = 2; else {
         $994 = $991 & 64512;
         if (($994 | 0) == 56320) {
          $$0$i$us$i$i344$i = 0;
          break;
         }
         $$0$i$us$i$i344$i = ($994 | 0) == 55296 ? 4 : 3;
        } while (0);
        $bytes_count$02$us$i$be$i346$i = $$0$i$us$i$i344$i + $bytes_count$02$us$i5$i340$i | 0;
       }
       $991 = HEAP16[$$03$us$i4$i341$i >> 1] | 0;
       if (!($991 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i356$i = $bytes_count$02$us$i$be$i346$i;
        break;
       } else $bytes_count$02$us$i5$i340$i = $bytes_count$02$us$i$be$i346$i;
      }
     } else {
      $$03$i$i348$i = $983;
      $bytes_count$02$i$i349$i = 0;
      while (1) {
       $1001 = HEAP16[$$03$i$i348$i >> 1] | 0;
       if (!($1001 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i356$i = $bytes_count$02$i$i349$i;
        break L852;
       }
       $$03$i$i348$i = $$03$i$i348$i + 2 | 0;
       if (($1001 & 65535) < 128) $bytes_count$0$be$i$i354$i = $bytes_count$02$i$i349$i + 1 | 0; else {
        do if (($1001 & 65535) < 2048) $$0$i$i$i352$i = 2; else {
         $1008 = $1001 & 64512;
         if (($1008 | 0) == 56320) {
          $$0$i$i$i352$i = 0;
          break;
         }
         $$0$i$i$i352$i = ($1008 | 0) == 55296 ? 4 : 3;
        } while (0);
        $bytes_count$0$be$i$i354$i = $$0$i$i$i352$i + $bytes_count$02$i$i349$i | 0;
       }
       if ($$03$i$i348$i >>> 0 >= $985 >>> 0) {
        $bytes_count$0$lcssa$i$i356$i = $bytes_count$0$be$i$i354$i;
        break;
       } else $bytes_count$02$i$i349$i = $bytes_count$0$be$i$i354$i;
      }
     } else $bytes_count$0$lcssa$i$i356$i = 0; while (0);
     $1013 = $this + 40 | 0;
     HEAP32[$1013 >> 2] = (HEAP32[$1013 >> 2] | 0) - $bytes_count$0$lcssa$i$i356$i;
     HEAP32[$str$idx8$i >> 2] = (HEAP32[$str$idx8$i >> 2] | 0) - $967;
     $1018 = HEAP16[$985 >> 1] | 0;
     if (!($1018 << 16 >> 16)) $dst$0$lcssa$i361$i = $983; else {
      $1022 = $1018;
      $dst$03$i358$i = $983;
      $src$02$i359$i = $985;
      while (1) {
       $src$02$i359$i = $src$02$i359$i + 2 | 0;
       $1021 = $dst$03$i358$i + 2 | 0;
       HEAP16[$dst$03$i358$i >> 1] = $1022;
       $1022 = HEAP16[$src$02$i359$i >> 1] | 0;
       if (!($1022 << 16 >> 16)) {
        $dst$0$lcssa$i361$i = $1021;
        break;
       } else $dst$03$i358$i = $1021;
      }
     }
     HEAP16[$dst$0$lcssa$i361$i >> 1] = 0;
     $1025 = $this + 71 | 0;
     HEAP8[$1025 >> 0] = 0;
     $1026 = HEAP32[$952 >> 2] | 0;
     HEAP32[$0 >> 2] = $1026;
     HEAP32[$954 >> 2] = $1026;
     $$pre$phi578$iZ2D = $1025;
    } else {
     $1027 = $960 - $965 | 0;
     $1029 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, $965, $1027, 0) | 0;
     $1031 = ($1027 | 0) > 0;
     L883 : do if ($1031 & ($1029 | 0) != 0) {
      $1033 = HEAP32[$this + 4 >> 2] | 0;
      $1034 = $this + 12 | 0;
      $i$01$i$i368$i = 0;
      while (1) {
       $1035 = $i$01$i$i368$i + $965 | 0;
       if (($1033 | 0) <= ($1035 | 0)) break;
       $1037 = HEAP32[$1034 >> 2] | 0;
       HEAP16[$1029 + ($i$01$i$i368$i << 1) >> 1] = HEAP16[$1037 + ($1035 << 1) >> 1] | 0;
       $i$01$i$i368$i = $i$01$i$i368$i + 1 | 0;
       if (($i$01$i$i368$i | 0) >= ($1027 | 0)) {
        $1044 = $1037;
        break L883;
       }
      }
      ___assert_fail(127217, 127226, 806, 127272);
     } else $1044 = HEAP32[$this + 12 >> 2] | 0; while (0);
     $1043 = $1044 + ($965 << 1) | 0;
     $1045 = $1043 + ($1027 << 1) | 0;
     $1046 = ($1045 | 0) == 0;
     L891 : do if ($1031 | $1046) if ($1046) {
      $1047 = HEAP16[$1043 >> 1] | 0;
      if (!($1047 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i391$i = 0;
       break;
      } else {
       $$03$us$i4$i376$i = $1043;
       $1051 = $1047;
       $bytes_count$02$us$i5$i375$i = 0;
      }
      while (1) {
       $$03$us$i4$i376$i = $$03$us$i4$i376$i + 2 | 0;
       if (($1051 & 65535) < 128) $bytes_count$02$us$i$be$i381$i = $bytes_count$02$us$i5$i375$i + 1 | 0; else {
        do if (($1051 & 65535) < 2048) $$0$i$us$i$i379$i = 2; else {
         $1054 = $1051 & 64512;
         if (($1054 | 0) == 56320) {
          $$0$i$us$i$i379$i = 0;
          break;
         }
         $$0$i$us$i$i379$i = ($1054 | 0) == 55296 ? 4 : 3;
        } while (0);
        $bytes_count$02$us$i$be$i381$i = $$0$i$us$i$i379$i + $bytes_count$02$us$i5$i375$i | 0;
       }
       $1051 = HEAP16[$$03$us$i4$i376$i >> 1] | 0;
       if (!($1051 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i391$i = $bytes_count$02$us$i$be$i381$i;
        break;
       } else $bytes_count$02$us$i5$i375$i = $bytes_count$02$us$i$be$i381$i;
      }
     } else {
      $$03$i$i383$i = $1043;
      $bytes_count$02$i$i384$i = 0;
      while (1) {
       $1061 = HEAP16[$$03$i$i383$i >> 1] | 0;
       if (!($1061 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i391$i = $bytes_count$02$i$i384$i;
        break L891;
       }
       $$03$i$i383$i = $$03$i$i383$i + 2 | 0;
       if (($1061 & 65535) < 128) $bytes_count$0$be$i$i389$i = $bytes_count$02$i$i384$i + 1 | 0; else {
        do if (($1061 & 65535) < 2048) $$0$i$i$i387$i = 2; else {
         $1068 = $1061 & 64512;
         if (($1068 | 0) == 56320) {
          $$0$i$i$i387$i = 0;
          break;
         }
         $$0$i$i$i387$i = ($1068 | 0) == 55296 ? 4 : 3;
        } while (0);
        $bytes_count$0$be$i$i389$i = $$0$i$i$i387$i + $bytes_count$02$i$i384$i | 0;
       }
       if ($$03$i$i383$i >>> 0 >= $1045 >>> 0) {
        $bytes_count$0$lcssa$i$i391$i = $bytes_count$0$be$i$i389$i;
        break;
       } else $bytes_count$02$i$i384$i = $bytes_count$0$be$i$i389$i;
      }
     } else $bytes_count$0$lcssa$i$i391$i = 0; while (0);
     $1073 = $this + 40 | 0;
     HEAP32[$1073 >> 2] = (HEAP32[$1073 >> 2] | 0) - $bytes_count$0$lcssa$i$i391$i;
     HEAP32[$str$idx8$i >> 2] = (HEAP32[$str$idx8$i >> 2] | 0) - $1027;
     $1078 = HEAP16[$1045 >> 1] | 0;
     if (!($1078 << 16 >> 16)) $dst$0$lcssa$i396$i = $1043; else {
      $1082 = $1078;
      $dst$03$i393$i = $1043;
      $src$02$i394$i = $1045;
      while (1) {
       $src$02$i394$i = $src$02$i394$i + 2 | 0;
       $1081 = $dst$03$i393$i + 2 | 0;
       HEAP16[$dst$03$i393$i >> 1] = $1082;
       $1082 = HEAP16[$src$02$i394$i >> 1] | 0;
       if (!($1082 << 16 >> 16)) {
        $dst$0$lcssa$i396$i = $1081;
        break;
       } else $dst$03$i393$i = $1081;
      }
     }
     HEAP16[$dst$0$lcssa$i396$i >> 1] = 0;
     $1085 = $this + 71 | 0;
     HEAP8[$1085 >> 0] = 0;
     $1086 = HEAP32[$954 >> 2] | 0;
     HEAP32[$0 >> 2] = $1086;
     HEAP32[$952 >> 2] = $1086;
     $$pre$phi578$iZ2D = $1085;
    }
    HEAP8[$$pre$phi578$iZ2D >> 0] = 0;
   }
  }
  HEAP8[$this + 71 >> 0] = 0;
  $1446 = $this + 3280 | 0;
  HEAP8[$1446 >> 0] = 1;
  $1447 = $this + 3276 | 0;
  HEAPF32[$1447 >> 2] = -.30000001192092896;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 543) {
  $1128 = $this + 60 | 0;
  $1129 = HEAP32[$1128 >> 2] | 0;
  $1130 = $this + 64 | 0;
  $1131 = HEAP32[$1130 >> 2] | 0;
  $str$idx18$i = $this + 44 | 0;
  $str$idx18$val$i = HEAP32[$str$idx18$i >> 2] | 0;
  if (($1129 | 0) == ($1131 | 0)) {
   $1263 = HEAP32[$0 >> 2] | 0;
   if (($1263 | 0) > ($str$idx18$val$i | 0)) {
    HEAP32[$0 >> 2] = $str$idx18$val$i;
    $1266 = $str$idx18$val$i;
   } else $1266 = $1263;
   if (($1266 | 0) > 0) {
    $1267 = $1266 + -1 | 0;
    $1269 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, $1267, 1, 0) | 0;
    do if (!$1269) $1279 = HEAP32[$this + 12 >> 2] | 0; else if ((HEAP32[$this + 4 >> 2] | 0) < ($1266 | 0)) ___assert_fail(127217, 127226, 806, 127272); else {
     $1275 = HEAP32[$this + 12 >> 2] | 0;
     HEAP16[$1269 >> 1] = HEAP16[$1275 + ($1267 << 1) >> 1] | 0;
     $1279 = $1275;
     break;
    } while (0);
    $1278 = $1279 + ($1267 << 1) | 0;
    $1280 = $1278 + 2 | 0;
    $$03$i$i203$i = $1278;
    $bytes_count$02$i$i204$i = 0;
    while (1) {
     $1281 = HEAP16[$$03$i$i203$i >> 1] | 0;
     if (!($1281 << 16 >> 16)) {
      $bytes_count$0$lcssa$i$i211$i = $bytes_count$02$i$i204$i;
      break;
     }
     $$03$i$i203$i$looptemp = $$03$i$i203$i;
     $$03$i$i203$i = $$03$i$i203$i + 2 | 0;
     if (($1281 & 65535) < 128) $bytes_count$0$be$i$i209$i = $bytes_count$02$i$i204$i + 1 | 0; else {
      if (($1281 & 65535) < 2048) $$0$i$i$i207$i = 2; else {
       $1288 = $1281 & 64512;
       if (($1288 | 0) == 56320) $$0$i$i$i207$i = 0; else $$0$i$i$i207$i = ($1288 | 0) == 55296 ? 4 : 3;
      }
      $bytes_count$0$be$i$i209$i = $$0$i$i$i207$i + $bytes_count$02$i$i204$i | 0;
     }
     if ($$03$i$i203$i$looptemp >>> 0 >= $1278 >>> 0) {
      $bytes_count$0$lcssa$i$i211$i = $bytes_count$0$be$i$i209$i;
      break;
     } else $bytes_count$02$i$i204$i = $bytes_count$0$be$i$i209$i;
    }
    $1293 = $this + 40 | 0;
    HEAP32[$1293 >> 2] = (HEAP32[$1293 >> 2] | 0) - $bytes_count$0$lcssa$i$i211$i;
    HEAP32[$str$idx18$i >> 2] = (HEAP32[$str$idx18$i >> 2] | 0) + -1;
    $1298 = HEAP16[$1280 >> 1] | 0;
    if (!($1298 << 16 >> 16)) $dst$0$lcssa$i216$i = $1278; else {
     $1302 = $1298;
     $dst$03$i213$i = $1278;
     $src$02$i214$i = $1280;
     while (1) {
      $src$02$i214$i = $src$02$i214$i + 2 | 0;
      $1301 = $dst$03$i213$i + 2 | 0;
      HEAP16[$dst$03$i213$i >> 1] = $1302;
      $1302 = HEAP16[$src$02$i214$i >> 1] | 0;
      if (!($1302 << 16 >> 16)) {
       $dst$0$lcssa$i216$i = $1301;
       break;
      } else $dst$03$i213$i = $1301;
     }
    }
    HEAP16[$dst$0$lcssa$i216$i >> 1] = 0;
    HEAP8[$this + 71 >> 0] = 0;
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   }
  } else {
   if (($1129 | 0) > ($str$idx18$val$i | 0)) {
    HEAP32[$1128 >> 2] = $str$idx18$val$i;
    $1136 = $str$idx18$val$i;
   } else $1136 = $1129;
   if (($1131 | 0) > ($str$idx18$val$i | 0)) {
    HEAP32[$1130 >> 2] = $str$idx18$val$i;
    $1137 = $str$idx18$val$i;
   } else $1137 = $1131;
   if (($1136 | 0) == ($1137 | 0)) {
    HEAP32[$0 >> 2] = $1136;
    $1139 = $1136;
    $1141 = $1136;
   } else {
    $1139 = HEAP32[$0 >> 2] | 0;
    $1141 = $1137;
   }
   if (($1139 | 0) > ($str$idx18$val$i | 0)) HEAP32[$0 >> 2] = $str$idx18$val$i;
   if (($1136 | 0) != ($1141 | 0)) {
    if (($1136 | 0) < ($1141 | 0)) {
     $1143 = $1141 - $1136 | 0;
     $1145 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, $1136, $1143, 0) | 0;
     $1147 = ($1143 | 0) > 0;
     L971 : do if ($1147 & ($1145 | 0) != 0) {
      $1149 = HEAP32[$this + 4 >> 2] | 0;
      $1150 = $this + 12 | 0;
      $i$01$i$i227$i = 0;
      while (1) {
       $1151 = $i$01$i$i227$i + $1136 | 0;
       if (($1149 | 0) <= ($1151 | 0)) break;
       $1153 = HEAP32[$1150 >> 2] | 0;
       HEAP16[$1145 + ($i$01$i$i227$i << 1) >> 1] = HEAP16[$1153 + ($1151 << 1) >> 1] | 0;
       $i$01$i$i227$i = $i$01$i$i227$i + 1 | 0;
       if (($i$01$i$i227$i | 0) >= ($1143 | 0)) {
        $1160 = $1153;
        break L971;
       }
      }
      ___assert_fail(127217, 127226, 806, 127272);
     } else $1160 = HEAP32[$this + 12 >> 2] | 0; while (0);
     $1159 = $1160 + ($1136 << 1) | 0;
     $1161 = $1159 + ($1143 << 1) | 0;
     $1162 = ($1161 | 0) == 0;
     L979 : do if ($1147 | $1162) if ($1162) {
      $1163 = HEAP16[$1159 >> 1] | 0;
      if (!($1163 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i256$i = 0;
       break;
      } else {
       $$03$us$i4$i241$i = $1159;
       $1167 = $1163;
       $bytes_count$02$us$i5$i240$i = 0;
      }
      while (1) {
       $$03$us$i4$i241$i = $$03$us$i4$i241$i + 2 | 0;
       if (($1167 & 65535) < 128) $bytes_count$02$us$i$be$i246$i = $bytes_count$02$us$i5$i240$i + 1 | 0; else {
        do if (($1167 & 65535) < 2048) $$0$i$us$i$i244$i = 2; else {
         $1170 = $1167 & 64512;
         if (($1170 | 0) == 56320) {
          $$0$i$us$i$i244$i = 0;
          break;
         }
         $$0$i$us$i$i244$i = ($1170 | 0) == 55296 ? 4 : 3;
        } while (0);
        $bytes_count$02$us$i$be$i246$i = $$0$i$us$i$i244$i + $bytes_count$02$us$i5$i240$i | 0;
       }
       $1167 = HEAP16[$$03$us$i4$i241$i >> 1] | 0;
       if (!($1167 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i256$i = $bytes_count$02$us$i$be$i246$i;
        break;
       } else $bytes_count$02$us$i5$i240$i = $bytes_count$02$us$i$be$i246$i;
      }
     } else {
      $$03$i$i248$i = $1159;
      $bytes_count$02$i$i249$i = 0;
      while (1) {
       $1177 = HEAP16[$$03$i$i248$i >> 1] | 0;
       if (!($1177 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i256$i = $bytes_count$02$i$i249$i;
        break L979;
       }
       $$03$i$i248$i = $$03$i$i248$i + 2 | 0;
       if (($1177 & 65535) < 128) $bytes_count$0$be$i$i254$i = $bytes_count$02$i$i249$i + 1 | 0; else {
        do if (($1177 & 65535) < 2048) $$0$i$i$i252$i = 2; else {
         $1184 = $1177 & 64512;
         if (($1184 | 0) == 56320) {
          $$0$i$i$i252$i = 0;
          break;
         }
         $$0$i$i$i252$i = ($1184 | 0) == 55296 ? 4 : 3;
        } while (0);
        $bytes_count$0$be$i$i254$i = $$0$i$i$i252$i + $bytes_count$02$i$i249$i | 0;
       }
       if ($$03$i$i248$i >>> 0 >= $1161 >>> 0) {
        $bytes_count$0$lcssa$i$i256$i = $bytes_count$0$be$i$i254$i;
        break;
       } else $bytes_count$02$i$i249$i = $bytes_count$0$be$i$i254$i;
      }
     } else $bytes_count$0$lcssa$i$i256$i = 0; while (0);
     $1189 = $this + 40 | 0;
     HEAP32[$1189 >> 2] = (HEAP32[$1189 >> 2] | 0) - $bytes_count$0$lcssa$i$i256$i;
     HEAP32[$str$idx18$i >> 2] = (HEAP32[$str$idx18$i >> 2] | 0) - $1143;
     $1194 = HEAP16[$1161 >> 1] | 0;
     if (!($1194 << 16 >> 16)) $dst$0$lcssa$i261$i = $1159; else {
      $1198 = $1194;
      $dst$03$i258$i = $1159;
      $src$02$i259$i = $1161;
      while (1) {
       $src$02$i259$i = $src$02$i259$i + 2 | 0;
       $1197 = $dst$03$i258$i + 2 | 0;
       HEAP16[$dst$03$i258$i >> 1] = $1198;
       $1198 = HEAP16[$src$02$i259$i >> 1] | 0;
       if (!($1198 << 16 >> 16)) {
        $dst$0$lcssa$i261$i = $1197;
        break;
       } else $dst$03$i258$i = $1197;
      }
     }
     HEAP16[$dst$0$lcssa$i261$i >> 1] = 0;
     $1201 = $this + 71 | 0;
     HEAP8[$1201 >> 0] = 0;
     $1202 = HEAP32[$1128 >> 2] | 0;
     HEAP32[$0 >> 2] = $1202;
     HEAP32[$1130 >> 2] = $1202;
     $$pre$phi583$iZ2D = $1201;
    } else {
     $1203 = $1136 - $1141 | 0;
     $1205 = __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($this + 80 | 0, $1141, $1203, 0) | 0;
     $1207 = ($1203 | 0) > 0;
     L1010 : do if ($1207 & ($1205 | 0) != 0) {
      $1209 = HEAP32[$this + 4 >> 2] | 0;
      $1210 = $this + 12 | 0;
      $i$01$i$i267$i = 0;
      while (1) {
       $1211 = $i$01$i$i267$i + $1141 | 0;
       if (($1209 | 0) <= ($1211 | 0)) break;
       $1213 = HEAP32[$1210 >> 2] | 0;
       HEAP16[$1205 + ($i$01$i$i267$i << 1) >> 1] = HEAP16[$1213 + ($1211 << 1) >> 1] | 0;
       $i$01$i$i267$i = $i$01$i$i267$i + 1 | 0;
       if (($i$01$i$i267$i | 0) >= ($1203 | 0)) {
        $1220 = $1213;
        break L1010;
       }
      }
      ___assert_fail(127217, 127226, 806, 127272);
     } else $1220 = HEAP32[$this + 12 >> 2] | 0; while (0);
     $1219 = $1220 + ($1141 << 1) | 0;
     $1221 = $1219 + ($1203 << 1) | 0;
     $1222 = ($1221 | 0) == 0;
     L1018 : do if ($1207 | $1222) if ($1222) {
      $1223 = HEAP16[$1219 >> 1] | 0;
      if (!($1223 << 16 >> 16)) {
       $bytes_count$0$lcssa$i$i290$i = 0;
       break;
      } else {
       $$03$us$i4$i275$i = $1219;
       $1227 = $1223;
       $bytes_count$02$us$i5$i274$i = 0;
      }
      while (1) {
       $$03$us$i4$i275$i = $$03$us$i4$i275$i + 2 | 0;
       if (($1227 & 65535) < 128) $bytes_count$02$us$i$be$i280$i = $bytes_count$02$us$i5$i274$i + 1 | 0; else {
        do if (($1227 & 65535) < 2048) $$0$i$us$i$i278$i = 2; else {
         $1230 = $1227 & 64512;
         if (($1230 | 0) == 56320) {
          $$0$i$us$i$i278$i = 0;
          break;
         }
         $$0$i$us$i$i278$i = ($1230 | 0) == 55296 ? 4 : 3;
        } while (0);
        $bytes_count$02$us$i$be$i280$i = $$0$i$us$i$i278$i + $bytes_count$02$us$i5$i274$i | 0;
       }
       $1227 = HEAP16[$$03$us$i4$i275$i >> 1] | 0;
       if (!($1227 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i290$i = $bytes_count$02$us$i$be$i280$i;
        break;
       } else $bytes_count$02$us$i5$i274$i = $bytes_count$02$us$i$be$i280$i;
      }
     } else {
      $$03$i$i282$i = $1219;
      $bytes_count$02$i$i283$i = 0;
      while (1) {
       $1237 = HEAP16[$$03$i$i282$i >> 1] | 0;
       if (!($1237 << 16 >> 16)) {
        $bytes_count$0$lcssa$i$i290$i = $bytes_count$02$i$i283$i;
        break L1018;
       }
       $$03$i$i282$i = $$03$i$i282$i + 2 | 0;
       if (($1237 & 65535) < 128) $bytes_count$0$be$i$i288$i = $bytes_count$02$i$i283$i + 1 | 0; else {
        do if (($1237 & 65535) < 2048) $$0$i$i$i286$i = 2; else {
         $1244 = $1237 & 64512;
         if (($1244 | 0) == 56320) {
          $$0$i$i$i286$i = 0;
          break;
         }
         $$0$i$i$i286$i = ($1244 | 0) == 55296 ? 4 : 3;
        } while (0);
        $bytes_count$0$be$i$i288$i = $$0$i$i$i286$i + $bytes_count$02$i$i283$i | 0;
       }
       if ($$03$i$i282$i >>> 0 >= $1221 >>> 0) {
        $bytes_count$0$lcssa$i$i290$i = $bytes_count$0$be$i$i288$i;
        break;
       } else $bytes_count$02$i$i283$i = $bytes_count$0$be$i$i288$i;
      }
     } else $bytes_count$0$lcssa$i$i290$i = 0; while (0);
     $1249 = $this + 40 | 0;
     HEAP32[$1249 >> 2] = (HEAP32[$1249 >> 2] | 0) - $bytes_count$0$lcssa$i$i290$i;
     HEAP32[$str$idx18$i >> 2] = (HEAP32[$str$idx18$i >> 2] | 0) - $1203;
     $1254 = HEAP16[$1221 >> 1] | 0;
     if (!($1254 << 16 >> 16)) $dst$0$lcssa$i295$i = $1219; else {
      $1258 = $1254;
      $dst$03$i292$i = $1219;
      $src$02$i293$i = $1221;
      while (1) {
       $src$02$i293$i = $src$02$i293$i + 2 | 0;
       $1257 = $dst$03$i292$i + 2 | 0;
       HEAP16[$dst$03$i292$i >> 1] = $1258;
       $1258 = HEAP16[$src$02$i293$i >> 1] | 0;
       if (!($1258 << 16 >> 16)) {
        $dst$0$lcssa$i295$i = $1257;
        break;
       } else $dst$03$i292$i = $1257;
      }
     }
     HEAP16[$dst$0$lcssa$i295$i >> 1] = 0;
     $1261 = $this + 71 | 0;
     HEAP8[$1261 >> 0] = 0;
     $1262 = HEAP32[$1130 >> 2] | 0;
     HEAP32[$0 >> 2] = $1262;
     HEAP32[$1128 >> 2] = $1262;
     $$pre$phi583$iZ2D = $1261;
    }
    HEAP8[$$pre$phi583$iZ2D >> 0] = 0;
   }
  }
  HEAP8[$this + 71 >> 0] = 0;
  $1446 = $this + 3280 | 0;
  HEAP8[$1446 >> 0] = 1;
  $1447 = $this + 3276 | 0;
  HEAPF32[$1447 >> 2] = -.30000001192092896;
  STACKTOP = sp;
  return;
 }
}
function __ZN11ImFontAtlas5BuildEv($this) {
 $this = $this | 0;
 var $$0$i$i = 0.0, $$0$i46$i = 0.0, $$014$i$i$i$i$i$i = 0, $$036$i$i = 0, $$036$i12$i = 0, $$043$i$i$i$i$i = 0, $$1$i = 0, $$1$i$i$i$i$i$i$i = 0, $$1$i8 = 0, $$1$lcssa$i$i$i$i$i = 0, $$124$i$i$i$i$i = 0, $$2$i$i = 0, $$2$i21$i = 0, $$2$i89$i = 0, $$3 = 0, $$idx$i$i = 0, $$lcssa456 = 0, $$lcssa489 = 0, $$lcssa491 = 0, $$lcssa493 = 0, $$lcssa495 = 0, $$lcssa497 = 0, $$lcssa499 = 0, $$lcssa501 = 0, $$lcssa503 = 0, $$lcssa505 = 0, $$n$0$i$i$i$i = 0, $$n$0$i$i$i$i$lcssa = 0, $$pre = 0, $$pre268$pre = 0, $$pre270 = 0, $0 = 0, $10 = 0, $1001 = 0, $1002 = 0, $1014 = 0, $1022 = 0.0, $1025 = 0.0, $1033 = 0, $1035 = 0.0, $1038 = 0.0, $1041 = 0, $1049 = 0, $1051 = 0.0, $1054 = 0.0, $1060 = 0.0, $1063 = 0.0, $1064 = 0, $1076 = 0, $1089 = 0, $1092 = 0, $1096 = 0, $1098 = 0, $1099 = 0, $11 = 0, $1100 = 0, $1102 = 0, $1108 = 0.0, $1111 = 0, $1112 = 0.0, $112 = 0, $1120 = 0.0, $1129 = 0.0, $1133 = 0, $1135 = 0, $1139 = 0, $1141 = 0.0, $1142 = 0, $1143 = 0, $1147 = 0, $1148 = 0, $1153 = 0, $1159 = 0, $1165 = 0, $1166 = 0, $1167 = 0.0, $1168 = 0, $1169 = 0, $1170 = 0, $1171 = 0.0, $1172 = 0.0, $1173 = 0.0, $1175 = 0, $1176 = 0, $1177 = 0.0, $1180 = 0, $1184 = 0, $1187 = 0, $1188 = 0, $1190 = 0, $1192 = 0, $1195 = 0.0, $1202 = 0, $1206 = 0, $1208 = 0, $1211 = 0.0, $1213 = 0.0, $1214 = 0.0, $1215 = 0, $1217 = 0.0, $1237 = 0.0, $1240 = 0, $1244 = 0, $1247 = 0.0, $1250 = 0.0, $1253 = 0.0, $1256 = 0, $1258 = 0.0, $1260 = 0.0, $1262 = 0.0, $1276 = 0, $1279 = 0.0, $1282 = 0, $1284 = 0.0, $1292 = 0, $1297 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1312 = 0.0, $1314 = 0.0, $1316 = 0.0, $1323 = 0, $1326 = 0.0, $1328 = 0.0, $1330 = 0, $1333 = 0.0, $134 = 0, $1349 = 0, $1354 = 0, $1357 = 0.0, $1359 = 0.0, $1362 = 0.0, $1365 = 0.0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $1376 = 0, $138 = 0, $1387 = 0, $139 = 0, $1394 = 0, $1396 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $143 = 0, $1432 = 0, $1439 = 0, $1440 = 0, $1447 = 0, $1454 = 0, $1455 = 0, $1462 = 0, $1469 = 0, $1470 = 0, $1477 = 0, $1485 = 0, $1486 = 0, $1493 = 0, $15 = 0, $1500 = 0, $1517 = 0, $1518 = 0, $1520 = 0, $1527 = 0, $1528 = 0, $1530 = 0, $1531 = 0, $1538 = 0, $1546 = 0, $1547 = 0, $155 = 0, $1554 = 0, $1562 = 0, $1563 = 0, $1570 = 0, $1578 = 0, $1579 = 0, $1586 = 0, $1595 = 0, $1596 = 0, $16 = 0, $1603 = 0, $1611 = 0, $1626 = 0, $1628 = 0, $1632 = 0, $1638 = 0, $1645 = 0, $1650 = 0, $1665 = 0, $1668 = 0, $1673 = 0, $1674 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1680 = 0.0, $1681 = 0, $1682 = 0, $1687 = 0, $1688 = 0, $1693 = 0, $1696 = 0.0, $1698 = 0.0, $1699 = 0, $1709 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1717 = 0, $1719 = 0, $1724 = 0, $1725 = 0, $1740 = 0, $1741 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1757 = 0, $1758 = 0, $1761 = 0, $1762 = 0, $1766 = 0, $1768 = 0, $177 = 0, $1780 = 0, $1783 = 0, $1788 = 0, $1799 = 0.0, $1801 = 0.0, $1804 = 0.0, $1807 = 0.0, $1810 = 0.0, $1813 = 0.0, $1815 = 0.0, $1819 = 0.0, $1823 = 0.0, $1827 = 0.0, $1828 = 0, $1829 = 0, $1830 = 0, $1836 = 0, $1837 = 0, $1840 = 0, $1846 = 0, $1859 = 0.0, $1862 = 0.0, $1868 = 0.0, $1869 = 0, $1878 = 0, $1879 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $189 = 0, $20 = 0, $210 = 0, $214 = 0, $218 = 0, $23 = 0, $230 = 0, $251 = 0, $255 = 0, $259 = 0, $27 = 0, $271 = 0, $29 = 0, $292 = 0, $296 = 0, $3 = 0, $300 = 0, $312 = 0, $333 = 0, $337 = 0, $341 = 0, $353 = 0, $374 = 0, $378 = 0, $382 = 0, $394 = 0, $4 = 0, $424 = 0, $428 = 0, $442 = 0, $459 = 0, $462 = 0, $470 = 0, $474 = 0, $475 = 0, $477 = 0, $480 = 0, $485 = 0, $490 = 0, $508 = 0, $509 = 0, $527 = 0, $532 = 0, $538 = 0, $539 = 0, $541 = 0, $542 = 0, $545 = 0, $549 = 0, $552 = 0, $553 = 0, $560 = 0, $566 = 0, $567 = 0, $568 = 0, $570 = 0, $571 = 0, $572 = 0, $574 = 0, $583 = 0, $591 = 0, $597 = 0, $598 = 0, $602 = 0, $606 = 0, $608 = 0, $609 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $617 = 0, $621 = 0, $628 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $640 = 0, $642 = 0, $643 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $650 = 0, $653 = 0, $656 = 0, $657 = 0, $661 = 0, $662 = 0, $663 = 0, $665 = 0, $667 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0.0, $675 = 0.0, $677 = 0.0, $679 = 0, $680 = 0, $686 = 0, $697 = 0, $7 = 0, $707 = 0, $710 = 0, $711 = 0, $712 = 0.0, $713 = 0.0, $714 = 0.0, $715 = 0, $721 = 0, $735 = 0, $741 = 0, $743 = 0, $746 = 0, $752 = 0, $756 = 0, $764 = 0, $771 = 0, $778 = 0, $780 = 0, $782 = 0, $784 = 0, $786 = 0, $789 = 0, $792 = 0, $796 = 0, $797 = 0, $799 = 0, $8 = 0, $802 = 0, $803 = 0, $810 = 0, $812 = 0, $814 = 0, $815 = 0, $816 = 0, $818 = 0, $820 = 0.0, $822 = 0, $823 = 0, $829 = 0, $840 = 0, $849 = 0, $850 = 0, $852 = 0, $853 = 0, $854 = 0.0, $855 = 0.0, $856 = 0.0, $857 = 0.0, $868 = 0, $869 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0.0, $875 = 0.0, $876 = 0.0, $877 = 0, $878 = 0, $879 = 0, $880 = 0, $883 = 0.0, $884 = 0.0, $885 = 0.0, $889 = 0, $890 = 0, $896 = 0, $897 = 0, $898 = 0, $90 = 0, $903 = 0, $908 = 0, $913 = 0, $918 = 0, $921 = 0, $925 = 0, $928 = 0, $930 = 0, $937 = 0, $948 = 0, $951 = 0, $952 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $961 = 0, $962 = 0, $963 = 0, $985 = 0, $994 = 0, $999 = 0, $a$0$i$i$i$i = 0, $active$sroa$0$i$i$i$i$i = 0, $advance$0$i = 0, $advance$0$in$in$i = 0, $area$0$lcssa$i$i$i$i$i$i = 0.0, $area$012$i$i$i$i$i$i = 0.0, $b$0$i$i$i$i = 0, $buf_packedchars_n$0$lcssa = 0, $buf_packedchars_n$0179 = 0, $buf_packedchars_n$1$lcssa = 0, $buf_packedchars_n$1168 = 0, $buf_ranges_n$0$lcssa = 0, $buf_ranges_n$0177 = 0, $buf_rects_n$0$lcssa = 0, $buf_rects_n$0178 = 0, $c$01$i$i$i$i$i$i = 0, $char_idx$0147 = 0, $dy$0$i$i$i$i$i$i = 0.0, $extra_rects = 0, $glyph_count$0$lcssa = 0, $glyph_count$0161 = 0, $glyph_ranges_count$0160 = 0, $hh$sroa$0$039$i$i$i$i$i = 0, $hh$sroa$0$1$lcssa$i$i$i$i$i = 0, $hh$sroa$0$1$lcssa$i$i$i$i$i$lcssa467 = 0, $hh$sroa$0$123$i$i$i$i$i = 0, $hh$sroa$0$2$i$i$i$i$i = 0, $hh$sroa$0$3$i$i$i$i$i = 0, $hh$sroa$0$4$i$i$i$i$i = 0, $hh$sroa$11$037$i$i$i$i$i = 0, $hh$sroa$11$1$lcssa$i$i$i$i$i = 0, $hh$sroa$11$121$i$i$i$i$i = 0, $hh$sroa$11$2$i$i$i$i$i = 0, $hh$sroa$11$3$i$i$i$i$i = 0, $hh$sroa$7$038$i$i$i$i$i = 0, $hh$sroa$7$1$ph$lcssa5$i$i$i$i$i = 0, $hh$sroa$7$1$ph18$i$i$i$i$i = 0, $hh$sroa$7$2$lcssa$i$i$i$i$i = 0, $hh$sroa$7$222$i$i$i$i$i = 0, $hh$sroa$7$3$i$i$i$i$i = 0, $hh$sroa$7$4$i$i$i$i$i = 0, $i$0$lcssa$i$i = 0, $i$01$i$i = 0, $i$0116$i = 0, $i$013$i = 0, $i$016$i$i$i$i = 0, $i$0184 = 0, $i$023$i$i = 0, $i$023$i19$i = 0, $i$026$i$i$i$i = 0, $i$03$i$i = 0, $i$03$i$i$i$i$i$i = 0, $i$03$i13$i = 0, $i$03$i20$i = 0, $i$03$i27$i = 0, $i$03$i34$i = 0, $i$03$i41$i = 0, $i$03$i48$i = 0, $i$03$i55$i = 0, $i$031$i$i$i$i$i = 0, $i$073$i = 0, $i$118$i$i = 0, $i$118$i23$i = 0, $i$121$i$i$i$i = 0, $i$16$i$i$i$i = 0, $i$16$us$i$i$i$i = 0, $i$213$i$i = 0, $i$213$i27$i = 0, $i$310$i$i = 0, $i$310$i31$i = 0, $i$428$i$i = 0, $i$428$i38$i = 0, $i$5$ph$i$i = 0, $i$5$ph$i34$i = 0, $i$533$i$i = 0, $i$533$i42$i = 0, $i15$0149 = 0, $i6$0167 = 0, $i8$0172 = 0, $in_range$0186 = 0, $in_range5$0159 = 0, $info$idx$i = 0, $info$idx$i26 = 0, $info$idx1$i = 0, $info$idx1$i27 = 0, $info$idx3$i = 0, $info$idx3$i29 = 0, $info$idx5$i = 0, $info$idx5$i28 = 0, $input_i$0197 = 0, $input_i12$0154 = 0, $input_i2$0175 = 0, $input_i9$0157 = 0, $ix0$0$i$i = 0, $iy0$0$i$i = 0, $j$0$i$i$i$i$i$i = 0, $j$011$i = 0, $j$0111$i = 0, $j$017$i$i$i$i = 0, $j$017$i$i$i$i$phi = 0, $j$040$i$i$i$i$i = 0, $j$042$i$i = 0, $j$042$i11$i = 0, $j$2$ph$i$i$i$i$i$i = 0, $k$0115$i = 0, $k$012$i = 0, $k$018$i$i$i$i = 0, $k$1$lcssa$i = 0, $k$1$lcssa$i$lcssa = 0, $k$1$lcssa$i52 = 0, $k$110$i = 0, $k$1109$i = 0, $m$020$i$i$i$i = 0, $n$0$lcssa$i$i$i$i = 0, $n$017$i$i$i$i = 0, $n$027$i$i$i$i = 0, $n$1$lcssa51$i$i$i$i = 0, $n$122$i$i$i$i = 0, $n$2$lcssa$i$i$i$i = 0, $n$2$lcssa$i4$i$i$i = 0, $n$2$lcssa$i4$i$i$i$lcssa = 0, $n$219$i$i$i$i = 0, $n$28$i$i$i$i = 0, $n$28$us$i$i$i$i = 0, $n$3$i$i$i$i = 0, $n$3$i3$i$i$i = 0, $n$3$us$i$i$i$i = 0, $pass$015$i$i$i$i = 0, $points$013$i$i$i$i = 0, $points$1$i$i$i$i = 0, $scanline$0$i$i$i$i$i = 0, $scanline_data$i$i$i$i$i = 0, $start$014$i$i$i$i = 0, $start$1$lcssa$i$i$i$i = 0, $start$19$i$i$i$i = 0, $start$19$us$i$i$i$i = 0, $start$2$i$i$i$i = 0, $start$2$us$i$i$i$i = 0, $step$0$ph19$i$i$i$i$i = 0, $step$016$i$i$i$i$i = 0, $step$016$i$i$i$i$i$lcssa = 0, $step$016$i$i$i$i$i$phi = 0, $sum$032$i$i$i$i$i = 0.0, $sy0$0$i$i$i$i$i$i = 0.0, $sy0$1$i$i$i$i$i$i = 0.0, $sy1$0$i$i$i$i$i$i = 0.0, $sy1$1$i$i$i$i$i$i = 0.0, $total$024$i$i = 0, $total$024$i18$i = 0, $total$119$i$i = 0, $total$119$i22$i = 0, $total$214$i$i = 0, $total$214$i26$i = 0, $total$311$i$i = 0, $total$311$i30$i = 0, $total$429$i$i = 0, $total$429$i37$i = 0, $total$5$ph$i$i = 0, $total$5$ph$i35$i = 0, $total$534$i$i = 0, $total$534$i41$i = 0, $total_glyph_count$0$lcssa = 0, $total_glyph_count$0201 = 0, $total_glyph_count$1$lcssa = 0, $total_glyph_count$1188 = 0, $total_glyph_range_count$0$lcssa = 0, $total_glyph_range_count$0200 = 0, $total_glyph_range_count$1$lcssa = 0, $total_glyph_range_count$1187 = 0, $vertices$i$i = 0, $x$010$i$i$i$i = 0.0, $x$010$us$i$i$i$i = 0.0, $x$1$i$i$i$i = 0.0, $x$1$us$i$i$i$i = 0.0, $x0$i22 = 0, $x01$0$i$i$i$i$i$i = 0.0, $x1$i24 = 0, $x2$011$i$i$i$i$i$i = 0, $x4$010$i$i$i$i$i$i = 0, $x_bottom$0$i$i$i$i$i$i = 0.0, $x_bottom$1$i$i$i$i$i$i = 0.0, $x_top$0$i$i$i$i$i$i = 0.0, $x_top$1$i$i$i$i$i$i = 0.0, $y$011$i$i$i$i = 0.0, $y$011$us$i$i$i$i = 0.0, $y$042$i$i$i$i$i = 0, $y$1$i$i$i$i = 0.0, $y$1$us$i$i$i$i = 0.0, $y0$i23 = 0, $y1$i25 = 0, label = 0, sp = 0, $i$01$i$i$looptemp = 0, $1108$looptemp = 0.0, $x4$010$i$i$i$i$i$i$looptemp = 0, $c$01$i$i$i$i$i$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560 | 0;
 $active$sroa$0$i$i$i$i$i = sp;
 $scanline_data$i$i$i$i$i = sp + 44 | 0;
 $vertices$i$i = sp + 40 | 0;
 $x0$i22 = sp + 36 | 0;
 $y0$i23 = sp + 32 | 0;
 $x1$i24 = sp + 28 | 0;
 $y1$i25 = sp + 24 | 0;
 $extra_rects = sp + 12 | 0;
 $0 = $this + 44 | 0;
 if ((HEAP32[$0 >> 2] | 0) <= 0) ___assert_fail(139929, 127372, 1208, 139949);
 HEAP32[$this >> 2] = 0;
 $3 = $this + 16 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $this + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP32[$this + 28 >> 2] = 0;
 $7 = $this + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($8 | 0) __ZN5ImGui7MemFreeEPv($8);
 $10 = $this + 8 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ($11 | 0) __ZN5ImGui7MemFreeEPv($11);
 HEAP32[$7 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $15 = __ZN5ImGui8MemAllocEj((HEAP32[$0 >> 2] | 0) * 60 | 0) | 0;
 $16 = HEAP32[$0 >> 2] | 0;
 L10 : do if (($16 | 0) > 0) {
  $$pre = HEAP32[$this + 52 >> 2] | 0;
  $input_i$0197 = 0;
  $total_glyph_count$0201 = 0;
  $total_glyph_range_count$0200 = 0;
  L12 : while (1) {
   $20 = HEAP32[$$pre + ($input_i$0197 * 84 | 0) + 80 >> 2] | 0;
   if (!$20) {
    label = 11;
    break;
   }
   $23 = HEAP32[$20 + 36 >> 2] | 0;
   if (!(($23 | 0) == 0 | ($23 | 0) == ($this | 0))) {
    label = 11;
    break;
   }
   $27 = HEAP32[$$pre + ($input_i$0197 * 84 | 0) >> 2] | 0;
   $29 = HEAP32[$$pre + ($input_i$0197 * 84 | 0) + 12 >> 2] | 0;
   L16 : do switch (HEAP8[$27 >> 0] | 0) {
   case 49:
    {
     if (HEAP8[$27 + 1 >> 0] | 0) {
      label = 32;
      break L12;
     }
     if (HEAP8[$27 + 2 >> 0] | 0) {
      label = 32;
      break L12;
     }
     if (!(HEAP8[$27 + 3 >> 0] | 0)) label = 25; else {
      label = 32;
      break L12;
     }
     break;
    }
   case 116:
    {
     switch (HEAP8[$27 + 1 >> 0] | 0) {
     case 121:
      {
       if ((HEAP8[$27 + 2 >> 0] | 0) != 112) {
        label = 32;
        break L12;
       }
       if ((HEAP8[$27 + 3 >> 0] | 0) == 49) {
        label = 25;
        break L16;
       } else {
        label = 32;
        break L12;
       }
       break;
      }
     case 116:
      break;
     default:
      {
       label = 32;
       break L12;
      }
     }
     if ((HEAP8[$27 + 2 >> 0] | 0) != 99) {
      label = 32;
      break L12;
     }
     if ((HEAP8[$27 + 3 >> 0] | 0) != 102) {
      label = 32;
      break L12;
     }
     $90 = HEAPU8[$27 + 5 >> 0] << 16 | HEAPU8[$27 + 4 >> 0] << 24 | HEAPU8[$27 + 6 >> 0] << 8 | HEAPU8[$27 + 7 >> 0];
     if (($90 | 0) < 131072) switch ($90 | 0) {
     case 65536:
      break;
     default:
      {
       label = 32;
       break L12;
      }
     } else switch ($90 | 0) {
     case 131072:
      break;
     default:
      {
       label = 32;
       break L12;
      }
     }
     if ((HEAPU8[$27 + 9 >> 0] << 16 | HEAPU8[$27 + 8 >> 0] << 24 | HEAPU8[$27 + 10 >> 0] << 8 | HEAPU8[$27 + 11 >> 0] | 0) <= ($29 | 0)) {
      label = 32;
      break L12;
     }
     $112 = $27 + 12 + ($29 << 2) | 0;
     $$1$i = HEAPU8[$112 + 1 >> 0] << 16 | HEAPU8[$112 >> 0] << 24 | HEAPU8[$112 + 2 >> 0] << 8 | HEAPU8[$112 + 3 >> 0];
     break;
    }
   case 79:
    {
     if ((HEAP8[$27 + 1 >> 0] | 0) != 84) {
      label = 32;
      break L12;
     }
     if ((HEAP8[$27 + 2 >> 0] | 0) != 84) {
      label = 32;
      break L12;
     }
     if ((HEAP8[$27 + 3 >> 0] | 0) == 79) label = 25; else {
      label = 32;
      break L12;
     }
     break;
    }
   case 0:
    {
     if ((HEAP8[$27 + 1 >> 0] | 0) != 1) {
      label = 32;
      break L12;
     }
     if (HEAP8[$27 + 2 >> 0] | 0) {
      label = 32;
      break L12;
     }
     if (!(HEAP8[$27 + 3 >> 0] | 0)) label = 25; else {
      label = 32;
      break L12;
     }
     break;
    }
   default:
    {
     label = 32;
     break L12;
    }
   } while (0);
   if ((label | 0) == 25) {
    label = 0;
    $$1$i = (($29 | 0) != 0) << 31 >> 31;
   }
   if (($$1$i | 0) <= -1) {
    label = 32;
    break;
   }
   HEAP32[$15 + ($input_i$0197 * 60 | 0) + 4 >> 2] = $27;
   HEAP32[$15 + ($input_i$0197 * 60 | 0) + 8 >> 2] = $$1$i;
   $134 = $27 + $$1$i + 4 | 0;
   $$idx$i$i = $134 + 1 | 0;
   $138 = HEAPU8[$134 >> 0] << 8 | HEAPU8[$$idx$i$i >> 0];
   $139 = $$1$i + 12 | 0;
   L42 : do if (!$138) {
    $$2$i89$i = 0;
    $210 = 0;
   } else {
    $i$03$i$i = 0;
    while (1) {
     $143 = $27 + (($i$03$i$i << 4) + $139) | 0;
     if ((HEAP8[$143 >> 0] | 0) == 99) if ((HEAP8[$143 + 1 >> 0] | 0) == 109) if ((HEAP8[$143 + 2 >> 0] | 0) == 97) if ((HEAP8[$143 + 3 >> 0] | 0) == 112) {
      $$lcssa489 = $143;
      label = 38;
      break;
     }
     $i$03$i$i = $i$03$i$i + 1 | 0;
     if (($i$03$i$i | 0) >= ($138 | 0)) {
      $$2$i$i = 0;
      break;
     }
    }
    if ((label | 0) == 38) {
     label = 0;
     $155 = $$lcssa489 + 8 | 0;
     $$2$i$i = HEAPU8[$155 + 1 >> 0] << 16 | HEAPU8[$155 >> 0] << 24 | HEAPU8[$155 + 2 >> 0] << 8 | HEAPU8[$155 + 3 >> 0];
    }
    $i$03$i55$i = 0;
    while (1) {
     $177 = $27 + (($i$03$i55$i << 4) + $139) | 0;
     if ((HEAP8[$177 >> 0] | 0) == 108) if ((HEAP8[$177 + 1 >> 0] | 0) == 111) if ((HEAP8[$177 + 2 >> 0] | 0) == 99) if ((HEAP8[$177 + 3 >> 0] | 0) == 97) {
      $$lcssa491 = $177;
      break;
     }
     $i$03$i55$i = $i$03$i55$i + 1 | 0;
     if (($i$03$i55$i | 0) >= ($138 | 0)) {
      $$2$i89$i = $$2$i$i;
      $210 = 0;
      break L42;
     }
    }
    $189 = $$lcssa491 + 8 | 0;
    $$2$i89$i = $$2$i$i;
    $210 = HEAPU8[$189 + 1 >> 0] << 16 | HEAPU8[$189 >> 0] << 24 | HEAPU8[$189 + 2 >> 0] << 8 | HEAPU8[$189 + 3 >> 0];
   } while (0);
   HEAP32[$15 + ($input_i$0197 * 60 | 0) + 16 >> 2] = $210;
   $214 = HEAPU8[$134 >> 0] << 8 | HEAPU8[$$idx$i$i >> 0];
   L62 : do if (!$214) $251 = 0; else {
    $i$03$i48$i = 0;
    while (1) {
     $218 = $27 + (($i$03$i48$i << 4) + $139) | 0;
     if ((HEAP8[$218 >> 0] | 0) == 104) if ((HEAP8[$218 + 1 >> 0] | 0) == 101) if ((HEAP8[$218 + 2 >> 0] | 0) == 97) if ((HEAP8[$218 + 3 >> 0] | 0) == 100) {
      $$lcssa493 = $218;
      break;
     }
     $i$03$i48$i = $i$03$i48$i + 1 | 0;
     if (($i$03$i48$i | 0) >= ($214 | 0)) {
      $251 = 0;
      break L62;
     }
    }
    $230 = $$lcssa493 + 8 | 0;
    $251 = HEAPU8[$230 + 1 >> 0] << 16 | HEAPU8[$230 >> 0] << 24 | HEAPU8[$230 + 2 >> 0] << 8 | HEAPU8[$230 + 3 >> 0];
   } while (0);
   HEAP32[$15 + ($input_i$0197 * 60 | 0) + 20 >> 2] = $251;
   $255 = HEAPU8[$134 >> 0] << 8 | HEAPU8[$$idx$i$i >> 0];
   L72 : do if (!$255) $292 = 0; else {
    $i$03$i41$i = 0;
    while (1) {
     $259 = $27 + (($i$03$i41$i << 4) + $139) | 0;
     if ((HEAP8[$259 >> 0] | 0) == 103) if ((HEAP8[$259 + 1 >> 0] | 0) == 108) if ((HEAP8[$259 + 2 >> 0] | 0) == 121) if ((HEAP8[$259 + 3 >> 0] | 0) == 102) {
      $$lcssa495 = $259;
      break;
     }
     $i$03$i41$i = $i$03$i41$i + 1 | 0;
     if (($i$03$i41$i | 0) >= ($255 | 0)) {
      $292 = 0;
      break L72;
     }
    }
    $271 = $$lcssa495 + 8 | 0;
    $292 = HEAPU8[$271 + 1 >> 0] << 16 | HEAPU8[$271 >> 0] << 24 | HEAPU8[$271 + 2 >> 0] << 8 | HEAPU8[$271 + 3 >> 0];
   } while (0);
   HEAP32[$15 + ($input_i$0197 * 60 | 0) + 24 >> 2] = $292;
   $296 = HEAPU8[$134 >> 0] << 8 | HEAPU8[$$idx$i$i >> 0];
   L82 : do if (!$296) $333 = 0; else {
    $i$03$i34$i = 0;
    while (1) {
     $300 = $27 + (($i$03$i34$i << 4) + $139) | 0;
     if ((HEAP8[$300 >> 0] | 0) == 104) if ((HEAP8[$300 + 1 >> 0] | 0) == 104) if ((HEAP8[$300 + 2 >> 0] | 0) == 101) if ((HEAP8[$300 + 3 >> 0] | 0) == 97) {
      $$lcssa497 = $300;
      break;
     }
     $i$03$i34$i = $i$03$i34$i + 1 | 0;
     if (($i$03$i34$i | 0) >= ($296 | 0)) {
      $333 = 0;
      break L82;
     }
    }
    $312 = $$lcssa497 + 8 | 0;
    $333 = HEAPU8[$312 + 1 >> 0] << 16 | HEAPU8[$312 >> 0] << 24 | HEAPU8[$312 + 2 >> 0] << 8 | HEAPU8[$312 + 3 >> 0];
   } while (0);
   HEAP32[$15 + ($input_i$0197 * 60 | 0) + 28 >> 2] = $333;
   $337 = HEAPU8[$134 >> 0] << 8 | HEAPU8[$$idx$i$i >> 0];
   L92 : do if (!$337) $374 = 0; else {
    $i$03$i27$i = 0;
    while (1) {
     $341 = $27 + (($i$03$i27$i << 4) + $139) | 0;
     if ((HEAP8[$341 >> 0] | 0) == 104) if ((HEAP8[$341 + 1 >> 0] | 0) == 109) if ((HEAP8[$341 + 2 >> 0] | 0) == 116) if ((HEAP8[$341 + 3 >> 0] | 0) == 120) {
      $$lcssa499 = $341;
      break;
     }
     $i$03$i27$i = $i$03$i27$i + 1 | 0;
     if (($i$03$i27$i | 0) >= ($337 | 0)) {
      $374 = 0;
      break L92;
     }
    }
    $353 = $$lcssa499 + 8 | 0;
    $374 = HEAPU8[$353 + 1 >> 0] << 16 | HEAPU8[$353 >> 0] << 24 | HEAPU8[$353 + 2 >> 0] << 8 | HEAPU8[$353 + 3 >> 0];
   } while (0);
   HEAP32[$15 + ($input_i$0197 * 60 | 0) + 32 >> 2] = $374;
   $378 = HEAPU8[$134 >> 0] << 8 | HEAPU8[$$idx$i$i >> 0];
   L102 : do if (!$378) $$2$i21$i = 0; else {
    $i$03$i20$i = 0;
    L103 : while (1) {
     $382 = $27 + (($i$03$i20$i << 4) + $139) | 0;
     do if ((HEAP8[$382 >> 0] | 0) == 107) if ((HEAP8[$382 + 1 >> 0] | 0) == 101) {
      if ((HEAP8[$382 + 2 >> 0] | 0) != 114) break;
      if ((HEAP8[$382 + 3 >> 0] | 0) == 110) {
       $$lcssa501 = $382;
       break L103;
      }
     } while (0);
     $i$03$i20$i = $i$03$i20$i + 1 | 0;
     if (($i$03$i20$i | 0) >= ($378 | 0)) {
      $$2$i21$i = 0;
      break L102;
     }
    }
    $394 = $$lcssa501 + 8 | 0;
    $$2$i21$i = HEAPU8[$394 + 1 >> 0] << 16 | HEAPU8[$394 >> 0] << 24 | HEAPU8[$394 + 2 >> 0] << 8 | HEAPU8[$394 + 3 >> 0];
   } while (0);
   HEAP32[$15 + ($input_i$0197 * 60 | 0) + 36 >> 2] = $$2$i21$i;
   if (($$2$i89$i | 0) == 0 | ($210 | 0) == 0 | ($251 | 0) == 0 | ($292 | 0) == 0 | ($333 | 0) == 0 | ($374 | 0) == 0) {
    $$3 = 0;
    label = 404;
    break;
   }
   $424 = HEAPU8[$134 >> 0] << 8 | HEAPU8[$$idx$i$i >> 0];
   L113 : do if (!$424) label = 91; else {
    $i$03$i13$i = 0;
    L114 : while (1) {
     $428 = $27 + (($i$03$i13$i << 4) + $139) | 0;
     do if ((HEAP8[$428 >> 0] | 0) == 109) {
      if ((HEAP8[$428 + 1 >> 0] | 0) != 97) break;
      if ((HEAP8[$428 + 2 >> 0] | 0) != 120) break;
      if ((HEAP8[$428 + 3 >> 0] | 0) == 112) {
       $$lcssa503 = $428;
       break L114;
      }
     } while (0);
     $i$03$i13$i = $i$03$i13$i + 1 | 0;
     if (($i$03$i13$i | 0) >= ($424 | 0)) {
      label = 91;
      break L113;
     }
    }
    $442 = $$lcssa503 + 8 | 0;
    $459 = HEAPU8[$442 + 1 >> 0] << 16 | HEAPU8[$442 >> 0] << 24 | HEAPU8[$442 + 2 >> 0] << 8 | HEAPU8[$442 + 3 >> 0];
    if (!$459) label = 91; else {
     $462 = $27 + $459 + 4 | 0;
     HEAP32[$15 + ($input_i$0197 * 60 | 0) + 12 >> 2] = HEAPU8[$462 >> 0] << 8 | HEAPU8[$462 + 1 >> 0];
    }
   } while (0);
   if ((label | 0) == 91) {
    label = 0;
    HEAP32[$15 + ($input_i$0197 * 60 | 0) + 12 >> 2] = 65535;
   }
   $470 = $27 + $$2$i89$i + 2 | 0;
   $474 = HEAPU8[$470 >> 0] << 8 | HEAPU8[$470 + 1 >> 0];
   $475 = $15 + ($input_i$0197 * 60 | 0) + 40 | 0;
   HEAP32[$475 >> 2] = 0;
   if (!$474) {
    $$3 = 0;
    label = 404;
    break;
   }
   $477 = $$2$i89$i + 4 | 0;
   $1878 = 0;
   $i$073$i = 0;
   while (1) {
    $480 = $27 + ($477 + ($i$073$i << 3)) | 0;
    L129 : do switch (HEAPU8[$480 >> 0] << 8 | HEAPU8[$480 + 1 >> 0] | 0) {
    case 3:
     {
      $485 = $480 + 2 | 0;
      switch (HEAPU8[$485 >> 0] << 8 | HEAPU8[$485 + 1 >> 0] | 0) {
      case 10:
      case 1:
       break;
      default:
       {
        $1879 = $1878;
        break L129;
       }
      }
      $490 = $480 + 4 | 0;
      $508 = (HEAPU8[$490 + 1 >> 0] << 16 | HEAPU8[$490 >> 0] << 24 | HEAPU8[$490 + 2 >> 0] << 8 | HEAPU8[$490 + 3 >> 0]) + $$2$i89$i | 0;
      HEAP32[$475 >> 2] = $508;
      $1879 = $508;
      break;
     }
    case 0:
     {
      $509 = $480 + 4 | 0;
      $527 = (HEAPU8[$509 + 1 >> 0] << 16 | HEAPU8[$509 >> 0] << 24 | HEAPU8[$509 + 2 >> 0] << 8 | HEAPU8[$509 + 3 >> 0]) + $$2$i89$i | 0;
      HEAP32[$475 >> 2] = $527;
      $1879 = $527;
      break;
     }
    default:
     $1879 = $1878;
    } while (0);
    $i$073$i = $i$073$i + 1 | 0;
    if (($i$073$i | 0) >= ($474 | 0)) {
     $$lcssa505 = $1879;
     break;
    } else $1878 = $1879;
   }
   if (!$$lcssa505) {
    $$3 = 0;
    label = 404;
    break;
   }
   $532 = $27 + $251 + 50 | 0;
   HEAP32[$15 + ($input_i$0197 * 60 | 0) + 44 >> 2] = HEAPU8[$532 >> 0] << 8 | HEAPU8[$532 + 1 >> 0];
   $538 = $$pre + ($input_i$0197 * 84 | 0) + 40 | 0;
   $539 = HEAP32[$538 >> 2] | 0;
   if (!$539) {
    HEAP32[$538 >> 2] = 14324;
    $542 = 14324;
   } else $542 = $539;
   $541 = HEAP16[$542 >> 1] | 0;
   L139 : do if (!($541 << 16 >> 16)) {
    $total_glyph_count$1$lcssa = $total_glyph_count$0201;
    $total_glyph_range_count$1$lcssa = $total_glyph_range_count$0200;
   } else {
    $549 = $541;
    $in_range$0186 = $542;
    $total_glyph_count$1188 = $total_glyph_count$0201;
    $total_glyph_range_count$1187 = $total_glyph_range_count$0200;
    while (1) {
     $545 = HEAP16[$in_range$0186 + 2 >> 1] | 0;
     if (!($545 << 16 >> 16)) {
      $total_glyph_count$1$lcssa = $total_glyph_count$1188;
      $total_glyph_range_count$1$lcssa = $total_glyph_range_count$1187;
      break L139;
     }
     $552 = $total_glyph_count$1188 + 1 - ($549 & 65535) + ($545 & 65535) | 0;
     $553 = $total_glyph_range_count$1187 + 1 | 0;
     $in_range$0186 = $in_range$0186 + 4 | 0;
     $549 = HEAP16[$in_range$0186 >> 1] | 0;
     if (!($549 << 16 >> 16)) {
      $total_glyph_count$1$lcssa = $552;
      $total_glyph_range_count$1$lcssa = $553;
      break;
     } else {
      $total_glyph_count$1188 = $552;
      $total_glyph_range_count$1187 = $553;
     }
    }
   } while (0);
   $input_i$0197 = $input_i$0197 + 1 | 0;
   if (($input_i$0197 | 0) >= ($16 | 0)) {
    $total_glyph_count$0$lcssa = $total_glyph_count$1$lcssa;
    $total_glyph_range_count$0$lcssa = $total_glyph_range_count$1$lcssa;
    break L10;
   } else {
    $total_glyph_count$0201 = $total_glyph_count$1$lcssa;
    $total_glyph_range_count$0200 = $total_glyph_range_count$1$lcssa;
   }
  }
  if ((label | 0) == 11) ___assert_fail(139955, 127372, 1232, 139949); else if ((label | 0) == 32) ___assert_fail(140036, 127372, 1234, 139949); else if ((label | 0) == 404) {
   STACKTOP = sp;
   return $$3 | 0;
  }
 } else {
  $total_glyph_count$0$lcssa = 0;
  $total_glyph_range_count$0$lcssa = 0;
 } while (0);
 $560 = HEAP32[$this + 20 >> 2] | 0;
 if (($560 | 0) > 0) $566 = $560; else if (($total_glyph_count$0$lcssa | 0) > 4e3) $566 = 4096; else if (($total_glyph_count$0$lcssa | 0) > 2e3) $566 = 2048; else $566 = ($total_glyph_count$0$lcssa | 0) > 1e3 ? 1024 : 512;
 HEAP32[$4 >> 2] = $566;
 HEAP32[$3 >> 2] = 0;
 $567 = __ZN5ImGui8MemAllocEj(48) | 0;
 $568 = $566 + -1 | 0;
 $570 = __ZN5ImGui8MemAllocEj($568 << 3) | 0;
 $571 = ($567 | 0) == 0;
 $572 = ($570 | 0) == 0;
 if ($571 | $572) {
  if (!$571) __ZN5ImGui7MemFreeEPv($567);
  if (!$572) __ZN5ImGui7MemFreeEPv($570);
 } else {
  if (($566 | 0) >= 65537) ___assert_fail(140053, 140089, 242, 140143);
  $574 = $566 + -2 | 0;
  if (($568 | 0) > 1) {
   $i$01$i$i = 0;
   do {
    $i$01$i$i$looptemp = $i$01$i$i;
    $i$01$i$i = $i$01$i$i + 1 | 0;
    HEAP32[$570 + ($i$01$i$i$looptemp << 3) + 4 >> 2] = $570 + ($i$01$i$i << 3);
   } while (($i$01$i$i | 0) != ($574 | 0));
   $i$0$lcssa$i$i = $574;
  } else $i$0$lcssa$i$i = 0;
  HEAP32[$570 + ($i$0$lcssa$i$i << 3) + 4 >> 2] = 0;
  HEAP32[$567 + 12 >> 2] = 1;
  HEAP32[$567 + 16 >> 2] = 0;
  HEAP32[$567 + 28 >> 2] = $570;
  $583 = $567 + 32 | 0;
  HEAP32[$567 + 24 >> 2] = $583;
  HEAP32[$567 >> 2] = $568;
  HEAP32[$567 + 4 >> 2] = 32767;
  HEAP32[$567 + 20 >> 2] = $568;
  HEAP32[$567 + 8 >> 2] = ($574 + $568 | 0) / ($568 | 0) | 0;
  HEAP16[$583 >> 1] = 0;
  HEAP16[$567 + 34 >> 1] = 0;
  $591 = $567 + 40 | 0;
  HEAP32[$567 + 36 >> 2] = $591;
  HEAP16[$591 >> 1] = $568;
  HEAP16[$567 + 42 >> 1] = -1;
  HEAP32[$567 + 44 >> 2] = 0;
 }
 $597 = $extra_rects + 8 | 0;
 $598 = __ZN5ImGui8MemAllocEj(128) | 0;
 __ZN5ImGui7MemFreeEPv(0);
 HEAP32[$597 >> 2] = $598;
 HEAP32[$extra_rects + 4 >> 2] = 8;
 HEAP32[$extra_rects >> 2] = 1;
 HEAP32[$598 >> 2] = 0;
 HEAP16[$598 + 4 >> 1] = 181;
 HEAP16[$598 + 6 >> 1] = 28;
 $602 = $598 + 8 | 0;
 HEAP32[$602 >> 2] = 0;
 HEAP32[$602 + 4 >> 2] = 0;
 $606 = HEAP32[$extra_rects >> 2] | 0;
 if (($606 | 0) <= 0) ___assert_fail(127217, 127226, 805, 127272);
 $608 = HEAP32[$597 >> 2] | 0;
 __ZL16stbrp_pack_rectsP13stbrp_contextP10stbrp_recti($567, $608, $606);
 $i$0184 = 0;
 do {
  if (HEAP32[$608 + ($i$0184 << 4) + 12 >> 2] | 0) {
   $621 = HEAP32[$3 >> 2] | 0;
   $628 = (HEAPU16[$608 + ($i$0184 << 4) + 6 >> 1] | 0) + (HEAPU16[$608 + ($i$0184 << 4) + 10 >> 1] | 0) | 0;
   HEAP32[$3 >> 2] = ($621 | 0) >= ($628 | 0) ? $621 : $628;
  }
  $i$0184 = $i$0184 + 1 | 0;
 } while (($i$0184 | 0) < ($606 | 0));
 $609 = $total_glyph_count$0$lcssa * 28 | 0;
 $610 = __ZN5ImGui8MemAllocEj($609) | 0;
 $611 = $total_glyph_count$0$lcssa << 4;
 $612 = __ZN5ImGui8MemAllocEj($611) | 0;
 $613 = $total_glyph_range_count$0$lcssa * 24 | 0;
 $614 = __ZN5ImGui8MemAllocEj($613) | 0;
 _memset($610 | 0, 0, $609 | 0) | 0;
 _memset($612 | 0, 0, $611 | 0) | 0;
 _memset($614 | 0, 0, $613 | 0) | 0;
 L199 : do if ((HEAP32[$0 >> 2] | 0) > 0) {
  $617 = $this + 52 | 0;
  $buf_packedchars_n$0179 = 0;
  $buf_ranges_n$0177 = 0;
  $buf_rects_n$0178 = 0;
  $input_i2$0175 = 0;
  while (1) {
   $634 = HEAP32[$617 >> 2] | 0;
   $635 = $634 + ($input_i2$0175 * 84 | 0) + 40 | 0;
   $636 = HEAP32[$635 >> 2] | 0;
   $637 = HEAP16[$636 >> 1] | 0;
   L203 : do if (!($637 << 16 >> 16)) {
    $645 = 0;
    $glyph_count$0$lcssa = 0;
   } else {
    $653 = $637;
    $glyph_count$0161 = 0;
    $glyph_ranges_count$0160 = 0;
    $in_range5$0159 = $636;
    while (1) {
     $640 = HEAP16[$in_range5$0159 + 2 >> 1] | 0;
     if (!($640 << 16 >> 16)) {
      $645 = $glyph_ranges_count$0160;
      $glyph_count$0$lcssa = $glyph_count$0161;
      break L203;
     }
     $656 = $glyph_count$0161 + 1 - ($653 & 65535) + ($640 & 65535) | 0;
     $657 = $glyph_ranges_count$0160 + 1 | 0;
     $in_range5$0159 = $in_range5$0159 + 4 | 0;
     $653 = HEAP16[$in_range5$0159 >> 1] | 0;
     if (!($653 << 16 >> 16)) {
      $645 = $657;
      $glyph_count$0$lcssa = $656;
      break;
     } else {
      $glyph_count$0161 = $656;
      $glyph_ranges_count$0160 = $657;
     }
    }
   } while (0);
   $642 = $614 + ($buf_ranges_n$0177 * 24 | 0) | 0;
   $643 = $15 + ($input_i2$0175 * 60 | 0) + 52 | 0;
   HEAP32[$643 >> 2] = $642;
   HEAP32[$15 + ($input_i2$0175 * 60 | 0) + 56 >> 2] = $645;
   $646 = $645 + $buf_ranges_n$0177 | 0;
   $647 = ($645 | 0) > 0;
   if ($647) {
    $648 = HEAP32[$635 >> 2] | 0;
    $650 = HEAP32[$634 + ($input_i2$0175 * 84 | 0) + 16 >> 2] | 0;
    $buf_packedchars_n$1168 = $buf_packedchars_n$0179;
    $i6$0167 = 0;
    while (1) {
     $743 = $648 + ($i6$0167 << 1 << 1) | 0;
     HEAP32[$642 + ($i6$0167 * 24 | 0) >> 2] = $650;
     $746 = HEAPU16[$743 >> 1] | 0;
     HEAP32[$642 + ($i6$0167 * 24 | 0) + 4 >> 2] = $746;
     $752 = (HEAPU16[$743 + 2 >> 1] | 0) - $746 + 1 | 0;
     HEAP32[$642 + ($i6$0167 * 24 | 0) + 12 >> 2] = $752;
     HEAP32[$642 + ($i6$0167 * 24 | 0) + 16 >> 2] = $610 + ($buf_packedchars_n$1168 * 28 | 0);
     $756 = $752 + $buf_packedchars_n$1168 | 0;
     $i6$0167 = $i6$0167 + 1 | 0;
     if (($i6$0167 | 0) == ($645 | 0)) {
      $buf_packedchars_n$1$lcssa = $756;
      break;
     } else $buf_packedchars_n$1168 = $756;
    }
   } else $buf_packedchars_n$1$lcssa = $buf_packedchars_n$0179;
   $661 = $612 + ($buf_rects_n$0178 << 4) | 0;
   $662 = $15 + ($input_i2$0175 * 60 | 0) + 48 | 0;
   HEAP32[$662 >> 2] = $661;
   $663 = $glyph_count$0$lcssa + $buf_rects_n$0178 | 0;
   $665 = HEAP32[$634 + ($input_i2$0175 * 84 | 0) + 20 >> 2] | 0;
   $667 = HEAP32[$634 + ($input_i2$0175 * 84 | 0) + 24 >> 2] | 0;
   if ($665 >>> 0 >= 9) {
    label = 135;
    break;
   }
   if ($667 >>> 0 >= 9) {
    label = 137;
    break;
   }
   $670 = $15 + ($input_i2$0175 * 60 | 0) | 0;
   $671 = HEAP32[$643 >> 2] | 0;
   if ($647) {
    $info$idx$i = $15 + ($input_i2$0175 * 60 | 0) + 4 | 0;
    $info$idx1$i = $15 + ($input_i2$0175 * 60 | 0) + 28 | 0;
    $info$idx5$i = $15 + ($input_i2$0175 * 60 | 0) + 40 | 0;
    $info$idx3$i = $15 + ($input_i2$0175 * 60 | 0) + 20 | 0;
    $672 = $665 & 255;
    $673 = $667 & 255;
    $674 = +($665 >>> 0);
    $675 = +($667 >>> 0);
    $i$013$i = 0;
    $k$012$i = 0;
    while (1) {
     $677 = +HEAPF32[$671 + ($i$013$i * 24 | 0) >> 2];
     if ($677 > 0.0) {
      $679 = (HEAP32[$info$idx$i >> 2] | 0) + (HEAP32[$info$idx1$i >> 2] | 0) | 0;
      $680 = $679 + 4 | 0;
      $686 = $679 + 6 | 0;
      $713 = $677 / +(((HEAPU8[$680 >> 0] << 8 | HEAPU8[$680 + 1 >> 0]) << 16 >> 16) - ((HEAPU8[$686 >> 0] << 8 | HEAPU8[$686 + 1 >> 0]) << 16 >> 16) | 0);
     } else {
      $697 = (HEAP32[$info$idx$i >> 2] | 0) + (HEAP32[$info$idx3$i >> 2] | 0) + 18 | 0;
      $713 = -$677 / +((HEAPU8[$697 >> 0] << 8 | HEAPU8[$697 + 1 >> 0]) & 65535);
     }
     HEAP8[$671 + ($i$013$i * 24 | 0) + 20 >> 0] = $672;
     HEAP8[$671 + ($i$013$i * 24 | 0) + 21 >> 0] = $673;
     $707 = $671 + ($i$013$i * 24 | 0) + 12 | 0;
     if ((HEAP32[$707 >> 2] | 0) > 0) {
      $710 = $671 + ($i$013$i * 24 | 0) + 8 | 0;
      $711 = $671 + ($i$013$i * 24 | 0) + 4 | 0;
      $712 = $674 * $713;
      $714 = $675 * $713;
      $j$011$i = 0;
      $k$110$i = $k$012$i;
      while (1) {
       $715 = HEAP32[$710 >> 2] | 0;
       if (!$715) $721 = (HEAP32[$711 >> 2] | 0) + $j$011$i | 0; else $721 = HEAP32[$715 + ($j$011$i << 2) >> 2] | 0;
       __ZL31stbtt_GetGlyphBitmapBoxSubpixelPK14stbtt_fontinfoiffffPiS2_S2_S2_($670, __ZL20stbtt_FindGlyphIndexPK14stbtt_fontinfoi(HEAP32[$info$idx$i >> 2] | 0, HEAP32[$info$idx5$i >> 2] | 0, $721) | 0, $712, $714, $active$sroa$0$i$i$i$i$i, $scanline_data$i$i$i$i$i, $vertices$i$i, $x0$i22);
       HEAP16[$661 + ($k$110$i << 4) + 4 >> 1] = $665 + (HEAP32[$vertices$i$i >> 2] | 0) - (HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0);
       HEAP16[$661 + ($k$110$i << 4) + 6 >> 1] = $667 + (HEAP32[$x0$i22 >> 2] | 0) - (HEAP32[$scanline_data$i$i$i$i$i >> 2] | 0);
       $735 = $k$110$i + 1 | 0;
       $j$011$i = $j$011$i + 1 | 0;
       if (($j$011$i | 0) >= (HEAP32[$707 >> 2] | 0)) {
        $k$1$lcssa$i = $735;
        break;
       } else $k$110$i = $735;
      }
     } else $k$1$lcssa$i = $k$012$i;
     $i$013$i = $i$013$i + 1 | 0;
     if (($i$013$i | 0) == ($645 | 0)) {
      $k$1$lcssa$i$lcssa = $k$1$lcssa$i;
      break;
     } else $k$012$i = $k$1$lcssa$i;
    }
    __ZL16stbrp_pack_rectsP13stbrp_contextP10stbrp_recti($567, HEAP32[$662 >> 2] | 0, $k$1$lcssa$i$lcssa);
    if (($k$1$lcssa$i$lcssa | 0) > 0) {
     $741 = HEAP32[$662 >> 2] | 0;
     $i8$0172 = 0;
     do {
      if (HEAP32[$741 + ($i8$0172 << 4) + 12 >> 2] | 0) {
       $764 = HEAP32[$3 >> 2] | 0;
       $771 = (HEAPU16[$741 + ($i8$0172 << 4) + 6 >> 1] | 0) + (HEAPU16[$741 + ($i8$0172 << 4) + 10 >> 1] | 0) | 0;
       HEAP32[$3 >> 2] = ($764 | 0) >= ($771 | 0) ? $764 : $771;
      }
      $i8$0172 = $i8$0172 + 1 | 0;
     } while (($i8$0172 | 0) != ($k$1$lcssa$i$lcssa | 0));
    }
   } else __ZL16stbrp_pack_rectsP13stbrp_contextP10stbrp_recti($567, $661, 0);
   $input_i2$0175 = $input_i2$0175 + 1 | 0;
   if (($input_i2$0175 | 0) >= (HEAP32[$0 >> 2] | 0)) {
    $buf_packedchars_n$0$lcssa = $buf_packedchars_n$1$lcssa;
    $buf_ranges_n$0$lcssa = $646;
    $buf_rects_n$0$lcssa = $663;
    break L199;
   } else {
    $buf_packedchars_n$0179 = $buf_packedchars_n$1$lcssa;
    $buf_ranges_n$0177 = $646;
    $buf_rects_n$0178 = $663;
   }
  }
  if ((label | 0) == 135) ___assert_fail(140420, 140438, 2695, 140491); else if ((label | 0) == 137) ___assert_fail(140517, 140438, 2696, 140491);
 } else {
  $buf_packedchars_n$0$lcssa = 0;
  $buf_ranges_n$0$lcssa = 0;
  $buf_rects_n$0$lcssa = 0;
 } while (0);
 if (($buf_rects_n$0$lcssa | 0) != ($total_glyph_count$0$lcssa | 0)) ___assert_fail(140612, 127372, 1314, 139949);
 if (($buf_packedchars_n$0$lcssa | 0) != ($total_glyph_count$0$lcssa | 0)) ___assert_fail(140645, 127372, 1315, 139949);
 if (($buf_ranges_n$0$lcssa | 0) != ($total_glyph_range_count$0$lcssa | 0)) ___assert_fail(140684, 127372, 1316, 139949);
 $778 = (HEAP32[$3 >> 2] | 0) + -1 | 0;
 $780 = $778 >> 1 | $778;
 $782 = $780 >> 2 | $780;
 $784 = $782 >> 4 | $782;
 $786 = $784 >> 8 | $784;
 $789 = ($786 >> 16 | $786) + 1 | 0;
 HEAP32[$3 >> 2] = $789;
 $792 = __ZN5ImGui8MemAllocEj(Math_imul($789, HEAP32[$4 >> 2] | 0) | 0) | 0;
 HEAP32[$7 >> 2] = $792;
 _memset($792 | 0, 0, Math_imul(HEAP32[$3 >> 2] | 0, HEAP32[$4 >> 2] | 0) | 0) | 0;
 $796 = HEAP32[$7 >> 2] | 0;
 $797 = HEAP32[$0 >> 2] | 0;
 L254 : do if (($797 | 0) > 0) {
  $799 = $this + 52 | 0;
  $1880 = $797;
  $input_i9$0157 = 0;
  L256 : while (1) {
   $803 = HEAP32[$799 >> 2] | 0;
   if ((HEAP32[$803 + ($input_i9$0157 * 84 | 0) + 20 >> 2] | 0) >>> 0 >= 9) {
    label = 168;
    break;
   }
   if ((HEAP32[$803 + ($input_i9$0157 * 84 | 0) + 24 >> 2] | 0) >>> 0 >= 9) {
    label = 170;
    break;
   }
   $810 = $15 + ($input_i9$0157 * 60 | 0) | 0;
   $812 = HEAP32[$15 + ($input_i9$0157 * 60 | 0) + 52 >> 2] | 0;
   $814 = HEAP32[$15 + ($input_i9$0157 * 60 | 0) + 56 >> 2] | 0;
   $815 = $15 + ($input_i9$0157 * 60 | 0) + 48 | 0;
   $816 = HEAP32[$815 >> 2] | 0;
   if (($814 | 0) > 0) {
    $info$idx$i26 = $15 + ($input_i9$0157 * 60 | 0) + 4 | 0;
    $info$idx1$i27 = $15 + ($input_i9$0157 * 60 | 0) + 28 | 0;
    $info$idx5$i28 = $15 + ($input_i9$0157 * 60 | 0) + 40 | 0;
    $818 = $15 + ($input_i9$0157 * 60 | 0) + 32 | 0;
    $info$idx3$i29 = $15 + ($input_i9$0157 * 60 | 0) + 20 | 0;
    $i$0116$i = 0;
    $k$0115$i = 0;
    while (1) {
     $820 = +HEAPF32[$812 + ($i$0116$i * 24 | 0) >> 2];
     if ($820 > 0.0) {
      $822 = (HEAP32[$info$idx$i26 >> 2] | 0) + (HEAP32[$info$idx1$i27 >> 2] | 0) | 0;
      $823 = $822 + 4 | 0;
      $829 = $822 + 6 | 0;
      $875 = $820 / +(((HEAPU8[$823 >> 0] << 8 | HEAPU8[$823 + 1 >> 0]) << 16 >> 16) - ((HEAPU8[$829 >> 0] << 8 | HEAPU8[$829 + 1 >> 0]) << 16 >> 16) | 0);
     } else {
      $840 = (HEAP32[$info$idx$i26 >> 2] | 0) + (HEAP32[$info$idx3$i29 >> 2] | 0) + 18 | 0;
      $875 = -$820 / +((HEAPU8[$840 >> 0] << 8 | HEAPU8[$840 + 1 >> 0]) & 65535);
     }
     $849 = HEAP8[$812 + ($i$0116$i * 24 | 0) + 20 >> 0] | 0;
     $850 = $849 & 255;
     $852 = HEAP8[$812 + ($i$0116$i * 24 | 0) + 21 >> 0] | 0;
     $853 = $852 & 255;
     $854 = +($849 & 255);
     $855 = 1.0 / $854;
     $856 = +($852 & 255);
     $857 = 1.0 / $856;
     if (!($849 << 24 >> 24)) $$0$i$i = 0.0; else $$0$i$i = +(1 - $850 | 0) / ($854 * 2.0);
     if (!($852 << 24 >> 24)) $$0$i46$i = 0.0; else $$0$i46$i = +(1 - $853 | 0) / ($856 * 2.0);
     $868 = $812 + ($i$0116$i * 24 | 0) + 12 | 0;
     $869 = HEAP32[$868 >> 2] | 0;
     if (($869 | 0) > 0) {
      $871 = $812 + ($i$0116$i * 24 | 0) + 16 | 0;
      $872 = $812 + ($i$0116$i * 24 | 0) + 8 | 0;
      $873 = $812 + ($i$0116$i * 24 | 0) + 4 | 0;
      $874 = $875 * $854;
      $876 = $875 * $856;
      $877 = ($849 & 255) > 1;
      $878 = 1 - $850 | 0;
      $879 = ($852 & 255) > 1;
      $880 = 1 - $853 | 0;
      $883 = .3499999940395355 / ($874 > $876 ? $876 : $874);
      $884 = $883 * $883;
      $885 = -$876;
      $1881 = $869;
      $j$0111$i = 0;
      $k$1109$i = $k$0115$i;
      while (1) {
       if (!(HEAP32[$816 + ($k$1109$i << 4) + 12 >> 2] | 0)) $1668 = $1881; else {
        $889 = HEAP32[$871 >> 2] | 0;
        $890 = HEAP32[$872 >> 2] | 0;
        if (!$890) $896 = (HEAP32[$873 >> 2] | 0) + $j$0111$i | 0; else $896 = HEAP32[$890 + ($j$0111$i << 2) >> 2] | 0;
        $897 = __ZL20stbtt_FindGlyphIndexPK14stbtt_fontinfoi(HEAP32[$info$idx$i26 >> 2] | 0, HEAP32[$info$idx5$i28 >> 2] | 0, $896) | 0;
        $898 = $816 + ($k$1109$i << 4) + 8 | 0;
        HEAP16[$898 >> 1] = (HEAPU16[$898 >> 1] | 0) + 1;
        $903 = $816 + ($k$1109$i << 4) + 10 | 0;
        HEAP16[$903 >> 1] = (HEAPU16[$903 >> 1] | 0) + 1;
        $908 = $816 + ($k$1109$i << 4) + 4 | 0;
        HEAP16[$908 >> 1] = (HEAPU16[$908 >> 1] | 0) + 65535;
        $913 = $816 + ($k$1109$i << 4) + 6 | 0;
        HEAP16[$913 >> 1] = (HEAPU16[$913 >> 1] | 0) + 65535;
        $918 = HEAP32[$info$idx$i26 >> 2] | 0;
        $921 = $918 + (HEAP32[$info$idx1$i27 >> 2] | 0) + 34 | 0;
        $925 = HEAPU8[$921 >> 0] << 8 | HEAPU8[$921 + 1 >> 0];
        $928 = $918 + (HEAP32[$818 >> 2] | 0) | 0;
        if (($897 | 0) < ($925 | 0)) {
         $930 = $928 + ($897 << 2) | 0;
         $advance$0$in$in$i = HEAPU8[$930 >> 0] << 8 | HEAPU8[$930 + 1 >> 0];
        } else {
         $937 = $928 + (($925 << 2) + -4) | 0;
         $advance$0$in$in$i = HEAPU8[$937 >> 0] << 8 | HEAPU8[$937 + 1 >> 0];
        }
        $advance$0$i = $advance$0$in$in$i << 16 >> 16;
        __ZL31stbtt_GetGlyphBitmapBoxSubpixelPK14stbtt_fontinfoiffffPiS2_S2_S2_($810, $897, $874, $876, $x0$i22, $y0$i23, $x1$i24, $y1$i25);
        $948 = $796 + (HEAPU16[$898 >> 1] | 0) + (Math_imul(HEAPU16[$903 >> 1] | 0, $566) | 0) | 0;
        $951 = (HEAPU16[$908 >> 1] | 0) - $850 | 0;
        $952 = $951 + 1 | 0;
        $955 = (HEAPU16[$913 >> 1] | 0) - $853 | 0;
        $956 = $955 + 1 | 0;
        $957 = __ZL19stbtt_GetGlyphShapePK14stbtt_fontinfoiPP12stbtt_vertex($810, $897, $vertices$i$i) | 0;
        $958 = __ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi($810, $897) | 0;
        if (($958 | 0) < 0) {
         $ix0$0$i$i = 0;
         $iy0$0$i$i = 0;
        } else {
         $961 = (HEAP32[$info$idx$i26 >> 2] | 0) + $958 | 0;
         $962 = $961 + 2 | 0;
         $963 = $961 + 8 | 0;
         $ix0$0$i$i = ~~+Math_floor(+($874 * +((HEAPU8[$962 >> 0] << 8 | HEAPU8[$962 + 1 >> 0]) << 16 >> 16 | 0) + 0.0));
         $iy0$0$i$i = ~~+Math_floor(+($876 * +(0 - ((HEAPU8[$963 >> 0] << 8 | HEAPU8[$963 + 1 >> 0]) << 16 >> 16) | 0) + 0.0));
        }
        L291 : do if (!(($952 | 0) == 0 | ($956 | 0) == 0)) {
         $985 = HEAP32[$vertices$i$i >> 2] | 0;
         HEAP32[$active$sroa$0$i$i$i$i$i >> 2] = 0;
         do if (($957 | 0) > 0) {
          $i$016$i$i$i$i = 0;
          $n$017$i$i$i$i = 0;
          while (1) {
           $$n$0$i$i$i$i = ((HEAP8[$985 + ($i$016$i$i$i$i * 10 | 0) + 8 >> 0] | 0) == 1 & 1) + $n$017$i$i$i$i | 0;
           $i$016$i$i$i$i = $i$016$i$i$i$i + 1 | 0;
           if (($i$016$i$i$i$i | 0) == ($957 | 0)) {
            $$n$0$i$i$i$i$lcssa = $$n$0$i$i$i$i;
            break;
           } else $n$017$i$i$i$i = $$n$0$i$i$i$i;
          }
          if (!$$n$0$i$i$i$i$lcssa) break;
          $994 = __ZN5ImGui8MemAllocEj($$n$0$i$i$i$i$lcssa << 2) | 0;
          if (!$994) break; else {
           $pass$015$i$i$i$i = 0;
           $points$013$i$i$i$i = 0;
           $start$014$i$i$i$i = 0;
          }
          while (1) {
           if (($pass$015$i$i$i$i | 0) == 1) {
            $999 = __ZN5ImGui8MemAllocEj(HEAP32[$active$sroa$0$i$i$i$i$i >> 2] << 3) | 0;
            if (!$999) {
             label = 214;
             break;
            } else $points$1$i$i$i$i = $999;
           } else $points$1$i$i$i$i = $points$013$i$i$i$i;
           HEAP32[$active$sroa$0$i$i$i$i$i >> 2] = 0;
           $1001 = ($points$1$i$i$i$i | 0) == 0;
           L303 : do if ($1001) {
            $i$16$us$i$i$i$i = 0;
            $n$28$us$i$i$i$i = -1;
            $start$19$us$i$i$i$i = $start$014$i$i$i$i;
            $x$010$us$i$i$i$i = 0.0;
            $y$011$us$i$i$i$i = 0.0;
            while (1) {
             $1002 = $985 + ($i$16$us$i$i$i$i * 10 | 0) | 0;
             switch (HEAPU8[$985 + ($i$16$us$i$i$i$i * 10 | 0) + 8 >> 0] | 0) {
             case 1:
              {
               if (($n$28$us$i$i$i$i | 0) > -1) HEAP32[$994 + ($n$28$us$i$i$i$i << 2) >> 2] = (HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0) - $start$19$us$i$i$i$i;
               $1033 = HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0;
               $1035 = +(HEAP16[$1002 >> 1] | 0);
               $1038 = +(HEAP16[$985 + ($i$16$us$i$i$i$i * 10 | 0) + 2 >> 1] | 0);
               HEAP32[$active$sroa$0$i$i$i$i$i >> 2] = $1033 + 1;
               $n$3$us$i$i$i$i = $n$28$us$i$i$i$i + 1 | 0;
               $start$2$us$i$i$i$i = $1033;
               $x$1$us$i$i$i$i = $1035;
               $y$1$us$i$i$i$i = $1038;
               break;
              }
             case 2:
              {
               $1022 = +(HEAP16[$1002 >> 1] | 0);
               $1025 = +(HEAP16[$985 + ($i$16$us$i$i$i$i * 10 | 0) + 2 >> 1] | 0);
               HEAP32[$active$sroa$0$i$i$i$i$i >> 2] = (HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0) + 1;
               $n$3$us$i$i$i$i = $n$28$us$i$i$i$i;
               $start$2$us$i$i$i$i = $start$19$us$i$i$i$i;
               $x$1$us$i$i$i$i = $1022;
               $y$1$us$i$i$i$i = $1025;
               break;
              }
             case 3:
              {
               $1014 = $985 + ($i$16$us$i$i$i$i * 10 | 0) + 2 | 0;
               __ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi(0, $active$sroa$0$i$i$i$i$i, $x$010$us$i$i$i$i, $y$011$us$i$i$i$i, +(HEAP16[$985 + ($i$16$us$i$i$i$i * 10 | 0) + 4 >> 1] | 0), +(HEAP16[$985 + ($i$16$us$i$i$i$i * 10 | 0) + 6 >> 1] | 0), +(HEAP16[$1002 >> 1] | 0), +(HEAP16[$1014 >> 1] | 0), $884, 0);
               $n$3$us$i$i$i$i = $n$28$us$i$i$i$i;
               $start$2$us$i$i$i$i = $start$19$us$i$i$i$i;
               $x$1$us$i$i$i$i = +(HEAP16[$1002 >> 1] | 0);
               $y$1$us$i$i$i$i = +(HEAP16[$1014 >> 1] | 0);
               break;
              }
             default:
              {
               $n$3$us$i$i$i$i = $n$28$us$i$i$i$i;
               $start$2$us$i$i$i$i = $start$19$us$i$i$i$i;
               $x$1$us$i$i$i$i = $x$010$us$i$i$i$i;
               $y$1$us$i$i$i$i = $y$011$us$i$i$i$i;
              }
             }
             $i$16$us$i$i$i$i = $i$16$us$i$i$i$i + 1 | 0;
             if (($i$16$us$i$i$i$i | 0) == ($957 | 0)) {
              $n$2$lcssa$i$i$i$i = $n$3$us$i$i$i$i;
              $start$1$lcssa$i$i$i$i = $start$2$us$i$i$i$i;
              break L303;
             } else {
              $n$28$us$i$i$i$i = $n$3$us$i$i$i$i;
              $start$19$us$i$i$i$i = $start$2$us$i$i$i$i;
              $x$010$us$i$i$i$i = $x$1$us$i$i$i$i;
              $y$011$us$i$i$i$i = $y$1$us$i$i$i$i;
             }
            }
           } else {
            $i$16$i$i$i$i = 0;
            $n$28$i$i$i$i = -1;
            $start$19$i$i$i$i = $start$014$i$i$i$i;
            $x$010$i$i$i$i = 0.0;
            $y$011$i$i$i$i = 0.0;
            while (1) {
             $1041 = $985 + ($i$16$i$i$i$i * 10 | 0) | 0;
             switch (HEAPU8[$985 + ($i$16$i$i$i$i * 10 | 0) + 8 >> 0] | 0) {
             case 1:
              {
               if (($n$28$i$i$i$i | 0) > -1) HEAP32[$994 + ($n$28$i$i$i$i << 2) >> 2] = (HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0) - $start$19$i$i$i$i;
               $1049 = HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0;
               $1051 = +(HEAP16[$1041 >> 1] | 0);
               $1054 = +(HEAP16[$985 + ($i$16$i$i$i$i * 10 | 0) + 2 >> 1] | 0);
               HEAP32[$active$sroa$0$i$i$i$i$i >> 2] = $1049 + 1;
               HEAPF32[$points$1$i$i$i$i + ($1049 << 3) >> 2] = $1051;
               HEAPF32[$points$1$i$i$i$i + ($1049 << 3) + 4 >> 2] = $1054;
               $n$3$i$i$i$i = $n$28$i$i$i$i + 1 | 0;
               $start$2$i$i$i$i = $1049;
               $x$1$i$i$i$i = $1051;
               $y$1$i$i$i$i = $1054;
               break;
              }
             case 2:
              {
               $1060 = +(HEAP16[$1041 >> 1] | 0);
               $1063 = +(HEAP16[$985 + ($i$16$i$i$i$i * 10 | 0) + 2 >> 1] | 0);
               $1064 = HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0;
               HEAP32[$active$sroa$0$i$i$i$i$i >> 2] = $1064 + 1;
               HEAPF32[$points$1$i$i$i$i + ($1064 << 3) >> 2] = $1060;
               HEAPF32[$points$1$i$i$i$i + ($1064 << 3) + 4 >> 2] = $1063;
               $n$3$i$i$i$i = $n$28$i$i$i$i;
               $start$2$i$i$i$i = $start$19$i$i$i$i;
               $x$1$i$i$i$i = $1060;
               $y$1$i$i$i$i = $1063;
               break;
              }
             case 3:
              {
               $1076 = $985 + ($i$16$i$i$i$i * 10 | 0) + 2 | 0;
               __ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi($points$1$i$i$i$i, $active$sroa$0$i$i$i$i$i, $x$010$i$i$i$i, $y$011$i$i$i$i, +(HEAP16[$985 + ($i$16$i$i$i$i * 10 | 0) + 4 >> 1] | 0), +(HEAP16[$985 + ($i$16$i$i$i$i * 10 | 0) + 6 >> 1] | 0), +(HEAP16[$1041 >> 1] | 0), +(HEAP16[$1076 >> 1] | 0), $884, 0);
               $n$3$i$i$i$i = $n$28$i$i$i$i;
               $start$2$i$i$i$i = $start$19$i$i$i$i;
               $x$1$i$i$i$i = +(HEAP16[$1041 >> 1] | 0);
               $y$1$i$i$i$i = +(HEAP16[$1076 >> 1] | 0);
               break;
              }
             default:
              {
               $n$3$i$i$i$i = $n$28$i$i$i$i;
               $start$2$i$i$i$i = $start$19$i$i$i$i;
               $x$1$i$i$i$i = $x$010$i$i$i$i;
               $y$1$i$i$i$i = $y$011$i$i$i$i;
              }
             }
             $i$16$i$i$i$i = $i$16$i$i$i$i + 1 | 0;
             if (($i$16$i$i$i$i | 0) == ($957 | 0)) {
              $n$2$lcssa$i$i$i$i = $n$3$i$i$i$i;
              $start$1$lcssa$i$i$i$i = $start$2$i$i$i$i;
              break L303;
             } else {
              $n$28$i$i$i$i = $n$3$i$i$i$i;
              $start$19$i$i$i$i = $start$2$i$i$i$i;
              $x$010$i$i$i$i = $x$1$i$i$i$i;
              $y$011$i$i$i$i = $y$1$i$i$i$i;
             }
            }
           } while (0);
           HEAP32[$994 + ($n$2$lcssa$i$i$i$i << 2) >> 2] = (HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0) - $start$1$lcssa$i$i$i$i;
           $pass$015$i$i$i$i = $pass$015$i$i$i$i + 1 | 0;
           if (($pass$015$i$i$i$i | 0) >= 2) break; else {
            $points$013$i$i$i$i = $points$1$i$i$i$i;
            $start$014$i$i$i$i = $start$1$lcssa$i$i$i$i;
           }
          }
          if ((label | 0) == 214) {
           label = 0;
           __ZN5ImGui7MemFreeEPv(0);
           __ZN5ImGui7MemFreeEPv($994);
           break;
          }
          if ($1001) break L291;
          $1089 = ($$n$0$i$i$i$i$lcssa | 0) > 0;
          if ($1089) {
           $i$026$i$i$i$i = 0;
           $n$027$i$i$i$i = 0;
           while (1) {
            $1092 = (HEAP32[$994 + ($i$026$i$i$i$i << 2) >> 2] | 0) + $n$027$i$i$i$i | 0;
            $i$026$i$i$i$i = $i$026$i$i$i$i + 1 | 0;
            if (($i$026$i$i$i$i | 0) == ($$n$0$i$i$i$i$lcssa | 0)) {
             $n$0$lcssa$i$i$i$i = $1092;
             break;
            } else $n$027$i$i$i$i = $1092;
           }
          } else $n$0$lcssa$i$i$i$i = 0;
          $1096 = __ZN5ImGui8MemAllocEj(($n$0$lcssa$i$i$i$i * 20 | 0) + 20 | 0) | 0;
          if ($1096 | 0) {
           do if ($1089) {
            $i$121$i$i$i$i = 0;
            $m$020$i$i$i$i = 0;
            $n$122$i$i$i$i = 0;
            while (1) {
             $1098 = $points$1$i$i$i$i + ($m$020$i$i$i$i << 3) | 0;
             $1099 = $994 + ($i$121$i$i$i$i << 2) | 0;
             $1100 = HEAP32[$1099 >> 2] | 0;
             $m$020$i$i$i$i = $1100 + $m$020$i$i$i$i | 0;
             $1102 = $1100 + -1 | 0;
             if (($1100 | 0) > 0) {
              $1108 = +HEAPF32[$1098 + ($1102 << 3) + 4 >> 2];
              $1882 = $1100;
              $j$017$i$i$i$i = $1102;
              $k$018$i$i$i$i = 0;
              $n$219$i$i$i$i = $n$122$i$i$i$i;
              while (1) {
               $1108$looptemp = $1108;
               $1108 = +HEAPF32[$1098 + ($k$018$i$i$i$i << 3) + 4 >> 2];
               if ($1108$looptemp == $1108) {
                $1135 = $1882;
                $n$3$i3$i$i$i = $n$219$i$i$i$i;
               } else {
                $1111 = $1096 + ($n$219$i$i$i$i * 20 | 0) + 16 | 0;
                HEAP32[$1111 >> 2] = 0;
                $1112 = +HEAPF32[$1098 + ($j$017$i$i$i$i << 3) + 4 >> 2];
                if ($1112 > $1108) {
                 HEAP32[$1111 >> 2] = 1;
                 $1120 = $1112;
                 $1129 = $1108;
                 $a$0$i$i$i$i = $j$017$i$i$i$i;
                 $b$0$i$i$i$i = $k$018$i$i$i$i;
                } else {
                 $1120 = $1108;
                 $1129 = $1112;
                 $a$0$i$i$i$i = $k$018$i$i$i$i;
                 $b$0$i$i$i$i = $j$017$i$i$i$i;
                }
                HEAPF32[$1096 + ($n$219$i$i$i$i * 20 | 0) >> 2] = $874 * +HEAPF32[$1098 + ($a$0$i$i$i$i << 3) >> 2] + 0.0;
                HEAPF32[$1096 + ($n$219$i$i$i$i * 20 | 0) + 4 >> 2] = $1120 * $885 + 0.0;
                HEAPF32[$1096 + ($n$219$i$i$i$i * 20 | 0) + 8 >> 2] = $874 * +HEAPF32[$1098 + ($b$0$i$i$i$i << 3) >> 2] + 0.0;
                HEAPF32[$1096 + ($n$219$i$i$i$i * 20 | 0) + 12 >> 2] = $1129 * $885 + 0.0;
                $1135 = HEAP32[$1099 >> 2] | 0;
                $n$3$i3$i$i$i = $n$219$i$i$i$i + 1 | 0;
               }
               $1133 = $k$018$i$i$i$i + 1 | 0;
               if (($1133 | 0) >= ($1135 | 0)) {
                $n$2$lcssa$i4$i$i$i = $n$3$i3$i$i$i;
                break;
               } else {
                $j$017$i$i$i$i$phi = $k$018$i$i$i$i;
                $1882 = $1135;
                $k$018$i$i$i$i = $1133;
                $n$219$i$i$i$i = $n$3$i3$i$i$i;
                $j$017$i$i$i$i = $j$017$i$i$i$i$phi;
               }
              }
             } else $n$2$lcssa$i4$i$i$i = $n$122$i$i$i$i;
             $i$121$i$i$i$i = $i$121$i$i$i$i + 1 | 0;
             if (($i$121$i$i$i$i | 0) == ($$n$0$i$i$i$i$lcssa | 0)) {
              $n$2$lcssa$i4$i$i$i$lcssa = $n$2$lcssa$i4$i$i$i;
              break;
             } else $n$122$i$i$i$i = $n$2$lcssa$i4$i$i$i;
            }
            __ZL27stbtt__sort_edges_quicksortP11stbtt__edgei($1096, $n$2$lcssa$i4$i$i$i$lcssa);
            if (($n$2$lcssa$i4$i$i$i$lcssa | 0) > 1) $i$03$i$i$i$i$i$i = 1; else {
             $n$1$lcssa51$i$i$i$i = $n$2$lcssa$i4$i$i$i$lcssa;
             break;
            }
            do {
             $1139 = HEAP32[$1096 + ($i$03$i$i$i$i$i$i * 20 | 0) >> 2] | 0;
             $1141 = +HEAPF32[$1096 + ($i$03$i$i$i$i$i$i * 20 | 0) + 4 >> 2];
             $1142 = $1096 + ($i$03$i$i$i$i$i$i * 20 | 0) + 8 | 0;
             HEAP32[$active$sroa$0$i$i$i$i$i >> 2] = HEAP32[$1142 >> 2];
             HEAP32[$active$sroa$0$i$i$i$i$i + 4 >> 2] = HEAP32[$1142 + 4 >> 2];
             HEAP32[$active$sroa$0$i$i$i$i$i + 8 >> 2] = HEAP32[$1142 + 8 >> 2];
             $j$0$i$i$i$i$i$i = $i$03$i$i$i$i$i$i;
             while (1) {
              $1143 = $j$0$i$i$i$i$i$i + -1 | 0;
              if (!($1141 < +HEAPF32[$1096 + ($1143 * 20 | 0) + 4 >> 2])) {
               $j$2$ph$i$i$i$i$i$i = $j$0$i$i$i$i$i$i;
               break;
              }
              $1147 = $1096 + ($1143 * 20 | 0) | 0;
              $1148 = $1096 + ($j$0$i$i$i$i$i$i * 20 | 0) | 0;
              HEAP32[$1148 >> 2] = HEAP32[$1147 >> 2];
              HEAP32[$1148 + 4 >> 2] = HEAP32[$1147 + 4 >> 2];
              HEAP32[$1148 + 8 >> 2] = HEAP32[$1147 + 8 >> 2];
              HEAP32[$1148 + 12 >> 2] = HEAP32[$1147 + 12 >> 2];
              HEAP32[$1148 + 16 >> 2] = HEAP32[$1147 + 16 >> 2];
              if (($j$0$i$i$i$i$i$i | 0) > 1) $j$0$i$i$i$i$i$i = $1143; else {
               $j$2$ph$i$i$i$i$i$i = $1143;
               break;
              }
             }
             if (($i$03$i$i$i$i$i$i | 0) != ($j$2$ph$i$i$i$i$i$i | 0)) {
              HEAP32[$1096 + ($j$2$ph$i$i$i$i$i$i * 20 | 0) >> 2] = $1139;
              HEAPF32[$1096 + ($j$2$ph$i$i$i$i$i$i * 20 | 0) + 4 >> 2] = $1141;
              $1153 = $1096 + ($j$2$ph$i$i$i$i$i$i * 20 | 0) + 8 | 0;
              HEAP32[$1153 >> 2] = HEAP32[$active$sroa$0$i$i$i$i$i >> 2];
              HEAP32[$1153 + 4 >> 2] = HEAP32[$active$sroa$0$i$i$i$i$i + 4 >> 2];
              HEAP32[$1153 + 8 >> 2] = HEAP32[$active$sroa$0$i$i$i$i$i + 8 >> 2];
             }
             $i$03$i$i$i$i$i$i = $i$03$i$i$i$i$i$i + 1 | 0;
            } while (($i$03$i$i$i$i$i$i | 0) != ($n$2$lcssa$i4$i$i$i$lcssa | 0));
            $n$1$lcssa51$i$i$i$i = $n$2$lcssa$i4$i$i$i$lcssa;
           } else $n$1$lcssa51$i$i$i$i = 0; while (0);
           HEAP32[$active$sroa$0$i$i$i$i$i >> 2] = 0;
           if (($951 | 0) > 63) $scanline$0$i$i$i$i$i = __ZN5ImGui8MemAllocEj($952 << 3 | 4) | 0; else $scanline$0$i$i$i$i$i = $scanline_data$i$i$i$i$i;
           $1159 = $scanline$0$i$i$i$i$i + ($952 << 2) | 0;
           HEAPF32[$1096 + ($n$1$lcssa51$i$i$i$i * 20 | 0) + 4 >> 2] = +($iy0$0$i$i + $956 | 0) + 1.0;
           do if (($955 | 0) > -1) {
            $1165 = $1159 + 4 | 0;
            $1166 = $1165 + -4 | 0;
            $1167 = +($ix0$0$i$i | 0);
            $1168 = $952 << 2;
            $1169 = $1168 + 4 | 0;
            $1170 = ($951 | 0) > -1;
            $1171 = +($952 | 0);
            $$043$i$i$i$i$i = $1096;
            $1175 = 0;
            $hh$sroa$0$039$i$i$i$i$i = 0;
            $hh$sroa$11$037$i$i$i$i$i = 0;
            $hh$sroa$7$038$i$i$i$i$i = 0;
            $j$040$i$i$i$i$i = 0;
            $y$042$i$i$i$i$i = $iy0$0$i$i;
            while (1) {
             $1172 = +($y$042$i$i$i$i$i | 0);
             $1173 = $1172 + 1.0;
             _memset($scanline$0$i$i$i$i$i | 0, 0, $1168 | 0) | 0;
             _memset($1159 | 0, 0, $1169 | 0) | 0;
             L367 : do if (!$1175) $hh$sroa$7$1$ph$lcssa5$i$i$i$i$i = $hh$sroa$7$038$i$i$i$i$i; else {
              $1883 = $1175;
              $hh$sroa$7$1$ph18$i$i$i$i$i = $hh$sroa$7$038$i$i$i$i$i;
              $step$0$ph19$i$i$i$i$i = $active$sroa$0$i$i$i$i$i;
              while (1) {
               $1180 = $1883;
               $step$016$i$i$i$i$i = $step$0$ph19$i$i$i$i$i;
               while (1) {
                if (+HEAPF32[$1180 + 24 >> 2] <= $1172) {
                 $$lcssa456 = $1180;
                 $step$016$i$i$i$i$i$lcssa = $step$016$i$i$i$i$i;
                 break;
                }
                $1190 = HEAP32[$1180 >> 2] | 0;
                if (!$1190) {
                 $hh$sroa$7$1$ph$lcssa5$i$i$i$i$i = $hh$sroa$7$1$ph18$i$i$i$i$i;
                 break L367;
                } else {
                 $step$016$i$i$i$i$i$phi = $1180;
                 $1180 = $1190;
                 $step$016$i$i$i$i$i = $step$016$i$i$i$i$i$phi;
                }
               }
               HEAP32[$step$016$i$i$i$i$i$lcssa >> 2] = HEAP32[$$lcssa456 >> 2];
               $1184 = $$lcssa456 + 16 | 0;
               if (!(+HEAPF32[$1184 >> 2] != 0.0)) {
                label = 245;
                break L256;
               }
               HEAPF32[$1184 >> 2] = 0.0;
               HEAP32[$$lcssa456 >> 2] = $hh$sroa$7$1$ph18$i$i$i$i$i;
               $1187 = $$lcssa456;
               $1188 = HEAP32[$step$016$i$i$i$i$i$lcssa >> 2] | 0;
               if (!$1188) {
                $hh$sroa$7$1$ph$lcssa5$i$i$i$i$i = $1187;
                break;
               } else {
                $1883 = $1188;
                $hh$sroa$7$1$ph18$i$i$i$i$i = $1187;
                $step$0$ph19$i$i$i$i$i = $step$016$i$i$i$i$i$lcssa;
               }
              }
             } while (0);
             $1176 = $$043$i$i$i$i$i + 4 | 0;
             $1177 = +HEAPF32[$1176 >> 2];
             if (!($1177 <= $1173)) {
              $$1$lcssa$i$i$i$i$i = $$043$i$i$i$i$i;
              $hh$sroa$0$1$lcssa$i$i$i$i$i = $hh$sroa$0$039$i$i$i$i$i;
              $hh$sroa$11$1$lcssa$i$i$i$i$i = $hh$sroa$11$037$i$i$i$i$i;
              $hh$sroa$7$2$lcssa$i$i$i$i$i = $hh$sroa$7$1$ph$lcssa5$i$i$i$i$i;
             } else {
              $$124$i$i$i$i$i = $$043$i$i$i$i$i;
              $1195 = $1177;
              $1215 = $1176;
              $hh$sroa$0$123$i$i$i$i$i = $hh$sroa$0$039$i$i$i$i$i;
              $hh$sroa$11$121$i$i$i$i$i = $hh$sroa$11$037$i$i$i$i$i;
              $hh$sroa$7$222$i$i$i$i$i = $hh$sroa$7$1$ph$lcssa5$i$i$i$i$i;
              while (1) {
               $1192 = $$124$i$i$i$i$i + 12 | 0;
               if ($1195 != +HEAPF32[$1192 >> 2]) {
                do if (!$hh$sroa$7$222$i$i$i$i$i) {
                 if (!$hh$sroa$11$121$i$i$i$i$i) {
                  $1202 = __ZN5ImGui8MemAllocEj(56004) | 0;
                  if (!$1202) {
                   $$1$i$i$i$i$i$i$i = 0;
                   $hh$sroa$0$3$i$i$i$i$i = $hh$sroa$0$123$i$i$i$i$i;
                   $hh$sroa$11$2$i$i$i$i$i = 0;
                   $hh$sroa$7$3$i$i$i$i$i = 0;
                   break;
                  }
                  HEAP32[$1202 >> 2] = $hh$sroa$0$123$i$i$i$i$i;
                  $1206 = 1999;
                  $1208 = $1202;
                  $hh$sroa$0$2$i$i$i$i$i = $1202;
                 } else {
                  $1206 = $hh$sroa$11$121$i$i$i$i$i + -1 | 0;
                  $1208 = $hh$sroa$0$123$i$i$i$i$i;
                  $hh$sroa$0$2$i$i$i$i$i = $hh$sroa$0$123$i$i$i$i$i;
                 }
                 $$1$i$i$i$i$i$i$i = $1208 + ($1206 * 28 | 0) | 0;
                 $hh$sroa$0$3$i$i$i$i$i = $hh$sroa$0$2$i$i$i$i$i;
                 $hh$sroa$11$2$i$i$i$i$i = $1206;
                 $hh$sroa$7$3$i$i$i$i$i = 0;
                } else {
                 $$1$i$i$i$i$i$i$i = $hh$sroa$7$222$i$i$i$i$i;
                 $hh$sroa$0$3$i$i$i$i$i = $hh$sroa$0$123$i$i$i$i$i;
                 $hh$sroa$11$2$i$i$i$i$i = $hh$sroa$11$121$i$i$i$i$i;
                 $hh$sroa$7$3$i$i$i$i$i = HEAP32[$hh$sroa$7$222$i$i$i$i$i >> 2] | 0;
                } while (0);
                $1211 = +HEAPF32[$$124$i$i$i$i$i >> 2];
                $1213 = +HEAPF32[$1192 >> 2];
                $1214 = +HEAPF32[$1215 >> 2];
                $1217 = (+HEAPF32[$$124$i$i$i$i$i + 8 >> 2] - $1211) / ($1213 - $1214);
                if (!$$1$i$i$i$i$i$i$i) $1237 = +HEAPF32[6]; else {
                 HEAPF32[$$1$i$i$i$i$i$i$i + 8 >> 2] = $1217;
                 HEAPF32[$$1$i$i$i$i$i$i$i + 12 >> 2] = $1217 != 0.0 ? 1.0 / $1217 : 0.0;
                 HEAPF32[$$1$i$i$i$i$i$i$i + 4 >> 2] = $1211 + ($1172 - $1214) * $1217 - $1167;
                 HEAPF32[$$1$i$i$i$i$i$i$i + 16 >> 2] = HEAP32[$$124$i$i$i$i$i + 16 >> 2] | 0 ? 1.0 : -1.0;
                 HEAPF32[$$1$i$i$i$i$i$i$i + 20 >> 2] = $1214;
                 HEAPF32[$$1$i$i$i$i$i$i$i + 24 >> 2] = $1213;
                 HEAP32[$$1$i$i$i$i$i$i$i >> 2] = 0;
                 $1237 = $1213;
                }
                if (!($1237 >= $1172)) {
                 label = 260;
                 break L256;
                }
                HEAP32[$$1$i$i$i$i$i$i$i >> 2] = HEAP32[$active$sroa$0$i$i$i$i$i >> 2];
                HEAP32[$active$sroa$0$i$i$i$i$i >> 2] = $$1$i$i$i$i$i$i$i;
                $hh$sroa$0$4$i$i$i$i$i = $hh$sroa$0$3$i$i$i$i$i;
                $hh$sroa$11$3$i$i$i$i$i = $hh$sroa$11$2$i$i$i$i$i;
                $hh$sroa$7$4$i$i$i$i$i = $hh$sroa$7$3$i$i$i$i$i;
               } else {
                $hh$sroa$0$4$i$i$i$i$i = $hh$sroa$0$123$i$i$i$i$i;
                $hh$sroa$11$3$i$i$i$i$i = $hh$sroa$11$121$i$i$i$i$i;
                $hh$sroa$7$4$i$i$i$i$i = $hh$sroa$7$222$i$i$i$i$i;
               }
               $1240 = $$124$i$i$i$i$i + 20 | 0;
               $1215 = $$124$i$i$i$i$i + 24 | 0;
               $1195 = +HEAPF32[$1215 >> 2];
               if (!($1195 <= $1173)) {
                $$1$lcssa$i$i$i$i$i = $1240;
                $hh$sroa$0$1$lcssa$i$i$i$i$i = $hh$sroa$0$4$i$i$i$i$i;
                $hh$sroa$11$1$lcssa$i$i$i$i$i = $hh$sroa$11$3$i$i$i$i$i;
                $hh$sroa$7$2$lcssa$i$i$i$i$i = $hh$sroa$7$4$i$i$i$i$i;
                break;
               } else {
                $$124$i$i$i$i$i = $1240;
                $hh$sroa$0$123$i$i$i$i$i = $hh$sroa$0$4$i$i$i$i$i;
                $hh$sroa$11$121$i$i$i$i$i = $hh$sroa$11$3$i$i$i$i$i;
                $hh$sroa$7$222$i$i$i$i$i = $hh$sroa$7$4$i$i$i$i$i;
               }
              }
             }
             $1244 = HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0;
             if ($1244 | 0) {
              $$014$i$i$i$i$i$i = $1244;
              do {
               $1247 = +HEAPF32[$$014$i$i$i$i$i$i + 24 >> 2];
               if (!($1247 >= $1172)) {
                label = 265;
                break L256;
               }
               $1250 = +HEAPF32[$$014$i$i$i$i$i$i + 8 >> 2];
               $1253 = +HEAPF32[$$014$i$i$i$i$i$i + 4 >> 2];
               L401 : do if ($1250 == 0.0) {
                if (!($1253 < $1171)) break;
                if (!($1253 >= 0.0)) {
                 __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($1166, 0, $$014$i$i$i$i$i$i, $1253, $1172, $1253, $1173);
                 break;
                } else {
                 $1256 = ~~$1253;
                 __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $1256, $$014$i$i$i$i$i$i, $1253, $1172, $1253, $1173);
                 __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($1166, $1256 + 1 | 0, $$014$i$i$i$i$i$i, $1253, $1172, $1253, $1173);
                 break;
                }
               } else {
                $1258 = $1250 + $1253;
                $1260 = +HEAPF32[$$014$i$i$i$i$i$i + 12 >> 2];
                $1262 = +HEAPF32[$$014$i$i$i$i$i$i + 20 >> 2];
                if (!($1262 <= $1173)) {
                 label = 272;
                 break L256;
                }
                if ($1262 > $1172) {
                 $sy0$0$i$i$i$i$i$i = $1262;
                 $x_top$0$i$i$i$i$i$i = $1253 + $1250 * ($1262 - $1172);
                } else {
                 $sy0$0$i$i$i$i$i$i = $1172;
                 $x_top$0$i$i$i$i$i$i = $1253;
                }
                if ($1247 < $1173) {
                 $sy1$0$i$i$i$i$i$i = $1247;
                 $x_bottom$0$i$i$i$i$i$i = $1253 + ($1247 - $1172) * $1250;
                } else {
                 $sy1$0$i$i$i$i$i$i = $1173;
                 $x_bottom$0$i$i$i$i$i$i = $1258;
                }
                do if ($x_top$0$i$i$i$i$i$i >= 0.0 & $x_bottom$0$i$i$i$i$i$i >= 0.0) {
                 if (!($x_top$0$i$i$i$i$i$i < $1171 & $x_bottom$0$i$i$i$i$i$i < $1171)) break;
                 $1276 = ~~$x_top$0$i$i$i$i$i$i;
                 if (($1276 | 0) == (~~$x_bottom$0$i$i$i$i$i$i | 0)) {
                  $1279 = $sy1$0$i$i$i$i$i$i - $sy0$0$i$i$i$i$i$i;
                  if (!(($1276 | 0) > -1 & ($1276 | 0) <= ($951 | 0))) {
                   label = 282;
                   break L256;
                  }
                  $1282 = $$014$i$i$i$i$i$i + 16 | 0;
                  $1284 = +($1276 | 0);
                  $1292 = $scanline$0$i$i$i$i$i + ($1276 << 2) | 0;
                  HEAPF32[$1292 >> 2] = +HEAPF32[$1292 >> 2] + $1279 * ((1.0 - ($x_top$0$i$i$i$i$i$i - $1284 + ($x_bottom$0$i$i$i$i$i$i - $1284)) * .5) * +HEAPF32[$1282 >> 2]);
                  $1297 = $1165 + ($1276 << 2) | 0;
                  HEAPF32[$1297 >> 2] = +HEAPF32[$1297 >> 2] + $1279 * +HEAPF32[$1282 >> 2];
                  break L401;
                 }
                 if ($x_top$0$i$i$i$i$i$i > $x_bottom$0$i$i$i$i$i$i) {
                  $dy$0$i$i$i$i$i$i = -$1260;
                  $sy0$1$i$i$i$i$i$i = $1173 - ($sy1$0$i$i$i$i$i$i - $1172);
                  $sy1$1$i$i$i$i$i$i = $1173 - ($sy0$0$i$i$i$i$i$i - $1172);
                  $x01$0$i$i$i$i$i$i = $1258;
                  $x_bottom$1$i$i$i$i$i$i = $x_top$0$i$i$i$i$i$i;
                  $x_top$1$i$i$i$i$i$i = $x_bottom$0$i$i$i$i$i$i;
                 } else {
                  $dy$0$i$i$i$i$i$i = $1260;
                  $sy0$1$i$i$i$i$i$i = $sy0$0$i$i$i$i$i$i;
                  $sy1$1$i$i$i$i$i$i = $sy1$0$i$i$i$i$i$i;
                  $x01$0$i$i$i$i$i$i = $1253;
                  $x_bottom$1$i$i$i$i$i$i = $x_bottom$0$i$i$i$i$i$i;
                  $x_top$1$i$i$i$i$i$i = $x_top$0$i$i$i$i$i$i;
                 }
                 $1306 = ~~$x_top$1$i$i$i$i$i$i;
                 $1307 = ~~$x_bottom$1$i$i$i$i$i$i;
                 $1308 = $1306 + 1 | 0;
                 $1312 = $1172 + $dy$0$i$i$i$i$i$i * (+($1308 | 0) - $x01$0$i$i$i$i$i$i);
                 $1314 = +HEAPF32[$$014$i$i$i$i$i$i + 16 >> 2];
                 $1316 = $1314 * ($1312 - $sy0$1$i$i$i$i$i$i);
                 $1323 = $scanline$0$i$i$i$i$i + ($1306 << 2) | 0;
                 HEAPF32[$1323 >> 2] = +HEAPF32[$1323 >> 2] + (1.0 - ($x_top$1$i$i$i$i$i$i - +($1306 | 0) + 1.0) * .5) * $1316;
                 $1326 = $dy$0$i$i$i$i$i$i * $1314;
                 if (($1307 | 0) > ($1308 | 0)) {
                  $1328 = $1326 * .5;
                  $area$012$i$i$i$i$i$i = $1316;
                  $x2$011$i$i$i$i$i$i = $1308;
                  while (1) {
                   $1330 = $scanline$0$i$i$i$i$i + ($x2$011$i$i$i$i$i$i << 2) | 0;
                   HEAPF32[$1330 >> 2] = $1328 + $area$012$i$i$i$i$i$i + +HEAPF32[$1330 >> 2];
                   $1333 = $1326 + $area$012$i$i$i$i$i$i;
                   $x2$011$i$i$i$i$i$i = $x2$011$i$i$i$i$i$i + 1 | 0;
                   if (($x2$011$i$i$i$i$i$i | 0) == ($1307 | 0)) {
                    $area$0$lcssa$i$i$i$i$i$i = $1333;
                    break;
                   } else $area$012$i$i$i$i$i$i = $1333;
                  }
                 } else $area$0$lcssa$i$i$i$i$i$i = $1316;
                 if (!(+Math_abs(+$area$0$lcssa$i$i$i$i$i$i) <= 1.0099999904632568)) {
                  label = 290;
                  break L256;
                 }
                 $1349 = $scanline$0$i$i$i$i$i + ($1307 << 2) | 0;
                 HEAPF32[$1349 >> 2] = $1314 * (1.0 - ($x_bottom$1$i$i$i$i$i$i - +($1307 | 0) + 0.0) * .5) * ($sy1$1$i$i$i$i$i$i - ($dy$0$i$i$i$i$i$i * +($1307 - $1308 | 0) + $1312)) + $area$0$lcssa$i$i$i$i$i$i + +HEAPF32[$1349 >> 2];
                 $1354 = $1165 + ($1307 << 2) | 0;
                 HEAPF32[$1354 >> 2] = ($sy1$1$i$i$i$i$i$i - $sy0$1$i$i$i$i$i$i) * $1314 + +HEAPF32[$1354 >> 2];
                 break L401;
                } while (0);
                if ($1170) $x4$010$i$i$i$i$i$i = 0; else break;
                do {
                 $1357 = +($x4$010$i$i$i$i$i$i | 0);
                 $x4$010$i$i$i$i$i$i$looptemp = $x4$010$i$i$i$i$i$i;
                 $x4$010$i$i$i$i$i$i = $x4$010$i$i$i$i$i$i + 1 | 0;
                 $1359 = +($x4$010$i$i$i$i$i$i | 0);
                 $1362 = $1172 + ($1357 - $1253) / $1250;
                 $1365 = $1172 + ($1359 - $1253) / $1250;
                 $1366 = $1253 < $1357;
                 $1367 = $1258 > $1359;
                 do if ($1366 & $1367) {
                  __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1253, $1172, $1357, $1362);
                  __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1357, $1362, $1359, $1365);
                  __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1359, $1365, $1258, $1173);
                 } else {
                  $1368 = $1258 < $1357;
                  $1369 = $1253 > $1359;
                  if ($1368 & $1369) {
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1253, $1172, $1359, $1365);
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1359, $1365, $1357, $1362);
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1357, $1362, $1258, $1173);
                   break;
                  }
                  if ($1366 & $1258 > $1357) {
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1253, $1172, $1357, $1362);
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1357, $1362, $1258, $1173);
                   break;
                  }
                  if ($1368 & $1253 > $1357) {
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1253, $1172, $1357, $1362);
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1357, $1362, $1258, $1173);
                   break;
                  }
                  if ($1253 < $1359 & $1367) {
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1253, $1172, $1359, $1365);
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1359, $1365, $1258, $1173);
                   break;
                  }
                  if ($1258 < $1359 & $1369) {
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1253, $1172, $1359, $1365);
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1359, $1365, $1258, $1173);
                   break;
                  } else {
                   __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline$0$i$i$i$i$i, $x4$010$i$i$i$i$i$i$looptemp, $$014$i$i$i$i$i$i, $1253, $1172, $1258, $1173);
                   break;
                  }
                 } while (0);
                } while (($x4$010$i$i$i$i$i$i | 0) != ($952 | 0));
               } while (0);
               $$014$i$i$i$i$i$i = HEAP32[$$014$i$i$i$i$i$i >> 2] | 0;
              } while (($$014$i$i$i$i$i$i | 0) != 0);
             }
             if ($1170) {
              $1376 = Math_imul($j$040$i$i$i$i$i, $566) | 0;
              $i$031$i$i$i$i$i = 0;
              $sum$032$i$i$i$i$i = 0.0;
              do {
               $sum$032$i$i$i$i$i = $sum$032$i$i$i$i$i + +HEAPF32[$1159 + ($i$031$i$i$i$i$i << 2) >> 2];
               $1387 = ~~(+Math_abs(+(+HEAPF32[$scanline$0$i$i$i$i$i + ($i$031$i$i$i$i$i << 2) >> 2] + $sum$032$i$i$i$i$i)) * 255.0 + .5);
               HEAP8[$948 + ($i$031$i$i$i$i$i + $1376) >> 0] = ($1387 | 0) > 255 ? 255 : $1387;
               $i$031$i$i$i$i$i = $i$031$i$i$i$i$i + 1 | 0;
              } while (($i$031$i$i$i$i$i | 0) != ($952 | 0));
             }
             $1175 = HEAP32[$active$sroa$0$i$i$i$i$i >> 2] | 0;
             if ($1175 | 0) {
              $1394 = $1175;
              do {
               $1396 = $1394 + 4 | 0;
               HEAPF32[$1396 >> 2] = +HEAPF32[$1394 + 8 >> 2] + +HEAPF32[$1396 >> 2];
               $1394 = HEAP32[$1394 >> 2] | 0;
              } while (($1394 | 0) != 0);
             }
             if (($j$040$i$i$i$i$i | 0) >= ($955 | 0)) {
              $hh$sroa$0$1$lcssa$i$i$i$i$i$lcssa467 = $hh$sroa$0$1$lcssa$i$i$i$i$i;
              break;
             } else {
              $$043$i$i$i$i$i = $$1$lcssa$i$i$i$i$i;
              $hh$sroa$0$039$i$i$i$i$i = $hh$sroa$0$1$lcssa$i$i$i$i$i;
              $hh$sroa$11$037$i$i$i$i$i = $hh$sroa$11$1$lcssa$i$i$i$i$i;
              $hh$sroa$7$038$i$i$i$i$i = $hh$sroa$7$2$lcssa$i$i$i$i$i;
              $j$040$i$i$i$i$i = $j$040$i$i$i$i$i + 1 | 0;
              $y$042$i$i$i$i$i = $y$042$i$i$i$i$i + 1 | 0;
             }
            }
            if (!$hh$sroa$0$1$lcssa$i$i$i$i$i$lcssa467) break;
            $c$01$i$i$i$i$i$i = $hh$sroa$0$1$lcssa$i$i$i$i$i$lcssa467;
            do {
             $c$01$i$i$i$i$i$i$looptemp = $c$01$i$i$i$i$i$i;
             $c$01$i$i$i$i$i$i = HEAP32[$c$01$i$i$i$i$i$i >> 2] | 0;
             __ZN5ImGui7MemFreeEPv($c$01$i$i$i$i$i$i$looptemp);
            } while (($c$01$i$i$i$i$i$i | 0) != 0);
           } while (0);
           if (($scanline$0$i$i$i$i$i | 0) != ($scanline_data$i$i$i$i$i | 0)) __ZN5ImGui7MemFreeEPv($scanline$0$i$i$i$i$i);
           __ZN5ImGui7MemFreeEPv($1096);
          }
          __ZN5ImGui7MemFreeEPv($994);
          __ZN5ImGui7MemFreeEPv($points$1$i$i$i$i);
          break L291;
         } while (0);
        } while (0);
        __ZN5ImGui7MemFreeEPv(HEAP32[$vertices$i$i >> 2] | 0);
        if ($877) {
         $1413 = HEAPU16[$908 >> 1] | 0;
         $1414 = HEAP16[$913 >> 1] | 0;
         $1415 = $1414 & 65535;
         L477 : do if ($1414 << 16 >> 16) {
          $1422 = $1413 >>> 0 < $850 >>> 0;
          $1423 = $1413 + $878 | 0;
          $$036$i12$i = $796 + (HEAPU16[$898 >> 1] | 0) + (Math_imul(HEAPU16[$903 >> 1] | 0, $566) | 0) | 0;
          $j$042$i11$i = 0;
          while (1) {
           _memset($active$sroa$0$i$i$i$i$i | 0, 0, $850 | 0) | 0;
           L481 : do switch ($850 | 0) {
           case 2:
            {
             if ($1422) {
              $i$5$ph$i34$i = 0;
              $total$5$ph$i35$i = 0;
              break L481;
             } else {
              $i$023$i19$i = 0;
              $total$024$i18$i = 0;
             }
             while (1) {
              $1424 = $$036$i12$i + $i$023$i19$i | 0;
              $1425 = HEAP8[$1424 >> 0] | 0;
              $1432 = ($1425 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$023$i19$i & 7) >> 0] | 0) + $total$024$i18$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$023$i19$i + 2 & 7) >> 0] = $1425;
              HEAP8[$1424 >> 0] = $1432 >>> 1;
              $i$023$i19$i = $i$023$i19$i + 1 | 0;
              if (($i$023$i19$i | 0) == ($1423 | 0)) {
               $i$5$ph$i34$i = $1423;
               $total$5$ph$i35$i = $1432;
               break;
              } else $total$024$i18$i = $1432;
             }
             break;
            }
           case 3:
            {
             if ($1422) {
              $i$5$ph$i34$i = 0;
              $total$5$ph$i35$i = 0;
              break L481;
             } else {
              $i$118$i23$i = 0;
              $total$119$i22$i = 0;
             }
             while (1) {
              $1439 = $$036$i12$i + $i$118$i23$i | 0;
              $1440 = HEAP8[$1439 >> 0] | 0;
              $1447 = ($1440 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$118$i23$i & 7) >> 0] | 0) + $total$119$i22$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$118$i23$i + 3 & 7) >> 0] = $1440;
              HEAP8[$1439 >> 0] = ($1447 >>> 0) / 3 | 0;
              $i$118$i23$i = $i$118$i23$i + 1 | 0;
              if (($i$118$i23$i | 0) == ($1423 | 0)) {
               $i$5$ph$i34$i = $1423;
               $total$5$ph$i35$i = $1447;
               break;
              } else $total$119$i22$i = $1447;
             }
             break;
            }
           case 4:
            {
             if ($1422) {
              $i$5$ph$i34$i = 0;
              $total$5$ph$i35$i = 0;
              break L481;
             } else {
              $i$213$i27$i = 0;
              $total$214$i26$i = 0;
             }
             while (1) {
              $1454 = $$036$i12$i + $i$213$i27$i | 0;
              $1455 = HEAP8[$1454 >> 0] | 0;
              $1462 = ($1455 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$213$i27$i & 7) >> 0] | 0) + $total$214$i26$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$213$i27$i + 4 & 7) >> 0] = $1455;
              HEAP8[$1454 >> 0] = $1462 >>> 2;
              $i$213$i27$i = $i$213$i27$i + 1 | 0;
              if (($i$213$i27$i | 0) == ($1423 | 0)) {
               $i$5$ph$i34$i = $1423;
               $total$5$ph$i35$i = $1462;
               break;
              } else $total$214$i26$i = $1462;
             }
             break;
            }
           case 5:
            {
             if ($1422) {
              $i$5$ph$i34$i = 0;
              $total$5$ph$i35$i = 0;
              break L481;
             } else {
              $i$310$i31$i = 0;
              $total$311$i30$i = 0;
             }
             while (1) {
              $1469 = $$036$i12$i + $i$310$i31$i | 0;
              $1470 = HEAP8[$1469 >> 0] | 0;
              $1477 = ($1470 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$310$i31$i & 7) >> 0] | 0) + $total$311$i30$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$310$i31$i + 5 & 7) >> 0] = $1470;
              HEAP8[$1469 >> 0] = ($1477 >>> 0) / 5 | 0;
              $i$310$i31$i = $i$310$i31$i + 1 | 0;
              if (($i$310$i31$i | 0) == ($1423 | 0)) {
               $i$5$ph$i34$i = $1423;
               $total$5$ph$i35$i = $1477;
               break;
              } else $total$311$i30$i = $1477;
             }
             break;
            }
           default:
            {
             if ($1422) {
              $i$5$ph$i34$i = 0;
              $total$5$ph$i35$i = 0;
              break L481;
             } else {
              $i$428$i38$i = 0;
              $total$429$i37$i = 0;
             }
             while (1) {
              $1485 = $$036$i12$i + $i$428$i38$i | 0;
              $1486 = HEAP8[$1485 >> 0] | 0;
              $1493 = ($1486 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$428$i38$i & 7) >> 0] | 0) + $total$429$i37$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$428$i38$i + $850 & 7) >> 0] = $1486;
              HEAP8[$1485 >> 0] = ($1493 >>> 0) / ($850 >>> 0) | 0;
              $i$428$i38$i = $i$428$i38$i + 1 | 0;
              if (($i$428$i38$i | 0) == ($1423 | 0)) {
               $i$5$ph$i34$i = $1423;
               $total$5$ph$i35$i = $1493;
               break;
              } else $total$429$i37$i = $1493;
             }
            }
           } while (0);
           if (($i$5$ph$i34$i | 0) < ($1413 | 0)) {
            $i$533$i42$i = $i$5$ph$i34$i;
            $total$534$i41$i = $total$5$ph$i35$i;
            do {
             $1500 = $$036$i12$i + $i$533$i42$i | 0;
             if (HEAP8[$1500 >> 0] | 0) {
              label = 336;
              break L256;
             }
             $total$534$i41$i = $total$534$i41$i - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$533$i42$i & 7) >> 0] | 0) | 0;
             HEAP8[$1500 >> 0] = ($total$534$i41$i >>> 0) / ($850 >>> 0) | 0;
             $i$533$i42$i = $i$533$i42$i + 1 | 0;
            } while (($i$533$i42$i | 0) < ($1413 | 0));
           }
           $j$042$i11$i = $j$042$i11$i + 1 | 0;
           if (($j$042$i11$i | 0) >= ($1415 | 0)) break L477; else $$036$i12$i = $$036$i12$i + $566 | 0;
          }
         } while (0);
        }
        if ($879) {
         $1517 = HEAP16[$908 >> 1] | 0;
         $1518 = $1517 & 65535;
         $1520 = HEAPU16[$913 >> 1] | 0;
         L507 : do if ($1517 << 16 >> 16) {
          $1527 = $1520 >>> 0 < $853 >>> 0;
          $1528 = $1520 + $880 | 0;
          $$036$i$i = $796 + (HEAPU16[$898 >> 1] | 0) + (Math_imul(HEAPU16[$903 >> 1] | 0, $566) | 0) | 0;
          $j$042$i$i = 0;
          while (1) {
           _memset($active$sroa$0$i$i$i$i$i | 0, 0, $853 | 0) | 0;
           L511 : do switch ($853 | 0) {
           case 2:
            {
             if ($1527) {
              $i$5$ph$i$i = 0;
              $total$5$ph$i$i = 0;
              break L511;
             } else {
              $i$023$i$i = 0;
              $total$024$i$i = 0;
             }
             while (1) {
              $1530 = $$036$i$i + (Math_imul($i$023$i$i, $566) | 0) | 0;
              $1531 = HEAP8[$1530 >> 0] | 0;
              $1538 = ($1531 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$023$i$i & 7) >> 0] | 0) + $total$024$i$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$023$i$i + 2 & 7) >> 0] = $1531;
              HEAP8[$1530 >> 0] = $1538 >>> 1;
              $i$023$i$i = $i$023$i$i + 1 | 0;
              if (($i$023$i$i | 0) == ($1528 | 0)) {
               $i$5$ph$i$i = $1528;
               $total$5$ph$i$i = $1538;
               break;
              } else $total$024$i$i = $1538;
             }
             break;
            }
           case 3:
            {
             if ($1527) {
              $i$5$ph$i$i = 0;
              $total$5$ph$i$i = 0;
              break L511;
             } else {
              $i$118$i$i = 0;
              $total$119$i$i = 0;
             }
             while (1) {
              $1546 = $$036$i$i + (Math_imul($i$118$i$i, $566) | 0) | 0;
              $1547 = HEAP8[$1546 >> 0] | 0;
              $1554 = ($1547 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$118$i$i & 7) >> 0] | 0) + $total$119$i$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$118$i$i + 3 & 7) >> 0] = $1547;
              HEAP8[$1546 >> 0] = ($1554 >>> 0) / 3 | 0;
              $i$118$i$i = $i$118$i$i + 1 | 0;
              if (($i$118$i$i | 0) == ($1528 | 0)) {
               $i$5$ph$i$i = $1528;
               $total$5$ph$i$i = $1554;
               break;
              } else $total$119$i$i = $1554;
             }
             break;
            }
           case 4:
            {
             if ($1527) {
              $i$5$ph$i$i = 0;
              $total$5$ph$i$i = 0;
              break L511;
             } else {
              $i$213$i$i = 0;
              $total$214$i$i = 0;
             }
             while (1) {
              $1562 = $$036$i$i + (Math_imul($i$213$i$i, $566) | 0) | 0;
              $1563 = HEAP8[$1562 >> 0] | 0;
              $1570 = ($1563 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$213$i$i & 7) >> 0] | 0) + $total$214$i$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$213$i$i + 4 & 7) >> 0] = $1563;
              HEAP8[$1562 >> 0] = $1570 >>> 2;
              $i$213$i$i = $i$213$i$i + 1 | 0;
              if (($i$213$i$i | 0) == ($1528 | 0)) {
               $i$5$ph$i$i = $1528;
               $total$5$ph$i$i = $1570;
               break;
              } else $total$214$i$i = $1570;
             }
             break;
            }
           case 5:
            {
             if ($1527) {
              $i$5$ph$i$i = 0;
              $total$5$ph$i$i = 0;
              break L511;
             } else {
              $i$310$i$i = 0;
              $total$311$i$i = 0;
             }
             while (1) {
              $1578 = $$036$i$i + (Math_imul($i$310$i$i, $566) | 0) | 0;
              $1579 = HEAP8[$1578 >> 0] | 0;
              $1586 = ($1579 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$310$i$i & 7) >> 0] | 0) + $total$311$i$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$310$i$i + 5 & 7) >> 0] = $1579;
              HEAP8[$1578 >> 0] = ($1586 >>> 0) / 5 | 0;
              $i$310$i$i = $i$310$i$i + 1 | 0;
              if (($i$310$i$i | 0) == ($1528 | 0)) {
               $i$5$ph$i$i = $1528;
               $total$5$ph$i$i = $1586;
               break;
              } else $total$311$i$i = $1586;
             }
             break;
            }
           default:
            {
             if ($1527) {
              $i$5$ph$i$i = 0;
              $total$5$ph$i$i = 0;
              break L511;
             } else {
              $i$428$i$i = 0;
              $total$429$i$i = 0;
             }
             while (1) {
              $1595 = $$036$i$i + (Math_imul($i$428$i$i, $566) | 0) | 0;
              $1596 = HEAP8[$1595 >> 0] | 0;
              $1603 = ($1596 & 255) - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$428$i$i & 7) >> 0] | 0) + $total$429$i$i | 0;
              HEAP8[$active$sroa$0$i$i$i$i$i + ($i$428$i$i + $853 & 7) >> 0] = $1596;
              HEAP8[$1595 >> 0] = ($1603 >>> 0) / ($853 >>> 0) | 0;
              $i$428$i$i = $i$428$i$i + 1 | 0;
              if (($i$428$i$i | 0) == ($1528 | 0)) {
               $i$5$ph$i$i = $1528;
               $total$5$ph$i$i = $1603;
               break;
              } else $total$429$i$i = $1603;
             }
            }
           } while (0);
           if (($i$5$ph$i$i | 0) < ($1520 | 0)) {
            $i$533$i$i = $i$5$ph$i$i;
            $total$534$i$i = $total$5$ph$i$i;
            do {
             $1611 = $$036$i$i + (Math_imul($i$533$i$i, $566) | 0) | 0;
             if (HEAP8[$1611 >> 0] | 0) {
              label = 356;
              break L256;
             }
             $total$534$i$i = $total$534$i$i - (HEAPU8[$active$sroa$0$i$i$i$i$i + ($i$533$i$i & 7) >> 0] | 0) | 0;
             HEAP8[$1611 >> 0] = ($total$534$i$i >>> 0) / ($853 >>> 0) | 0;
             $i$533$i$i = $i$533$i$i + 1 | 0;
            } while (($i$533$i$i | 0) < ($1520 | 0));
           }
           $j$042$i$i = $j$042$i$i + 1 | 0;
           if (($j$042$i$i | 0) >= ($1518 | 0)) break L507; else $$036$i$i = $$036$i$i + 1 | 0;
          }
         } while (0);
        }
        $1626 = HEAP16[$898 >> 1] | 0;
        HEAP16[$889 + ($j$0111$i * 28 | 0) >> 1] = $1626;
        $1628 = HEAP16[$903 >> 1] | 0;
        HEAP16[$889 + ($j$0111$i * 28 | 0) + 2 >> 1] = $1628;
        $1632 = HEAPU16[$908 >> 1] | 0;
        HEAP16[$889 + ($j$0111$i * 28 | 0) + 4 >> 1] = $1632 + ($1626 & 65535);
        $1638 = HEAPU16[$913 >> 1] | 0;
        HEAP16[$889 + ($j$0111$i * 28 | 0) + 6 >> 1] = $1638 + ($1628 & 65535);
        HEAPF32[$889 + ($j$0111$i * 28 | 0) + 16 >> 2] = $875 * +($advance$0$i | 0);
        $1645 = HEAP32[$x0$i22 >> 2] | 0;
        HEAPF32[$889 + ($j$0111$i * 28 | 0) + 8 >> 2] = $$0$i$i + $855 * +($1645 | 0);
        $1650 = HEAP32[$y0$i23 >> 2] | 0;
        HEAPF32[$889 + ($j$0111$i * 28 | 0) + 12 >> 2] = $$0$i46$i + $857 * +($1650 | 0);
        HEAPF32[$889 + ($j$0111$i * 28 | 0) + 20 >> 2] = $$0$i$i + $855 * +($1645 + $1632 | 0);
        HEAPF32[$889 + ($j$0111$i * 28 | 0) + 24 >> 2] = $$0$i46$i + $857 * +($1650 + $1638 | 0);
        $1668 = HEAP32[$868 >> 2] | 0;
       }
       $1665 = $k$1109$i + 1 | 0;
       $j$0111$i = $j$0111$i + 1 | 0;
       if (($j$0111$i | 0) >= ($1668 | 0)) {
        $k$1$lcssa$i52 = $1665;
        break;
       } else {
        $1881 = $1668;
        $k$1109$i = $1665;
       }
      }
     } else $k$1$lcssa$i52 = $k$0115$i;
     $i$0116$i = $i$0116$i + 1 | 0;
     if (($i$0116$i | 0) >= ($814 | 0)) break; else $k$0115$i = $k$1$lcssa$i52;
    }
    $1673 = HEAP32[$0 >> 2] | 0;
   } else $1673 = $1880;
   HEAP32[$815 >> 2] = 0;
   $input_i9$0157 = $input_i9$0157 + 1 | 0;
   if (($input_i9$0157 | 0) >= ($1673 | 0)) break L254; else $1880 = $1673;
  }
  switch (label | 0) {
  case 168:
   {
    ___assert_fail(140420, 140438, 2695, 140491);
    break;
   }
  case 170:
   {
    ___assert_fail(140517, 140438, 2696, 140491);
    break;
   }
  case 245:
   {
    ___assert_fail(140744, 140438, 2093, 140757);
    break;
   }
  case 260:
   {
    ___assert_fail(140787, 140438, 2105, 140757);
    break;
   }
  case 265:
   {
    ___assert_fail(140807, 140438, 1905, 140822);
    break;
   }
  case 272:
   {
    ___assert_fail(141003, 140438, 1924, 140822);
    break;
   }
  case 282:
   {
    ___assert_fail(141039, 140438, 1952, 140822);
    break;
   }
  case 290:
   {
    ___assert_fail(141057, 140438, 1989, 140822);
    break;
   }
  case 336:
   {
    ___assert_fail(141077, 140438, 2757, 141092);
    break;
   }
  case 356:
   {
    ___assert_fail(141111, 140438, 2818, 141142);
    break;
   }
  }
 } while (0);
 __ZN5ImGui7MemFreeEPv($570);
 __ZN5ImGui7MemFreeEPv($567);
 __ZN5ImGui7MemFreeEPv($612);
 L551 : do if ((HEAP32[$0 >> 2] | 0) > 0) {
  $802 = $this + 52 | 0;
  $input_i12$0154 = 0;
  L553 : while (1) {
   $1676 = HEAP32[$802 >> 2] | 0;
   $1677 = $1676 + ($input_i12$0154 * 84 | 0) + 80 | 0;
   $1678 = HEAP32[$1677 >> 2] | 0;
   $1680 = +HEAPF32[$1676 + ($input_i12$0154 * 84 | 0) + 16 >> 2];
   $1681 = (HEAP32[$15 + ($input_i12$0154 * 60 | 0) + 4 >> 2] | 0) + (HEAP32[$15 + ($input_i12$0154 * 60 | 0) + 28 >> 2] | 0) | 0;
   $1682 = $1681 + 4 | 0;
   $1687 = (HEAPU8[$1682 >> 0] << 8 | HEAPU8[$1682 + 1 >> 0]) << 16 >> 16;
   $1688 = $1681 + 6 | 0;
   $1693 = (HEAPU8[$1688 >> 0] << 8 | HEAPU8[$1688 + 1 >> 0]) << 16 >> 16;
   $1696 = $1680 / +($1687 - $1693 | 0);
   $1698 = $1696 * +($1687 | 0);
   $1699 = $1676 + ($input_i12$0154 * 84 | 0) + 44 | 0;
   do if (!(HEAP8[$1699 >> 0] | 0)) {
    HEAP32[$1678 + 36 >> 2] = $this;
    HEAP32[$1678 + 20 >> 2] = $1676 + ($input_i12$0154 * 84 | 0);
    $1709 = $1678 + 24 | 0;
    HEAP32[$1709 >> 2] = 0;
    HEAPF32[$1678 >> 2] = $1680;
    HEAPF32[$1678 + 28 >> 2] = $1698;
    HEAPF32[$1678 + 32 >> 2] = $1696 * +($1693 | 0);
    $1712 = $1678 + 40 | 0;
    $1713 = $1678 + 44 | 0;
    $1714 = HEAP32[$1713 >> 2] | 0;
    if (($1714 | 0) < 0) {
     $1717 = (($1714 | 0) / 2 | 0) + $1714 | 0;
     $1719 = ($1717 | 0) > 0 ? $1717 : 0;
     if (($1714 | 0) < ($1719 | 0)) {
      $1724 = __ZN5ImGui8MemAllocEj($1719 * 40 | 0) | 0;
      $1725 = $1678 + 48 | 0;
      _memcpy($1724 | 0, HEAP32[$1725 >> 2] | 0, (HEAP32[$1712 >> 2] | 0) * 40 | 0) | 0;
      __ZN5ImGui7MemFreeEPv(HEAP32[$1725 >> 2] | 0);
      HEAP32[$1725 >> 2] = $1724;
      HEAP32[$1713 >> 2] = $1719;
      $$pre268$pre = HEAP8[$1699 >> 0] | 0;
      HEAP32[$1712 >> 2] = 0;
      HEAP32[$1709 >> 2] = (HEAP32[$1709 >> 2] | 0) + 1;
      if (!($$pre268$pre << 24 >> 24)) {
       $1859 = 0.0;
       break;
      } else {
       label = 374;
       break;
      }
     }
    }
    HEAP32[$1712 >> 2] = 0;
    HEAP32[$1709 >> 2] = (HEAP32[$1709 >> 2] | 0) + 1;
    $1859 = 0.0;
   } else {
    $$pre270 = $1678 + 24 | 0;
    HEAP32[$$pre270 >> 2] = (HEAP32[$$pre270 >> 2] | 0) + 1;
    label = 374;
   } while (0);
   if ((label | 0) == 374) {
    label = 0;
    if (!(HEAP8[$1676 + ($input_i12$0154 * 84 | 0) + 45 >> 0] | 0)) $1859 = 0.0; else $1859 = ($1698 - +HEAPF32[$1678 + 28 >> 2]) * .5;
   }
   $1740 = $1678 + 52 | 0;
   HEAP32[$1740 >> 2] = 0;
   $1741 = $15 + ($input_i12$0154 * 60 | 0) + 56 | 0;
   if ((HEAP32[$1741 >> 2] | 0) > 0) {
    $1744 = $15 + ($input_i12$0154 * 60 | 0) + 52 | 0;
    $1745 = $1678 + 40 | 0;
    $1746 = $1678 + 44 | 0;
    $1747 = $1678 + 48 | 0;
    $1748 = $1678 + 28 | 0;
    $1749 = $1676 + ($input_i12$0154 * 84 | 0) + 32 | 0;
    $1750 = $1676 + ($input_i12$0154 * 84 | 0) + 28 | 0;
    $1751 = $1678 + 72 | 0;
    $1752 = $1678 + 80 | 0;
    $i15$0149 = 0;
    do {
     $1757 = HEAP32[$1744 >> 2] | 0;
     $1758 = $1757 + ($i15$0149 * 24 | 0) + 12 | 0;
     if ((HEAP32[$1758 >> 2] | 0) > 0) {
      $1761 = $1757 + ($i15$0149 * 24 | 0) + 16 | 0;
      $1762 = $1757 + ($i15$0149 * 24 | 0) + 4 | 0;
      $char_idx$0147 = 0;
      do {
       $1766 = HEAP32[$1761 >> 2] | 0;
       $1768 = HEAP16[$1766 + ($char_idx$0147 * 28 | 0) >> 1] | 0;
       do if (!($1768 << 16 >> 16)) {
        if (HEAP16[$1766 + ($char_idx$0147 * 28 | 0) + 4 >> 1] | 0) {
         label = 386;
         break;
        }
        if (HEAP16[$1766 + ($char_idx$0147 * 28 | 0) + 2 >> 1] | 0) {
         label = 386;
         break;
        }
        if (HEAP16[$1766 + ($char_idx$0147 * 28 | 0) + 6 >> 1] | 0) label = 386;
       } else label = 386; while (0);
       do if ((label | 0) == 386) {
        label = 0;
        $1780 = (HEAP32[$1762 >> 2] | 0) + $char_idx$0147 | 0;
        if (HEAP8[$1699 >> 0] | 0) {
         $1783 = $1780 & 65535;
         do if (($1783 | 0) < (HEAP32[$1751 >> 2] | 0)) {
          $1788 = HEAP32[(HEAP32[$1752 >> 2] | 0) + ($1783 << 2) >> 2] | 0;
          if (($1788 | 0) == -1) {
           label = 392;
           break;
          }
          if ((HEAP32[$1745 >> 2] | 0) <= ($1788 | 0)) {
           label = 390;
           break L553;
          }
          $$1$i8 = (HEAP32[$1747 >> 2] | 0) + ($1788 * 40 | 0) | 0;
         } else label = 392; while (0);
         if ((label | 0) == 392) {
          label = 0;
          $$1$i8 = HEAP32[$1740 >> 2] | 0;
         }
         if ($$1$i8 | 0) break;
        }
        $1799 = 1.0 / +(HEAP32[$4 >> 2] | 0);
        $1801 = 1.0 / +(HEAP32[$3 >> 2] | 0);
        $1804 = +HEAPF32[$1766 + ($char_idx$0147 * 28 | 0) + 8 >> 2] + 0.0;
        $1807 = +HEAPF32[$1766 + ($char_idx$0147 * 28 | 0) + 12 >> 2] + 0.0;
        $1810 = +HEAPF32[$1766 + ($char_idx$0147 * 28 | 0) + 20 >> 2] + 0.0;
        $1813 = +HEAPF32[$1766 + ($char_idx$0147 * 28 | 0) + 24 >> 2] + 0.0;
        $1815 = $1799 * +($1768 & 65535);
        $1819 = $1801 * +(HEAPU16[$1766 + ($char_idx$0147 * 28 | 0) + 2 >> 1] | 0);
        $1823 = $1799 * +(HEAPU16[$1766 + ($char_idx$0147 * 28 | 0) + 4 >> 1] | 0);
        $1827 = $1801 * +(HEAPU16[$1766 + ($char_idx$0147 * 28 | 0) + 6 >> 1] | 0);
        $1828 = HEAP32[$1745 >> 2] | 0;
        $1829 = $1828 + 1 | 0;
        $1830 = HEAP32[$1746 >> 2] | 0;
        do if (($1830 | 0) <= ($1828 | 0)) {
         if (!$1830) $1836 = 8; else $1836 = (($1830 | 0) / 2 | 0) + $1830 | 0;
         $1837 = ($1836 | 0) > ($1829 | 0) ? $1836 : $1829;
         if (($1830 | 0) >= ($1837 | 0)) break;
         $1840 = __ZN5ImGui8MemAllocEj($1837 * 40 | 0) | 0;
         _memcpy($1840 | 0, HEAP32[$1747 >> 2] | 0, (HEAP32[$1745 >> 2] | 0) * 40 | 0) | 0;
         __ZN5ImGui7MemFreeEPv(HEAP32[$1747 >> 2] | 0);
         HEAP32[$1747 >> 2] = $1840;
         HEAP32[$1746 >> 2] = $1837;
        } while (0);
        HEAP32[$1745 >> 2] = $1829;
        if (($1828 | 0) <= -1) {
         label = 400;
         break L553;
        }
        $1846 = HEAP32[$1747 >> 2] | 0;
        HEAP16[$1846 + ($1828 * 40 | 0) >> 1] = $1780;
        HEAPF32[$1846 + ($1828 * 40 | 0) + 8 >> 2] = $1804;
        HEAPF32[$1846 + ($1828 * 40 | 0) + 16 >> 2] = $1810;
        HEAPF32[$1846 + ($1828 * 40 | 0) + 24 >> 2] = $1815;
        HEAPF32[$1846 + ($1828 * 40 | 0) + 28 >> 2] = $1819;
        HEAPF32[$1846 + ($1828 * 40 | 0) + 32 >> 2] = $1823;
        HEAPF32[$1846 + ($1828 * 40 | 0) + 36 >> 2] = $1827;
        $1862 = +(~~($1859 + +HEAPF32[$1748 >> 2] + .5) | 0);
        HEAPF32[$1846 + ($1828 * 40 | 0) + 12 >> 2] = $1807 + $1862;
        HEAPF32[$1846 + ($1828 * 40 | 0) + 20 >> 2] = $1813 + $1862;
        $1868 = +HEAPF32[$1766 + ($char_idx$0147 * 28 | 0) + 16 >> 2] + +HEAPF32[$1749 >> 2];
        $1869 = $1846 + ($1828 * 40 | 0) + 4 | 0;
        HEAPF32[$1869 >> 2] = $1868;
        if (!(HEAP8[$1750 >> 0] | 0)) break;
        HEAPF32[$1869 >> 2] = +(~~($1868 + .5) | 0);
       } while (0);
       $char_idx$0147 = $char_idx$0147 + 1 | 0;
      } while (($char_idx$0147 | 0) < (HEAP32[$1758 >> 2] | 0));
     }
     $i15$0149 = $i15$0149 + 1 | 0;
    } while (($i15$0149 | 0) < (HEAP32[$1741 >> 2] | 0));
   }
   __ZN6ImFont16BuildLookupTableEv(HEAP32[$1677 >> 2] | 0);
   $input_i12$0154 = $input_i12$0154 + 1 | 0;
   if (($input_i12$0154 | 0) >= (HEAP32[$0 >> 2] | 0)) break L551;
  }
  if ((label | 0) == 390) ___assert_fail(127217, 127226, 806, 127272); else if ((label | 0) == 400) ___assert_fail(127436, 127226, 815, 127445);
 } while (0);
 __ZN5ImGui7MemFreeEPv($610);
 __ZN5ImGui7MemFreeEPv($614);
 __ZN5ImGui7MemFreeEPv($15);
 __ZN11ImFontAtlas19RenderCustomTexDataEiPv($this, 1, $extra_rects);
 $1674 = HEAP32[$597 >> 2] | 0;
 if ($1674 | 0) __ZN5ImGui7MemFreeEPv($1674);
 $$3 = 1;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN5ImGui5BeginEPKcPbRK6ImVec2fi($name, $p_opened, $size_on_first_use, $bg_alpha, $flags) {
 $name = $name | 0;
 $p_opened = $p_opened | 0;
 $size_on_first_use = $size_on_first_use | 0;
 $bg_alpha = +$bg_alpha;
 $flags = $flags | 0;
 var $$$i$i = 0, $$0 = 0.0, $$1 = 0, $$1$i = 0, $$byval_copy = 0, $$byval_copy2 = 0, $$idx$val$i = 0.0, $$idx$val$size$0$i = 0.0, $$idx115$val = 0.0, $$idx116$pre$phiZZ2D = 0, $$idx116$val = 0.0, $$idx120 = 0, $$idx140 = 0, $$idx156 = 0, $$idx157 = 0, $$idx164 = 0, $$idx165 = 0, $$idx166$val = 0.0, $$idx167$val = 0.0, $$idx176 = 0, $$idx183$val = 0.0, $$idx186$val = 0.0, $$idx187$val = 0.0, $$idx192 = 0, $$idx192$val = 0.0, $$idx193$phi$trans$insert = 0, $$idx193$pre$phiZZ2D = 0, $$idx193$val = 0.0, $$idx2$val$i = 0.0, $$idx200$val = 0.0, $$idx201$val = 0.0, $$idx202$val = 0.0, $$idx203$val = 0.0, $$idx204$val = 0.0, $$idx205$val = 0.0, $$idx208$val = 0.0, $$idx209 = 0, $$idx209$val = 0.0, $$idx210$val = 0.0, $$idx211$val = 0.0, $$idx212$val = 0.0, $$idx213$val = 0.0, $$idx3$val$i = 0.0, $$idx4$val$i = 0.0, $$idx4$val$size$1$i = 0.0, $$lcssa = 0, $$lcssa664 = 0, $$lobit = 0, $$phi$trans$insert$i$i = 0, $$pn = 0.0, $$pre$i244 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi603Z2D = 0, $$pre$phi605Z2D = 0, $$pre582 = 0.0, $$pre583 = 0.0, $$pre600 = 0, $$pre609 = 0, $$pre611 = 0, $$pre613 = 0, $$pre615 = 0, $$sink = 0.0, $$sink570$in$in = 0.0, $$sroa$0525$0 = 0, $$sroa$3526$0 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1001 = 0, $1006 = 0, $1007 = 0, $101 = 0, $1011 = 0, $1013 = 0, $1019 = 0, $1026 = 0, $1028 = 0, $1031 = 0, $1032 = 0, $1036 = 0, $1042 = 0, $1044 = 0, $1047 = 0, $1048 = 0, $1052 = 0, $106 = 0.0, $1062 = 0, $1066 = 0, $1082 = 0.0, $1083 = 0.0, $1085 = 0.0, $1087 = 0.0, $1089 = 0, $109 = 0.0, $1093 = 0, $1094 = 0.0, $1095 = 0, $1096 = 0.0, $1098 = 0.0, $1099 = 0.0, $11 = 0, $1100 = 0, $1105 = 0.0, $1107 = 0.0, $1108 = 0.0, $1109 = 0.0, $1110 = 0, $1113 = 0, $1116 = 0, $1119 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1131 = 0.0, $1133 = 0, $1156 = 0.0, $1169 = 0.0, $1171 = 0.0, $1173 = 0.0, $1182 = 0, $1185 = 0, $1190 = 0, $1191 = 0, $1196 = 0.0, $1199 = 0.0, $12 = 0, $1206 = 0, $1209 = 0, $1214 = 0, $1215 = 0, $1219 = 0, $1220 = 0.0, $1222 = 0, $1223 = 0.0, $1230 = 0, $1232 = 0, $1233 = 0, $1238 = 0, $1239 = 0, $1246 = 0.0, $1249 = 0, $1262 = 0, $1265 = 0, $1270 = 0, $1276 = 0, $129 = 0.0, $1291 = 0, $1294 = 0, $1298 = 0.0, $13 = 0, $1300 = 0.0, $1301 = 0.0, $1302 = 0.0, $1307 = 0.0, $1308 = 0.0, $1309 = 0.0, $1310 = 0.0, $1318 = 0.0, $132 = 0.0, $1322 = 0.0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0.0, $1328 = 0, $1329 = 0, $1330 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1340 = 0, $1342 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1350 = 0, $1352 = 0, $1356 = 0, $1358 = 0, $1359 = 0.0, $1362 = 0, $1363 = 0.0, $1366 = 0.0, $1381 = 0.0, $1386 = 0.0, $1387 = 0, $1389 = 0.0, $1391 = 0.0, $1399 = 0.0, $14 = 0, $1400 = 0.0, $1402 = 0.0, $1404 = 0.0, $141 = 0, $1410 = 0, $1417 = 0, $1429 = 0.0, $1431 = 0.0, $1433 = 0.0, $1439 = 0.0, $144 = 0, $145 = 0, $146 = 0, $1463 = 0, $1465 = 0, $1467 = 0.0, $1468 = 0.0, $147 = 0, $1481 = 0.0, $1482 = 0.0, $1483 = 0.0, $1484 = 0, $1485 = 0, $1488 = 0.0, $149 = 0, $1491 = 0, $1493 = 0, $1496 = 0.0, $1498 = 0.0, $15 = 0, $1500 = 0.0, $1505 = 0.0, $1530 = 0.0, $1531 = 0.0, $1534 = 0.0, $1536 = 0.0, $1546 = 0.0, $1549 = 0.0, $1550 = 0.0, $1556 = 0, $156 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1569 = 0, $1571 = 0, $1581 = 0, $1591 = 0, $1592 = 0.0, $1594 = 0.0, $1596 = 0.0, $16 = 0, $1601 = 0.0, $161 = 0, $1624 = 0, $1626 = 0, $1637 = 0, $1646 = 0.0, $1647 = 0.0, $165 = 0, $1654 = 0, $1661 = 0, $1663 = 0, $1666 = 0, $1667 = 0, $167 = 0, $1687 = 0.0, $1688 = 0, $1694 = 0, $17 = 0, $1707 = 0, $1709 = 0, $1726 = 0, $1728 = 0, $173 = 0, $1734 = 0.0, $1738 = 0, $1740 = 0, $1747 = 0, $1749 = 0.0, $175 = 0, $1752 = 0.0, $1754 = 0.0, $1756 = 0.0, $1762 = 0.0, $177 = 0, $1786 = 0, $179 = 0, $1790 = 0, $1797 = 0, $1798 = 0.0, $18 = 0, $180 = 0, $1800 = 0.0, $1802 = 0.0, $1807 = 0.0, $181 = 0, $1834 = 0, $184 = 0, $1846 = 0.0, $1847 = 0.0, $1849 = 0.0, $1851 = 0.0, $1864 = 0.0, $1865 = 0, $1869 = 0.0, $1871 = 0.0, $1873 = 0.0, $1878 = 0.0, $189 = 0, $19 = 0, $190 = 0, $1903 = 0, $1909 = 0, $1916 = 0.0, $1919 = 0.0, $1920 = 0, $1922 = 0.0, $1923 = 0.0, $1924 = 0, $1925 = 0, $1926 = 0, $1929 = 0, $193 = 0, $1934 = 0, $1935 = 0, $1938 = 0, $1943 = 0, $1944 = 0, $1948 = 0, $1950 = 0, $1956 = 0, $1958 = 0, $1961 = 0, $1963 = 0.0, $1964 = 0.0, $1965 = 0, $1966 = 0, $1967 = 0, $1970 = 0, $1975 = 0, $1976 = 0, $1979 = 0, $198 = 0, $1984 = 0, $1985 = 0, $1989 = 0, $199 = 0, $1991 = 0, $1997 = 0, $1999 = 0, $2 = 0, $20 = 0, $2002 = 0, $2004 = 0.0, $2009 = 0, $2010 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2019 = 0, $2021 = 0, $2024 = 0, $2029 = 0, $203 = 0, $2033 = 0, $2035 = 0, $2040 = 0, $2042 = 0.0, $2047 = 0.0, $205 = 0, $2050 = 0.0, $2052 = 0.0, $2054 = 0.0, $2059 = 0.0, $2083 = 0, $2085 = 0.0, $2088 = 0.0, $2090 = 0.0, $2092 = 0.0, $2097 = 0.0, $211 = 0, $2121 = 0, $2122 = 0.0, $2125 = 0.0, $2131 = 0.0, $2133 = 0.0, $2135 = 0.0, $2140 = 0.0, $216 = 0, $2165 = 0.0, $2169 = 0.0, $217 = 0, $2173 = 0, $218 = 0, $2197 = 0.0, $2198 = 0.0, $220 = 0, $2204 = 0.0, $2205 = 0, $2208 = 0, $221 = 0, $2210 = 0, $2213 = 0, $2214 = 0, $2219 = 0, $2224 = 0, $2228 = 0, $223 = 0, $2230 = 0, $2231 = 0.0, $2235 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2244 = 0, $2246 = 0, $2249 = 0, $2254 = 0, $2255 = 0, $2259 = 0, $2261 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2277 = 0, $2279 = 0, $2282 = 0, $2287 = 0, $2288 = 0, $2292 = 0, $2294 = 0, $2299 = 0, $2300 = 0, $2301 = 0, $2304 = 0, $2306 = 0, $2309 = 0, $2314 = 0, $2315 = 0, $2319 = 0, $232 = 0, $2321 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2331 = 0, $2333 = 0, $2335 = 0, $2340 = 0, $2341 = 0, $2344 = 0, $2346 = 0, $235 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2356 = 0, $2358 = 0, $236 = 0, $2360 = 0, $2365 = 0, $2366 = 0, $2369 = 0, $2371 = 0, $2379 = 0, $2386 = 0, $2387 = 0, $2388 = 0, $2391 = 0, $2393 = 0, $2396 = 0, $2401 = 0, $2402 = 0, $2406 = 0, $2408 = 0, $241 = 0, $2413 = 0, $2416 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0, $2422 = 0, $2438 = 0, $2439 = 0, $2442 = 0, $2443 = 0, $2446 = 0, $2448 = 0, $245 = 0, $2451 = 0, $2458 = 0, $2459 = 0, $2460 = 0, $2479 = 0.0, $2482 = 0.0, $2484 = 0.0, $2485 = 0.0, $2486 = 0.0, $2488 = 0.0, $2489 = 0.0, $2494 = 0, $2496 = 0, $250 = 0, $2506 = 0, $251 = 0, $2515 = 0, $2518 = 0, $2519 = 0.0, $2521 = 0.0, $2523 = 0.0, $2528 = 0.0, $255 = 0, $2556 = 0, $2557 = 0, $2559 = 0.0, $2563 = 0.0, $2564 = 0, $257 = 0, $2572 = 0.0, $2574 = 0.0, $2576 = 0.0, $2581 = 0.0, $2605 = 0, $2613 = 0.0, $2615 = 0.0, $2617 = 0.0, $2622 = 0.0, $263 = 0, $264 = 0, $2650 = 0, $2655 = 0, $2657 = 0.0, $2660 = 0.0, $2661 = 0.0, $2665 = 0.0, $2667 = 0.0, $2670 = 0, $2675 = 0, $2676 = 0, $2682 = 0.0, $2685 = 0, $2686 = 0.0, $2687 = 0.0, $2693 = 0.0, $2694 = 0.0, $2695 = 0.0, $2697 = 0, $2701 = 0.0, $2706 = 0.0, $2709 = 0, $2726 = 0.0, $2727 = 0.0, $2729 = 0.0, $2732 = 0.0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0.0, $2739 = 0.0, $2742 = 0.0, $2744 = 0.0, $2746 = 0.0, $2747 = 0, $276 = 0, $2760 = 0.0, $2762 = 0.0, $2764 = 0.0, $2768 = 0.0, $2770 = 0.0, $2771 = 0.0, $2784 = 0.0, $2786 = 0.0, $2793 = 0.0, $2800 = 0.0, $2802 = 0, $2804 = 0, $2805 = 0.0, $2807 = 0, $2808 = 0.0, $2810 = 0, $2811 = 0.0, $2813 = 0, $2814 = 0.0, $2817 = 0.0, $2819 = 0.0, $2823 = 0, $2828 = 0, $2835 = 0, $2836 = 0, $2856 = 0, $2859 = 0, $2861 = 0, $2879 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0.0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $299 = 0, $3 = 0, $301 = 0, $302 = 0, $303 = 0, $308 = 0, $309 = 0, $310 = 0, $315 = 0, $318 = 0, $319 = 0, $32 = 0, $322 = 0, $327 = 0, $328 = 0, $331 = 0, $336 = 0, $337 = 0, $34 = 0, $341 = 0, $343 = 0, $349 = 0, $352 = 0, $354 = 0, $356 = 0, $357 = 0, $358 = 0, $360 = 0, $361 = 0, $363 = 0, $366 = 0, $367 = 0.0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $372 = 0, $373 = 0, $374 = 0.0, $375 = 0.0, $385 = 0, $386 = 0.0, $387 = 0, $388 = 0.0, $390 = 0, $392 = 0, $395 = 0, $396 = 0, $4 = 0, $401 = 0.0, $404 = 0.0, $405 = 0.0, $406 = 0.0, $409 = 0, $41 = 0, $412 = 0, $415 = 0, $418 = 0, $422 = 0, $423 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $430 = 0, $434 = 0.0, $436 = 0, $440 = 0.0, $442 = 0, $445 = 0, $450 = 0, $455 = 0, $456 = 0, $462 = 0, $463 = 0, $465 = 0, $466 = 0, $467 = 0, $47 = 0.0, $471 = 0, $474 = 0, $479 = 0, $489 = 0, $49 = 0.0, $497 = 0, $5 = 0, $50 = 0, $500 = 0, $507 = 0, $513 = 0, $515 = 0, $516 = 0, $518 = 0, $519 = 0, $520 = 0, $521 = 0, $527 = 0, $528 = 0, $531 = 0, $536 = 0, $537 = 0, $541 = 0, $543 = 0, $55 = 0, $553 = 0, $555 = 0, $56 = 0, $563 = 0, $568 = 0, $569 = 0, $574 = 0, $579 = 0, $580 = 0, $585 = 0, $587 = 0, $591 = 0, $597 = 0, $599 = 0, $6 = 0, $601 = 0, $602 = 0, $604 = 0, $607 = 0.0, $608 = 0, $611 = 0, $612 = 0.0, $613 = 0, $616 = 0, $617 = 0.0, $618 = 0, $621 = 0, $622 = 0.0, $623 = 0, $625 = 0.0, $626 = 0.0, $628 = 0.0, $629 = 0.0, $630 = 0.0, $632 = 0.0, $637 = 0, $64 = 0, $643 = 0, $645 = 0, $647 = 0, $648 = 0, $650 = 0, $653 = 0.0, $654 = 0, $657 = 0, $658 = 0.0, $659 = 0, $66 = 0, $662 = 0, $663 = 0.0, $664 = 0, $667 = 0, $668 = 0.0, $669 = 0, $67 = 0, $671 = 0.0, $672 = 0.0, $674 = 0.0, $675 = 0.0, $676 = 0.0, $678 = 0.0, $68 = 0, $683 = 0, $694 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $712 = 0.0, $72 = 0, $727 = 0.0, $728 = 0.0, $729 = 0, $731 = 0, $734 = 0, $739 = 0, $742 = 0.0, $743 = 0, $746 = 0.0, $748 = 0.0, $750 = 0.0, $754 = 0.0, $759 = 0, $76 = 0, $766 = 0.0, $773 = 0, $778 = 0, $785 = 0.0, $795 = 0.0, $797 = 0.0, $798 = 0.0, $799 = 0, $8 = 0, $80 = 0, $801 = 0.0, $811 = 0.0, $813 = 0.0, $814 = 0.0, $815 = 0, $816 = 0, $823 = 0, $83 = 0, $832 = 0, $834 = 0, $835 = 0.0, $837 = 0.0, $838 = 0.0, $839 = 0.0, $840 = 0.0, $844 = 0.0, $845 = 0.0, $847 = 0.0, $849 = 0.0, $853 = 0.0, $857 = 0.0, $86 = 0, $860 = 0, $872 = 0.0, $875 = 0, $877 = 0, $884 = 0.0, $887 = 0.0, $89 = 0, $894 = 0.0, $897 = 0.0, $899 = 0.0, $9 = 0, $901 = 0.0, $904 = 0.0, $918 = 0.0, $92 = 0, $935 = 0.0, $938 = 0.0, $945 = 0.0, $948 = 0.0, $95 = 0, $951 = 0, $958 = 0, $960 = 0, $963 = 0, $964 = 0, $97 = 0, $971 = 0, $977 = 0, $982 = 0, $983 = 0, $987 = 0, $988 = 0, $989 = 0, $992 = 0, $997 = 0, $998 = 0, $center$idx12$val$i = 0.0, $center$idx13$val$i = 0.0, $center$idx4$val$i = 0.0, $center$idx5$val$i = 0.0, $col_idx$0 = 0, $cr$sroa$0$0$i$v = 0.0, $cr$sroa$0$0$i253 = 0, $cr$sroa$0$0$i260 = 0, $cr$sroa$15$0$i$v = 0.0, $cr$sroa$15$0$i255 = 0, $cr$sroa$15$0$i262 = 0, $cr$sroa$22$1$i$v = 0.0, $cr$sroa$22$1$i256 = 0, $cr$sroa$22$1$i263 = 0, $cr$sroa$9$0$i$v = 0.0, $cr$sroa$9$0$i254 = 0, $cr$sroa$9$0$i261 = 0, $flags$ = 0, $fullscreen_rect = 0, $i$01$i = 0, $i$03$i = 0, $i$04$i$i = 0, $i$04$i$i$lcssa661 = 0, $or$cond$i = 0, $pressed$3$off0$i$ph$i = 0, $pressed$3$off0$i70$i = 0, $pressed$3$off0$i71$i = 0, $resize_col$0 = 0, $root_idx$0 = 0, $root_idx$0$in = 0, $root_idx$0$in$lcssa656 = 0, $root_idx$0$in657 = 0, $root_idx$0$lcssa659 = 0, $root_idx$0660 = 0, $root_non_popup_idx$0$lcssa = 0, $root_non_popup_idx$0561 = 0, $settings$0$i = 0, $size_auto_fit$sroa$0$0$in = 0.0, $size_auto_fit$sroa$0$1$in = 0.0, $size_auto_fit$sroa$14$0$in = 0.0, $storemerge = 0.0, $storemerge550 = 0.0, $storemerge551 = 0.0, $storemerge552 = 0.0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $title_bar_rect3$sroa$0$0 = 0, $title_bar_rect3$sroa$12$0 = 0, $title_bar_rect3$sroa$17$0 = 0, $title_bar_rect3$sroa$17$1 = 0, $title_bar_rect3$sroa$7$0 = 0, $title_bar_rect3$sroa$7$1 = 0, $window$sroa$0$0 = 0, $window_is_new$0$off0 = 0, $window_pos_set_by_api$0$off0 = 0, $window_size_set_by_api$0$off0 = 0, $window_was_active$0$off0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $$byval_copy2 = sp + 48 | 0;
 $$byval_copy = sp + 40 | 0;
 $0 = sp + 200 | 0;
 $1 = sp + 192 | 0;
 $2 = sp + 184 | 0;
 $3 = sp + 176 | 0;
 $fullscreen_rect = sp;
 $4 = sp + 32 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 16 | 0;
 $7 = sp + 168 | 0;
 $8 = sp + 160 | 0;
 $9 = sp + 152 | 0;
 $10 = sp + 144 | 0;
 $11 = sp + 136 | 0;
 $12 = sp + 128 | 0;
 $13 = sp + 120 | 0;
 $14 = sp + 112 | 0;
 $15 = sp + 104 | 0;
 $16 = sp + 96 | 0;
 $17 = sp + 88 | 0;
 $18 = sp + 80 | 0;
 $19 = sp + 72 | 0;
 $20 = sp + 64 | 0;
 if (!$name) ___assert_fail(124675, 124187, 3557, 124686);
 if (!(HEAP8[146892] | 0)) ___assert_fail(124692, 124187, 3558, 124686);
 if ((HEAP32[38193] | 0) == (HEAP32[38192] | 0)) ___assert_fail(124706, 124187, 3559, 124686);
 $flags$ = ($flags & 512 | 0) == 0 ? $flags : $flags | 6;
 $32 = __Z6ImHashPKvij($name, 0, 0) | 0;
 $34 = HEAP32[38195] | 0;
 L10 : do if (($34 | 0) > 0) {
  $37 = HEAP32[38197] | 0;
  $i$03$i = 0;
  while (1) {
   $41 = HEAP32[$37 + ($i$03$i << 2) >> 2] | 0;
   $i$03$i = $i$03$i + 1 | 0;
   if ((HEAP32[$41 + 4 >> 2] | 0) == ($32 | 0)) {
    $$lcssa664 = $41;
    break;
   }
   if (($i$03$i | 0) >= ($34 | 0)) {
    label = 12;
    break L10;
   }
  }
  if (!$$lcssa664) label = 12; else {
   $window$sroa$0$0 = $$lcssa664;
   $window_is_new$0$off0 = 0;
  }
 } else label = 12; while (0);
 do if ((label | 0) == 12) {
  $47 = +HEAPF32[$size_on_first_use >> 2];
  $49 = +HEAPF32[$size_on_first_use + 4 >> 2];
  $50 = 147664;
  HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 1;
  $55 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63](608) | 0;
  $56 = $55;
  __ZN11ImGuiWindowC2EPKc($55, $name);
  HEAP32[$55 + 8 >> 2] = $flags$;
  if (!($flags$ & 256)) {
   $64 = $55 + 12 | 0;
   HEAP32[$64 >> 2] = 1114636288;
   HEAP32[$55 + 16 >> 2] = 1114636288;
   $66 = $55 + 20 | 0;
   HEAPF32[$66 >> 2] = 60.0;
   $67 = $55 + 24 | 0;
   HEAP32[$67 >> 2] = 1114636288;
   $68 = __Z6ImHashPKvij($name, 0, 0) | 0;
   $70 = HEAP32[38216] | 0;
   L20 : do if (!$70) label = 21; else {
    $72 = 152872;
    $i$04$i$i = 0;
    while (1) {
     if (($70 | 0) <= ($i$04$i$i | 0)) {
      label = 18;
      break;
     }
     $76 = HEAP32[$72 >> 2] | 0;
     if ((HEAP32[$76 + ($i$04$i$i * 28 | 0) + 4 >> 2] | 0) == ($68 | 0)) {
      $$lcssa = $76;
      $i$04$i$i$lcssa661 = $i$04$i$i;
      break;
     }
     $i$04$i$i = $i$04$i$i + 1 | 0;
     if (($i$04$i$i | 0) == ($70 | 0)) {
      label = 21;
      break L20;
     }
    }
    if ((label | 0) == 18) ___assert_fail(127217, 127226, 805, 127272);
    $80 = $$lcssa + ($i$04$i$i$lcssa661 * 28 | 0) | 0;
    if (!$80) label = 21; else {
     $83 = $55 + 148 | 0;
     HEAP32[$83 >> 2] = HEAP32[$83 >> 2] & -5;
     $86 = $55 + 152 | 0;
     HEAP32[$86 >> 2] = HEAP32[$86 >> 2] & -5;
     $89 = $55 + 156 | 0;
     HEAP32[$89 >> 2] = HEAP32[$89 >> 2] & -5;
     $settings$0$i = $80;
    }
   } while (0);
   if ((label | 0) == 21) $settings$0$i = __ZL17AddWindowSettingsPKc($name) | 0;
   $92 = $settings$0$i + 8 | 0;
   if (+HEAPF32[$92 >> 2] != 3402823466385288598117041.0e14) {
    $95 = $92;
    $97 = HEAP32[$95 >> 2] | 0;
    $100 = HEAP32[$95 + 4 >> 2] | 0;
    $101 = $64;
    HEAP32[$101 >> 2] = $97;
    HEAP32[$101 + 4 >> 2] = $100;
    $106 = +(~~(HEAP32[tempDoublePtr >> 2] = $97, +HEAPF32[tempDoublePtr >> 2]) | 0);
    $109 = +(~~(HEAP32[tempDoublePtr >> 2] = $100, +HEAPF32[tempDoublePtr >> 2]) | 0);
    HEAPF32[$66 >> 2] = $106;
    HEAPF32[$67 >> 2] = $109;
    HEAP8[$55 + 115 >> 0] = HEAP8[$settings$0$i + 24 >> 0] | 0;
   }
   $$idx$val$i = +HEAPF32[$settings$0$i + 16 >> 2];
   $$idx4$val$i = +HEAPF32[$settings$0$i + 20 >> 2];
   $or$cond$i = ($flags$ & 2 | 0) == 0 ? $$idx$val$i * $$idx$val$i + $$idx4$val$i * $$idx4$val$i > 9.999999747378752e-06 : 0;
   $$idx$val$size$0$i = $or$cond$i ? $$idx$val$i : $47;
   $$idx4$val$size$1$i = $or$cond$i ? $$idx4$val$i : $49;
   HEAPF32[$55 + 36 >> 2] = $$idx$val$size$0$i;
   HEAPF32[$55 + 40 >> 2] = $$idx4$val$size$1$i;
   HEAPF32[$55 + 28 >> 2] = $$idx$val$size$0$i;
   HEAPF32[$55 + 32 >> 2] = $$idx4$val$size$1$i;
   $129 = $$idx$val$size$0$i;
   $132 = $$idx4$val$size$1$i;
  } else {
   HEAPF32[$55 + 36 >> 2] = $47;
   HEAPF32[$55 + 40 >> 2] = $49;
   HEAPF32[$55 + 28 >> 2] = $47;
   HEAPF32[$55 + 32 >> 2] = $49;
   $129 = $47;
   $132 = $49;
  }
  if (!($flags$ & 64)) {
   if ($129 <= 0.0) HEAP32[$55 + 128 >> 2] = 2;
   if ($132 <= 0.0) HEAP32[$55 + 132 >> 2] = 2;
   if ((HEAP32[$55 + 128 >> 2] | 0) > 0) $141 = 1; else $141 = (HEAP32[$55 + 132 >> 2] | 0) > 0 & 1;
   HEAP8[$55 + 136 >> 0] = $141;
  } else {
   HEAP32[$55 + 132 >> 2] = 2;
   HEAP32[$55 + 128 >> 2] = 2;
   HEAP8[$55 + 136 >> 0] = 0;
  }
  $144 = 152780;
  if (!($flags$ & 8192)) {
   $180 = HEAP32[$144 >> 2] | 0;
   $181 = 152784;
   if (($180 | 0) == (HEAP32[$181 >> 2] | 0)) {
    $184 = $180 + 1 | 0;
    if (!$180) $189 = 8; else $189 = (($180 | 0) / 2 | 0) + $180 | 0;
    $190 = ($189 | 0) > ($184 | 0) ? $189 : $184;
    if (($180 | 0) < ($190 | 0)) {
     $193 = 147664;
     HEAP32[$193 >> 2] = (HEAP32[$193 >> 2] | 0) + 1;
     $198 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($190 << 2) | 0;
     $199 = 152788;
     _memcpy($198 | 0, HEAP32[$199 >> 2] | 0, HEAP32[$144 >> 2] << 2 | 0) | 0;
     $203 = HEAP32[$199 >> 2] | 0;
     if ($203 | 0) {
      $205 = 147664;
      HEAP32[$205 >> 2] = (HEAP32[$205 >> 2] | 0) + -1;
     }
     FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($203);
     HEAP32[$199 >> 2] = $198;
     HEAP32[$181 >> 2] = $190;
     $211 = HEAP32[$144 >> 2] | 0;
    } else $211 = $180;
   } else $211 = $180;
   HEAP32[$144 >> 2] = $211 + 1;
   HEAP32[(HEAP32[38197] | 0) + ($211 << 2) >> 2] = $56;
   $window$sroa$0$0 = $56;
   $window_is_new$0$off0 = 1;
   break;
  }
  $145 = 152788;
  $146 = HEAP32[$145 >> 2] | 0;
  $147 = HEAP32[$144 >> 2] | 0;
  if (($147 | 0) < 0) ___assert_fail(124254, 127226, 836, 124284);
  $149 = 152784;
  if (($147 | 0) == (HEAP32[$149 >> 2] | 0)) {
   $$$i$i = ($147 | 0) == 0 ? 4 : $147 << 1;
   if (($147 | 0) < ($$$i$i | 0)) {
    $156 = 147664;
    HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + 1;
    $161 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($$$i$i << 2) | 0;
    _memcpy($161 | 0, HEAP32[$145 >> 2] | 0, HEAP32[$144 >> 2] << 2 | 0) | 0;
    $165 = HEAP32[$145 >> 2] | 0;
    if ($165 | 0) {
     $167 = 147664;
     HEAP32[$167 >> 2] = (HEAP32[$167 >> 2] | 0) + -1;
    }
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($165);
    HEAP32[$145 >> 2] = $161;
    HEAP32[$149 >> 2] = $$$i$i;
    $173 = HEAP32[$144 >> 2] | 0;
    $175 = $161;
   } else {
    $173 = $147;
    $175 = $146;
   }
  } else {
   $173 = $147;
   $175 = $146;
  }
  if (($173 | 0) > 0) {
   _memmove($175 + 4 | 0, $175 | 0, $173 << 2 | 0) | 0;
   $177 = HEAP32[$145 >> 2] | 0;
   $179 = HEAP32[$144 >> 2] | 0;
  } else {
   $177 = $175;
   $179 = $173;
  }
  HEAP32[$177 >> 2] = $56;
  HEAP32[$144 >> 2] = $179 + 1;
  $window$sroa$0$0 = $56;
  $window_is_new$0$off0 = 1;
 } while (0);
 $216 = HEAP32[38192] | 0;
 $217 = $window$sroa$0$0;
 $218 = $217 + 468 | 0;
 $220 = (HEAP32[$218 >> 2] | 0) != ($216 | 0);
 $221 = $217 + 8 | 0;
 if ($220) {
  HEAP32[$221 >> 2] = $flags$;
  $$1 = $flags$;
 } else $$1 = HEAP32[$221 >> 2] | 0;
 $223 = 152808;
 $224 = HEAP32[$223 >> 2] | 0;
 do if (!$224) {
  $235 = 0;
  $294 = 0;
 } else if (($224 | 0) > 0) {
  $235 = $224;
  $294 = HEAP32[(HEAP32[38204] | 0) + ($224 + -1 << 2) >> 2] | 0;
  break;
 } else ___assert_fail(127436, 127226, 815, 127445); while (0);
 $232 = 152812;
 if (($235 | 0) == (HEAP32[$232 >> 2] | 0)) {
  $236 = $235 + 1 | 0;
  if (!$235) $241 = 8; else $241 = (($235 | 0) / 2 | 0) + $235 | 0;
  $242 = ($241 | 0) > ($236 | 0) ? $241 : $236;
  if (($235 | 0) < ($242 | 0)) {
   $245 = 147664;
   HEAP32[$245 >> 2] = (HEAP32[$245 >> 2] | 0) + 1;
   $250 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($242 << 2) | 0;
   $251 = 152816;
   _memcpy($250 | 0, HEAP32[$251 >> 2] | 0, HEAP32[$223 >> 2] << 2 | 0) | 0;
   $255 = HEAP32[$251 >> 2] | 0;
   if ($255 | 0) {
    $257 = 147664;
    HEAP32[$257 >> 2] = (HEAP32[$257 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($255);
   HEAP32[$251 >> 2] = $250;
   HEAP32[$232 >> 2] = $242;
   $263 = HEAP32[$223 >> 2] | 0;
  } else $263 = $235;
 } else $263 = $235;
 HEAP32[$223 >> 2] = $263 + 1;
 $264 = 152816;
 HEAP32[(HEAP32[$264 >> 2] | 0) + ($263 << 2) >> 2] = $window$sroa$0$0;
 HEAP32[38201] = $217;
 if ($window$sroa$0$0 | 0) HEAPF32[38187] = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2];
 $276 = $217 + 424 | 0;
 HEAP32[$217 + 344 >> 2] = HEAP32[$276 >> 2];
 HEAP32[$217 + 348 >> 2] = HEAP32[$217 + 328 >> 2];
 HEAP32[$217 + 352 >> 2] = HEAP32[38232];
 HEAP32[$217 + 356 >> 2] = HEAP32[38220];
 HEAP32[$217 + 360 >> 2] = HEAP32[38223];
 HEAP32[$217 + 364 >> 2] = HEAP32[38226];
 $293 = ($294 | 0) != 0;
 $295 = $$1 & 1048576;
 $296 = ($295 | 0) == 0;
 if (!($296 | $293)) ___assert_fail(124746, 124187, 3585, 124686);
 $299 = (HEAP32[$218 >> 2] | 0) == ($216 + -1 | 0);
 $301 = ($$1 & 33554432 | 0) != 0;
 if ($301) {
  $302 = 152928;
  $303 = HEAP32[$302 >> 2] | 0;
  if ((HEAP32[38229] | 0) <= ($303 | 0)) ___assert_fail(127217, 127226, 805, 127272);
  $308 = HEAP32[38231] | 0;
  $309 = $308 + ($303 * 24 | 0) | 0;
  $310 = $217 + 124 | 0;
  $315 = $308 + ($303 * 24 | 0) + 4 | 0;
  $318 = $299 & (HEAP32[$310 >> 2] | 0) == (HEAP32[$309 >> 2] | 0) & ($217 | 0) == (HEAP32[$315 >> 2] | 0);
  HEAP32[$315 >> 2] = $217;
  $319 = 152932;
  if (($303 | 0) == (HEAP32[$319 >> 2] | 0)) {
   $322 = $303 + 1 | 0;
   if (!$303) $327 = 8; else $327 = (($303 | 0) / 2 | 0) + $303 | 0;
   $328 = ($327 | 0) > ($322 | 0) ? $327 : $322;
   if (($303 | 0) < ($328 | 0)) {
    $331 = 147664;
    HEAP32[$331 >> 2] = (HEAP32[$331 >> 2] | 0) + 1;
    $336 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($328 * 24 | 0) | 0;
    $337 = 152936;
    _memcpy($336 | 0, HEAP32[$337 >> 2] | 0, (HEAP32[$302 >> 2] | 0) * 24 | 0) | 0;
    $341 = HEAP32[$337 >> 2] | 0;
    if ($341 | 0) {
     $343 = 147664;
     HEAP32[$343 >> 2] = (HEAP32[$343 >> 2] | 0) + -1;
    }
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($341);
    HEAP32[$337 >> 2] = $336;
    HEAP32[$319 >> 2] = $328;
    $349 = HEAP32[$302 >> 2] | 0;
   } else $349 = $303;
  } else $349 = $303;
  HEAP32[$302 >> 2] = $349 + 1;
  $352 = (HEAP32[38234] | 0) + ($349 * 24 | 0) | 0;
  HEAP32[$352 >> 2] = HEAP32[$309 >> 2];
  HEAP32[$352 + 4 >> 2] = HEAP32[$309 + 4 >> 2];
  HEAP32[$352 + 8 >> 2] = HEAP32[$309 + 8 >> 2];
  HEAP32[$352 + 12 >> 2] = HEAP32[$309 + 12 >> 2];
  HEAP32[$352 + 16 >> 2] = HEAP32[$309 + 16 >> 2];
  HEAP32[$352 + 20 >> 2] = HEAP32[$309 + 20 >> 2];
  HEAP32[$310 >> 2] = HEAP32[$309 >> 2];
  $window_was_active$0$off0 = $318;
 } else $window_was_active$0$off0 = $299;
 $354 = $217 + 144 | 0;
 $356 = (HEAP32[$354 >> 2] | 0) == 1;
 $357 = 152968;
 $358 = HEAP32[$357 >> 2] | 0;
 if (!$358) $window_pos_set_by_api$0$off0 = 0; else {
  $360 = $217 + 164 | 0;
  $361 = $360;
  $363 = HEAP32[$361 >> 2] | 0;
  $366 = HEAP32[$361 + 4 >> 2] | 0;
  $367 = (HEAP32[tempDoublePtr >> 2] = $363, +HEAPF32[tempDoublePtr >> 2]);
  $368 = $217 + 148 | 0;
  $369 = HEAP32[$368 >> 2] | 0;
  if ($356 | $window_was_active$0$off0 ^ 1) {
   $370 = $369 | 8;
   HEAP32[$368 >> 2] = $370;
   $372 = $370;
  } else $372 = $369;
  $373 = ($358 & $372 | 0) != 0;
  do if ($373) {
   $374 = +HEAPF32[38235] + 3402823466385288598117041.0e14;
   $375 = +HEAPF32[38236] + 3402823466385288598117041.0e14;
   if ($374 * $374 + $375 * $375 < 1.0000000474974513e-03) {
    HEAP8[$217 + 160 >> 0] = 1;
    HEAP32[$368 >> 2] = $372 & -15;
    break;
   } else {
    HEAP32[$368 >> 2] = $372 & -15;
    HEAP8[$217 + 160 >> 0] = 0;
    $385 = $217 + 20 | 0;
    $386 = +HEAPF32[$385 >> 2];
    $387 = $217 + 24 | 0;
    $388 = +HEAPF32[$387 >> 2];
    $390 = 152940;
    $392 = HEAP32[$390 >> 2] | 0;
    $395 = HEAP32[$390 + 4 >> 2] | 0;
    $396 = $217 + 12 | 0;
    HEAP32[$396 >> 2] = $392;
    HEAP32[$396 + 4 >> 2] = $395;
    $401 = +(~~(HEAP32[tempDoublePtr >> 2] = $392, +HEAPF32[tempDoublePtr >> 2]) | 0);
    $404 = +(~~(HEAP32[tempDoublePtr >> 2] = $395, +HEAPF32[tempDoublePtr >> 2]) | 0);
    HEAPF32[$385 >> 2] = $401;
    HEAPF32[$387 >> 2] = $404;
    $405 = $401 - $386;
    $406 = $404 - $388;
    HEAPF32[$217 + 164 >> 2] = $367 + $405;
    $409 = $217 + 168 | 0;
    HEAPF32[$409 >> 2] = $406 + +HEAPF32[$409 >> 2];
    $412 = $217 + 188 | 0;
    HEAPF32[$412 >> 2] = $405 + +HEAPF32[$412 >> 2];
    $415 = $217 + 192 | 0;
    HEAPF32[$415 >> 2] = $406 + +HEAPF32[$415 >> 2];
    break;
   }
  } while (0);
  $418 = $360;
  HEAP32[$418 >> 2] = $363;
  HEAP32[$418 + 4 >> 2] = $366;
  HEAP32[$357 >> 2] = 0;
  $window_pos_set_by_api$0$off0 = $373;
 }
 $422 = 152972;
 $423 = HEAP32[$422 >> 2] | 0;
 if (!$423) $window_size_set_by_api$0$off0 = 0; else {
  $425 = $217 + 152 | 0;
  $426 = HEAP32[$425 >> 2] | 0;
  if ($356 | $window_was_active$0$off0 ^ 1) {
   $427 = $426 | 8;
   HEAP32[$425 >> 2] = $427;
   $429 = $427;
  } else $429 = $426;
  $428 = $423 & $429;
  $430 = ($428 | 0) != 0;
  do if ($428 | 0) {
   HEAP32[$425 >> 2] = $429 & -15;
   $434 = +HEAPF32[38237];
   $436 = $217 + 128 | 0;
   if ($434 > 0.0) {
    HEAP32[$436 >> 2] = 0;
    HEAPF32[$217 + 36 >> 2] = $434;
   } else {
    HEAP32[$436 >> 2] = 2;
    HEAP8[$217 + 136 >> 0] = 0;
   }
   $440 = +HEAPF32[38238];
   $442 = $217 + 132 | 0;
   if ($440 > 0.0) {
    HEAP32[$442 >> 2] = 0;
    HEAPF32[$217 + 40 >> 2] = $440;
    break;
   } else {
    HEAP32[$442 >> 2] = 2;
    HEAP8[$217 + 136 >> 0] = 0;
    break;
   }
  } while (0);
  HEAP32[$422 >> 2] = 0;
  $window_size_set_by_api$0$off0 = $430;
 }
 $445 = 152976;
 if (!(HEAP32[$445 >> 2] | 0)) {
  if ($220) {
   HEAP32[$217 + 52 >> 2] = 0;
   HEAP32[$217 + 56 >> 2] = 0;
  }
 } else {
  $450 = 152956;
  $455 = HEAP32[$450 + 4 >> 2] | 0;
  $456 = $217 + 52 | 0;
  HEAP32[$456 >> 2] = HEAP32[$450 >> 2];
  HEAP32[$456 + 4 >> 2] = $455;
  HEAP32[$445 >> 2] = 0;
 }
 $462 = 152980;
 $463 = HEAP32[$462 >> 2] | 0;
 if ($463 | 0) {
  $465 = $217 + 156 | 0;
  $466 = HEAP32[$465 >> 2] | 0;
  if ($356 | $window_was_active$0$off0 ^ 1) {
   $467 = $466 | 8;
   HEAP32[$465 >> 2] = $467;
   $$pre$i244 = $467;
  } else $$pre$i244 = $466;
  if ($$pre$i244 & $463 | 0) {
   $471 = HEAP8[152964] | 0;
   HEAP32[$465 >> 2] = $$pre$i244 & -15;
   HEAP8[$217 + 115 >> 0] = $471;
  }
  HEAP32[$462 >> 2] = 0;
 }
 $474 = 152984;
 if (HEAP8[$474 >> 0] | 0) {
  __ZN5ImGui11FocusWindowEP11ImGuiWindow(HEAP32[38201] | 0);
  HEAP8[$474 >> 0] = 0;
 }
 $479 = HEAP32[$223 >> 2] | 0;
 $root_idx$0$in = $479;
 while (1) {
  $root_idx$0 = $root_idx$0$in + -1 | 0;
  if (($root_idx$0$in | 0) <= 1) {
   $root_idx$0$in657 = $root_idx$0$in;
   $root_idx$0660 = $root_idx$0;
   $root_non_popup_idx$0$lcssa = $root_idx$0;
   break;
  }
  if (($479 | 0) < ($root_idx$0$in | 0)) {
   label = 117;
   break;
  }
  if (!(HEAP32[(HEAP32[(HEAP32[$264 >> 2] | 0) + ($root_idx$0 << 2) >> 2] | 0) + 8 >> 2] & 1048576)) {
   $root_idx$0$in$lcssa656 = $root_idx$0$in;
   $root_idx$0$lcssa659 = $root_idx$0;
   label = 119;
   break;
  } else $root_idx$0$in = $root_idx$0;
 }
 if ((label | 0) == 117) ___assert_fail(127217, 127226, 805, 127272);
 L171 : do if ((label | 0) == 119) {
  $489 = ($root_idx$0$in$lcssa656 | 0) > ($479 | 0);
  $root_non_popup_idx$0561 = $root_idx$0$lcssa659;
  while (1) {
   if ($489) break;
   if (!(HEAP32[(HEAP32[(HEAP32[$264 >> 2] | 0) + ($root_non_popup_idx$0561 << 2) >> 2] | 0) + 8 >> 2] & 34603008)) {
    $root_idx$0$in657 = $root_idx$0$in$lcssa656;
    $root_idx$0660 = $root_idx$0$lcssa659;
    $root_non_popup_idx$0$lcssa = $root_non_popup_idx$0561;
    break L171;
   }
   $497 = $root_non_popup_idx$0561 + -1 | 0;
   if (($root_non_popup_idx$0561 | 0) > 1) $root_non_popup_idx$0561 = $497; else {
    $root_idx$0$in657 = $root_idx$0$in$lcssa656;
    $root_idx$0660 = $root_idx$0$lcssa659;
    $root_non_popup_idx$0$lcssa = $497;
    break L171;
   }
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 if (($479 | 0) < ($root_idx$0$in657 | 0)) ___assert_fail(127217, 127226, 805, 127272);
 $500 = HEAP32[$264 >> 2] | 0;
 HEAP32[$217 + 576 >> 2] = HEAP32[$500 + ($root_idx$0660 << 2) >> 2];
 if (($479 | 0) <= ($root_non_popup_idx$0$lcssa | 0)) ___assert_fail(127217, 127226, 805, 127272);
 $507 = $217 + 580 | 0;
 HEAP32[$507 >> 2] = HEAP32[$500 + ($root_non_popup_idx$0$lcssa << 2) >> 2];
 $$0 = $bg_alpha < 0.0 ? +HEAPF32[38001] : $bg_alpha;
 if ($220) {
  HEAP8[$217 + 112 >> 0] = 1;
  HEAP32[$217 + 120 >> 2] = 0;
  $513 = $217 + 572 | 0;
  __ZN10ImDrawList5ClearEv(HEAP32[$513 >> 2] | 0);
  $515 = $217 + 436 | 0;
  HEAP32[$515 >> 2] = -8388609;
  $516 = $217 + 440 | 0;
  HEAP32[$516 >> 2] = -8388609;
  HEAP32[$217 + 444 >> 2] = 2139095039;
  $518 = $217 + 448 | 0;
  HEAP32[$518 >> 2] = 2139095039;
  HEAP32[$218 >> 2] = $216;
  $519 = $217 + 424 | 0;
  $520 = $217 + 428 | 0;
  $521 = HEAP32[$520 >> 2] | 0;
  do if (($521 | 0) < 1) {
   if (!$521) $527 = 8; else $527 = (($521 | 0) / 2 | 0) + $521 | 0;
   $528 = ($527 | 0) > 1 ? $527 : 1;
   if (($521 | 0) >= ($528 | 0)) break;
   $531 = 147664;
   HEAP32[$531 >> 2] = (HEAP32[$531 >> 2] | 0) + 1;
   $536 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($528 << 2) | 0;
   $537 = $217 + 432 | 0;
   _memcpy($536 | 0, HEAP32[$537 >> 2] | 0, HEAP32[$519 >> 2] << 2 | 0) | 0;
   $541 = HEAP32[$537 >> 2] | 0;
   if ($541 | 0) {
    $543 = 147664;
    HEAP32[$543 >> 2] = (HEAP32[$543 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($541);
   HEAP32[$537 >> 2] = $536;
   HEAP32[$520 >> 2] = $528;
  } while (0);
  HEAP32[$519 >> 2] = 1;
  __ZN10ImDrawList13PushTextureIDERKPv(HEAP32[$513 >> 2] | 0, HEAP32[(HEAP32[38186] | 0) + 36 >> 2] | 0);
  $553 = 147040;
  $555 = 147048;
  do if (+HEAPF32[$553 >> 2] != +HEAPF32[$555 >> 2]) {
   if (!(+HEAPF32[36761] != +HEAPF32[36763])) {
    label = 140;
    break;
   }
   $563 = $553;
   $568 = HEAP32[$563 + 4 >> 2] | 0;
   $569 = $fullscreen_rect;
   HEAP32[$569 >> 2] = HEAP32[$563 >> 2];
   HEAP32[$569 + 4 >> 2] = $568;
   $574 = $555;
   $579 = HEAP32[$574 + 4 >> 2] | 0;
   $580 = $fullscreen_rect + 8 | 0;
   HEAP32[$580 >> 2] = HEAP32[$574 >> 2];
   HEAP32[$580 + 4 >> 2] = $579;
  } else label = 140; while (0);
  if ((label | 0) == 140) {
   $585 = HEAP32[36724] | 0;
   $587 = HEAP32[36725] | 0;
   HEAPF32[$fullscreen_rect >> 2] = 0.0;
   HEAPF32[$fullscreen_rect + 4 >> 2] = 0.0;
   HEAP32[$fullscreen_rect + 8 >> 2] = $585;
   HEAP32[$fullscreen_rect + 12 >> 2] = $587;
  }
  $591 = ($295 | 0) != 0;
  do if (($$1 & 42991616 | 0) == 1048576) {
   $597 = HEAP32[38201] | 0;
   HEAP8[$597 + 114 >> 0] = 1;
   $599 = HEAP32[$294 + 436 >> 2] | 0;
   $601 = HEAP32[$294 + 440 >> 2] | 0;
   $602 = HEAP32[$294 + 444 >> 2] | 0;
   $604 = HEAP32[$294 + 448 >> 2] | 0;
   $607 = +HEAPF32[$597 + 436 >> 2];
   $608 = (HEAP32[tempDoublePtr >> 2] = $599, +HEAPF32[tempDoublePtr >> 2]) < $607;
   $cr$sroa$0$0$i253 = $608 ? (HEAPF32[tempDoublePtr >> 2] = $607, HEAP32[tempDoublePtr >> 2] | 0) : $599;
   $611 = $597 + 440 | 0;
   $612 = +HEAPF32[$611 >> 2];
   $613 = (HEAP32[tempDoublePtr >> 2] = $601, +HEAPF32[tempDoublePtr >> 2]) < $612;
   $cr$sroa$9$0$i254 = $613 ? (HEAPF32[tempDoublePtr >> 2] = $612, HEAP32[tempDoublePtr >> 2] | 0) : $601;
   $616 = $597 + 444 | 0;
   $617 = +HEAPF32[$616 >> 2];
   $618 = (HEAP32[tempDoublePtr >> 2] = $602, +HEAPF32[tempDoublePtr >> 2]) > $617;
   $cr$sroa$15$0$i255 = $618 ? (HEAPF32[tempDoublePtr >> 2] = $617, HEAP32[tempDoublePtr >> 2] | 0) : $602;
   $621 = $597 + 448 | 0;
   $622 = +HEAPF32[$621 >> 2];
   $623 = (HEAP32[tempDoublePtr >> 2] = $604, +HEAPF32[tempDoublePtr >> 2]) > $622;
   $cr$sroa$22$1$i256 = $623 ? (HEAPF32[tempDoublePtr >> 2] = $622, HEAP32[tempDoublePtr >> 2] | 0) : $604;
   $625 = (HEAP32[tempDoublePtr >> 2] = $cr$sroa$0$0$i253, +HEAPF32[tempDoublePtr >> 2]);
   $626 = (HEAP32[tempDoublePtr >> 2] = $cr$sroa$15$0$i255, +HEAPF32[tempDoublePtr >> 2]);
   $628 = $625 >= $626 ? $625 : $626;
   $629 = (HEAP32[tempDoublePtr >> 2] = $cr$sroa$9$0$i254, +HEAPF32[tempDoublePtr >> 2]);
   $630 = (HEAP32[tempDoublePtr >> 2] = $cr$sroa$22$1$i256, +HEAPF32[tempDoublePtr >> 2]);
   $632 = $629 >= $630 ? $629 : $630;
   if (!($625 <= $628) | !($629 <= $632)) ___assert_fail(124844, 124187, 2338, 124889); else {
    HEAP32[$597 + 436 >> 2] = $cr$sroa$0$0$i253;
    HEAP32[$611 >> 2] = $cr$sroa$9$0$i254;
    HEAPF32[$616 >> 2] = $628;
    HEAPF32[$621 >> 2] = $632;
    $637 = HEAP32[$597 + 572 >> 2] | 0;
    HEAP32[$$byval_copy2 >> 2] = $cr$sroa$0$0$i253;
    HEAP32[$$byval_copy2 + 4 >> 2] = $cr$sroa$9$0$i254;
    HEAPF32[$$byval_copy2 + 8 >> 2] = $628;
    HEAPF32[$$byval_copy2 + 12 >> 2] = $632;
    __ZN10ImDrawList12PushClipRectERK6ImVec4($637, $$byval_copy2);
    break;
   }
  } else {
   $643 = HEAP32[38201] | 0;
   HEAP8[$643 + 114 >> 0] = 1;
   $645 = HEAP32[$fullscreen_rect >> 2] | 0;
   $647 = HEAP32[$fullscreen_rect + 4 >> 2] | 0;
   $648 = HEAP32[$fullscreen_rect + 8 >> 2] | 0;
   $650 = HEAP32[$fullscreen_rect + 12 >> 2] | 0;
   $653 = +HEAPF32[$643 + 436 >> 2];
   $654 = (HEAP32[tempDoublePtr >> 2] = $645, +HEAPF32[tempDoublePtr >> 2]) < $653;
   $cr$sroa$0$0$i260 = $654 ? (HEAPF32[tempDoublePtr >> 2] = $653, HEAP32[tempDoublePtr >> 2] | 0) : $645;
   $657 = $643 + 440 | 0;
   $658 = +HEAPF32[$657 >> 2];
   $659 = (HEAP32[tempDoublePtr >> 2] = $647, +HEAPF32[tempDoublePtr >> 2]) < $658;
   $cr$sroa$9$0$i261 = $659 ? (HEAPF32[tempDoublePtr >> 2] = $658, HEAP32[tempDoublePtr >> 2] | 0) : $647;
   $662 = $643 + 444 | 0;
   $663 = +HEAPF32[$662 >> 2];
   $664 = (HEAP32[tempDoublePtr >> 2] = $648, +HEAPF32[tempDoublePtr >> 2]) > $663;
   $cr$sroa$15$0$i262 = $664 ? (HEAPF32[tempDoublePtr >> 2] = $663, HEAP32[tempDoublePtr >> 2] | 0) : $648;
   $667 = $643 + 448 | 0;
   $668 = +HEAPF32[$667 >> 2];
   $669 = (HEAP32[tempDoublePtr >> 2] = $650, +HEAPF32[tempDoublePtr >> 2]) > $668;
   $cr$sroa$22$1$i263 = $669 ? (HEAPF32[tempDoublePtr >> 2] = $668, HEAP32[tempDoublePtr >> 2] | 0) : $650;
   $671 = (HEAP32[tempDoublePtr >> 2] = $cr$sroa$0$0$i260, +HEAPF32[tempDoublePtr >> 2]);
   $672 = (HEAP32[tempDoublePtr >> 2] = $cr$sroa$15$0$i262, +HEAPF32[tempDoublePtr >> 2]);
   $674 = $671 >= $672 ? $671 : $672;
   $675 = (HEAP32[tempDoublePtr >> 2] = $cr$sroa$9$0$i261, +HEAPF32[tempDoublePtr >> 2]);
   $676 = (HEAP32[tempDoublePtr >> 2] = $cr$sroa$22$1$i263, +HEAPF32[tempDoublePtr >> 2]);
   $678 = $675 >= $676 ? $675 : $676;
   if (!($671 <= $674) | !($675 <= $678)) ___assert_fail(124844, 124187, 2338, 124889); else {
    HEAP32[$643 + 436 >> 2] = $cr$sroa$0$0$i260;
    HEAP32[$657 >> 2] = $cr$sroa$9$0$i261;
    HEAPF32[$662 >> 2] = $674;
    HEAPF32[$667 >> 2] = $678;
    $683 = HEAP32[$643 + 572 >> 2] | 0;
    HEAP32[$$byval_copy2 >> 2] = $cr$sroa$0$0$i260;
    HEAP32[$$byval_copy2 + 4 >> 2] = $cr$sroa$9$0$i261;
    HEAPF32[$$byval_copy2 + 8 >> 2] = $674;
    HEAPF32[$$byval_copy2 + 12 >> 2] = $678;
    __ZN10ImDrawList12PushClipRectERK6ImVec4($683, $$byval_copy2);
    break;
   }
  } while (0);
  do if (!$window_was_active$0$off0) {
   HEAP32[$217 + 140 >> 2] = -1;
   do if (!($$1 & 4096)) {
    if (!(($$1 & 17825792 | 0) == 0 | $301)) break;
    __ZN5ImGui11FocusWindowEP11ImGuiWindow($217);
   } while (0);
   if ($window_pos_set_by_api$0$off0 | $301 ^ 1) break;
   $694 = 147084;
   $699 = HEAP32[$694 + 4 >> 2] | 0;
   $700 = $217 + 12 | 0;
   HEAP32[$700 >> 2] = HEAP32[$694 >> 2];
   HEAP32[$700 + 4 >> 2] = $699;
  } while (0);
  $705 = ($$1 & 1 | 0) != 0;
  $706 = $$1 & 32;
  $707 = ($706 | 0) == 0;
  do if ($707 & ($705 ^ 1)) {
   $708 = $217 + 20 | 0;
   $712 = +HEAPF32[$708 >> 2] + +HEAPF32[$217 + 36 >> 2];
   if (!(HEAP32[$221 >> 2] & 1)) $728 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $728 = 0.0;
   $727 = +HEAPF32[$217 + 24 >> 2] + $728;
   $729 = $708;
   $731 = HEAP32[$729 >> 2] | 0;
   $734 = HEAP32[$729 + 4 >> 2] | 0;
   if ((HEAP32[38206] | 0) != ($217 | 0)) break;
   $739 = HEAP32[38201] | 0;
   $742 = +HEAPF32[$739 + 436 >> 2];
   $743 = (HEAP32[tempDoublePtr >> 2] = $731, +HEAPF32[tempDoublePtr >> 2]) < $742;
   $746 = +HEAPF32[$739 + 440 >> 2];
   $748 = +HEAPF32[$739 + 444 >> 2];
   $750 = +HEAPF32[$739 + 448 >> 2];
   $$idx2$val$i = +HEAPF32[37999];
   $$idx3$val$i = +HEAPF32[38e3];
   $754 = +HEAPF32[36771];
   if (!($754 >= (HEAP32[tempDoublePtr >> 2] = $743 ? (HEAPF32[tempDoublePtr >> 2] = $742, HEAP32[tempDoublePtr >> 2] | 0) : $731, +HEAPF32[tempDoublePtr >> 2]) - $$idx2$val$i)) break;
   $759 = (HEAP32[tempDoublePtr >> 2] = $734, +HEAPF32[tempDoublePtr >> 2]) < $746;
   $766 = +HEAPF32[36772];
   if (!($766 < ($727 > $750 ? $750 : $727) + $$idx3$val$i & ($766 >= (HEAP32[tempDoublePtr >> 2] = $759 ? (HEAPF32[tempDoublePtr >> 2] = $746, HEAP32[tempDoublePtr >> 2] | 0) : $734, +HEAPF32[tempDoublePtr >> 2]) - $$idx3$val$i ? $754 < ($712 > $748 ? $748 : $712) + $$idx2$val$i : 0))) break;
   if (!(HEAP8[147764] | 0)) break;
   $773 = $217 + 115 | 0;
   HEAP8[$773 >> 0] = HEAP8[$773 >> 0] ^ 1;
   do if (!($$1 & 256)) {
    $778 = 152876;
    if (!(+HEAPF32[$778 >> 2] <= 0.0)) break;
    HEAP32[$778 >> 2] = HEAP32[36727];
   } while (0);
   __ZN5ImGui11FocusWindowEP11ImGuiWindow($217);
  } else HEAP8[$217 + 115 >> 0] = 0; while (0);
  $785 = +HEAPF32[$217 + 52 >> 2];
  if ($785 != 0.0) $797 = $785; else {
   if ($window_is_new$0$off0) $795 = 0.0; else $795 = +HEAPF32[$217 + 188 >> 2] - +HEAPF32[$217 + 20 >> 2];
   $797 = $795 + +HEAPF32[$217 + 72 >> 2];
  }
  $798 = +(~~$797 | 0);
  $799 = $217 + 44 | 0;
  HEAPF32[$799 >> 2] = $798;
  $801 = +HEAPF32[$217 + 56 >> 2];
  if ($801 != 0.0) $813 = $801; else {
   if ($window_is_new$0$off0) $811 = 0.0; else $811 = +HEAPF32[$217 + 192 >> 2] - +HEAPF32[$217 + 24 >> 2];
   $813 = $811 + +HEAPF32[$217 + 76 >> 2];
  }
  $814 = +(~~$813 | 0);
  $815 = $217 + 48 | 0;
  HEAPF32[$815 >> 2] = $814;
  $816 = HEAP32[$354 >> 2] | 0;
  if (($816 | 0) > 0) HEAP32[$354 >> 2] = $816 + -1;
  do if (($$1 & 50331648 | 0) == 0 | $window_was_active$0$off0) {
   $838 = $798;
   $840 = $814;
  } else {
   HEAP32[$354 >> 2] = 1;
   if (!($$1 & 64)) {
    $838 = $798;
    $840 = $814;
    break;
   }
   if (!$window_size_set_by_api$0$off0) {
    $823 = $217 + 28 | 0;
    HEAP32[$823 >> 2] = 0;
    HEAP32[$823 + 4 >> 2] = 0;
    HEAP32[$823 + 8 >> 2] = 0;
    HEAP32[$823 + 12 >> 2] = 0;
   }
   HEAP32[$217 + 44 >> 2] = 0;
   HEAP32[$815 >> 2] = 0;
   $838 = 0.0;
   $840 = 0.0;
  } while (0);
  if (($$1 & 42991744 | 0) == 1048576) {
   $$sroa$0525$0 = 0;
   $$sroa$3526$0 = 0;
  } else {
   $$sroa$0525$0 = HEAP32[37985] | 0;
   $$sroa$3526$0 = HEAP32[37986] | 0;
  }
  HEAP32[$217 + 60 >> 2] = $$sroa$0525$0;
  $832 = $217 + 64 | 0;
  HEAP32[$832 >> 2] = $$sroa$3526$0;
  $834 = ($$1 & 16777216 | 0) != 0;
  $$idx176 = $217 + 44 | 0;
  $835 = (HEAP32[tempDoublePtr >> 2] = $$sroa$0525$0, +HEAPF32[tempDoublePtr >> 2]);
  $837 = $838 + $835;
  $839 = $840 + (HEAP32[tempDoublePtr >> 2] = $$sroa$3526$0, +HEAPF32[tempDoublePtr >> 2]);
  if ($834) {
   $$sink = $839 - +HEAPF32[37996];
   $size_auto_fit$sroa$0$1$in = $837;
  } else {
   $844 = +HEAPF32[36724] - +HEAPF32[38010];
   $845 = +HEAPF32[36725] - +HEAPF32[38011];
   $$idx212$val = +HEAPF32[37987];
   $$idx213$val = +HEAPF32[37988];
   $847 = $$idx212$val >= $844 ? $$idx212$val : $844;
   $849 = $$idx213$val >= $845 ? $$idx213$val : $845;
   $853 = $837 < $$idx212$val ? $$idx212$val : $837 > $847 ? $847 : $837;
   $857 = $839 < $$idx213$val ? $$idx213$val : $839 > $849 ? $849 : $839;
   $860 = ($$1 & 8 | 0) == 0;
   if (($$1 & 2048 | 0) == 0 | $860 & $853 < $838 ^ 1) $size_auto_fit$sroa$14$0$in = $857; else $size_auto_fit$sroa$14$0$in = $857 + +HEAPF32[38004];
   if ($860 & $size_auto_fit$sroa$14$0$in < $840) $size_auto_fit$sroa$0$0$in = $853 + +HEAPF32[38004]; else $size_auto_fit$sroa$0$0$in = $853;
   $872 = $size_auto_fit$sroa$14$0$in - +HEAPF32[37996];
   $$sink = $872 >= 0.0 ? $872 : 0.0;
   $size_auto_fit$sroa$0$1$in = $size_auto_fit$sroa$0$0$in;
  }
  $875 = $217 + 115 | 0;
  $877 = (HEAP8[$875 >> 0] | 0) == 0;
  if ($877) {
   do if (($$1 & 64 | 0) == 0 | $window_size_set_by_api$0$off0) {
    if ((HEAP32[$217 + 128 >> 2] | 0) > 0) {
     if ($window_size_set_by_api$0$off0) break;
     $$pre609 = $217 + 36 | 0;
     if (!(HEAP8[$217 + 136 >> 0] | 0)) $938 = $size_auto_fit$sroa$0$1$in; else {
      $935 = +HEAPF32[$$pre609 >> 2];
      $938 = $935 >= $size_auto_fit$sroa$0$1$in ? $935 : $size_auto_fit$sroa$0$1$in;
     }
     HEAPF32[$$pre609 >> 2] = $938;
    } else if ($window_size_set_by_api$0$off0 | (HEAP32[$217 + 132 >> 2] | 0) < 1) break;
    if ((HEAP32[$217 + 132 >> 2] | 0) > 0) {
     $$pre611 = $217 + 40 | 0;
     if (!(HEAP8[$217 + 136 >> 0] | 0)) $948 = $$sink; else {
      $945 = +HEAPF32[$$pre611 >> 2];
      $948 = $945 >= $$sink ? $945 : $$sink;
     }
     HEAPF32[$$pre611 >> 2] = $948;
    }
    if ($$1 & 256 | 0) break;
    $951 = 152876;
    if (!(+HEAPF32[$951 >> 2] <= 0.0)) break;
    HEAP32[$951 >> 2] = HEAP32[36727];
   } else {
    HEAPF32[$217 + 36 >> 2] = $size_auto_fit$sroa$0$1$in;
    HEAPF32[$217 + 40 >> 2] = $$sink;
   } while (0);
   $958 = $217 + 36 | 0;
   $960 = HEAP32[$958 >> 2] | 0;
   $963 = HEAP32[$958 + 4 >> 2] | 0;
   $964 = $217 + 28 | 0;
   HEAP32[$964 >> 2] = $960;
   HEAP32[$964 + 4 >> 2] = $963;
   $$idx208$val = (HEAP32[tempDoublePtr >> 2] = $960, +HEAPF32[tempDoublePtr >> 2]);
  } else {
   if ((HEAP32[$217 + 128 >> 2] | 0) > 0) {
    $$pre613 = $217 + 36 | 0;
    if (!(HEAP8[$217 + 136 >> 0] | 0)) $887 = $size_auto_fit$sroa$0$1$in; else {
     $884 = +HEAPF32[$$pre613 >> 2];
     $887 = $884 >= $size_auto_fit$sroa$0$1$in ? $884 : $size_auto_fit$sroa$0$1$in;
    }
    HEAPF32[$$pre613 >> 2] = $887;
   }
   if ((HEAP32[$217 + 132 >> 2] | 0) > 0) {
    $$pre615 = $217 + 40 | 0;
    if (!(HEAP8[$217 + 136 >> 0] | 0)) $897 = $$sink; else {
     $894 = +HEAPF32[$$pre615 >> 2];
     $897 = $894 >= $$sink ? $894 : $$sink;
    }
    HEAPF32[$$pre615 >> 2] = $897;
   }
   $899 = +HEAPF32[$217 + 20 >> 2];
   $901 = +HEAPF32[$217 + 36 >> 2];
   $904 = +HEAPF32[$217 + 24 >> 2];
   if (!(HEAP32[$221 >> 2] & 1)) $918 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $918 = 0.0;
   HEAPF32[$217 + 28 >> 2] = $899 + $901 - $899;
   HEAPF32[$217 + 32 >> 2] = $904 + $918 - $904;
   $$idx208$val = $901;
  }
  do if (!($$1 & 1048640)) {
   $971 = $217 + 36 | 0;
   $$idx209 = $217 + 40 | 0;
   $$idx209$val = +HEAPF32[$$idx209 >> 2];
   $$idx210$val = +HEAPF32[37987];
   $$idx211$val = +HEAPF32[37988];
   HEAPF32[$971 >> 2] = $$idx208$val >= $$idx210$val ? $$idx208$val : $$idx210$val;
   HEAPF32[$$idx209 >> 2] = $$idx209$val >= $$idx211$val ? $$idx209$val : $$idx211$val;
   if (!$877) break;
   $977 = $971;
   $982 = HEAP32[$977 + 4 >> 2] | 0;
   $983 = $217 + 28 | 0;
   HEAP32[$983 >> 2] = HEAP32[$977 >> 2];
   HEAP32[$983 + 4 >> 2] = $982;
  } while (0);
  do if ($591) {
   $987 = $294 + 248 | 0;
   $988 = HEAP32[$987 >> 2] | 0;
   $989 = $294 + 252 | 0;
   do if (($988 | 0) == (HEAP32[$989 >> 2] | 0)) {
    $992 = $988 + 1 | 0;
    if (!$988) $997 = 8; else $997 = (($988 | 0) / 2 | 0) + $988 | 0;
    $998 = ($997 | 0) > ($992 | 0) ? $997 : $992;
    if (($988 | 0) >= ($998 | 0)) {
     $1019 = $988;
     break;
    }
    $1001 = 147664;
    HEAP32[$1001 >> 2] = (HEAP32[$1001 >> 2] | 0) + 1;
    $1006 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($998 << 2) | 0;
    $1007 = $294 + 256 | 0;
    _memcpy($1006 | 0, HEAP32[$1007 >> 2] | 0, HEAP32[$987 >> 2] << 2 | 0) | 0;
    $1011 = HEAP32[$1007 >> 2] | 0;
    if ($1011 | 0) {
     $1013 = 147664;
     HEAP32[$1013 >> 2] = (HEAP32[$1013 >> 2] | 0) + -1;
    }
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($1011);
    HEAP32[$1007 >> 2] = $1006;
    HEAP32[$989 >> 2] = $998;
    $1019 = HEAP32[$987 >> 2] | 0;
   } else $1019 = $988; while (0);
   HEAP32[$987 >> 2] = $1019 + 1;
   HEAP32[(HEAP32[$294 + 256 >> 2] | 0) + ($1019 << 2) >> 2] = $window$sroa$0$0;
   if ($301) break;
   $1026 = $294 + 164 | 0;
   $1028 = HEAP32[$1026 >> 2] | 0;
   $1031 = HEAP32[$1026 + 4 >> 2] | 0;
   $1032 = $217 + 12 | 0;
   HEAP32[$1032 >> 2] = $1028;
   HEAP32[$1032 + 4 >> 2] = $1031;
   $1036 = $217 + 20 | 0;
   HEAP32[$1036 >> 2] = $1028;
   HEAP32[$1036 + 4 >> 2] = $1031;
   $1042 = $size_on_first_use;
   $1044 = HEAP32[$1042 >> 2] | 0;
   $1047 = HEAP32[$1042 + 4 >> 2] | 0;
   $1048 = $217 + 36 | 0;
   HEAP32[$1048 >> 2] = $1044;
   HEAP32[$1048 + 4 >> 2] = $1047;
   $1052 = $217 + 28 | 0;
   HEAP32[$1052 >> 2] = $1044;
   HEAP32[$1052 + 4 >> 2] = $1047;
  } while (0);
  if (!(HEAP8[$217 + 160 >> 0] | 0)) $1066 = 0; else $1066 = (HEAP32[$354 >> 2] | 0) == 0;
  $1062 = ($$1 & 67108864 | 0) != 0;
  do if (!($1066 & 1 | ($1062 ? ($window_pos_set_by_api$0$off0 ? 0 : $356 & 1) : 0))) {
   if (!($$1 & 134217728)) {
    if ($window_pos_set_by_api$0$off0 | $301 ^ 1 | $356 ^ 1) break;
    $1196 = +HEAPF32[$217 + 12 >> 2];
    $1199 = +HEAPF32[$217 + 16 >> 2];
    HEAPF32[$$byval_copy2 >> 2] = $1196 + -1.0;
    HEAPF32[$$byval_copy2 + 4 >> 2] = $1199 + -1.0;
    HEAPF32[$$byval_copy2 + 8 >> 2] = $1196 + 1.0;
    HEAPF32[$$byval_copy2 + 12 >> 2] = $1199 + 1.0;
    $1206 = $217 + 12 | 0;
    __ZL22FindBestPopupWindowPosRK6ImVec2S1_PiRK6ImRect($5, $1206, $217 + 28 | 0, $217 + 140 | 0, $$byval_copy2);
    $1209 = $5;
    $1214 = HEAP32[$1209 + 4 >> 2] | 0;
    $1215 = $1206;
    HEAP32[$1215 >> 2] = HEAP32[$1209 >> 2];
    HEAP32[$1215 + 4 >> 2] = $1214;
    break;
   }
   if (!$window_pos_set_by_api$0$off0) ___assert_fail(124902, 124187, 3813, 124686);
   HEAPF32[$$byval_copy2 >> 2] = 3402823466385288598117041.0e14;
   $1124 = $$byval_copy2 + 4 | 0;
   HEAPF32[$1124 >> 2] = 3402823466385288598117041.0e14;
   $1125 = $$byval_copy2 + 8 | 0;
   HEAPF32[$1125 >> 2] = -3402823466385288598117041.0e14;
   $1126 = $$byval_copy2 + 12 | 0;
   HEAPF32[$1126 >> 2] = -3402823466385288598117041.0e14;
   if (!(HEAP8[$294 + 242 >> 0] | 0)) {
    $1171 = +HEAPF32[$294 + 20 >> 2];
    $1173 = +HEAPF32[37995];
    $storemerge = 3402823466385288598117041.0e14;
    $storemerge550 = $1171 + +HEAPF32[$294 + 28 >> 2] - $1173 - +HEAPF32[$294 + 100 >> 2];
    $storemerge551 = -3402823466385288598117041.0e14;
    $storemerge552 = $1171 + $1173;
   } else {
    $1131 = +HEAPF32[$294 + 24 >> 2];
    $1133 = HEAP32[$294 + 8 >> 2] | 0;
    if (!($1133 & 1)) {
     $$pn = +HEAPF32[38188] * +HEAPF32[$294 + 568 >> 2] + +HEAPF32[37993] * 2.0;
     $1156 = +HEAPF32[38188] * +HEAPF32[$294 + 568 >> 2] + +HEAPF32[37993] * 2.0;
    } else {
     $$pn = 0.0;
     $1156 = 0.0;
    }
    if (!($1133 & 1024)) $1169 = 0.0; else $1169 = +HEAPF32[38188] * +HEAPF32[$294 + 568 >> 2] + +HEAPF32[37993] * 2.0;
    $storemerge = $1131 + $1156 + $1169;
    $storemerge550 = 3402823466385288598117041.0e14;
    $storemerge551 = $1131 + $$pn;
    $storemerge552 = -3402823466385288598117041.0e14;
   }
   HEAPF32[$$byval_copy2 >> 2] = $storemerge552;
   HEAPF32[$1124 >> 2] = $storemerge551;
   HEAPF32[$1125 >> 2] = $storemerge550;
   HEAPF32[$1126 >> 2] = $storemerge;
   $1182 = $217 + 12 | 0;
   __ZL22FindBestPopupWindowPosRK6ImVec2S1_PiRK6ImRect($4, $1182, $217 + 28 | 0, $217 + 140 | 0, $$byval_copy2);
   $1185 = $4;
   $1190 = HEAP32[$1185 + 4 >> 2] | 0;
   $1191 = $1182;
   HEAP32[$1191 >> 2] = HEAP32[$1185 >> 2];
   HEAP32[$1191 + 4 >> 2] = $1190;
  } else {
   $1082 = (+HEAPF32[$fullscreen_rect >> 2] + +HEAPF32[$fullscreen_rect + 8 >> 2]) * .5 - +HEAPF32[$217 + 36 >> 2] * .5;
   $1083 = (+HEAPF32[$fullscreen_rect + 4 >> 2] + +HEAPF32[$fullscreen_rect + 12 >> 2]) * .5 - +HEAPF32[$217 + 40 >> 2] * .5;
   $$idx204$val = +HEAPF32[38010];
   $$idx205$val = +HEAPF32[38011];
   $1085 = $$idx204$val >= $1082 ? $$idx204$val : $1082;
   $1087 = $$idx205$val >= $1083 ? $$idx205$val : $1083;
   $1089 = HEAP32[38201] | 0;
   HEAP8[$1089 + 114 >> 0] = 1;
   $$phi$trans$insert$i$i = $1089 + 148 | 0;
   HEAP32[$$phi$trans$insert$i$i >> 2] = HEAP32[$$phi$trans$insert$i$i >> 2] & -15;
   HEAP8[$1089 + 160 >> 0] = 0;
   $1093 = $1089 + 20 | 0;
   $1094 = +HEAPF32[$1093 >> 2];
   $1095 = $1089 + 24 | 0;
   $1096 = +HEAPF32[$1095 >> 2];
   $1098 = +$1085;
   $1099 = +$1087;
   $1100 = $1089 + 12 | 0;
   HEAPF32[$1100 >> 2] = $1098;
   HEAPF32[$1100 + 4 >> 2] = $1099;
   $1105 = +(~~$1085 | 0);
   $1107 = +(~~$1087 | 0);
   HEAPF32[$1093 >> 2] = $1105;
   HEAPF32[$1095 >> 2] = $1107;
   $1108 = $1105 - $1094;
   $1109 = $1107 - $1096;
   $1110 = $1089 + 164 | 0;
   HEAPF32[$1110 >> 2] = $1108 + +HEAPF32[$1110 >> 2];
   $1113 = $1089 + 168 | 0;
   HEAPF32[$1113 >> 2] = $1109 + +HEAPF32[$1113 >> 2];
   $1116 = $1089 + 188 | 0;
   HEAPF32[$1116 >> 2] = $1108 + +HEAPF32[$1116 >> 2];
   $1119 = $1089 + 192 | 0;
   HEAPF32[$1119 >> 2] = $1109 + +HEAPF32[$1119 >> 2];
  } while (0);
  if (!($window_pos_set_by_api$0$off0 | $834 ^ 1)) {
   $1219 = 147084;
   $1220 = +HEAPF32[$1219 >> 2];
   $1222 = 147088;
   $1223 = +HEAPF32[$1222 >> 2];
   HEAPF32[$$byval_copy2 >> 2] = $1220 + -16.0;
   HEAPF32[$$byval_copy2 + 4 >> 2] = $1223 + -8.0;
   HEAPF32[$$byval_copy2 + 8 >> 2] = $1220 + 24.0;
   HEAPF32[$$byval_copy2 + 12 >> 2] = $1223 + 24.0;
   $1230 = $217 + 12 | 0;
   $1232 = $217 + 140 | 0;
   __ZL22FindBestPopupWindowPosRK6ImVec2S1_PiRK6ImRect($6, $1219, $217 + 28 | 0, $1232, $$byval_copy2);
   $1233 = $6;
   $1238 = HEAP32[$1233 + 4 >> 2] | 0;
   $1239 = $1230;
   HEAP32[$1239 >> 2] = HEAP32[$1233 >> 2];
   HEAP32[$1239 + 4 >> 2] = $1238;
   if ((HEAP32[$1232 >> 2] | 0) == -1) {
    $1246 = +HEAPF32[$1222 >> 2] + 2.0;
    HEAPF32[$1230 >> 2] = +HEAPF32[$1219 >> 2] + 2.0;
    HEAPF32[$217 + 16 >> 2] = $1246;
   }
  }
  $1249 = HEAP32[$217 + 68 >> 2] | 0;
  if ((HEAP32[38211] | 0) == ($1249 | 0)) HEAP8[152852] = 1;
  do if ((HEAP32[38211] | 0) == ($1249 | 0)) {
   if (!(HEAP8[147092] | 0)) {
    HEAP32[38211] = 0;
    HEAP8[152854] = 0;
    HEAP8[152853] = 1;
    HEAP32[38214] = 0;
    HEAP32[38215] = 0;
    break;
   }
   do if (!($$1 & 4)) {
    $$idx183$val = +HEAPF32[36923];
    $1262 = $217 + 12 | 0;
    HEAPF32[$1262 >> 2] = +HEAPF32[36922] + +HEAPF32[$1262 >> 2];
    $1265 = $217 + 16 | 0;
    HEAPF32[$1265 >> 2] = $$idx183$val + +HEAPF32[$1265 >> 2];
    if ($$1 & 256 | 0) break;
    $1270 = 152876;
    if (!(+HEAPF32[$1270 >> 2] <= 0.0)) break;
    HEAP32[$1270 >> 2] = HEAP32[36727];
   } while (0);
   $1276 = HEAP32[38215] | 0;
   if (!$1276) ___assert_fail(124924, 124187, 3848, 124686); else {
    __ZN5ImGui11FocusWindowEP11ImGuiWindow($1276);
    break;
   }
  } while (0);
  do if (!(($$1 & 17825792 | 0) != 0 | $window_pos_set_by_api$0$off0)) {
   if ((HEAP32[$217 + 128 >> 2] | 0) >= 1) break;
   if ((HEAP32[$217 + 132 >> 2] | 0) >= 1) break;
   $1291 = 146896;
   if (!(+HEAPF32[$1291 >> 2] > 0.0)) break;
   $1294 = 146900;
   if (!(+HEAPF32[$1294 >> 2] > 0.0)) break;
   $$idx200$val = +HEAPF32[38008];
   $$idx201$val = +HEAPF32[38009];
   $$idx202$val = +HEAPF32[38010];
   $$idx203$val = +HEAPF32[38011];
   $1298 = $$idx200$val >= $$idx202$val ? $$idx200$val : $$idx202$val;
   $1300 = $$idx201$val >= $$idx203$val ? $$idx201$val : $$idx203$val;
   $$idx164 = $217 + 12 | 0;
   $$idx165 = $217 + 16 | 0;
   $$idx166$val = +HEAPF32[$217 + 28 >> 2];
   $$idx167$val = +HEAPF32[$217 + 32 >> 2];
   $1301 = +HEAPF32[$$idx164 >> 2] + $$idx166$val;
   $1302 = +HEAPF32[$$idx165 >> 2] + $$idx167$val;
   $1307 = ($1301 >= $1298 ? $1301 : $1298) - $$idx166$val;
   $1308 = ($1302 >= $1300 ? $1302 : $1300) - $$idx167$val;
   HEAPF32[$$idx164 >> 2] = $1307;
   HEAPF32[$$idx165 >> 2] = $1308;
   $1309 = +HEAPF32[$1291 >> 2] - $1298;
   $1310 = +HEAPF32[$1294 >> 2] - $1300;
   HEAPF32[$$idx164 >> 2] = $1307 < $1309 ? $1307 : $1309;
   HEAPF32[$$idx165 >> 2] = $1308 < $1310 ? $1308 : $1310;
  } while (0);
  $1318 = +(~~+HEAPF32[$217 + 12 >> 2] | 0);
  $1322 = +(~~+HEAPF32[$217 + 16 >> 2] | 0);
  $1323 = $217 + 20 | 0;
  HEAPF32[$1323 >> 2] = $1318;
  $1324 = $217 + 24 | 0;
  HEAPF32[$1324 >> 2] = $1322;
  $1325 = $217 + 28 | 0;
  $1326 = +HEAPF32[$1325 >> 2];
  $1328 = ($$1 & 64 | 0) == 0;
  $1329 = (HEAPF32[tempDoublePtr >> 2] = $1318, HEAP32[tempDoublePtr >> 2] | 0);
  $1330 = (HEAPF32[tempDoublePtr >> 2] = $1322, HEAP32[tempDoublePtr >> 2] | 0);
  if ($1328 & (($834 | !($1326 > 0.0)) ^ 1)) $$sink570$in$in = $1326 * .6499999761581421; else $$sink570$in$in = +HEAPF32[38187] * 16.0;
  $1335 = $217 + 472 | 0;
  HEAPF32[$1335 >> 2] = +(~~$$sink570$in$in | 0);
  $1336 = $217 + 600 | 0;
  $1337 = HEAP32[$1336 >> 2] | 0;
  do if (($1337 | 0) == 2147483647) $1346 = 2147483647; else {
   $1340 = HEAP32[$217 + 584 >> 2] | 0;
   if (($1340 | 0) == -1) {
    $1346 = 2147483647;
    break;
   }
   $1342 = $1340 + 1 | 0;
   $1346 = ($1342 + $1337 | 0) % ($1342 | 0) | 0;
  } while (0);
  HEAP32[$217 + 592 >> 2] = $1346;
  $1347 = $217 + 604 | 0;
  $1348 = HEAP32[$1347 >> 2] | 0;
  $$pre600 = $217 + 588 | 0;
  do if (($1348 | 0) == 2147483647) $1356 = 2147483647; else {
   $1350 = HEAP32[$$pre600 >> 2] | 0;
   if (($1350 | 0) == -1) {
    $1356 = 2147483647;
    break;
   }
   $1352 = $1350 + 1 | 0;
   $1356 = ($1352 + $1348 | 0) % ($1352 | 0) | 0;
  } while (0);
  HEAP32[$217 + 596 >> 2] = $1356;
  HEAP32[$$pre600 >> 2] = -1;
  HEAP32[$217 + 584 >> 2] = -1;
  HEAP32[$1347 >> 2] = 2147483647;
  HEAP32[$1336 >> 2] = 2147483647;
  $1358 = $217 + 80 | 0;
  $1359 = +HEAPF32[$1358 >> 2];
  if ($1359 < 3402823466385288598117041.0e14) {
   HEAPF32[$217 + 72 >> 2] = $1359;
   HEAPF32[$1358 >> 2] = 3402823466385288598117041.0e14;
  }
  $1362 = $217 + 84 | 0;
  $1363 = +HEAPF32[$1362 >> 2];
  if ($1363 < 3402823466385288598117041.0e14) {
   $1366 = +HEAPF32[$217 + 92 >> 2];
   if (!(HEAP32[$221 >> 2] & 1)) $1381 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $1381 = 0.0;
   $1386 = $1363 - (1.0 - $1366) * $1381 - $1366 * +HEAPF32[$217 + 40 >> 2];
   $1387 = $217 + 76 | 0;
   HEAPF32[$1387 >> 2] = $1386;
   HEAPF32[$1362 >> 2] = 3402823466385288598117041.0e14;
   $$idx193$pre$phiZZ2D = $1387;
   $$idx193$val = $1386;
  } else {
   $$idx193$phi$trans$insert = $217 + 76 | 0;
   $$idx193$pre$phiZZ2D = $$idx193$phi$trans$insert;
   $$idx193$val = +HEAPF32[$$idx193$phi$trans$insert >> 2];
  }
  $$idx192 = $217 + 72 | 0;
  $$idx192$val = +HEAPF32[$$idx192 >> 2];
  $1389 = $$idx192$val >= 0.0 ? $$idx192$val : 0.0;
  $1391 = $$idx193$val >= 0.0 ? $$idx193$val : 0.0;
  HEAPF32[$$idx192 >> 2] = $1389;
  HEAPF32[$$idx193$pre$phiZZ2D >> 2] = $1391;
  do if (!(HEAP8[$875 >> 0] | 0)) {
   if (HEAP8[$217 + 116 >> 0] | 0) break;
   $1399 = +HEAPF32[$$idx176 >> 2] - +HEAPF32[$217 + 36 >> 2] + +HEAPF32[$217 + 100 >> 2];
   $1400 = +HEAPF32[$815 >> 2] - +HEAPF32[$217 + 40 >> 2] + +HEAPF32[$217 + 104 >> 2];
   $1402 = $1399 <= 0.0 ? 0.0 : $1399;
   $1404 = $1400 <= 0.0 ? 0.0 : $1400;
   HEAPF32[$$idx192 >> 2] = $1389 < $1402 ? $1389 : $1402;
   HEAPF32[$$idx193$pre$phiZZ2D >> 2] = $1391 < $1404 ? $1391 : $1404;
  } while (0);
  do if ($1062) {
   $1410 = HEAP32[38229] | 0;
   do if (!$1410) $$1$i = 0; else {
    if (($1410 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
    $1417 = HEAP32[(HEAP32[38231] | 0) + (($1410 + -1 | 0) * 24 | 0) + 4 >> 2] | 0;
    if ($1417 | 0) if (HEAP32[$1417 + 8 >> 2] & 67108864 | 0) {
     $$1$i = $1417;
     break;
    }
    $$1$i = 0;
   } while (0);
   if (($217 | 0) != ($$1$i | 0)) {
    $1468 = $1318;
    $1482 = $1322;
    $1491 = $1329;
    $1493 = $1330;
    break;
   }
   $1429 = +HEAPF32[38182];
   $1431 = +HEAPF32[38183];
   $1433 = +HEAPF32[38184];
   $1439 = +HEAPF32[38185] * (+HEAPF32[38262] * +HEAPF32[37984]);
   __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi(HEAP32[$513 >> 2] | 0, $fullscreen_rect, $fullscreen_rect + 8 | 0, ($1431 < 0.0 ? 0 : ~~(($1431 > 1.0 ? 1.0 : $1431) * 255.0 + .5) << 8) | ($1429 < 0.0 ? 0 : ~~(($1429 > 1.0 ? 1.0 : $1429) * 255.0 + .5)) | ($1433 < 0.0 ? 0 : ~~(($1433 > 1.0 ? 1.0 : $1433) * 255.0 + .5) << 16) | ($1439 < 0.0 ? 0 : ~~(($1439 > 1.0 ? 1.0 : $1439) * 255.0 + .5) << 24), 0.0, 15);
   $$pre582 = +HEAPF32[$1323 >> 2];
   $$pre583 = +HEAPF32[$1324 >> 2];
   $1463 = (HEAPF32[tempDoublePtr >> 2] = $$pre582, HEAP32[tempDoublePtr >> 2] | 0);
   $1468 = $$pre582;
   $1482 = $$pre583;
   $1491 = $1463;
   $1493 = (HEAPF32[tempDoublePtr >> 2] = $$pre583, HEAP32[tempDoublePtr >> 2] | 0);
  } else {
   $1468 = $1318;
   $1482 = $1322;
   $1491 = $1329;
   $1493 = $1330;
  } while (0);
  $1465 = $217 + 36 | 0;
  $1467 = $1468 + +HEAPF32[$1465 >> 2];
  if (!(HEAP32[$221 >> 2] & 1)) $1483 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $1483 = 0.0;
  $1481 = $1482 + $1483;
  $1484 = (HEAPF32[tempDoublePtr >> 2] = $1467, HEAP32[tempDoublePtr >> 2] | 0);
  $1485 = (HEAPF32[tempDoublePtr >> 2] = $1481, HEAP32[tempDoublePtr >> 2] | 0);
  $1488 = +HEAPF32[($591 ? 151964 : 151956) >> 2];
  do if (!(HEAP8[$875 >> 0] | 0)) {
   $1530 = +HEAPF32[38187];
   $1531 = $1530 * 1.350000023841858;
   $1534 = $1488 + 1.0 + $1530 * .20000000298023224;
   $1536 = $1531 >= $1534 ? $1531 : $1534;
   do if ($1328) {
    if ((HEAP32[$217 + 128 >> 2] | 0) >= 1) {
     $resize_col$0 = 0;
     $title_bar_rect3$sroa$0$0 = $1491;
     $title_bar_rect3$sroa$12$0 = $1484;
     $title_bar_rect3$sroa$17$0 = $1485;
     $title_bar_rect3$sroa$7$0 = $1493;
     break;
    }
    if (!(($$1 & 2 | 0) == 0 ? (HEAP32[$217 + 132 >> 2] | 0) < 1 : 0)) {
     $resize_col$0 = 0;
     $title_bar_rect3$sroa$0$0 = $1491;
     $title_bar_rect3$sroa$12$0 = $1484;
     $title_bar_rect3$sroa$17$0 = $1485;
     $title_bar_rect3$sroa$7$0 = $1493;
     break;
    }
    $1546 = $1468 + +HEAPF32[$1325 >> 2];
    $1549 = $1482 + +HEAPF32[$217 + 32 >> 2];
    $1550 = $1536 * .75;
    HEAPF32[$$byval_copy2 >> 2] = $1546 - $1550;
    HEAPF32[$$byval_copy2 + 4 >> 2] = $1549 - $1550;
    HEAPF32[$$byval_copy2 + 8 >> 2] = $1546;
    HEAPF32[$$byval_copy2 + 12 >> 2] = $1549;
    $1556 = HEAP32[$276 >> 2] | 0;
    if (($1556 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
    $1563 = __Z6ImHashPKvij(124944, 0, HEAP32[(HEAP32[$217 + 432 >> 2] | 0) + ($1556 + -1 << 2) >> 2] | 0) | 0;
    $1564 = 152844;
    $1565 = HEAP32[$1564 >> 2] | 0;
    if (($1565 | 0) == ($1563 | 0)) HEAP8[152852] = 1;
    $1569 = HEAP32[38201] | 0;
    HEAP8[$1569 + 114 >> 0] = 1;
    $1571 = __ZN5ImGui9IsHoveredERK6ImRectjb($$byval_copy2, $1563, 1) | 0;
    do if ($1571) {
     HEAP32[38208] = $1563;
     HEAP8[152836] = 0;
     if (!(HEAP8[147696] | 0)) {
      $1581 = $1565;
      break;
     }
     HEAP32[$1564 >> 2] = $1563;
     HEAP8[152854] = 0;
     HEAP8[152853] = 1;
     HEAP32[38214] = $1569;
     __ZN5ImGui11FocusWindowEP11ImGuiWindow($1569);
     $1581 = HEAP32[$1564 >> 2] | 0;
    } else $1581 = $1565; while (0);
    do if (($1581 | 0) == ($1563 | 0)) {
     if (HEAP8[147092] | 0) {
      $1591 = 32;
      $1626 = 0;
      break;
     }
     HEAP32[38211] = 0;
     HEAP8[152854] = 0;
     HEAP8[152853] = 1;
     HEAP32[38214] = 0;
     label = 315;
    } else label = 315; while (0);
    if ((label | 0) == 315) {
     $1591 = $1571 ? 31 : 30;
     $1626 = 1;
    }
    $1592 = +HEAPF32[152056 + ($1591 << 4) >> 2];
    $1594 = +HEAPF32[152056 + ($1591 << 4) + 4 >> 2];
    $1596 = +HEAPF32[152056 + ($1591 << 4) + 8 >> 2];
    $1601 = +HEAPF32[152056 + ($1591 << 4) + 12 >> 2] * +HEAPF32[37984];
    $1624 = ($1594 < 0.0 ? 0 : ~~(($1594 > 1.0 ? 1.0 : $1594) * 255.0 + .5) << 8) | ($1592 < 0.0 ? 0 : ~~(($1592 > 1.0 ? 1.0 : $1592) * 255.0 + .5)) | ($1596 < 0.0 ? 0 : ~~(($1596 > 1.0 ? 1.0 : $1596) * 255.0 + .5) << 16) | ($1601 < 0.0 ? 0 : ~~(($1601 > 1.0 ? 1.0 : $1601) * 255.0 + .5) << 24);
    if (!($1626 & ($1571 ^ 1))) HEAP32[38290] = 6;
    do if ($1626 | (HEAP32[38206] | 0) != ($217 | 0)) label = 324; else {
     if (!(HEAP8[147764] | 0)) {
      label = 324;
      break;
     }
     HEAPF32[$1465 >> 2] = $size_auto_fit$sroa$0$1$in;
     HEAPF32[$217 + 40 >> 2] = $$sink;
     do if (!($$1 & 256)) {
      $1637 = 152876;
      if (!(+HEAPF32[$1637 >> 2] <= 0.0)) break;
      HEAP32[$1637 >> 2] = HEAP32[36727];
     } while (0);
     HEAP32[38211] = 0;
     HEAP8[152854] = 0;
     HEAP8[152853] = 1;
     HEAP32[38214] = 0;
    } while (0);
    do if ((label | 0) == 324) {
     if ($1626) break;
     $$idx156 = $217 + 36 | 0;
     $$idx157 = $217 + 40 | 0;
     $1646 = +HEAPF32[$$idx156 >> 2] + +HEAPF32[36922];
     $1647 = +HEAPF32[$$idx157 >> 2] + +HEAPF32[36923];
     $$idx186$val = +HEAPF32[37987];
     $$idx187$val = +HEAPF32[37988];
     HEAPF32[$$idx156 >> 2] = $1646 >= $$idx186$val ? $1646 : $$idx186$val;
     HEAPF32[$$idx157 >> 2] = $1647 >= $$idx187$val ? $1647 : $$idx187$val;
     if ($$1 & 256 | 0) break;
     $1654 = 152876;
     if (!(+HEAPF32[$1654 >> 2] <= 0.0)) break;
     HEAP32[$1654 >> 2] = HEAP32[36727];
    } while (0);
    $1661 = $217 + 36 | 0;
    $1663 = HEAP32[$1661 >> 2] | 0;
    $1666 = HEAP32[$1661 + 4 >> 2] | 0;
    $1667 = $217 + 28 | 0;
    HEAP32[$1667 >> 2] = $1663;
    HEAP32[$1667 + 4 >> 2] = $1666;
    if (!(HEAP32[$221 >> 2] & 1)) $1687 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $1687 = 0.0;
    $1688 = $1323;
    $1694 = (HEAPF32[tempDoublePtr >> 2] = +HEAPF32[$1323 >> 2] + (HEAP32[tempDoublePtr >> 2] = $1663, +HEAPF32[tempDoublePtr >> 2]), HEAP32[tempDoublePtr >> 2] | 0);
    $resize_col$0 = $1624;
    $title_bar_rect3$sroa$0$0 = HEAP32[$1688 >> 2] | 0;
    $title_bar_rect3$sroa$12$0 = $1694;
    $title_bar_rect3$sroa$17$0 = (HEAPF32[tempDoublePtr >> 2] = +HEAPF32[$1324 >> 2] + $1687, HEAP32[tempDoublePtr >> 2] | 0);
    $title_bar_rect3$sroa$7$0 = HEAP32[$1688 + 4 >> 2] | 0;
   } else {
    $resize_col$0 = 0;
    $title_bar_rect3$sroa$0$0 = $1491;
    $title_bar_rect3$sroa$12$0 = $1484;
    $title_bar_rect3$sroa$17$0 = $1485;
    $title_bar_rect3$sroa$7$0 = $1493;
   } while (0);
   do if (!($$1 & 16384)) {
    if (!(+HEAPF32[$815 >> 2] > +HEAPF32[$217 + 32 >> 2] + +HEAPF32[37996])) {
     $1709 = 0;
     break;
    }
    $1709 = ($$1 & 8 | 0) == 0;
   } else $1709 = 1; while (0);
   $1707 = $217 + 97 | 0;
   HEAP8[$1707 >> 0] = $1709 & 1;
   do if (!($$1 & 32768)) {
    if (!(($$1 & 8 | 0) == 0 ? +HEAPF32[$799 >> 2] > +HEAPF32[$1325 >> 2] - ($1709 ? +HEAPF32[38004] : 0.0) - +HEAPF32[$217 + 60 >> 2] : 0)) {
     $1728 = 0;
     break;
    }
    $1728 = ($$1 & 2048 | 0) != 0;
   } else $1728 = 1; while (0);
   $1726 = $217 + 96 | 0;
   HEAP8[$1726 >> 0] = $1728 & 1;
   $1734 = $1728 ? +HEAPF32[38004] : 0.0;
   HEAPF32[$217 + 100 >> 2] = $1709 ? +HEAPF32[38004] : 0.0;
   HEAPF32[$217 + 104 >> 2] = $1734;
   $1738 = ($$1 & 128 | 0) != 0;
   $1740 = $217 + 108 | 0;
   HEAPF32[$1740 >> 2] = $1738 ? 1.0 : 0.0;
   if ($$0 > 0.0) {
    $col_idx$0 = $$1 & 25165824 | 0 ? ($$1 & 8388608 | 0 ? 17 : 41) : $301 ? 2 : $295 >>> 20 | 2;
    $1747 = HEAP32[$513 >> 2] | 0;
    $1749 = +HEAPF32[$1324 >> 2] + +HEAPF32[$217 + 32 >> 2];
    HEAPF32[$9 >> 2] = +HEAPF32[$1323 >> 2] + +HEAPF32[$1325 >> 2];
    HEAPF32[$9 + 4 >> 2] = $1749;
    $1752 = +HEAPF32[152056 + ($col_idx$0 << 4) >> 2];
    $1754 = +HEAPF32[152056 + ($col_idx$0 << 4) + 4 >> 2];
    $1756 = +HEAPF32[152056 + ($col_idx$0 << 4) + 8 >> 2];
    $1762 = +HEAPF32[152056 + ($col_idx$0 << 4) + 12 >> 2] * ($$0 * +HEAPF32[37984]);
    __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi($1747, $1323, $9, ($1754 < 0.0 ? 0 : ~~(($1754 > 1.0 ? 1.0 : $1754) * 255.0 + .5) << 8) | ($1752 < 0.0 ? 0 : ~~(($1752 > 1.0 ? 1.0 : $1752) * 255.0 + .5)) | ($1756 < 0.0 ? 0 : ~~(($1756 > 1.0 ? 1.0 : $1756) * 255.0 + .5) << 16) | ($1762 < 0.0 ? 0 : ~~(($1762 > 1.0 ? 1.0 : $1762) * 255.0 + .5) << 24), $1488, 15);
   }
   if (!$705) {
    $1786 = HEAP32[$513 >> 2] | 0;
    HEAP32[$10 >> 2] = $title_bar_rect3$sroa$0$0;
    HEAP32[$10 + 4 >> 2] = $title_bar_rect3$sroa$7$0;
    HEAP32[$11 >> 2] = $title_bar_rect3$sroa$12$0;
    HEAP32[$11 + 4 >> 2] = $title_bar_rect3$sroa$17$0;
    $1790 = HEAP32[38205] | 0;
    if (!$1790) $1797 = 9; else $1797 = (HEAP32[$507 >> 2] | 0) == (HEAP32[$1790 + 580 >> 2] | 0) ? 11 : 9;
    $1798 = +HEAPF32[152056 + ($1797 << 4) >> 2];
    $1800 = +HEAPF32[152056 + ($1797 << 4) + 4 >> 2];
    $1802 = +HEAPF32[152056 + ($1797 << 4) + 8 >> 2];
    $1807 = +HEAPF32[152056 + ($1797 << 4) + 12 >> 2] * +HEAPF32[37984];
    __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi($1786, $10, $11, ($1800 < 0.0 ? 0 : ~~(($1800 > 1.0 ? 1.0 : $1800) * 255.0 + .5) << 8) | ($1798 < 0.0 ? 0 : ~~(($1798 > 1.0 ? 1.0 : $1798) * 255.0 + .5)) | ($1802 < 0.0 ? 0 : ~~(($1802 > 1.0 ? 1.0 : $1802) * 255.0 + .5) << 16) | ($1807 < 0.0 ? 0 : ~~(($1807 > 1.0 ? 1.0 : $1807) * 255.0 + .5) << 24), $1488, 3);
   }
   if ($$1 & 1024 | 0) {
    $1834 = HEAP32[$221 >> 2] | 0;
    if (!($1834 & 1)) $1847 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $1847 = 0.0;
    $1846 = +HEAPF32[$1324 >> 2] + $1847;
    $1849 = +HEAPF32[$217 + 20 >> 2];
    $1851 = $1849 + +HEAPF32[$1465 >> 2];
    if (!($1834 & 1024)) $1864 = 0.0; else $1864 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0;
    $1865 = HEAP32[$513 >> 2] | 0;
    HEAPF32[$12 >> 2] = $1849;
    HEAPF32[$12 + 4 >> 2] = $1846;
    HEAPF32[$13 >> 2] = $1851;
    HEAPF32[$13 + 4 >> 2] = $1846 + $1864;
    $1869 = +HEAPF32[38062];
    $1871 = +HEAPF32[38063];
    $1873 = +HEAPF32[38064];
    $1878 = +HEAPF32[38065] * +HEAPF32[37984];
    __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi($1865, $12, $13, ($1871 < 0.0 ? 0 : ~~(($1871 > 1.0 ? 1.0 : $1871) * 255.0 + .5) << 8) | ($1869 < 0.0 ? 0 : ~~(($1869 > 1.0 ? 1.0 : $1869) * 255.0 + .5)) | ($1873 < 0.0 ? 0 : ~~(($1873 > 1.0 ? 1.0 : $1873) * 255.0 + .5) << 16) | ($1878 < 0.0 ? 0 : ~~(($1878 > 1.0 ? 1.0 : $1878) * 255.0 + .5) << 24), $705 ? $1488 : 0.0, 3);
   }
   $1903 = HEAP16[$1726 >> 1] | 0;
   if (!(($1903 & 255) << 24 >> 24)) $1909 = ($1903 & 65535) >>> 8 & 255; else {
    __ZL9ScrollbarP11ImGuiWindowb($217, 1);
    $1909 = HEAP8[$1707 >> 0] | 0;
   }
   if ($1909 << 24 >> 24) __ZL9ScrollbarP11ImGuiWindowb($217, 0);
   if (!($$1 & 2)) {
    $1916 = +HEAPF32[$217 + 20 >> 2] + +HEAPF32[$1325 >> 2];
    $1919 = +HEAPF32[$1324 >> 2] + +HEAPF32[$217 + 32 >> 2];
    $1920 = HEAP32[$513 >> 2] | 0;
    $1922 = $1916 - $1536;
    $1923 = $1919 - +HEAPF32[$1740 >> 2];
    $1924 = $1920 + 76 | 0;
    $1925 = HEAP32[$1924 >> 2] | 0;
    $1926 = $1920 + 80 | 0;
    do if (($1925 | 0) == (HEAP32[$1926 >> 2] | 0)) {
     $1929 = $1925 + 1 | 0;
     if (!$1925) $1934 = 8; else $1934 = (($1925 | 0) / 2 | 0) + $1925 | 0;
     $1935 = ($1934 | 0) > ($1929 | 0) ? $1934 : $1929;
     if (($1925 | 0) >= ($1935 | 0)) {
      $1956 = $1925;
      break;
     }
     $1938 = 147664;
     HEAP32[$1938 >> 2] = (HEAP32[$1938 >> 2] | 0) + 1;
     $1943 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($1935 << 3) | 0;
     $1944 = $1920 + 84 | 0;
     _memcpy($1943 | 0, HEAP32[$1944 >> 2] | 0, HEAP32[$1924 >> 2] << 3 | 0) | 0;
     $1948 = HEAP32[$1944 >> 2] | 0;
     if ($1948 | 0) {
      $1950 = 147664;
      HEAP32[$1950 >> 2] = (HEAP32[$1950 >> 2] | 0) + -1;
     }
     FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($1948);
     HEAP32[$1944 >> 2] = $1943;
     HEAP32[$1926 >> 2] = $1935;
     $1956 = HEAP32[$1924 >> 2] | 0;
    } else $1956 = $1925; while (0);
    HEAP32[$1924 >> 2] = $1956 + 1;
    $1958 = HEAP32[$1920 + 84 >> 2] | 0;
    HEAPF32[$1958 + ($1956 << 3) >> 2] = $1922;
    HEAPF32[$1958 + ($1956 << 3) + 4 >> 2] = $1923;
    $1961 = HEAP32[$513 >> 2] | 0;
    $1963 = $1916 - +HEAPF32[$1740 >> 2];
    $1964 = $1919 - $1536;
    $1965 = $1961 + 76 | 0;
    $1966 = HEAP32[$1965 >> 2] | 0;
    $1967 = $1961 + 80 | 0;
    do if (($1966 | 0) == (HEAP32[$1967 >> 2] | 0)) {
     $1970 = $1966 + 1 | 0;
     if (!$1966) $1975 = 8; else $1975 = (($1966 | 0) / 2 | 0) + $1966 | 0;
     $1976 = ($1975 | 0) > ($1970 | 0) ? $1975 : $1970;
     if (($1966 | 0) >= ($1976 | 0)) {
      $1997 = $1966;
      break;
     }
     $1979 = 147664;
     HEAP32[$1979 >> 2] = (HEAP32[$1979 >> 2] | 0) + 1;
     $1984 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($1976 << 3) | 0;
     $1985 = $1961 + 84 | 0;
     _memcpy($1984 | 0, HEAP32[$1985 >> 2] | 0, HEAP32[$1965 >> 2] << 3 | 0) | 0;
     $1989 = HEAP32[$1985 >> 2] | 0;
     if ($1989 | 0) {
      $1991 = 147664;
      HEAP32[$1991 >> 2] = (HEAP32[$1991 >> 2] | 0) + -1;
     }
     FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($1989);
     HEAP32[$1985 >> 2] = $1984;
     HEAP32[$1967 >> 2] = $1976;
     $1997 = HEAP32[$1965 >> 2] | 0;
    } else $1997 = $1966; while (0);
    HEAP32[$1965 >> 2] = $1997 + 1;
    $1999 = HEAP32[$1961 + 84 >> 2] | 0;
    HEAPF32[$1999 + ($1997 << 3) >> 2] = $1963;
    HEAPF32[$1999 + ($1997 << 3) + 4 >> 2] = $1964;
    $2002 = HEAP32[$513 >> 2] | 0;
    $2004 = +HEAPF32[$1740 >> 2];
    HEAPF32[$14 >> 2] = $1916 - $1488 - $2004;
    HEAPF32[$14 + 4 >> 2] = $1919 - $1488 - $2004;
    __ZN10ImDrawList13PathArcToFastERK6ImVec2fii($2002, $14, $1488, 0, 3);
    $2009 = HEAP32[$513 >> 2] | 0;
    $2010 = $2009 + 84 | 0;
    __ZN10ImDrawList19AddConvexPolyFilledEPK6ImVec2ijb($2009, HEAP32[$2010 >> 2] | 0, HEAP32[$2009 + 76 >> 2] | 0, $resize_col$0, 1);
    $2014 = $2009 + 76 | 0;
    $2015 = $2009 + 80 | 0;
    $2016 = HEAP32[$2015 >> 2] | 0;
    do if (($2016 | 0) < 0) {
     $2019 = (($2016 | 0) / 2 | 0) + $2016 | 0;
     $2021 = ($2019 | 0) > 0 ? $2019 : 0;
     if (($2016 | 0) >= ($2021 | 0)) break;
     $2024 = 147664;
     HEAP32[$2024 >> 2] = (HEAP32[$2024 >> 2] | 0) + 1;
     $2029 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($2021 << 3) | 0;
     _memcpy($2029 | 0, HEAP32[$2010 >> 2] | 0, HEAP32[$2014 >> 2] << 3 | 0) | 0;
     $2033 = HEAP32[$2010 >> 2] | 0;
     if ($2033 | 0) {
      $2035 = 147664;
      HEAP32[$2035 >> 2] = (HEAP32[$2035 >> 2] | 0) + -1;
     }
     FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($2033);
     HEAP32[$2010 >> 2] = $2029;
     HEAP32[$2015 >> 2] = $2021;
    } while (0);
    HEAP32[$2014 >> 2] = 0;
   }
   if (!$1738) {
    $title_bar_rect3$sroa$17$1 = $title_bar_rect3$sroa$17$0;
    $title_bar_rect3$sroa$7$1 = $title_bar_rect3$sroa$7$0;
    break;
   }
   $2040 = HEAP32[$513 >> 2] | 0;
   $2042 = +HEAPF32[$1324 >> 2] + 1.0;
   HEAPF32[$15 >> 2] = +HEAPF32[$1323 >> 2] + 1.0;
   HEAPF32[$15 + 4 >> 2] = $2042;
   $$idx140 = $217 + 32 | 0;
   $2047 = +HEAPF32[$1324 >> 2] + +HEAPF32[$$idx140 >> 2] + 1.0;
   HEAPF32[$16 >> 2] = +HEAPF32[$1323 >> 2] + +HEAPF32[$1325 >> 2] + 1.0;
   HEAPF32[$16 + 4 >> 2] = $2047;
   $2050 = +HEAPF32[38034];
   $2052 = +HEAPF32[38035];
   $2054 = +HEAPF32[38036];
   $2059 = +HEAPF32[38037] * +HEAPF32[37984];
   __ZN10ImDrawList7AddRectERK6ImVec2S2_jfi($2040, $15, $16, ($2052 < 0.0 ? 0 : ~~(($2052 > 1.0 ? 1.0 : $2052) * 255.0 + .5) << 8) | ($2050 < 0.0 ? 0 : ~~(($2050 > 1.0 ? 1.0 : $2050) * 255.0 + .5)) | ($2054 < 0.0 ? 0 : ~~(($2054 > 1.0 ? 1.0 : $2054) * 255.0 + .5) << 16) | ($2059 < 0.0 ? 0 : ~~(($2059 > 1.0 ? 1.0 : $2059) * 255.0 + .5) << 24), $1488, 15);
   $2083 = HEAP32[$513 >> 2] | 0;
   $2085 = +HEAPF32[$1324 >> 2] + +HEAPF32[$$idx140 >> 2];
   HEAPF32[$17 >> 2] = +HEAPF32[$1323 >> 2] + +HEAPF32[$1325 >> 2];
   HEAPF32[$17 + 4 >> 2] = $2085;
   $2088 = +HEAPF32[38030];
   $2090 = +HEAPF32[38031];
   $2092 = +HEAPF32[38032];
   $2097 = +HEAPF32[38033] * +HEAPF32[37984];
   __ZN10ImDrawList7AddRectERK6ImVec2S2_jfi($2083, $1323, $17, ($2090 < 0.0 ? 0 : ~~(($2090 > 1.0 ? 1.0 : $2090) * 255.0 + .5) << 8) | ($2088 < 0.0 ? 0 : ~~(($2088 > 1.0 ? 1.0 : $2088) * 255.0 + .5)) | ($2092 < 0.0 ? 0 : ~~(($2092 > 1.0 ? 1.0 : $2092) * 255.0 + .5) << 16) | ($2097 < 0.0 ? 0 : ~~(($2097 > 1.0 ? 1.0 : $2097) * 255.0 + .5) << 24), $1488, 15);
   if ($705) {
    $title_bar_rect3$sroa$17$1 = $title_bar_rect3$sroa$17$0;
    $title_bar_rect3$sroa$7$1 = $title_bar_rect3$sroa$7$0;
    break;
   }
   $2121 = HEAP32[$513 >> 2] | 0;
   $2122 = (HEAP32[tempDoublePtr >> 2] = $title_bar_rect3$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]);
   $2125 = (HEAP32[tempDoublePtr >> 2] = $title_bar_rect3$sroa$17$0, +HEAPF32[tempDoublePtr >> 2]) + 0.0;
   HEAPF32[$18 >> 2] = $2122 + 1.0;
   HEAPF32[$18 + 4 >> 2] = $2125;
   HEAPF32[$19 >> 2] = (HEAP32[tempDoublePtr >> 2] = $title_bar_rect3$sroa$12$0, +HEAPF32[tempDoublePtr >> 2]) + -1.0;
   HEAP32[$19 + 4 >> 2] = $title_bar_rect3$sroa$17$0;
   $2131 = +HEAPF32[38030];
   $2133 = +HEAPF32[38031];
   $2135 = +HEAPF32[38032];
   $2140 = +HEAPF32[38033] * +HEAPF32[37984];
   __ZN10ImDrawList7AddLineERK6ImVec2S2_jf($2121, $18, $19, ($2133 < 0.0 ? 0 : ~~(($2133 > 1.0 ? 1.0 : $2133) * 255.0 + .5) << 8) | ($2131 < 0.0 ? 0 : ~~(($2131 > 1.0 ? 1.0 : $2131) * 255.0 + .5)) | ($2135 < 0.0 ? 0 : ~~(($2135 > 1.0 ? 1.0 : $2135) * 255.0 + .5) << 16) | ($2140 < 0.0 ? 0 : ~~(($2140 > 1.0 ? 1.0 : $2140) * 255.0 + .5) << 24), 1.0);
   $title_bar_rect3$sroa$17$1 = $title_bar_rect3$sroa$17$0;
   $title_bar_rect3$sroa$7$1 = $title_bar_rect3$sroa$7$0;
  } else {
   HEAP32[$7 >> 2] = $1491;
   HEAP32[$7 + 4 >> 2] = $1493;
   HEAPF32[$8 >> 2] = $1467;
   HEAPF32[$8 + 4 >> 2] = $1481;
   $1496 = +HEAPF32[38054];
   $1498 = +HEAPF32[38055];
   $1500 = +HEAPF32[38056];
   $1505 = +HEAPF32[38057] * +HEAPF32[37984];
   HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   __ZN5ImGui11RenderFrameE6ImVec2S0_jbf($$byval_copy, $$byval_copy2, ($1498 < 0.0 ? 0 : ~~(($1498 > 1.0 ? 1.0 : $1498) * 255.0 + .5) << 8) | ($1496 < 0.0 ? 0 : ~~(($1496 > 1.0 ? 1.0 : $1496) * 255.0 + .5)) | ($1500 < 0.0 ? 0 : ~~(($1500 > 1.0 ? 1.0 : $1500) * 255.0 + .5) << 16) | ($1505 < 0.0 ? 0 : ~~(($1505 > 1.0 ? 1.0 : $1505) * 255.0 + .5) << 24), 1, $1488);
   $title_bar_rect3$sroa$17$1 = $1485;
   $title_bar_rect3$sroa$7$1 = $1493;
  } while (0);
  $2165 = +HEAPF32[$217 + 60 >> 2];
  $2169 = $2165 + 0.0 - +HEAPF32[$217 + 72 >> 2];
  HEAPF32[$217 + 368 >> 2] = $2169;
  HEAPF32[$217 + 372 >> 2] = 0.0;
  $2173 = HEAP32[$221 >> 2] | 0;
  if (!($2173 & 1)) $2197 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $2197 = 0.0;
  if (!($2173 & 1024)) $2198 = 0.0; else $2198 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0;
  $2204 = $2197 + $2198 + +HEAPF32[$832 >> 2] - +HEAPF32[$$idx193$pre$phiZZ2D >> 2] + +HEAPF32[$1324 >> 2];
  $2205 = $217 + 180 | 0;
  HEAPF32[$2205 >> 2] = $2169 + 0.0 + +HEAPF32[$1323 >> 2];
  HEAPF32[$217 + 184 >> 2] = $2204;
  $2208 = $2205;
  $2210 = HEAP32[$2208 >> 2] | 0;
  $2213 = HEAP32[$2208 + 4 >> 2] | 0;
  $2214 = $217 + 164 | 0;
  HEAP32[$2214 >> 2] = $2210;
  HEAP32[$2214 + 4 >> 2] = $2213;
  $2219 = $217 + 172 | 0;
  HEAP32[$2219 >> 2] = $2210;
  HEAP32[$2219 + 4 >> 2] = $2213;
  $2224 = $217 + 188 | 0;
  HEAP32[$2224 >> 2] = $2210;
  HEAP32[$2224 + 4 >> 2] = $2213;
  $2228 = $217 + 196 | 0;
  HEAP8[$217 + 242 >> 0] = 0;
  $2230 = 151980;
  HEAP32[$2228 >> 2] = 0;
  HEAP32[$2228 + 4 >> 2] = 0;
  HEAP32[$2228 + 8 >> 2] = 0;
  HEAP32[$2228 + 12 >> 2] = 0;
  $2231 = +HEAPF32[$2230 >> 2];
  HEAPF32[$217 + 244 >> 2] = $2165 >= $2231 ? $2165 : $2231;
  $2235 = $217 + 168 | 0;
  HEAPF32[$217 + 212 >> 2] = (HEAP32[tempDoublePtr >> 2] = $2213, +HEAPF32[tempDoublePtr >> 2]) + -9999.0;
  $2239 = $217 + 248 | 0;
  $2240 = $217 + 252 | 0;
  $2241 = HEAP32[$2240 >> 2] | 0;
  do if (($2241 | 0) < 0) {
   $2244 = (($2241 | 0) / 2 | 0) + $2241 | 0;
   $2246 = ($2244 | 0) > 0 ? $2244 : 0;
   if (($2241 | 0) >= ($2246 | 0)) break;
   $2249 = 147664;
   HEAP32[$2249 >> 2] = (HEAP32[$2249 >> 2] | 0) + 1;
   $2254 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($2246 << 2) | 0;
   $2255 = $217 + 256 | 0;
   _memcpy($2254 | 0, HEAP32[$2255 >> 2] | 0, HEAP32[$2239 >> 2] << 2 | 0) | 0;
   $2259 = HEAP32[$2255 >> 2] | 0;
   if ($2259 | 0) {
    $2261 = 147664;
    HEAP32[$2261 >> 2] = (HEAP32[$2261 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($2259);
   HEAP32[$2255 >> 2] = $2254;
   HEAP32[$2240 >> 2] = $2246;
  } while (0);
  HEAP32[$2239 >> 2] = 0;
  HEAP32[$217 + 264 >> 2] = 0;
  HEAP32[$217 + 268 >> 2] = HEAP32[$1335 >> 2];
  HEAPF32[$217 + 272 >> 2] = -1.0;
  HEAP8[$217 + 276 >> 0] = 1;
  HEAP8[$217 + 277 >> 0] = 0;
  $2272 = $217 + 280 | 0;
  $2273 = $217 + 284 | 0;
  $2274 = HEAP32[$2273 >> 2] | 0;
  do if (($2274 | 0) < 0) {
   $2277 = (($2274 | 0) / 2 | 0) + $2274 | 0;
   $2279 = ($2277 | 0) > 0 ? $2277 : 0;
   if (($2274 | 0) >= ($2279 | 0)) break;
   $2282 = 147664;
   HEAP32[$2282 >> 2] = (HEAP32[$2282 >> 2] | 0) + 1;
   $2287 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($2279 << 2) | 0;
   $2288 = $217 + 288 | 0;
   _memcpy($2287 | 0, HEAP32[$2288 >> 2] | 0, HEAP32[$2272 >> 2] << 2 | 0) | 0;
   $2292 = HEAP32[$2288 >> 2] | 0;
   if ($2292 | 0) {
    $2294 = 147664;
    HEAP32[$2294 >> 2] = (HEAP32[$2294 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($2292);
   HEAP32[$2288 >> 2] = $2287;
   HEAP32[$2273 >> 2] = $2279;
  } while (0);
  HEAP32[$2272 >> 2] = 0;
  $2299 = $217 + 292 | 0;
  $2300 = $217 + 296 | 0;
  $2301 = HEAP32[$2300 >> 2] | 0;
  do if (($2301 | 0) < 0) {
   $2304 = (($2301 | 0) / 2 | 0) + $2301 | 0;
   $2306 = ($2304 | 0) > 0 ? $2304 : 0;
   if (($2301 | 0) >= ($2306 | 0)) break;
   $2309 = 147664;
   HEAP32[$2309 >> 2] = (HEAP32[$2309 >> 2] | 0) + 1;
   $2314 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($2306 << 2) | 0;
   $2315 = $217 + 300 | 0;
   _memcpy($2314 | 0, HEAP32[$2315 >> 2] | 0, HEAP32[$2299 >> 2] << 2 | 0) | 0;
   $2319 = HEAP32[$2315 >> 2] | 0;
   if ($2319 | 0) {
    $2321 = 147664;
    HEAP32[$2321 >> 2] = (HEAP32[$2321 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($2319);
   HEAP32[$2315 >> 2] = $2314;
   HEAP32[$2300 >> 2] = $2306;
  } while (0);
  HEAP32[$2299 >> 2] = 0;
  $2326 = $217 + 304 | 0;
  $2327 = $217 + 308 | 0;
  $2328 = HEAP32[$2327 >> 2] | 0;
  do if (($2328 | 0) < 0) {
   $2331 = (($2328 | 0) / 2 | 0) + $2328 | 0;
   $2333 = ($2331 | 0) > 0 ? $2331 : 0;
   if (($2328 | 0) >= ($2333 | 0)) break;
   $2335 = 147664;
   HEAP32[$2335 >> 2] = (HEAP32[$2335 >> 2] | 0) + 1;
   $2340 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($2333) | 0;
   $2341 = $217 + 312 | 0;
   _memcpy($2340 | 0, HEAP32[$2341 >> 2] | 0, HEAP32[$2326 >> 2] | 0) | 0;
   $2344 = HEAP32[$2341 >> 2] | 0;
   if ($2344 | 0) {
    $2346 = 147664;
    HEAP32[$2346 >> 2] = (HEAP32[$2346 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($2344);
   HEAP32[$2341 >> 2] = $2340;
   HEAP32[$2327 >> 2] = $2333;
  } while (0);
  HEAP32[$2326 >> 2] = 0;
  $2351 = $217 + 316 | 0;
  $2352 = $217 + 320 | 0;
  $2353 = HEAP32[$2352 >> 2] | 0;
  do if (($2353 | 0) < 0) {
   $2356 = (($2353 | 0) / 2 | 0) + $2353 | 0;
   $2358 = ($2356 | 0) > 0 ? $2356 : 0;
   if (($2353 | 0) >= ($2358 | 0)) break;
   $2360 = 147664;
   HEAP32[$2360 >> 2] = (HEAP32[$2360 >> 2] | 0) + 1;
   $2365 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($2358) | 0;
   $2366 = $217 + 324 | 0;
   _memcpy($2365 | 0, HEAP32[$2366 >> 2] | 0, HEAP32[$2351 >> 2] | 0) | 0;
   $2369 = HEAP32[$2366 >> 2] | 0;
   if ($2369 | 0) {
    $2371 = 147664;
    HEAP32[$2371 >> 2] = (HEAP32[$2371 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($2369);
   HEAP32[$2366 >> 2] = $2365;
   HEAP32[$2352 >> 2] = $2358;
  } while (0);
  HEAP32[$2351 >> 2] = 0;
  HEAP32[$217 + 340 >> 2] = -2;
  HEAP32[$217 + 376 >> 2] = 0;
  HEAP32[$217 + 380 >> 2] = 1;
  $2379 = HEAP32[$2235 >> 2] | 0;
  HEAP32[$217 + 392 >> 2] = $2379;
  HEAP32[$217 + 400 >> 2] = $2379;
  HEAP32[$217 + 396 >> 2] = $2379;
  HEAP32[$217 + 216 >> 2] = 0;
  HEAP32[$217 + 260 >> 2] = $217 + 556;
  $2386 = $217 + 328 | 0;
  $2387 = $217 + 332 | 0;
  $2388 = HEAP32[$2387 >> 2] | 0;
  do if (($2388 | 0) < 0) {
   $2391 = (($2388 | 0) / 2 | 0) + $2388 | 0;
   $2393 = ($2391 | 0) > 0 ? $2391 : 0;
   if (($2388 | 0) >= ($2393 | 0)) break;
   $2396 = 147664;
   HEAP32[$2396 >> 2] = (HEAP32[$2396 >> 2] | 0) + 1;
   $2401 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($2393 * 36 | 0) | 0;
   $2402 = $217 + 336 | 0;
   _memcpy($2401 | 0, HEAP32[$2402 >> 2] | 0, (HEAP32[$2386 >> 2] | 0) * 36 | 0) | 0;
   $2406 = HEAP32[$2402 >> 2] | 0;
   if ($2406 | 0) {
    $2408 = 147664;
    HEAP32[$2408 >> 2] = (HEAP32[$2408 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($2406);
   HEAP32[$2402 >> 2] = $2401;
   HEAP32[$2387 >> 2] = $2393;
  } while (0);
  HEAP32[$2386 >> 2] = 0;
  $2413 = $217 + 476 | 0;
  if ((HEAP32[$2413 >> 2] | 0) >= 9) ___assert_fail(124970, 124187, 1497, 125013);
  $2416 = HEAP32[$2230 >> 2] | 0;
  HEAP32[$2413 >> 2] = 3;
  HEAPF32[$217 + 488 >> 2] = 0.0;
  $2418 = $217 + 484 | 0;
  HEAPF32[$2418 >> 2] = 0.0;
  $2419 = $217 + 480 | 0;
  HEAP32[$2419 >> 2] = $2416;
  if ($window_was_active$0$off0) $i$01$i = 0; else {
   $2420 = $217 + 524 | 0;
   HEAP32[$2420 >> 2] = 0;
   HEAP32[$2420 + 4 >> 2] = 0;
   HEAP32[$2420 + 8 >> 2] = 0;
   HEAP32[$2420 + 12 >> 2] = 0;
   HEAP32[$2420 + 16 >> 2] = 0;
   HEAP32[$2420 + 20 >> 2] = 0;
   HEAP32[$2420 + 24 >> 2] = 0;
   HEAP32[$2420 + 28 >> 2] = 0;
   $i$01$i = 0;
  }
  do {
   $2422 = $217 + 524 + ($i$01$i << 2) | 0;
   do if (($i$01$i | 0) > 0) {
    if (!(+HEAPF32[$2422 >> 2] > 0.0)) break;
    HEAPF32[$2418 >> 2] = +HEAPF32[$2419 >> 2] + +HEAPF32[$2418 >> 2];
   } while (0);
   HEAPF32[$217 + 492 + ($i$01$i << 2) >> 2] = +(~~+HEAPF32[$2418 >> 2] | 0);
   HEAPF32[$2418 >> 2] = +HEAPF32[$2422 >> 2] + +HEAPF32[$2418 >> 2];
   HEAPF32[$2422 >> 2] = 0.0;
   $i$01$i = $i$01$i + 1 | 0;
  } while (($i$01$i | 0) < (HEAP32[$2413 >> 2] | 0));
  $2438 = $217 + 128 | 0;
  $2439 = HEAP32[$2438 >> 2] | 0;
  if (($2439 | 0) > 0) HEAP32[$2438 >> 2] = $2439 + -1;
  $2442 = $217 + 132 | 0;
  $2443 = HEAP32[$2442 >> 2] | 0;
  if (($2443 | 0) > 0) HEAP32[$2442 >> 2] = $2443 + -1;
  if ($705) $$pre$phi603Z2D = $217 + 20 | 0; else {
   $2446 = ($p_opened | 0) != 0;
   if ($2446) {
    $2448 = HEAP32[38201] | 0;
    HEAP8[$2448 + 114 >> 0] = 1;
    $2451 = HEAP32[$2448 + 424 >> 2] | 0;
    if (($2451 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
    $2458 = __Z6ImHashPKvij(125020, 0, HEAP32[(HEAP32[$2448 + 432 >> 2] | 0) + ($2451 + -1 << 2) >> 2] | 0) | 0;
    $2459 = 152844;
    $2460 = HEAP32[$2459 >> 2] | 0;
    if (($2460 | 0) == ($2458 | 0)) HEAP8[152852] = 1;
    if (!(HEAP32[$2448 + 8 >> 2] & 1)) $2484 = +HEAPF32[38188] * +HEAPF32[$2448 + 568 >> 2] + +HEAPF32[37993] * 2.0 + -4.0; else $2484 = -4.0;
    $2479 = +HEAPF32[$2448 + 24 >> 2];
    $2482 = +HEAPF32[$2448 + 20 >> 2] + +HEAPF32[$2448 + 28 >> 2];
    $2485 = -2.0 - $2484 + $2482;
    $2486 = $2479 + 2.0;
    $2488 = $2482 + -2.0;
    $2489 = $2484 + 2.0 + $2479;
    HEAPF32[$$byval_copy2 >> 2] = $2485;
    HEAPF32[$$byval_copy2 + 4 >> 2] = $2486;
    HEAPF32[$$byval_copy2 + 8 >> 2] = $2488;
    HEAPF32[$$byval_copy2 + 12 >> 2] = $2489;
    $2494 = HEAP32[38201] | 0;
    HEAP8[$2494 + 114 >> 0] = 1;
    $2496 = __ZN5ImGui9IsHoveredERK6ImRectjb($$byval_copy2, $2458, 0) | 0;
    do if ($2496) {
     HEAP32[38208] = $2458;
     HEAP8[152836] = 0;
     if (!(HEAP8[147696] | 0)) {
      $2506 = $2460;
      break;
     }
     HEAP32[$2459 >> 2] = $2458;
     HEAP8[152854] = 0;
     HEAP8[152853] = 1;
     HEAP32[38214] = $2494;
     __ZN5ImGui11FocusWindowEP11ImGuiWindow($2494);
     $2506 = HEAP32[$2459 >> 2] | 0;
    } else $2506 = $2460; while (0);
    do if (($2506 | 0) == ($2458 | 0)) if (!(HEAP8[147092] | 0)) {
     HEAP32[38211] = 0;
     HEAP8[152854] = 0;
     HEAP8[152853] = 1;
     HEAP32[38214] = 0;
     $pressed$3$off0$i$ph$i = $2496;
     label = 438;
     break;
    } else {
     $2515 = $2496 ^ 1;
     if ($2496) {
      $2518 = 35;
      $2883 = $2515;
      $pressed$3$off0$i70$i = 0;
      break;
     } else {
      $2882 = $2515;
      $pressed$3$off0$i71$i = 0;
      label = 440;
      break;
     }
    } else {
     $pressed$3$off0$i$ph$i = 0;
     label = 438;
    } while (0);
    if ((label | 0) == 438) {
     $2882 = $2496 ^ 1;
     $pressed$3$off0$i71$i = $pressed$3$off0$i$ph$i;
     label = 440;
    }
    if ((label | 0) == 440) {
     $2518 = $2496 ? 34 : 33;
     $2883 = $2882;
     $pressed$3$off0$i70$i = $pressed$3$off0$i71$i;
    }
    $2519 = +HEAPF32[152056 + ($2518 << 4) >> 2];
    $2521 = +HEAPF32[152056 + ($2518 << 4) + 4 >> 2];
    $2523 = +HEAPF32[152056 + ($2518 << 4) + 8 >> 2];
    $2528 = +HEAPF32[152056 + ($2518 << 4) + 12 >> 2] * +HEAPF32[37984];
    HEAPF32[$$byval_copy >> 2] = ($2485 + $2488) * .5;
    $2556 = $$byval_copy + 4 | 0;
    HEAPF32[$2556 >> 2] = ($2486 + $2489) * .5;
    $2557 = $2448 + 572 | 0;
    $2559 = $2484 * .5;
    __ZN10ImDrawList15AddCircleFilledERK6ImVec2fji(HEAP32[$2557 >> 2] | 0, $$byval_copy, $2559 <= 2.0 ? 2.0 : $2559, ($2521 < 0.0 ? 0 : ~~(($2521 > 1.0 ? 1.0 : $2521) * 255.0 + .5) << 8) | ($2519 < 0.0 ? 0 : ~~(($2519 > 1.0 ? 1.0 : $2519) * 255.0 + .5)) | ($2523 < 0.0 ? 0 : ~~(($2523 > 1.0 ? 1.0 : $2523) * 255.0 + .5) << 16) | ($2528 < 0.0 ? 0 : ~~(($2528 > 1.0 ? 1.0 : $2528) * 255.0 + .5) << 24), 16);
    $2563 = $2559 * .707099974155426 + -1.0;
    if (!$2883) {
     $2564 = HEAP32[$2557 >> 2] | 0;
     $center$idx12$val$i = +HEAPF32[$$byval_copy >> 2];
     $center$idx13$val$i = +HEAPF32[$2556 >> 2];
     HEAPF32[$0 >> 2] = $2563 + $center$idx12$val$i;
     HEAPF32[$0 + 4 >> 2] = $2563 + $center$idx13$val$i;
     HEAPF32[$1 >> 2] = $center$idx12$val$i - $2563;
     HEAPF32[$1 + 4 >> 2] = $center$idx13$val$i - $2563;
     $2572 = +HEAPF32[38014];
     $2574 = +HEAPF32[38015];
     $2576 = +HEAPF32[38016];
     $2581 = +HEAPF32[38017] * +HEAPF32[37984];
     __ZN10ImDrawList7AddLineERK6ImVec2S2_jf($2564, $0, $1, ($2574 < 0.0 ? 0 : ~~(($2574 > 1.0 ? 1.0 : $2574) * 255.0 + .5) << 8) | ($2572 < 0.0 ? 0 : ~~(($2572 > 1.0 ? 1.0 : $2572) * 255.0 + .5)) | ($2576 < 0.0 ? 0 : ~~(($2576 > 1.0 ? 1.0 : $2576) * 255.0 + .5) << 16) | ($2581 < 0.0 ? 0 : ~~(($2581 > 1.0 ? 1.0 : $2581) * 255.0 + .5) << 24), 1.0);
     $2605 = HEAP32[$2557 >> 2] | 0;
     $center$idx4$val$i = +HEAPF32[$$byval_copy >> 2];
     $center$idx5$val$i = +HEAPF32[$2556 >> 2];
     HEAPF32[$2 >> 2] = $2563 + $center$idx4$val$i;
     HEAPF32[$2 + 4 >> 2] = $center$idx5$val$i - $2563;
     HEAPF32[$3 >> 2] = $center$idx4$val$i - $2563;
     HEAPF32[$3 + 4 >> 2] = $2563 + $center$idx5$val$i;
     $2613 = +HEAPF32[38014];
     $2615 = +HEAPF32[38015];
     $2617 = +HEAPF32[38016];
     $2622 = +HEAPF32[38017] * +HEAPF32[37984];
     __ZN10ImDrawList7AddLineERK6ImVec2S2_jf($2605, $2, $3, ($2615 < 0.0 ? 0 : ~~(($2615 > 1.0 ? 1.0 : $2615) * 255.0 + .5) << 8) | ($2613 < 0.0 ? 0 : ~~(($2613 > 1.0 ? 1.0 : $2613) * 255.0 + .5)) | ($2617 < 0.0 ? 0 : ~~(($2617 > 1.0 ? 1.0 : $2617) * 255.0 + .5) << 16) | ($2622 < 0.0 ? 0 : ~~(($2622 > 1.0 ? 1.0 : $2622) * 255.0 + .5) << 24), 1.0);
    }
    if ($pressed$3$off0$i70$i) HEAP8[$p_opened >> 0] = 0;
   }
   do if (($name | 0) == (-1 | 0)) {
    $2660 = +HEAPF32[38187];
    label = 453;
   } else {
    $text_display_end$03$i$i = $name;
    L635 : while (1) {
     switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
     case 0:
      {
       $text_display_end$0$i = $text_display_end$03$i$i;
       break L635;
       break;
      }
     case 35:
      {
       $2650 = $text_display_end$03$i$i + 1 | 0;
       if ((HEAP8[$2650 >> 0] | 0) == 35) {
        $text_display_end$0$i = $text_display_end$03$i$i;
        break L635;
       } else $$pre$phi$i$iZ2D = $2650;
       break;
      }
     default:
      $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
     }
     if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
      $text_display_end$0$i = -1;
      break;
     } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
    }
    $2655 = HEAP32[38186] | 0;
    $2657 = +HEAPF32[38187];
    if (($text_display_end$0$i | 0) == ($name | 0)) {
     $2660 = $2657;
     label = 453;
     break;
    }
    __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($$byval_copy2, $2655, $2657, 3402823466385288598117041.0e14, -1.0, $name, $text_display_end$0$i, 0);
    $2661 = +HEAPF32[$$byval_copy2 >> 2];
    if ($2661 > 0.0) {
     $2665 = $2661 - $2657 / +HEAPF32[$2655 >> 2];
     HEAPF32[$$byval_copy2 >> 2] = $2665;
     $2667 = $2665;
    } else $2667 = $2661;
    HEAPF32[$$byval_copy2 >> 2] = +(~~($2667 + .949999988079071) | 0);
    $2670 = $$byval_copy2;
    $2675 = HEAP32[$2670 + 4 >> 2] | 0;
    $2676 = $$byval_copy;
    HEAP32[$2676 >> 2] = HEAP32[$2670 >> 2];
    HEAP32[$2676 + 4 >> 2] = $2675;
    $2884 = (HEAP32[tempDoublePtr >> 2] = $2675, +HEAPF32[tempDoublePtr >> 2]);
   } while (0);
   if ((label | 0) == 453) {
    HEAPF32[$$byval_copy >> 2] = 0.0;
    HEAPF32[$$byval_copy + 4 >> 2] = $2660;
    $2884 = $2660;
   }
   if ($707) {
    $$idx120 = 151972;
    $2682 = +HEAPF32[$1324 >> 2] + +HEAPF32[$$idx120 >> 2];
    HEAPF32[$20 >> 2] = +HEAPF32[$1323 >> 2] + +HEAPF32[37992];
    HEAPF32[$20 + 4 >> 2] = $2682;
    $2685 = (HEAP8[$875 >> 0] | 0) == 0;
    HEAP32[$$byval_copy2 >> 2] = HEAP32[$20 >> 2];
    HEAP32[$$byval_copy2 + 4 >> 2] = HEAP32[$20 + 4 >> 2];
    __ZN5ImGui22RenderCollapseTriangleE6ImVec2bfb($$byval_copy2, $2685, 1.0, 1);
    $$idx116$pre$phiZZ2D = $$idx120;
    $2693 = +HEAPF32[$$byval_copy + 4 >> 2];
   } else {
    $$idx116$pre$phiZZ2D = 151972;
    $2693 = $2884;
   }
   $$idx115$val = +HEAPF32[37992];
   $$idx116$val = +HEAPF32[$$idx116$pre$phiZZ2D >> 2];
   $2686 = +HEAPF32[$1323 >> 2] + $$idx115$val;
   $2687 = +HEAPF32[$1324 >> 2] + $$idx116$val;
   HEAPF32[$$byval_copy2 >> 2] = $2686;
   HEAPF32[$$byval_copy2 + 4 >> 2] = $2687;
   $2694 = +HEAPF32[$1325 >> 2] - $$idx115$val + +HEAPF32[$1323 >> 2];
   $2695 = $$idx116$val * 2.0 + $2693 + +HEAPF32[$1324 >> 2];
   HEAPF32[$0 >> 2] = $2694;
   HEAPF32[$0 + 4 >> 2] = $2695;
   $2697 = $217 + 20 | 0;
   if ($2446) {
    $2701 = (HEAP32[tempDoublePtr >> 2] = $title_bar_rect3$sroa$17$1, +HEAPF32[tempDoublePtr >> 2]);
    $2706 = $2701 - (HEAP32[tempDoublePtr >> 2] = $title_bar_rect3$sroa$7$1, +HEAPF32[tempDoublePtr >> 2]) + -3.0;
   } else $2706 = $$idx115$val;
   HEAPF32[$1 >> 2] = +HEAPF32[$2697 >> 2] + +HEAPF32[$1325 >> 2] - $2706;
   HEAPF32[$1 + 4 >> 2] = $2695;
   $$lobit = $706 >>> 5;
   $2709 = HEAP32[37990] | 0;
   if (($$lobit | 0) != 1) HEAPF32[$$byval_copy2 >> 2] = $2686 + (+HEAPF32[38187] + +HEAPF32[37997]);
   if (($2709 & 2 | 0) == 0 ? $2446 : ($$lobit | 0) != 1) HEAPF32[$0 >> 2] = $2694 - (+HEAPF32[38187] + +HEAPF32[37997]);
   __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($$byval_copy2, $0, $name, 0, $$byval_copy, $2709, 0, $1);
   $$pre$phi603Z2D = $2697;
  }
  $2726 = +HEAPF32[$$pre$phi603Z2D >> 2];
  $2727 = +HEAPF32[$1324 >> 2];
  $2729 = $2726 + +HEAPF32[$1325 >> 2];
  $2732 = $2727 + +HEAPF32[$217 + 32 >> 2];
  $2733 = $217 + 452 | 0;
  HEAPF32[$2733 >> 2] = $2726;
  $2734 = $217 + 456 | 0;
  HEAPF32[$2734 >> 2] = $2727;
  $2735 = $217 + 460 | 0;
  HEAPF32[$2735 >> 2] = $2729;
  $2736 = $217 + 464 | 0;
  HEAPF32[$2736 >> 2] = $2732;
  $2737 = +HEAPF32[$515 >> 2];
  if ($2726 < $2737) HEAPF32[$2733 >> 2] = $2737;
  $2739 = +HEAPF32[$516 >> 2];
  if ($2727 < $2739) HEAPF32[$2734 >> 2] = $2739;
  $2742 = +HEAPF32[$217 + 444 >> 2];
  if ($2729 > $2742) HEAPF32[$2735 >> 2] = $2742;
  $2744 = +HEAPF32[$518 >> 2];
  if ($2732 > $2744) HEAPF32[$2736 >> 2] = $2744;
  $$pre$phi605Z2D = $1324;
 } else $$pre$phi605Z2D = $217 + 24 | 0;
 $2746 = +HEAPF32[$$pre$phi605Z2D >> 2];
 $2747 = HEAP32[$221 >> 2] | 0;
 if (!($2747 & 1)) $2760 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $2760 = 0.0;
 $2762 = +HEAPF32[$217 + 20 >> 2];
 $2764 = +HEAPF32[$217 + 108 >> 2];
 $2768 = +HEAPF32[$217 + 60 >> 2] * .5;
 $2770 = $2764 >= $2768 ? $2764 : $2768;
 $2771 = $2762 + .5 + $2770;
 if (!($2747 & 1024)) $2784 = 0.0; else $2784 = +HEAPF32[38188] * +HEAPF32[$217 + 568 >> 2] + +HEAPF32[37993] * 2.0;
 $2786 = $2764 + ($2746 + $2760 + $2784 + .5);
 $2793 = $2762 + +HEAPF32[$217 + 28 >> 2] - +HEAPF32[$217 + 100 >> 2] - $2770;
 $2800 = $2746 + +HEAPF32[$217 + 32 >> 2] - $2764 - +HEAPF32[$217 + 104 >> 2];
 $2802 = HEAP32[38201] | 0;
 HEAP8[$2802 + 114 >> 0] = 1;
 $2804 = $2802 + 436 | 0;
 $2805 = +HEAPF32[$2804 >> 2];
 $cr$sroa$0$0$i$v = $2771 < $2805 ? $2805 : $2771;
 $2807 = $2802 + 440 | 0;
 $2808 = +HEAPF32[$2807 >> 2];
 $cr$sroa$9$0$i$v = $2786 < $2808 ? $2808 : $2786;
 $2810 = $2802 + 444 | 0;
 $2811 = +HEAPF32[$2810 >> 2];
 $cr$sroa$15$0$i$v = $2793 > $2811 ? $2811 : $2793;
 $2813 = $2802 + 448 | 0;
 $2814 = +HEAPF32[$2813 >> 2];
 $cr$sroa$22$1$i$v = $2800 > $2814 ? $2814 : $2800;
 $2817 = $cr$sroa$0$0$i$v >= $cr$sroa$15$0$i$v ? $cr$sroa$0$0$i$v : $cr$sroa$15$0$i$v;
 $2819 = $cr$sroa$9$0$i$v >= $cr$sroa$22$1$i$v ? $cr$sroa$9$0$i$v : $cr$sroa$22$1$i$v;
 if (!($cr$sroa$0$0$i$v <= $2817) | !($cr$sroa$9$0$i$v <= $2819)) ___assert_fail(124844, 124187, 2338, 124889);
 HEAPF32[$2804 >> 2] = $cr$sroa$0$0$i$v;
 HEAPF32[$2807 >> 2] = $cr$sroa$9$0$i$v;
 HEAPF32[$2810 >> 2] = $2817;
 HEAPF32[$2813 >> 2] = $2819;
 $2823 = HEAP32[$2802 + 572 >> 2] | 0;
 HEAPF32[$$byval_copy2 >> 2] = $cr$sroa$0$0$i$v;
 HEAPF32[$$byval_copy2 + 4 >> 2] = $cr$sroa$9$0$i$v;
 HEAPF32[$$byval_copy2 + 8 >> 2] = $2817;
 HEAPF32[$$byval_copy2 + 12 >> 2] = $2819;
 __ZN10ImDrawList12PushClipRectERK6ImVec4($2823, $$byval_copy2);
 if ($220) HEAP8[$217 + 114 >> 0] = 0;
 $2828 = $217 + 120 | 0;
 HEAP32[$2828 >> 2] = (HEAP32[$2828 >> 2] | 0) + 1;
 do if (!$296) {
  if (!($$1 & 1)) ___assert_fail(125042, 124187, 4100, 124686);
  if ($293) $2836 = HEAP8[$294 + 115 >> 0] | 0; else $2836 = 0;
  $2835 = $217 + 115 | 0;
  HEAP8[$2835 >> 0] = $2836;
  do if (!($$1 & 64)) {
   if ((HEAP32[$217 + 128 >> 2] | 0) >= 1) {
    $2861 = $2836;
    break;
   }
   if ((HEAP32[$217 + 132 >> 2] | 0) >= 1) {
    $2861 = $2836;
    break;
   }
   if (!(+HEAPF32[$217 + 452 >> 2] >= +HEAPF32[$217 + 460 >> 2])) $2856 = +HEAPF32[$217 + 456 >> 2] >= +HEAPF32[$217 + 464 >> 2]; else $2856 = 1;
   $2859 = ($2836 & 255 | $2856 & 1) & 255;
   HEAP8[$2835 >> 0] = $2859;
   $2861 = $2859;
  } else $2861 = $2836; while (0);
  if (!($2861 << 24 >> 24)) break;
  HEAP8[$217 + 112 >> 0] = 0;
 } while (0);
 if (+HEAPF32[37984] <= 0.0) HEAP8[$217 + 112 >> 0] = 0;
 do if (!(HEAP8[$217 + 115 >> 0] | 0)) {
  if (!(HEAP8[$217 + 112 >> 0] | 0)) break; else $2880 = 0;
  $2879 = $217 + 116 | 0;
  HEAP8[$2879 >> 0] = $2880;
  $2881 = $2880 << 24 >> 24 == 0;
  STACKTOP = sp;
  return $2881 | 0;
 } while (0);
 if ((HEAP32[$217 + 128 >> 2] | 0) >= 1) {
  $2880 = 0;
  $2879 = $217 + 116 | 0;
  HEAP8[$2879 >> 0] = $2880;
  $2881 = $2880 << 24 >> 24 == 0;
  STACKTOP = sp;
  return $2881 | 0;
 }
 $2880 = (HEAP32[$217 + 132 >> 2] | 0) < 1 & 1;
 $2879 = $217 + 116 | 0;
 HEAP8[$2879 >> 0] = $2880;
 $2881 = $2880 << 24 >> 24 == 0;
 STACKTOP = sp;
 return $2881 | 0;
}
function __ZN4yakc3z8010do_op_0xcbEh($this, $op) {
 $this = $this | 0;
 $op = $op | 0;
 var $$0 = 0, $1 = 0, $1002 = 0, $1009 = 0, $102 = 0, $1020 = 0, $1027 = 0, $1038 = 0, $1040 = 0, $1052 = 0, $1058 = 0, $1064 = 0, $1070 = 0, $1078 = 0, $108 = 0, $1084 = 0, $1091 = 0, $1097 = 0, $110 = 0, $1105 = 0, $1111 = 0, $1118 = 0, $1129 = 0, $113 = 0, $1136 = 0, $1147 = 0, $1149 = 0, $1161 = 0, $1167 = 0, $1173 = 0, $1179 = 0, $1187 = 0, $1193 = 0, $1200 = 0, $1206 = 0, $1214 = 0, $1220 = 0, $1227 = 0, $1238 = 0, $124 = 0, $1245 = 0, $1256 = 0, $1258 = 0, $127 = 0, $1270 = 0, $1276 = 0, $1282 = 0, $1288 = 0, $1296 = 0, $13 = 0, $1302 = 0, $1309 = 0, $1315 = 0, $1323 = 0, $1329 = 0, $1336 = 0, $1347 = 0, $1354 = 0, $1365 = 0, $1367 = 0, $1379 = 0, $138 = 0, $1385 = 0, $1391 = 0, $1397 = 0, $14 = 0, $140 = 0, $1405 = 0, $1411 = 0, $1418 = 0, $1424 = 0, $143 = 0, $1432 = 0, $1438 = 0, $1445 = 0, $1456 = 0, $1463 = 0, $1474 = 0, $1476 = 0, $1488 = 0, $1494 = 0, $1500 = 0, $1506 = 0, $1514 = 0, $1520 = 0, $1527 = 0, $153 = 0, $1533 = 0, $1541 = 0, $1547 = 0, $155 = 0, $1554 = 0, $1565 = 0, $1572 = 0, $158 = 0, $1583 = 0, $1585 = 0, $1597 = 0, $1603 = 0, $1609 = 0, $1615 = 0, $1623 = 0, $1629 = 0, $1636 = 0, $1642 = 0, $1650 = 0, $1656 = 0, $1663 = 0, $1674 = 0, $1681 = 0, $169 = 0, $1692 = 0, $1694 = 0, $17 = 0, $1706 = 0, $1707 = 0, $171 = 0, $1713 = 0, $1719 = 0, $1720 = 0, $1726 = 0, $1734 = 0, $1735 = 0, $174 = 0, $1741 = 0, $1748 = 0, $1749 = 0, $1755 = 0, $1763 = 0, $1764 = 0, $1770 = 0, $1777 = 0, $1790 = 0, $1797 = 0, $1798 = 0, $1809 = 0, $1811 = 0, $1812 = 0, $1823 = 0, $1833 = 0, $1838 = 0, $184 = 0, $1844 = 0, $1849 = 0, $1856 = 0, $1858 = 0, $186 = 0, $1861 = 0, $1870 = 0, $1875 = 0, $1885 = 0, $189 = 0, $1890 = 0, $1896 = 0, $1901 = 0, $1908 = 0, $1910 = 0, $1913 = 0, $1922 = 0, $1927 = 0, $1937 = 0, $1942 = 0, $1948 = 0, $1953 = 0, $1960 = 0, $1962 = 0, $1965 = 0, $1974 = 0, $1979 = 0, $1989 = 0, $1994 = 0, $2 = 0, $2000 = 0, $2005 = 0, $201 = 0, $2012 = 0, $2014 = 0, $2017 = 0, $2026 = 0, $203 = 0, $2031 = 0, $2041 = 0, $2046 = 0, $2052 = 0, $2057 = 0, $206 = 0, $2064 = 0, $2066 = 0, $2069 = 0, $2078 = 0, $208 = 0, $2083 = 0, $2093 = 0, $2098 = 0, $2104 = 0, $2109 = 0, $211 = 0, $2116 = 0, $2118 = 0, $2121 = 0, $2130 = 0, $2135 = 0, $2145 = 0, $2150 = 0, $2156 = 0, $2161 = 0, $2168 = 0, $2170 = 0, $2173 = 0, $2182 = 0, $2187 = 0, $2197 = 0, $2202 = 0, $2208 = 0, $2213 = 0, $2220 = 0, $2222 = 0, $2225 = 0, $2234 = 0, $2239 = 0, $224 = 0, $2249 = 0, $225 = 0, $2254 = 0, $2260 = 0, $2265 = 0, $227 = 0, $2272 = 0, $2274 = 0, $2277 = 0, $2286 = 0, $2291 = 0, $230 = 0, $2301 = 0, $2306 = 0, $2312 = 0, $2317 = 0, $2324 = 0, $2326 = 0, $2329 = 0, $2338 = 0, $2343 = 0, $2353 = 0, $2358 = 0, $2364 = 0, $2369 = 0, $2376 = 0, $2378 = 0, $2381 = 0, $239 = 0, $2390 = 0, $2395 = 0, $240 = 0, $2405 = 0, $2410 = 0, $2416 = 0, $2421 = 0, $2428 = 0, $243 = 0, $2430 = 0, $2433 = 0, $2442 = 0, $2447 = 0, $2457 = 0, $2462 = 0, $2468 = 0, $247 = 0, $2473 = 0, $2480 = 0, $2482 = 0, $2485 = 0, $2494 = 0, $2499 = 0, $25 = 0, $2509 = 0, $2514 = 0, $2520 = 0, $2525 = 0, $253 = 0, $2532 = 0, $2534 = 0, $2537 = 0, $2546 = 0, $2551 = 0, $256 = 0, $2561 = 0, $2566 = 0, $2572 = 0, $2577 = 0, $2584 = 0, $2586 = 0, $2589 = 0, $2598 = 0, $26 = 0, $260 = 0, $2603 = 0, $2613 = 0, $2618 = 0, $2624 = 0, $2629 = 0, $2636 = 0, $2638 = 0, $2641 = 0, $2650 = 0, $267 = 0, $268 = 0, $27 = 0, $271 = 0, $275 = 0, $281 = 0, $282 = 0, $285 = 0, $289 = 0, $296 = 0, $297 = 0, $3 = 0, $30 = 0, $300 = 0, $304 = 0, $310 = 0, $311 = 0, $318 = 0, $325 = 0, $328 = 0, $331 = 0, $332 = 0, $338 = 0, $347 = 0, $348 = 0, $349 = 0, $355 = 0, $361 = 0, $363 = 0, $365 = 0, $369 = 0, $37 = 0, $377 = 0, $379 = 0, $38 = 0, $383 = 0, $39 = 0, $391 = 0, $393 = 0, $395 = 0, $399 = 0, $406 = 0, $408 = 0, $410 = 0, $414 = 0, $42 = 0, $422 = 0, $424 = 0, $426 = 0, $430 = 0, $437 = 0, $438 = 0, $444 = 0, $452 = 0, $455 = 0, $458 = 0, $460 = 0, $465 = 0, $475 = 0, $476 = 0, $478 = 0, $483 = 0, $490 = 0, $492 = 0, $493 = 0, $50 = 0, $503 = 0, $504 = 0, $51 = 0, $514 = 0, $516 = 0, $517 = 0, $52 = 0, $526 = 0, $528 = 0, $529 = 0, $539 = 0, $541 = 0, $542 = 0, $55 = 0, $551 = 0, $553 = 0, $554 = 0, $565 = 0, $567 = 0, $570 = 0, $572 = 0, $573 = 0, $585 = 0, $586 = 0, $588 = 0, $589 = 0, $597 = 0, $599 = 0, $6 = 0, $602 = 0, $612 = 0, $615 = 0, $62 = 0, $625 = 0, $627 = 0, $63 = 0, $630 = 0, $639 = 0, $64 = 0, $641 = 0, $644 = 0, $654 = 0, $656 = 0, $659 = 0, $668 = 0, $67 = 0, $670 = 0, $673 = 0, $684 = 0, $686 = 0, $689 = 0, $691 = 0, $694 = 0, $706 = 0, $707 = 0, $709 = 0, $712 = 0, $720 = 0, $722 = 0, $724 = 0, $734 = 0, $736 = 0, $746 = 0, $748 = 0, $750 = 0, $759 = 0, $76 = 0, $761 = 0, $763 = 0, $773 = 0, $775 = 0, $777 = 0, $78 = 0, $786 = 0, $788 = 0, $790 = 0, $801 = 0, $803 = 0, $806 = 0, $808 = 0, $81 = 0, $810 = 0, $82 = 0, $822 = 0, $823 = 0, $825 = 0, $827 = 0, $83 = 0, $835 = 0, $836 = 0, $838 = 0, $847 = 0, $849 = 0, $859 = 0, $86 = 0, $860 = 0, $862 = 0, $871 = 0, $872 = 0, $874 = 0, $884 = 0, $885 = 0, $887 = 0, $896 = 0, $897 = 0, $899 = 0, $910 = 0, $912 = 0, $915 = 0, $916 = 0, $918 = 0, $930 = 0, $931 = 0, $932 = 0, $934 = 0, $943 = 0, $949 = 0, $955 = 0, $96 = 0, $961 = 0, $969 = 0, $97 = 0, $975 = 0, $98 = 0, $982 = 0, $988 = 0, $99 = 0, $996 = 0;
 do switch ($op & 255 | 0) {
 case 0:
  {
   $1 = $this + 1 | 0;
   $2 = HEAP8[$1 >> 0] | 0;
   $3 = $2 & 255;
   $6 = $3 << 1 | $3 >>> 7;
   HEAP8[$this + 6 >> 0] = HEAP8[($6 & 255) + ($this + 31) >> 0] | ($2 & 255) >>> 7;
   HEAP8[$1 >> 0] = $6;
   $$0 = 8;
   return $$0 | 0;
  }
 case 1:
  {
   $13 = HEAP8[$this >> 0] | 0;
   $14 = $13 & 255;
   $17 = $14 << 1 | $14 >>> 7;
   HEAP8[$this + 6 >> 0] = HEAP8[($17 & 255) + ($this + 31) >> 0] | ($13 & 255) >>> 7;
   HEAP8[$this >> 0] = $17;
   $$0 = 8;
   return $$0 | 0;
  }
 case 2:
  {
   $25 = $this + 2 + 1 | 0;
   $26 = HEAP8[$25 >> 0] | 0;
   $27 = $26 & 255;
   $30 = $27 << 1 | $27 >>> 7;
   HEAP8[$this + 6 >> 0] = HEAP8[($30 & 255) + ($this + 31) >> 0] | ($26 & 255) >>> 7;
   HEAP8[$25 >> 0] = $30;
   $$0 = 8;
   return $$0 | 0;
  }
 case 3:
  {
   $37 = $this + 2 | 0;
   $38 = HEAP8[$37 >> 0] | 0;
   $39 = $38 & 255;
   $42 = $39 << 1 | $39 >>> 7;
   HEAP8[$this + 6 >> 0] = HEAP8[($42 & 255) + ($this + 31) >> 0] | ($38 & 255) >>> 7;
   HEAP8[$37 >> 0] = $42;
   $$0 = 8;
   return $$0 | 0;
  }
 case 4:
  {
   $50 = $this + 4 + 1 | 0;
   $51 = HEAP8[$50 >> 0] | 0;
   $52 = $51 & 255;
   $55 = $52 << 1 | $52 >>> 7;
   HEAP8[$this + 6 >> 0] = HEAP8[($55 & 255) + ($this + 31) >> 0] | ($51 & 255) >>> 7;
   HEAP8[$50 >> 0] = $55;
   $$0 = 8;
   return $$0 | 0;
  }
 case 5:
  {
   $62 = $this + 4 | 0;
   $63 = HEAP8[$62 >> 0] | 0;
   $64 = $63 & 255;
   $67 = $64 << 1 | $64 >>> 7;
   HEAP8[$this + 6 >> 0] = HEAP8[($67 & 255) + ($this + 31) >> 0] | ($63 & 255) >>> 7;
   HEAP8[$62 >> 0] = $67;
   $$0 = 8;
   return $$0 | 0;
  }
 case 6:
  {
   $76 = HEAPU16[$this + 4 >> 1] | 0;
   $78 = $76 >>> 11;
   $81 = (HEAP32[$this + 1312 + ($78 << 3) >> 2] | 0) + ($76 & 2047) | 0;
   $82 = HEAP8[$81 >> 0] | 0;
   $83 = $82 & 255;
   $86 = $83 << 1 | $83 >>> 7;
   HEAP8[$this + 6 >> 0] = HEAP8[($86 & 255) + ($this + 31) >> 0] | ($82 & 255) >>> 7;
   if (!(HEAP8[$this + 1312 + ($78 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$81 >> 0] = $86;
   $$0 = 15;
   return $$0 | 0;
  }
 case 7:
  {
   $96 = $this + 6 | 0;
   $97 = $96 + 1 | 0;
   $98 = HEAP8[$97 >> 0] | 0;
   $99 = $98 & 255;
   $102 = $99 << 1 | $99 >>> 7;
   HEAP8[$96 >> 0] = HEAP8[($102 & 255) + ($this + 31) >> 0] | ($98 & 255) >>> 7;
   HEAP8[$97 >> 0] = $102;
   $$0 = 8;
   return $$0 | 0;
  }
 case 8:
  {
   $108 = $this + 1 | 0;
   $110 = HEAPU8[$108 >> 0] | 0;
   $113 = $110 >>> 1 | $110 << 7;
   HEAP8[$this + 6 >> 0] = HEAPU8[($113 & 255) + ($this + 31) >> 0] | $110 & 1;
   HEAP8[$108 >> 0] = $113;
   $$0 = 8;
   return $$0 | 0;
  }
 case 9:
  {
   $124 = HEAPU8[$this >> 0] | 0;
   $127 = $124 >>> 1 | $124 << 7;
   HEAP8[$this + 6 >> 0] = HEAPU8[($127 & 255) + ($this + 31) >> 0] | $124 & 1;
   HEAP8[$this >> 0] = $127;
   $$0 = 8;
   return $$0 | 0;
  }
 case 10:
  {
   $138 = $this + 2 + 1 | 0;
   $140 = HEAPU8[$138 >> 0] | 0;
   $143 = $140 >>> 1 | $140 << 7;
   HEAP8[$this + 6 >> 0] = HEAPU8[($143 & 255) + ($this + 31) >> 0] | $140 & 1;
   HEAP8[$138 >> 0] = $143;
   $$0 = 8;
   return $$0 | 0;
  }
 case 11:
  {
   $153 = $this + 2 | 0;
   $155 = HEAPU8[$153 >> 0] | 0;
   $158 = $155 >>> 1 | $155 << 7;
   HEAP8[$this + 6 >> 0] = HEAPU8[($158 & 255) + ($this + 31) >> 0] | $155 & 1;
   HEAP8[$153 >> 0] = $158;
   $$0 = 8;
   return $$0 | 0;
  }
 case 12:
  {
   $169 = $this + 4 + 1 | 0;
   $171 = HEAPU8[$169 >> 0] | 0;
   $174 = $171 >>> 1 | $171 << 7;
   HEAP8[$this + 6 >> 0] = HEAPU8[($174 & 255) + ($this + 31) >> 0] | $171 & 1;
   HEAP8[$169 >> 0] = $174;
   $$0 = 8;
   return $$0 | 0;
  }
 case 13:
  {
   $184 = $this + 4 | 0;
   $186 = HEAPU8[$184 >> 0] | 0;
   $189 = $186 >>> 1 | $186 << 7;
   HEAP8[$this + 6 >> 0] = HEAPU8[($189 & 255) + ($this + 31) >> 0] | $186 & 1;
   HEAP8[$184 >> 0] = $189;
   $$0 = 8;
   return $$0 | 0;
  }
 case 14:
  {
   $201 = HEAPU16[$this + 4 >> 1] | 0;
   $203 = $201 >>> 11;
   $206 = (HEAP32[$this + 1312 + ($203 << 3) >> 2] | 0) + ($201 & 2047) | 0;
   $208 = HEAPU8[$206 >> 0] | 0;
   $211 = $208 >>> 1 | $208 << 7;
   HEAP8[$this + 6 >> 0] = HEAPU8[($211 & 255) + ($this + 31) >> 0] | $208 & 1;
   if (!(HEAP8[$this + 1312 + ($203 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$206 >> 0] = $211;
   $$0 = 15;
   return $$0 | 0;
  }
 case 15:
  {
   $224 = $this + 6 | 0;
   $225 = $224 + 1 | 0;
   $227 = HEAPU8[$225 >> 0] | 0;
   $230 = $227 >>> 1 | $227 << 7;
   HEAP8[$224 >> 0] = HEAPU8[($230 & 255) + ($this + 31) >> 0] | $227 & 1;
   HEAP8[$225 >> 0] = $230;
   $$0 = 8;
   return $$0 | 0;
  }
 case 16:
  {
   $239 = $this + 1 | 0;
   $240 = HEAP8[$239 >> 0] | 0;
   $243 = $this + 6 | 0;
   $247 = HEAPU8[$243 >> 0] & 1 | ($240 & 255) << 1;
   HEAP8[$243 >> 0] = HEAP8[($247 & 255) + ($this + 31) >> 0] | ($240 & 255) >>> 7;
   HEAP8[$239 >> 0] = $247;
   $$0 = 8;
   return $$0 | 0;
  }
 case 17:
  {
   $253 = HEAP8[$this >> 0] | 0;
   $256 = $this + 6 | 0;
   $260 = HEAPU8[$256 >> 0] & 1 | ($253 & 255) << 1;
   HEAP8[$256 >> 0] = HEAP8[($260 & 255) + ($this + 31) >> 0] | ($253 & 255) >>> 7;
   HEAP8[$this >> 0] = $260;
   $$0 = 8;
   return $$0 | 0;
  }
 case 18:
  {
   $267 = $this + 2 + 1 | 0;
   $268 = HEAP8[$267 >> 0] | 0;
   $271 = $this + 6 | 0;
   $275 = HEAPU8[$271 >> 0] & 1 | ($268 & 255) << 1;
   HEAP8[$271 >> 0] = HEAP8[($275 & 255) + ($this + 31) >> 0] | ($268 & 255) >>> 7;
   HEAP8[$267 >> 0] = $275;
   $$0 = 8;
   return $$0 | 0;
  }
 case 19:
  {
   $281 = $this + 2 | 0;
   $282 = HEAP8[$281 >> 0] | 0;
   $285 = $this + 6 | 0;
   $289 = HEAPU8[$285 >> 0] & 1 | ($282 & 255) << 1;
   HEAP8[$285 >> 0] = HEAP8[($289 & 255) + ($this + 31) >> 0] | ($282 & 255) >>> 7;
   HEAP8[$281 >> 0] = $289;
   $$0 = 8;
   return $$0 | 0;
  }
 case 20:
  {
   $296 = $this + 4 + 1 | 0;
   $297 = HEAP8[$296 >> 0] | 0;
   $300 = $this + 6 | 0;
   $304 = HEAPU8[$300 >> 0] & 1 | ($297 & 255) << 1;
   HEAP8[$300 >> 0] = HEAP8[($304 & 255) + ($this + 31) >> 0] | ($297 & 255) >>> 7;
   HEAP8[$296 >> 0] = $304;
   $$0 = 8;
   return $$0 | 0;
  }
 case 21:
  {
   $310 = $this + 4 | 0;
   $311 = HEAP32[$310 >> 2] | 0;
   $318 = $311 >>> 16 & 1 | $311 << 1 & 510;
   HEAP8[$this + 6 >> 0] = HEAP8[($318 & 255) + ($this + 31) >> 0] | ($311 & 255) >>> 7;
   HEAP8[$310 >> 0] = $318;
   $$0 = 8;
   return $$0 | 0;
  }
 case 22:
  {
   $325 = HEAP32[$this + 4 >> 2] | 0;
   $328 = $325 >>> 11 & 31;
   $331 = (HEAP32[$this + 1312 + ($328 << 3) >> 2] | 0) + ($325 & 2047) | 0;
   $332 = HEAP8[$331 >> 0] | 0;
   $338 = $325 >>> 16 & 1 | ($332 & 255) << 1;
   HEAP8[$this + 6 >> 0] = HEAP8[($338 & 255) + ($this + 31) >> 0] | ($332 & 255) >>> 7;
   if (!(HEAP8[$this + 1312 + ($328 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$331 >> 0] = $338;
   $$0 = 15;
   return $$0 | 0;
  }
 case 23:
  {
   $347 = $this + 6 | 0;
   $348 = $347 + 1 | 0;
   $349 = HEAP8[$348 >> 0] | 0;
   $355 = HEAPU8[$347 >> 0] & 1 | ($349 & 255) << 1;
   HEAP8[$347 >> 0] = HEAP8[($355 & 255) + ($this + 31) >> 0] | ($349 & 255) >>> 7;
   HEAP8[$348 >> 0] = $355;
   $$0 = 8;
   return $$0 | 0;
  }
 case 24:
  {
   $361 = $this + 1 | 0;
   $363 = HEAPU8[$361 >> 0] | 0;
   $365 = $this + 6 | 0;
   $369 = HEAPU8[$365 >> 0] << 7 | $363 >>> 1;
   HEAP8[$365 >> 0] = HEAPU8[($369 & 255) + ($this + 31) >> 0] | $363 & 1;
   HEAP8[$361 >> 0] = $369;
   $$0 = 8;
   return $$0 | 0;
  }
 case 25:
  {
   $377 = HEAPU8[$this >> 0] | 0;
   $379 = $this + 6 | 0;
   $383 = HEAPU8[$379 >> 0] << 7 | $377 >>> 1;
   HEAP8[$379 >> 0] = HEAPU8[($383 & 255) + ($this + 31) >> 0] | $377 & 1;
   HEAP8[$this >> 0] = $383;
   $$0 = 8;
   return $$0 | 0;
  }
 case 26:
  {
   $391 = $this + 2 + 1 | 0;
   $393 = HEAPU8[$391 >> 0] | 0;
   $395 = $this + 6 | 0;
   $399 = HEAPU8[$395 >> 0] << 7 | $393 >>> 1;
   HEAP8[$395 >> 0] = HEAPU8[($399 & 255) + ($this + 31) >> 0] | $393 & 1;
   HEAP8[$391 >> 0] = $399;
   $$0 = 8;
   return $$0 | 0;
  }
 case 27:
  {
   $406 = $this + 2 | 0;
   $408 = HEAPU8[$406 >> 0] | 0;
   $410 = $this + 6 | 0;
   $414 = HEAPU8[$410 >> 0] << 7 | $408 >>> 1;
   HEAP8[$410 >> 0] = HEAPU8[($414 & 255) + ($this + 31) >> 0] | $408 & 1;
   HEAP8[$406 >> 0] = $414;
   $$0 = 8;
   return $$0 | 0;
  }
 case 28:
  {
   $422 = $this + 4 + 1 | 0;
   $424 = HEAPU8[$422 >> 0] | 0;
   $426 = $this + 6 | 0;
   $430 = HEAPU8[$426 >> 0] << 7 | $424 >>> 1;
   HEAP8[$426 >> 0] = HEAPU8[($430 & 255) + ($this + 31) >> 0] | $424 & 1;
   HEAP8[$422 >> 0] = $430;
   $$0 = 8;
   return $$0 | 0;
  }
 case 29:
  {
   $437 = $this + 4 | 0;
   $438 = HEAP32[$437 >> 2] | 0;
   $444 = $438 >>> 9 & 32640 | $438 >>> 1 & 127;
   HEAP8[$this + 6 >> 0] = HEAPU8[($444 & 255) + ($this + 31) >> 0] | $438 & 1;
   HEAP8[$437 >> 0] = $444;
   $$0 = 8;
   return $$0 | 0;
  }
 case 30:
  {
   $452 = HEAP32[$this + 4 >> 2] | 0;
   $455 = $452 >>> 11 & 31;
   $458 = (HEAP32[$this + 1312 + ($455 << 3) >> 2] | 0) + ($452 & 2047) | 0;
   $460 = HEAPU8[$458 >> 0] | 0;
   $465 = $452 >>> 9 & 32640 | $460 >>> 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($465 & 255) + ($this + 31) >> 0] | $460 & 1;
   if (!(HEAP8[$this + 1312 + ($455 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$458 >> 0] = $465;
   $$0 = 15;
   return $$0 | 0;
  }
 case 31:
  {
   $475 = $this + 6 | 0;
   $476 = $475 + 1 | 0;
   $478 = HEAPU8[$476 >> 0] | 0;
   $483 = HEAPU8[$475 >> 0] << 7 | $478 >>> 1;
   HEAP8[$475 >> 0] = HEAPU8[($483 & 255) + ($this + 31) >> 0] | $478 & 1;
   HEAP8[$476 >> 0] = $483;
   $$0 = 8;
   return $$0 | 0;
  }
 case 32:
  {
   $490 = $this + 1 | 0;
   $492 = HEAPU8[$490 >> 0] | 0;
   $493 = $492 << 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($493 & 254) + ($this + 31) >> 0] | $492 >>> 7;
   HEAP8[$490 >> 0] = $493;
   $$0 = 8;
   return $$0 | 0;
  }
 case 33:
  {
   $503 = HEAPU8[$this >> 0] | 0;
   $504 = $503 << 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($504 & 254) + ($this + 31) >> 0] | $503 >>> 7;
   HEAP8[$this >> 0] = $504;
   $$0 = 8;
   return $$0 | 0;
  }
 case 34:
  {
   $514 = $this + 2 + 1 | 0;
   $516 = HEAPU8[$514 >> 0] | 0;
   $517 = $516 << 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($517 & 254) + ($this + 31) >> 0] | $516 >>> 7;
   HEAP8[$514 >> 0] = $517;
   $$0 = 8;
   return $$0 | 0;
  }
 case 35:
  {
   $526 = $this + 2 | 0;
   $528 = HEAPU8[$526 >> 0] | 0;
   $529 = $528 << 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($529 & 254) + ($this + 31) >> 0] | $528 >>> 7;
   HEAP8[$526 >> 0] = $529;
   $$0 = 8;
   return $$0 | 0;
  }
 case 36:
  {
   $539 = $this + 4 + 1 | 0;
   $541 = HEAPU8[$539 >> 0] | 0;
   $542 = $541 << 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($542 & 254) + ($this + 31) >> 0] | $541 >>> 7;
   HEAP8[$539 >> 0] = $542;
   $$0 = 8;
   return $$0 | 0;
  }
 case 37:
  {
   $551 = $this + 4 | 0;
   $553 = HEAPU8[$551 >> 0] | 0;
   $554 = $553 << 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($554 & 254) + ($this + 31) >> 0] | $553 >>> 7;
   HEAP8[$551 >> 0] = $554;
   $$0 = 8;
   return $$0 | 0;
  }
 case 38:
  {
   $565 = HEAPU16[$this + 4 >> 1] | 0;
   $567 = $565 >>> 11;
   $570 = (HEAP32[$this + 1312 + ($567 << 3) >> 2] | 0) + ($565 & 2047) | 0;
   $572 = HEAPU8[$570 >> 0] | 0;
   $573 = $572 << 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($573 & 254) + ($this + 31) >> 0] | $572 >>> 7;
   if (!(HEAP8[$this + 1312 + ($567 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$570 >> 0] = $573;
   $$0 = 15;
   return $$0 | 0;
  }
 case 39:
  {
   $585 = $this + 6 | 0;
   $586 = $585 + 1 | 0;
   $588 = HEAPU8[$586 >> 0] | 0;
   $589 = $588 << 1;
   HEAP8[$585 >> 0] = HEAPU8[($589 & 254) + ($this + 31) >> 0] | $588 >>> 7;
   HEAP8[$586 >> 0] = $589;
   $$0 = 8;
   return $$0 | 0;
  }
 case 40:
  {
   $597 = $this + 1 | 0;
   $599 = HEAPU8[$597 >> 0] | 0;
   $602 = $599 >>> 1 | $599 & 128;
   HEAP8[$this + 6 >> 0] = HEAPU8[$this + 31 + $602 >> 0] | $599 & 1;
   HEAP8[$597 >> 0] = $602;
   $$0 = 8;
   return $$0 | 0;
  }
 case 41:
  {
   $612 = HEAPU8[$this >> 0] | 0;
   $615 = $612 >>> 1 | $612 & 128;
   HEAP8[$this + 6 >> 0] = HEAPU8[$this + 31 + $615 >> 0] | $612 & 1;
   HEAP8[$this >> 0] = $615;
   $$0 = 8;
   return $$0 | 0;
  }
 case 42:
  {
   $625 = $this + 2 + 1 | 0;
   $627 = HEAPU8[$625 >> 0] | 0;
   $630 = $627 >>> 1 | $627 & 128;
   HEAP8[$this + 6 >> 0] = HEAPU8[$this + 31 + $630 >> 0] | $627 & 1;
   HEAP8[$625 >> 0] = $630;
   $$0 = 8;
   return $$0 | 0;
  }
 case 43:
  {
   $639 = $this + 2 | 0;
   $641 = HEAPU8[$639 >> 0] | 0;
   $644 = $641 >>> 1 | $641 & 128;
   HEAP8[$this + 6 >> 0] = HEAPU8[$this + 31 + $644 >> 0] | $641 & 1;
   HEAP8[$639 >> 0] = $644;
   $$0 = 8;
   return $$0 | 0;
  }
 case 44:
  {
   $654 = $this + 4 + 1 | 0;
   $656 = HEAPU8[$654 >> 0] | 0;
   $659 = $656 >>> 1 | $656 & 128;
   HEAP8[$this + 6 >> 0] = HEAPU8[$this + 31 + $659 >> 0] | $656 & 1;
   HEAP8[$654 >> 0] = $659;
   $$0 = 8;
   return $$0 | 0;
  }
 case 45:
  {
   $668 = $this + 4 | 0;
   $670 = HEAPU8[$668 >> 0] | 0;
   $673 = $670 >>> 1 | $670 & 128;
   HEAP8[$this + 6 >> 0] = HEAPU8[$this + 31 + $673 >> 0] | $670 & 1;
   HEAP8[$668 >> 0] = $673;
   $$0 = 8;
   return $$0 | 0;
  }
 case 46:
  {
   $684 = HEAPU16[$this + 4 >> 1] | 0;
   $686 = $684 >>> 11;
   $689 = (HEAP32[$this + 1312 + ($686 << 3) >> 2] | 0) + ($684 & 2047) | 0;
   $691 = HEAPU8[$689 >> 0] | 0;
   $694 = $691 >>> 1 | $691 & 128;
   HEAP8[$this + 6 >> 0] = HEAPU8[$this + 31 + $694 >> 0] | $691 & 1;
   if (!(HEAP8[$this + 1312 + ($686 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$689 >> 0] = $694;
   $$0 = 15;
   return $$0 | 0;
  }
 case 47:
  {
   $706 = $this + 6 | 0;
   $707 = $706 + 1 | 0;
   $709 = HEAPU8[$707 >> 0] | 0;
   $712 = $709 >>> 1 | $709 & 128;
   HEAP8[$706 >> 0] = HEAPU8[$this + 31 + $712 >> 0] | $709 & 1;
   HEAP8[$707 >> 0] = $712;
   $$0 = 8;
   return $$0 | 0;
  }
 case 48:
  {
   $720 = $this + 1 | 0;
   $722 = HEAPU8[$720 >> 0] | 0;
   $724 = $722 << 1 | 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($724 & 255) + ($this + 31) >> 0] | $722 >>> 7;
   HEAP8[$720 >> 0] = $724;
   $$0 = 8;
   return $$0 | 0;
  }
 case 49:
  {
   $734 = HEAPU8[$this >> 0] | 0;
   $736 = $734 << 1 | 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($736 & 255) + ($this + 31) >> 0] | $734 >>> 7;
   HEAP8[$this >> 0] = $736;
   $$0 = 8;
   return $$0 | 0;
  }
 case 50:
  {
   $746 = $this + 2 + 1 | 0;
   $748 = HEAPU8[$746 >> 0] | 0;
   $750 = $748 << 1 | 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($750 & 255) + ($this + 31) >> 0] | $748 >>> 7;
   HEAP8[$746 >> 0] = $750;
   $$0 = 8;
   return $$0 | 0;
  }
 case 51:
  {
   $759 = $this + 2 | 0;
   $761 = HEAPU8[$759 >> 0] | 0;
   $763 = $761 << 1 | 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($763 & 255) + ($this + 31) >> 0] | $761 >>> 7;
   HEAP8[$759 >> 0] = $763;
   $$0 = 8;
   return $$0 | 0;
  }
 case 52:
  {
   $773 = $this + 4 + 1 | 0;
   $775 = HEAPU8[$773 >> 0] | 0;
   $777 = $775 << 1 | 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($777 & 255) + ($this + 31) >> 0] | $775 >>> 7;
   HEAP8[$773 >> 0] = $777;
   $$0 = 8;
   return $$0 | 0;
  }
 case 53:
  {
   $786 = $this + 4 | 0;
   $788 = HEAPU8[$786 >> 0] | 0;
   $790 = $788 << 1 | 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($790 & 255) + ($this + 31) >> 0] | $788 >>> 7;
   HEAP8[$786 >> 0] = $790;
   $$0 = 8;
   return $$0 | 0;
  }
 case 54:
  {
   $801 = HEAPU16[$this + 4 >> 1] | 0;
   $803 = $801 >>> 11;
   $806 = (HEAP32[$this + 1312 + ($803 << 3) >> 2] | 0) + ($801 & 2047) | 0;
   $808 = HEAPU8[$806 >> 0] | 0;
   $810 = $808 << 1 | 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($810 & 255) + ($this + 31) >> 0] | $808 >>> 7;
   if (!(HEAP8[$this + 1312 + ($803 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$806 >> 0] = $810;
   $$0 = 15;
   return $$0 | 0;
  }
 case 55:
  {
   $822 = $this + 6 | 0;
   $823 = $822 + 1 | 0;
   $825 = HEAPU8[$823 >> 0] | 0;
   $827 = $825 << 1 | 1;
   HEAP8[$822 >> 0] = HEAPU8[($827 & 255) + ($this + 31) >> 0] | $825 >>> 7;
   HEAP8[$823 >> 0] = $827;
   $$0 = 8;
   return $$0 | 0;
  }
 case 56:
  {
   $835 = $this + 1 | 0;
   $836 = HEAP8[$835 >> 0] | 0;
   $838 = ($836 & 255) >>> 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($838 & 255) + ($this + 31) >> 0] | $836 & 1;
   HEAP8[$835 >> 0] = $838;
   $$0 = 8;
   return $$0 | 0;
  }
 case 57:
  {
   $847 = HEAP8[$this >> 0] | 0;
   $849 = ($847 & 255) >>> 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($849 & 255) + ($this + 31) >> 0] | $847 & 1;
   HEAP8[$this >> 0] = $849;
   $$0 = 8;
   return $$0 | 0;
  }
 case 58:
  {
   $859 = $this + 2 + 1 | 0;
   $860 = HEAP8[$859 >> 0] | 0;
   $862 = ($860 & 255) >>> 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($862 & 255) + ($this + 31) >> 0] | $860 & 1;
   HEAP8[$859 >> 0] = $862;
   $$0 = 8;
   return $$0 | 0;
  }
 case 59:
  {
   $871 = $this + 2 | 0;
   $872 = HEAP8[$871 >> 0] | 0;
   $874 = ($872 & 255) >>> 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($874 & 255) + ($this + 31) >> 0] | $872 & 1;
   HEAP8[$871 >> 0] = $874;
   $$0 = 8;
   return $$0 | 0;
  }
 case 60:
  {
   $884 = $this + 4 + 1 | 0;
   $885 = HEAP8[$884 >> 0] | 0;
   $887 = ($885 & 255) >>> 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($887 & 255) + ($this + 31) >> 0] | $885 & 1;
   HEAP8[$884 >> 0] = $887;
   $$0 = 8;
   return $$0 | 0;
  }
 case 61:
  {
   $896 = $this + 4 | 0;
   $897 = HEAP8[$896 >> 0] | 0;
   $899 = ($897 & 255) >>> 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($899 & 255) + ($this + 31) >> 0] | $897 & 1;
   HEAP8[$896 >> 0] = $899;
   $$0 = 8;
   return $$0 | 0;
  }
 case 62:
  {
   $910 = HEAPU16[$this + 4 >> 1] | 0;
   $912 = $910 >>> 11;
   $915 = (HEAP32[$this + 1312 + ($912 << 3) >> 2] | 0) + ($910 & 2047) | 0;
   $916 = HEAP8[$915 >> 0] | 0;
   $918 = ($916 & 255) >>> 1;
   HEAP8[$this + 6 >> 0] = HEAPU8[($918 & 255) + ($this + 31) >> 0] | $916 & 1;
   if (!(HEAP8[$this + 1312 + ($912 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$915 >> 0] = $918;
   $$0 = 15;
   return $$0 | 0;
  }
 case 63:
  {
   $930 = $this + 6 | 0;
   $931 = $930 + 1 | 0;
   $932 = HEAP8[$931 >> 0] | 0;
   $934 = ($932 & 255) >>> 1;
   HEAP8[$930 >> 0] = HEAPU8[($934 & 255) + ($this + 31) >> 0] | $932 & 1;
   HEAP8[$931 >> 0] = $934;
   $$0 = 8;
   return $$0 | 0;
  }
 case 64:
  {
   $943 = HEAP8[$this + 1 >> 0] | 0;
   $949 = $this + 6 | 0;
   HEAP8[$949 >> 0] = (($943 & 1) == 0 ? 84 : 16) | $943 & 40 | HEAPU8[$949 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 65:
  {
   $955 = HEAP8[$this >> 0] | 0;
   $961 = $this + 6 | 0;
   HEAP8[$961 >> 0] = (($955 & 1) == 0 ? 84 : 16) | $955 & 40 | HEAPU8[$961 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 66:
  {
   $969 = HEAP8[$this + 2 + 1 >> 0] | 0;
   $975 = $this + 6 | 0;
   HEAP8[$975 >> 0] = (($969 & 1) == 0 ? 84 : 16) | $969 & 40 | HEAPU8[$975 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 67:
  {
   $982 = HEAP8[$this + 2 >> 0] | 0;
   $988 = $this + 6 | 0;
   HEAP8[$988 >> 0] = (($982 & 1) == 0 ? 84 : 16) | $982 & 40 | HEAPU8[$988 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 68:
  {
   $996 = HEAP8[$this + 4 + 1 >> 0] | 0;
   $1002 = $this + 6 | 0;
   HEAP8[$1002 >> 0] = (($996 & 1) == 0 ? 84 : 16) | $996 & 40 | HEAPU8[$1002 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 69:
  {
   $1009 = HEAP32[$this + 4 >> 2] | 0;
   HEAP8[$this + 6 >> 0] = (($1009 & 1 | 0) == 0 ? 84 : 16) | $1009 & 40 | $1009 >>> 16 & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 70:
  {
   $1020 = HEAP32[$this + 4 >> 2] | 0;
   $1027 = HEAP8[(HEAP32[$this + 1312 + (($1020 >>> 11 & 31) << 3) >> 2] | 0) + ($1020 & 2047) >> 0] | 0;
   HEAP8[$this + 6 >> 0] = (($1027 & 1) == 0 ? 84 : 16) | $1027 & 40 | $1020 >>> 16 & 1;
   $$0 = 12;
   return $$0 | 0;
  }
 case 71:
  {
   $1038 = $this + 6 | 0;
   $1040 = HEAP8[$1038 + 1 >> 0] | 0;
   HEAP8[$1038 >> 0] = (($1040 & 1) == 0 ? 84 : 16) | $1040 & 40 | HEAPU8[$1038 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 72:
  {
   $1052 = HEAP8[$this + 1 >> 0] | 0;
   $1058 = $this + 6 | 0;
   HEAP8[$1058 >> 0] = (($1052 & 2) == 0 ? 84 : 16) | $1052 & 40 | HEAPU8[$1058 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 73:
  {
   $1064 = HEAP8[$this >> 0] | 0;
   $1070 = $this + 6 | 0;
   HEAP8[$1070 >> 0] = (($1064 & 2) == 0 ? 84 : 16) | $1064 & 40 | HEAPU8[$1070 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 74:
  {
   $1078 = HEAP8[$this + 2 + 1 >> 0] | 0;
   $1084 = $this + 6 | 0;
   HEAP8[$1084 >> 0] = (($1078 & 2) == 0 ? 84 : 16) | $1078 & 40 | HEAPU8[$1084 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 75:
  {
   $1091 = HEAP8[$this + 2 >> 0] | 0;
   $1097 = $this + 6 | 0;
   HEAP8[$1097 >> 0] = (($1091 & 2) == 0 ? 84 : 16) | $1091 & 40 | HEAPU8[$1097 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 76:
  {
   $1105 = HEAP8[$this + 4 + 1 >> 0] | 0;
   $1111 = $this + 6 | 0;
   HEAP8[$1111 >> 0] = (($1105 & 2) == 0 ? 84 : 16) | $1105 & 40 | HEAPU8[$1111 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 77:
  {
   $1118 = HEAP32[$this + 4 >> 2] | 0;
   HEAP8[$this + 6 >> 0] = (($1118 & 2 | 0) == 0 ? 84 : 16) | $1118 & 40 | $1118 >>> 16 & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 78:
  {
   $1129 = HEAP32[$this + 4 >> 2] | 0;
   $1136 = HEAP8[(HEAP32[$this + 1312 + (($1129 >>> 11 & 31) << 3) >> 2] | 0) + ($1129 & 2047) >> 0] | 0;
   HEAP8[$this + 6 >> 0] = (($1136 & 2) == 0 ? 84 : 16) | $1136 & 40 | $1129 >>> 16 & 1;
   $$0 = 12;
   return $$0 | 0;
  }
 case 79:
  {
   $1147 = $this + 6 | 0;
   $1149 = HEAP8[$1147 + 1 >> 0] | 0;
   HEAP8[$1147 >> 0] = (($1149 & 2) == 0 ? 84 : 16) | $1149 & 40 | HEAPU8[$1147 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 80:
  {
   $1161 = HEAP8[$this + 1 >> 0] | 0;
   $1167 = $this + 6 | 0;
   HEAP8[$1167 >> 0] = (($1161 & 4) == 0 ? 84 : 16) | $1161 & 40 | HEAPU8[$1167 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 81:
  {
   $1173 = HEAP8[$this >> 0] | 0;
   $1179 = $this + 6 | 0;
   HEAP8[$1179 >> 0] = (($1173 & 4) == 0 ? 84 : 16) | $1173 & 40 | HEAPU8[$1179 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 82:
  {
   $1187 = HEAP8[$this + 2 + 1 >> 0] | 0;
   $1193 = $this + 6 | 0;
   HEAP8[$1193 >> 0] = (($1187 & 4) == 0 ? 84 : 16) | $1187 & 40 | HEAPU8[$1193 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 83:
  {
   $1200 = HEAP8[$this + 2 >> 0] | 0;
   $1206 = $this + 6 | 0;
   HEAP8[$1206 >> 0] = (($1200 & 4) == 0 ? 84 : 16) | $1200 & 40 | HEAPU8[$1206 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 84:
  {
   $1214 = HEAP8[$this + 4 + 1 >> 0] | 0;
   $1220 = $this + 6 | 0;
   HEAP8[$1220 >> 0] = (($1214 & 4) == 0 ? 84 : 16) | $1214 & 40 | HEAPU8[$1220 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 85:
  {
   $1227 = HEAP32[$this + 4 >> 2] | 0;
   HEAP8[$this + 6 >> 0] = (($1227 & 4 | 0) == 0 ? 84 : 16) | $1227 & 40 | $1227 >>> 16 & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 86:
  {
   $1238 = HEAP32[$this + 4 >> 2] | 0;
   $1245 = HEAP8[(HEAP32[$this + 1312 + (($1238 >>> 11 & 31) << 3) >> 2] | 0) + ($1238 & 2047) >> 0] | 0;
   HEAP8[$this + 6 >> 0] = (($1245 & 4) == 0 ? 84 : 16) | $1245 & 40 | $1238 >>> 16 & 1;
   $$0 = 12;
   return $$0 | 0;
  }
 case 87:
  {
   $1256 = $this + 6 | 0;
   $1258 = HEAP8[$1256 + 1 >> 0] | 0;
   HEAP8[$1256 >> 0] = (($1258 & 4) == 0 ? 84 : 16) | $1258 & 40 | HEAPU8[$1256 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 88:
  {
   $1270 = HEAP8[$this + 1 >> 0] | 0;
   $1276 = $this + 6 | 0;
   HEAP8[$1276 >> 0] = (($1270 & 8) == 0 ? 84 : 16) | $1270 & 40 | HEAPU8[$1276 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 89:
  {
   $1282 = HEAP8[$this >> 0] | 0;
   $1288 = $this + 6 | 0;
   HEAP8[$1288 >> 0] = (($1282 & 8) == 0 ? 84 : 16) | $1282 & 40 | HEAPU8[$1288 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 90:
  {
   $1296 = HEAP8[$this + 2 + 1 >> 0] | 0;
   $1302 = $this + 6 | 0;
   HEAP8[$1302 >> 0] = (($1296 & 8) == 0 ? 84 : 16) | $1296 & 40 | HEAPU8[$1302 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 91:
  {
   $1309 = HEAP8[$this + 2 >> 0] | 0;
   $1315 = $this + 6 | 0;
   HEAP8[$1315 >> 0] = (($1309 & 8) == 0 ? 84 : 16) | $1309 & 40 | HEAPU8[$1315 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 92:
  {
   $1323 = HEAP8[$this + 4 + 1 >> 0] | 0;
   $1329 = $this + 6 | 0;
   HEAP8[$1329 >> 0] = (($1323 & 8) == 0 ? 84 : 16) | $1323 & 40 | HEAPU8[$1329 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 93:
  {
   $1336 = HEAP32[$this + 4 >> 2] | 0;
   HEAP8[$this + 6 >> 0] = (($1336 & 8 | 0) == 0 ? 84 : 16) | $1336 & 40 | $1336 >>> 16 & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 94:
  {
   $1347 = HEAP32[$this + 4 >> 2] | 0;
   $1354 = HEAP8[(HEAP32[$this + 1312 + (($1347 >>> 11 & 31) << 3) >> 2] | 0) + ($1347 & 2047) >> 0] | 0;
   HEAP8[$this + 6 >> 0] = (($1354 & 8) == 0 ? 84 : 16) | $1354 & 40 | $1347 >>> 16 & 1;
   $$0 = 12;
   return $$0 | 0;
  }
 case 95:
  {
   $1365 = $this + 6 | 0;
   $1367 = HEAP8[$1365 + 1 >> 0] | 0;
   HEAP8[$1365 >> 0] = (($1367 & 8) == 0 ? 84 : 16) | $1367 & 40 | HEAPU8[$1365 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 96:
  {
   $1379 = HEAP8[$this + 1 >> 0] | 0;
   $1385 = $this + 6 | 0;
   HEAP8[$1385 >> 0] = (($1379 & 16) == 0 ? 84 : 16) | $1379 & 40 | HEAPU8[$1385 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 97:
  {
   $1391 = HEAP8[$this >> 0] | 0;
   $1397 = $this + 6 | 0;
   HEAP8[$1397 >> 0] = (($1391 & 16) == 0 ? 84 : 16) | $1391 & 40 | HEAPU8[$1397 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 98:
  {
   $1405 = HEAP8[$this + 2 + 1 >> 0] | 0;
   $1411 = $this + 6 | 0;
   HEAP8[$1411 >> 0] = (($1405 & 16) == 0 ? 84 : 16) | $1405 & 40 | HEAPU8[$1411 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 99:
  {
   $1418 = HEAP8[$this + 2 >> 0] | 0;
   $1424 = $this + 6 | 0;
   HEAP8[$1424 >> 0] = (($1418 & 16) == 0 ? 84 : 16) | $1418 & 40 | HEAPU8[$1424 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 100:
  {
   $1432 = HEAP8[$this + 4 + 1 >> 0] | 0;
   $1438 = $this + 6 | 0;
   HEAP8[$1438 >> 0] = (($1432 & 16) == 0 ? 84 : 16) | $1432 & 40 | HEAPU8[$1438 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 101:
  {
   $1445 = HEAP32[$this + 4 >> 2] | 0;
   HEAP8[$this + 6 >> 0] = (($1445 & 16 | 0) == 0 ? 84 : 16) | $1445 & 40 | $1445 >>> 16 & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 102:
  {
   $1456 = HEAP32[$this + 4 >> 2] | 0;
   $1463 = HEAP8[(HEAP32[$this + 1312 + (($1456 >>> 11 & 31) << 3) >> 2] | 0) + ($1456 & 2047) >> 0] | 0;
   HEAP8[$this + 6 >> 0] = (($1463 & 16) == 0 ? 84 : 16) | $1463 & 40 | $1456 >>> 16 & 1;
   $$0 = 12;
   return $$0 | 0;
  }
 case 103:
  {
   $1474 = $this + 6 | 0;
   $1476 = HEAP8[$1474 + 1 >> 0] | 0;
   HEAP8[$1474 >> 0] = (($1476 & 16) == 0 ? 84 : 16) | $1476 & 40 | HEAPU8[$1474 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 104:
  {
   $1488 = HEAP8[$this + 1 >> 0] | 0;
   $1494 = $this + 6 | 0;
   HEAP8[$1494 >> 0] = (($1488 & 32) == 0 ? 84 : 16) | $1488 & 40 | HEAPU8[$1494 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 105:
  {
   $1500 = HEAP8[$this >> 0] | 0;
   $1506 = $this + 6 | 0;
   HEAP8[$1506 >> 0] = (($1500 & 32) == 0 ? 84 : 16) | $1500 & 40 | HEAPU8[$1506 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 106:
  {
   $1514 = HEAP8[$this + 2 + 1 >> 0] | 0;
   $1520 = $this + 6 | 0;
   HEAP8[$1520 >> 0] = (($1514 & 32) == 0 ? 84 : 16) | $1514 & 40 | HEAPU8[$1520 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 107:
  {
   $1527 = HEAP8[$this + 2 >> 0] | 0;
   $1533 = $this + 6 | 0;
   HEAP8[$1533 >> 0] = (($1527 & 32) == 0 ? 84 : 16) | $1527 & 40 | HEAPU8[$1533 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 108:
  {
   $1541 = HEAP8[$this + 4 + 1 >> 0] | 0;
   $1547 = $this + 6 | 0;
   HEAP8[$1547 >> 0] = (($1541 & 32) == 0 ? 84 : 16) | $1541 & 40 | HEAPU8[$1547 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 109:
  {
   $1554 = HEAP32[$this + 4 >> 2] | 0;
   HEAP8[$this + 6 >> 0] = (($1554 & 32 | 0) == 0 ? 84 : 16) | $1554 & 40 | $1554 >>> 16 & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 110:
  {
   $1565 = HEAP32[$this + 4 >> 2] | 0;
   $1572 = HEAP8[(HEAP32[$this + 1312 + (($1565 >>> 11 & 31) << 3) >> 2] | 0) + ($1565 & 2047) >> 0] | 0;
   HEAP8[$this + 6 >> 0] = (($1572 & 32) == 0 ? 84 : 16) | $1572 & 40 | $1565 >>> 16 & 1;
   $$0 = 12;
   return $$0 | 0;
  }
 case 111:
  {
   $1583 = $this + 6 | 0;
   $1585 = HEAP8[$1583 + 1 >> 0] | 0;
   HEAP8[$1583 >> 0] = (($1585 & 32) == 0 ? 84 : 16) | $1585 & 40 | HEAPU8[$1583 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 112:
  {
   $1597 = HEAP8[$this + 1 >> 0] | 0;
   $1603 = $this + 6 | 0;
   HEAP8[$1603 >> 0] = (($1597 & 64) == 0 ? 84 : 16) | $1597 & 40 | HEAPU8[$1603 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 113:
  {
   $1609 = HEAP8[$this >> 0] | 0;
   $1615 = $this + 6 | 0;
   HEAP8[$1615 >> 0] = (($1609 & 64) == 0 ? 84 : 16) | $1609 & 40 | HEAPU8[$1615 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 114:
  {
   $1623 = HEAP8[$this + 2 + 1 >> 0] | 0;
   $1629 = $this + 6 | 0;
   HEAP8[$1629 >> 0] = (($1623 & 64) == 0 ? 84 : 16) | $1623 & 40 | HEAPU8[$1629 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 115:
  {
   $1636 = HEAP8[$this + 2 >> 0] | 0;
   $1642 = $this + 6 | 0;
   HEAP8[$1642 >> 0] = (($1636 & 64) == 0 ? 84 : 16) | $1636 & 40 | HEAPU8[$1642 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 116:
  {
   $1650 = HEAP8[$this + 4 + 1 >> 0] | 0;
   $1656 = $this + 6 | 0;
   HEAP8[$1656 >> 0] = (($1650 & 64) == 0 ? 84 : 16) | $1650 & 40 | HEAPU8[$1656 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 117:
  {
   $1663 = HEAP32[$this + 4 >> 2] | 0;
   HEAP8[$this + 6 >> 0] = (($1663 & 64 | 0) == 0 ? 84 : 16) | $1663 & 40 | $1663 >>> 16 & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 118:
  {
   $1674 = HEAP32[$this + 4 >> 2] | 0;
   $1681 = HEAP8[(HEAP32[$this + 1312 + (($1674 >>> 11 & 31) << 3) >> 2] | 0) + ($1674 & 2047) >> 0] | 0;
   HEAP8[$this + 6 >> 0] = (($1681 & 64) == 0 ? 84 : 16) | $1681 & 40 | $1674 >>> 16 & 1;
   $$0 = 12;
   return $$0 | 0;
  }
 case 119:
  {
   $1692 = $this + 6 | 0;
   $1694 = HEAP8[$1692 + 1 >> 0] | 0;
   HEAP8[$1692 >> 0] = (($1694 & 64) == 0 ? 84 : 16) | $1694 & 40 | HEAPU8[$1692 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 120:
  {
   $1706 = HEAP8[$this + 1 >> 0] | 0;
   $1707 = $1706 & 255;
   $1713 = $this + 6 | 0;
   HEAP8[$1713 >> 0] = ($1706 << 24 >> 24 > -1 ? 84 : $1707 & 128 | 16) | $1707 & 40 | HEAPU8[$1713 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 121:
  {
   $1719 = HEAP8[$this >> 0] | 0;
   $1720 = $1719 & 255;
   $1726 = $this + 6 | 0;
   HEAP8[$1726 >> 0] = ($1719 << 24 >> 24 > -1 ? 84 : $1720 & 128 | 16) | $1720 & 40 | HEAPU8[$1726 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 122:
  {
   $1734 = HEAP8[$this + 2 + 1 >> 0] | 0;
   $1735 = $1734 & 255;
   $1741 = $this + 6 | 0;
   HEAP8[$1741 >> 0] = ($1734 << 24 >> 24 > -1 ? 84 : $1735 & 128 | 16) | $1735 & 40 | HEAPU8[$1741 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 123:
  {
   $1748 = HEAP8[$this + 2 >> 0] | 0;
   $1749 = $1748 & 255;
   $1755 = $this + 6 | 0;
   HEAP8[$1755 >> 0] = ($1748 << 24 >> 24 > -1 ? 84 : $1749 & 128 | 16) | $1749 & 40 | HEAPU8[$1755 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 124:
  {
   $1763 = HEAP8[$this + 4 + 1 >> 0] | 0;
   $1764 = $1763 & 255;
   $1770 = $this + 6 | 0;
   HEAP8[$1770 >> 0] = ($1763 << 24 >> 24 > -1 ? 84 : $1764 & 128 | 16) | $1764 & 40 | HEAPU8[$1770 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 125:
  {
   $1777 = HEAP32[$this + 4 >> 2] | 0;
   HEAP8[$this + 6 >> 0] = (($1777 & 255) << 24 >> 24 > -1 ? 84 : $1777 & 128 | 16) | $1777 & 40 | $1777 >>> 16 & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 126:
  {
   $1790 = HEAP32[$this + 4 >> 2] | 0;
   $1797 = HEAP8[(HEAP32[$this + 1312 + (($1790 >>> 11 & 31) << 3) >> 2] | 0) + ($1790 & 2047) >> 0] | 0;
   $1798 = $1797 & 255;
   HEAP8[$this + 6 >> 0] = ($1797 << 24 >> 24 > -1 ? 84 : $1798 & 128 | 16) | $1798 & 40 | $1790 >>> 16 & 1;
   $$0 = 12;
   return $$0 | 0;
  }
 case 127:
  {
   $1809 = $this + 6 | 0;
   $1811 = HEAP8[$1809 + 1 >> 0] | 0;
   $1812 = $1811 & 255;
   HEAP8[$1809 >> 0] = ($1811 << 24 >> 24 > -1 ? 84 : $1812 & 128 | 16) | $1812 & 40 | HEAPU8[$1809 >> 0] & 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 128:
  {
   $1823 = $this + 1 | 0;
   HEAP8[$1823 >> 0] = HEAPU8[$1823 >> 0] & 254;
   $$0 = 8;
   return $$0 | 0;
  }
 case 129:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] & 254;
   $$0 = 8;
   return $$0 | 0;
  }
 case 130:
  {
   $1833 = $this + 2 + 1 | 0;
   HEAP8[$1833 >> 0] = HEAPU8[$1833 >> 0] & 254;
   $$0 = 8;
   return $$0 | 0;
  }
 case 131:
  {
   $1838 = $this + 2 | 0;
   HEAP8[$1838 >> 0] = HEAPU8[$1838 >> 0] & 254;
   $$0 = 8;
   return $$0 | 0;
  }
 case 132:
  {
   $1844 = $this + 4 + 1 | 0;
   HEAP8[$1844 >> 0] = HEAPU8[$1844 >> 0] & 254;
   $$0 = 8;
   return $$0 | 0;
  }
 case 133:
  {
   $1849 = $this + 4 | 0;
   HEAP8[$1849 >> 0] = HEAPU8[$1849 >> 0] & 254;
   $$0 = 8;
   return $$0 | 0;
  }
 case 134:
  {
   $1856 = HEAPU16[$this + 4 >> 1] | 0;
   $1858 = $1856 >>> 11;
   $1861 = (HEAP32[$this + 1312 + ($1858 << 3) >> 2] | 0) + ($1856 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($1858 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$1861 >> 0] = HEAPU8[$1861 >> 0] & 254;
   $$0 = 15;
   return $$0 | 0;
  }
 case 135:
  {
   $1870 = $this + 6 + 1 | 0;
   HEAP8[$1870 >> 0] = HEAPU8[$1870 >> 0] & 254;
   $$0 = 8;
   return $$0 | 0;
  }
 case 136:
  {
   $1875 = $this + 1 | 0;
   HEAP8[$1875 >> 0] = HEAPU8[$1875 >> 0] & 253;
   $$0 = 8;
   return $$0 | 0;
  }
 case 137:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] & 253;
   $$0 = 8;
   return $$0 | 0;
  }
 case 138:
  {
   $1885 = $this + 2 + 1 | 0;
   HEAP8[$1885 >> 0] = HEAPU8[$1885 >> 0] & 253;
   $$0 = 8;
   return $$0 | 0;
  }
 case 139:
  {
   $1890 = $this + 2 | 0;
   HEAP8[$1890 >> 0] = HEAPU8[$1890 >> 0] & 253;
   $$0 = 8;
   return $$0 | 0;
  }
 case 140:
  {
   $1896 = $this + 4 + 1 | 0;
   HEAP8[$1896 >> 0] = HEAPU8[$1896 >> 0] & 253;
   $$0 = 8;
   return $$0 | 0;
  }
 case 141:
  {
   $1901 = $this + 4 | 0;
   HEAP8[$1901 >> 0] = HEAPU8[$1901 >> 0] & 253;
   $$0 = 8;
   return $$0 | 0;
  }
 case 142:
  {
   $1908 = HEAPU16[$this + 4 >> 1] | 0;
   $1910 = $1908 >>> 11;
   $1913 = (HEAP32[$this + 1312 + ($1910 << 3) >> 2] | 0) + ($1908 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($1910 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$1913 >> 0] = HEAPU8[$1913 >> 0] & 253;
   $$0 = 15;
   return $$0 | 0;
  }
 case 143:
  {
   $1922 = $this + 6 + 1 | 0;
   HEAP8[$1922 >> 0] = HEAPU8[$1922 >> 0] & 253;
   $$0 = 8;
   return $$0 | 0;
  }
 case 144:
  {
   $1927 = $this + 1 | 0;
   HEAP8[$1927 >> 0] = HEAPU8[$1927 >> 0] & 251;
   $$0 = 8;
   return $$0 | 0;
  }
 case 145:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] & 251;
   $$0 = 8;
   return $$0 | 0;
  }
 case 146:
  {
   $1937 = $this + 2 + 1 | 0;
   HEAP8[$1937 >> 0] = HEAPU8[$1937 >> 0] & 251;
   $$0 = 8;
   return $$0 | 0;
  }
 case 147:
  {
   $1942 = $this + 2 | 0;
   HEAP8[$1942 >> 0] = HEAPU8[$1942 >> 0] & 251;
   $$0 = 8;
   return $$0 | 0;
  }
 case 148:
  {
   $1948 = $this + 4 + 1 | 0;
   HEAP8[$1948 >> 0] = HEAPU8[$1948 >> 0] & 251;
   $$0 = 8;
   return $$0 | 0;
  }
 case 149:
  {
   $1953 = $this + 4 | 0;
   HEAP8[$1953 >> 0] = HEAPU8[$1953 >> 0] & 251;
   $$0 = 8;
   return $$0 | 0;
  }
 case 150:
  {
   $1960 = HEAPU16[$this + 4 >> 1] | 0;
   $1962 = $1960 >>> 11;
   $1965 = (HEAP32[$this + 1312 + ($1962 << 3) >> 2] | 0) + ($1960 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($1962 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$1965 >> 0] = HEAPU8[$1965 >> 0] & 251;
   $$0 = 15;
   return $$0 | 0;
  }
 case 151:
  {
   $1974 = $this + 6 + 1 | 0;
   HEAP8[$1974 >> 0] = HEAPU8[$1974 >> 0] & 251;
   $$0 = 8;
   return $$0 | 0;
  }
 case 152:
  {
   $1979 = $this + 1 | 0;
   HEAP8[$1979 >> 0] = HEAPU8[$1979 >> 0] & 247;
   $$0 = 8;
   return $$0 | 0;
  }
 case 153:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] & 247;
   $$0 = 8;
   return $$0 | 0;
  }
 case 154:
  {
   $1989 = $this + 2 + 1 | 0;
   HEAP8[$1989 >> 0] = HEAPU8[$1989 >> 0] & 247;
   $$0 = 8;
   return $$0 | 0;
  }
 case 155:
  {
   $1994 = $this + 2 | 0;
   HEAP8[$1994 >> 0] = HEAPU8[$1994 >> 0] & 247;
   $$0 = 8;
   return $$0 | 0;
  }
 case 156:
  {
   $2000 = $this + 4 + 1 | 0;
   HEAP8[$2000 >> 0] = HEAPU8[$2000 >> 0] & 247;
   $$0 = 8;
   return $$0 | 0;
  }
 case 157:
  {
   $2005 = $this + 4 | 0;
   HEAP8[$2005 >> 0] = HEAPU8[$2005 >> 0] & 247;
   $$0 = 8;
   return $$0 | 0;
  }
 case 158:
  {
   $2012 = HEAPU16[$this + 4 >> 1] | 0;
   $2014 = $2012 >>> 11;
   $2017 = (HEAP32[$this + 1312 + ($2014 << 3) >> 2] | 0) + ($2012 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2014 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2017 >> 0] = HEAPU8[$2017 >> 0] & 247;
   $$0 = 15;
   return $$0 | 0;
  }
 case 159:
  {
   $2026 = $this + 6 + 1 | 0;
   HEAP8[$2026 >> 0] = HEAPU8[$2026 >> 0] & 247;
   $$0 = 8;
   return $$0 | 0;
  }
 case 160:
  {
   $2031 = $this + 1 | 0;
   HEAP8[$2031 >> 0] = HEAPU8[$2031 >> 0] & 239;
   $$0 = 8;
   return $$0 | 0;
  }
 case 161:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] & 239;
   $$0 = 8;
   return $$0 | 0;
  }
 case 162:
  {
   $2041 = $this + 2 + 1 | 0;
   HEAP8[$2041 >> 0] = HEAPU8[$2041 >> 0] & 239;
   $$0 = 8;
   return $$0 | 0;
  }
 case 163:
  {
   $2046 = $this + 2 | 0;
   HEAP8[$2046 >> 0] = HEAPU8[$2046 >> 0] & 239;
   $$0 = 8;
   return $$0 | 0;
  }
 case 164:
  {
   $2052 = $this + 4 + 1 | 0;
   HEAP8[$2052 >> 0] = HEAPU8[$2052 >> 0] & 239;
   $$0 = 8;
   return $$0 | 0;
  }
 case 165:
  {
   $2057 = $this + 4 | 0;
   HEAP8[$2057 >> 0] = HEAPU8[$2057 >> 0] & 239;
   $$0 = 8;
   return $$0 | 0;
  }
 case 166:
  {
   $2064 = HEAPU16[$this + 4 >> 1] | 0;
   $2066 = $2064 >>> 11;
   $2069 = (HEAP32[$this + 1312 + ($2066 << 3) >> 2] | 0) + ($2064 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2066 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2069 >> 0] = HEAPU8[$2069 >> 0] & 239;
   $$0 = 15;
   return $$0 | 0;
  }
 case 167:
  {
   $2078 = $this + 6 + 1 | 0;
   HEAP8[$2078 >> 0] = HEAPU8[$2078 >> 0] & 239;
   $$0 = 8;
   return $$0 | 0;
  }
 case 168:
  {
   $2083 = $this + 1 | 0;
   HEAP8[$2083 >> 0] = HEAPU8[$2083 >> 0] & 223;
   $$0 = 8;
   return $$0 | 0;
  }
 case 169:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] & 223;
   $$0 = 8;
   return $$0 | 0;
  }
 case 170:
  {
   $2093 = $this + 2 + 1 | 0;
   HEAP8[$2093 >> 0] = HEAPU8[$2093 >> 0] & 223;
   $$0 = 8;
   return $$0 | 0;
  }
 case 171:
  {
   $2098 = $this + 2 | 0;
   HEAP8[$2098 >> 0] = HEAPU8[$2098 >> 0] & 223;
   $$0 = 8;
   return $$0 | 0;
  }
 case 172:
  {
   $2104 = $this + 4 + 1 | 0;
   HEAP8[$2104 >> 0] = HEAPU8[$2104 >> 0] & 223;
   $$0 = 8;
   return $$0 | 0;
  }
 case 173:
  {
   $2109 = $this + 4 | 0;
   HEAP8[$2109 >> 0] = HEAPU8[$2109 >> 0] & 223;
   $$0 = 8;
   return $$0 | 0;
  }
 case 174:
  {
   $2116 = HEAPU16[$this + 4 >> 1] | 0;
   $2118 = $2116 >>> 11;
   $2121 = (HEAP32[$this + 1312 + ($2118 << 3) >> 2] | 0) + ($2116 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2118 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2121 >> 0] = HEAPU8[$2121 >> 0] & 223;
   $$0 = 15;
   return $$0 | 0;
  }
 case 175:
  {
   $2130 = $this + 6 + 1 | 0;
   HEAP8[$2130 >> 0] = HEAPU8[$2130 >> 0] & 223;
   $$0 = 8;
   return $$0 | 0;
  }
 case 176:
  {
   $2135 = $this + 1 | 0;
   HEAP8[$2135 >> 0] = HEAPU8[$2135 >> 0] & 191;
   $$0 = 8;
   return $$0 | 0;
  }
 case 177:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] & 191;
   $$0 = 8;
   return $$0 | 0;
  }
 case 178:
  {
   $2145 = $this + 2 + 1 | 0;
   HEAP8[$2145 >> 0] = HEAPU8[$2145 >> 0] & 191;
   $$0 = 8;
   return $$0 | 0;
  }
 case 179:
  {
   $2150 = $this + 2 | 0;
   HEAP8[$2150 >> 0] = HEAPU8[$2150 >> 0] & 191;
   $$0 = 8;
   return $$0 | 0;
  }
 case 180:
  {
   $2156 = $this + 4 + 1 | 0;
   HEAP8[$2156 >> 0] = HEAPU8[$2156 >> 0] & 191;
   $$0 = 8;
   return $$0 | 0;
  }
 case 181:
  {
   $2161 = $this + 4 | 0;
   HEAP8[$2161 >> 0] = HEAPU8[$2161 >> 0] & 191;
   $$0 = 8;
   return $$0 | 0;
  }
 case 182:
  {
   $2168 = HEAPU16[$this + 4 >> 1] | 0;
   $2170 = $2168 >>> 11;
   $2173 = (HEAP32[$this + 1312 + ($2170 << 3) >> 2] | 0) + ($2168 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2170 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2173 >> 0] = HEAPU8[$2173 >> 0] & 191;
   $$0 = 15;
   return $$0 | 0;
  }
 case 183:
  {
   $2182 = $this + 6 + 1 | 0;
   HEAP8[$2182 >> 0] = HEAPU8[$2182 >> 0] & 191;
   $$0 = 8;
   return $$0 | 0;
  }
 case 184:
  {
   $2187 = $this + 1 | 0;
   HEAP8[$2187 >> 0] = HEAPU8[$2187 >> 0] & 127;
   $$0 = 8;
   return $$0 | 0;
  }
 case 185:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] & 127;
   $$0 = 8;
   return $$0 | 0;
  }
 case 186:
  {
   $2197 = $this + 2 + 1 | 0;
   HEAP8[$2197 >> 0] = HEAPU8[$2197 >> 0] & 127;
   $$0 = 8;
   return $$0 | 0;
  }
 case 187:
  {
   $2202 = $this + 2 | 0;
   HEAP8[$2202 >> 0] = HEAPU8[$2202 >> 0] & 127;
   $$0 = 8;
   return $$0 | 0;
  }
 case 188:
  {
   $2208 = $this + 4 + 1 | 0;
   HEAP8[$2208 >> 0] = HEAPU8[$2208 >> 0] & 127;
   $$0 = 8;
   return $$0 | 0;
  }
 case 189:
  {
   $2213 = $this + 4 | 0;
   HEAP8[$2213 >> 0] = HEAPU8[$2213 >> 0] & 127;
   $$0 = 8;
   return $$0 | 0;
  }
 case 190:
  {
   $2220 = HEAPU16[$this + 4 >> 1] | 0;
   $2222 = $2220 >>> 11;
   $2225 = (HEAP32[$this + 1312 + ($2222 << 3) >> 2] | 0) + ($2220 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2222 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2225 >> 0] = HEAPU8[$2225 >> 0] & 127;
   $$0 = 15;
   return $$0 | 0;
  }
 case 191:
  {
   $2234 = $this + 6 + 1 | 0;
   HEAP8[$2234 >> 0] = HEAPU8[$2234 >> 0] & 127;
   $$0 = 8;
   return $$0 | 0;
  }
 case 192:
  {
   $2239 = $this + 1 | 0;
   HEAP8[$2239 >> 0] = HEAPU8[$2239 >> 0] | 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 193:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] | 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 194:
  {
   $2249 = $this + 2 + 1 | 0;
   HEAP8[$2249 >> 0] = HEAPU8[$2249 >> 0] | 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 195:
  {
   $2254 = $this + 2 | 0;
   HEAP8[$2254 >> 0] = HEAPU8[$2254 >> 0] | 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 196:
  {
   $2260 = $this + 4 + 1 | 0;
   HEAP8[$2260 >> 0] = HEAPU8[$2260 >> 0] | 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 197:
  {
   $2265 = $this + 4 | 0;
   HEAP8[$2265 >> 0] = HEAPU8[$2265 >> 0] | 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 198:
  {
   $2272 = HEAPU16[$this + 4 >> 1] | 0;
   $2274 = $2272 >>> 11;
   $2277 = (HEAP32[$this + 1312 + ($2274 << 3) >> 2] | 0) + ($2272 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2274 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2277 >> 0] = HEAPU8[$2277 >> 0] | 1;
   $$0 = 15;
   return $$0 | 0;
  }
 case 199:
  {
   $2286 = $this + 6 + 1 | 0;
   HEAP8[$2286 >> 0] = HEAPU8[$2286 >> 0] | 1;
   $$0 = 8;
   return $$0 | 0;
  }
 case 200:
  {
   $2291 = $this + 1 | 0;
   HEAP8[$2291 >> 0] = HEAPU8[$2291 >> 0] | 2;
   $$0 = 8;
   return $$0 | 0;
  }
 case 201:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] | 2;
   $$0 = 8;
   return $$0 | 0;
  }
 case 202:
  {
   $2301 = $this + 2 + 1 | 0;
   HEAP8[$2301 >> 0] = HEAPU8[$2301 >> 0] | 2;
   $$0 = 8;
   return $$0 | 0;
  }
 case 203:
  {
   $2306 = $this + 2 | 0;
   HEAP8[$2306 >> 0] = HEAPU8[$2306 >> 0] | 2;
   $$0 = 8;
   return $$0 | 0;
  }
 case 204:
  {
   $2312 = $this + 4 + 1 | 0;
   HEAP8[$2312 >> 0] = HEAPU8[$2312 >> 0] | 2;
   $$0 = 8;
   return $$0 | 0;
  }
 case 205:
  {
   $2317 = $this + 4 | 0;
   HEAP8[$2317 >> 0] = HEAPU8[$2317 >> 0] | 2;
   $$0 = 8;
   return $$0 | 0;
  }
 case 206:
  {
   $2324 = HEAPU16[$this + 4 >> 1] | 0;
   $2326 = $2324 >>> 11;
   $2329 = (HEAP32[$this + 1312 + ($2326 << 3) >> 2] | 0) + ($2324 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2326 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2329 >> 0] = HEAPU8[$2329 >> 0] | 2;
   $$0 = 15;
   return $$0 | 0;
  }
 case 207:
  {
   $2338 = $this + 6 + 1 | 0;
   HEAP8[$2338 >> 0] = HEAPU8[$2338 >> 0] | 2;
   $$0 = 8;
   return $$0 | 0;
  }
 case 208:
  {
   $2343 = $this + 1 | 0;
   HEAP8[$2343 >> 0] = HEAPU8[$2343 >> 0] | 4;
   $$0 = 8;
   return $$0 | 0;
  }
 case 209:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] | 4;
   $$0 = 8;
   return $$0 | 0;
  }
 case 210:
  {
   $2353 = $this + 2 + 1 | 0;
   HEAP8[$2353 >> 0] = HEAPU8[$2353 >> 0] | 4;
   $$0 = 8;
   return $$0 | 0;
  }
 case 211:
  {
   $2358 = $this + 2 | 0;
   HEAP8[$2358 >> 0] = HEAPU8[$2358 >> 0] | 4;
   $$0 = 8;
   return $$0 | 0;
  }
 case 212:
  {
   $2364 = $this + 4 + 1 | 0;
   HEAP8[$2364 >> 0] = HEAPU8[$2364 >> 0] | 4;
   $$0 = 8;
   return $$0 | 0;
  }
 case 213:
  {
   $2369 = $this + 4 | 0;
   HEAP8[$2369 >> 0] = HEAPU8[$2369 >> 0] | 4;
   $$0 = 8;
   return $$0 | 0;
  }
 case 214:
  {
   $2376 = HEAPU16[$this + 4 >> 1] | 0;
   $2378 = $2376 >>> 11;
   $2381 = (HEAP32[$this + 1312 + ($2378 << 3) >> 2] | 0) + ($2376 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2378 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2381 >> 0] = HEAPU8[$2381 >> 0] | 4;
   $$0 = 15;
   return $$0 | 0;
  }
 case 215:
  {
   $2390 = $this + 6 + 1 | 0;
   HEAP8[$2390 >> 0] = HEAPU8[$2390 >> 0] | 4;
   $$0 = 8;
   return $$0 | 0;
  }
 case 216:
  {
   $2395 = $this + 1 | 0;
   HEAP8[$2395 >> 0] = HEAPU8[$2395 >> 0] | 8;
   $$0 = 8;
   return $$0 | 0;
  }
 case 217:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] | 8;
   $$0 = 8;
   return $$0 | 0;
  }
 case 218:
  {
   $2405 = $this + 2 + 1 | 0;
   HEAP8[$2405 >> 0] = HEAPU8[$2405 >> 0] | 8;
   $$0 = 8;
   return $$0 | 0;
  }
 case 219:
  {
   $2410 = $this + 2 | 0;
   HEAP8[$2410 >> 0] = HEAPU8[$2410 >> 0] | 8;
   $$0 = 8;
   return $$0 | 0;
  }
 case 220:
  {
   $2416 = $this + 4 + 1 | 0;
   HEAP8[$2416 >> 0] = HEAPU8[$2416 >> 0] | 8;
   $$0 = 8;
   return $$0 | 0;
  }
 case 221:
  {
   $2421 = $this + 4 | 0;
   HEAP8[$2421 >> 0] = HEAPU8[$2421 >> 0] | 8;
   $$0 = 8;
   return $$0 | 0;
  }
 case 222:
  {
   $2428 = HEAPU16[$this + 4 >> 1] | 0;
   $2430 = $2428 >>> 11;
   $2433 = (HEAP32[$this + 1312 + ($2430 << 3) >> 2] | 0) + ($2428 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2430 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2433 >> 0] = HEAPU8[$2433 >> 0] | 8;
   $$0 = 15;
   return $$0 | 0;
  }
 case 223:
  {
   $2442 = $this + 6 + 1 | 0;
   HEAP8[$2442 >> 0] = HEAPU8[$2442 >> 0] | 8;
   $$0 = 8;
   return $$0 | 0;
  }
 case 224:
  {
   $2447 = $this + 1 | 0;
   HEAP8[$2447 >> 0] = HEAPU8[$2447 >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 225:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 226:
  {
   $2457 = $this + 2 + 1 | 0;
   HEAP8[$2457 >> 0] = HEAPU8[$2457 >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 227:
  {
   $2462 = $this + 2 | 0;
   HEAP8[$2462 >> 0] = HEAPU8[$2462 >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 228:
  {
   $2468 = $this + 4 + 1 | 0;
   HEAP8[$2468 >> 0] = HEAPU8[$2468 >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 229:
  {
   $2473 = $this + 4 | 0;
   HEAP8[$2473 >> 0] = HEAPU8[$2473 >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 230:
  {
   $2480 = HEAPU16[$this + 4 >> 1] | 0;
   $2482 = $2480 >>> 11;
   $2485 = (HEAP32[$this + 1312 + ($2482 << 3) >> 2] | 0) + ($2480 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2482 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2485 >> 0] = HEAPU8[$2485 >> 0] | 16;
   $$0 = 15;
   return $$0 | 0;
  }
 case 231:
  {
   $2494 = $this + 6 + 1 | 0;
   HEAP8[$2494 >> 0] = HEAPU8[$2494 >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 232:
  {
   $2499 = $this + 1 | 0;
   HEAP8[$2499 >> 0] = HEAPU8[$2499 >> 0] | 32;
   $$0 = 8;
   return $$0 | 0;
  }
 case 233:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] | 32;
   $$0 = 8;
   return $$0 | 0;
  }
 case 234:
  {
   $2509 = $this + 2 + 1 | 0;
   HEAP8[$2509 >> 0] = HEAPU8[$2509 >> 0] | 32;
   $$0 = 8;
   return $$0 | 0;
  }
 case 235:
  {
   $2514 = $this + 2 | 0;
   HEAP8[$2514 >> 0] = HEAPU8[$2514 >> 0] | 32;
   $$0 = 8;
   return $$0 | 0;
  }
 case 236:
  {
   $2520 = $this + 4 + 1 | 0;
   HEAP8[$2520 >> 0] = HEAPU8[$2520 >> 0] | 32;
   $$0 = 8;
   return $$0 | 0;
  }
 case 237:
  {
   $2525 = $this + 4 | 0;
   HEAP8[$2525 >> 0] = HEAPU8[$2525 >> 0] | 32;
   $$0 = 8;
   return $$0 | 0;
  }
 case 238:
  {
   $2532 = HEAPU16[$this + 4 >> 1] | 0;
   $2534 = $2532 >>> 11;
   $2537 = (HEAP32[$this + 1312 + ($2534 << 3) >> 2] | 0) + ($2532 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2534 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2537 >> 0] = HEAPU8[$2537 >> 0] | 32;
   $$0 = 15;
   return $$0 | 0;
  }
 case 239:
  {
   $2546 = $this + 6 + 1 | 0;
   HEAP8[$2546 >> 0] = HEAPU8[$2546 >> 0] | 32;
   $$0 = 8;
   return $$0 | 0;
  }
 case 240:
  {
   $2551 = $this + 1 | 0;
   HEAP8[$2551 >> 0] = HEAPU8[$2551 >> 0] | 64;
   $$0 = 8;
   return $$0 | 0;
  }
 case 241:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] | 64;
   $$0 = 8;
   return $$0 | 0;
  }
 case 242:
  {
   $2561 = $this + 2 + 1 | 0;
   HEAP8[$2561 >> 0] = HEAPU8[$2561 >> 0] | 64;
   $$0 = 8;
   return $$0 | 0;
  }
 case 243:
  {
   $2566 = $this + 2 | 0;
   HEAP8[$2566 >> 0] = HEAPU8[$2566 >> 0] | 64;
   $$0 = 8;
   return $$0 | 0;
  }
 case 244:
  {
   $2572 = $this + 4 + 1 | 0;
   HEAP8[$2572 >> 0] = HEAPU8[$2572 >> 0] | 64;
   $$0 = 8;
   return $$0 | 0;
  }
 case 245:
  {
   $2577 = $this + 4 | 0;
   HEAP8[$2577 >> 0] = HEAPU8[$2577 >> 0] | 64;
   $$0 = 8;
   return $$0 | 0;
  }
 case 246:
  {
   $2584 = HEAPU16[$this + 4 >> 1] | 0;
   $2586 = $2584 >>> 11;
   $2589 = (HEAP32[$this + 1312 + ($2586 << 3) >> 2] | 0) + ($2584 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2586 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2589 >> 0] = HEAPU8[$2589 >> 0] | 64;
   $$0 = 15;
   return $$0 | 0;
  }
 case 247:
  {
   $2598 = $this + 6 + 1 | 0;
   HEAP8[$2598 >> 0] = HEAPU8[$2598 >> 0] | 64;
   $$0 = 8;
   return $$0 | 0;
  }
 case 248:
  {
   $2603 = $this + 1 | 0;
   HEAP8[$2603 >> 0] = HEAPU8[$2603 >> 0] | 128;
   $$0 = 8;
   return $$0 | 0;
  }
 case 249:
  {
   HEAP8[$this >> 0] = HEAPU8[$this >> 0] | 128;
   $$0 = 8;
   return $$0 | 0;
  }
 case 250:
  {
   $2613 = $this + 2 + 1 | 0;
   HEAP8[$2613 >> 0] = HEAPU8[$2613 >> 0] | 128;
   $$0 = 8;
   return $$0 | 0;
  }
 case 251:
  {
   $2618 = $this + 2 | 0;
   HEAP8[$2618 >> 0] = HEAPU8[$2618 >> 0] | 128;
   $$0 = 8;
   return $$0 | 0;
  }
 case 252:
  {
   $2624 = $this + 4 + 1 | 0;
   HEAP8[$2624 >> 0] = HEAPU8[$2624 >> 0] | 128;
   $$0 = 8;
   return $$0 | 0;
  }
 case 253:
  {
   $2629 = $this + 4 | 0;
   HEAP8[$2629 >> 0] = HEAPU8[$2629 >> 0] | 128;
   $$0 = 8;
   return $$0 | 0;
  }
 case 254:
  {
   $2636 = HEAPU16[$this + 4 >> 1] | 0;
   $2638 = $2636 >>> 11;
   $2641 = (HEAP32[$this + 1312 + ($2638 << 3) >> 2] | 0) + ($2636 & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($2638 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[$2641 >> 0] = HEAPU8[$2641 >> 0] | 128;
   $$0 = 15;
   return $$0 | 0;
  }
 case 255:
  {
   $2650 = $this + 6 + 1 | 0;
   HEAP8[$2650 >> 0] = HEAPU8[$2650 >> 0] | 128;
   $$0 = 8;
   return $$0 | 0;
  }
 default:
  {}
 } while (0);
 return 0;
}

function __ZN4yakc3z8010do_op_0xfdEh($this, $op) {
 $this = $this | 0;
 $op = $op | 0;
 var $$0 = 0, $1 = 0, $1001 = 0, $1012 = 0, $1020 = 0, $1021 = 0, $1023 = 0, $1034 = 0, $1042 = 0, $1043 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $105 = 0, $1050 = 0, $1052 = 0, $1063 = 0, $107 = 0, $1074 = 0, $1075 = 0, $1078 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1086 = 0, $1088 = 0, $1099 = 0, $1108 = 0, $1110 = 0, $1121 = 0, $1130 = 0, $1131 = 0, $1134 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $1142 = 0, $1144 = 0, $1155 = 0, $1164 = 0, $1166 = 0, $1177 = 0, $1184 = 0, $1185 = 0, $1187 = 0, $1198 = 0, $1206 = 0, $1207 = 0, $121 = 0, $1210 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1218 = 0, $1220 = 0, $1231 = 0, $1240 = 0, $1242 = 0, $125 = 0, $1253 = 0, $1263 = 0, $1264 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1271 = 0, $1273 = 0, $128 = 0, $1284 = 0, $1294 = 0, $1295 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $130 = 0, $1302 = 0, $1304 = 0, $1315 = 0, $1323 = 0, $1324 = 0, $1326 = 0, $133 = 0, $1337 = 0, $1345 = 0, $1346 = 0, $1348 = 0, $1349 = 0, $1350 = 0, $1353 = 0, $1355 = 0, $1366 = 0, $1377 = 0, $1378 = 0, $1381 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1389 = 0, $1391 = 0, $1402 = 0, $1411 = 0, $1413 = 0, $1424 = 0, $1433 = 0, $1434 = 0, $1437 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1445 = 0, $1447 = 0, $1458 = 0, $1467 = 0, $1469 = 0, $1480 = 0, $1487 = 0, $1488 = 0, $1490 = 0, $1501 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1513 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1521 = 0, $1523 = 0, $1534 = 0, $154 = 0, $1543 = 0, $1545 = 0, $1556 = 0, $156 = 0, $1566 = 0, $1567 = 0, $1569 = 0, $1578 = 0, $1579 = 0, $1581 = 0, $1588 = 0, $1589 = 0, $1591 = 0, $1602 = 0, $1610 = 0, $1611 = 0, $1613 = 0, $162 = 0, $1623 = 0, $1624 = 0, $1626 = 0, $1632 = 0, $1633 = 0, $1635 = 0, $1639 = 0, $1640 = 0, $1642 = 0, $1653 = 0, $1661 = 0, $1662 = 0, $1664 = 0, $1671 = 0, $1672 = 0, $1674 = 0, $1680 = 0, $1681 = 0, $1683 = 0, $1687 = 0, $1688 = 0, $1690 = 0, $170 = 0, $1701 = 0, $1709 = 0, $1710 = 0, $1712 = 0, $1719 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1727 = 0, $1729 = 0, $1740 = 0, $1749 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1757 = 0, $1759 = 0, $176 = 0, $177 = 0, $1770 = 0, $1777 = 0, $1778 = 0, $1780 = 0, $179 = 0, $1791 = 0, $1799 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1807 = 0, $1809 = 0, $1820 = 0, $1828 = 0, $1830 = 0, $1837 = 0, $1855 = 0, $1857 = 0, $1860 = 0, $1862 = 0, $1863 = 0, $1865 = 0, $1866 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $188 = 0, $1888 = 0, $1890 = 0, $1891 = 0, $1894 = 0, $1896 = 0, $190 = 0, $1907 = 0, $192 = 0, $1927 = 0, $196 = 0, $2 = 0, $205 = 0, $207 = 0, $214 = 0, $222 = 0, $225 = 0, $232 = 0, $24 = 0, $248 = 0, $25 = 0, $251 = 0, $254 = 0, $256 = 0, $259 = 0, $27 = 0, $270 = 0, $276 = 0, $279 = 0, $281 = 0, $287 = 0, $295 = 0, $3 = 0, $30 = 0, $301 = 0, $302 = 0, $304 = 0, $31 = 0, $312 = 0, $313 = 0, $315 = 0, $326 = 0, $329 = 0, $332 = 0, $335 = 0, $337 = 0, $340 = 0, $351 = 0, $360 = 0, $361 = 0, $363 = 0, $374 = 0, $377 = 0, $380 = 0, $383 = 0, $385 = 0, $391 = 0, $399 = 0, $408 = 0, $409 = 0, $410 = 0, $411 = 0, $422 = 0, $424 = 0, $426 = 0, $440 = 0, $441 = 0, $443 = 0, $446 = 0, $447 = 0, $48 = 0, $480 = 0, $481 = 0, $483 = 0, $494 = 0, $50 = 0, $519 = 0, $520 = 0, $522 = 0, $533 = 0, $551 = 0, $563 = 0, $564 = 0, $566 = 0, $57 = 0, $577 = 0, $597 = 0, $6 = 0, $607 = 0, $608 = 0, $610 = 0, $621 = 0, $650 = 0, $653 = 0, $654 = 0, $656 = 0, $667 = 0, $694 = 0, $697 = 0, $698 = 0, $7 = 0, $700 = 0, $711 = 0, $724 = 0, $725 = 0, $727 = 0, $73 = 0, $738 = 0, $740 = 0, $75 = 0, $750 = 0, $751 = 0, $753 = 0, $764 = 0, $766 = 0, $775 = 0, $776 = 0, $778 = 0, $789 = 0, $791 = 0, $802 = 0, $803 = 0, $805 = 0, $816 = 0, $818 = 0, $82 = 0, $828 = 0, $829 = 0, $831 = 0, $842 = 0, $844 = 0, $855 = 0, $856 = 0, $858 = 0, $869 = 0, $871 = 0, $881 = 0, $882 = 0, $884 = 0, $895 = 0, $897 = 0, $90 = 0, $93 = 0, $933 = 0, $934 = 0, $936 = 0, $947 = 0, $95 = 0, $96 = 0, $960 = 0, $961 = 0, $963 = 0, $964 = 0, $965 = 0, $968 = 0, $970 = 0, $981 = 0, $991 = 0, $992 = 0, $994 = 0, $995 = 0, $996 = 0, $999 = 0, $f$0$i = 0, $f$0$i$i = 0, $f$0$i$i$i = 0, $f$0$i$i$i20 = 0, $f$0$i$i$i32 = 0, $f$0$i$i10 = 0, $f$0$i$i4 = 0, $f$0$i$i40 = 0, $f$0$i$i45 = 0, $f$0$i$i51 = 0, $f$0$i$i59 = 0, $f$0$i$i68 = 0, $f$0$i$i78 = 0, $f$0$i106 = 0, $f$0$i110 = 0, $f$0$i114 = 0, $f$0$i118 = 0, $f$0$i123 = 0, $f$0$i127 = 0, $f$0$i16 = 0, $f$0$i28 = 0, $f$0$i56 = 0, $f$0$i65 = 0, $f$0$i75 = 0, $f$0$i85 = 0, $f$0$i88 = 0, $f$0$i93 = 0, $f$1$i = 0, $f$1$i$i = 0, $f$1$i$i$i = 0, $f$1$i$i$i21 = 0, $f$1$i$i$i33 = 0, $f$1$i$i11 = 0, $f$1$i$i41 = 0, $f$1$i$i46 = 0, $f$1$i$i5 = 0, $f$1$i$i52 = 0, $f$1$i$i60 = 0, $f$1$i$i69 = 0, $f$1$i$i79 = 0, $f$1$i107 = 0, $f$1$i111 = 0, $f$1$i115 = 0, $f$1$i119 = 0, $f$1$i124 = 0, $f$1$i128 = 0, $f$1$i17 = 0, $f$1$i29 = 0, $f$1$i57 = 0, $f$1$i66 = 0, $f$1$i76 = 0, $f$1$i86 = 0, $f$1$i89 = 0, $f$1$i94 = 0, $f$2$i = 0, $f$2$i$i = 0, $f$2$i$i13 = 0, $f$2$i$i43 = 0, $f$2$i$i48 = 0, $f$2$i$i54 = 0, $f$2$i$i7 = 0, $f$2$i91 = 0, $f$2$i96 = 0, $storemerge$in$i = 0, $storemerge$in$i24 = 0, $storemerge$in$i36 = 0, $storemerge$in$i63 = 0, $storemerge$in$i72 = 0, $storemerge$in$i82 = 0, $storemerge1$i = 0, $storemerge1$i23 = 0, $storemerge1$i35 = 0, $storemerge1$i62 = 0, $storemerge1$i71 = 0, $storemerge1$i81 = 0;
 do switch ($op & 255 | 0) {
 case 9:
  {
   $1 = $this + 10 | 0;
   $2 = HEAP16[$1 >> 1] | 0;
   $3 = HEAP16[$this >> 1] | 0;
   $6 = ($3 & 65535) + ($2 & 65535) | 0;
   $7 = $this + 6 | 0;
   HEAP8[$7 >> 0] = HEAPU8[$7 >> 0] & 196 | $6 >>> 16 | $6 >>> 8 & 40 | (($3 ^ $2) & 65535 ^ $6) >>> 8 & 16;
   HEAP16[$1 >> 1] = $6;
   $$0 = 15;
   return $$0 | 0;
  }
 case 25:
  {
   $24 = $this + 10 | 0;
   $25 = HEAP16[$24 >> 1] | 0;
   $27 = HEAP16[$this + 2 >> 1] | 0;
   $30 = ($27 & 65535) + ($25 & 65535) | 0;
   $31 = $this + 6 | 0;
   HEAP8[$31 >> 0] = HEAPU8[$31 >> 0] & 196 | $30 >>> 16 | $30 >>> 8 & 40 | (($27 ^ $25) & 65535 ^ $30) >>> 8 & 16;
   HEAP16[$24 >> 1] = $30;
   $$0 = 15;
   return $$0 | 0;
  }
 case 33:
  {
   $48 = $this + 22 | 0;
   $50 = HEAPU16[$48 >> 1] | 0;
   $57 = $50 + 1 | 0;
   HEAP16[$this + 10 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($57 >>> 11 & 31) << 3) >> 2] | 0) + ($57 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($50 >>> 11 << 3) >> 2] | 0) + ($50 & 2047) >> 0];
   HEAP16[$48 >> 1] = $50 + 2;
   $$0 = 14;
   return $$0 | 0;
  }
 case 34:
  {
   $73 = $this + 22 | 0;
   $75 = HEAPU16[$73 >> 1] | 0;
   $82 = $75 + 1 | 0;
   $90 = HEAPU8[(HEAP32[$this + 1312 + (($82 >>> 11 & 31) << 3) >> 2] | 0) + ($82 & 2047) >> 0] | 0;
   $93 = $90 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($75 >>> 11 << 3) >> 2] | 0) + ($75 & 2047) >> 0];
   $95 = HEAP16[$this + 10 >> 1] | 0;
   $96 = $90 >>> 3;
   if (HEAP8[$this + 1312 + ($96 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($96 << 3) >> 2] | 0) + ($93 & 2047) >> 0] = $95;
   $105 = $93 + 1 | 0;
   $107 = $105 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($107 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($107 << 3) >> 2] | 0) + ($105 & 2047) >> 0] = ($95 & 65535) >>> 8;
   HEAP16[$73 >> 1] = (HEAPU16[$73 >> 1] | 0) + 2;
   $$0 = 20;
   return $$0 | 0;
  }
 case 35:
  {
   $121 = $this + 10 | 0;
   HEAP16[$121 >> 1] = (HEAP16[$121 >> 1] | 0) + 1 << 16 >> 16;
   $$0 = 10;
   return $$0 | 0;
  }
 case 36:
  {
   $125 = $this + 10 + 1 | 0;
   $128 = (HEAPU8[$125 >> 0] | 0) + 1 | 0;
   $130 = $128 & 255;
   $133 = ($130 | 0) == 0 ? 64 : $128 & 128;
   if (!($128 & 15)) $f$0$i127 = ($133 & 255 | 16) & 255; else $f$0$i127 = $133;
   if (($130 | 0) == 128) $f$1$i128 = ($f$0$i127 & 255 | 4) & 255; else $f$1$i128 = $f$0$i127;
   $144 = $this + 6 | 0;
   HEAP8[$144 >> 0] = HEAPU8[$144 >> 0] & 1 | $f$1$i128 & 255;
   HEAP8[$125 >> 0] = $128;
   $$0 = 8;
   return $$0 | 0;
  }
 case 37:
  {
   $151 = $this + 10 + 1 | 0;
   $154 = (HEAPU8[$151 >> 0] | 0) + 255 | 0;
   $156 = $154 & 255;
   if (!$156) $162 = 66; else $162 = ($154 & 128 | 2) & 255;
   if (($154 & 15 | 0) == 15) $f$0$i123 = ($162 & 255 | 16) & 255; else $f$0$i123 = $162;
   if (($156 | 0) == 127) $f$1$i124 = ($f$0$i123 & 255 | 4) & 255; else $f$1$i124 = $f$0$i123;
   $170 = $this + 6 | 0;
   HEAP8[$170 >> 0] = HEAPU8[$170 >> 0] & 1 | $f$1$i124 & 255;
   HEAP8[$151 >> 0] = $154;
   $$0 = 8;
   return $$0 | 0;
  }
 case 38:
  {
   $176 = $this + 22 | 0;
   $177 = HEAP16[$176 >> 1] | 0;
   HEAP16[$176 >> 1] = $177 + 1 << 16 >> 16;
   $179 = $177 & 65535;
   HEAP8[$this + 10 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($179 >>> 11 << 3) >> 2] | 0) + ($179 & 2047) >> 0] | 0;
   $$0 = 11;
   return $$0 | 0;
  }
 case 41:
  {
   $188 = $this + 10 | 0;
   $190 = HEAPU16[$188 >> 1] | 0;
   $192 = $this + 6 | 0;
   $196 = $190 >>> 7;
   HEAP8[$192 >> 0] = $196 & 40 | $190 >>> 15 | $196 & 16 | HEAPU8[$192 >> 0] & 196;
   HEAP16[$188 >> 1] = $190 << 1;
   $$0 = 15;
   return $$0 | 0;
  }
 case 42:
  {
   $205 = $this + 22 | 0;
   $207 = HEAPU16[$205 >> 1] | 0;
   $214 = $207 + 1 | 0;
   $222 = HEAPU8[(HEAP32[$this + 1312 + (($214 >>> 11 & 31) << 3) >> 2] | 0) + ($214 & 2047) >> 0] | 0;
   $225 = $222 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($207 >>> 11 << 3) >> 2] | 0) + ($207 & 2047) >> 0];
   $232 = $225 + 1 | 0;
   HEAP16[$this + 10 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($232 >>> 11 & 31) << 3) >> 2] | 0) + ($232 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($222 >>> 3 << 3) >> 2] | 0) + ($225 & 2047) >> 0];
   HEAP16[$205 >> 1] = $207 + 2;
   $$0 = 20;
   return $$0 | 0;
  }
 case 43:
  {
   $248 = $this + 10 | 0;
   HEAP16[$248 >> 1] = (HEAP16[$248 >> 1] | 0) + -1 << 16 >> 16;
   $$0 = 10;
   return $$0 | 0;
  }
 case 44:
  {
   $251 = $this + 10 | 0;
   $254 = (HEAPU8[$251 >> 0] | 0) + 1 | 0;
   $256 = $254 & 255;
   $259 = ($256 | 0) == 0 ? 64 : $254 & 128;
   if (!($254 & 15)) $f$0$i118 = ($259 & 255 | 16) & 255; else $f$0$i118 = $259;
   if (($256 | 0) == 128) $f$1$i119 = ($f$0$i118 & 255 | 4) & 255; else $f$1$i119 = $f$0$i118;
   $270 = $this + 6 | 0;
   HEAP8[$270 >> 0] = HEAPU8[$270 >> 0] & 1 | $f$1$i119 & 255;
   HEAP8[$251 >> 0] = $254;
   $$0 = 8;
   return $$0 | 0;
  }
 case 45:
  {
   $276 = $this + 10 | 0;
   $279 = (HEAPU8[$276 >> 0] | 0) + 255 | 0;
   $281 = $279 & 255;
   if (!$281) $287 = 66; else $287 = ($279 & 128 | 2) & 255;
   if (($279 & 15 | 0) == 15) $f$0$i114 = ($287 & 255 | 16) & 255; else $f$0$i114 = $287;
   if (($281 | 0) == 127) $f$1$i115 = ($f$0$i114 & 255 | 4) & 255; else $f$1$i115 = $f$0$i114;
   $295 = $this + 6 | 0;
   HEAP8[$295 >> 0] = HEAPU8[$295 >> 0] & 1 | $f$1$i115 & 255;
   HEAP8[$276 >> 0] = $279;
   $$0 = 8;
   return $$0 | 0;
  }
 case 46:
  {
   $301 = $this + 22 | 0;
   $302 = HEAP16[$301 >> 1] | 0;
   HEAP16[$301 >> 1] = $302 + 1 << 16 >> 16;
   $304 = $302 & 65535;
   HEAP8[$this + 10 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($304 >>> 11 << 3) >> 2] | 0) + ($304 & 2047) >> 0] | 0;
   $$0 = 11;
   return $$0 | 0;
  }
 case 52:
  {
   $312 = $this + 22 | 0;
   $313 = HEAP16[$312 >> 1] | 0;
   HEAP16[$312 >> 1] = $313 + 1 << 16 >> 16;
   $315 = $313 & 65535;
   $326 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($315 >>> 11 << 3) >> 2] | 0) + ($315 & 2047) >> 0] | 0) | 0;
   $329 = $326 >>> 11 & 31;
   $332 = (HEAP32[$this + 1312 + ($329 << 3) >> 2] | 0) + ($326 & 2047) | 0;
   $335 = (HEAPU8[$332 >> 0] | 0) + 1 | 0;
   $337 = $335 & 255;
   $340 = ($337 | 0) == 0 ? 64 : $335 & 128;
   if (!($335 & 15)) $f$0$i110 = ($340 & 255 | 16) & 255; else $f$0$i110 = $340;
   if (($337 | 0) == 128) $f$1$i111 = ($f$0$i110 & 255 | 4) & 255; else $f$1$i111 = $f$0$i110;
   $351 = $this + 6 | 0;
   HEAP8[$351 >> 0] = HEAPU8[$351 >> 0] & 1 | $f$1$i111 & 255;
   if (!(HEAP8[$this + 1312 + ($329 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[$332 >> 0] = $335;
   $$0 = 23;
   return $$0 | 0;
  }
 case 53:
  {
   $360 = $this + 22 | 0;
   $361 = HEAP16[$360 >> 1] | 0;
   HEAP16[$360 >> 1] = $361 + 1 << 16 >> 16;
   $363 = $361 & 65535;
   $374 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($363 >>> 11 << 3) >> 2] | 0) + ($363 & 2047) >> 0] | 0) | 0;
   $377 = $374 >>> 11 & 31;
   $380 = (HEAP32[$this + 1312 + ($377 << 3) >> 2] | 0) + ($374 & 2047) | 0;
   $383 = (HEAPU8[$380 >> 0] | 0) + 255 | 0;
   $385 = $383 & 255;
   if (!$385) $391 = 66; else $391 = ($383 & 128 | 2) & 255;
   if (($383 & 15 | 0) == 15) $f$0$i106 = ($391 & 255 | 16) & 255; else $f$0$i106 = $391;
   if (($385 | 0) == 127) $f$1$i107 = ($f$0$i106 & 255 | 4) & 255; else $f$1$i107 = $f$0$i106;
   $399 = $this + 6 | 0;
   HEAP8[$399 >> 0] = HEAPU8[$399 >> 0] & 1 | $f$1$i107 & 255;
   if (!(HEAP8[$this + 1312 + ($377 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[$380 >> 0] = $383;
   $$0 = 23;
   return $$0 | 0;
  }
 case 54:
  {
   $408 = $this + 22 | 0;
   $409 = HEAP16[$408 >> 1] | 0;
   $410 = $409 + 1 << 16 >> 16;
   HEAP16[$408 >> 1] = $410;
   $411 = $409 & 65535;
   $422 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($411 >>> 11 << 3) >> 2] | 0) + ($411 & 2047) >> 0] | 0) | 0;
   HEAP16[$408 >> 1] = $409 + 2 << 16 >> 16;
   $424 = $410 & 65535;
   $426 = $422 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($426 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($426 << 3) >> 2] | 0) + ($422 & 2047) >> 0] = HEAP8[(HEAP32[$this + 1312 + ($424 >>> 11 << 3) >> 2] | 0) + ($424 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 57:
  {
   $440 = $this + 10 | 0;
   $441 = HEAP16[$440 >> 1] | 0;
   $443 = HEAP16[$this + 12 >> 1] | 0;
   $446 = ($443 & 65535) + ($441 & 65535) | 0;
   $447 = $this + 6 | 0;
   HEAP8[$447 >> 0] = HEAPU8[$447 >> 0] & 196 | $446 >>> 16 | $446 >>> 8 & 40 | (($443 ^ $441) & 65535 ^ $446) >>> 8 & 16;
   HEAP16[$440 >> 1] = $446;
   $$0 = 15;
   return $$0 | 0;
  }
 case 65:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 66:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 67:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 68:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 10 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 69:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 10 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 70:
  {
   $480 = $this + 22 | 0;
   $481 = HEAP16[$480 >> 1] | 0;
   HEAP16[$480 >> 1] = $481 + 1 << 16 >> 16;
   $483 = $481 & 65535;
   $494 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($483 >>> 11 << 3) >> 2] | 0) + ($483 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($494 >>> 11 & 31) << 3) >> 2] | 0) + ($494 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 71:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 72:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 74:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 75:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 76:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 10 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 77:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 10 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 78:
  {
   $519 = $this + 22 | 0;
   $520 = HEAP16[$519 >> 1] | 0;
   HEAP16[$519 >> 1] = $520 + 1 << 16 >> 16;
   $522 = $520 & 65535;
   $533 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($522 >>> 11 << 3) >> 2] | 0) + ($522 & 2047) >> 0] | 0) | 0;
   HEAP8[$this >> 0] = HEAP8[(HEAP32[$this + 1312 + (($533 >>> 11 & 31) << 3) >> 2] | 0) + ($533 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 79:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 80:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 81:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 83:
  {
   $551 = $this + 2 | 0;
   HEAP8[$551 + 1 >> 0] = HEAP8[$551 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 84:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 10 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 85:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 10 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 86:
  {
   $563 = $this + 22 | 0;
   $564 = HEAP16[$563 >> 1] | 0;
   HEAP16[$563 >> 1] = $564 + 1 << 16 >> 16;
   $566 = $564 & 65535;
   $577 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($566 >>> 11 << 3) >> 2] | 0) + ($566 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($577 >>> 11 & 31) << 3) >> 2] | 0) + ($577 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 87:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 88:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 89:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 90:
  {
   $597 = $this + 2 | 0;
   HEAP8[$597 >> 0] = HEAP8[$597 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 92:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 10 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 93:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 10 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 94:
  {
   $607 = $this + 22 | 0;
   $608 = HEAP16[$607 >> 1] | 0;
   HEAP16[$607 >> 1] = $608 + 1 << 16 >> 16;
   $610 = $608 & 65535;
   $621 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($610 >>> 11 << 3) >> 2] | 0) + ($610 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 2 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($621 >>> 11 & 31) << 3) >> 2] | 0) + ($621 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 95:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 96:
  {
   HEAP8[$this + 10 + 1 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 97:
  {
   HEAP8[$this + 10 + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 98:
  {
   HEAP8[$this + 10 + 1 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 99:
  {
   HEAP8[$this + 10 + 1 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 101:
  {
   $650 = $this + 10 | 0;
   HEAP8[$650 + 1 >> 0] = HEAP8[$650 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 102:
  {
   $653 = $this + 22 | 0;
   $654 = HEAP16[$653 >> 1] | 0;
   HEAP16[$653 >> 1] = $654 + 1 << 16 >> 16;
   $656 = $654 & 65535;
   $667 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($656 >>> 11 << 3) >> 2] | 0) + ($656 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 4 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($667 >>> 11 & 31) << 3) >> 2] | 0) + ($667 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 103:
  {
   HEAP8[$this + 10 + 1 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 104:
  {
   HEAP8[$this + 10 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 105:
  {
   HEAP8[$this + 10 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 106:
  {
   HEAP8[$this + 10 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 107:
  {
   HEAP8[$this + 10 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 108:
  {
   $694 = $this + 10 | 0;
   HEAP8[$694 >> 0] = HEAP8[$694 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 110:
  {
   $697 = $this + 22 | 0;
   $698 = HEAP16[$697 >> 1] | 0;
   HEAP16[$697 >> 1] = $698 + 1 << 16 >> 16;
   $700 = $698 & 65535;
   $711 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($700 >>> 11 << 3) >> 2] | 0) + ($700 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 4 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($711 >>> 11 & 31) << 3) >> 2] | 0) + ($711 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 111:
  {
   HEAP8[$this + 10 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 112:
  {
   $724 = $this + 22 | 0;
   $725 = HEAP16[$724 >> 1] | 0;
   HEAP16[$724 >> 1] = $725 + 1 << 16 >> 16;
   $727 = $725 & 65535;
   $738 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($727 >>> 11 << 3) >> 2] | 0) + ($727 & 2047) >> 0] | 0) | 0;
   $740 = $738 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($740 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($740 << 3) >> 2] | 0) + ($738 & 2047) >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 113:
  {
   $750 = $this + 22 | 0;
   $751 = HEAP16[$750 >> 1] | 0;
   HEAP16[$750 >> 1] = $751 + 1 << 16 >> 16;
   $753 = $751 & 65535;
   $764 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($753 >>> 11 << 3) >> 2] | 0) + ($753 & 2047) >> 0] | 0) | 0;
   $766 = $764 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($766 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($766 << 3) >> 2] | 0) + ($764 & 2047) >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 114:
  {
   $775 = $this + 22 | 0;
   $776 = HEAP16[$775 >> 1] | 0;
   HEAP16[$775 >> 1] = $776 + 1 << 16 >> 16;
   $778 = $776 & 65535;
   $789 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($778 >>> 11 << 3) >> 2] | 0) + ($778 & 2047) >> 0] | 0) | 0;
   $791 = $789 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($791 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($791 << 3) >> 2] | 0) + ($789 & 2047) >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 115:
  {
   $802 = $this + 22 | 0;
   $803 = HEAP16[$802 >> 1] | 0;
   HEAP16[$802 >> 1] = $803 + 1 << 16 >> 16;
   $805 = $803 & 65535;
   $816 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($805 >>> 11 << 3) >> 2] | 0) + ($805 & 2047) >> 0] | 0) | 0;
   $818 = $816 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($818 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($818 << 3) >> 2] | 0) + ($816 & 2047) >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 116:
  {
   $828 = $this + 22 | 0;
   $829 = HEAP16[$828 >> 1] | 0;
   HEAP16[$828 >> 1] = $829 + 1 << 16 >> 16;
   $831 = $829 & 65535;
   $842 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($831 >>> 11 << 3) >> 2] | 0) + ($831 & 2047) >> 0] | 0) | 0;
   $844 = $842 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($844 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($844 << 3) >> 2] | 0) + ($842 & 2047) >> 0] = HEAP8[$this + 4 + 1 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 117:
  {
   $855 = $this + 22 | 0;
   $856 = HEAP16[$855 >> 1] | 0;
   HEAP16[$855 >> 1] = $856 + 1 << 16 >> 16;
   $858 = $856 & 65535;
   $869 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($858 >>> 11 << 3) >> 2] | 0) + ($858 & 2047) >> 0] | 0) | 0;
   $871 = $869 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($871 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($871 << 3) >> 2] | 0) + ($869 & 2047) >> 0] = HEAP8[$this + 4 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 119:
  {
   $881 = $this + 22 | 0;
   $882 = HEAP16[$881 >> 1] | 0;
   HEAP16[$881 >> 1] = $882 + 1 << 16 >> 16;
   $884 = $882 & 65535;
   $895 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($884 >>> 11 << 3) >> 2] | 0) + ($884 & 2047) >> 0] | 0) | 0;
   $897 = $895 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($897 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($897 << 3) >> 2] | 0) + ($895 & 2047) >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 120:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 121:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 122:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 123:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 124:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 10 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 125:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 10 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 126:
  {
   $933 = $this + 22 | 0;
   $934 = HEAP16[$933 >> 1] | 0;
   HEAP16[$933 >> 1] = $934 + 1 << 16 >> 16;
   $936 = $934 & 65535;
   $947 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($936 >>> 11 << 3) >> 2] | 0) + ($936 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($947 >>> 11 & 31) << 3) >> 2] | 0) + ($947 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 132:
  {
   $960 = $this + 6 | 0;
   $961 = $960 + 1 | 0;
   $963 = HEAPU8[$961 >> 0] | 0;
   $964 = HEAPU8[$this + 10 + 1 >> 0] | 0;
   $965 = $963 + $964 | 0;
   $968 = $965 & 128;
   $970 = $965 & 255 | 0 ? $968 & 255 : 64;
   if ($965 >>> 0 > 255) $f$0$i93 = ($970 & 255 | 1) & 255; else $f$0$i93 = $970;
   if (($965 & 15) >>> 0 < ($963 & 15) >>> 0) $f$1$i94 = ($f$0$i93 & 255 | 16) & 255; else $f$1$i94 = $f$0$i93;
   $981 = $963 & 128;
   if (($981 | 0) != ($964 & 128 | 0) | ($968 | 0) == ($981 | 0)) $f$2$i96 = $f$1$i94; else $f$2$i96 = ($f$1$i94 & 255 | 4) & 255;
   HEAP8[$960 >> 0] = $f$2$i96;
   HEAP8[$961 >> 0] = $965;
   $$0 = 8;
   return $$0 | 0;
  }
 case 133:
  {
   $991 = $this + 6 | 0;
   $992 = $991 + 1 | 0;
   $994 = HEAPU8[$992 >> 0] | 0;
   $995 = HEAPU8[$this + 10 >> 0] | 0;
   $996 = $994 + $995 | 0;
   $999 = $996 & 128;
   $1001 = $996 & 255 | 0 ? $999 & 255 : 64;
   if ($996 >>> 0 > 255) $f$0$i88 = ($1001 & 255 | 1) & 255; else $f$0$i88 = $1001;
   if (($996 & 15) >>> 0 < ($994 & 15) >>> 0) $f$1$i89 = ($f$0$i88 & 255 | 16) & 255; else $f$1$i89 = $f$0$i88;
   $1012 = $994 & 128;
   if (($1012 | 0) != ($995 & 128 | 0) | ($999 | 0) == ($1012 | 0)) $f$2$i91 = $f$1$i89; else $f$2$i91 = ($f$1$i89 & 255 | 4) & 255;
   HEAP8[$991 >> 0] = $f$2$i91;
   HEAP8[$992 >> 0] = $996;
   $$0 = 8;
   return $$0 | 0;
  }
 case 134:
  {
   $1020 = $this + 22 | 0;
   $1021 = HEAP16[$1020 >> 1] | 0;
   HEAP16[$1020 >> 1] = $1021 + 1 << 16 >> 16;
   $1023 = $1021 & 65535;
   $1034 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1023 >>> 11 << 3) >> 2] | 0) + ($1023 & 2047) >> 0] | 0) | 0;
   $1042 = $this + 6 | 0;
   $1043 = $1042 + 1 | 0;
   $1045 = HEAPU8[$1043 >> 0] | 0;
   $1046 = HEAPU8[(HEAP32[$this + 1312 + (($1034 >>> 11 & 31) << 3) >> 2] | 0) + ($1034 & 2047) >> 0] | 0;
   $1047 = $1045 + $1046 | 0;
   $1050 = $1047 & 128;
   $1052 = $1047 & 255 | 0 ? $1050 & 255 : 64;
   if ($1047 >>> 0 > 255) $f$0$i85 = ($1052 & 255 | 1) & 255; else $f$0$i85 = $1052;
   if (($1047 & 15) >>> 0 < ($1045 & 15) >>> 0) $f$1$i86 = ($f$0$i85 & 255 | 16) & 255; else $f$1$i86 = $f$0$i85;
   $1063 = $1045 & 128;
   if (($1063 | 0) != ($1046 & 128 | 0) | ($1050 | 0) == ($1063 | 0)) $f$2$i = $f$1$i86; else $f$2$i = ($f$1$i86 & 255 | 4) & 255;
   HEAP8[$1042 >> 0] = $f$2$i;
   HEAP8[$1043 >> 0] = $1047;
   $$0 = 19;
   return $$0 | 0;
  }
 case 140:
  {
   $1074 = $this + 6 | 0;
   $1075 = HEAP16[$1074 >> 1] | 0;
   $1078 = $1074 + 1 | 0;
   $1080 = ($1075 & 65535) >>> 8 & 65535;
   $1081 = HEAPU8[$this + 10 + 1 >> 0] | 0;
   $1082 = $1080 + $1081 | 0;
   if (!($1075 & 1)) {
    $1108 = $1082 & 128;
    $1110 = $1082 & 255 | 0 ? $1108 & 255 : 64;
    if ($1082 >>> 0 > 255) $f$0$i$i78 = ($1110 & 255 | 1) & 255; else $f$0$i$i78 = $1110;
    if (($1082 & 15) >>> 0 < ($1080 & 15) >>> 0) $f$1$i$i79 = ($f$0$i$i78 & 255 | 16) & 255; else $f$1$i$i79 = $f$0$i$i78;
    $1121 = $1080 & 128;
    if (($1121 | 0) != ($1081 & 128 | 0) | ($1108 | 0) == ($1121 | 0)) {
     $storemerge$in$i82 = $1082;
     $storemerge1$i81 = $f$1$i$i79;
    } else {
     $storemerge$in$i82 = $1082;
     $storemerge1$i81 = ($f$1$i$i79 & 255 | 4) & 255;
    }
   } else {
    $1083 = $1082 + 1 | 0;
    $1086 = $1083 & 128;
    $1088 = $1083 & 255 | 0 ? $1086 & 255 : 64;
    if ($1083 >>> 0 > 255) $f$0$i75 = ($1088 & 255 | 1) & 255; else $f$0$i75 = $1088;
    if (($1083 & 15) >>> 0 > ($1080 & 15) >>> 0) $f$1$i76 = $f$0$i75; else $f$1$i76 = ($f$0$i75 & 255 | 16) & 255;
    $1099 = $1080 & 128;
    if (($1099 | 0) != ($1081 & 128 | 0) | ($1086 | 0) == ($1099 | 0)) {
     $storemerge$in$i82 = $1083;
     $storemerge1$i81 = $f$1$i76;
    } else {
     $storemerge$in$i82 = $1083;
     $storemerge1$i81 = ($f$1$i76 & 255 | 4) & 255;
    }
   }
   HEAP8[$1074 >> 0] = $storemerge1$i81;
   HEAP8[$1078 >> 0] = $storemerge$in$i82;
   $$0 = 8;
   return $$0 | 0;
  }
 case 141:
  {
   $1130 = $this + 6 | 0;
   $1131 = HEAP16[$1130 >> 1] | 0;
   $1134 = $1130 + 1 | 0;
   $1136 = ($1131 & 65535) >>> 8 & 65535;
   $1137 = HEAPU8[$this + 10 >> 0] | 0;
   $1138 = $1136 + $1137 | 0;
   if (!($1131 & 1)) {
    $1164 = $1138 & 128;
    $1166 = $1138 & 255 | 0 ? $1164 & 255 : 64;
    if ($1138 >>> 0 > 255) $f$0$i$i68 = ($1166 & 255 | 1) & 255; else $f$0$i$i68 = $1166;
    if (($1138 & 15) >>> 0 < ($1136 & 15) >>> 0) $f$1$i$i69 = ($f$0$i$i68 & 255 | 16) & 255; else $f$1$i$i69 = $f$0$i$i68;
    $1177 = $1136 & 128;
    if (($1177 | 0) != ($1137 & 128 | 0) | ($1164 | 0) == ($1177 | 0)) {
     $storemerge$in$i72 = $1138;
     $storemerge1$i71 = $f$1$i$i69;
    } else {
     $storemerge$in$i72 = $1138;
     $storemerge1$i71 = ($f$1$i$i69 & 255 | 4) & 255;
    }
   } else {
    $1139 = $1138 + 1 | 0;
    $1142 = $1139 & 128;
    $1144 = $1139 & 255 | 0 ? $1142 & 255 : 64;
    if ($1139 >>> 0 > 255) $f$0$i65 = ($1144 & 255 | 1) & 255; else $f$0$i65 = $1144;
    if (($1139 & 15) >>> 0 > ($1136 & 15) >>> 0) $f$1$i66 = $f$0$i65; else $f$1$i66 = ($f$0$i65 & 255 | 16) & 255;
    $1155 = $1136 & 128;
    if (($1155 | 0) != ($1137 & 128 | 0) | ($1142 | 0) == ($1155 | 0)) {
     $storemerge$in$i72 = $1139;
     $storemerge1$i71 = $f$1$i66;
    } else {
     $storemerge$in$i72 = $1139;
     $storemerge1$i71 = ($f$1$i66 & 255 | 4) & 255;
    }
   }
   HEAP8[$1130 >> 0] = $storemerge1$i71;
   HEAP8[$1134 >> 0] = $storemerge$in$i72;
   $$0 = 8;
   return $$0 | 0;
  }
 case 142:
  {
   $1184 = $this + 22 | 0;
   $1185 = HEAP16[$1184 >> 1] | 0;
   HEAP16[$1184 >> 1] = $1185 + 1 << 16 >> 16;
   $1187 = $1185 & 65535;
   $1198 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1187 >>> 11 << 3) >> 2] | 0) + ($1187 & 2047) >> 0] | 0) | 0;
   $1206 = $this + 6 | 0;
   $1207 = HEAP16[$1206 >> 1] | 0;
   $1210 = $1206 + 1 | 0;
   $1212 = ($1207 & 65535) >>> 8 & 65535;
   $1213 = HEAPU8[(HEAP32[$this + 1312 + (($1198 >>> 11 & 31) << 3) >> 2] | 0) + ($1198 & 2047) >> 0] | 0;
   $1214 = $1212 + $1213 | 0;
   if (!($1207 & 1)) {
    $1240 = $1214 & 128;
    $1242 = $1214 & 255 | 0 ? $1240 & 255 : 64;
    if ($1214 >>> 0 > 255) $f$0$i$i59 = ($1242 & 255 | 1) & 255; else $f$0$i$i59 = $1242;
    if (($1214 & 15) >>> 0 < ($1212 & 15) >>> 0) $f$1$i$i60 = ($f$0$i$i59 & 255 | 16) & 255; else $f$1$i$i60 = $f$0$i$i59;
    $1253 = $1212 & 128;
    if (($1253 | 0) != ($1213 & 128 | 0) | ($1240 | 0) == ($1253 | 0)) {
     $storemerge$in$i63 = $1214;
     $storemerge1$i62 = $f$1$i$i60;
    } else {
     $storemerge$in$i63 = $1214;
     $storemerge1$i62 = ($f$1$i$i60 & 255 | 4) & 255;
    }
   } else {
    $1215 = $1214 + 1 | 0;
    $1218 = $1215 & 128;
    $1220 = $1215 & 255 | 0 ? $1218 & 255 : 64;
    if ($1215 >>> 0 > 255) $f$0$i56 = ($1220 & 255 | 1) & 255; else $f$0$i56 = $1220;
    if (($1215 & 15) >>> 0 > ($1212 & 15) >>> 0) $f$1$i57 = $f$0$i56; else $f$1$i57 = ($f$0$i56 & 255 | 16) & 255;
    $1231 = $1212 & 128;
    if (($1231 | 0) != ($1213 & 128 | 0) | ($1218 | 0) == ($1231 | 0)) {
     $storemerge$in$i63 = $1215;
     $storemerge1$i62 = $f$1$i57;
    } else {
     $storemerge$in$i63 = $1215;
     $storemerge1$i62 = ($f$1$i57 & 255 | 4) & 255;
    }
   }
   HEAP8[$1206 >> 0] = $storemerge1$i62;
   HEAP8[$1210 >> 0] = $storemerge$in$i63;
   $$0 = 19;
   return $$0 | 0;
  }
 case 148:
  {
   $1263 = $this + 6 | 0;
   $1264 = $1263 + 1 | 0;
   $1266 = HEAPU8[$1264 >> 0] | 0;
   $1267 = HEAPU8[$this + 10 + 1 >> 0] | 0;
   $1268 = $1266 - $1267 | 0;
   $1271 = $1268 & 128;
   $1273 = $1268 & 255 | 0 ? ($1271 | 2) & 255 : 66;
   if (($1268 | 0) < 0) $f$0$i$i51 = ($1273 & 255 | 1) & 255; else $f$0$i$i51 = $1273;
   if (($1268 & 15) >>> 0 > ($1266 & 15) >>> 0) $f$1$i$i52 = ($f$0$i$i51 & 255 | 16) & 255; else $f$1$i$i52 = $f$0$i$i51;
   $1284 = $1266 & 128;
   if (($1284 | 0) == ($1267 & 128 | 0) | ($1271 | 0) == ($1284 | 0)) $f$2$i$i54 = $f$1$i$i52; else $f$2$i$i54 = ($f$1$i$i52 & 255 | 4) & 255;
   HEAP8[$1263 >> 0] = $f$2$i$i54;
   HEAP8[$1264 >> 0] = $1268;
   $$0 = 8;
   return $$0 | 0;
  }
 case 149:
  {
   $1294 = $this + 6 | 0;
   $1295 = $1294 + 1 | 0;
   $1297 = HEAPU8[$1295 >> 0] | 0;
   $1298 = HEAPU8[$this + 10 >> 0] | 0;
   $1299 = $1297 - $1298 | 0;
   $1302 = $1299 & 128;
   $1304 = $1299 & 255 | 0 ? ($1302 | 2) & 255 : 66;
   if (($1299 | 0) < 0) $f$0$i$i45 = ($1304 & 255 | 1) & 255; else $f$0$i$i45 = $1304;
   if (($1299 & 15) >>> 0 > ($1297 & 15) >>> 0) $f$1$i$i46 = ($f$0$i$i45 & 255 | 16) & 255; else $f$1$i$i46 = $f$0$i$i45;
   $1315 = $1297 & 128;
   if (($1315 | 0) == ($1298 & 128 | 0) | ($1302 | 0) == ($1315 | 0)) $f$2$i$i48 = $f$1$i$i46; else $f$2$i$i48 = ($f$1$i$i46 & 255 | 4) & 255;
   HEAP8[$1294 >> 0] = $f$2$i$i48;
   HEAP8[$1295 >> 0] = $1299;
   $$0 = 8;
   return $$0 | 0;
  }
 case 150:
  {
   $1323 = $this + 22 | 0;
   $1324 = HEAP16[$1323 >> 1] | 0;
   HEAP16[$1323 >> 1] = $1324 + 1 << 16 >> 16;
   $1326 = $1324 & 65535;
   $1337 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1326 >>> 11 << 3) >> 2] | 0) + ($1326 & 2047) >> 0] | 0) | 0;
   $1345 = $this + 6 | 0;
   $1346 = $1345 + 1 | 0;
   $1348 = HEAPU8[$1346 >> 0] | 0;
   $1349 = HEAPU8[(HEAP32[$this + 1312 + (($1337 >>> 11 & 31) << 3) >> 2] | 0) + ($1337 & 2047) >> 0] | 0;
   $1350 = $1348 - $1349 | 0;
   $1353 = $1350 & 128;
   $1355 = $1350 & 255 | 0 ? ($1353 | 2) & 255 : 66;
   if (($1350 | 0) < 0) $f$0$i$i40 = ($1355 & 255 | 1) & 255; else $f$0$i$i40 = $1355;
   if (($1350 & 15) >>> 0 > ($1348 & 15) >>> 0) $f$1$i$i41 = ($f$0$i$i40 & 255 | 16) & 255; else $f$1$i$i41 = $f$0$i$i40;
   $1366 = $1348 & 128;
   if (($1366 | 0) == ($1349 & 128 | 0) | ($1353 | 0) == ($1366 | 0)) $f$2$i$i43 = $f$1$i$i41; else $f$2$i$i43 = ($f$1$i$i41 & 255 | 4) & 255;
   HEAP8[$1345 >> 0] = $f$2$i$i43;
   HEAP8[$1346 >> 0] = $1350;
   $$0 = 19;
   return $$0 | 0;
  }
 case 156:
  {
   $1377 = $this + 6 | 0;
   $1378 = HEAP16[$1377 >> 1] | 0;
   $1381 = $1377 + 1 | 0;
   $1383 = ($1378 & 65535) >>> 8 & 65535;
   $1384 = HEAPU8[$this + 10 + 1 >> 0] | 0;
   $1385 = $1383 - $1384 | 0;
   if (!($1378 & 1)) {
    $1411 = $1385 & 128;
    $1413 = $1385 & 255 | 0 ? ($1411 | 2) & 255 : 66;
    if (($1385 | 0) < 0) $f$0$i$i$i32 = ($1413 & 255 | 1) & 255; else $f$0$i$i$i32 = $1413;
    if (($1385 & 15) >>> 0 > ($1383 & 15) >>> 0) $f$1$i$i$i33 = ($f$0$i$i$i32 & 255 | 16) & 255; else $f$1$i$i$i33 = $f$0$i$i$i32;
    $1424 = $1383 & 128;
    if (($1424 | 0) == ($1384 & 128 | 0) | ($1411 | 0) == ($1424 | 0)) {
     $storemerge$in$i36 = $1385;
     $storemerge1$i35 = $f$1$i$i$i33;
    } else {
     $storemerge$in$i36 = $1385;
     $storemerge1$i35 = ($f$1$i$i$i33 & 255 | 4) & 255;
    }
   } else {
    $1386 = $1385 + -1 | 0;
    $1389 = $1386 & 128;
    $1391 = $1386 & 255 | 0 ? ($1389 | 2) & 255 : 66;
    if (($1385 | 0) < 1) $f$0$i28 = ($1391 & 255 | 1) & 255; else $f$0$i28 = $1391;
    if (($1386 & 15) >>> 0 < ($1383 & 15) >>> 0) $f$1$i29 = $f$0$i28; else $f$1$i29 = ($f$0$i28 & 255 | 16) & 255;
    $1402 = $1383 & 128;
    if (($1402 | 0) == ($1384 & 128 | 0) | ($1389 | 0) == ($1402 | 0)) {
     $storemerge$in$i36 = $1386;
     $storemerge1$i35 = $f$1$i29;
    } else {
     $storemerge$in$i36 = $1386;
     $storemerge1$i35 = ($f$1$i29 & 255 | 4) & 255;
    }
   }
   HEAP8[$1377 >> 0] = $storemerge1$i35;
   HEAP8[$1381 >> 0] = $storemerge$in$i36;
   $$0 = 8;
   return $$0 | 0;
  }
 case 157:
  {
   $1433 = $this + 6 | 0;
   $1434 = HEAP16[$1433 >> 1] | 0;
   $1437 = $1433 + 1 | 0;
   $1439 = ($1434 & 65535) >>> 8 & 65535;
   $1440 = HEAPU8[$this + 10 >> 0] | 0;
   $1441 = $1439 - $1440 | 0;
   if (!($1434 & 1)) {
    $1467 = $1441 & 128;
    $1469 = $1441 & 255 | 0 ? ($1467 | 2) & 255 : 66;
    if (($1441 | 0) < 0) $f$0$i$i$i20 = ($1469 & 255 | 1) & 255; else $f$0$i$i$i20 = $1469;
    if (($1441 & 15) >>> 0 > ($1439 & 15) >>> 0) $f$1$i$i$i21 = ($f$0$i$i$i20 & 255 | 16) & 255; else $f$1$i$i$i21 = $f$0$i$i$i20;
    $1480 = $1439 & 128;
    if (($1480 | 0) == ($1440 & 128 | 0) | ($1467 | 0) == ($1480 | 0)) {
     $storemerge$in$i24 = $1441;
     $storemerge1$i23 = $f$1$i$i$i21;
    } else {
     $storemerge$in$i24 = $1441;
     $storemerge1$i23 = ($f$1$i$i$i21 & 255 | 4) & 255;
    }
   } else {
    $1442 = $1441 + -1 | 0;
    $1445 = $1442 & 128;
    $1447 = $1442 & 255 | 0 ? ($1445 | 2) & 255 : 66;
    if (($1441 | 0) < 1) $f$0$i16 = ($1447 & 255 | 1) & 255; else $f$0$i16 = $1447;
    if (($1442 & 15) >>> 0 < ($1439 & 15) >>> 0) $f$1$i17 = $f$0$i16; else $f$1$i17 = ($f$0$i16 & 255 | 16) & 255;
    $1458 = $1439 & 128;
    if (($1458 | 0) == ($1440 & 128 | 0) | ($1445 | 0) == ($1458 | 0)) {
     $storemerge$in$i24 = $1442;
     $storemerge1$i23 = $f$1$i17;
    } else {
     $storemerge$in$i24 = $1442;
     $storemerge1$i23 = ($f$1$i17 & 255 | 4) & 255;
    }
   }
   HEAP8[$1433 >> 0] = $storemerge1$i23;
   HEAP8[$1437 >> 0] = $storemerge$in$i24;
   $$0 = 8;
   return $$0 | 0;
  }
 case 158:
  {
   $1487 = $this + 22 | 0;
   $1488 = HEAP16[$1487 >> 1] | 0;
   HEAP16[$1487 >> 1] = $1488 + 1 << 16 >> 16;
   $1490 = $1488 & 65535;
   $1501 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1490 >>> 11 << 3) >> 2] | 0) + ($1490 & 2047) >> 0] | 0) | 0;
   $1509 = $this + 6 | 0;
   $1510 = HEAP16[$1509 >> 1] | 0;
   $1513 = $1509 + 1 | 0;
   $1515 = ($1510 & 65535) >>> 8 & 65535;
   $1516 = HEAPU8[(HEAP32[$this + 1312 + (($1501 >>> 11 & 31) << 3) >> 2] | 0) + ($1501 & 2047) >> 0] | 0;
   $1517 = $1515 - $1516 | 0;
   if (!($1510 & 1)) {
    $1543 = $1517 & 128;
    $1545 = $1517 & 255 | 0 ? ($1543 | 2) & 255 : 66;
    if (($1517 | 0) < 0) $f$0$i$i$i = ($1545 & 255 | 1) & 255; else $f$0$i$i$i = $1545;
    if (($1517 & 15) >>> 0 > ($1515 & 15) >>> 0) $f$1$i$i$i = ($f$0$i$i$i & 255 | 16) & 255; else $f$1$i$i$i = $f$0$i$i$i;
    $1556 = $1515 & 128;
    if (($1556 | 0) == ($1516 & 128 | 0) | ($1543 | 0) == ($1556 | 0)) {
     $storemerge$in$i = $1517;
     $storemerge1$i = $f$1$i$i$i;
    } else {
     $storemerge$in$i = $1517;
     $storemerge1$i = ($f$1$i$i$i & 255 | 4) & 255;
    }
   } else {
    $1518 = $1517 + -1 | 0;
    $1521 = $1518 & 128;
    $1523 = $1518 & 255 | 0 ? ($1521 | 2) & 255 : 66;
    if (($1517 | 0) < 1) $f$0$i = ($1523 & 255 | 1) & 255; else $f$0$i = $1523;
    if (($1518 & 15) >>> 0 < ($1515 & 15) >>> 0) $f$1$i = $f$0$i; else $f$1$i = ($f$0$i & 255 | 16) & 255;
    $1534 = $1515 & 128;
    if (($1534 | 0) == ($1516 & 128 | 0) | ($1521 | 0) == ($1534 | 0)) {
     $storemerge$in$i = $1518;
     $storemerge1$i = $f$1$i;
    } else {
     $storemerge$in$i = $1518;
     $storemerge1$i = ($f$1$i & 255 | 4) & 255;
    }
   }
   HEAP8[$1509 >> 0] = $storemerge1$i;
   HEAP8[$1513 >> 0] = $storemerge$in$i;
   $$0 = 19;
   return $$0 | 0;
  }
 case 164:
  {
   $1566 = $this + 6 | 0;
   $1567 = $1566 + 1 | 0;
   $1569 = HEAP8[$1567 >> 0] & HEAP8[$this + 10 + 1 >> 0];
   HEAP8[$1567 >> 0] = $1569;
   HEAP8[$1566 >> 0] = HEAPU8[($1569 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 165:
  {
   $1578 = $this + 6 | 0;
   $1579 = $1578 + 1 | 0;
   $1581 = HEAP8[$1579 >> 0] & HEAP8[$this + 10 >> 0];
   HEAP8[$1579 >> 0] = $1581;
   HEAP8[$1578 >> 0] = HEAPU8[($1581 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 166:
  {
   $1588 = $this + 22 | 0;
   $1589 = HEAP16[$1588 >> 1] | 0;
   HEAP16[$1588 >> 1] = $1589 + 1 << 16 >> 16;
   $1591 = $1589 & 65535;
   $1602 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1591 >>> 11 << 3) >> 2] | 0) + ($1591 & 2047) >> 0] | 0) | 0;
   $1610 = $this + 6 | 0;
   $1611 = $1610 + 1 | 0;
   $1613 = HEAP8[$1611 >> 0] & HEAP8[(HEAP32[$this + 1312 + (($1602 >>> 11 & 31) << 3) >> 2] | 0) + ($1602 & 2047) >> 0];
   HEAP8[$1611 >> 0] = $1613;
   HEAP8[$1610 >> 0] = HEAPU8[($1613 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 19;
   return $$0 | 0;
  }
 case 172:
  {
   $1623 = $this + 6 | 0;
   $1624 = $1623 + 1 | 0;
   $1626 = HEAP8[$1624 >> 0] ^ HEAP8[$this + 10 + 1 >> 0];
   HEAP8[$1624 >> 0] = $1626;
   HEAP8[$1623 >> 0] = HEAP8[($1626 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 173:
  {
   $1632 = $this + 6 | 0;
   $1633 = $1632 + 1 | 0;
   $1635 = HEAP8[$1633 >> 0] ^ HEAP8[$this + 10 >> 0];
   HEAP8[$1633 >> 0] = $1635;
   HEAP8[$1632 >> 0] = HEAP8[($1635 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 174:
  {
   $1639 = $this + 22 | 0;
   $1640 = HEAP16[$1639 >> 1] | 0;
   HEAP16[$1639 >> 1] = $1640 + 1 << 16 >> 16;
   $1642 = $1640 & 65535;
   $1653 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1642 >>> 11 << 3) >> 2] | 0) + ($1642 & 2047) >> 0] | 0) | 0;
   $1661 = $this + 6 | 0;
   $1662 = $1661 + 1 | 0;
   $1664 = HEAP8[$1662 >> 0] ^ HEAP8[(HEAP32[$this + 1312 + (($1653 >>> 11 & 31) << 3) >> 2] | 0) + ($1653 & 2047) >> 0];
   HEAP8[$1662 >> 0] = $1664;
   HEAP8[$1661 >> 0] = HEAP8[($1664 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 180:
  {
   $1671 = $this + 6 | 0;
   $1672 = $1671 + 1 | 0;
   $1674 = HEAP8[$1672 >> 0] | HEAP8[$this + 10 + 1 >> 0];
   HEAP8[$1672 >> 0] = $1674;
   HEAP8[$1671 >> 0] = HEAP8[($1674 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 181:
  {
   $1680 = $this + 6 | 0;
   $1681 = $1680 + 1 | 0;
   $1683 = HEAP8[$1681 >> 0] | HEAP8[$this + 10 >> 0];
   HEAP8[$1681 >> 0] = $1683;
   HEAP8[$1680 >> 0] = HEAP8[($1683 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 182:
  {
   $1687 = $this + 22 | 0;
   $1688 = HEAP16[$1687 >> 1] | 0;
   HEAP16[$1687 >> 1] = $1688 + 1 << 16 >> 16;
   $1690 = $1688 & 65535;
   $1701 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1690 >>> 11 << 3) >> 2] | 0) + ($1690 & 2047) >> 0] | 0) | 0;
   $1709 = $this + 6 | 0;
   $1710 = $1709 + 1 | 0;
   $1712 = HEAP8[$1710 >> 0] | HEAP8[(HEAP32[$this + 1312 + (($1701 >>> 11 & 31) << 3) >> 2] | 0) + ($1701 & 2047) >> 0];
   HEAP8[$1710 >> 0] = $1712;
   HEAP8[$1709 >> 0] = HEAP8[($1712 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 188:
  {
   $1719 = $this + 6 | 0;
   $1722 = HEAPU8[$1719 + 1 >> 0] | 0;
   $1723 = HEAPU8[$this + 10 + 1 >> 0] | 0;
   $1724 = $1722 - $1723 | 0;
   $1727 = $1724 & 128;
   $1729 = $1724 & 255 | 0 ? ($1727 | 2) & 255 : 66;
   if (($1724 | 0) < 0) $f$0$i$i10 = ($1729 & 255 | 1) & 255; else $f$0$i$i10 = $1729;
   if (($1724 & 15) >>> 0 > ($1722 & 15) >>> 0) $f$1$i$i11 = ($f$0$i$i10 & 255 | 16) & 255; else $f$1$i$i11 = $f$0$i$i10;
   $1740 = $1722 & 128;
   if (($1740 | 0) == ($1723 & 128 | 0) | ($1727 | 0) == ($1740 | 0)) $f$2$i$i13 = $f$1$i$i11; else $f$2$i$i13 = ($f$1$i$i11 & 255 | 4) & 255;
   HEAP8[$1719 >> 0] = $f$2$i$i13;
   $$0 = 8;
   return $$0 | 0;
  }
 case 189:
  {
   $1749 = $this + 6 | 0;
   $1752 = HEAPU8[$1749 + 1 >> 0] | 0;
   $1753 = HEAPU8[$this + 10 >> 0] | 0;
   $1754 = $1752 - $1753 | 0;
   $1757 = $1754 & 128;
   $1759 = $1754 & 255 | 0 ? ($1757 | 2) & 255 : 66;
   if (($1754 | 0) < 0) $f$0$i$i4 = ($1759 & 255 | 1) & 255; else $f$0$i$i4 = $1759;
   if (($1754 & 15) >>> 0 > ($1752 & 15) >>> 0) $f$1$i$i5 = ($f$0$i$i4 & 255 | 16) & 255; else $f$1$i$i5 = $f$0$i$i4;
   $1770 = $1752 & 128;
   if (($1770 | 0) == ($1753 & 128 | 0) | ($1757 | 0) == ($1770 | 0)) $f$2$i$i7 = $f$1$i$i5; else $f$2$i$i7 = ($f$1$i$i5 & 255 | 4) & 255;
   HEAP8[$1749 >> 0] = $f$2$i$i7;
   $$0 = 8;
   return $$0 | 0;
  }
 case 190:
  {
   $1777 = $this + 22 | 0;
   $1778 = HEAP16[$1777 >> 1] | 0;
   HEAP16[$1777 >> 1] = $1778 + 1 << 16 >> 16;
   $1780 = $1778 & 65535;
   $1791 = (HEAPU16[$this + 10 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1780 >>> 11 << 3) >> 2] | 0) + ($1780 & 2047) >> 0] | 0) | 0;
   $1799 = $this + 6 | 0;
   $1802 = HEAPU8[$1799 + 1 >> 0] | 0;
   $1803 = HEAPU8[(HEAP32[$this + 1312 + (($1791 >>> 11 & 31) << 3) >> 2] | 0) + ($1791 & 2047) >> 0] | 0;
   $1804 = $1802 - $1803 | 0;
   $1807 = $1804 & 128;
   $1809 = $1804 & 255 | 0 ? ($1807 | 2) & 255 : 66;
   if (($1804 | 0) < 0) $f$0$i$i = ($1809 & 255 | 1) & 255; else $f$0$i$i = $1809;
   if (($1804 & 15) >>> 0 > ($1802 & 15) >>> 0) $f$1$i$i = ($f$0$i$i & 255 | 16) & 255; else $f$1$i$i = $f$0$i$i;
   $1820 = $1802 & 128;
   if (($1820 | 0) == ($1803 & 128 | 0) | ($1807 | 0) == ($1820 | 0)) $f$2$i$i = $f$1$i$i; else $f$2$i$i = ($f$1$i$i & 255 | 4) & 255;
   HEAP8[$1799 >> 0] = $f$2$i$i;
   $$0 = 19;
   return $$0 | 0;
  }
 case 203:
  {
   $$0 = __ZN4yakc3z808dd_fd_cbEh($this, -3) | 0;
   return $$0 | 0;
  }
 case 225:
  {
   $1828 = $this + 12 | 0;
   $1830 = HEAPU16[$1828 >> 1] | 0;
   $1837 = $1830 + 1 | 0;
   HEAP16[$this + 10 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($1837 >>> 11 & 31) << 3) >> 2] | 0) + ($1837 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($1830 >>> 11 << 3) >> 2] | 0) + ($1830 & 2047) >> 0];
   HEAP16[$1828 >> 1] = $1830 + 2;
   $$0 = 14;
   return $$0 | 0;
  }
 case 227:
  {
   $1855 = HEAPU16[$this + 12 >> 1] | 0;
   $1857 = $1855 >>> 11;
   $1860 = (HEAP32[$this + 1312 + ($1857 << 3) >> 2] | 0) + ($1855 & 2047) | 0;
   $1862 = $1855 + 1 | 0;
   $1863 = $1862 & 2047;
   $1865 = $1862 >>> 11 & 31;
   $1866 = $this + 1312 + ($1865 << 3) | 0;
   $1874 = (HEAPU8[(HEAP32[$1866 >> 2] | 0) + $1863 >> 0] << 8 | HEAPU8[$1860 >> 0]) & 65535;
   $1875 = $this + 10 | 0;
   $1876 = HEAP16[$1875 >> 1] | 0;
   if (HEAP8[$this + 1312 + ($1857 << 3) + 4 >> 0] | 0) HEAP8[$1860 >> 0] = $1876;
   if (HEAP8[$this + 1312 + ($1865 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$1866 >> 2] | 0) + $1863 >> 0] = ($1876 & 65535) >>> 8;
   HEAP16[$1875 >> 1] = $1874;
   $$0 = 23;
   return $$0 | 0;
  }
 case 229:
  {
   $1888 = $this + 12 | 0;
   $1890 = HEAPU16[$1888 >> 1] | 0;
   $1891 = $1890 + 65534 | 0;
   HEAP16[$1888 >> 1] = $1891;
   $1894 = HEAP16[$this + 10 >> 1] | 0;
   $1896 = $1891 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($1896 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($1896 << 3) >> 2] | 0) + ($1891 & 2047) >> 0] = $1894;
   $1907 = ($1890 + 65535 | 0) >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($1907 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($1907 << 3) >> 2] | 0) + ($1890 + 2047 & 2047) >> 0] = ($1894 & 65535) >>> 8;
   $$0 = 15;
   return $$0 | 0;
  }
 case 233:
  {
   HEAP16[$this + 22 >> 1] = HEAP16[$this + 10 >> 1] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 249:
  {
   HEAP16[$this + 12 >> 1] = HEAP16[$this + 10 >> 1] | 0;
   $$0 = 10;
   return $$0 | 0;
  }
 case 127:
 case 109:
 case 100:
 case 91:
 case 82:
 case 73:
 case 64:
  {
   $$0 = 8;
   return $$0 | 0;
  }
 default:
  {
   if (!(HEAP8[$this + 3634 >> 0] | 0)) {
    $$0 = 4;
    return $$0 | 0;
   }
   HEAP8[$this + 30 >> 0] = 1;
   $1927 = $this + 22 | 0;
   HEAP16[$1927 >> 1] = (HEAPU16[$1927 >> 1] | 0) + 65534;
   $$0 = 4;
   return $$0 | 0;
  }
 } while (0);
 return 0;
}

function __ZN4yakc3z8010do_op_0xddEh($this, $op) {
 $this = $this | 0;
 $op = $op | 0;
 var $$0 = 0, $1 = 0, $1001 = 0, $1012 = 0, $1020 = 0, $1021 = 0, $1023 = 0, $1034 = 0, $1042 = 0, $1043 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $105 = 0, $1050 = 0, $1052 = 0, $1063 = 0, $107 = 0, $1074 = 0, $1075 = 0, $1078 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1086 = 0, $1088 = 0, $1099 = 0, $1108 = 0, $1110 = 0, $1121 = 0, $1130 = 0, $1131 = 0, $1134 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $1142 = 0, $1144 = 0, $1155 = 0, $1164 = 0, $1166 = 0, $1177 = 0, $1184 = 0, $1185 = 0, $1187 = 0, $1198 = 0, $1206 = 0, $1207 = 0, $121 = 0, $1210 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1218 = 0, $1220 = 0, $1231 = 0, $1240 = 0, $1242 = 0, $125 = 0, $1253 = 0, $1263 = 0, $1264 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1271 = 0, $1273 = 0, $128 = 0, $1284 = 0, $1294 = 0, $1295 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $130 = 0, $1302 = 0, $1304 = 0, $1315 = 0, $1323 = 0, $1324 = 0, $1326 = 0, $133 = 0, $1337 = 0, $1345 = 0, $1346 = 0, $1348 = 0, $1349 = 0, $1350 = 0, $1353 = 0, $1355 = 0, $1366 = 0, $1377 = 0, $1378 = 0, $1381 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1389 = 0, $1391 = 0, $1402 = 0, $1411 = 0, $1413 = 0, $1424 = 0, $1433 = 0, $1434 = 0, $1437 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1445 = 0, $1447 = 0, $1458 = 0, $1467 = 0, $1469 = 0, $1480 = 0, $1487 = 0, $1488 = 0, $1490 = 0, $1501 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1513 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1521 = 0, $1523 = 0, $1534 = 0, $154 = 0, $1543 = 0, $1545 = 0, $1556 = 0, $156 = 0, $1566 = 0, $1567 = 0, $1569 = 0, $1578 = 0, $1579 = 0, $1581 = 0, $1588 = 0, $1589 = 0, $1591 = 0, $1602 = 0, $1610 = 0, $1611 = 0, $1613 = 0, $162 = 0, $1623 = 0, $1624 = 0, $1626 = 0, $1632 = 0, $1633 = 0, $1635 = 0, $1639 = 0, $1640 = 0, $1642 = 0, $1653 = 0, $1661 = 0, $1662 = 0, $1664 = 0, $1671 = 0, $1672 = 0, $1674 = 0, $1680 = 0, $1681 = 0, $1683 = 0, $1687 = 0, $1688 = 0, $1690 = 0, $170 = 0, $1701 = 0, $1709 = 0, $1710 = 0, $1712 = 0, $1719 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1727 = 0, $1729 = 0, $1740 = 0, $1749 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1757 = 0, $1759 = 0, $176 = 0, $177 = 0, $1770 = 0, $1777 = 0, $1778 = 0, $1780 = 0, $179 = 0, $1791 = 0, $1799 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1807 = 0, $1809 = 0, $1820 = 0, $1828 = 0, $1830 = 0, $1837 = 0, $1855 = 0, $1857 = 0, $1860 = 0, $1862 = 0, $1863 = 0, $1865 = 0, $1866 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $188 = 0, $1888 = 0, $1890 = 0, $1891 = 0, $1894 = 0, $1896 = 0, $190 = 0, $1907 = 0, $192 = 0, $1927 = 0, $196 = 0, $2 = 0, $205 = 0, $207 = 0, $214 = 0, $222 = 0, $225 = 0, $232 = 0, $24 = 0, $248 = 0, $25 = 0, $251 = 0, $254 = 0, $256 = 0, $259 = 0, $27 = 0, $270 = 0, $276 = 0, $279 = 0, $281 = 0, $287 = 0, $295 = 0, $3 = 0, $30 = 0, $301 = 0, $302 = 0, $304 = 0, $31 = 0, $312 = 0, $313 = 0, $315 = 0, $326 = 0, $329 = 0, $332 = 0, $335 = 0, $337 = 0, $340 = 0, $351 = 0, $360 = 0, $361 = 0, $363 = 0, $374 = 0, $377 = 0, $380 = 0, $383 = 0, $385 = 0, $391 = 0, $399 = 0, $408 = 0, $409 = 0, $410 = 0, $411 = 0, $422 = 0, $424 = 0, $426 = 0, $440 = 0, $441 = 0, $443 = 0, $446 = 0, $447 = 0, $48 = 0, $480 = 0, $481 = 0, $483 = 0, $494 = 0, $50 = 0, $519 = 0, $520 = 0, $522 = 0, $533 = 0, $551 = 0, $563 = 0, $564 = 0, $566 = 0, $57 = 0, $577 = 0, $597 = 0, $6 = 0, $607 = 0, $608 = 0, $610 = 0, $621 = 0, $650 = 0, $653 = 0, $654 = 0, $656 = 0, $667 = 0, $694 = 0, $697 = 0, $698 = 0, $7 = 0, $700 = 0, $711 = 0, $724 = 0, $725 = 0, $727 = 0, $73 = 0, $738 = 0, $740 = 0, $75 = 0, $750 = 0, $751 = 0, $753 = 0, $764 = 0, $766 = 0, $775 = 0, $776 = 0, $778 = 0, $789 = 0, $791 = 0, $802 = 0, $803 = 0, $805 = 0, $816 = 0, $818 = 0, $82 = 0, $828 = 0, $829 = 0, $831 = 0, $842 = 0, $844 = 0, $855 = 0, $856 = 0, $858 = 0, $869 = 0, $871 = 0, $881 = 0, $882 = 0, $884 = 0, $895 = 0, $897 = 0, $90 = 0, $93 = 0, $933 = 0, $934 = 0, $936 = 0, $947 = 0, $95 = 0, $96 = 0, $960 = 0, $961 = 0, $963 = 0, $964 = 0, $965 = 0, $968 = 0, $970 = 0, $981 = 0, $991 = 0, $992 = 0, $994 = 0, $995 = 0, $996 = 0, $999 = 0, $f$0$i = 0, $f$0$i$i = 0, $f$0$i$i$i = 0, $f$0$i$i$i20 = 0, $f$0$i$i$i32 = 0, $f$0$i$i10 = 0, $f$0$i$i4 = 0, $f$0$i$i40 = 0, $f$0$i$i45 = 0, $f$0$i$i51 = 0, $f$0$i$i59 = 0, $f$0$i$i68 = 0, $f$0$i$i78 = 0, $f$0$i106 = 0, $f$0$i110 = 0, $f$0$i114 = 0, $f$0$i118 = 0, $f$0$i123 = 0, $f$0$i127 = 0, $f$0$i16 = 0, $f$0$i28 = 0, $f$0$i56 = 0, $f$0$i65 = 0, $f$0$i75 = 0, $f$0$i85 = 0, $f$0$i88 = 0, $f$0$i93 = 0, $f$1$i = 0, $f$1$i$i = 0, $f$1$i$i$i = 0, $f$1$i$i$i21 = 0, $f$1$i$i$i33 = 0, $f$1$i$i11 = 0, $f$1$i$i41 = 0, $f$1$i$i46 = 0, $f$1$i$i5 = 0, $f$1$i$i52 = 0, $f$1$i$i60 = 0, $f$1$i$i69 = 0, $f$1$i$i79 = 0, $f$1$i107 = 0, $f$1$i111 = 0, $f$1$i115 = 0, $f$1$i119 = 0, $f$1$i124 = 0, $f$1$i128 = 0, $f$1$i17 = 0, $f$1$i29 = 0, $f$1$i57 = 0, $f$1$i66 = 0, $f$1$i76 = 0, $f$1$i86 = 0, $f$1$i89 = 0, $f$1$i94 = 0, $f$2$i = 0, $f$2$i$i = 0, $f$2$i$i13 = 0, $f$2$i$i43 = 0, $f$2$i$i48 = 0, $f$2$i$i54 = 0, $f$2$i$i7 = 0, $f$2$i91 = 0, $f$2$i96 = 0, $storemerge$in$i = 0, $storemerge$in$i24 = 0, $storemerge$in$i36 = 0, $storemerge$in$i63 = 0, $storemerge$in$i72 = 0, $storemerge$in$i82 = 0, $storemerge1$i = 0, $storemerge1$i23 = 0, $storemerge1$i35 = 0, $storemerge1$i62 = 0, $storemerge1$i71 = 0, $storemerge1$i81 = 0;
 do switch ($op & 255 | 0) {
 case 9:
  {
   $1 = $this + 8 | 0;
   $2 = HEAP16[$1 >> 1] | 0;
   $3 = HEAP16[$this >> 1] | 0;
   $6 = ($3 & 65535) + ($2 & 65535) | 0;
   $7 = $this + 6 | 0;
   HEAP8[$7 >> 0] = HEAPU8[$7 >> 0] & 196 | $6 >>> 16 | $6 >>> 8 & 40 | (($3 ^ $2) & 65535 ^ $6) >>> 8 & 16;
   HEAP16[$1 >> 1] = $6;
   $$0 = 15;
   return $$0 | 0;
  }
 case 25:
  {
   $24 = $this + 8 | 0;
   $25 = HEAP16[$24 >> 1] | 0;
   $27 = HEAP16[$this + 2 >> 1] | 0;
   $30 = ($27 & 65535) + ($25 & 65535) | 0;
   $31 = $this + 6 | 0;
   HEAP8[$31 >> 0] = HEAPU8[$31 >> 0] & 196 | $30 >>> 16 | $30 >>> 8 & 40 | (($27 ^ $25) & 65535 ^ $30) >>> 8 & 16;
   HEAP16[$24 >> 1] = $30;
   $$0 = 15;
   return $$0 | 0;
  }
 case 33:
  {
   $48 = $this + 22 | 0;
   $50 = HEAPU16[$48 >> 1] | 0;
   $57 = $50 + 1 | 0;
   HEAP16[$this + 8 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($57 >>> 11 & 31) << 3) >> 2] | 0) + ($57 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($50 >>> 11 << 3) >> 2] | 0) + ($50 & 2047) >> 0];
   HEAP16[$48 >> 1] = $50 + 2;
   $$0 = 14;
   return $$0 | 0;
  }
 case 34:
  {
   $73 = $this + 22 | 0;
   $75 = HEAPU16[$73 >> 1] | 0;
   $82 = $75 + 1 | 0;
   $90 = HEAPU8[(HEAP32[$this + 1312 + (($82 >>> 11 & 31) << 3) >> 2] | 0) + ($82 & 2047) >> 0] | 0;
   $93 = $90 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($75 >>> 11 << 3) >> 2] | 0) + ($75 & 2047) >> 0];
   $95 = HEAP16[$this + 8 >> 1] | 0;
   $96 = $90 >>> 3;
   if (HEAP8[$this + 1312 + ($96 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($96 << 3) >> 2] | 0) + ($93 & 2047) >> 0] = $95;
   $105 = $93 + 1 | 0;
   $107 = $105 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($107 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($107 << 3) >> 2] | 0) + ($105 & 2047) >> 0] = ($95 & 65535) >>> 8;
   HEAP16[$73 >> 1] = (HEAPU16[$73 >> 1] | 0) + 2;
   $$0 = 20;
   return $$0 | 0;
  }
 case 35:
  {
   $121 = $this + 8 | 0;
   HEAP16[$121 >> 1] = (HEAP16[$121 >> 1] | 0) + 1 << 16 >> 16;
   $$0 = 10;
   return $$0 | 0;
  }
 case 36:
  {
   $125 = $this + 8 + 1 | 0;
   $128 = (HEAPU8[$125 >> 0] | 0) + 1 | 0;
   $130 = $128 & 255;
   $133 = ($130 | 0) == 0 ? 64 : $128 & 128;
   if (!($128 & 15)) $f$0$i127 = ($133 & 255 | 16) & 255; else $f$0$i127 = $133;
   if (($130 | 0) == 128) $f$1$i128 = ($f$0$i127 & 255 | 4) & 255; else $f$1$i128 = $f$0$i127;
   $144 = $this + 6 | 0;
   HEAP8[$144 >> 0] = HEAPU8[$144 >> 0] & 1 | $f$1$i128 & 255;
   HEAP8[$125 >> 0] = $128;
   $$0 = 8;
   return $$0 | 0;
  }
 case 37:
  {
   $151 = $this + 8 + 1 | 0;
   $154 = (HEAPU8[$151 >> 0] | 0) + 255 | 0;
   $156 = $154 & 255;
   if (!$156) $162 = 66; else $162 = ($154 & 128 | 2) & 255;
   if (($154 & 15 | 0) == 15) $f$0$i123 = ($162 & 255 | 16) & 255; else $f$0$i123 = $162;
   if (($156 | 0) == 127) $f$1$i124 = ($f$0$i123 & 255 | 4) & 255; else $f$1$i124 = $f$0$i123;
   $170 = $this + 6 | 0;
   HEAP8[$170 >> 0] = HEAPU8[$170 >> 0] & 1 | $f$1$i124 & 255;
   HEAP8[$151 >> 0] = $154;
   $$0 = 8;
   return $$0 | 0;
  }
 case 38:
  {
   $176 = $this + 22 | 0;
   $177 = HEAP16[$176 >> 1] | 0;
   HEAP16[$176 >> 1] = $177 + 1 << 16 >> 16;
   $179 = $177 & 65535;
   HEAP8[$this + 8 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($179 >>> 11 << 3) >> 2] | 0) + ($179 & 2047) >> 0] | 0;
   $$0 = 11;
   return $$0 | 0;
  }
 case 41:
  {
   $188 = $this + 8 | 0;
   $190 = HEAPU16[$188 >> 1] | 0;
   $192 = $this + 6 | 0;
   $196 = $190 >>> 7;
   HEAP8[$192 >> 0] = $196 & 40 | $190 >>> 15 | $196 & 16 | HEAPU8[$192 >> 0] & 196;
   HEAP16[$188 >> 1] = $190 << 1;
   $$0 = 15;
   return $$0 | 0;
  }
 case 42:
  {
   $205 = $this + 22 | 0;
   $207 = HEAPU16[$205 >> 1] | 0;
   $214 = $207 + 1 | 0;
   $222 = HEAPU8[(HEAP32[$this + 1312 + (($214 >>> 11 & 31) << 3) >> 2] | 0) + ($214 & 2047) >> 0] | 0;
   $225 = $222 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($207 >>> 11 << 3) >> 2] | 0) + ($207 & 2047) >> 0];
   $232 = $225 + 1 | 0;
   HEAP16[$this + 8 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($232 >>> 11 & 31) << 3) >> 2] | 0) + ($232 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($222 >>> 3 << 3) >> 2] | 0) + ($225 & 2047) >> 0];
   HEAP16[$205 >> 1] = $207 + 2;
   $$0 = 20;
   return $$0 | 0;
  }
 case 43:
  {
   $248 = $this + 8 | 0;
   HEAP16[$248 >> 1] = (HEAP16[$248 >> 1] | 0) + -1 << 16 >> 16;
   $$0 = 10;
   return $$0 | 0;
  }
 case 44:
  {
   $251 = $this + 8 | 0;
   $254 = (HEAPU8[$251 >> 0] | 0) + 1 | 0;
   $256 = $254 & 255;
   $259 = ($256 | 0) == 0 ? 64 : $254 & 128;
   if (!($254 & 15)) $f$0$i118 = ($259 & 255 | 16) & 255; else $f$0$i118 = $259;
   if (($256 | 0) == 128) $f$1$i119 = ($f$0$i118 & 255 | 4) & 255; else $f$1$i119 = $f$0$i118;
   $270 = $this + 6 | 0;
   HEAP8[$270 >> 0] = HEAPU8[$270 >> 0] & 1 | $f$1$i119 & 255;
   HEAP8[$251 >> 0] = $254;
   $$0 = 8;
   return $$0 | 0;
  }
 case 45:
  {
   $276 = $this + 8 | 0;
   $279 = (HEAPU8[$276 >> 0] | 0) + 255 | 0;
   $281 = $279 & 255;
   if (!$281) $287 = 66; else $287 = ($279 & 128 | 2) & 255;
   if (($279 & 15 | 0) == 15) $f$0$i114 = ($287 & 255 | 16) & 255; else $f$0$i114 = $287;
   if (($281 | 0) == 127) $f$1$i115 = ($f$0$i114 & 255 | 4) & 255; else $f$1$i115 = $f$0$i114;
   $295 = $this + 6 | 0;
   HEAP8[$295 >> 0] = HEAPU8[$295 >> 0] & 1 | $f$1$i115 & 255;
   HEAP8[$276 >> 0] = $279;
   $$0 = 8;
   return $$0 | 0;
  }
 case 46:
  {
   $301 = $this + 22 | 0;
   $302 = HEAP16[$301 >> 1] | 0;
   HEAP16[$301 >> 1] = $302 + 1 << 16 >> 16;
   $304 = $302 & 65535;
   HEAP8[$this + 8 >> 0] = HEAP8[(HEAP32[$this + 1312 + ($304 >>> 11 << 3) >> 2] | 0) + ($304 & 2047) >> 0] | 0;
   $$0 = 11;
   return $$0 | 0;
  }
 case 52:
  {
   $312 = $this + 22 | 0;
   $313 = HEAP16[$312 >> 1] | 0;
   HEAP16[$312 >> 1] = $313 + 1 << 16 >> 16;
   $315 = $313 & 65535;
   $326 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($315 >>> 11 << 3) >> 2] | 0) + ($315 & 2047) >> 0] | 0) | 0;
   $329 = $326 >>> 11 & 31;
   $332 = (HEAP32[$this + 1312 + ($329 << 3) >> 2] | 0) + ($326 & 2047) | 0;
   $335 = (HEAPU8[$332 >> 0] | 0) + 1 | 0;
   $337 = $335 & 255;
   $340 = ($337 | 0) == 0 ? 64 : $335 & 128;
   if (!($335 & 15)) $f$0$i110 = ($340 & 255 | 16) & 255; else $f$0$i110 = $340;
   if (($337 | 0) == 128) $f$1$i111 = ($f$0$i110 & 255 | 4) & 255; else $f$1$i111 = $f$0$i110;
   $351 = $this + 6 | 0;
   HEAP8[$351 >> 0] = HEAPU8[$351 >> 0] & 1 | $f$1$i111 & 255;
   if (!(HEAP8[$this + 1312 + ($329 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[$332 >> 0] = $335;
   $$0 = 23;
   return $$0 | 0;
  }
 case 53:
  {
   $360 = $this + 22 | 0;
   $361 = HEAP16[$360 >> 1] | 0;
   HEAP16[$360 >> 1] = $361 + 1 << 16 >> 16;
   $363 = $361 & 65535;
   $374 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($363 >>> 11 << 3) >> 2] | 0) + ($363 & 2047) >> 0] | 0) | 0;
   $377 = $374 >>> 11 & 31;
   $380 = (HEAP32[$this + 1312 + ($377 << 3) >> 2] | 0) + ($374 & 2047) | 0;
   $383 = (HEAPU8[$380 >> 0] | 0) + 255 | 0;
   $385 = $383 & 255;
   if (!$385) $391 = 66; else $391 = ($383 & 128 | 2) & 255;
   if (($383 & 15 | 0) == 15) $f$0$i106 = ($391 & 255 | 16) & 255; else $f$0$i106 = $391;
   if (($385 | 0) == 127) $f$1$i107 = ($f$0$i106 & 255 | 4) & 255; else $f$1$i107 = $f$0$i106;
   $399 = $this + 6 | 0;
   HEAP8[$399 >> 0] = HEAPU8[$399 >> 0] & 1 | $f$1$i107 & 255;
   if (!(HEAP8[$this + 1312 + ($377 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[$380 >> 0] = $383;
   $$0 = 23;
   return $$0 | 0;
  }
 case 54:
  {
   $408 = $this + 22 | 0;
   $409 = HEAP16[$408 >> 1] | 0;
   $410 = $409 + 1 << 16 >> 16;
   HEAP16[$408 >> 1] = $410;
   $411 = $409 & 65535;
   $422 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($411 >>> 11 << 3) >> 2] | 0) + ($411 & 2047) >> 0] | 0) | 0;
   HEAP16[$408 >> 1] = $409 + 2 << 16 >> 16;
   $424 = $410 & 65535;
   $426 = $422 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($426 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($426 << 3) >> 2] | 0) + ($422 & 2047) >> 0] = HEAP8[(HEAP32[$this + 1312 + ($424 >>> 11 << 3) >> 2] | 0) + ($424 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 57:
  {
   $440 = $this + 8 | 0;
   $441 = HEAP16[$440 >> 1] | 0;
   $443 = HEAP16[$this + 12 >> 1] | 0;
   $446 = ($443 & 65535) + ($441 & 65535) | 0;
   $447 = $this + 6 | 0;
   HEAP8[$447 >> 0] = HEAPU8[$447 >> 0] & 196 | $446 >>> 16 | $446 >>> 8 & 40 | (($443 ^ $441) & 65535 ^ $446) >>> 8 & 16;
   HEAP16[$440 >> 1] = $446;
   $$0 = 15;
   return $$0 | 0;
  }
 case 65:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 66:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 67:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 68:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 8 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 69:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 8 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 70:
  {
   $480 = $this + 22 | 0;
   $481 = HEAP16[$480 >> 1] | 0;
   HEAP16[$480 >> 1] = $481 + 1 << 16 >> 16;
   $483 = $481 & 65535;
   $494 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($483 >>> 11 << 3) >> 2] | 0) + ($483 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($494 >>> 11 & 31) << 3) >> 2] | 0) + ($494 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 71:
  {
   HEAP8[$this + 1 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 72:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 74:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 75:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 76:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 8 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 77:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 8 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 78:
  {
   $519 = $this + 22 | 0;
   $520 = HEAP16[$519 >> 1] | 0;
   HEAP16[$519 >> 1] = $520 + 1 << 16 >> 16;
   $522 = $520 & 65535;
   $533 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($522 >>> 11 << 3) >> 2] | 0) + ($522 & 2047) >> 0] | 0) | 0;
   HEAP8[$this >> 0] = HEAP8[(HEAP32[$this + 1312 + (($533 >>> 11 & 31) << 3) >> 2] | 0) + ($533 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 79:
  {
   HEAP8[$this >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 80:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 81:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 83:
  {
   $551 = $this + 2 | 0;
   HEAP8[$551 + 1 >> 0] = HEAP8[$551 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 84:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 8 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 85:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 8 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 86:
  {
   $563 = $this + 22 | 0;
   $564 = HEAP16[$563 >> 1] | 0;
   HEAP16[$563 >> 1] = $564 + 1 << 16 >> 16;
   $566 = $564 & 65535;
   $577 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($566 >>> 11 << 3) >> 2] | 0) + ($566 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($577 >>> 11 & 31) << 3) >> 2] | 0) + ($577 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 87:
  {
   HEAP8[$this + 2 + 1 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 88:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 89:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 90:
  {
   $597 = $this + 2 | 0;
   HEAP8[$597 >> 0] = HEAP8[$597 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 92:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 8 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 93:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 8 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 94:
  {
   $607 = $this + 22 | 0;
   $608 = HEAP16[$607 >> 1] | 0;
   HEAP16[$607 >> 1] = $608 + 1 << 16 >> 16;
   $610 = $608 & 65535;
   $621 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($610 >>> 11 << 3) >> 2] | 0) + ($610 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 2 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($621 >>> 11 & 31) << 3) >> 2] | 0) + ($621 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 95:
  {
   HEAP8[$this + 2 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 96:
  {
   HEAP8[$this + 8 + 1 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 97:
  {
   HEAP8[$this + 8 + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 98:
  {
   HEAP8[$this + 8 + 1 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 99:
  {
   HEAP8[$this + 8 + 1 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 101:
  {
   $650 = $this + 8 | 0;
   HEAP8[$650 + 1 >> 0] = HEAP8[$650 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 102:
  {
   $653 = $this + 22 | 0;
   $654 = HEAP16[$653 >> 1] | 0;
   HEAP16[$653 >> 1] = $654 + 1 << 16 >> 16;
   $656 = $654 & 65535;
   $667 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($656 >>> 11 << 3) >> 2] | 0) + ($656 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 4 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($667 >>> 11 & 31) << 3) >> 2] | 0) + ($667 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 103:
  {
   HEAP8[$this + 8 + 1 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 104:
  {
   HEAP8[$this + 8 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 105:
  {
   HEAP8[$this + 8 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 106:
  {
   HEAP8[$this + 8 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 107:
  {
   HEAP8[$this + 8 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 108:
  {
   $694 = $this + 8 | 0;
   HEAP8[$694 >> 0] = HEAP8[$694 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 110:
  {
   $697 = $this + 22 | 0;
   $698 = HEAP16[$697 >> 1] | 0;
   HEAP16[$697 >> 1] = $698 + 1 << 16 >> 16;
   $700 = $698 & 65535;
   $711 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($700 >>> 11 << 3) >> 2] | 0) + ($700 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 4 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($711 >>> 11 & 31) << 3) >> 2] | 0) + ($711 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 111:
  {
   HEAP8[$this + 8 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 112:
  {
   $724 = $this + 22 | 0;
   $725 = HEAP16[$724 >> 1] | 0;
   HEAP16[$724 >> 1] = $725 + 1 << 16 >> 16;
   $727 = $725 & 65535;
   $738 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($727 >>> 11 << 3) >> 2] | 0) + ($727 & 2047) >> 0] | 0) | 0;
   $740 = $738 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($740 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($740 << 3) >> 2] | 0) + ($738 & 2047) >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 113:
  {
   $750 = $this + 22 | 0;
   $751 = HEAP16[$750 >> 1] | 0;
   HEAP16[$750 >> 1] = $751 + 1 << 16 >> 16;
   $753 = $751 & 65535;
   $764 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($753 >>> 11 << 3) >> 2] | 0) + ($753 & 2047) >> 0] | 0) | 0;
   $766 = $764 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($766 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($766 << 3) >> 2] | 0) + ($764 & 2047) >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 114:
  {
   $775 = $this + 22 | 0;
   $776 = HEAP16[$775 >> 1] | 0;
   HEAP16[$775 >> 1] = $776 + 1 << 16 >> 16;
   $778 = $776 & 65535;
   $789 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($778 >>> 11 << 3) >> 2] | 0) + ($778 & 2047) >> 0] | 0) | 0;
   $791 = $789 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($791 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($791 << 3) >> 2] | 0) + ($789 & 2047) >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 115:
  {
   $802 = $this + 22 | 0;
   $803 = HEAP16[$802 >> 1] | 0;
   HEAP16[$802 >> 1] = $803 + 1 << 16 >> 16;
   $805 = $803 & 65535;
   $816 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($805 >>> 11 << 3) >> 2] | 0) + ($805 & 2047) >> 0] | 0) | 0;
   $818 = $816 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($818 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($818 << 3) >> 2] | 0) + ($816 & 2047) >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 116:
  {
   $828 = $this + 22 | 0;
   $829 = HEAP16[$828 >> 1] | 0;
   HEAP16[$828 >> 1] = $829 + 1 << 16 >> 16;
   $831 = $829 & 65535;
   $842 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($831 >>> 11 << 3) >> 2] | 0) + ($831 & 2047) >> 0] | 0) | 0;
   $844 = $842 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($844 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($844 << 3) >> 2] | 0) + ($842 & 2047) >> 0] = HEAP8[$this + 4 + 1 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 117:
  {
   $855 = $this + 22 | 0;
   $856 = HEAP16[$855 >> 1] | 0;
   HEAP16[$855 >> 1] = $856 + 1 << 16 >> 16;
   $858 = $856 & 65535;
   $869 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($858 >>> 11 << 3) >> 2] | 0) + ($858 & 2047) >> 0] | 0) | 0;
   $871 = $869 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($871 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($871 << 3) >> 2] | 0) + ($869 & 2047) >> 0] = HEAP8[$this + 4 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 119:
  {
   $881 = $this + 22 | 0;
   $882 = HEAP16[$881 >> 1] | 0;
   HEAP16[$881 >> 1] = $882 + 1 << 16 >> 16;
   $884 = $882 & 65535;
   $895 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($884 >>> 11 << 3) >> 2] | 0) + ($884 & 2047) >> 0] | 0) | 0;
   $897 = $895 >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($897 << 3) + 4 >> 0] | 0)) {
    $$0 = 19;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($897 << 3) >> 2] | 0) + ($895 & 2047) >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 120:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 121:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 122:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 2 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 123:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 2 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 124:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 8 + 1 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 125:
  {
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[$this + 8 >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 126:
  {
   $933 = $this + 22 | 0;
   $934 = HEAP16[$933 >> 1] | 0;
   HEAP16[$933 >> 1] = $934 + 1 << 16 >> 16;
   $936 = $934 & 65535;
   $947 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($936 >>> 11 << 3) >> 2] | 0) + ($936 & 2047) >> 0] | 0) | 0;
   HEAP8[$this + 6 + 1 >> 0] = HEAP8[(HEAP32[$this + 1312 + (($947 >>> 11 & 31) << 3) >> 2] | 0) + ($947 & 2047) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 132:
  {
   $960 = $this + 6 | 0;
   $961 = $960 + 1 | 0;
   $963 = HEAPU8[$961 >> 0] | 0;
   $964 = HEAPU8[$this + 8 + 1 >> 0] | 0;
   $965 = $963 + $964 | 0;
   $968 = $965 & 128;
   $970 = $965 & 255 | 0 ? $968 & 255 : 64;
   if ($965 >>> 0 > 255) $f$0$i93 = ($970 & 255 | 1) & 255; else $f$0$i93 = $970;
   if (($965 & 15) >>> 0 < ($963 & 15) >>> 0) $f$1$i94 = ($f$0$i93 & 255 | 16) & 255; else $f$1$i94 = $f$0$i93;
   $981 = $963 & 128;
   if (($981 | 0) != ($964 & 128 | 0) | ($968 | 0) == ($981 | 0)) $f$2$i96 = $f$1$i94; else $f$2$i96 = ($f$1$i94 & 255 | 4) & 255;
   HEAP8[$960 >> 0] = $f$2$i96;
   HEAP8[$961 >> 0] = $965;
   $$0 = 8;
   return $$0 | 0;
  }
 case 133:
  {
   $991 = $this + 6 | 0;
   $992 = $991 + 1 | 0;
   $994 = HEAPU8[$992 >> 0] | 0;
   $995 = HEAPU8[$this + 8 >> 0] | 0;
   $996 = $994 + $995 | 0;
   $999 = $996 & 128;
   $1001 = $996 & 255 | 0 ? $999 & 255 : 64;
   if ($996 >>> 0 > 255) $f$0$i88 = ($1001 & 255 | 1) & 255; else $f$0$i88 = $1001;
   if (($996 & 15) >>> 0 < ($994 & 15) >>> 0) $f$1$i89 = ($f$0$i88 & 255 | 16) & 255; else $f$1$i89 = $f$0$i88;
   $1012 = $994 & 128;
   if (($1012 | 0) != ($995 & 128 | 0) | ($999 | 0) == ($1012 | 0)) $f$2$i91 = $f$1$i89; else $f$2$i91 = ($f$1$i89 & 255 | 4) & 255;
   HEAP8[$991 >> 0] = $f$2$i91;
   HEAP8[$992 >> 0] = $996;
   $$0 = 8;
   return $$0 | 0;
  }
 case 134:
  {
   $1020 = $this + 22 | 0;
   $1021 = HEAP16[$1020 >> 1] | 0;
   HEAP16[$1020 >> 1] = $1021 + 1 << 16 >> 16;
   $1023 = $1021 & 65535;
   $1034 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1023 >>> 11 << 3) >> 2] | 0) + ($1023 & 2047) >> 0] | 0) | 0;
   $1042 = $this + 6 | 0;
   $1043 = $1042 + 1 | 0;
   $1045 = HEAPU8[$1043 >> 0] | 0;
   $1046 = HEAPU8[(HEAP32[$this + 1312 + (($1034 >>> 11 & 31) << 3) >> 2] | 0) + ($1034 & 2047) >> 0] | 0;
   $1047 = $1045 + $1046 | 0;
   $1050 = $1047 & 128;
   $1052 = $1047 & 255 | 0 ? $1050 & 255 : 64;
   if ($1047 >>> 0 > 255) $f$0$i85 = ($1052 & 255 | 1) & 255; else $f$0$i85 = $1052;
   if (($1047 & 15) >>> 0 < ($1045 & 15) >>> 0) $f$1$i86 = ($f$0$i85 & 255 | 16) & 255; else $f$1$i86 = $f$0$i85;
   $1063 = $1045 & 128;
   if (($1063 | 0) != ($1046 & 128 | 0) | ($1050 | 0) == ($1063 | 0)) $f$2$i = $f$1$i86; else $f$2$i = ($f$1$i86 & 255 | 4) & 255;
   HEAP8[$1042 >> 0] = $f$2$i;
   HEAP8[$1043 >> 0] = $1047;
   $$0 = 19;
   return $$0 | 0;
  }
 case 140:
  {
   $1074 = $this + 6 | 0;
   $1075 = HEAP16[$1074 >> 1] | 0;
   $1078 = $1074 + 1 | 0;
   $1080 = ($1075 & 65535) >>> 8 & 65535;
   $1081 = HEAPU8[$this + 8 + 1 >> 0] | 0;
   $1082 = $1080 + $1081 | 0;
   if (!($1075 & 1)) {
    $1108 = $1082 & 128;
    $1110 = $1082 & 255 | 0 ? $1108 & 255 : 64;
    if ($1082 >>> 0 > 255) $f$0$i$i78 = ($1110 & 255 | 1) & 255; else $f$0$i$i78 = $1110;
    if (($1082 & 15) >>> 0 < ($1080 & 15) >>> 0) $f$1$i$i79 = ($f$0$i$i78 & 255 | 16) & 255; else $f$1$i$i79 = $f$0$i$i78;
    $1121 = $1080 & 128;
    if (($1121 | 0) != ($1081 & 128 | 0) | ($1108 | 0) == ($1121 | 0)) {
     $storemerge$in$i82 = $1082;
     $storemerge1$i81 = $f$1$i$i79;
    } else {
     $storemerge$in$i82 = $1082;
     $storemerge1$i81 = ($f$1$i$i79 & 255 | 4) & 255;
    }
   } else {
    $1083 = $1082 + 1 | 0;
    $1086 = $1083 & 128;
    $1088 = $1083 & 255 | 0 ? $1086 & 255 : 64;
    if ($1083 >>> 0 > 255) $f$0$i75 = ($1088 & 255 | 1) & 255; else $f$0$i75 = $1088;
    if (($1083 & 15) >>> 0 > ($1080 & 15) >>> 0) $f$1$i76 = $f$0$i75; else $f$1$i76 = ($f$0$i75 & 255 | 16) & 255;
    $1099 = $1080 & 128;
    if (($1099 | 0) != ($1081 & 128 | 0) | ($1086 | 0) == ($1099 | 0)) {
     $storemerge$in$i82 = $1083;
     $storemerge1$i81 = $f$1$i76;
    } else {
     $storemerge$in$i82 = $1083;
     $storemerge1$i81 = ($f$1$i76 & 255 | 4) & 255;
    }
   }
   HEAP8[$1074 >> 0] = $storemerge1$i81;
   HEAP8[$1078 >> 0] = $storemerge$in$i82;
   $$0 = 8;
   return $$0 | 0;
  }
 case 141:
  {
   $1130 = $this + 6 | 0;
   $1131 = HEAP16[$1130 >> 1] | 0;
   $1134 = $1130 + 1 | 0;
   $1136 = ($1131 & 65535) >>> 8 & 65535;
   $1137 = HEAPU8[$this + 8 >> 0] | 0;
   $1138 = $1136 + $1137 | 0;
   if (!($1131 & 1)) {
    $1164 = $1138 & 128;
    $1166 = $1138 & 255 | 0 ? $1164 & 255 : 64;
    if ($1138 >>> 0 > 255) $f$0$i$i68 = ($1166 & 255 | 1) & 255; else $f$0$i$i68 = $1166;
    if (($1138 & 15) >>> 0 < ($1136 & 15) >>> 0) $f$1$i$i69 = ($f$0$i$i68 & 255 | 16) & 255; else $f$1$i$i69 = $f$0$i$i68;
    $1177 = $1136 & 128;
    if (($1177 | 0) != ($1137 & 128 | 0) | ($1164 | 0) == ($1177 | 0)) {
     $storemerge$in$i72 = $1138;
     $storemerge1$i71 = $f$1$i$i69;
    } else {
     $storemerge$in$i72 = $1138;
     $storemerge1$i71 = ($f$1$i$i69 & 255 | 4) & 255;
    }
   } else {
    $1139 = $1138 + 1 | 0;
    $1142 = $1139 & 128;
    $1144 = $1139 & 255 | 0 ? $1142 & 255 : 64;
    if ($1139 >>> 0 > 255) $f$0$i65 = ($1144 & 255 | 1) & 255; else $f$0$i65 = $1144;
    if (($1139 & 15) >>> 0 > ($1136 & 15) >>> 0) $f$1$i66 = $f$0$i65; else $f$1$i66 = ($f$0$i65 & 255 | 16) & 255;
    $1155 = $1136 & 128;
    if (($1155 | 0) != ($1137 & 128 | 0) | ($1142 | 0) == ($1155 | 0)) {
     $storemerge$in$i72 = $1139;
     $storemerge1$i71 = $f$1$i66;
    } else {
     $storemerge$in$i72 = $1139;
     $storemerge1$i71 = ($f$1$i66 & 255 | 4) & 255;
    }
   }
   HEAP8[$1130 >> 0] = $storemerge1$i71;
   HEAP8[$1134 >> 0] = $storemerge$in$i72;
   $$0 = 8;
   return $$0 | 0;
  }
 case 142:
  {
   $1184 = $this + 22 | 0;
   $1185 = HEAP16[$1184 >> 1] | 0;
   HEAP16[$1184 >> 1] = $1185 + 1 << 16 >> 16;
   $1187 = $1185 & 65535;
   $1198 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1187 >>> 11 << 3) >> 2] | 0) + ($1187 & 2047) >> 0] | 0) | 0;
   $1206 = $this + 6 | 0;
   $1207 = HEAP16[$1206 >> 1] | 0;
   $1210 = $1206 + 1 | 0;
   $1212 = ($1207 & 65535) >>> 8 & 65535;
   $1213 = HEAPU8[(HEAP32[$this + 1312 + (($1198 >>> 11 & 31) << 3) >> 2] | 0) + ($1198 & 2047) >> 0] | 0;
   $1214 = $1212 + $1213 | 0;
   if (!($1207 & 1)) {
    $1240 = $1214 & 128;
    $1242 = $1214 & 255 | 0 ? $1240 & 255 : 64;
    if ($1214 >>> 0 > 255) $f$0$i$i59 = ($1242 & 255 | 1) & 255; else $f$0$i$i59 = $1242;
    if (($1214 & 15) >>> 0 < ($1212 & 15) >>> 0) $f$1$i$i60 = ($f$0$i$i59 & 255 | 16) & 255; else $f$1$i$i60 = $f$0$i$i59;
    $1253 = $1212 & 128;
    if (($1253 | 0) != ($1213 & 128 | 0) | ($1240 | 0) == ($1253 | 0)) {
     $storemerge$in$i63 = $1214;
     $storemerge1$i62 = $f$1$i$i60;
    } else {
     $storemerge$in$i63 = $1214;
     $storemerge1$i62 = ($f$1$i$i60 & 255 | 4) & 255;
    }
   } else {
    $1215 = $1214 + 1 | 0;
    $1218 = $1215 & 128;
    $1220 = $1215 & 255 | 0 ? $1218 & 255 : 64;
    if ($1215 >>> 0 > 255) $f$0$i56 = ($1220 & 255 | 1) & 255; else $f$0$i56 = $1220;
    if (($1215 & 15) >>> 0 > ($1212 & 15) >>> 0) $f$1$i57 = $f$0$i56; else $f$1$i57 = ($f$0$i56 & 255 | 16) & 255;
    $1231 = $1212 & 128;
    if (($1231 | 0) != ($1213 & 128 | 0) | ($1218 | 0) == ($1231 | 0)) {
     $storemerge$in$i63 = $1215;
     $storemerge1$i62 = $f$1$i57;
    } else {
     $storemerge$in$i63 = $1215;
     $storemerge1$i62 = ($f$1$i57 & 255 | 4) & 255;
    }
   }
   HEAP8[$1206 >> 0] = $storemerge1$i62;
   HEAP8[$1210 >> 0] = $storemerge$in$i63;
   $$0 = 19;
   return $$0 | 0;
  }
 case 148:
  {
   $1263 = $this + 6 | 0;
   $1264 = $1263 + 1 | 0;
   $1266 = HEAPU8[$1264 >> 0] | 0;
   $1267 = HEAPU8[$this + 8 + 1 >> 0] | 0;
   $1268 = $1266 - $1267 | 0;
   $1271 = $1268 & 128;
   $1273 = $1268 & 255 | 0 ? ($1271 | 2) & 255 : 66;
   if (($1268 | 0) < 0) $f$0$i$i51 = ($1273 & 255 | 1) & 255; else $f$0$i$i51 = $1273;
   if (($1268 & 15) >>> 0 > ($1266 & 15) >>> 0) $f$1$i$i52 = ($f$0$i$i51 & 255 | 16) & 255; else $f$1$i$i52 = $f$0$i$i51;
   $1284 = $1266 & 128;
   if (($1284 | 0) == ($1267 & 128 | 0) | ($1271 | 0) == ($1284 | 0)) $f$2$i$i54 = $f$1$i$i52; else $f$2$i$i54 = ($f$1$i$i52 & 255 | 4) & 255;
   HEAP8[$1263 >> 0] = $f$2$i$i54;
   HEAP8[$1264 >> 0] = $1268;
   $$0 = 8;
   return $$0 | 0;
  }
 case 149:
  {
   $1294 = $this + 6 | 0;
   $1295 = $1294 + 1 | 0;
   $1297 = HEAPU8[$1295 >> 0] | 0;
   $1298 = HEAPU8[$this + 8 >> 0] | 0;
   $1299 = $1297 - $1298 | 0;
   $1302 = $1299 & 128;
   $1304 = $1299 & 255 | 0 ? ($1302 | 2) & 255 : 66;
   if (($1299 | 0) < 0) $f$0$i$i45 = ($1304 & 255 | 1) & 255; else $f$0$i$i45 = $1304;
   if (($1299 & 15) >>> 0 > ($1297 & 15) >>> 0) $f$1$i$i46 = ($f$0$i$i45 & 255 | 16) & 255; else $f$1$i$i46 = $f$0$i$i45;
   $1315 = $1297 & 128;
   if (($1315 | 0) == ($1298 & 128 | 0) | ($1302 | 0) == ($1315 | 0)) $f$2$i$i48 = $f$1$i$i46; else $f$2$i$i48 = ($f$1$i$i46 & 255 | 4) & 255;
   HEAP8[$1294 >> 0] = $f$2$i$i48;
   HEAP8[$1295 >> 0] = $1299;
   $$0 = 8;
   return $$0 | 0;
  }
 case 150:
  {
   $1323 = $this + 22 | 0;
   $1324 = HEAP16[$1323 >> 1] | 0;
   HEAP16[$1323 >> 1] = $1324 + 1 << 16 >> 16;
   $1326 = $1324 & 65535;
   $1337 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1326 >>> 11 << 3) >> 2] | 0) + ($1326 & 2047) >> 0] | 0) | 0;
   $1345 = $this + 6 | 0;
   $1346 = $1345 + 1 | 0;
   $1348 = HEAPU8[$1346 >> 0] | 0;
   $1349 = HEAPU8[(HEAP32[$this + 1312 + (($1337 >>> 11 & 31) << 3) >> 2] | 0) + ($1337 & 2047) >> 0] | 0;
   $1350 = $1348 - $1349 | 0;
   $1353 = $1350 & 128;
   $1355 = $1350 & 255 | 0 ? ($1353 | 2) & 255 : 66;
   if (($1350 | 0) < 0) $f$0$i$i40 = ($1355 & 255 | 1) & 255; else $f$0$i$i40 = $1355;
   if (($1350 & 15) >>> 0 > ($1348 & 15) >>> 0) $f$1$i$i41 = ($f$0$i$i40 & 255 | 16) & 255; else $f$1$i$i41 = $f$0$i$i40;
   $1366 = $1348 & 128;
   if (($1366 | 0) == ($1349 & 128 | 0) | ($1353 | 0) == ($1366 | 0)) $f$2$i$i43 = $f$1$i$i41; else $f$2$i$i43 = ($f$1$i$i41 & 255 | 4) & 255;
   HEAP8[$1345 >> 0] = $f$2$i$i43;
   HEAP8[$1346 >> 0] = $1350;
   $$0 = 19;
   return $$0 | 0;
  }
 case 156:
  {
   $1377 = $this + 6 | 0;
   $1378 = HEAP16[$1377 >> 1] | 0;
   $1381 = $1377 + 1 | 0;
   $1383 = ($1378 & 65535) >>> 8 & 65535;
   $1384 = HEAPU8[$this + 8 + 1 >> 0] | 0;
   $1385 = $1383 - $1384 | 0;
   if (!($1378 & 1)) {
    $1411 = $1385 & 128;
    $1413 = $1385 & 255 | 0 ? ($1411 | 2) & 255 : 66;
    if (($1385 | 0) < 0) $f$0$i$i$i32 = ($1413 & 255 | 1) & 255; else $f$0$i$i$i32 = $1413;
    if (($1385 & 15) >>> 0 > ($1383 & 15) >>> 0) $f$1$i$i$i33 = ($f$0$i$i$i32 & 255 | 16) & 255; else $f$1$i$i$i33 = $f$0$i$i$i32;
    $1424 = $1383 & 128;
    if (($1424 | 0) == ($1384 & 128 | 0) | ($1411 | 0) == ($1424 | 0)) {
     $storemerge$in$i36 = $1385;
     $storemerge1$i35 = $f$1$i$i$i33;
    } else {
     $storemerge$in$i36 = $1385;
     $storemerge1$i35 = ($f$1$i$i$i33 & 255 | 4) & 255;
    }
   } else {
    $1386 = $1385 + -1 | 0;
    $1389 = $1386 & 128;
    $1391 = $1386 & 255 | 0 ? ($1389 | 2) & 255 : 66;
    if (($1385 | 0) < 1) $f$0$i28 = ($1391 & 255 | 1) & 255; else $f$0$i28 = $1391;
    if (($1386 & 15) >>> 0 < ($1383 & 15) >>> 0) $f$1$i29 = $f$0$i28; else $f$1$i29 = ($f$0$i28 & 255 | 16) & 255;
    $1402 = $1383 & 128;
    if (($1402 | 0) == ($1384 & 128 | 0) | ($1389 | 0) == ($1402 | 0)) {
     $storemerge$in$i36 = $1386;
     $storemerge1$i35 = $f$1$i29;
    } else {
     $storemerge$in$i36 = $1386;
     $storemerge1$i35 = ($f$1$i29 & 255 | 4) & 255;
    }
   }
   HEAP8[$1377 >> 0] = $storemerge1$i35;
   HEAP8[$1381 >> 0] = $storemerge$in$i36;
   $$0 = 8;
   return $$0 | 0;
  }
 case 157:
  {
   $1433 = $this + 6 | 0;
   $1434 = HEAP16[$1433 >> 1] | 0;
   $1437 = $1433 + 1 | 0;
   $1439 = ($1434 & 65535) >>> 8 & 65535;
   $1440 = HEAPU8[$this + 8 >> 0] | 0;
   $1441 = $1439 - $1440 | 0;
   if (!($1434 & 1)) {
    $1467 = $1441 & 128;
    $1469 = $1441 & 255 | 0 ? ($1467 | 2) & 255 : 66;
    if (($1441 | 0) < 0) $f$0$i$i$i20 = ($1469 & 255 | 1) & 255; else $f$0$i$i$i20 = $1469;
    if (($1441 & 15) >>> 0 > ($1439 & 15) >>> 0) $f$1$i$i$i21 = ($f$0$i$i$i20 & 255 | 16) & 255; else $f$1$i$i$i21 = $f$0$i$i$i20;
    $1480 = $1439 & 128;
    if (($1480 | 0) == ($1440 & 128 | 0) | ($1467 | 0) == ($1480 | 0)) {
     $storemerge$in$i24 = $1441;
     $storemerge1$i23 = $f$1$i$i$i21;
    } else {
     $storemerge$in$i24 = $1441;
     $storemerge1$i23 = ($f$1$i$i$i21 & 255 | 4) & 255;
    }
   } else {
    $1442 = $1441 + -1 | 0;
    $1445 = $1442 & 128;
    $1447 = $1442 & 255 | 0 ? ($1445 | 2) & 255 : 66;
    if (($1441 | 0) < 1) $f$0$i16 = ($1447 & 255 | 1) & 255; else $f$0$i16 = $1447;
    if (($1442 & 15) >>> 0 < ($1439 & 15) >>> 0) $f$1$i17 = $f$0$i16; else $f$1$i17 = ($f$0$i16 & 255 | 16) & 255;
    $1458 = $1439 & 128;
    if (($1458 | 0) == ($1440 & 128 | 0) | ($1445 | 0) == ($1458 | 0)) {
     $storemerge$in$i24 = $1442;
     $storemerge1$i23 = $f$1$i17;
    } else {
     $storemerge$in$i24 = $1442;
     $storemerge1$i23 = ($f$1$i17 & 255 | 4) & 255;
    }
   }
   HEAP8[$1433 >> 0] = $storemerge1$i23;
   HEAP8[$1437 >> 0] = $storemerge$in$i24;
   $$0 = 8;
   return $$0 | 0;
  }
 case 158:
  {
   $1487 = $this + 22 | 0;
   $1488 = HEAP16[$1487 >> 1] | 0;
   HEAP16[$1487 >> 1] = $1488 + 1 << 16 >> 16;
   $1490 = $1488 & 65535;
   $1501 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1490 >>> 11 << 3) >> 2] | 0) + ($1490 & 2047) >> 0] | 0) | 0;
   $1509 = $this + 6 | 0;
   $1510 = HEAP16[$1509 >> 1] | 0;
   $1513 = $1509 + 1 | 0;
   $1515 = ($1510 & 65535) >>> 8 & 65535;
   $1516 = HEAPU8[(HEAP32[$this + 1312 + (($1501 >>> 11 & 31) << 3) >> 2] | 0) + ($1501 & 2047) >> 0] | 0;
   $1517 = $1515 - $1516 | 0;
   if (!($1510 & 1)) {
    $1543 = $1517 & 128;
    $1545 = $1517 & 255 | 0 ? ($1543 | 2) & 255 : 66;
    if (($1517 | 0) < 0) $f$0$i$i$i = ($1545 & 255 | 1) & 255; else $f$0$i$i$i = $1545;
    if (($1517 & 15) >>> 0 > ($1515 & 15) >>> 0) $f$1$i$i$i = ($f$0$i$i$i & 255 | 16) & 255; else $f$1$i$i$i = $f$0$i$i$i;
    $1556 = $1515 & 128;
    if (($1556 | 0) == ($1516 & 128 | 0) | ($1543 | 0) == ($1556 | 0)) {
     $storemerge$in$i = $1517;
     $storemerge1$i = $f$1$i$i$i;
    } else {
     $storemerge$in$i = $1517;
     $storemerge1$i = ($f$1$i$i$i & 255 | 4) & 255;
    }
   } else {
    $1518 = $1517 + -1 | 0;
    $1521 = $1518 & 128;
    $1523 = $1518 & 255 | 0 ? ($1521 | 2) & 255 : 66;
    if (($1517 | 0) < 1) $f$0$i = ($1523 & 255 | 1) & 255; else $f$0$i = $1523;
    if (($1518 & 15) >>> 0 < ($1515 & 15) >>> 0) $f$1$i = $f$0$i; else $f$1$i = ($f$0$i & 255 | 16) & 255;
    $1534 = $1515 & 128;
    if (($1534 | 0) == ($1516 & 128 | 0) | ($1521 | 0) == ($1534 | 0)) {
     $storemerge$in$i = $1518;
     $storemerge1$i = $f$1$i;
    } else {
     $storemerge$in$i = $1518;
     $storemerge1$i = ($f$1$i & 255 | 4) & 255;
    }
   }
   HEAP8[$1509 >> 0] = $storemerge1$i;
   HEAP8[$1513 >> 0] = $storemerge$in$i;
   $$0 = 19;
   return $$0 | 0;
  }
 case 164:
  {
   $1566 = $this + 6 | 0;
   $1567 = $1566 + 1 | 0;
   $1569 = HEAP8[$1567 >> 0] & HEAP8[$this + 8 + 1 >> 0];
   HEAP8[$1567 >> 0] = $1569;
   HEAP8[$1566 >> 0] = HEAPU8[($1569 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 165:
  {
   $1578 = $this + 6 | 0;
   $1579 = $1578 + 1 | 0;
   $1581 = HEAP8[$1579 >> 0] & HEAP8[$this + 8 >> 0];
   HEAP8[$1579 >> 0] = $1581;
   HEAP8[$1578 >> 0] = HEAPU8[($1581 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 8;
   return $$0 | 0;
  }
 case 166:
  {
   $1588 = $this + 22 | 0;
   $1589 = HEAP16[$1588 >> 1] | 0;
   HEAP16[$1588 >> 1] = $1589 + 1 << 16 >> 16;
   $1591 = $1589 & 65535;
   $1602 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1591 >>> 11 << 3) >> 2] | 0) + ($1591 & 2047) >> 0] | 0) | 0;
   $1610 = $this + 6 | 0;
   $1611 = $1610 + 1 | 0;
   $1613 = HEAP8[$1611 >> 0] & HEAP8[(HEAP32[$this + 1312 + (($1602 >>> 11 & 31) << 3) >> 2] | 0) + ($1602 & 2047) >> 0];
   HEAP8[$1611 >> 0] = $1613;
   HEAP8[$1610 >> 0] = HEAPU8[($1613 & 255) + ($this + 31) >> 0] | 16;
   $$0 = 19;
   return $$0 | 0;
  }
 case 172:
  {
   $1623 = $this + 6 | 0;
   $1624 = $1623 + 1 | 0;
   $1626 = HEAP8[$1624 >> 0] ^ HEAP8[$this + 8 + 1 >> 0];
   HEAP8[$1624 >> 0] = $1626;
   HEAP8[$1623 >> 0] = HEAP8[($1626 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 173:
  {
   $1632 = $this + 6 | 0;
   $1633 = $1632 + 1 | 0;
   $1635 = HEAP8[$1633 >> 0] ^ HEAP8[$this + 8 >> 0];
   HEAP8[$1633 >> 0] = $1635;
   HEAP8[$1632 >> 0] = HEAP8[($1635 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 174:
  {
   $1639 = $this + 22 | 0;
   $1640 = HEAP16[$1639 >> 1] | 0;
   HEAP16[$1639 >> 1] = $1640 + 1 << 16 >> 16;
   $1642 = $1640 & 65535;
   $1653 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1642 >>> 11 << 3) >> 2] | 0) + ($1642 & 2047) >> 0] | 0) | 0;
   $1661 = $this + 6 | 0;
   $1662 = $1661 + 1 | 0;
   $1664 = HEAP8[$1662 >> 0] ^ HEAP8[(HEAP32[$this + 1312 + (($1653 >>> 11 & 31) << 3) >> 2] | 0) + ($1653 & 2047) >> 0];
   HEAP8[$1662 >> 0] = $1664;
   HEAP8[$1661 >> 0] = HEAP8[($1664 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 180:
  {
   $1671 = $this + 6 | 0;
   $1672 = $1671 + 1 | 0;
   $1674 = HEAP8[$1672 >> 0] | HEAP8[$this + 8 + 1 >> 0];
   HEAP8[$1672 >> 0] = $1674;
   HEAP8[$1671 >> 0] = HEAP8[($1674 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 181:
  {
   $1680 = $this + 6 | 0;
   $1681 = $1680 + 1 | 0;
   $1683 = HEAP8[$1681 >> 0] | HEAP8[$this + 8 >> 0];
   HEAP8[$1681 >> 0] = $1683;
   HEAP8[$1680 >> 0] = HEAP8[($1683 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 182:
  {
   $1687 = $this + 22 | 0;
   $1688 = HEAP16[$1687 >> 1] | 0;
   HEAP16[$1687 >> 1] = $1688 + 1 << 16 >> 16;
   $1690 = $1688 & 65535;
   $1701 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1690 >>> 11 << 3) >> 2] | 0) + ($1690 & 2047) >> 0] | 0) | 0;
   $1709 = $this + 6 | 0;
   $1710 = $1709 + 1 | 0;
   $1712 = HEAP8[$1710 >> 0] | HEAP8[(HEAP32[$this + 1312 + (($1701 >>> 11 & 31) << 3) >> 2] | 0) + ($1701 & 2047) >> 0];
   HEAP8[$1710 >> 0] = $1712;
   HEAP8[$1709 >> 0] = HEAP8[($1712 & 255) + ($this + 31) >> 0] | 0;
   $$0 = 19;
   return $$0 | 0;
  }
 case 188:
  {
   $1719 = $this + 6 | 0;
   $1722 = HEAPU8[$1719 + 1 >> 0] | 0;
   $1723 = HEAPU8[$this + 8 + 1 >> 0] | 0;
   $1724 = $1722 - $1723 | 0;
   $1727 = $1724 & 128;
   $1729 = $1724 & 255 | 0 ? ($1727 | 2) & 255 : 66;
   if (($1724 | 0) < 0) $f$0$i$i10 = ($1729 & 255 | 1) & 255; else $f$0$i$i10 = $1729;
   if (($1724 & 15) >>> 0 > ($1722 & 15) >>> 0) $f$1$i$i11 = ($f$0$i$i10 & 255 | 16) & 255; else $f$1$i$i11 = $f$0$i$i10;
   $1740 = $1722 & 128;
   if (($1740 | 0) == ($1723 & 128 | 0) | ($1727 | 0) == ($1740 | 0)) $f$2$i$i13 = $f$1$i$i11; else $f$2$i$i13 = ($f$1$i$i11 & 255 | 4) & 255;
   HEAP8[$1719 >> 0] = $f$2$i$i13;
   $$0 = 8;
   return $$0 | 0;
  }
 case 189:
  {
   $1749 = $this + 6 | 0;
   $1752 = HEAPU8[$1749 + 1 >> 0] | 0;
   $1753 = HEAPU8[$this + 8 >> 0] | 0;
   $1754 = $1752 - $1753 | 0;
   $1757 = $1754 & 128;
   $1759 = $1754 & 255 | 0 ? ($1757 | 2) & 255 : 66;
   if (($1754 | 0) < 0) $f$0$i$i4 = ($1759 & 255 | 1) & 255; else $f$0$i$i4 = $1759;
   if (($1754 & 15) >>> 0 > ($1752 & 15) >>> 0) $f$1$i$i5 = ($f$0$i$i4 & 255 | 16) & 255; else $f$1$i$i5 = $f$0$i$i4;
   $1770 = $1752 & 128;
   if (($1770 | 0) == ($1753 & 128 | 0) | ($1757 | 0) == ($1770 | 0)) $f$2$i$i7 = $f$1$i$i5; else $f$2$i$i7 = ($f$1$i$i5 & 255 | 4) & 255;
   HEAP8[$1749 >> 0] = $f$2$i$i7;
   $$0 = 8;
   return $$0 | 0;
  }
 case 190:
  {
   $1777 = $this + 22 | 0;
   $1778 = HEAP16[$1777 >> 1] | 0;
   HEAP16[$1777 >> 1] = $1778 + 1 << 16 >> 16;
   $1780 = $1778 & 65535;
   $1791 = (HEAPU16[$this + 8 >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($1780 >>> 11 << 3) >> 2] | 0) + ($1780 & 2047) >> 0] | 0) | 0;
   $1799 = $this + 6 | 0;
   $1802 = HEAPU8[$1799 + 1 >> 0] | 0;
   $1803 = HEAPU8[(HEAP32[$this + 1312 + (($1791 >>> 11 & 31) << 3) >> 2] | 0) + ($1791 & 2047) >> 0] | 0;
   $1804 = $1802 - $1803 | 0;
   $1807 = $1804 & 128;
   $1809 = $1804 & 255 | 0 ? ($1807 | 2) & 255 : 66;
   if (($1804 | 0) < 0) $f$0$i$i = ($1809 & 255 | 1) & 255; else $f$0$i$i = $1809;
   if (($1804 & 15) >>> 0 > ($1802 & 15) >>> 0) $f$1$i$i = ($f$0$i$i & 255 | 16) & 255; else $f$1$i$i = $f$0$i$i;
   $1820 = $1802 & 128;
   if (($1820 | 0) == ($1803 & 128 | 0) | ($1807 | 0) == ($1820 | 0)) $f$2$i$i = $f$1$i$i; else $f$2$i$i = ($f$1$i$i & 255 | 4) & 255;
   HEAP8[$1799 >> 0] = $f$2$i$i;
   $$0 = 19;
   return $$0 | 0;
  }
 case 203:
  {
   $$0 = __ZN4yakc3z808dd_fd_cbEh($this, -35) | 0;
   return $$0 | 0;
  }
 case 225:
  {
   $1828 = $this + 12 | 0;
   $1830 = HEAPU16[$1828 >> 1] | 0;
   $1837 = $1830 + 1 | 0;
   HEAP16[$this + 8 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($1837 >>> 11 & 31) << 3) >> 2] | 0) + ($1837 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($1830 >>> 11 << 3) >> 2] | 0) + ($1830 & 2047) >> 0];
   HEAP16[$1828 >> 1] = $1830 + 2;
   $$0 = 14;
   return $$0 | 0;
  }
 case 227:
  {
   $1855 = HEAPU16[$this + 12 >> 1] | 0;
   $1857 = $1855 >>> 11;
   $1860 = (HEAP32[$this + 1312 + ($1857 << 3) >> 2] | 0) + ($1855 & 2047) | 0;
   $1862 = $1855 + 1 | 0;
   $1863 = $1862 & 2047;
   $1865 = $1862 >>> 11 & 31;
   $1866 = $this + 1312 + ($1865 << 3) | 0;
   $1874 = (HEAPU8[(HEAP32[$1866 >> 2] | 0) + $1863 >> 0] << 8 | HEAPU8[$1860 >> 0]) & 65535;
   $1875 = $this + 8 | 0;
   $1876 = HEAP16[$1875 >> 1] | 0;
   if (HEAP8[$this + 1312 + ($1857 << 3) + 4 >> 0] | 0) HEAP8[$1860 >> 0] = $1876;
   if (HEAP8[$this + 1312 + ($1865 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$1866 >> 2] | 0) + $1863 >> 0] = ($1876 & 65535) >>> 8;
   HEAP16[$1875 >> 1] = $1874;
   $$0 = 23;
   return $$0 | 0;
  }
 case 229:
  {
   $1888 = $this + 12 | 0;
   $1890 = HEAPU16[$1888 >> 1] | 0;
   $1891 = $1890 + 65534 | 0;
   HEAP16[$1888 >> 1] = $1891;
   $1894 = HEAP16[$this + 8 >> 1] | 0;
   $1896 = $1891 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($1896 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($1896 << 3) >> 2] | 0) + ($1891 & 2047) >> 0] = $1894;
   $1907 = ($1890 + 65535 | 0) >>> 11 & 31;
   if (!(HEAP8[$this + 1312 + ($1907 << 3) + 4 >> 0] | 0)) {
    $$0 = 15;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$this + 1312 + ($1907 << 3) >> 2] | 0) + ($1890 + 2047 & 2047) >> 0] = ($1894 & 65535) >>> 8;
   $$0 = 15;
   return $$0 | 0;
  }
 case 233:
  {
   HEAP16[$this + 22 >> 1] = HEAP16[$this + 8 >> 1] | 0;
   $$0 = 8;
   return $$0 | 0;
  }
 case 249:
  {
   HEAP16[$this + 12 >> 1] = HEAP16[$this + 8 >> 1] | 0;
   $$0 = 10;
   return $$0 | 0;
  }
 case 127:
 case 109:
 case 100:
 case 91:
 case 82:
 case 73:
 case 64:
  {
   $$0 = 8;
   return $$0 | 0;
  }
 default:
  {
   if (!(HEAP8[$this + 3634 >> 0] | 0)) {
    $$0 = 4;
    return $$0 | 0;
   }
   HEAP8[$this + 30 >> 0] = 1;
   $1927 = $this + 22 | 0;
   HEAP16[$1927 >> 1] = (HEAPU16[$1927 >> 1] | 0) + 65534;
   $$0 = 4;
   return $$0 | 0;
  }
 } while (0);
 return 0;
}

function ___floatscan($f, $prec, $pok) {
 $f = $f | 0;
 $prec = $prec | 0;
 $pok = $pok | 0;
 var $$0 = 0.0, $$010$i = 0, $$012$i = 0, $$07$i = 0, $$0710$i = 0, $$0711$i = 0, $$1$i = 0.0, $$111$be$i = 0, $$111$ph$i = 0, $$2$i = 0, $$24$i = 0, $$3$be$i = 0, $$3$lcssa$i = 0, $$3112$i = 0, $$in = 0, $$lcssa = 0, $$lcssa258 = 0, $$lcssa258$lcssa = 0, $$lcssa259 = 0, $$lcssa259$lcssa = 0, $$lcssa265 = 0, $$lcssa266 = 0, $$lcssa267 = 0, $$lcssa277 = 0, $$not$i = 0, $$pre$i = 0, $$pre$i17 = 0, $$pre$phi43$iZ2D = 0.0, $$sink$off0$i = 0, $0 = 0, $1 = 0, $115 = 0, $123 = 0, $125 = 0, $132 = 0, $139 = 0, $147 = 0, $15 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $159 = 0, $16 = 0, $160 = 0, $164 = 0, $169 = 0, $171 = 0, $183 = 0.0, $190 = 0, $192 = 0, $2 = 0, $201 = 0, $205 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $223 = 0, $224 = 0, $225 = 0, $235 = 0, $236 = 0, $249 = 0, $251 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $270 = 0, $272 = 0, $283 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $295 = 0, $297 = 0, $298 = 0, $299 = 0, $300 = 0, $310 = 0.0, $322 = 0.0, $330 = 0, $331 = 0, $338 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $350 = 0, $358 = 0, $36 = 0, $360 = 0, $362 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $371 = 0, $376 = 0, $377 = 0, $381 = 0, $39 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $402 = 0, $403 = 0, $412 = 0, $413 = 0, $414 = 0, $42 = 0, $422 = 0, $427 = 0, $428 = 0, $430 = 0, $431 = 0, $444 = 0, $446 = 0, $456 = 0, $458 = 0, $470 = 0, $471 = 0, $472 = 0, $493 = 0, $505 = 0, $509 = 0, $512 = 0, $514 = 0, $515 = 0, $516 = 0, $519 = 0, $520 = 0, $532 = 0, $533 = 0, $534 = 0, $538 = 0, $540 = 0, $542 = 0, $543 = 0, $549 = 0, $551 = 0, $556 = 0, $559 = 0, $563 = 0, $566 = 0, $571 = 0, $575 = 0, $576 = 0, $578 = 0, $582 = 0, $584 = 0, $587 = 0, $588 = 0, $589 = 0, $590 = 0, $593 = 0, $594 = 0, $60 = 0, $603 = 0, $608 = 0, $609 = 0, $616 = 0, $618 = 0.0, $620 = 0, $624 = 0.0, $625 = 0.0, $628 = 0.0, $632 = 0, $635 = 0, $642 = 0.0, $660 = 0.0, $662 = 0, $668 = 0, $669 = 0, $67 = 0, $679 = 0, $69 = 0, $690 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $720 = 0, $721 = 0, $722 = 0, $77 = 0, $82 = 0, $9 = 0, $90 = 0, $99 = 0, $a$0$lcssa161$i = 0, $a$093$i = 0, $a$1$i = 0, $a$1$i$lcssa = 0, $a$2$ph46$i = 0, $a$4$i = 0, $a$4$i$lcssa250 = 0, $a$4$i251 = 0, $a$4$ph$i = 0, $a$4$ph167$i = 0, $a$586$i = 0, $a$6$i = 0, $a$6$i$lcssa = 0, $a$6$i$lcssa$lcssa = 0, $bias$0$i = 0.0, $bias$0$i25 = 0.0, $bits$0$ph = 0, $c$0 = 0, $c$0$i = 0, $c$1$lcssa = 0, $c$1$ph$i = 0, $c$179 = 0, $c$2 = 0, $c$2$i = 0, $c$2$lcssa$i = 0, $c$377 = 0, $c$4 = 0, $c$5 = 0, $c$6 = 0, $carry$095$i = 0, $carry1$0$i = 0, $carry1$1$i = 0, $carry1$1$i$lcssa = 0, $carry1$1$i$lcssa$lcssa = 0, $carry4$089$i = 0, $d$0$i = 0, $denormal$0$i = 0, $denormal$2$i = 0, $e2$0$i19 = 0, $e2$0$ph$i = 0, $e2$1$i = 0, $e2$1$i248 = 0, $e2$1$ph$i = 0, $e2$1$ph166$i = 0, $e2$3$i = 0, $e2$4$i = 0, $emin$0$ph = 0, $frac$0$i = 0.0, $frac$1$i = 0.0, $frac$3$i = 0.0, $gotdig$0$i = 0, $gotdig$0$i$lcssa244 = 0, $gotdig$0$i12 = 0, $gotdig$0$i12$lcssa275 = 0, $gotdig$2$i = 0, $gotdig$2$i$lcssa = 0, $gotdig$2$i13 = 0, $gotdig$3$i = 0, $gotdig$3$lcssa$i = 0, $gotdig$3108$i = 0, $gotdig$3108$i$lcssa = 0, $gotdig$4$i = 0, $gotrad$0$i = 0, $gotrad$0$i$lcssa = 0, $gotrad$0$i14 = 0, $gotrad$1$i = 0, $gotrad$1$lcssa$i = 0, $gotrad$1109$i = 0, $gotrad$2$i = 0, $gottail$0$i = 0, $gottail$1$i = 0, $gottail$2$i = 0, $i$0$lcssa = 0, $i$078 = 0, $i$1 = 0, $i$276 = 0, $i$3 = 0, $i$4 = 0, $i$4$lcssa = 0, $j$0$lcssa$i = 0, $j$0111$i = 0, $j$0111$i$lcssa = 0, $j$075$i = 0, $j$076$i = 0, $j$077$i = 0, $j$2$i = 0, $j$3102$i = 0, $k$0$lcssa$i = 0, $k$0110$i = 0, $k$0110$i$lcssa = 0, $k$071$i = 0, $k$072$i = 0, $k$073$i = 0, $k$2$i = 0, $k$3$i = 0, $k$494$i = 0, $k$5$i = 0, $k$5$in$i = 0, $k$687$i = 0, $lnz$0$lcssa$i = 0, $lnz$0107$i = 0, $lnz$0107$i$lcssa = 0, $lnz$065$i = 0, $lnz$066$i = 0, $lnz$067$i = 0, $lnz$2$i = 0, $or$cond21$i = 0, $or$cond25$i = 0, $or$cond9$i = 0, $rp$0$lcssa162$i = 0, $rp$092$i = 0, $rp$1$i18 = 0, $rp$1$i18$lcssa = 0, $rp$2$ph44$i = 0, $rp$4$ph$i = 0, $rp$4$ph42$i = 0, $rp$585$i = 0, $rp$6$i = 0, $rp$6$i$lcssa = 0, $rp$6$i$lcssa$lcssa = 0, $scale$0$i = 0.0, $scale$1$i = 0.0, $scale$2$i = 0.0, $sign$0 = 0, $storemerge$i = 0, $sum$i = 0, $x$0$i = 0, $x$0$i$lcssa = 0, $x$1$i = 0, $x$2$i = 0, $x$3$lcssa$i = 0, $x$324$i = 0, $x$4$lcssa$i = 0, $x$419$i = 0, $x$5$i = 0, $x$i = 0, $y$0$i = 0.0, $y$0$i$lcssa = 0.0, $y$1$i = 0.0, $y$1$i24 = 0.0, $y$2$i = 0.0, $y$2$i26 = 0.0, $y$3$i = 0.0, $y$3$lcssa$i = 0.0, $y$320$i = 0.0, $y$4$i = 0.0, $z$0$i = 0, $z$1$i = 0, $z$1$ph45$i = 0, $z$10$1$i = 0, $z$10$i = 0, $z$2$i = 0, $z$3$i = 0, $z$3$i$lcssa = 0, $z$3$i$lcssa$lcssa = 0, $z$4$i = 0, $z$6$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 $x$i = sp;
 switch ($prec | 0) {
 case 0:
  {
   $bits$0$ph = 24;
   $emin$0$ph = -149;
   label = 4;
   break;
  }
 case 1:
  {
   $bits$0$ph = 53;
   $emin$0$ph = -1074;
   label = 4;
   break;
  }
 case 2:
  {
   $bits$0$ph = 53;
   $emin$0$ph = -1074;
   label = 4;
   break;
  }
 default:
  $$0 = 0.0;
 }
 L4 : do if ((label | 0) == 4) {
  $0 = $f + 4 | 0;
  $1 = $f + 100 | 0;
  do {
   $2 = HEAP32[$0 >> 2] | 0;
   if ($2 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $2 + 1;
    $9 = HEAPU8[$2 >> 0] | 0;
   } else $9 = ___shgetc($f) | 0;
  } while ((_isspace($9) | 0) != 0);
  $$lcssa277 = $9;
  L13 : do switch ($$lcssa277 | 0) {
  case 43:
  case 45:
   {
    $15 = 1 - ((($$lcssa277 | 0) == 45 & 1) << 1) | 0;
    $16 = HEAP32[$0 >> 2] | 0;
    if ($16 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $16 + 1;
     $c$0 = HEAPU8[$16 >> 0] | 0;
     $sign$0 = $15;
     break L13;
    } else {
     $c$0 = ___shgetc($f) | 0;
     $sign$0 = $15;
     break L13;
    }
    break;
   }
  default:
   {
    $c$0 = $$lcssa277;
    $sign$0 = 1;
   }
  } while (0);
  $c$179 = $c$0;
  $i$078 = 0;
  while (1) {
   if (($c$179 | 32 | 0) != (HEAP8[146280 + $i$078 >> 0] | 0)) {
    $c$1$lcssa = $c$179;
    $i$0$lcssa = $i$078;
    break;
   }
   do if ($i$078 >>> 0 < 7) {
    $29 = HEAP32[$0 >> 2] | 0;
    if ($29 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $29 + 1;
     $c$2 = HEAPU8[$29 >> 0] | 0;
     break;
    } else {
     $c$2 = ___shgetc($f) | 0;
     break;
    }
   } else $c$2 = $c$179; while (0);
   $36 = $i$078 + 1 | 0;
   if ($36 >>> 0 < 8) {
    $c$179 = $c$2;
    $i$078 = $36;
   } else {
    $c$1$lcssa = $c$2;
    $i$0$lcssa = $36;
    break;
   }
  }
  L29 : do switch ($i$0$lcssa | 0) {
  case 8:
   break;
  case 3:
   {
    label = 23;
    break;
   }
  default:
   {
    $39 = ($pok | 0) != 0;
    if ($39 & $i$0$lcssa >>> 0 > 3) if (($i$0$lcssa | 0) == 8) break L29; else {
     label = 23;
     break L29;
    }
    L34 : do if (!$i$0$lcssa) {
     $c$377 = $c$1$lcssa;
     $i$276 = 0;
     while (1) {
      if (($c$377 | 32 | 0) != (HEAP8[146289 + $i$276 >> 0] | 0)) {
       $c$5 = $c$377;
       $i$3 = $i$276;
       break L34;
      }
      do if ($i$276 >>> 0 < 2) {
       $60 = HEAP32[$0 >> 2] | 0;
       if ($60 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $60 + 1;
        $c$4 = HEAPU8[$60 >> 0] | 0;
        break;
       } else {
        $c$4 = ___shgetc($f) | 0;
        break;
       }
      } else $c$4 = $c$377; while (0);
      $67 = $i$276 + 1 | 0;
      if ($67 >>> 0 < 3) {
       $c$377 = $c$4;
       $i$276 = $67;
      } else {
       $c$5 = $c$4;
       $i$3 = $67;
       break;
      }
     }
    } else {
     $c$5 = $c$1$lcssa;
     $i$3 = $i$0$lcssa;
    } while (0);
    switch ($i$3 | 0) {
    case 3:
     {
      $69 = HEAP32[$0 >> 2] | 0;
      if ($69 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
       HEAP32[$0 >> 2] = $69 + 1;
       $77 = HEAPU8[$69 >> 0] | 0;
      } else $77 = ___shgetc($f) | 0;
      if (($77 | 0) == 40) $i$4 = 1; else {
       if (!(HEAP32[$1 >> 2] | 0)) {
        $$0 = nan;
        break L4;
       }
       HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
       $$0 = nan;
       break L4;
      }
      while (1) {
       $82 = HEAP32[$0 >> 2] | 0;
       if ($82 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $82 + 1;
        $90 = HEAPU8[$82 >> 0] | 0;
       } else $90 = ___shgetc($f) | 0;
       if (!(($90 + -48 | 0) >>> 0 < 10 | ($90 + -65 | 0) >>> 0 < 26)) if (!(($90 | 0) == 95 | ($90 + -97 | 0) >>> 0 < 26)) {
        $$lcssa = $90;
        $i$4$lcssa = $i$4;
        break;
       }
       $i$4 = $i$4 + 1 | 0;
      }
      if (($$lcssa | 0) == 41) {
       $$0 = nan;
       break L4;
      }
      $99 = (HEAP32[$1 >> 2] | 0) == 0;
      if (!$99) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      if (!$39) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim($f, 0);
       $$0 = 0.0;
       break L4;
      }
      if (!$i$4$lcssa) {
       $$0 = nan;
       break L4;
      } else $$in = $i$4$lcssa;
      while (1) {
       $$in = $$in + -1 | 0;
       if (!$99) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
       if (!$$in) {
        $$0 = nan;
        break L4;
       }
      }
      break;
     }
    case 0:
     {
      do if (($c$5 | 0) == 48) {
       $115 = HEAP32[$0 >> 2] | 0;
       if ($115 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $115 + 1;
        $123 = HEAPU8[$115 >> 0] | 0;
       } else $123 = ___shgetc($f) | 0;
       if (($123 | 32 | 0) != 120) {
        if (!(HEAP32[$1 >> 2] | 0)) {
         $c$6 = 48;
         break;
        }
        HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
        $c$6 = 48;
        break;
       }
       $125 = HEAP32[$0 >> 2] | 0;
       if ($125 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $125 + 1;
        $c$0$i = HEAPU8[$125 >> 0] | 0;
        $gotdig$0$i = 0;
       } else {
        $c$0$i = ___shgetc($f) | 0;
        $gotdig$0$i = 0;
       }
       L94 : while (1) {
        switch ($c$0$i | 0) {
        case 46:
         {
          $gotdig$0$i$lcssa244 = $gotdig$0$i;
          label = 74;
          break L94;
          break;
         }
        case 48:
         break;
        default:
         {
          $169 = 0;
          $171 = 0;
          $693 = 0;
          $694 = 0;
          $c$2$i = $c$0$i;
          $gotdig$2$i = $gotdig$0$i;
          $gotrad$0$i = 0;
          $gottail$0$i = 0;
          $scale$0$i = 1.0;
          $x$0$i = 0;
          $y$0$i = 0.0;
          break L94;
         }
        }
        $132 = HEAP32[$0 >> 2] | 0;
        if ($132 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
         HEAP32[$0 >> 2] = $132 + 1;
         $c$0$i = HEAPU8[$132 >> 0] | 0;
         $gotdig$0$i = 1;
         continue;
        } else {
         $c$0$i = ___shgetc($f) | 0;
         $gotdig$0$i = 1;
         continue;
        }
       }
       if ((label | 0) == 74) {
        $139 = HEAP32[$0 >> 2] | 0;
        if ($139 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
         HEAP32[$0 >> 2] = $139 + 1;
         $c$1$ph$i = HEAPU8[$139 >> 0] | 0;
        } else $c$1$ph$i = ___shgetc($f) | 0;
        if (($c$1$ph$i | 0) == 48) {
         $154 = 0;
         $155 = 0;
         while (1) {
          $147 = HEAP32[$0 >> 2] | 0;
          if ($147 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
           HEAP32[$0 >> 2] = $147 + 1;
           $159 = HEAPU8[$147 >> 0] | 0;
          } else $159 = ___shgetc($f) | 0;
          $156 = _i64Add($154 | 0, $155 | 0, -1, -1) | 0;
          $157 = tempRet0;
          if (($159 | 0) == 48) {
           $154 = $156;
           $155 = $157;
          } else {
           $169 = 0;
           $171 = 0;
           $693 = $156;
           $694 = $157;
           $c$2$i = $159;
           $gotdig$2$i = 1;
           $gotrad$0$i = 1;
           $gottail$0$i = 0;
           $scale$0$i = 1.0;
           $x$0$i = 0;
           $y$0$i = 0.0;
           break;
          }
         }
        } else {
         $169 = 0;
         $171 = 0;
         $693 = 0;
         $694 = 0;
         $c$2$i = $c$1$ph$i;
         $gotdig$2$i = $gotdig$0$i$lcssa244;
         $gotrad$0$i = 1;
         $gottail$0$i = 0;
         $scale$0$i = 1.0;
         $x$0$i = 0;
         $y$0$i = 0.0;
        }
       }
       while (1) {
        $160 = $c$2$i + -48 | 0;
        $$pre$i = $c$2$i | 32;
        if ($160 >>> 0 < 10) label = 86; else {
         $164 = ($c$2$i | 0) == 46;
         if (!($164 | ($$pre$i + -97 | 0) >>> 0 < 6)) {
          $213 = $171;
          $214 = $693;
          $216 = $169;
          $217 = $694;
          $c$2$lcssa$i = $c$2$i;
          $gotdig$2$i$lcssa = $gotdig$2$i;
          $gotrad$0$i$lcssa = $gotrad$0$i;
          $x$0$i$lcssa = $x$0$i;
          $y$0$i$lcssa = $y$0$i;
          break;
         }
         if ($164) if (!$gotrad$0$i) {
          $695 = $171;
          $696 = $169;
          $697 = $171;
          $698 = $169;
          $gotdig$3$i = $gotdig$2$i;
          $gotrad$1$i = 1;
          $gottail$2$i = $gottail$0$i;
          $scale$2$i = $scale$0$i;
          $x$2$i = $x$0$i;
          $y$2$i = $y$0$i;
         } else {
          $213 = $171;
          $214 = $693;
          $216 = $169;
          $217 = $694;
          $c$2$lcssa$i = 46;
          $gotdig$2$i$lcssa = $gotdig$2$i;
          $gotrad$0$i$lcssa = $gotrad$0$i;
          $x$0$i$lcssa = $x$0$i;
          $y$0$i$lcssa = $y$0$i;
          break;
         } else label = 86;
        }
        if ((label | 0) == 86) {
         label = 0;
         $d$0$i = ($c$2$i | 0) > 57 ? $$pre$i + -87 | 0 : $160;
         do if (($169 | 0) < 0 | ($169 | 0) == 0 & $171 >>> 0 < 8) {
          $gottail$1$i = $gottail$0$i;
          $scale$1$i = $scale$0$i;
          $x$1$i = $d$0$i + ($x$0$i << 4) | 0;
          $y$1$i = $y$0$i;
         } else {
          if (($169 | 0) < 0 | ($169 | 0) == 0 & $171 >>> 0 < 14) {
           $183 = $scale$0$i * .0625;
           $gottail$1$i = $gottail$0$i;
           $scale$1$i = $183;
           $x$1$i = $x$0$i;
           $y$1$i = $y$0$i + $183 * +($d$0$i | 0);
           break;
          }
          if (($gottail$0$i | 0) != 0 | ($d$0$i | 0) == 0) {
           $gottail$1$i = $gottail$0$i;
           $scale$1$i = $scale$0$i;
           $x$1$i = $x$0$i;
           $y$1$i = $y$0$i;
          } else {
           $gottail$1$i = 1;
           $scale$1$i = $scale$0$i;
           $x$1$i = $x$0$i;
           $y$1$i = $y$0$i + $scale$0$i * .5;
          }
         } while (0);
         $190 = _i64Add($171 | 0, $169 | 0, 1, 0) | 0;
         $695 = $693;
         $696 = $694;
         $697 = $190;
         $698 = tempRet0;
         $gotdig$3$i = 1;
         $gotrad$1$i = $gotrad$0$i;
         $gottail$2$i = $gottail$1$i;
         $scale$2$i = $scale$1$i;
         $x$2$i = $x$1$i;
         $y$2$i = $y$1$i;
        }
        $192 = HEAP32[$0 >> 2] | 0;
        if ($192 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
         HEAP32[$0 >> 2] = $192 + 1;
         $169 = $698;
         $171 = $697;
         $693 = $695;
         $694 = $696;
         $c$2$i = HEAPU8[$192 >> 0] | 0;
         $gotdig$2$i = $gotdig$3$i;
         $gotrad$0$i = $gotrad$1$i;
         $gottail$0$i = $gottail$2$i;
         $scale$0$i = $scale$2$i;
         $x$0$i = $x$2$i;
         $y$0$i = $y$2$i;
         continue;
        } else {
         $169 = $698;
         $171 = $697;
         $693 = $695;
         $694 = $696;
         $c$2$i = ___shgetc($f) | 0;
         $gotdig$2$i = $gotdig$3$i;
         $gotrad$0$i = $gotrad$1$i;
         $gottail$0$i = $gottail$2$i;
         $scale$0$i = $scale$2$i;
         $x$0$i = $x$2$i;
         $y$0$i = $y$2$i;
         continue;
        }
       }
       if (!$gotdig$2$i$lcssa) {
        $201 = (HEAP32[$1 >> 2] | 0) == 0;
        if (!$201) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
        if (!$pok) ___shlim($f, 0); else if (!$201) {
         $205 = HEAP32[$0 >> 2] | 0;
         HEAP32[$0 >> 2] = $205 + -1;
         if ($gotrad$0$i$lcssa | 0) HEAP32[$0 >> 2] = $205 + -2;
        }
        $$0 = +($sign$0 | 0) * 0.0;
        break L4;
       }
       $211 = ($gotrad$0$i$lcssa | 0) == 0;
       $212 = $211 ? $213 : $214;
       $215 = $211 ? $216 : $217;
       if (($216 | 0) < 0 | ($216 | 0) == 0 & $213 >>> 0 < 8) {
        $224 = $213;
        $225 = $216;
        $x$324$i = $x$0$i$lcssa;
        while (1) {
         $223 = $x$324$i << 4;
         $224 = _i64Add($224 | 0, $225 | 0, 1, 0) | 0;
         $225 = tempRet0;
         if (!(($225 | 0) < 0 | ($225 | 0) == 0 & $224 >>> 0 < 8)) {
          $x$3$lcssa$i = $223;
          break;
         } else $x$324$i = $223;
        }
       } else $x$3$lcssa$i = $x$0$i$lcssa;
       if (($c$2$lcssa$i | 32 | 0) == 112) {
        $235 = _scanexp($f, $pok) | 0;
        $236 = tempRet0;
        if (($235 | 0) == 0 & ($236 | 0) == -2147483648) {
         if (!$pok) {
          ___shlim($f, 0);
          $$0 = 0.0;
          break L4;
         }
         if (!(HEAP32[$1 >> 2] | 0)) {
          $253 = 0;
          $254 = 0;
         } else {
          HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
          $253 = 0;
          $254 = 0;
         }
        } else {
         $253 = $235;
         $254 = $236;
        }
       } else if (!(HEAP32[$1 >> 2] | 0)) {
        $253 = 0;
        $254 = 0;
       } else {
        HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
        $253 = 0;
        $254 = 0;
       }
       $249 = _bitshift64Shl($212 | 0, $215 | 0, 2) | 0;
       $251 = _i64Add($249 | 0, tempRet0 | 0, -32, -1) | 0;
       $255 = _i64Add($251 | 0, tempRet0 | 0, $253 | 0, $254 | 0) | 0;
       $256 = tempRet0;
       if (!$x$3$lcssa$i) {
        $$0 = +($sign$0 | 0) * 0.0;
        break L4;
       }
       if (($256 | 0) > 0 | ($256 | 0) == 0 & $255 >>> 0 > (0 - $emin$0$ph | 0) >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$0 = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break L4;
       }
       $270 = $emin$0$ph + -106 | 0;
       $272 = (($270 | 0) < 0) << 31 >> 31;
       if (($256 | 0) < ($272 | 0) | ($256 | 0) == ($272 | 0) & $255 >>> 0 < $270 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$0 = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break L4;
       }
       if (($x$3$lcssa$i | 0) > -1) {
        $288 = $255;
        $289 = $256;
        $x$419$i = $x$3$lcssa$i;
        $y$320$i = $y$0$i$lcssa;
        while (1) {
         $283 = !($y$320$i >= .5);
         $287 = $283 & 1 | $x$419$i << 1;
         $x$5$i = $287 ^ 1;
         $y$4$i = $y$320$i + ($283 ? $y$320$i : $y$320$i + -1.0);
         $290 = _i64Add($288 | 0, $289 | 0, -1, -1) | 0;
         $291 = tempRet0;
         if (($287 | 0) > -1) {
          $288 = $290;
          $289 = $291;
          $x$419$i = $x$5$i;
          $y$320$i = $y$4$i;
         } else {
          $297 = $290;
          $298 = $291;
          $x$4$lcssa$i = $x$5$i;
          $y$3$lcssa$i = $y$4$i;
          break;
         }
        }
       } else {
        $297 = $255;
        $298 = $256;
        $x$4$lcssa$i = $x$3$lcssa$i;
        $y$3$lcssa$i = $y$0$i$lcssa;
       }
       $295 = _i64Subtract(32, 0, $emin$0$ph | 0, (($emin$0$ph | 0) < 0) << 31 >> 31 | 0) | 0;
       $299 = _i64Add($297 | 0, $298 | 0, $295 | 0, tempRet0 | 0) | 0;
       $300 = tempRet0;
       if (0 > ($300 | 0) | 0 == ($300 | 0) & $bits$0$ph >>> 0 > $299 >>> 0) if (($299 | 0) < 0) {
        $$0710$i = 0;
        label = 127;
       } else {
        $$07$i = $299;
        label = 125;
       } else {
        $$07$i = $bits$0$ph;
        label = 125;
       }
       if ((label | 0) == 125) if (($$07$i | 0) < 53) {
        $$0710$i = $$07$i;
        label = 127;
       } else {
        $$0711$i = $$07$i;
        $$pre$phi43$iZ2D = +($sign$0 | 0);
        $bias$0$i = 0.0;
       }
       if ((label | 0) == 127) {
        $310 = +($sign$0 | 0);
        $$0711$i = $$0710$i;
        $$pre$phi43$iZ2D = $310;
        $bias$0$i = +_copysignl(+_scalbn(1.0, 84 - $$0710$i | 0), $310);
       }
       $or$cond9$i = ($x$4$lcssa$i & 1 | 0) == 0 & ($y$3$lcssa$i != 0.0 & ($$0711$i | 0) < 32);
       $322 = $$pre$phi43$iZ2D * ($or$cond9$i ? 0.0 : $y$3$lcssa$i) + ($bias$0$i + $$pre$phi43$iZ2D * +((($or$cond9$i & 1) + $x$4$lcssa$i | 0) >>> 0)) - $bias$0$i;
       if (!($322 != 0.0)) HEAP32[(___errno_location() | 0) >> 2] = 34;
       $$0 = +_scalbnl($322, $297);
       break L4;
      } else $c$6 = $c$5; while (0);
      $sum$i = $emin$0$ph + $bits$0$ph | 0;
      $330 = 0 - $sum$i | 0;
      $$010$i = $c$6;
      $gotdig$0$i12 = 0;
      L184 : while (1) {
       switch ($$010$i | 0) {
       case 46:
        {
         $gotdig$0$i12$lcssa275 = $gotdig$0$i12;
         label = 138;
         break L184;
         break;
        }
       case 48:
        break;
       default:
        {
         $$2$i = $$010$i;
         $699 = 0;
         $700 = 0;
         $gotdig$2$i13 = $gotdig$0$i12;
         $gotrad$0$i14 = 0;
         break L184;
        }
       }
       $331 = HEAP32[$0 >> 2] | 0;
       if ($331 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $331 + 1;
        $$010$i = HEAPU8[$331 >> 0] | 0;
        $gotdig$0$i12 = 1;
        continue;
       } else {
        $$010$i = ___shgetc($f) | 0;
        $gotdig$0$i12 = 1;
        continue;
       }
      }
      if ((label | 0) == 138) {
       $338 = HEAP32[$0 >> 2] | 0;
       if ($338 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
        HEAP32[$0 >> 2] = $338 + 1;
        $$111$ph$i = HEAPU8[$338 >> 0] | 0;
       } else $$111$ph$i = ___shgetc($f) | 0;
       if (($$111$ph$i | 0) == 48) {
        $346 = 0;
        $347 = 0;
        while (1) {
         $348 = _i64Add($346 | 0, $347 | 0, -1, -1) | 0;
         $349 = tempRet0;
         $350 = HEAP32[$0 >> 2] | 0;
         if ($350 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
          HEAP32[$0 >> 2] = $350 + 1;
          $$111$be$i = HEAPU8[$350 >> 0] | 0;
         } else $$111$be$i = ___shgetc($f) | 0;
         if (($$111$be$i | 0) == 48) {
          $346 = $348;
          $347 = $349;
         } else {
          $$2$i = $$111$be$i;
          $699 = $348;
          $700 = $349;
          $gotdig$2$i13 = 1;
          $gotrad$0$i14 = 1;
          break;
         }
        }
       } else {
        $$2$i = $$111$ph$i;
        $699 = 0;
        $700 = 0;
        $gotdig$2$i13 = $gotdig$0$i12$lcssa275;
        $gotrad$0$i14 = 1;
       }
      }
      HEAP32[$x$i >> 2] = 0;
      $358 = $$2$i + -48 | 0;
      $360 = ($$2$i | 0) == 46;
      L203 : do if ($360 | $358 >>> 0 < 10) {
       $362 = $x$i + 496 | 0;
       $$3112$i = $$2$i;
       $365 = 0;
       $366 = 0;
       $701 = $360;
       $702 = $358;
       $703 = $699;
       $704 = $700;
       $gotdig$3108$i = $gotdig$2$i13;
       $gotrad$1109$i = $gotrad$0$i14;
       $j$0111$i = 0;
       $k$0110$i = 0;
       $lnz$0107$i = 0;
       L205 : while (1) {
        do if ($701) if (!$gotrad$1109$i) {
         $705 = $365;
         $706 = $366;
         $707 = $365;
         $708 = $366;
         $gotdig$4$i = $gotdig$3108$i;
         $gotrad$2$i = 1;
         $j$2$i = $j$0111$i;
         $k$2$i = $k$0110$i;
         $lnz$2$i = $lnz$0107$i;
        } else {
         $709 = $703;
         $710 = $704;
         $711 = $365;
         $712 = $366;
         $gotdig$3108$i$lcssa = $gotdig$3108$i;
         $j$0111$i$lcssa = $j$0111$i;
         $k$0110$i$lcssa = $k$0110$i;
         $lnz$0107$i$lcssa = $lnz$0107$i;
         break L205;
        } else {
         $367 = _i64Add($365 | 0, $366 | 0, 1, 0) | 0;
         $368 = tempRet0;
         $369 = ($$3112$i | 0) != 48;
         if (($k$0110$i | 0) >= 125) {
          if (!$369) {
           $705 = $703;
           $706 = $704;
           $707 = $367;
           $708 = $368;
           $gotdig$4$i = $gotdig$3108$i;
           $gotrad$2$i = $gotrad$1109$i;
           $j$2$i = $j$0111$i;
           $k$2$i = $k$0110$i;
           $lnz$2$i = $lnz$0107$i;
           break;
          }
          HEAP32[$362 >> 2] = HEAP32[$362 >> 2] | 1;
          $705 = $703;
          $706 = $704;
          $707 = $367;
          $708 = $368;
          $gotdig$4$i = $gotdig$3108$i;
          $gotrad$2$i = $gotrad$1109$i;
          $j$2$i = $j$0111$i;
          $k$2$i = $k$0110$i;
          $lnz$2$i = $lnz$0107$i;
          break;
         }
         $371 = $x$i + ($k$0110$i << 2) | 0;
         if (!$j$0111$i) $storemerge$i = $702; else $storemerge$i = $$3112$i + -48 + ((HEAP32[$371 >> 2] | 0) * 10 | 0) | 0;
         HEAP32[$371 >> 2] = $storemerge$i;
         $376 = $j$0111$i + 1 | 0;
         $377 = ($376 | 0) == 9;
         $705 = $703;
         $706 = $704;
         $707 = $367;
         $708 = $368;
         $gotdig$4$i = 1;
         $gotrad$2$i = $gotrad$1109$i;
         $j$2$i = $377 ? 0 : $376;
         $k$2$i = ($377 & 1) + $k$0110$i | 0;
         $lnz$2$i = $369 ? $367 : $lnz$0107$i;
        } while (0);
        $381 = HEAP32[$0 >> 2] | 0;
        if ($381 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
         HEAP32[$0 >> 2] = $381 + 1;
         $$3$be$i = HEAPU8[$381 >> 0] | 0;
        } else $$3$be$i = ___shgetc($f) | 0;
        $702 = $$3$be$i + -48 | 0;
        $701 = ($$3$be$i | 0) == 46;
        if (!($701 | $702 >>> 0 < 10)) {
         $$3$lcssa$i = $$3$be$i;
         $394 = $707;
         $395 = $705;
         $397 = $708;
         $398 = $706;
         $gotdig$3$lcssa$i = $gotdig$4$i;
         $gotrad$1$lcssa$i = $gotrad$2$i;
         $j$0$lcssa$i = $j$2$i;
         $k$0$lcssa$i = $k$2$i;
         $lnz$0$lcssa$i = $lnz$2$i;
         label = 161;
         break L203;
        } else {
         $$3112$i = $$3$be$i;
         $365 = $707;
         $366 = $708;
         $703 = $705;
         $704 = $706;
         $gotdig$3108$i = $gotdig$4$i;
         $gotrad$1109$i = $gotrad$2$i;
         $j$0111$i = $j$2$i;
         $k$0110$i = $k$2$i;
         $lnz$0107$i = $lnz$2$i;
        }
       }
       $713 = $711;
       $714 = $712;
       $715 = $709;
       $716 = $710;
       $717 = ($gotdig$3108$i$lcssa | 0) != 0;
       $j$077$i = $j$0111$i$lcssa;
       $k$073$i = $k$0110$i$lcssa;
       $lnz$067$i = $lnz$0107$i$lcssa;
       label = 169;
      } else {
       $$3$lcssa$i = $$2$i;
       $394 = 0;
       $395 = $699;
       $397 = 0;
       $398 = $700;
       $gotdig$3$lcssa$i = $gotdig$2$i13;
       $gotrad$1$lcssa$i = $gotrad$0$i14;
       $j$0$lcssa$i = 0;
       $k$0$lcssa$i = 0;
       $lnz$0$lcssa$i = 0;
       label = 161;
      } while (0);
      do if ((label | 0) == 161) {
       $392 = ($gotrad$1$lcssa$i | 0) == 0;
       $393 = $392 ? $394 : $395;
       $396 = $392 ? $397 : $398;
       $399 = ($gotdig$3$lcssa$i | 0) != 0;
       if (!(($$3$lcssa$i | 32 | 0) == 101 & $399)) if (($$3$lcssa$i | 0) > -1) {
        $713 = $394;
        $714 = $397;
        $715 = $393;
        $716 = $396;
        $717 = $399;
        $j$077$i = $j$0$lcssa$i;
        $k$073$i = $k$0$lcssa$i;
        $lnz$067$i = $lnz$0$lcssa$i;
        label = 169;
        break;
       } else {
        $718 = $394;
        $719 = $397;
        $720 = $399;
        $721 = $393;
        $722 = $396;
        $j$076$i = $j$0$lcssa$i;
        $k$072$i = $k$0$lcssa$i;
        $lnz$066$i = $lnz$0$lcssa$i;
        label = 171;
        break;
       }
       $402 = _scanexp($f, $pok) | 0;
       $403 = tempRet0;
       if (($402 | 0) == 0 & ($403 | 0) == -2147483648) {
        if (!$pok) {
         ___shlim($f, 0);
         $$1$i = 0.0;
         break;
        }
        if (!(HEAP32[$1 >> 2] | 0)) {
         $412 = 0;
         $413 = 0;
        } else {
         HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
         $412 = 0;
         $413 = 0;
        }
       } else {
        $412 = $402;
        $413 = $403;
       }
       $414 = _i64Add($412 | 0, $413 | 0, $393 | 0, $396 | 0) | 0;
       $427 = $414;
       $428 = $394;
       $430 = tempRet0;
       $431 = $397;
       $j$075$i = $j$0$lcssa$i;
       $k$071$i = $k$0$lcssa$i;
       $lnz$065$i = $lnz$0$lcssa$i;
       label = 173;
      } while (0);
      if ((label | 0) == 169) if (!(HEAP32[$1 >> 2] | 0)) {
       $718 = $713;
       $719 = $714;
       $720 = $717;
       $721 = $715;
       $722 = $716;
       $j$076$i = $j$077$i;
       $k$072$i = $k$073$i;
       $lnz$066$i = $lnz$067$i;
       label = 171;
      } else {
       HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
       if ($717) {
        $427 = $715;
        $428 = $713;
        $430 = $716;
        $431 = $714;
        $j$075$i = $j$077$i;
        $k$071$i = $k$073$i;
        $lnz$065$i = $lnz$067$i;
        label = 173;
       } else label = 172;
      }
      if ((label | 0) == 171) if ($720) {
       $427 = $721;
       $428 = $718;
       $430 = $722;
       $431 = $719;
       $j$075$i = $j$076$i;
       $k$071$i = $k$072$i;
       $lnz$065$i = $lnz$066$i;
       label = 173;
      } else label = 172;
      do if ((label | 0) == 172) {
       HEAP32[(___errno_location() | 0) >> 2] = 22;
       ___shlim($f, 0);
       $$1$i = 0.0;
      } else if ((label | 0) == 173) {
       $422 = HEAP32[$x$i >> 2] | 0;
       if (!$422) {
        $$1$i = +($sign$0 | 0) * 0.0;
        break;
       }
       if ((($431 | 0) < 0 | ($431 | 0) == 0 & $428 >>> 0 < 10) & (($427 | 0) == ($428 | 0) & ($430 | 0) == ($431 | 0))) if ($bits$0$ph >>> 0 > 30 | ($422 >>> $bits$0$ph | 0) == 0) {
        $$1$i = +($sign$0 | 0) * +($422 >>> 0);
        break;
       }
       $444 = ($emin$0$ph | 0) / -2 | 0;
       $446 = (($444 | 0) < 0) << 31 >> 31;
       if (($430 | 0) > ($446 | 0) | ($430 | 0) == ($446 | 0) & $427 >>> 0 > $444 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$1$i = +($sign$0 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
        break;
       }
       $456 = $emin$0$ph + -106 | 0;
       $458 = (($456 | 0) < 0) << 31 >> 31;
       if (($430 | 0) < ($458 | 0) | ($430 | 0) == ($458 | 0) & $427 >>> 0 < $456 >>> 0) {
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $$1$i = +($sign$0 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
        break;
       }
       if (!$j$075$i) $k$3$i = $k$071$i; else {
        if (($j$075$i | 0) < 9) {
         $470 = $x$i + ($k$071$i << 2) | 0;
         $472 = HEAP32[$470 >> 2] | 0;
         $j$3102$i = $j$075$i;
         while (1) {
          $471 = $472 * 10 | 0;
          $j$3102$i = $j$3102$i + 1 | 0;
          if (($j$3102$i | 0) == 9) {
           $$lcssa267 = $471;
           break;
          } else $472 = $471;
         }
         HEAP32[$470 >> 2] = $$lcssa267;
        }
        $k$3$i = $k$071$i + 1 | 0;
       }
       if (($lnz$065$i | 0) < 9) if (($lnz$065$i | 0) <= ($427 | 0) & ($427 | 0) < 18) {
        if (($427 | 0) == 9) {
         $$1$i = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0);
         break;
        }
        if (($427 | 0) < 9) {
         $$1$i = +($sign$0 | 0) * +((HEAP32[$x$i >> 2] | 0) >>> 0) / +(HEAP32[14180 + (8 - $427 << 2) >> 2] | 0);
         break;
        }
        $493 = $bits$0$ph + 27 + (Math_imul($427, -3) | 0) | 0;
        $$pre$i17 = HEAP32[$x$i >> 2] | 0;
        if (($493 | 0) > 30 | ($$pre$i17 >>> $493 | 0) == 0) {
         $$1$i = +($sign$0 | 0) * +($$pre$i17 >>> 0) * +(HEAP32[14180 + ($427 + -10 << 2) >> 2] | 0);
         break;
        }
       }
       $505 = ($427 | 0) % 9 | 0;
       if (!$505) {
        $a$2$ph46$i = 0;
        $e2$0$ph$i = 0;
        $rp$2$ph44$i = $427;
        $z$1$ph45$i = $k$3$i;
       } else {
        $509 = ($427 | 0) > -1 ? $505 : $505 + 9 | 0;
        $512 = HEAP32[14180 + (8 - $509 << 2) >> 2] | 0;
        if (!$k$3$i) {
         $a$0$lcssa161$i = 0;
         $rp$0$lcssa162$i = $427;
         $z$0$i = 0;
        } else {
         $514 = 1e9 / ($512 | 0) | 0;
         $a$093$i = 0;
         $carry$095$i = 0;
         $k$494$i = 0;
         $rp$092$i = $427;
         while (1) {
          $515 = $x$i + ($k$494$i << 2) | 0;
          $516 = HEAP32[$515 >> 2] | 0;
          $519 = (($516 >>> 0) / ($512 >>> 0) | 0) + $carry$095$i | 0;
          HEAP32[$515 >> 2] = $519;
          $520 = Math_imul(($516 >>> 0) % ($512 >>> 0) | 0, $514) | 0;
          $or$cond21$i = ($k$494$i | 0) == ($a$093$i | 0) & ($519 | 0) == 0;
          $k$494$i = $k$494$i + 1 | 0;
          $rp$1$i18 = $or$cond21$i ? $rp$092$i + -9 | 0 : $rp$092$i;
          $a$1$i = $or$cond21$i ? $k$494$i & 127 : $a$093$i;
          if (($k$494$i | 0) == ($k$3$i | 0)) {
           $$lcssa266 = $520;
           $a$1$i$lcssa = $a$1$i;
           $rp$1$i18$lcssa = $rp$1$i18;
           break;
          } else {
           $a$093$i = $a$1$i;
           $carry$095$i = $520;
           $rp$092$i = $rp$1$i18;
          }
         }
         if (!$$lcssa266) {
          $a$0$lcssa161$i = $a$1$i$lcssa;
          $rp$0$lcssa162$i = $rp$1$i18$lcssa;
          $z$0$i = $k$3$i;
         } else {
          HEAP32[$x$i + ($k$3$i << 2) >> 2] = $$lcssa266;
          $a$0$lcssa161$i = $a$1$i$lcssa;
          $rp$0$lcssa162$i = $rp$1$i18$lcssa;
          $z$0$i = $k$3$i + 1 | 0;
         }
        }
        $a$2$ph46$i = $a$0$lcssa161$i;
        $e2$0$ph$i = 0;
        $rp$2$ph44$i = 9 - $509 + $rp$0$lcssa162$i | 0;
        $z$1$ph45$i = $z$0$i;
       }
       L284 : while (1) {
        $532 = ($rp$2$ph44$i | 0) < 18;
        $533 = ($rp$2$ph44$i | 0) == 18;
        $534 = $x$i + ($a$2$ph46$i << 2) | 0;
        $e2$0$i19 = $e2$0$ph$i;
        $z$1$i = $z$1$ph45$i;
        while (1) {
         if (!$532) {
          if (!$533) {
           $a$4$ph$i = $a$2$ph46$i;
           $e2$1$ph$i = $e2$0$i19;
           $rp$4$ph42$i = $rp$2$ph44$i;
           $z$6$ph$i = $z$1$i;
           break L284;
          }
          if ((HEAP32[$534 >> 2] | 0) >>> 0 >= 9007199) {
           $a$4$ph$i = $a$2$ph46$i;
           $e2$1$ph$i = $e2$0$i19;
           $rp$4$ph42$i = 18;
           $z$6$ph$i = $z$1$i;
           break L284;
          }
         }
         $carry1$0$i = 0;
         $k$5$in$i = $z$1$i + 127 | 0;
         $z$2$i = $z$1$i;
         while (1) {
          $k$5$i = $k$5$in$i & 127;
          $538 = $x$i + ($k$5$i << 2) | 0;
          $540 = _bitshift64Shl(HEAP32[$538 >> 2] | 0, 0, 29) | 0;
          $542 = _i64Add($540 | 0, tempRet0 | 0, $carry1$0$i | 0, 0) | 0;
          $543 = tempRet0;
          if ($543 >>> 0 > 0 | ($543 | 0) == 0 & $542 >>> 0 > 1e9) {
           $549 = ___udivdi3($542 | 0, $543 | 0, 1e9, 0) | 0;
           $551 = ___uremdi3($542 | 0, $543 | 0, 1e9, 0) | 0;
           $$sink$off0$i = $551;
           $carry1$1$i = $549;
          } else {
           $$sink$off0$i = $542;
           $carry1$1$i = 0;
          }
          HEAP32[$538 >> 2] = $$sink$off0$i;
          $556 = ($k$5$i | 0) == ($a$2$ph46$i | 0);
          $z$3$i = ($k$5$i | 0) != ($z$2$i + 127 & 127 | 0) | $556 ? $z$2$i : ($$sink$off0$i | 0) == 0 ? $k$5$i : $z$2$i;
          if ($556) {
           $carry1$1$i$lcssa = $carry1$1$i;
           $z$3$i$lcssa = $z$3$i;
           break;
          } else {
           $carry1$0$i = $carry1$1$i;
           $k$5$in$i = $k$5$i + -1 | 0;
           $z$2$i = $z$3$i;
          }
         }
         $559 = $e2$0$i19 + -29 | 0;
         if (!$carry1$1$i$lcssa) {
          $e2$0$i19 = $559;
          $z$1$i = $z$3$i$lcssa;
         } else {
          $$lcssa265 = $559;
          $carry1$1$i$lcssa$lcssa = $carry1$1$i$lcssa;
          $z$3$i$lcssa$lcssa = $z$3$i$lcssa;
          break;
         }
        }
        $563 = $a$2$ph46$i + 127 & 127;
        if (($563 | 0) == ($z$3$i$lcssa$lcssa | 0)) {
         $566 = $z$3$i$lcssa$lcssa + 127 & 127;
         $571 = $x$i + (($z$3$i$lcssa$lcssa + 126 & 127) << 2) | 0;
         HEAP32[$571 >> 2] = HEAP32[$571 >> 2] | HEAP32[$x$i + ($566 << 2) >> 2];
         $z$4$i = $566;
        } else $z$4$i = $z$3$i$lcssa$lcssa;
        HEAP32[$x$i + ($563 << 2) >> 2] = $carry1$1$i$lcssa$lcssa;
        $a$2$ph46$i = $563;
        $e2$0$ph$i = $$lcssa265;
        $rp$2$ph44$i = $rp$2$ph44$i + 9 | 0;
        $z$1$ph45$i = $z$4$i;
       }
       L302 : while (1) {
        $603 = $z$6$ph$i + 1 & 127;
        $608 = $x$i + (($z$6$ph$i + 127 & 127) << 2) | 0;
        $a$4$ph167$i = $a$4$ph$i;
        $e2$1$ph166$i = $e2$1$ph$i;
        $rp$4$ph$i = $rp$4$ph42$i;
        while (1) {
         $609 = ($rp$4$ph$i | 0) == 18;
         $$24$i = ($rp$4$ph$i | 0) > 27 ? 9 : 1;
         $$not$i = $609 ^ 1;
         $a$4$i = $a$4$ph167$i;
         $e2$1$i = $e2$1$ph166$i;
         while (1) {
          $575 = $a$4$i & 127;
          $576 = ($575 | 0) == ($z$6$ph$i | 0);
          do if ($576) label = 219; else {
           $578 = HEAP32[$x$i + ($575 << 2) >> 2] | 0;
           if ($578 >>> 0 < 9007199) {
            label = 219;
            break;
           }
           if ($578 >>> 0 > 9007199) break;
           $582 = $a$4$i + 1 & 127;
           if (($582 | 0) == ($z$6$ph$i | 0)) {
            label = 219;
            break;
           }
           $690 = HEAP32[$x$i + ($582 << 2) >> 2] | 0;
           if ($690 >>> 0 < 254740991) {
            label = 219;
            break;
           }
           if (!($690 >>> 0 > 254740991 | $$not$i)) {
            $616 = $575;
            $a$4$i251 = $a$4$i;
            $e2$1$i248 = $e2$1$i;
            $z$10$i = $z$6$ph$i;
            break L302;
           }
          } while (0);
          if ((label | 0) == 219) {
           label = 0;
           if ($609) {
            label = 220;
            break L302;
           }
          }
          $584 = $e2$1$i + $$24$i | 0;
          if (($a$4$i | 0) == ($z$6$ph$i | 0)) {
           $a$4$i = $z$6$ph$i;
           $e2$1$i = $584;
          } else {
           $$lcssa258 = $584;
           $a$4$i$lcssa250 = $a$4$i;
           break;
          }
         }
         $587 = (1 << $$24$i) + -1 | 0;
         $588 = 1e9 >>> $$24$i;
         $a$586$i = $a$4$i$lcssa250;
         $carry4$089$i = 0;
         $k$687$i = $a$4$i$lcssa250;
         $rp$585$i = $rp$4$ph$i;
         while (1) {
          $589 = $x$i + ($k$687$i << 2) | 0;
          $590 = HEAP32[$589 >> 2] | 0;
          $593 = ($590 >>> $$24$i) + $carry4$089$i | 0;
          HEAP32[$589 >> 2] = $593;
          $594 = Math_imul($590 & $587, $588) | 0;
          $or$cond25$i = ($k$687$i | 0) == ($a$586$i | 0) & ($593 | 0) == 0;
          $k$687$i = $k$687$i + 1 & 127;
          $rp$6$i = $or$cond25$i ? $rp$585$i + -9 | 0 : $rp$585$i;
          $a$6$i = $or$cond25$i ? $k$687$i : $a$586$i;
          if (($k$687$i | 0) == ($z$6$ph$i | 0)) {
           $$lcssa259 = $594;
           $a$6$i$lcssa = $a$6$i;
           $rp$6$i$lcssa = $rp$6$i;
           break;
          } else {
           $a$586$i = $a$6$i;
           $carry4$089$i = $594;
           $rp$585$i = $rp$6$i;
          }
         }
         if (!$$lcssa259) {
          $a$4$ph167$i = $a$6$i$lcssa;
          $e2$1$ph166$i = $$lcssa258;
          $rp$4$ph$i = $rp$6$i$lcssa;
          continue;
         }
         if (($603 | 0) != ($a$6$i$lcssa | 0)) {
          $$lcssa258$lcssa = $$lcssa258;
          $$lcssa259$lcssa = $$lcssa259;
          $a$6$i$lcssa$lcssa = $a$6$i$lcssa;
          $rp$6$i$lcssa$lcssa = $rp$6$i$lcssa;
          break;
         }
         HEAP32[$608 >> 2] = HEAP32[$608 >> 2] | 1;
         $a$4$ph167$i = $a$6$i$lcssa;
         $e2$1$ph166$i = $$lcssa258;
         $rp$4$ph$i = $rp$6$i$lcssa;
        }
        HEAP32[$x$i + ($z$6$ph$i << 2) >> 2] = $$lcssa259$lcssa;
        $a$4$ph$i = $a$6$i$lcssa$lcssa;
        $e2$1$ph$i = $$lcssa258$lcssa;
        $rp$4$ph42$i = $rp$6$i$lcssa$lcssa;
        $z$6$ph$i = $603;
       }
       if ((label | 0) == 220) if ($576) {
        HEAP32[$x$i + ($603 + -1 << 2) >> 2] = 0;
        $616 = $z$6$ph$i;
        $a$4$i251 = $a$4$i;
        $e2$1$i248 = $e2$1$i;
        $z$10$i = $603;
       } else {
        $616 = $575;
        $a$4$i251 = $a$4$i;
        $e2$1$i248 = $e2$1$i;
        $z$10$i = $z$6$ph$i;
       }
       $618 = +((HEAP32[$x$i + ($616 << 2) >> 2] | 0) >>> 0);
       $620 = $a$4$i251 + 1 & 127;
       if (($620 | 0) == ($z$10$i | 0)) {
        $679 = $a$4$i251 + 2 & 127;
        HEAP32[$x$i + ($679 + -1 << 2) >> 2] = 0;
        $z$10$1$i = $679;
       } else $z$10$1$i = $z$10$i;
       $642 = +($sign$0 | 0);
       $624 = $642 * ($618 * 1.0e9 + +((HEAP32[$x$i + ($620 << 2) >> 2] | 0) >>> 0));
       $662 = $e2$1$i248 + 53 | 0;
       $668 = $662 - $emin$0$ph | 0;
       $669 = ($668 | 0) < ($bits$0$ph | 0);
       $denormal$0$i = $669 & 1;
       $$012$i = $669 ? (($668 | 0) < 0 ? 0 : $668) : $bits$0$ph;
       if (($$012$i | 0) < 53) {
        $625 = +_copysignl(+_scalbn(1.0, 105 - $$012$i | 0), $624);
        $628 = +_fmodl($624, +_scalbn(1.0, 53 - $$012$i | 0));
        $bias$0$i25 = $625;
        $frac$0$i = $628;
        $y$1$i24 = $625 + ($624 - $628);
       } else {
        $bias$0$i25 = 0.0;
        $frac$0$i = 0.0;
        $y$1$i24 = $624;
       }
       $632 = $a$4$i251 + 2 & 127;
       do if (($632 | 0) == ($z$10$1$i | 0)) $frac$3$i = $frac$0$i; else {
        $635 = HEAP32[$x$i + ($632 << 2) >> 2] | 0;
        do if ($635 >>> 0 < 5e8) {
         if (!$635) if (($a$4$i251 + 3 & 127 | 0) == ($z$10$1$i | 0)) {
          $frac$1$i = $frac$0$i;
          break;
         }
         $frac$1$i = $642 * .25 + $frac$0$i;
        } else {
         if ($635 >>> 0 > 5e8) {
          $frac$1$i = $642 * .75 + $frac$0$i;
          break;
         }
         if (($a$4$i251 + 3 & 127 | 0) == ($z$10$1$i | 0)) {
          $frac$1$i = $642 * .5 + $frac$0$i;
          break;
         } else {
          $frac$1$i = $642 * .75 + $frac$0$i;
          break;
         }
        } while (0);
        if ((53 - $$012$i | 0) <= 1) {
         $frac$3$i = $frac$1$i;
         break;
        }
        if (+_fmodl($frac$1$i, 1.0) != 0.0) {
         $frac$3$i = $frac$1$i;
         break;
        }
        $frac$3$i = $frac$1$i + 1.0;
       } while (0);
       $660 = $y$1$i24 + $frac$3$i - $bias$0$i25;
       do if (($662 & 2147483647 | 0) > (-2 - $sum$i | 0)) {
        if (!(+Math_abs(+$660) >= 9007199254740992.0)) {
         $denormal$2$i = $denormal$0$i;
         $e2$3$i = $e2$1$i248;
         $y$2$i26 = $660;
        } else {
         $denormal$2$i = $669 & ($$012$i | 0) == ($668 | 0) ? 0 : $denormal$0$i;
         $e2$3$i = $e2$1$i248 + 1 | 0;
         $y$2$i26 = $660 * .5;
        }
        if (($e2$3$i + 50 | 0) <= ($330 | 0)) if (!($frac$3$i != 0.0 & ($denormal$2$i | 0) != 0)) {
         $e2$4$i = $e2$3$i;
         $y$3$i = $y$2$i26;
         break;
        }
        HEAP32[(___errno_location() | 0) >> 2] = 34;
        $e2$4$i = $e2$3$i;
        $y$3$i = $y$2$i26;
       } else {
        $e2$4$i = $e2$1$i248;
        $y$3$i = $660;
       } while (0);
       $$1$i = +_scalbnl($y$3$i, $e2$4$i);
      } while (0);
      $$0 = $$1$i;
      break L4;
      break;
     }
    default:
     {
      if (HEAP32[$1 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
      HEAP32[(___errno_location() | 0) >> 2] = 22;
      ___shlim($f, 0);
      $$0 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((label | 0) == 23) {
   $42 = (HEAP32[$1 >> 2] | 0) == 0;
   if (!$42) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   if (($pok | 0) != 0 & $i$0$lcssa >>> 0 > 3) {
    $i$1 = $i$0$lcssa;
    do {
     if (!$42) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
     $i$1 = $i$1 + -1 | 0;
    } while ($i$1 >>> 0 > 3);
   }
  }
  $$0 = +($sign$0 | 0) * inf;
 } while (0);
 STACKTOP = sp;
 return +$$0;
}

function __ZN4yakc3z8010do_op_0xedEh($this, $op) {
 $this = $this | 0;
 $op = $op | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i17 = 0, $$0$i$i54 = 0, $$0$i$i73 = 0, $$0$i105 = 0, $$0$i115 = 0, $$0$i118 = 0, $$0$i130 = 0, $$0$i25 = 0, $$0$i70 = 0, $$lcssa = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert$i$i = 0, $$phi$trans$insert$i$i38 = 0, $$phi$trans$insert$i90 = 0, $$pre$phi$i125Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi14$i$i46Z2D = 0, $$pre$phi14$i$iZ2D = 0, $$pre$phi14$i98Z2D = 0, $$pre$phi14$iZ2D = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1016 = 0, $1018 = 0, $1020 = 0, $1026 = 0, $1028 = 0, $1030 = 0, $1032 = 0, $1035 = 0, $1038 = 0, $1039 = 0, $1040 = 0, $1050 = 0, $1060 = 0, $1066 = 0, $1069 = 0, $1073 = 0, $1079 = 0, $108 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1085 = 0, $1086 = 0, $109 = 0, $1095 = 0, $1098 = 0, $110 = 0, $1102 = 0, $1105 = 0, $1107 = 0, $111 = 0, $112 = 0, $1127 = 0, $1128 = 0, $1130 = 0, $1136 = 0, $1137 = 0, $1139 = 0, $1141 = 0, $1147 = 0, $115 = 0, $1150 = 0, $1154 = 0, $1159 = 0, $117 = 0, $1176 = 0, $1177 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1202 = 0, $1204 = 0, $1206 = 0, $1212 = 0, $1214 = 0, $1216 = 0, $1218 = 0, $1221 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1236 = 0, $1246 = 0, $1252 = 0, $1255 = 0, $1259 = 0, $1265 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $1271 = 0, $1272 = 0, $1281 = 0, $1284 = 0, $1288 = 0, $1291 = 0, $1293 = 0, $13 = 0, $1313 = 0, $1314 = 0, $1316 = 0, $1322 = 0, $1323 = 0, $1325 = 0, $1327 = 0, $1333 = 0, $1336 = 0, $1340 = 0, $1345 = 0, $1362 = 0, $1363 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1388 = 0, $139 = 0, $1390 = 0, $1392 = 0, $1398 = 0, $1400 = 0, $1402 = 0, $1404 = 0, $1405 = 0, $1407 = 0, $1412 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1427 = 0, $1437 = 0, $1443 = 0, $1446 = 0, $1452 = 0, $1458 = 0, $1464 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1470 = 0, $1471 = 0, $1479 = 0, $1480 = 0, $1483 = 0, $1487 = 0, $149 = 0, $1490 = 0, $1492 = 0, $1512 = 0, $1517 = 0, $1518 = 0, $1520 = 0, $1526 = 0, $1527 = 0, $1529 = 0, $1531 = 0, $1536 = 0, $1537 = 0, $1540 = 0, $1544 = 0, $1549 = 0, $156 = 0, $1566 = 0, $1571 = 0, $1572 = 0, $1579 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1597 = 0, $1599 = 0, $1601 = 0, $1607 = 0, $1609 = 0, $1611 = 0, $1613 = 0, $1614 = 0, $1616 = 0, $162 = 0, $1621 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $163 = 0, $1636 = 0, $1646 = 0, $165 = 0, $1652 = 0, $1655 = 0, $1661 = 0, $1667 = 0, $167 = 0, $1673 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1679 = 0, $1680 = 0, $1688 = 0, $1689 = 0, $1692 = 0, $1696 = 0, $1699 = 0, $1701 = 0, $172 = 0, $1721 = 0, $1726 = 0, $1727 = 0, $1729 = 0, $1735 = 0, $1736 = 0, $1738 = 0, $174 = 0, $1740 = 0, $1745 = 0, $1746 = 0, $1749 = 0, $1753 = 0, $1758 = 0, $1775 = 0, $1784 = 0, $196 = 0, $198 = 0, $2 = 0, $20 = 0, $205 = 0, $213 = 0, $216 = 0, $223 = 0, $238 = 0, $240 = 0, $247 = 0, $264 = 0, $266 = 0, $27 = 0, $273 = 0, $28 = 0, $289 = 0, $30 = 0, $301 = 0, $308 = 0, $31 = 0, $316 = 0, $317 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $327 = 0, $328 = 0, $351 = 0, $353 = 0, $360 = 0, $368 = 0, $37 = 0, $371 = 0, $373 = 0, $374 = 0, $38 = 0, $383 = 0, $385 = 0, $401 = 0, $402 = 0, $407 = 0, $411 = 0, $419 = 0, $430 = 0, $437 = 0, $444 = 0, $445 = 0, $448 = 0, $450 = 0, $455 = 0, $457 = 0, $479 = 0, $481 = 0, $488 = 0, $496 = 0, $499 = 0, $506 = 0, $524 = 0, $525 = 0, $530 = 0, $534 = 0, $542 = 0, $554 = 0, $561 = 0, $570 = 0, $574 = 0, $575 = 0, $589 = 0, $591 = 0, $598 = 0, $606 = 0, $609 = 0, $61 = 0, $611 = 0, $612 = 0, $621 = 0, $623 = 0, $63 = 0, $638 = 0, $641 = 0, $644 = 0, $646 = 0, $647 = 0, $648 = 0, $650 = 0, $653 = 0, $664 = 0, $669 = 0, $674 = 0, $685 = 0, $692 = 0, $699 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $706 = 0, $707 = 0, $723 = 0, $725 = 0, $732 = 0, $740 = 0, $743 = 0, $750 = 0, $767 = 0, $770 = 0, $773 = 0, $775 = 0, $776 = 0, $777 = 0, $779 = 0, $78 = 0, $782 = 0, $793 = 0, $798 = 0, $802 = 0, $803 = 0, $806 = 0, $807 = 0, $808 = 0, $81 = 0, $813 = 0, $814 = 0, $82 = 0, $83 = 0, $837 = 0, $839 = 0, $846 = 0, $854 = 0, $857 = 0, $859 = 0, $860 = 0, $869 = 0, $871 = 0, $886 = 0, $892 = 0, $904 = 0, $912 = 0, $913 = 0, $916 = 0, $918 = 0, $92 = 0, $923 = 0, $925 = 0, $94 = 0, $947 = 0, $949 = 0, $956 = 0, $964 = 0, $967 = 0, $974 = 0, $990 = 0, $991 = 0, $998 = 0, $999 = 0, $f$0$i$i = 0, $f$0$i$i$i = 0, $f$0$i$i$i10 = 0, $f$0$i$i13 = 0, $f$0$i$i22 = 0, $f$0$i$i52 = 0, $f$0$i$i59 = 0, $f$0$i$i68 = 0, $f$0$i$i78 = 0, $f$1$i$i = 0, $f$1$i$i$i = 0, $f$1$i$i$i11 = 0, $f$1$i$i14 = 0, $f$1$i$i23 = 0, $f$1$i$i53 = 0, $f$1$i$i60 = 0, $f$1$i$i69 = 0, $f$1$i$i79 = 0, $f$2$i$i15 = 0, $f$3$i$i = 0, $f$3$i$i32 = 0, $r$0$i = 0, $r$0$i$i = 0, $r$0$i$i28 = 0, $r$0$i82 = 0, $this$tr$i$i = 0, $this$tr$i$i$i = 0, $this$tr$i$i$lcssa = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 do switch ($op & 255 | 0) {
 case 64:
  {
   $2 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$2) $$0$i = 0; else $$0$i = FUNCTION_TABLE_iii[$2 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   HEAP8[$this + 1 >> 0] = $$0$i;
   $13 = $this + 6 | 0;
   HEAP8[$13 >> 0] = HEAPU8[$13 >> 0] & 1 | HEAPU8[($$0$i & 255) + ($this + 31) >> 0];
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 65:
  {
   $20 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$20) {
    $$0 = 12;
    STACKTOP = sp;
    return $$0 | 0;
   }
   FUNCTION_TABLE_viii[$20 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, HEAP8[$this + 1 >> 0] | 0);
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 66:
  {
   $27 = $this + 4 | 0;
   $28 = HEAP32[$27 >> 2] | 0;
   $30 = HEAP16[$this >> 1] | 0;
   $31 = $28 & 65535;
   $32 = $30 & 65535;
   $37 = $31 - $32 - ($28 >>> 16 & 1) | 0;
   $38 = $37 ^ $31;
   HEAP8[$this + 6 >> 0] = $37 >>> 8 & 168 | $37 >>> 16 & 1 | ($37 & 65535 | 0 ? 0 : 64) | ($38 ^ $32) >>> 8 & 16 | ($38 & (($30 ^ $28 & 65535) & 65535)) >>> 13 & 4 | 2;
   HEAP16[$27 >> 1] = $37;
   $$0 = 15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 67:
  {
   $61 = $this + 22 | 0;
   $63 = HEAPU16[$61 >> 1] | 0;
   $70 = $63 + 1 | 0;
   $78 = HEAPU8[(HEAP32[$this + 1312 + (($70 >>> 11 & 31) << 3) >> 2] | 0) + ($70 & 2047) >> 0] | 0;
   $81 = $78 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($63 >>> 11 << 3) >> 2] | 0) + ($63 & 2047) >> 0];
   $82 = HEAP16[$this >> 1] | 0;
   $83 = $78 >>> 3;
   if (HEAP8[$this + 1312 + ($83 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($83 << 3) >> 2] | 0) + ($81 & 2047) >> 0] = $82;
   $92 = $81 + 1 | 0;
   $94 = $92 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($94 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($94 << 3) >> 2] | 0) + ($92 & 2047) >> 0] = ($82 & 65535) >>> 8;
   HEAP16[$61 >> 1] = (HEAPU16[$61 >> 1] | 0) + 2;
   $$0 = 20;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 68:
  {
   $108 = $this + 6 | 0;
   $109 = $108 + 1 | 0;
   $110 = HEAP8[$109 >> 0] | 0;
   $111 = $110 & 255;
   $112 = 0 - $111 | 0;
   $115 = $112 & 128;
   $117 = $112 & 255 | 0 ? ($115 | 2) & 255 : 66;
   if (!($110 << 24 >> 24)) $f$0$i$i13 = $117; else $f$0$i$i13 = ($117 & 255 | 1) & 255;
   if (!($112 & 15)) $f$1$i$i14 = $f$0$i$i13; else $f$1$i$i14 = ($f$0$i$i13 & 255 | 16) & 255;
   if (!($115 & $111)) $f$2$i$i15 = $f$1$i$i14; else $f$2$i$i15 = ($f$1$i$i14 & 255 | 4) & 255;
   HEAP8[$108 >> 0] = $f$2$i$i15;
   HEAP8[$109 >> 0] = $112;
   $$0 = 8;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 70:
  {
   HEAP8[$this + 26 >> 0] = 0;
   $$0 = 8;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 71:
  {
   HEAP8[$this + 24 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 9;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 72:
  {
   $139 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$139) $$0$i25 = 0; else $$0$i25 = FUNCTION_TABLE_iii[$139 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   HEAP8[$this >> 0] = $$0$i25;
   $149 = $this + 6 | 0;
   HEAP8[$149 >> 0] = HEAPU8[$149 >> 0] & 1 | HEAPU8[($$0$i25 & 255) + ($this + 31) >> 0];
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 73:
  {
   $156 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$156) {
    $$0 = 12;
    STACKTOP = sp;
    return $$0 | 0;
   }
   FUNCTION_TABLE_viii[$156 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, HEAP8[$this >> 0] | 0);
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 74:
  {
   $162 = $this + 4 | 0;
   $163 = HEAP32[$162 >> 2] | 0;
   $165 = HEAP16[$this >> 1] | 0;
   $167 = $165 & 65535;
   $172 = $167 + ($163 & 65535) + ($163 >>> 16 & 1) | 0;
   $174 = ($165 ^ $163 & 65535) & 65535;
   HEAP8[$this + 6 >> 0] = $172 >>> 8 & 168 | $172 >>> 16 & 1 | ($172 & 65535 | 0 ? 0 : 64) | ($172 ^ $174) >>> 8 & 16 | (($172 ^ $167) & ($174 ^ 32768)) >>> 13 & 4;
   HEAP16[$162 >> 1] = $172;
   $$0 = 15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 75:
  {
   $196 = $this + 22 | 0;
   $198 = HEAPU16[$196 >> 1] | 0;
   $205 = $198 + 1 | 0;
   $213 = HEAPU8[(HEAP32[$this + 1312 + (($205 >>> 11 & 31) << 3) >> 2] | 0) + ($205 & 2047) >> 0] | 0;
   $216 = $213 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($198 >>> 11 << 3) >> 2] | 0) + ($198 & 2047) >> 0];
   $223 = $216 + 1 | 0;
   HEAP16[$this >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($223 >>> 11 & 31) << 3) >> 2] | 0) + ($223 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($213 >>> 3 << 3) >> 2] | 0) + ($216 & 2047) >> 0];
   HEAP16[$196 >> 1] = $198 + 2;
   $$0 = 20;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 77:
  {
   $238 = $this + 12 | 0;
   $240 = HEAPU16[$238 >> 1] | 0;
   $247 = $240 + 1 | 0;
   HEAP16[$this + 22 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($247 >>> 11 & 31) << 3) >> 2] | 0) + ($247 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($240 >>> 11 << 3) >> 2] | 0) + ($240 & 2047) >> 0];
   HEAP16[$238 >> 1] = $240 + 2;
   $264 = HEAP32[$this + 3628 >> 2] | 0;
   if (!$264) {
    $$0 = 15;
    STACKTOP = sp;
    return $$0 | 0;
   } else $this$tr$i$i = $264;
   while (1) {
    HEAP8[$this$tr$i$i >> 0] = 1;
    $266 = $this$tr$i$i + 3 | 0;
    if (HEAP8[$266 >> 0] | 0) {
     $$lcssa = $266;
     $this$tr$i$i$lcssa = $this$tr$i$i;
     break;
    }
    $this$tr$i$i = HEAP32[$this$tr$i$i + 16 >> 2] | 0;
    if (!$this$tr$i$i) {
     $$0 = 15;
     label = 209;
     break;
    }
   }
   if ((label | 0) == 209) {
    STACKTOP = sp;
    return $$0 | 0;
   }
   if (HEAP8[$this$tr$i$i$lcssa + 4 >> 0] | 0) __ZN5Oryol3Log4InfoEPKcz(16170, $vararg_buffer);
   HEAP8[$$lcssa >> 0] = 0;
   $273 = HEAP32[$this$tr$i$i$lcssa + 16 >> 2] | 0;
   if (!$273) {
    $$0 = 15;
    STACKTOP = sp;
    return $$0 | 0;
   } else $this$tr$i$i$i = $273;
   while (1) {
    HEAP8[$this$tr$i$i$i >> 0] = 1;
    if (HEAP8[$this$tr$i$i$i + 3 >> 0] | 0) {
     $$0 = 15;
     label = 209;
     break;
    }
    $this$tr$i$i$i = HEAP32[$this$tr$i$i$i + 16 >> 2] | 0;
    if (!$this$tr$i$i$i) {
     $$0 = 15;
     label = 209;
     break;
    }
   }
   if ((label | 0) == 209) {
    STACKTOP = sp;
    return $$0 | 0;
   }
   break;
  }
 case 79:
  {
   HEAP8[$this + 25 >> 0] = HEAP8[$this + 6 + 1 >> 0] | 0;
   $$0 = 9;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 80:
  {
   $289 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$289) $$0$i70 = 0; else $$0$i70 = FUNCTION_TABLE_iii[$289 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   HEAP8[$this + 2 + 1 >> 0] = $$0$i70;
   $301 = $this + 6 | 0;
   HEAP8[$301 >> 0] = HEAPU8[$301 >> 0] & 1 | HEAPU8[($$0$i70 & 255) + ($this + 31) >> 0];
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 81:
  {
   $308 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$308) {
    $$0 = 12;
    STACKTOP = sp;
    return $$0 | 0;
   }
   FUNCTION_TABLE_viii[$308 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, HEAP8[$this + 2 + 1 >> 0] | 0);
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 82:
  {
   $316 = $this + 4 | 0;
   $317 = HEAP32[$316 >> 2] | 0;
   $320 = HEAP16[$this + 2 >> 1] | 0;
   $321 = $317 & 65535;
   $322 = $320 & 65535;
   $327 = $321 - $322 - ($317 >>> 16 & 1) | 0;
   $328 = $327 ^ $321;
   HEAP8[$this + 6 >> 0] = $327 >>> 8 & 168 | $327 >>> 16 & 1 | ($327 & 65535 | 0 ? 0 : 64) | ($328 ^ $322) >>> 8 & 16 | ($328 & (($320 ^ $317 & 65535) & 65535)) >>> 13 & 4 | 2;
   HEAP16[$316 >> 1] = $327;
   $$0 = 15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 83:
  {
   $351 = $this + 22 | 0;
   $353 = HEAPU16[$351 >> 1] | 0;
   $360 = $353 + 1 | 0;
   $368 = HEAPU8[(HEAP32[$this + 1312 + (($360 >>> 11 & 31) << 3) >> 2] | 0) + ($360 & 2047) >> 0] | 0;
   $371 = $368 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($353 >>> 11 << 3) >> 2] | 0) + ($353 & 2047) >> 0];
   $373 = HEAP16[$this + 2 >> 1] | 0;
   $374 = $368 >>> 3;
   if (HEAP8[$this + 1312 + ($374 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($374 << 3) >> 2] | 0) + ($371 & 2047) >> 0] = $373;
   $383 = $371 + 1 | 0;
   $385 = $383 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($385 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($385 << 3) >> 2] | 0) + ($383 & 2047) >> 0] = ($373 & 65535) >>> 8;
   HEAP16[$351 >> 1] = (HEAPU16[$351 >> 1] | 0) + 2;
   $$0 = 20;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 86:
  {
   HEAP8[$this + 26 >> 0] = 1;
   $$0 = 8;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 87:
  {
   $401 = HEAP8[$this + 24 >> 0] | 0;
   $402 = $this + 6 | 0;
   HEAP8[$402 + 1 >> 0] = $401;
   $407 = $401 & 255;
   $411 = ($401 << 24 >> 24 == 0 ? 64 : $407 & 128) | $407 & 40;
   HEAP8[$402 >> 0] = (HEAP8[$this + 29 >> 0] | 0 ? $411 | 4 : $411) | HEAPU8[$402 >> 0] & 1;
   $$0 = 9;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 88:
  {
   $419 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$419) $$0$i115 = 0; else $$0$i115 = FUNCTION_TABLE_iii[$419 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   HEAP8[$this + 2 >> 0] = $$0$i115;
   $430 = $this + 6 | 0;
   HEAP8[$430 >> 0] = HEAPU8[$430 >> 0] & 1 | HEAPU8[($$0$i115 & 255) + ($this + 31) >> 0];
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 89:
  {
   $437 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$437) {
    $$0 = 12;
    STACKTOP = sp;
    return $$0 | 0;
   }
   FUNCTION_TABLE_viii[$437 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, HEAP8[$this + 2 >> 0] | 0);
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 90:
  {
   $444 = $this + 4 | 0;
   $445 = HEAP32[$444 >> 2] | 0;
   $448 = HEAP16[$this + 2 >> 1] | 0;
   $450 = $448 & 65535;
   $455 = $450 + ($445 & 65535) + ($445 >>> 16 & 1) | 0;
   $457 = ($448 ^ $445 & 65535) & 65535;
   HEAP8[$this + 6 >> 0] = $455 >>> 8 & 168 | $455 >>> 16 & 1 | ($455 & 65535 | 0 ? 0 : 64) | ($455 ^ $457) >>> 8 & 16 | (($455 ^ $450) & ($457 ^ 32768)) >>> 13 & 4;
   HEAP16[$444 >> 1] = $455;
   $$0 = 15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 91:
  {
   $479 = $this + 22 | 0;
   $481 = HEAPU16[$479 >> 1] | 0;
   $488 = $481 + 1 | 0;
   $496 = HEAPU8[(HEAP32[$this + 1312 + (($488 >>> 11 & 31) << 3) >> 2] | 0) + ($488 & 2047) >> 0] | 0;
   $499 = $496 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($481 >>> 11 << 3) >> 2] | 0) + ($481 & 2047) >> 0];
   $506 = $499 + 1 | 0;
   HEAP16[$this + 2 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($506 >>> 11 & 31) << 3) >> 2] | 0) + ($506 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($496 >>> 3 << 3) >> 2] | 0) + ($499 & 2047) >> 0];
   HEAP16[$479 >> 1] = $481 + 2;
   $$0 = 20;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 94:
  {
   HEAP8[$this + 26 >> 0] = 2;
   $$0 = 8;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 95:
  {
   $524 = HEAP8[$this + 25 >> 0] | 0;
   $525 = $this + 6 | 0;
   HEAP8[$525 + 1 >> 0] = $524;
   $530 = $524 & 255;
   $534 = ($524 << 24 >> 24 == 0 ? 64 : $530 & 128) | $530 & 40;
   HEAP8[$525 >> 0] = (HEAP8[$this + 29 >> 0] | 0 ? $534 | 4 : $534) | HEAPU8[$525 >> 0] & 1;
   $$0 = 9;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 96:
  {
   $542 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$542) $$0$i130 = 0; else $$0$i130 = FUNCTION_TABLE_iii[$542 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   HEAP8[$this + 4 + 1 >> 0] = $$0$i130;
   $554 = $this + 6 | 0;
   HEAP8[$554 >> 0] = HEAPU8[$554 >> 0] & 1 | HEAPU8[($$0$i130 & 255) + ($this + 31) >> 0];
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 97:
  {
   $561 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$561) {
    $$0 = 12;
    STACKTOP = sp;
    return $$0 | 0;
   }
   FUNCTION_TABLE_viii[$561 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, HEAP8[$this + 4 + 1 >> 0] | 0);
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 98:
  {
   $570 = $this + 6 | 0;
   $574 = 0 - (HEAPU8[$570 >> 0] & 1) | 0;
   $575 = $574 >>> 8;
   HEAP8[$570 >> 0] = $575 & 168 | $574 >>> 16 & 1 | $575 & 16 | ($574 & 65535 | 0 ? 0 : 64) | 2;
   HEAP16[$this + 4 >> 1] = $574;
   $$0 = 15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 99:
  {
   $589 = $this + 22 | 0;
   $591 = HEAPU16[$589 >> 1] | 0;
   $598 = $591 + 1 | 0;
   $606 = HEAPU8[(HEAP32[$this + 1312 + (($598 >>> 11 & 31) << 3) >> 2] | 0) + ($598 & 2047) >> 0] | 0;
   $609 = $606 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($591 >>> 11 << 3) >> 2] | 0) + ($591 & 2047) >> 0];
   $611 = HEAP16[$this + 4 >> 1] | 0;
   $612 = $606 >>> 3;
   if (HEAP8[$this + 1312 + ($612 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($612 << 3) >> 2] | 0) + ($609 & 2047) >> 0] = $611;
   $621 = $609 + 1 | 0;
   $623 = $621 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($623 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($623 << 3) >> 2] | 0) + ($621 & 2047) >> 0] = ($611 & 65535) >>> 8;
   HEAP16[$589 >> 1] = (HEAPU16[$589 >> 1] | 0) + 2;
   $$0 = 20;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 103:
  {
   $638 = HEAP32[$this + 4 >> 2] | 0;
   $641 = $638 >>> 11 & 31;
   $644 = (HEAP32[$this + 1312 + ($641 << 3) >> 2] | 0) + ($638 & 2047) | 0;
   $646 = $this + 6 | 0;
   $647 = $646 + 1 | 0;
   $648 = $638 >>> 24;
   $650 = HEAPU8[$644 >> 0] | 0;
   $653 = ($650 & 15 | $648 & 240) & 255;
   HEAP8[$647 >> 0] = $653;
   if (!(HEAP8[$this + 1312 + ($641 << 3) + 4 >> 0] | 0)) {
    $$pre$phi$i125Z2D = $646;
    $664 = $653;
    $669 = $638 >>> 16 & 255;
   } else {
    HEAP8[$644 >> 0] = $650 >>> 4 | $648 << 4;
    $$pre$phi$i125Z2D = $646;
    $664 = HEAP8[$647 >> 0] | 0;
    $669 = HEAP8[$646 >> 0] | 0;
   }
   HEAP8[$$pre$phi$i125Z2D >> 0] = HEAPU8[($664 & 255) + ($this + 31) >> 0] | $669 & 1;
   $$0 = 18;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 104:
  {
   $674 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$674) $$0$i118 = 0; else $$0$i118 = FUNCTION_TABLE_iii[$674 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   HEAP8[$this + 4 >> 0] = $$0$i118;
   $685 = $this + 6 | 0;
   HEAP8[$685 >> 0] = HEAPU8[$685 >> 0] & 1 | HEAPU8[($$0$i118 & 255) + ($this + 31) >> 0];
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 105:
  {
   $692 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$692) {
    $$0 = 12;
    STACKTOP = sp;
    return $$0 | 0;
   }
   FUNCTION_TABLE_viii[$692 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, HEAP8[$this + 4 >> 0] | 0);
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 106:
  {
   $699 = $this + 4 | 0;
   $700 = HEAP32[$699 >> 2] | 0;
   $701 = $700 & 65535;
   $702 = $701 << 1;
   $706 = $700 >>> 16 & 1 | $702;
   $707 = $701 >>> 7;
   HEAP8[$this + 6 >> 0] = $707 & 168 | $701 >>> 15 | $707 & 16 | ($702 ^ $700) >>> 13 & 4 | ($706 & 65535 | 0 ? 0 : 64);
   HEAP16[$699 >> 1] = $706;
   $$0 = 15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 107:
  {
   $723 = $this + 22 | 0;
   $725 = HEAPU16[$723 >> 1] | 0;
   $732 = $725 + 1 | 0;
   $740 = HEAPU8[(HEAP32[$this + 1312 + (($732 >>> 11 & 31) << 3) >> 2] | 0) + ($732 & 2047) >> 0] | 0;
   $743 = $740 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($725 >>> 11 << 3) >> 2] | 0) + ($725 & 2047) >> 0];
   $750 = $743 + 1 | 0;
   HEAP16[$this + 4 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($750 >>> 11 & 31) << 3) >> 2] | 0) + ($750 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($740 >>> 3 << 3) >> 2] | 0) + ($743 & 2047) >> 0];
   HEAP16[$723 >> 1] = $725 + 2;
   $$0 = 20;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 111:
  {
   $767 = HEAP32[$this + 4 >> 2] | 0;
   $770 = $767 >>> 11 & 31;
   $773 = (HEAP32[$this + 1312 + ($770 << 3) >> 2] | 0) + ($767 & 2047) | 0;
   $775 = $this + 6 | 0;
   $776 = $775 + 1 | 0;
   $777 = $767 >>> 24;
   $779 = HEAPU8[$773 >> 0] | 0;
   $782 = ($779 >>> 4 | $777 & 240) & 255;
   HEAP8[$776 >> 0] = $782;
   if (!(HEAP8[$this + 1312 + ($770 << 3) + 4 >> 0] | 0)) {
    $$pre$phi$iZ2D = $775;
    $793 = $782;
    $798 = $767 >>> 16 & 255;
   } else {
    HEAP8[$773 >> 0] = $779 << 4 | $777 & 15;
    $$pre$phi$iZ2D = $775;
    $793 = HEAP8[$776 >> 0] | 0;
    $798 = HEAP8[$775 >> 0] | 0;
   }
   HEAP8[$$pre$phi$iZ2D >> 0] = HEAPU8[($793 & 255) + ($this + 31) >> 0] | $798 & 1;
   $$0 = 18;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 114:
  {
   $802 = $this + 4 | 0;
   $803 = HEAP32[$802 >> 2] | 0;
   $806 = HEAP16[$this + 12 >> 1] | 0;
   $807 = $803 & 65535;
   $808 = $806 & 65535;
   $813 = $807 - $808 - ($803 >>> 16 & 1) | 0;
   $814 = $813 ^ $807;
   HEAP8[$this + 6 >> 0] = $813 >>> 8 & 168 | $813 >>> 16 & 1 | ($813 & 65535 | 0 ? 0 : 64) | ($814 ^ $808) >>> 8 & 16 | ($814 & (($806 ^ $803 & 65535) & 65535)) >>> 13 & 4 | 2;
   HEAP16[$802 >> 1] = $813;
   $$0 = 15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 115:
  {
   $837 = $this + 22 | 0;
   $839 = HEAPU16[$837 >> 1] | 0;
   $846 = $839 + 1 | 0;
   $854 = HEAPU8[(HEAP32[$this + 1312 + (($846 >>> 11 & 31) << 3) >> 2] | 0) + ($846 & 2047) >> 0] | 0;
   $857 = $854 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($839 >>> 11 << 3) >> 2] | 0) + ($839 & 2047) >> 0];
   $859 = HEAP16[$this + 12 >> 1] | 0;
   $860 = $854 >>> 3;
   if (HEAP8[$this + 1312 + ($860 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($860 << 3) >> 2] | 0) + ($857 & 2047) >> 0] = $859;
   $869 = $857 + 1 | 0;
   $871 = $869 >>> 11 & 31;
   if (HEAP8[$this + 1312 + ($871 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($871 << 3) >> 2] | 0) + ($869 & 2047) >> 0] = ($859 & 65535) >>> 8;
   HEAP16[$837 >> 1] = (HEAPU16[$837 >> 1] | 0) + 2;
   $$0 = 20;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 120:
  {
   $886 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$886) $$0$i105 = 0; else $$0$i105 = FUNCTION_TABLE_iii[$886 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   $892 = $this + 6 | 0;
   HEAP8[$892 + 1 >> 0] = $$0$i105;
   HEAP8[$892 >> 0] = HEAPU8[$892 >> 0] & 1 | HEAPU8[($$0$i105 & 255) + ($this + 31) >> 0];
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 121:
  {
   $904 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$904) {
    $$0 = 12;
    STACKTOP = sp;
    return $$0 | 0;
   }
   FUNCTION_TABLE_viii[$904 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, HEAP8[$this + 6 + 1 >> 0] | 0);
   $$0 = 12;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 122:
  {
   $912 = $this + 4 | 0;
   $913 = HEAP32[$912 >> 2] | 0;
   $916 = HEAP16[$this + 12 >> 1] | 0;
   $918 = $916 & 65535;
   $923 = $918 + ($913 & 65535) + ($913 >>> 16 & 1) | 0;
   $925 = ($916 ^ $913 & 65535) & 65535;
   HEAP8[$this + 6 >> 0] = $923 >>> 8 & 168 | $923 >>> 16 & 1 | ($923 & 65535 | 0 ? 0 : 64) | ($923 ^ $925) >>> 8 & 16 | (($923 ^ $918) & ($925 ^ 32768)) >>> 13 & 4;
   HEAP16[$912 >> 1] = $923;
   $$0 = 15;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 123:
  {
   $947 = $this + 22 | 0;
   $949 = HEAPU16[$947 >> 1] | 0;
   $956 = $949 + 1 | 0;
   $964 = HEAPU8[(HEAP32[$this + 1312 + (($956 >>> 11 & 31) << 3) >> 2] | 0) + ($956 & 2047) >> 0] | 0;
   $967 = $964 << 8 | HEAPU8[(HEAP32[$this + 1312 + ($949 >>> 11 << 3) >> 2] | 0) + ($949 & 2047) >> 0];
   $974 = $967 + 1 | 0;
   HEAP16[$this + 12 >> 1] = HEAPU8[(HEAP32[$this + 1312 + (($974 >>> 11 & 31) << 3) >> 2] | 0) + ($974 & 2047) >> 0] << 8 | HEAPU8[(HEAP32[$this + 1312 + ($964 >>> 3 << 3) >> 2] | 0) + ($967 & 2047) >> 0];
   HEAP16[$947 >> 1] = $949 + 2;
   $$0 = 20;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 160:
  {
   $990 = $this + 4 | 0;
   $991 = HEAP32[$990 >> 2] | 0;
   $998 = HEAP8[(HEAP32[$this + 1312 + (($991 >>> 11 & 31) << 3) >> 2] | 0) + ($991 & 2047) >> 0] | 0;
   $999 = $this + 2 | 0;
   $1000 = HEAP16[$999 >> 1] | 0;
   $1001 = $1000 & 65535;
   $1002 = $1001 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1002 << 3) + 4 >> 0] | 0)) {
    $$pre$phi14$i98Z2D = $this + 6 | 0;
    $1016 = $991 >>> 24 & 255;
    $1020 = $991 >>> 16 & 255;
    $1028 = $991 & 65535;
    $1030 = $1000;
   } else {
    HEAP8[(HEAP32[$this + 1312 + ($1002 << 3) >> 2] | 0) + ($1001 & 2047) >> 0] = $998;
    $$phi$trans$insert$i90 = $this + 6 | 0;
    $$pre$phi14$i98Z2D = $$phi$trans$insert$i90;
    $1016 = HEAP8[$$phi$trans$insert$i90 + 1 >> 0] | 0;
    $1020 = HEAP8[$$phi$trans$insert$i90 >> 0] | 0;
    $1028 = HEAP16[$990 >> 1] | 0;
    $1030 = HEAP16[$999 >> 1] | 0;
   }
   $1018 = ($1016 & 255) + ($998 & 255) | 0;
   $1026 = $1018 & 8 | $1020 & 193 | $1018 << 4 & 32;
   HEAP16[$990 >> 1] = $1028 + 1 << 16 >> 16;
   HEAP16[$999 >> 1] = $1030 + 1 << 16 >> 16;
   $1032 = (HEAP16[$this >> 1] | 0) + -1 << 16 >> 16;
   HEAP16[$this >> 1] = $1032;
   HEAP8[$$pre$phi14$i98Z2D >> 0] = $1032 << 16 >> 16 == 0 ? $1026 : $1026 | 4;
   $$0 = 16;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 161:
  {
   $1035 = $this + 6 | 0;
   $1038 = HEAPU8[$1035 + 1 >> 0] | 0;
   $1039 = $this + 4 | 0;
   $1040 = HEAP32[$1039 >> 2] | 0;
   $1050 = $1038 - (HEAPU8[(HEAP32[$this + 1312 + (($1040 >>> 11 & 31) << 3) >> 2] | 0) + ($1040 & 2047) >> 0] | 0) | 0;
   $1060 = ($1050 & 15) >>> 0 > ($1038 & 15) >>> 0;
   $r$0$i82 = ($1060 << 31 >> 31) + $1050 | 0;
   $1066 = ($1050 & 255 | 0 ? $1050 & 128 : 64) | $1040 >>> 16 & 1 | ($1060 ? 18 : 2) | $r$0$i82 & 8 | $r$0$i82 << 4 & 32;
   HEAP16[$1039 >> 1] = ($1040 & 65535) + 1 << 16 >> 16;
   $1069 = (HEAP16[$this >> 1] | 0) + -1 << 16 >> 16;
   HEAP16[$this >> 1] = $1069;
   HEAP8[$1035 >> 0] = $1069 << 16 >> 16 == 0 ? $1066 : $1066 | 4;
   $$0 = 16;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 162:
  {
   $1073 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$1073) $$0$i$i73 = 0; else $$0$i$i73 = FUNCTION_TABLE_iii[$1073 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   $1079 = $this + 1 | 0;
   $1081 = (HEAP8[$1079 >> 0] | 0) + -1 << 24 >> 24;
   HEAP8[$1079 >> 0] = $1081;
   $1082 = $this + 4 | 0;
   $1083 = HEAP16[$1082 >> 1] | 0;
   HEAP16[$1082 >> 1] = $1083 + 1 << 16 >> 16;
   $1085 = $1083 & 65535;
   $1086 = $1085 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1086 << 3) + 4 >> 0] | 0)) $1095 = $1081; else {
    HEAP8[(HEAP32[$this + 1312 + ($1086 << 3) >> 2] | 0) + ($1085 & 2047) >> 0] = $$0$i$i73;
    $1095 = HEAP8[$1079 >> 0] | 0;
   }
   if (!($1095 << 24 >> 24)) $1102 = 64; else $1102 = $1095 & 128;
   $1098 = $$0$i$i73 & 255;
   if (!($1098 & 128)) $f$0$i$i78 = $1102; else $f$0$i$i78 = ($1102 & 255 | 2) & 255;
   $1105 = HEAP16[$this >> 1] | 0;
   $1107 = ($1105 & 65535) + 1 | 0;
   if (!(($1107 & 255) + $1098 & 256)) $f$1$i$i79 = $f$0$i$i78; else $f$1$i$i79 = ($f$0$i$i78 & 255 | 17) & 255;
   HEAP8[$this + 6 >> 0] = HEAPU8[($1107 + $1098 & 7 ^ ($1105 & 65535) >>> 8 & 65535) + ($this + 31) >> 0] & 4 | $f$1$i$i79 & 255;
   $$0 = 16;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 163:
  {
   $1127 = $this + 4 | 0;
   $1128 = HEAP16[$1127 >> 1] | 0;
   HEAP16[$1127 >> 1] = $1128 + 1 << 16 >> 16;
   $1130 = $1128 & 65535;
   $1136 = HEAP8[(HEAP32[$this + 1312 + ($1130 >>> 11 << 3) >> 2] | 0) + ($1130 & 2047) >> 0] | 0;
   $1137 = $this + 1 | 0;
   $1139 = (HEAP8[$1137 >> 0] | 0) + -1 << 24 >> 24;
   HEAP8[$1137 >> 0] = $1139;
   $1141 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$1141) $1147 = $1139; else {
    FUNCTION_TABLE_viii[$1141 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, $1136);
    $1147 = HEAP8[$1137 >> 0] | 0;
   }
   if (!($1147 << 24 >> 24)) $1154 = 64; else $1154 = $1147 & 128;
   $1150 = $1136 & 255;
   if (!($1150 & 128)) $f$0$i$i68 = $1154; else $f$0$i$i68 = ($1154 & 255 | 2) & 255;
   $1159 = (HEAPU8[$1127 >> 0] | 0) + $1150 | 0;
   if (!($1159 & 256)) $f$1$i$i69 = $f$0$i$i68; else $f$1$i$i69 = ($f$0$i$i68 & 255 | 17) & 255;
   HEAP8[$this + 6 >> 0] = HEAPU8[($1159 & 7 ^ $1147 & 255) + ($this + 31) >> 0] & 4 | $f$1$i$i69 & 255;
   $$0 = 16;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 168:
  {
   $1176 = $this + 4 | 0;
   $1177 = HEAP32[$1176 >> 2] | 0;
   $1184 = HEAP8[(HEAP32[$this + 1312 + (($1177 >>> 11 & 31) << 3) >> 2] | 0) + ($1177 & 2047) >> 0] | 0;
   $1185 = $this + 2 | 0;
   $1186 = HEAP16[$1185 >> 1] | 0;
   $1187 = $1186 & 65535;
   $1188 = $1187 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1188 << 3) + 4 >> 0] | 0)) {
    $$pre$phi14$iZ2D = $this + 6 | 0;
    $1202 = $1177 >>> 24 & 255;
    $1206 = $1177 >>> 16 & 255;
    $1214 = $1177 & 65535;
    $1216 = $1186;
   } else {
    HEAP8[(HEAP32[$this + 1312 + ($1188 << 3) >> 2] | 0) + ($1187 & 2047) >> 0] = $1184;
    $$phi$trans$insert$i = $this + 6 | 0;
    $$pre$phi14$iZ2D = $$phi$trans$insert$i;
    $1202 = HEAP8[$$phi$trans$insert$i + 1 >> 0] | 0;
    $1206 = HEAP8[$$phi$trans$insert$i >> 0] | 0;
    $1214 = HEAP16[$1176 >> 1] | 0;
    $1216 = HEAP16[$1185 >> 1] | 0;
   }
   $1204 = ($1202 & 255) + ($1184 & 255) | 0;
   $1212 = $1204 & 8 | $1206 & 193 | $1204 << 4 & 32;
   HEAP16[$1176 >> 1] = $1214 + -1 << 16 >> 16;
   HEAP16[$1185 >> 1] = $1216 + -1 << 16 >> 16;
   $1218 = (HEAP16[$this >> 1] | 0) + -1 << 16 >> 16;
   HEAP16[$this >> 1] = $1218;
   HEAP8[$$pre$phi14$iZ2D >> 0] = $1218 << 16 >> 16 == 0 ? $1212 : $1212 | 4;
   $$0 = 16;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 169:
  {
   $1221 = $this + 6 | 0;
   $1224 = HEAPU8[$1221 + 1 >> 0] | 0;
   $1225 = $this + 4 | 0;
   $1226 = HEAP32[$1225 >> 2] | 0;
   $1236 = $1224 - (HEAPU8[(HEAP32[$this + 1312 + (($1226 >>> 11 & 31) << 3) >> 2] | 0) + ($1226 & 2047) >> 0] | 0) | 0;
   $1246 = ($1236 & 15) >>> 0 > ($1224 & 15) >>> 0;
   $r$0$i = ($1246 << 31 >> 31) + $1236 | 0;
   $1252 = ($1236 & 255 | 0 ? $1236 & 128 : 64) | $1226 >>> 16 & 1 | ($1246 ? 18 : 2) | $r$0$i & 8 | $r$0$i << 4 & 32;
   HEAP16[$1225 >> 1] = ($1226 & 65535) + -1 << 16 >> 16;
   $1255 = (HEAP16[$this >> 1] | 0) + -1 << 16 >> 16;
   HEAP16[$this >> 1] = $1255;
   HEAP8[$1221 >> 0] = $1255 << 16 >> 16 == 0 ? $1252 : $1252 | 4;
   $$0 = 16;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 170:
  {
   $1259 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$1259) $$0$i$i54 = 0; else $$0$i$i54 = FUNCTION_TABLE_iii[$1259 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   $1265 = $this + 1 | 0;
   $1267 = (HEAP8[$1265 >> 0] | 0) + -1 << 24 >> 24;
   HEAP8[$1265 >> 0] = $1267;
   $1268 = $this + 4 | 0;
   $1269 = HEAP16[$1268 >> 1] | 0;
   HEAP16[$1268 >> 1] = $1269 + -1 << 16 >> 16;
   $1271 = $1269 & 65535;
   $1272 = $1271 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1272 << 3) + 4 >> 0] | 0)) $1281 = $1267; else {
    HEAP8[(HEAP32[$this + 1312 + ($1272 << 3) >> 2] | 0) + ($1271 & 2047) >> 0] = $$0$i$i54;
    $1281 = HEAP8[$1265 >> 0] | 0;
   }
   if (!($1281 << 24 >> 24)) $1288 = 64; else $1288 = $1281 & 128;
   $1284 = $$0$i$i54 & 255;
   if (!($1284 & 128)) $f$0$i$i59 = $1288; else $f$0$i$i59 = ($1288 & 255 | 2) & 255;
   $1291 = HEAP16[$this >> 1] | 0;
   $1293 = ($1291 & 65535) + -1 | 0;
   if (!(($1293 & 255) + $1284 & 256)) $f$1$i$i60 = $f$0$i$i59; else $f$1$i$i60 = ($f$0$i$i59 & 255 | 17) & 255;
   HEAP8[$this + 6 >> 0] = HEAPU8[($1293 + $1284 & 7 ^ ($1291 & 65535) >>> 8 & 65535) + ($this + 31) >> 0] & 4 | $f$1$i$i60 & 255;
   $$0 = 16;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 171:
  {
   $1313 = $this + 4 | 0;
   $1314 = HEAP16[$1313 >> 1] | 0;
   HEAP16[$1313 >> 1] = $1314 + -1 << 16 >> 16;
   $1316 = $1314 & 65535;
   $1322 = HEAP8[(HEAP32[$this + 1312 + ($1316 >>> 11 << 3) >> 2] | 0) + ($1316 & 2047) >> 0] | 0;
   $1323 = $this + 1 | 0;
   $1325 = (HEAP8[$1323 >> 0] | 0) + -1 << 24 >> 24;
   HEAP8[$1323 >> 0] = $1325;
   $1327 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$1327) $1333 = $1325; else {
    FUNCTION_TABLE_viii[$1327 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, $1322);
    $1333 = HEAP8[$1323 >> 0] | 0;
   }
   if (!($1333 << 24 >> 24)) $1340 = 64; else $1340 = $1333 & 128;
   $1336 = $1322 & 255;
   if (!($1336 & 128)) $f$0$i$i52 = $1340; else $f$0$i$i52 = ($1340 & 255 | 2) & 255;
   $1345 = (HEAPU8[$1313 >> 0] | 0) + $1336 | 0;
   if (!($1345 & 256)) $f$1$i$i53 = $f$0$i$i52; else $f$1$i$i53 = ($f$0$i$i52 & 255 | 17) & 255;
   HEAP8[$this + 6 >> 0] = HEAPU8[($1345 & 7 ^ $1333 & 255) + ($this + 31) >> 0] & 4 | $f$1$i$i53 & 255;
   $$0 = 16;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 176:
  {
   $1362 = $this + 4 | 0;
   $1363 = HEAP32[$1362 >> 2] | 0;
   $1370 = HEAP8[(HEAP32[$this + 1312 + (($1363 >>> 11 & 31) << 3) >> 2] | 0) + ($1363 & 2047) >> 0] | 0;
   $1371 = $this + 2 | 0;
   $1372 = HEAP16[$1371 >> 1] | 0;
   $1373 = $1372 & 65535;
   $1374 = $1373 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1374 << 3) + 4 >> 0] | 0)) {
    $$pre$phi14$i$i46Z2D = $this + 6 | 0;
    $1388 = $1363 >>> 24 & 255;
    $1392 = $1363 >>> 16 & 255;
    $1400 = $1363 & 65535;
    $1402 = $1372;
   } else {
    HEAP8[(HEAP32[$this + 1312 + ($1374 << 3) >> 2] | 0) + ($1373 & 2047) >> 0] = $1370;
    $$phi$trans$insert$i$i38 = $this + 6 | 0;
    $$pre$phi14$i$i46Z2D = $$phi$trans$insert$i$i38;
    $1388 = HEAP8[$$phi$trans$insert$i$i38 + 1 >> 0] | 0;
    $1392 = HEAP8[$$phi$trans$insert$i$i38 >> 0] | 0;
    $1400 = HEAP16[$1362 >> 1] | 0;
    $1402 = HEAP16[$1371 >> 1] | 0;
   }
   $1390 = ($1388 & 255) + ($1370 & 255) | 0;
   $1398 = $1390 & 8 | $1392 & 193 | $1390 << 4 & 32;
   HEAP16[$1362 >> 1] = $1400 + 1 << 16 >> 16;
   HEAP16[$1371 >> 1] = $1402 + 1 << 16 >> 16;
   $1404 = (HEAP16[$this >> 1] | 0) + -1 << 16 >> 16;
   HEAP16[$this >> 1] = $1404;
   $1405 = $1404 << 16 >> 16 == 0;
   HEAP8[$$pre$phi14$i$i46Z2D >> 0] = $1405 ? $1398 : $1398 | 4;
   if ($1405) {
    $$0 = 16;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $1407 = $this + 22 | 0;
   HEAP16[$1407 >> 1] = (HEAPU16[$1407 >> 1] | 0) + 65534;
   $$0 = 21;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 177:
  {
   $1412 = $this + 6 | 0;
   $1415 = HEAPU8[$1412 + 1 >> 0] | 0;
   $1416 = $this + 4 | 0;
   $1417 = HEAP32[$1416 >> 2] | 0;
   $1427 = $1415 - (HEAPU8[(HEAP32[$this + 1312 + (($1417 >>> 11 & 31) << 3) >> 2] | 0) + ($1417 & 2047) >> 0] | 0) | 0;
   $1437 = ($1427 & 15) >>> 0 > ($1415 & 15) >>> 0;
   $r$0$i$i28 = ($1437 << 31 >> 31) + $1427 | 0;
   $1443 = ($1427 & 255 | 0 ? $1427 & 128 : 64) | $1417 >>> 16 & 1 | ($1437 ? 18 : 2) | $r$0$i$i28 & 8 | $r$0$i$i28 << 4 & 32;
   HEAP16[$1416 >> 1] = ($1417 & 65535) + 1 << 16 >> 16;
   $1446 = (HEAP16[$this >> 1] | 0) + -1 << 16 >> 16;
   HEAP16[$this >> 1] = $1446;
   $f$3$i$i32 = ($1446 << 16 >> 16 == 0 ? $1443 : $1443 | 4) & 255;
   HEAP8[$1412 >> 0] = $f$3$i$i32;
   if (!($1446 << 16 >> 16 != 0 & ($f$3$i$i32 & 64) == 0)) {
    $$0 = 16;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $1452 = $this + 22 | 0;
   HEAP16[$1452 >> 1] = (HEAPU16[$1452 >> 1] | 0) + 65534;
   $$0 = 21;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 178:
  {
   $1458 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$1458) $$0$i$i17 = 0; else $$0$i$i17 = FUNCTION_TABLE_iii[$1458 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   $1464 = $this + 1 | 0;
   $1466 = (HEAP8[$1464 >> 0] | 0) + -1 << 24 >> 24;
   HEAP8[$1464 >> 0] = $1466;
   $1467 = $this + 4 | 0;
   $1468 = HEAP16[$1467 >> 1] | 0;
   HEAP16[$1467 >> 1] = $1468 + 1 << 16 >> 16;
   $1470 = $1468 & 65535;
   $1471 = $1470 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1471 << 3) + 4 >> 0] | 0)) $1480 = $1466; else {
    HEAP8[(HEAP32[$this + 1312 + ($1471 << 3) >> 2] | 0) + ($1470 & 2047) >> 0] = $$0$i$i17;
    $1480 = HEAP8[$1464 >> 0] | 0;
   }
   $1479 = $1480 << 24 >> 24 == 0;
   if ($1479) $1487 = 64; else $1487 = $1480 & 128;
   $1483 = $$0$i$i17 & 255;
   if (!($1483 & 128)) $f$0$i$i22 = $1487; else $f$0$i$i22 = ($1487 & 255 | 2) & 255;
   $1490 = HEAP16[$this >> 1] | 0;
   $1492 = ($1490 & 65535) + 1 | 0;
   if (!(($1492 & 255) + $1483 & 256)) $f$1$i$i23 = $f$0$i$i22; else $f$1$i$i23 = ($f$0$i$i22 & 255 | 17) & 255;
   HEAP8[$this + 6 >> 0] = HEAPU8[($1492 + $1483 & 7 ^ ($1490 & 65535) >>> 8 & 65535) + ($this + 31) >> 0] & 4 | $f$1$i$i23 & 255;
   if ($1479) {
    $$0 = 16;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $1512 = $this + 22 | 0;
   HEAP16[$1512 >> 1] = (HEAPU16[$1512 >> 1] | 0) + 65534;
   $$0 = 21;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 179:
  {
   $1517 = $this + 4 | 0;
   $1518 = HEAP16[$1517 >> 1] | 0;
   HEAP16[$1517 >> 1] = $1518 + 1 << 16 >> 16;
   $1520 = $1518 & 65535;
   $1526 = HEAP8[(HEAP32[$this + 1312 + ($1520 >>> 11 << 3) >> 2] | 0) + ($1520 & 2047) >> 0] | 0;
   $1527 = $this + 1 | 0;
   $1529 = (HEAP8[$1527 >> 0] | 0) + -1 << 24 >> 24;
   HEAP8[$1527 >> 0] = $1529;
   $1531 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$1531) $1537 = $1529; else {
    FUNCTION_TABLE_viii[$1531 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, $1526);
    $1537 = HEAP8[$1527 >> 0] | 0;
   }
   $1536 = $1537 << 24 >> 24 == 0;
   if ($1536) $1544 = 64; else $1544 = $1537 & 128;
   $1540 = $1526 & 255;
   if (!($1540 & 128)) $f$0$i$i$i10 = $1544; else $f$0$i$i$i10 = ($1544 & 255 | 2) & 255;
   $1549 = (HEAPU8[$1517 >> 0] | 0) + $1540 | 0;
   if (!($1549 & 256)) $f$1$i$i$i11 = $f$0$i$i$i10; else $f$1$i$i$i11 = ($f$0$i$i$i10 & 255 | 17) & 255;
   HEAP8[$this + 6 >> 0] = HEAPU8[($1549 & 7 ^ $1537 & 255) + ($this + 31) >> 0] & 4 | $f$1$i$i$i11 & 255;
   if ($1536) {
    $$0 = 16;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $1566 = $this + 22 | 0;
   HEAP16[$1566 >> 1] = (HEAPU16[$1566 >> 1] | 0) + 65534;
   $$0 = 21;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 184:
  {
   $1571 = $this + 4 | 0;
   $1572 = HEAP32[$1571 >> 2] | 0;
   $1579 = HEAP8[(HEAP32[$this + 1312 + (($1572 >>> 11 & 31) << 3) >> 2] | 0) + ($1572 & 2047) >> 0] | 0;
   $1580 = $this + 2 | 0;
   $1581 = HEAP16[$1580 >> 1] | 0;
   $1582 = $1581 & 65535;
   $1583 = $1582 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1583 << 3) + 4 >> 0] | 0)) {
    $$pre$phi14$i$iZ2D = $this + 6 | 0;
    $1597 = $1572 >>> 24 & 255;
    $1601 = $1572 >>> 16 & 255;
    $1609 = $1572 & 65535;
    $1611 = $1581;
   } else {
    HEAP8[(HEAP32[$this + 1312 + ($1583 << 3) >> 2] | 0) + ($1582 & 2047) >> 0] = $1579;
    $$phi$trans$insert$i$i = $this + 6 | 0;
    $$pre$phi14$i$iZ2D = $$phi$trans$insert$i$i;
    $1597 = HEAP8[$$phi$trans$insert$i$i + 1 >> 0] | 0;
    $1601 = HEAP8[$$phi$trans$insert$i$i >> 0] | 0;
    $1609 = HEAP16[$1571 >> 1] | 0;
    $1611 = HEAP16[$1580 >> 1] | 0;
   }
   $1599 = ($1597 & 255) + ($1579 & 255) | 0;
   $1607 = $1599 & 8 | $1601 & 193 | $1599 << 4 & 32;
   HEAP16[$1571 >> 1] = $1609 + -1 << 16 >> 16;
   HEAP16[$1580 >> 1] = $1611 + -1 << 16 >> 16;
   $1613 = (HEAP16[$this >> 1] | 0) + -1 << 16 >> 16;
   HEAP16[$this >> 1] = $1613;
   $1614 = $1613 << 16 >> 16 == 0;
   HEAP8[$$pre$phi14$i$iZ2D >> 0] = $1614 ? $1607 : $1607 | 4;
   if ($1614) {
    $$0 = 16;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $1616 = $this + 22 | 0;
   HEAP16[$1616 >> 1] = (HEAPU16[$1616 >> 1] | 0) + 65534;
   $$0 = 21;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 185:
  {
   $1621 = $this + 6 | 0;
   $1624 = HEAPU8[$1621 + 1 >> 0] | 0;
   $1625 = $this + 4 | 0;
   $1626 = HEAP32[$1625 >> 2] | 0;
   $1636 = $1624 - (HEAPU8[(HEAP32[$this + 1312 + (($1626 >>> 11 & 31) << 3) >> 2] | 0) + ($1626 & 2047) >> 0] | 0) | 0;
   $1646 = ($1636 & 15) >>> 0 > ($1624 & 15) >>> 0;
   $r$0$i$i = ($1646 << 31 >> 31) + $1636 | 0;
   $1652 = ($1636 & 255 | 0 ? $1636 & 128 : 64) | $1626 >>> 16 & 1 | ($1646 ? 18 : 2) | $r$0$i$i & 8 | $r$0$i$i << 4 & 32;
   HEAP16[$1625 >> 1] = ($1626 & 65535) + -1 << 16 >> 16;
   $1655 = (HEAP16[$this >> 1] | 0) + -1 << 16 >> 16;
   HEAP16[$this >> 1] = $1655;
   $f$3$i$i = ($1655 << 16 >> 16 == 0 ? $1652 : $1652 | 4) & 255;
   HEAP8[$1621 >> 0] = $f$3$i$i;
   if (!($1655 << 16 >> 16 != 0 & ($f$3$i$i & 64) == 0)) {
    $$0 = 16;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $1661 = $this + 22 | 0;
   HEAP16[$1661 >> 1] = (HEAPU16[$1661 >> 1] | 0) + 65534;
   $$0 = 21;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 186:
  {
   $1667 = HEAP32[$this + 3616 >> 2] | 0;
   if (!$1667) $$0$i$i = 0; else $$0$i$i = FUNCTION_TABLE_iii[$1667 & 31](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0) | 0;
   $1673 = $this + 1 | 0;
   $1675 = (HEAP8[$1673 >> 0] | 0) + -1 << 24 >> 24;
   HEAP8[$1673 >> 0] = $1675;
   $1676 = $this + 4 | 0;
   $1677 = HEAP16[$1676 >> 1] | 0;
   HEAP16[$1676 >> 1] = $1677 + -1 << 16 >> 16;
   $1679 = $1677 & 65535;
   $1680 = $1679 >>> 11;
   if (!(HEAP8[$this + 1312 + ($1680 << 3) + 4 >> 0] | 0)) $1689 = $1675; else {
    HEAP8[(HEAP32[$this + 1312 + ($1680 << 3) >> 2] | 0) + ($1679 & 2047) >> 0] = $$0$i$i;
    $1689 = HEAP8[$1673 >> 0] | 0;
   }
   $1688 = $1689 << 24 >> 24 == 0;
   if ($1688) $1696 = 64; else $1696 = $1689 & 128;
   $1692 = $$0$i$i & 255;
   if (!($1692 & 128)) $f$0$i$i = $1696; else $f$0$i$i = ($1696 & 255 | 2) & 255;
   $1699 = HEAP16[$this >> 1] | 0;
   $1701 = ($1699 & 65535) + -1 | 0;
   if (!(($1701 & 255) + $1692 & 256)) $f$1$i$i = $f$0$i$i; else $f$1$i$i = ($f$0$i$i & 255 | 17) & 255;
   HEAP8[$this + 6 >> 0] = HEAPU8[($1701 + $1692 & 7 ^ ($1699 & 65535) >>> 8 & 65535) + ($this + 31) >> 0] & 4 | $f$1$i$i & 255;
   if ($1688) {
    $$0 = 16;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $1721 = $this + 22 | 0;
   HEAP16[$1721 >> 1] = (HEAPU16[$1721 >> 1] | 0) + 65534;
   $$0 = 21;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 187:
  {
   $1726 = $this + 4 | 0;
   $1727 = HEAP16[$1726 >> 1] | 0;
   HEAP16[$1726 >> 1] = $1727 + -1 << 16 >> 16;
   $1729 = $1727 & 65535;
   $1735 = HEAP8[(HEAP32[$this + 1312 + ($1729 >>> 11 << 3) >> 2] | 0) + ($1729 & 2047) >> 0] | 0;
   $1736 = $this + 1 | 0;
   $1738 = (HEAP8[$1736 >> 0] | 0) + -1 << 24 >> 24;
   HEAP8[$1736 >> 0] = $1738;
   $1740 = HEAP32[$this + 3620 >> 2] | 0;
   if (!$1740) $1746 = $1738; else {
    FUNCTION_TABLE_viii[$1740 & 7](HEAP32[$this + 3624 >> 2] | 0, HEAP16[$this >> 1] | 0, $1735);
    $1746 = HEAP8[$1736 >> 0] | 0;
   }
   $1745 = $1746 << 24 >> 24 == 0;
   if ($1745) $1753 = 64; else $1753 = $1746 & 128;
   $1749 = $1735 & 255;
   if (!($1749 & 128)) $f$0$i$i$i = $1753; else $f$0$i$i$i = ($1753 & 255 | 2) & 255;
   $1758 = (HEAPU8[$1726 >> 0] | 0) + $1749 | 0;
   if (!($1758 & 256)) $f$1$i$i$i = $f$0$i$i$i; else $f$1$i$i$i = ($f$0$i$i$i & 255 | 17) & 255;
   HEAP8[$this + 6 >> 0] = HEAPU8[($1758 & 7 ^ $1746 & 255) + ($this + 31) >> 0] & 4 | $f$1$i$i$i & 255;
   if ($1745) {
    $$0 = 16;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $1775 = $this + 22 | 0;
   HEAP16[$1775 >> 1] = (HEAPU16[$1775 >> 1] | 0) + 65534;
   $$0 = 21;
   STACKTOP = sp;
   return $$0 | 0;
  }
 default:
  {
   if (!(HEAP8[$this + 3634 >> 0] | 0)) {
    $$0 = 4;
    STACKTOP = sp;
    return $$0 | 0;
   }
   HEAP8[$this + 30 >> 0] = 1;
   $1784 = $this + 22 | 0;
   HEAP16[$1784 >> 1] = (HEAPU16[$1784 >> 1] | 0) + 65534;
   $$0 = 4;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } while (0);
 return 0;
}

function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa141 = 0, $$lcssa142 = 0, $$lcssa144 = 0, $$lcssa147 = 0, $$lcssa149 = 0, $$lcssa151 = 0, $$lcssa153 = 0, $$lcssa155 = 0, $$lcssa157 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i14Z2D = 0, $$pre$phi$i17$iZ2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi10$i$iZ2D = 0, $$pre$phiZ2D = 0, $$rsize$4$i = 0, $100 = 0, $1002 = 0, $1008 = 0, $101 = 0, $1011 = 0, $1012 = 0, $1030 = 0, $1032 = 0, $1039 = 0, $1040 = 0, $1041 = 0, $1049 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $107 = 0, $111 = 0, $113 = 0, $114 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $124 = 0, $126 = 0, $128 = 0, $133 = 0, $139 = 0, $14 = 0, $142 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $152 = 0, $155 = 0, $157 = 0, $16 = 0, $160 = 0, $162 = 0, $165 = 0, $168 = 0, $169 = 0, $17 = 0, $171 = 0, $172 = 0, $174 = 0, $175 = 0, $177 = 0, $178 = 0, $18 = 0, $183 = 0, $184 = 0, $193 = 0, $198 = 0, $202 = 0, $208 = 0, $215 = 0, $219 = 0, $227 = 0, $229 = 0, $230 = 0, $232 = 0, $233 = 0, $234 = 0, $238 = 0, $239 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $251 = 0, $252 = 0, $257 = 0, $258 = 0, $261 = 0, $263 = 0, $266 = 0, $271 = 0, $278 = 0, $28 = 0, $287 = 0, $288 = 0, $292 = 0, $298 = 0, $303 = 0, $306 = 0, $310 = 0, $312 = 0, $313 = 0, $315 = 0, $317 = 0, $319 = 0, $32 = 0, $321 = 0, $323 = 0, $325 = 0, $327 = 0, $337 = 0, $338 = 0, $340 = 0, $349 = 0, $35 = 0, $351 = 0, $354 = 0, $356 = 0, $359 = 0, $361 = 0, $364 = 0, $367 = 0, $368 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $376 = 0, $377 = 0, $382 = 0, $383 = 0, $39 = 0, $392 = 0, $397 = 0, $4 = 0, $401 = 0, $407 = 0, $414 = 0, $418 = 0, $42 = 0, $426 = 0, $429 = 0, $430 = 0, $431 = 0, $435 = 0, $436 = 0, $442 = 0, $447 = 0, $448 = 0, $45 = 0, $451 = 0, $453 = 0, $456 = 0, $461 = 0, $467 = 0, $469 = 0, $47 = 0, $471 = 0, $472 = 0, $48 = 0, $490 = 0, $492 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $509 = 0, $511 = 0, $512 = 0, $514 = 0, $52 = 0, $523 = 0, $527 = 0, $529 = 0, $530 = 0, $531 = 0, $54 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $549 = 0, $551 = 0, $552 = 0, $558 = 0, $56 = 0, $560 = 0, $562 = 0, $569 = 0, $571 = 0, $572 = 0, $573 = 0, $58 = 0, $581 = 0, $582 = 0, $585 = 0, $589 = 0, $593 = 0, $595 = 0, $6 = 0, $60 = 0, $601 = 0, $605 = 0, $609 = 0, $618 = 0, $619 = 0, $62 = 0, $625 = 0, $628 = 0, $631 = 0, $633 = 0, $638 = 0, $644 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $657 = 0, $658 = 0, $659 = 0, $67 = 0, $674 = 0, $679 = 0, $68 = 0, $680 = 0, $682 = 0, $688 = 0, $69 = 0, $690 = 0, $7 = 0, $70 = 0, $700 = 0, $704 = 0, $71 = 0, $710 = 0, $712 = 0, $718 = 0, $722 = 0, $723 = 0, $728 = 0, $734 = 0, $739 = 0, $742 = 0, $743 = 0, $746 = 0, $748 = 0, $750 = 0, $753 = 0, $764 = 0, $769 = 0, $771 = 0, $774 = 0, $776 = 0, $779 = 0, $78 = 0, $782 = 0, $783 = 0, $784 = 0, $786 = 0, $788 = 0, $789 = 0, $791 = 0, $792 = 0, $797 = 0, $798 = 0, $807 = 0, $812 = 0, $815 = 0, $816 = 0, $82 = 0, $822 = 0, $830 = 0, $836 = 0, $839 = 0, $840 = 0, $841 = 0, $845 = 0, $846 = 0, $85 = 0, $852 = 0, $857 = 0, $858 = 0, $861 = 0, $863 = 0, $866 = 0, $871 = 0, $877 = 0, $879 = 0, $881 = 0, $882 = 0, $90 = 0, $900 = 0, $902 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $918 = 0, $92 = 0, $922 = 0, $926 = 0, $928 = 0, $934 = 0, $935 = 0, $937 = 0, $938 = 0, $94 = 0, $942 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $955 = 0, $96 = 0, $962 = 0, $967 = 0, $970 = 0, $971 = 0, $972 = 0, $976 = 0, $977 = 0, $983 = 0, $988 = 0, $989 = 0, $992 = 0, $994 = 0, $997 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$0$i = 0, $K2$0$i$i = 0, $K8$0$i$i = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i$i$lcssa = 0, $R$1$i$lcssa = 0, $R$1$i9 = 0, $R$1$i9$lcssa = 0, $R$3$i = 0, $R$3$i$i = 0, $R$3$i11 = 0, $RP$1$i = 0, $RP$1$i$i = 0, $RP$1$i$i$lcssa = 0, $RP$1$i$lcssa = 0, $RP$1$i8 = 0, $RP$1$i8$lcssa = 0, $T$0$i = 0, $T$0$i$i = 0, $T$0$i$i$lcssa = 0, $T$0$i$i$lcssa140 = 0, $T$0$i$lcssa = 0, $T$0$i$lcssa156 = 0, $T$0$i18$i = 0, $T$0$i18$i$lcssa = 0, $T$0$i18$i$lcssa139 = 0, $br$2$ph$i = 0, $i$01$i$i = 0, $idx$0$i = 0, $magic$i$i = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $p$0$i$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i5 = 0, $rsize$1$i = 0, $rsize$3$i = 0, $rsize$4$lcssa$i = 0, $rsize$412$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$068$i = 0, $sp$068$i$lcssa = 0, $sp$167$i = 0, $sp$167$i$lcssa = 0, $ssize$0$i = 0, $ssize$2$ph$i = 0, $ssize$5$i = 0, $t$0$i = 0, $t$0$i4 = 0, $t$2$i = 0, $t$4$ph$i = 0, $t$4$v$4$i = 0, $t$411$i = 0, $tbase$746$i = 0, $tsize$745$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i6 = 0, $v$1$i = 0, $v$3$i = 0, $v$4$lcssa$i = 0, $v$413$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $magic$i$i = sp;
 do if ($bytes >>> 0 < 245) {
  $4 = $bytes >>> 0 < 11 ? 16 : $bytes + 11 & -8;
  $5 = $4 >>> 3;
  $6 = HEAP32[40707] | 0;
  $7 = $6 >>> $5;
  if ($7 & 3 | 0) {
   $12 = ($7 & 1 ^ 1) + $5 | 0;
   $14 = 162868 + ($12 << 1 << 2) | 0;
   $15 = $14 + 8 | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($14 | 0) == ($18 | 0)) HEAP32[40707] = $6 & ~(1 << $12); else {
    if ($18 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
    $25 = $18 + 12 | 0;
    if ((HEAP32[$25 >> 2] | 0) == ($16 | 0)) {
     HEAP32[$25 >> 2] = $14;
     HEAP32[$15 >> 2] = $18;
     break;
    } else _abort();
   } while (0);
   $28 = $12 << 3;
   HEAP32[$16 + 4 >> 2] = $28 | 3;
   $32 = $16 + $28 + 4 | 0;
   HEAP32[$32 >> 2] = HEAP32[$32 >> 2] | 1;
   $$0 = $17;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $35 = HEAP32[40709] | 0;
  if ($4 >>> 0 > $35 >>> 0) {
   if ($7 | 0) {
    $39 = 2 << $5;
    $42 = $7 << $5 & ($39 | 0 - $39);
    $45 = ($42 & 0 - $42) + -1 | 0;
    $47 = $45 >>> 12 & 16;
    $48 = $45 >>> $47;
    $50 = $48 >>> 5 & 8;
    $52 = $48 >>> $50;
    $54 = $52 >>> 2 & 4;
    $56 = $52 >>> $54;
    $58 = $56 >>> 1 & 2;
    $60 = $56 >>> $58;
    $62 = $60 >>> 1 & 1;
    $65 = ($50 | $47 | $54 | $58 | $62) + ($60 >>> $62) | 0;
    $67 = 162868 + ($65 << 1 << 2) | 0;
    $68 = $67 + 8 | 0;
    $69 = HEAP32[$68 >> 2] | 0;
    $70 = $69 + 8 | 0;
    $71 = HEAP32[$70 >> 2] | 0;
    do if (($67 | 0) == ($71 | 0)) {
     HEAP32[40707] = $6 & ~(1 << $65);
     $90 = $35;
    } else {
     if ($71 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
     $78 = $71 + 12 | 0;
     if ((HEAP32[$78 >> 2] | 0) == ($69 | 0)) {
      HEAP32[$78 >> 2] = $67;
      HEAP32[$68 >> 2] = $71;
      $90 = HEAP32[40709] | 0;
      break;
     } else _abort();
    } while (0);
    $82 = ($65 << 3) - $4 | 0;
    HEAP32[$69 + 4 >> 2] = $4 | 3;
    $85 = $69 + $4 | 0;
    HEAP32[$85 + 4 >> 2] = $82 | 1;
    HEAP32[$85 + $82 >> 2] = $82;
    if ($90 | 0) {
     $91 = HEAP32[40712] | 0;
     $92 = $90 >>> 3;
     $94 = 162868 + ($92 << 1 << 2) | 0;
     $95 = HEAP32[40707] | 0;
     $96 = 1 << $92;
     if (!($95 & $96)) {
      HEAP32[40707] = $95 | $96;
      $$pre$phiZ2D = $94 + 8 | 0;
      $F4$0 = $94;
     } else {
      $100 = $94 + 8 | 0;
      $101 = HEAP32[$100 >> 2] | 0;
      if ($101 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
       $$pre$phiZ2D = $100;
       $F4$0 = $101;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $91;
     HEAP32[$F4$0 + 12 >> 2] = $91;
     HEAP32[$91 + 8 >> 2] = $F4$0;
     HEAP32[$91 + 12 >> 2] = $94;
    }
    HEAP32[40709] = $82;
    HEAP32[40712] = $85;
    $$0 = $70;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $107 = HEAP32[40708] | 0;
   if (!$107) $nb$0 = $4; else {
    $111 = ($107 & 0 - $107) + -1 | 0;
    $113 = $111 >>> 12 & 16;
    $114 = $111 >>> $113;
    $116 = $114 >>> 5 & 8;
    $118 = $114 >>> $116;
    $120 = $118 >>> 2 & 4;
    $122 = $118 >>> $120;
    $124 = $122 >>> 1 & 2;
    $126 = $122 >>> $124;
    $128 = $126 >>> 1 & 1;
    $133 = HEAP32[163132 + (($116 | $113 | $120 | $124 | $128) + ($126 >>> $128) << 2) >> 2] | 0;
    $rsize$0$i = (HEAP32[$133 + 4 >> 2] & -8) - $4 | 0;
    $t$0$i = $133;
    $v$0$i = $133;
    while (1) {
     $139 = HEAP32[$t$0$i + 16 >> 2] | 0;
     if (!$139) {
      $142 = HEAP32[$t$0$i + 20 >> 2] | 0;
      if (!$142) {
       $rsize$0$i$lcssa = $rsize$0$i;
       $v$0$i$lcssa = $v$0$i;
       break;
      } else $145 = $142;
     } else $145 = $139;
     $148 = (HEAP32[$145 + 4 >> 2] & -8) - $4 | 0;
     $149 = $148 >>> 0 < $rsize$0$i >>> 0;
     $rsize$0$i = $149 ? $148 : $rsize$0$i;
     $t$0$i = $145;
     $v$0$i = $149 ? $145 : $v$0$i;
    }
    $150 = HEAP32[40711] | 0;
    if ($v$0$i$lcssa >>> 0 < $150 >>> 0) _abort();
    $152 = $v$0$i$lcssa + $4 | 0;
    if ($v$0$i$lcssa >>> 0 >= $152 >>> 0) _abort();
    $155 = HEAP32[$v$0$i$lcssa + 24 >> 2] | 0;
    $157 = HEAP32[$v$0$i$lcssa + 12 >> 2] | 0;
    do if (($157 | 0) == ($v$0$i$lcssa | 0)) {
     $168 = $v$0$i$lcssa + 20 | 0;
     $169 = HEAP32[$168 >> 2] | 0;
     if (!$169) {
      $171 = $v$0$i$lcssa + 16 | 0;
      $172 = HEAP32[$171 >> 2] | 0;
      if (!$172) {
       $R$3$i = 0;
       break;
      } else {
       $R$1$i = $172;
       $RP$1$i = $171;
      }
     } else {
      $R$1$i = $169;
      $RP$1$i = $168;
     }
     while (1) {
      $174 = $R$1$i + 20 | 0;
      $175 = HEAP32[$174 >> 2] | 0;
      if ($175 | 0) {
       $R$1$i = $175;
       $RP$1$i = $174;
       continue;
      }
      $177 = $R$1$i + 16 | 0;
      $178 = HEAP32[$177 >> 2] | 0;
      if (!$178) {
       $R$1$i$lcssa = $R$1$i;
       $RP$1$i$lcssa = $RP$1$i;
       break;
      } else {
       $R$1$i = $178;
       $RP$1$i = $177;
      }
     }
     if ($RP$1$i$lcssa >>> 0 < $150 >>> 0) _abort(); else {
      HEAP32[$RP$1$i$lcssa >> 2] = 0;
      $R$3$i = $R$1$i$lcssa;
      break;
     }
    } else {
     $160 = HEAP32[$v$0$i$lcssa + 8 >> 2] | 0;
     if ($160 >>> 0 < $150 >>> 0) _abort();
     $162 = $160 + 12 | 0;
     if ((HEAP32[$162 >> 2] | 0) != ($v$0$i$lcssa | 0)) _abort();
     $165 = $157 + 8 | 0;
     if ((HEAP32[$165 >> 2] | 0) == ($v$0$i$lcssa | 0)) {
      HEAP32[$162 >> 2] = $157;
      HEAP32[$165 >> 2] = $160;
      $R$3$i = $157;
      break;
     } else _abort();
    } while (0);
    do if ($155 | 0) {
     $183 = HEAP32[$v$0$i$lcssa + 28 >> 2] | 0;
     $184 = 163132 + ($183 << 2) | 0;
     if (($v$0$i$lcssa | 0) == (HEAP32[$184 >> 2] | 0)) {
      HEAP32[$184 >> 2] = $R$3$i;
      if (!$R$3$i) {
       HEAP32[40708] = HEAP32[40708] & ~(1 << $183);
       break;
      }
     } else {
      if ($155 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
      $193 = $155 + 16 | 0;
      if ((HEAP32[$193 >> 2] | 0) == ($v$0$i$lcssa | 0)) HEAP32[$193 >> 2] = $R$3$i; else HEAP32[$155 + 20 >> 2] = $R$3$i;
      if (!$R$3$i) break;
     }
     $198 = HEAP32[40711] | 0;
     if ($R$3$i >>> 0 < $198 >>> 0) _abort();
     HEAP32[$R$3$i + 24 >> 2] = $155;
     $202 = HEAP32[$v$0$i$lcssa + 16 >> 2] | 0;
     do if ($202 | 0) if ($202 >>> 0 < $198 >>> 0) _abort(); else {
      HEAP32[$R$3$i + 16 >> 2] = $202;
      HEAP32[$202 + 24 >> 2] = $R$3$i;
      break;
     } while (0);
     $208 = HEAP32[$v$0$i$lcssa + 20 >> 2] | 0;
     if ($208 | 0) if ($208 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
      HEAP32[$R$3$i + 20 >> 2] = $208;
      HEAP32[$208 + 24 >> 2] = $R$3$i;
      break;
     }
    } while (0);
    if ($rsize$0$i$lcssa >>> 0 < 16) {
     $215 = $rsize$0$i$lcssa + $4 | 0;
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $215 | 3;
     $219 = $v$0$i$lcssa + $215 + 4 | 0;
     HEAP32[$219 >> 2] = HEAP32[$219 >> 2] | 1;
    } else {
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $4 | 3;
     HEAP32[$152 + 4 >> 2] = $rsize$0$i$lcssa | 1;
     HEAP32[$152 + $rsize$0$i$lcssa >> 2] = $rsize$0$i$lcssa;
     $227 = HEAP32[40709] | 0;
     if ($227 | 0) {
      $229 = HEAP32[40712] | 0;
      $230 = $227 >>> 3;
      $232 = 162868 + ($230 << 1 << 2) | 0;
      $233 = HEAP32[40707] | 0;
      $234 = 1 << $230;
      if (!($233 & $234)) {
       HEAP32[40707] = $233 | $234;
       $$pre$phi$iZ2D = $232 + 8 | 0;
       $F1$0$i = $232;
      } else {
       $238 = $232 + 8 | 0;
       $239 = HEAP32[$238 >> 2] | 0;
       if ($239 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
        $$pre$phi$iZ2D = $238;
        $F1$0$i = $239;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $229;
      HEAP32[$F1$0$i + 12 >> 2] = $229;
      HEAP32[$229 + 8 >> 2] = $F1$0$i;
      HEAP32[$229 + 12 >> 2] = $232;
     }
     HEAP32[40709] = $rsize$0$i$lcssa;
     HEAP32[40712] = $152;
    }
    $$0 = $v$0$i$lcssa + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else $nb$0 = $4;
 } else if ($bytes >>> 0 > 4294967231) $nb$0 = -1; else {
  $247 = $bytes + 11 | 0;
  $248 = $247 & -8;
  $249 = HEAP32[40708] | 0;
  if (!$249) $nb$0 = $248; else {
   $251 = 0 - $248 | 0;
   $252 = $247 >>> 8;
   if (!$252) $idx$0$i = 0; else if ($248 >>> 0 > 16777215) $idx$0$i = 31; else {
    $257 = ($252 + 1048320 | 0) >>> 16 & 8;
    $258 = $252 << $257;
    $261 = ($258 + 520192 | 0) >>> 16 & 4;
    $263 = $258 << $261;
    $266 = ($263 + 245760 | 0) >>> 16 & 2;
    $271 = 14 - ($261 | $257 | $266) + ($263 << $266 >>> 15) | 0;
    $idx$0$i = $248 >>> ($271 + 7 | 0) & 1 | $271 << 1;
   }
   $278 = HEAP32[163132 + ($idx$0$i << 2) >> 2] | 0;
   L123 : do if (!$278) {
    $rsize$3$i = $251;
    $t$2$i = 0;
    $v$3$i = 0;
    label = 86;
   } else {
    $rsize$0$i5 = $251;
    $rst$0$i = 0;
    $sizebits$0$i = $248 << (($idx$0$i | 0) == 31 ? 0 : 25 - ($idx$0$i >>> 1) | 0);
    $t$0$i4 = $278;
    $v$0$i6 = 0;
    while (1) {
     $287 = HEAP32[$t$0$i4 + 4 >> 2] & -8;
     $288 = $287 - $248 | 0;
     if ($288 >>> 0 < $rsize$0$i5 >>> 0) if (($287 | 0) == ($248 | 0)) {
      $rsize$412$i = $288;
      $t$411$i = $t$0$i4;
      $v$413$i = $t$0$i4;
      label = 90;
      break L123;
     } else {
      $rsize$1$i = $288;
      $v$1$i = $t$0$i4;
     } else {
      $rsize$1$i = $rsize$0$i5;
      $v$1$i = $v$0$i6;
     }
     $292 = HEAP32[$t$0$i4 + 20 >> 2] | 0;
     $t$0$i4 = HEAP32[$t$0$i4 + 16 + ($sizebits$0$i >>> 31 << 2) >> 2] | 0;
     $rst$1$i = ($292 | 0) == 0 | ($292 | 0) == ($t$0$i4 | 0) ? $rst$0$i : $292;
     $298 = ($t$0$i4 | 0) == 0;
     if ($298) {
      $rsize$3$i = $rsize$1$i;
      $t$2$i = $rst$1$i;
      $v$3$i = $v$1$i;
      label = 86;
      break;
     } else {
      $rsize$0$i5 = $rsize$1$i;
      $rst$0$i = $rst$1$i;
      $sizebits$0$i = $sizebits$0$i << ($298 & 1 ^ 1);
      $v$0$i6 = $v$1$i;
     }
    }
   } while (0);
   if ((label | 0) == 86) {
    if (($t$2$i | 0) == 0 & ($v$3$i | 0) == 0) {
     $303 = 2 << $idx$0$i;
     $306 = $249 & ($303 | 0 - $303);
     if (!$306) {
      $nb$0 = $248;
      break;
     }
     $310 = ($306 & 0 - $306) + -1 | 0;
     $312 = $310 >>> 12 & 16;
     $313 = $310 >>> $312;
     $315 = $313 >>> 5 & 8;
     $317 = $313 >>> $315;
     $319 = $317 >>> 2 & 4;
     $321 = $317 >>> $319;
     $323 = $321 >>> 1 & 2;
     $325 = $321 >>> $323;
     $327 = $325 >>> 1 & 1;
     $t$4$ph$i = HEAP32[163132 + (($315 | $312 | $319 | $323 | $327) + ($325 >>> $327) << 2) >> 2] | 0;
    } else $t$4$ph$i = $t$2$i;
    if (!$t$4$ph$i) {
     $rsize$4$lcssa$i = $rsize$3$i;
     $v$4$lcssa$i = $v$3$i;
    } else {
     $rsize$412$i = $rsize$3$i;
     $t$411$i = $t$4$ph$i;
     $v$413$i = $v$3$i;
     label = 90;
    }
   }
   if ((label | 0) == 90) while (1) {
    label = 0;
    $337 = (HEAP32[$t$411$i + 4 >> 2] & -8) - $248 | 0;
    $338 = $337 >>> 0 < $rsize$412$i >>> 0;
    $$rsize$4$i = $338 ? $337 : $rsize$412$i;
    $t$4$v$4$i = $338 ? $t$411$i : $v$413$i;
    $340 = HEAP32[$t$411$i + 16 >> 2] | 0;
    if ($340 | 0) {
     $rsize$412$i = $$rsize$4$i;
     $t$411$i = $340;
     $v$413$i = $t$4$v$4$i;
     label = 90;
     continue;
    }
    $t$411$i = HEAP32[$t$411$i + 20 >> 2] | 0;
    if (!$t$411$i) {
     $rsize$4$lcssa$i = $$rsize$4$i;
     $v$4$lcssa$i = $t$4$v$4$i;
     break;
    } else {
     $rsize$412$i = $$rsize$4$i;
     $v$413$i = $t$4$v$4$i;
     label = 90;
    }
   }
   if (!$v$4$lcssa$i) $nb$0 = $248; else if ($rsize$4$lcssa$i >>> 0 < ((HEAP32[40709] | 0) - $248 | 0) >>> 0) {
    $349 = HEAP32[40711] | 0;
    if ($v$4$lcssa$i >>> 0 < $349 >>> 0) _abort();
    $351 = $v$4$lcssa$i + $248 | 0;
    if ($v$4$lcssa$i >>> 0 >= $351 >>> 0) _abort();
    $354 = HEAP32[$v$4$lcssa$i + 24 >> 2] | 0;
    $356 = HEAP32[$v$4$lcssa$i + 12 >> 2] | 0;
    do if (($356 | 0) == ($v$4$lcssa$i | 0)) {
     $367 = $v$4$lcssa$i + 20 | 0;
     $368 = HEAP32[$367 >> 2] | 0;
     if (!$368) {
      $370 = $v$4$lcssa$i + 16 | 0;
      $371 = HEAP32[$370 >> 2] | 0;
      if (!$371) {
       $R$3$i11 = 0;
       break;
      } else {
       $R$1$i9 = $371;
       $RP$1$i8 = $370;
      }
     } else {
      $R$1$i9 = $368;
      $RP$1$i8 = $367;
     }
     while (1) {
      $373 = $R$1$i9 + 20 | 0;
      $374 = HEAP32[$373 >> 2] | 0;
      if ($374 | 0) {
       $R$1$i9 = $374;
       $RP$1$i8 = $373;
       continue;
      }
      $376 = $R$1$i9 + 16 | 0;
      $377 = HEAP32[$376 >> 2] | 0;
      if (!$377) {
       $R$1$i9$lcssa = $R$1$i9;
       $RP$1$i8$lcssa = $RP$1$i8;
       break;
      } else {
       $R$1$i9 = $377;
       $RP$1$i8 = $376;
      }
     }
     if ($RP$1$i8$lcssa >>> 0 < $349 >>> 0) _abort(); else {
      HEAP32[$RP$1$i8$lcssa >> 2] = 0;
      $R$3$i11 = $R$1$i9$lcssa;
      break;
     }
    } else {
     $359 = HEAP32[$v$4$lcssa$i + 8 >> 2] | 0;
     if ($359 >>> 0 < $349 >>> 0) _abort();
     $361 = $359 + 12 | 0;
     if ((HEAP32[$361 >> 2] | 0) != ($v$4$lcssa$i | 0)) _abort();
     $364 = $356 + 8 | 0;
     if ((HEAP32[$364 >> 2] | 0) == ($v$4$lcssa$i | 0)) {
      HEAP32[$361 >> 2] = $356;
      HEAP32[$364 >> 2] = $359;
      $R$3$i11 = $356;
      break;
     } else _abort();
    } while (0);
    do if ($354 | 0) {
     $382 = HEAP32[$v$4$lcssa$i + 28 >> 2] | 0;
     $383 = 163132 + ($382 << 2) | 0;
     if (($v$4$lcssa$i | 0) == (HEAP32[$383 >> 2] | 0)) {
      HEAP32[$383 >> 2] = $R$3$i11;
      if (!$R$3$i11) {
       HEAP32[40708] = HEAP32[40708] & ~(1 << $382);
       break;
      }
     } else {
      if ($354 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
      $392 = $354 + 16 | 0;
      if ((HEAP32[$392 >> 2] | 0) == ($v$4$lcssa$i | 0)) HEAP32[$392 >> 2] = $R$3$i11; else HEAP32[$354 + 20 >> 2] = $R$3$i11;
      if (!$R$3$i11) break;
     }
     $397 = HEAP32[40711] | 0;
     if ($R$3$i11 >>> 0 < $397 >>> 0) _abort();
     HEAP32[$R$3$i11 + 24 >> 2] = $354;
     $401 = HEAP32[$v$4$lcssa$i + 16 >> 2] | 0;
     do if ($401 | 0) if ($401 >>> 0 < $397 >>> 0) _abort(); else {
      HEAP32[$R$3$i11 + 16 >> 2] = $401;
      HEAP32[$401 + 24 >> 2] = $R$3$i11;
      break;
     } while (0);
     $407 = HEAP32[$v$4$lcssa$i + 20 >> 2] | 0;
     if ($407 | 0) if ($407 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
      HEAP32[$R$3$i11 + 20 >> 2] = $407;
      HEAP32[$407 + 24 >> 2] = $R$3$i11;
      break;
     }
    } while (0);
    do if ($rsize$4$lcssa$i >>> 0 < 16) {
     $414 = $rsize$4$lcssa$i + $248 | 0;
     HEAP32[$v$4$lcssa$i + 4 >> 2] = $414 | 3;
     $418 = $v$4$lcssa$i + $414 + 4 | 0;
     HEAP32[$418 >> 2] = HEAP32[$418 >> 2] | 1;
    } else {
     HEAP32[$v$4$lcssa$i + 4 >> 2] = $248 | 3;
     HEAP32[$351 + 4 >> 2] = $rsize$4$lcssa$i | 1;
     HEAP32[$351 + $rsize$4$lcssa$i >> 2] = $rsize$4$lcssa$i;
     $426 = $rsize$4$lcssa$i >>> 3;
     if ($rsize$4$lcssa$i >>> 0 < 256) {
      $429 = 162868 + ($426 << 1 << 2) | 0;
      $430 = HEAP32[40707] | 0;
      $431 = 1 << $426;
      if (!($430 & $431)) {
       HEAP32[40707] = $430 | $431;
       $$pre$phi$i14Z2D = $429 + 8 | 0;
       $F5$0$i = $429;
      } else {
       $435 = $429 + 8 | 0;
       $436 = HEAP32[$435 >> 2] | 0;
       if ($436 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
        $$pre$phi$i14Z2D = $435;
        $F5$0$i = $436;
       }
      }
      HEAP32[$$pre$phi$i14Z2D >> 2] = $351;
      HEAP32[$F5$0$i + 12 >> 2] = $351;
      HEAP32[$351 + 8 >> 2] = $F5$0$i;
      HEAP32[$351 + 12 >> 2] = $429;
      break;
     }
     $442 = $rsize$4$lcssa$i >>> 8;
     if (!$442) $I7$0$i = 0; else if ($rsize$4$lcssa$i >>> 0 > 16777215) $I7$0$i = 31; else {
      $447 = ($442 + 1048320 | 0) >>> 16 & 8;
      $448 = $442 << $447;
      $451 = ($448 + 520192 | 0) >>> 16 & 4;
      $453 = $448 << $451;
      $456 = ($453 + 245760 | 0) >>> 16 & 2;
      $461 = 14 - ($451 | $447 | $456) + ($453 << $456 >>> 15) | 0;
      $I7$0$i = $rsize$4$lcssa$i >>> ($461 + 7 | 0) & 1 | $461 << 1;
     }
     $467 = 163132 + ($I7$0$i << 2) | 0;
     HEAP32[$351 + 28 >> 2] = $I7$0$i;
     $469 = $351 + 16 | 0;
     HEAP32[$469 + 4 >> 2] = 0;
     HEAP32[$469 >> 2] = 0;
     $471 = HEAP32[40708] | 0;
     $472 = 1 << $I7$0$i;
     if (!($471 & $472)) {
      HEAP32[40708] = $471 | $472;
      HEAP32[$467 >> 2] = $351;
      HEAP32[$351 + 24 >> 2] = $467;
      HEAP32[$351 + 12 >> 2] = $351;
      HEAP32[$351 + 8 >> 2] = $351;
      break;
     }
     $K12$0$i = $rsize$4$lcssa$i << (($I7$0$i | 0) == 31 ? 0 : 25 - ($I7$0$i >>> 1) | 0);
     $T$0$i = HEAP32[$467 >> 2] | 0;
     while (1) {
      if ((HEAP32[$T$0$i + 4 >> 2] & -8 | 0) == ($rsize$4$lcssa$i | 0)) {
       $T$0$i$lcssa = $T$0$i;
       label = 148;
       break;
      }
      $490 = $T$0$i + 16 + ($K12$0$i >>> 31 << 2) | 0;
      $492 = HEAP32[$490 >> 2] | 0;
      if (!$492) {
       $$lcssa157 = $490;
       $T$0$i$lcssa156 = $T$0$i;
       label = 145;
       break;
      } else {
       $K12$0$i = $K12$0$i << 1;
       $T$0$i = $492;
      }
     }
     if ((label | 0) == 145) if ($$lcssa157 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
      HEAP32[$$lcssa157 >> 2] = $351;
      HEAP32[$351 + 24 >> 2] = $T$0$i$lcssa156;
      HEAP32[$351 + 12 >> 2] = $351;
      HEAP32[$351 + 8 >> 2] = $351;
      break;
     } else if ((label | 0) == 148) {
      $499 = $T$0$i$lcssa + 8 | 0;
      $500 = HEAP32[$499 >> 2] | 0;
      $501 = HEAP32[40711] | 0;
      if ($500 >>> 0 >= $501 >>> 0 & $T$0$i$lcssa >>> 0 >= $501 >>> 0) {
       HEAP32[$500 + 12 >> 2] = $351;
       HEAP32[$499 >> 2] = $351;
       HEAP32[$351 + 8 >> 2] = $500;
       HEAP32[$351 + 12 >> 2] = $T$0$i$lcssa;
       HEAP32[$351 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } while (0);
    $$0 = $v$4$lcssa$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $nb$0 = $248;
  }
 } while (0);
 $509 = HEAP32[40709] | 0;
 if ($509 >>> 0 >= $nb$0 >>> 0) {
  $511 = $509 - $nb$0 | 0;
  $512 = HEAP32[40712] | 0;
  if ($511 >>> 0 > 15) {
   $514 = $512 + $nb$0 | 0;
   HEAP32[40712] = $514;
   HEAP32[40709] = $511;
   HEAP32[$514 + 4 >> 2] = $511 | 1;
   HEAP32[$514 + $511 >> 2] = $511;
   HEAP32[$512 + 4 >> 2] = $nb$0 | 3;
  } else {
   HEAP32[40709] = 0;
   HEAP32[40712] = 0;
   HEAP32[$512 + 4 >> 2] = $509 | 3;
   $523 = $512 + $509 + 4 | 0;
   HEAP32[$523 >> 2] = HEAP32[$523 >> 2] | 1;
  }
  $$0 = $512 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $527 = HEAP32[40710] | 0;
 if ($527 >>> 0 > $nb$0 >>> 0) {
  $529 = $527 - $nb$0 | 0;
  HEAP32[40710] = $529;
  $530 = HEAP32[40713] | 0;
  $531 = $530 + $nb$0 | 0;
  HEAP32[40713] = $531;
  HEAP32[$531 + 4 >> 2] = $529 | 1;
  HEAP32[$530 + 4 >> 2] = $nb$0 | 3;
  $$0 = $530 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP32[40825] | 0)) {
  HEAP32[40827] = 4096;
  HEAP32[40826] = 4096;
  HEAP32[40828] = -1;
  HEAP32[40829] = -1;
  HEAP32[40830] = 0;
  HEAP32[40818] = 0;
  $541 = $magic$i$i & -16 ^ 1431655768;
  HEAP32[$magic$i$i >> 2] = $541;
  HEAP32[40825] = $541;
 }
 $542 = $nb$0 + 48 | 0;
 $543 = HEAP32[40827] | 0;
 $544 = $nb$0 + 47 | 0;
 $545 = $543 + $544 | 0;
 $546 = 0 - $543 | 0;
 $547 = $545 & $546;
 if ($547 >>> 0 <= $nb$0 >>> 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $549 = HEAP32[40817] | 0;
 if ($549 | 0) {
  $551 = HEAP32[40815] | 0;
  $552 = $551 + $547 | 0;
  if ($552 >>> 0 <= $551 >>> 0 | $552 >>> 0 > $549 >>> 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 L254 : do if (!(HEAP32[40818] & 4)) {
  $558 = HEAP32[40713] | 0;
  L256 : do if (!$558) label = 171; else {
   $sp$0$i$i = 163276;
   while (1) {
    $560 = HEAP32[$sp$0$i$i >> 2] | 0;
    if ($560 >>> 0 <= $558 >>> 0) {
     $562 = $sp$0$i$i + 4 | 0;
     if (($560 + (HEAP32[$562 >> 2] | 0) | 0) >>> 0 > $558 >>> 0) {
      $$lcssa153 = $sp$0$i$i;
      $$lcssa155 = $562;
      break;
     }
    }
    $sp$0$i$i = HEAP32[$sp$0$i$i + 8 >> 2] | 0;
    if (!$sp$0$i$i) {
     label = 171;
     break L256;
    }
   }
   $593 = $545 - (HEAP32[40710] | 0) & $546;
   if ($593 >>> 0 < 2147483647) {
    $595 = _sbrk($593 | 0) | 0;
    if (($595 | 0) == ((HEAP32[$$lcssa153 >> 2] | 0) + (HEAP32[$$lcssa155 >> 2] | 0) | 0)) {
     if (($595 | 0) != (-1 | 0)) {
      $tbase$746$i = $595;
      $tsize$745$i = $593;
      label = 191;
      break L254;
     }
    } else {
     $br$2$ph$i = $595;
     $ssize$2$ph$i = $593;
     label = 181;
    }
   }
  } while (0);
  do if ((label | 0) == 171) {
   $569 = _sbrk(0) | 0;
   if (($569 | 0) != (-1 | 0)) {
    $571 = $569;
    $572 = HEAP32[40826] | 0;
    $573 = $572 + -1 | 0;
    if (!($573 & $571)) $ssize$0$i = $547; else $ssize$0$i = $547 - $571 + ($573 + $571 & 0 - $572) | 0;
    $581 = HEAP32[40815] | 0;
    $582 = $581 + $ssize$0$i | 0;
    if ($ssize$0$i >>> 0 > $nb$0 >>> 0 & $ssize$0$i >>> 0 < 2147483647) {
     $585 = HEAP32[40817] | 0;
     if ($585 | 0) if ($582 >>> 0 <= $581 >>> 0 | $582 >>> 0 > $585 >>> 0) break;
     $589 = _sbrk($ssize$0$i | 0) | 0;
     if (($589 | 0) == ($569 | 0)) {
      $tbase$746$i = $569;
      $tsize$745$i = $ssize$0$i;
      label = 191;
      break L254;
     } else {
      $br$2$ph$i = $589;
      $ssize$2$ph$i = $ssize$0$i;
      label = 181;
     }
    }
   }
  } while (0);
  L276 : do if ((label | 0) == 181) {
   $601 = 0 - $ssize$2$ph$i | 0;
   do if ($542 >>> 0 > $ssize$2$ph$i >>> 0 & ($ssize$2$ph$i >>> 0 < 2147483647 & ($br$2$ph$i | 0) != (-1 | 0))) {
    $605 = HEAP32[40827] | 0;
    $609 = $544 - $ssize$2$ph$i + $605 & 0 - $605;
    if ($609 >>> 0 < 2147483647) if ((_sbrk($609 | 0) | 0) == (-1 | 0)) {
     _sbrk($601 | 0) | 0;
     break L276;
    } else {
     $ssize$5$i = $609 + $ssize$2$ph$i | 0;
     break;
    } else $ssize$5$i = $ssize$2$ph$i;
   } else $ssize$5$i = $ssize$2$ph$i; while (0);
   if (($br$2$ph$i | 0) != (-1 | 0)) {
    $tbase$746$i = $br$2$ph$i;
    $tsize$745$i = $ssize$5$i;
    label = 191;
    break L254;
   }
  } while (0);
  HEAP32[40818] = HEAP32[40818] | 4;
  label = 188;
 } else label = 188; while (0);
 if ((label | 0) == 188) if ($547 >>> 0 < 2147483647) {
  $618 = _sbrk($547 | 0) | 0;
  $619 = _sbrk(0) | 0;
  if ($618 >>> 0 < $619 >>> 0 & (($618 | 0) != (-1 | 0) & ($619 | 0) != (-1 | 0))) {
   $625 = $619 - $618 | 0;
   if ($625 >>> 0 > ($nb$0 + 40 | 0) >>> 0) {
    $tbase$746$i = $618;
    $tsize$745$i = $625;
    label = 191;
   }
  }
 }
 if ((label | 0) == 191) {
  $628 = (HEAP32[40815] | 0) + $tsize$745$i | 0;
  HEAP32[40815] = $628;
  if ($628 >>> 0 > (HEAP32[40816] | 0) >>> 0) HEAP32[40816] = $628;
  $631 = HEAP32[40713] | 0;
  do if (!$631) {
   $633 = HEAP32[40711] | 0;
   if (($633 | 0) == 0 | $tbase$746$i >>> 0 < $633 >>> 0) HEAP32[40711] = $tbase$746$i;
   HEAP32[40819] = $tbase$746$i;
   HEAP32[40820] = $tsize$745$i;
   HEAP32[40822] = 0;
   HEAP32[40716] = HEAP32[40825];
   HEAP32[40715] = -1;
   $i$01$i$i = 0;
   do {
    $638 = 162868 + ($i$01$i$i << 1 << 2) | 0;
    HEAP32[$638 + 12 >> 2] = $638;
    HEAP32[$638 + 8 >> 2] = $638;
    $i$01$i$i = $i$01$i$i + 1 | 0;
   } while (($i$01$i$i | 0) != 32);
   $644 = $tbase$746$i + 8 | 0;
   $649 = ($644 & 7 | 0) == 0 ? 0 : 0 - $644 & 7;
   $650 = $tbase$746$i + $649 | 0;
   $651 = $tsize$745$i + -40 - $649 | 0;
   HEAP32[40713] = $650;
   HEAP32[40710] = $651;
   HEAP32[$650 + 4 >> 2] = $651 | 1;
   HEAP32[$650 + $651 + 4 >> 2] = 40;
   HEAP32[40714] = HEAP32[40829];
  } else {
   $sp$068$i = 163276;
   do {
    $657 = HEAP32[$sp$068$i >> 2] | 0;
    $658 = $sp$068$i + 4 | 0;
    $659 = HEAP32[$658 >> 2] | 0;
    if (($tbase$746$i | 0) == ($657 + $659 | 0)) {
     $$lcssa147 = $657;
     $$lcssa149 = $658;
     $$lcssa151 = $659;
     $sp$068$i$lcssa = $sp$068$i;
     label = 201;
     break;
    }
    $sp$068$i = HEAP32[$sp$068$i + 8 >> 2] | 0;
   } while (($sp$068$i | 0) != 0);
   if ((label | 0) == 201) if (!(HEAP32[$sp$068$i$lcssa + 12 >> 2] & 8)) if ($631 >>> 0 < $tbase$746$i >>> 0 & $631 >>> 0 >= $$lcssa147 >>> 0) {
    HEAP32[$$lcssa149 >> 2] = $$lcssa151 + $tsize$745$i;
    $674 = $631 + 8 | 0;
    $679 = ($674 & 7 | 0) == 0 ? 0 : 0 - $674 & 7;
    $680 = $631 + $679 | 0;
    $682 = $tsize$745$i - $679 + (HEAP32[40710] | 0) | 0;
    HEAP32[40713] = $680;
    HEAP32[40710] = $682;
    HEAP32[$680 + 4 >> 2] = $682 | 1;
    HEAP32[$680 + $682 + 4 >> 2] = 40;
    HEAP32[40714] = HEAP32[40829];
    break;
   }
   $688 = HEAP32[40711] | 0;
   if ($tbase$746$i >>> 0 < $688 >>> 0) {
    HEAP32[40711] = $tbase$746$i;
    $753 = $tbase$746$i;
   } else $753 = $688;
   $690 = $tbase$746$i + $tsize$745$i | 0;
   $sp$167$i = 163276;
   while (1) {
    if ((HEAP32[$sp$167$i >> 2] | 0) == ($690 | 0)) {
     $$lcssa144 = $sp$167$i;
     $sp$167$i$lcssa = $sp$167$i;
     label = 209;
     break;
    }
    $sp$167$i = HEAP32[$sp$167$i + 8 >> 2] | 0;
    if (!$sp$167$i) {
     $sp$0$i$i$i = 163276;
     break;
    }
   }
   if ((label | 0) == 209) if (!(HEAP32[$sp$167$i$lcssa + 12 >> 2] & 8)) {
    HEAP32[$$lcssa144 >> 2] = $tbase$746$i;
    $700 = $sp$167$i$lcssa + 4 | 0;
    HEAP32[$700 >> 2] = (HEAP32[$700 >> 2] | 0) + $tsize$745$i;
    $704 = $tbase$746$i + 8 | 0;
    $710 = $tbase$746$i + (($704 & 7 | 0) == 0 ? 0 : 0 - $704 & 7) | 0;
    $712 = $690 + 8 | 0;
    $718 = $690 + (($712 & 7 | 0) == 0 ? 0 : 0 - $712 & 7) | 0;
    $722 = $710 + $nb$0 | 0;
    $723 = $718 - $710 - $nb$0 | 0;
    HEAP32[$710 + 4 >> 2] = $nb$0 | 3;
    do if (($718 | 0) == ($631 | 0)) {
     $728 = (HEAP32[40710] | 0) + $723 | 0;
     HEAP32[40710] = $728;
     HEAP32[40713] = $722;
     HEAP32[$722 + 4 >> 2] = $728 | 1;
    } else {
     if (($718 | 0) == (HEAP32[40712] | 0)) {
      $734 = (HEAP32[40709] | 0) + $723 | 0;
      HEAP32[40709] = $734;
      HEAP32[40712] = $722;
      HEAP32[$722 + 4 >> 2] = $734 | 1;
      HEAP32[$722 + $734 >> 2] = $734;
      break;
     }
     $739 = HEAP32[$718 + 4 >> 2] | 0;
     if (($739 & 3 | 0) == 1) {
      $742 = $739 & -8;
      $743 = $739 >>> 3;
      L328 : do if ($739 >>> 0 < 256) {
       $746 = HEAP32[$718 + 8 >> 2] | 0;
       $748 = HEAP32[$718 + 12 >> 2] | 0;
       $750 = 162868 + ($743 << 1 << 2) | 0;
       do if (($746 | 0) != ($750 | 0)) {
        if ($746 >>> 0 < $753 >>> 0) _abort();
        if ((HEAP32[$746 + 12 >> 2] | 0) == ($718 | 0)) break;
        _abort();
       } while (0);
       if (($748 | 0) == ($746 | 0)) {
        HEAP32[40707] = HEAP32[40707] & ~(1 << $743);
        break;
       }
       do if (($748 | 0) == ($750 | 0)) $$pre$phi10$i$iZ2D = $748 + 8 | 0; else {
        if ($748 >>> 0 < $753 >>> 0) _abort();
        $764 = $748 + 8 | 0;
        if ((HEAP32[$764 >> 2] | 0) == ($718 | 0)) {
         $$pre$phi10$i$iZ2D = $764;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$746 + 12 >> 2] = $748;
       HEAP32[$$pre$phi10$i$iZ2D >> 2] = $746;
      } else {
       $769 = HEAP32[$718 + 24 >> 2] | 0;
       $771 = HEAP32[$718 + 12 >> 2] | 0;
       do if (($771 | 0) == ($718 | 0)) {
        $782 = $718 + 16 | 0;
        $783 = $782 + 4 | 0;
        $784 = HEAP32[$783 >> 2] | 0;
        if (!$784) {
         $786 = HEAP32[$782 >> 2] | 0;
         if (!$786) {
          $R$3$i$i = 0;
          break;
         } else {
          $R$1$i$i = $786;
          $RP$1$i$i = $782;
         }
        } else {
         $R$1$i$i = $784;
         $RP$1$i$i = $783;
        }
        while (1) {
         $788 = $R$1$i$i + 20 | 0;
         $789 = HEAP32[$788 >> 2] | 0;
         if ($789 | 0) {
          $R$1$i$i = $789;
          $RP$1$i$i = $788;
          continue;
         }
         $791 = $R$1$i$i + 16 | 0;
         $792 = HEAP32[$791 >> 2] | 0;
         if (!$792) {
          $R$1$i$i$lcssa = $R$1$i$i;
          $RP$1$i$i$lcssa = $RP$1$i$i;
          break;
         } else {
          $R$1$i$i = $792;
          $RP$1$i$i = $791;
         }
        }
        if ($RP$1$i$i$lcssa >>> 0 < $753 >>> 0) _abort(); else {
         HEAP32[$RP$1$i$i$lcssa >> 2] = 0;
         $R$3$i$i = $R$1$i$i$lcssa;
         break;
        }
       } else {
        $774 = HEAP32[$718 + 8 >> 2] | 0;
        if ($774 >>> 0 < $753 >>> 0) _abort();
        $776 = $774 + 12 | 0;
        if ((HEAP32[$776 >> 2] | 0) != ($718 | 0)) _abort();
        $779 = $771 + 8 | 0;
        if ((HEAP32[$779 >> 2] | 0) == ($718 | 0)) {
         HEAP32[$776 >> 2] = $771;
         HEAP32[$779 >> 2] = $774;
         $R$3$i$i = $771;
         break;
        } else _abort();
       } while (0);
       if (!$769) break;
       $797 = HEAP32[$718 + 28 >> 2] | 0;
       $798 = 163132 + ($797 << 2) | 0;
       do if (($718 | 0) == (HEAP32[$798 >> 2] | 0)) {
        HEAP32[$798 >> 2] = $R$3$i$i;
        if ($R$3$i$i | 0) break;
        HEAP32[40708] = HEAP32[40708] & ~(1 << $797);
        break L328;
       } else {
        if ($769 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
        $807 = $769 + 16 | 0;
        if ((HEAP32[$807 >> 2] | 0) == ($718 | 0)) HEAP32[$807 >> 2] = $R$3$i$i; else HEAP32[$769 + 20 >> 2] = $R$3$i$i;
        if (!$R$3$i$i) break L328;
       } while (0);
       $812 = HEAP32[40711] | 0;
       if ($R$3$i$i >>> 0 < $812 >>> 0) _abort();
       HEAP32[$R$3$i$i + 24 >> 2] = $769;
       $815 = $718 + 16 | 0;
       $816 = HEAP32[$815 >> 2] | 0;
       do if ($816 | 0) if ($816 >>> 0 < $812 >>> 0) _abort(); else {
        HEAP32[$R$3$i$i + 16 >> 2] = $816;
        HEAP32[$816 + 24 >> 2] = $R$3$i$i;
        break;
       } while (0);
       $822 = HEAP32[$815 + 4 >> 2] | 0;
       if (!$822) break;
       if ($822 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
        HEAP32[$R$3$i$i + 20 >> 2] = $822;
        HEAP32[$822 + 24 >> 2] = $R$3$i$i;
        break;
       }
      } while (0);
      $oldfirst$0$i$i = $718 + $742 | 0;
      $qsize$0$i$i = $742 + $723 | 0;
     } else {
      $oldfirst$0$i$i = $718;
      $qsize$0$i$i = $723;
     }
     $830 = $oldfirst$0$i$i + 4 | 0;
     HEAP32[$830 >> 2] = HEAP32[$830 >> 2] & -2;
     HEAP32[$722 + 4 >> 2] = $qsize$0$i$i | 1;
     HEAP32[$722 + $qsize$0$i$i >> 2] = $qsize$0$i$i;
     $836 = $qsize$0$i$i >>> 3;
     if ($qsize$0$i$i >>> 0 < 256) {
      $839 = 162868 + ($836 << 1 << 2) | 0;
      $840 = HEAP32[40707] | 0;
      $841 = 1 << $836;
      do if (!($840 & $841)) {
       HEAP32[40707] = $840 | $841;
       $$pre$phi$i17$iZ2D = $839 + 8 | 0;
       $F4$0$i$i = $839;
      } else {
       $845 = $839 + 8 | 0;
       $846 = HEAP32[$845 >> 2] | 0;
       if ($846 >>> 0 >= (HEAP32[40711] | 0) >>> 0) {
        $$pre$phi$i17$iZ2D = $845;
        $F4$0$i$i = $846;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i17$iZ2D >> 2] = $722;
      HEAP32[$F4$0$i$i + 12 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $F4$0$i$i;
      HEAP32[$722 + 12 >> 2] = $839;
      break;
     }
     $852 = $qsize$0$i$i >>> 8;
     do if (!$852) $I7$0$i$i = 0; else {
      if ($qsize$0$i$i >>> 0 > 16777215) {
       $I7$0$i$i = 31;
       break;
      }
      $857 = ($852 + 1048320 | 0) >>> 16 & 8;
      $858 = $852 << $857;
      $861 = ($858 + 520192 | 0) >>> 16 & 4;
      $863 = $858 << $861;
      $866 = ($863 + 245760 | 0) >>> 16 & 2;
      $871 = 14 - ($861 | $857 | $866) + ($863 << $866 >>> 15) | 0;
      $I7$0$i$i = $qsize$0$i$i >>> ($871 + 7 | 0) & 1 | $871 << 1;
     } while (0);
     $877 = 163132 + ($I7$0$i$i << 2) | 0;
     HEAP32[$722 + 28 >> 2] = $I7$0$i$i;
     $879 = $722 + 16 | 0;
     HEAP32[$879 + 4 >> 2] = 0;
     HEAP32[$879 >> 2] = 0;
     $881 = HEAP32[40708] | 0;
     $882 = 1 << $I7$0$i$i;
     if (!($881 & $882)) {
      HEAP32[40708] = $881 | $882;
      HEAP32[$877 >> 2] = $722;
      HEAP32[$722 + 24 >> 2] = $877;
      HEAP32[$722 + 12 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $722;
      break;
     }
     $K8$0$i$i = $qsize$0$i$i << (($I7$0$i$i | 0) == 31 ? 0 : 25 - ($I7$0$i$i >>> 1) | 0);
     $T$0$i18$i = HEAP32[$877 >> 2] | 0;
     while (1) {
      if ((HEAP32[$T$0$i18$i + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) {
       $T$0$i18$i$lcssa = $T$0$i18$i;
       label = 279;
       break;
      }
      $900 = $T$0$i18$i + 16 + ($K8$0$i$i >>> 31 << 2) | 0;
      $902 = HEAP32[$900 >> 2] | 0;
      if (!$902) {
       $$lcssa = $900;
       $T$0$i18$i$lcssa139 = $T$0$i18$i;
       label = 276;
       break;
      } else {
       $K8$0$i$i = $K8$0$i$i << 1;
       $T$0$i18$i = $902;
      }
     }
     if ((label | 0) == 276) if ($$lcssa >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
      HEAP32[$$lcssa >> 2] = $722;
      HEAP32[$722 + 24 >> 2] = $T$0$i18$i$lcssa139;
      HEAP32[$722 + 12 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $722;
      break;
     } else if ((label | 0) == 279) {
      $909 = $T$0$i18$i$lcssa + 8 | 0;
      $910 = HEAP32[$909 >> 2] | 0;
      $911 = HEAP32[40711] | 0;
      if ($910 >>> 0 >= $911 >>> 0 & $T$0$i18$i$lcssa >>> 0 >= $911 >>> 0) {
       HEAP32[$910 + 12 >> 2] = $722;
       HEAP32[$909 >> 2] = $722;
       HEAP32[$722 + 8 >> 2] = $910;
       HEAP32[$722 + 12 >> 2] = $T$0$i18$i$lcssa;
       HEAP32[$722 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } while (0);
    $$0 = $710 + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $sp$0$i$i$i = 163276;
   while (1) {
    $918 = HEAP32[$sp$0$i$i$i >> 2] | 0;
    if ($918 >>> 0 <= $631 >>> 0) {
     $922 = $918 + (HEAP32[$sp$0$i$i$i + 4 >> 2] | 0) | 0;
     if ($922 >>> 0 > $631 >>> 0) {
      $$lcssa142 = $922;
      break;
     }
    }
    $sp$0$i$i$i = HEAP32[$sp$0$i$i$i + 8 >> 2] | 0;
   }
   $926 = $$lcssa142 + -47 | 0;
   $928 = $926 + 8 | 0;
   $934 = $926 + (($928 & 7 | 0) == 0 ? 0 : 0 - $928 & 7) | 0;
   $935 = $631 + 16 | 0;
   $937 = $934 >>> 0 < $935 >>> 0 ? $631 : $934;
   $938 = $937 + 8 | 0;
   $942 = $tbase$746$i + 8 | 0;
   $947 = ($942 & 7 | 0) == 0 ? 0 : 0 - $942 & 7;
   $948 = $tbase$746$i + $947 | 0;
   $949 = $tsize$745$i + -40 - $947 | 0;
   HEAP32[40713] = $948;
   HEAP32[40710] = $949;
   HEAP32[$948 + 4 >> 2] = $949 | 1;
   HEAP32[$948 + $949 + 4 >> 2] = 40;
   HEAP32[40714] = HEAP32[40829];
   $955 = $937 + 4 | 0;
   HEAP32[$955 >> 2] = 27;
   HEAP32[$938 >> 2] = HEAP32[40819];
   HEAP32[$938 + 4 >> 2] = HEAP32[40820];
   HEAP32[$938 + 8 >> 2] = HEAP32[40821];
   HEAP32[$938 + 12 >> 2] = HEAP32[40822];
   HEAP32[40819] = $tbase$746$i;
   HEAP32[40820] = $tsize$745$i;
   HEAP32[40822] = 0;
   HEAP32[40821] = $938;
   $p$0$i$i = $937 + 24 | 0;
   do {
    $p$0$i$i = $p$0$i$i + 4 | 0;
    HEAP32[$p$0$i$i >> 2] = 7;
   } while (($p$0$i$i + 4 | 0) >>> 0 < $$lcssa142 >>> 0);
   if (($937 | 0) != ($631 | 0)) {
    $962 = $937 - $631 | 0;
    HEAP32[$955 >> 2] = HEAP32[$955 >> 2] & -2;
    HEAP32[$631 + 4 >> 2] = $962 | 1;
    HEAP32[$937 >> 2] = $962;
    $967 = $962 >>> 3;
    if ($962 >>> 0 < 256) {
     $970 = 162868 + ($967 << 1 << 2) | 0;
     $971 = HEAP32[40707] | 0;
     $972 = 1 << $967;
     if (!($971 & $972)) {
      HEAP32[40707] = $971 | $972;
      $$pre$phi$i$iZ2D = $970 + 8 | 0;
      $F$0$i$i = $970;
     } else {
      $976 = $970 + 8 | 0;
      $977 = HEAP32[$976 >> 2] | 0;
      if ($977 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
       $$pre$phi$i$iZ2D = $976;
       $F$0$i$i = $977;
      }
     }
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $631;
     HEAP32[$F$0$i$i + 12 >> 2] = $631;
     HEAP32[$631 + 8 >> 2] = $F$0$i$i;
     HEAP32[$631 + 12 >> 2] = $970;
     break;
    }
    $983 = $962 >>> 8;
    if (!$983) $I1$0$i$i = 0; else if ($962 >>> 0 > 16777215) $I1$0$i$i = 31; else {
     $988 = ($983 + 1048320 | 0) >>> 16 & 8;
     $989 = $983 << $988;
     $992 = ($989 + 520192 | 0) >>> 16 & 4;
     $994 = $989 << $992;
     $997 = ($994 + 245760 | 0) >>> 16 & 2;
     $1002 = 14 - ($992 | $988 | $997) + ($994 << $997 >>> 15) | 0;
     $I1$0$i$i = $962 >>> ($1002 + 7 | 0) & 1 | $1002 << 1;
    }
    $1008 = 163132 + ($I1$0$i$i << 2) | 0;
    HEAP32[$631 + 28 >> 2] = $I1$0$i$i;
    HEAP32[$631 + 20 >> 2] = 0;
    HEAP32[$935 >> 2] = 0;
    $1011 = HEAP32[40708] | 0;
    $1012 = 1 << $I1$0$i$i;
    if (!($1011 & $1012)) {
     HEAP32[40708] = $1011 | $1012;
     HEAP32[$1008 >> 2] = $631;
     HEAP32[$631 + 24 >> 2] = $1008;
     HEAP32[$631 + 12 >> 2] = $631;
     HEAP32[$631 + 8 >> 2] = $631;
     break;
    }
    $K2$0$i$i = $962 << (($I1$0$i$i | 0) == 31 ? 0 : 25 - ($I1$0$i$i >>> 1) | 0);
    $T$0$i$i = HEAP32[$1008 >> 2] | 0;
    while (1) {
     if ((HEAP32[$T$0$i$i + 4 >> 2] & -8 | 0) == ($962 | 0)) {
      $T$0$i$i$lcssa = $T$0$i$i;
      label = 305;
      break;
     }
     $1030 = $T$0$i$i + 16 + ($K2$0$i$i >>> 31 << 2) | 0;
     $1032 = HEAP32[$1030 >> 2] | 0;
     if (!$1032) {
      $$lcssa141 = $1030;
      $T$0$i$i$lcssa140 = $T$0$i$i;
      label = 302;
      break;
     } else {
      $K2$0$i$i = $K2$0$i$i << 1;
      $T$0$i$i = $1032;
     }
    }
    if ((label | 0) == 302) if ($$lcssa141 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
     HEAP32[$$lcssa141 >> 2] = $631;
     HEAP32[$631 + 24 >> 2] = $T$0$i$i$lcssa140;
     HEAP32[$631 + 12 >> 2] = $631;
     HEAP32[$631 + 8 >> 2] = $631;
     break;
    } else if ((label | 0) == 305) {
     $1039 = $T$0$i$i$lcssa + 8 | 0;
     $1040 = HEAP32[$1039 >> 2] | 0;
     $1041 = HEAP32[40711] | 0;
     if ($1040 >>> 0 >= $1041 >>> 0 & $T$0$i$i$lcssa >>> 0 >= $1041 >>> 0) {
      HEAP32[$1040 + 12 >> 2] = $631;
      HEAP32[$1039 >> 2] = $631;
      HEAP32[$631 + 8 >> 2] = $1040;
      HEAP32[$631 + 12 >> 2] = $T$0$i$i$lcssa;
      HEAP32[$631 + 24 >> 2] = 0;
      break;
     } else _abort();
    }
   }
  } while (0);
  $1049 = HEAP32[40710] | 0;
  if ($1049 >>> 0 > $nb$0 >>> 0) {
   $1051 = $1049 - $nb$0 | 0;
   HEAP32[40710] = $1051;
   $1052 = HEAP32[40713] | 0;
   $1053 = $1052 + $nb$0 | 0;
   HEAP32[40713] = $1053;
   HEAP32[$1053 + 4 >> 2] = $1051 | 1;
   HEAP32[$1052 + 4 >> 2] = $nb$0 | 3;
   $$0 = $1052 + 8 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function _printf_core($f, $fmt, $ap, $nl_arg, $nl_type) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 $nl_arg = $nl_arg | 0;
 $nl_type = $nl_type | 0;
 var $$0 = 0, $$0$i = 0, $$0$lcssa$i = 0, $$012$i = 0, $$013$i = 0, $$03$i33 = 0, $$07$i = 0.0, $$1$i = 0.0, $$114$i = 0, $$2$i = 0.0, $$20$i = 0.0, $$210$i = 0, $$23$i = 0, $$25$i = 0, $$3$i = 0.0, $$311$i = 0, $$33$i = 0, $$4$i = 0.0, $$412$lcssa$i = 0, $$41278$i = 0, $$43 = 0, $$5$lcssa$i = 0, $$589$i = 0, $$a$3$i = 0, $$a$3192$i = 0, $$fl$4 = 0, $$lcssa = 0, $$lcssa162$i = 0, $$lcssa295 = 0, $$lcssa300 = 0, $$lcssa301 = 0, $$lcssa302 = 0, $$lcssa303 = 0, $$lcssa304 = 0, $$lcssa306 = 0, $$lcssa316 = 0, $$lcssa319 = 0.0, $$lcssa321 = 0, $$p$$i = 0, $$p$5 = 0, $$p$i = 0, $$pn$i = 0, $$pr$i = 0, $$pr50$i = 0, $$pre$phi190$iZ2D = 0, $$pre171 = 0, $$pre188$i = 0, $$z$4$i = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $134 = 0, $135 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $150 = 0, $155 = 0, $158 = 0, $16 = 0, $163 = 0, $164 = 0, $169 = 0, $176 = 0, $177 = 0, $188 = 0, $2 = 0, $200 = 0, $207 = 0, $209 = 0, $212 = 0, $213 = 0, $218 = 0, $22 = 0, $224 = 0, $225 = 0, $231 = 0, $24 = 0, $244 = 0, $246 = 0, $249 = 0, $25 = 0, $254 = 0, $257 = 0, $258 = 0, $267 = 0, $270 = 0, $272 = 0, $275 = 0, $277 = 0, $278 = 0, $279 = 0, $285 = 0, $287 = 0, $288 = 0, $29 = 0, $292 = 0, $3 = 0, $30 = 0, $300 = 0, $306 = 0, $318 = 0, $321 = 0, $322 = 0, $334 = 0, $336 = 0, $341 = 0, $345 = 0, $348 = 0, $35 = 0, $358 = 0.0, $365 = 0, $369 = 0, $376 = 0, $378 = 0, $380 = 0, $381 = 0, $385 = 0, $391 = 0.0, $392 = 0, $395 = 0, $397 = 0, $4 = 0, $40 = 0, $400 = 0, $402 = 0, $406 = 0.0, $41 = 0, $416 = 0, $419 = 0, $422 = 0, $431 = 0, $433 = 0, $434 = 0, $440 = 0, $45 = 0, $452 = 0, $457 = 0, $462 = 0, $466 = 0, $47 = 0, $476 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $488 = 0, $489 = 0, $492 = 0, $494 = 0, $495 = 0, $496 = 0, $498 = 0, $5 = 0, $502 = 0, $504 = 0, $508 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $518 = 0, $52 = 0, $524 = 0, $525 = 0, $526 = 0, $530 = 0, $538 = 0, $552 = 0, $553 = 0, $556 = 0, $561 = 0, $562 = 0, $564 = 0, $57 = 0, $572 = 0, $575 = 0, $578 = 0, $579 = 0, $580 = 0, $583 = 0, $587 = 0, $595 = 0, $598 = 0, $6 = 0, $60 = 0, $600 = 0, $602 = 0, $604 = 0, $609 = 0, $61 = 0, $610 = 0, $613 = 0, $615 = 0, $617 = 0, $619 = 0, $62 = 0, $630 = 0, $633 = 0, $638 = 0, $647 = 0, $648 = 0, $652 = 0, $655 = 0, $657 = 0, $659 = 0, $663 = 0, $666 = 0, $67 = 0, $670 = 0, $68 = 0, $680 = 0, $685 = 0, $692 = 0, $697 = 0, $7 = 0, $705 = 0, $715 = 0, $719 = 0, $727 = 0, $734 = 0, $736 = 0, $740 = 0, $742 = 0, $751 = 0, $757 = 0, $772 = 0, $774 = 0, $787 = 0, $798 = 0, $8 = 0, $9 = 0, $92 = 0, $93 = 0, $99 = 0, $a$0 = 0, $a$1 = 0, $a$1$lcssa$i = 0, $a$1149$i = 0, $a$2 = 0, $a$2$ph$i = 0, $a$3$lcssa$i = 0, $a$3136$i = 0, $a$5$lcssa$i = 0, $a$5111$i = 0, $a$6$i = 0, $a$8$i = 0, $a$9$ph$i = 0, $arg = 0, $argpos$0 = 0, $big$i = 0, $buf = 0, $buf$i = 0, $carry$0142$i = 0, $carry3$0130$i = 0, $cnt$0 = 0, $cnt$1 = 0, $cnt$1$lcssa = 0, $d$0141$i = 0, $d$0143$i = 0, $d$1129$i = 0, $d$2$lcssa$i = 0, $d$2110$i = 0, $d$4$i = 0, $d$584$i = 0, $d$677$i = 0, $d$788$i = 0, $e$0125$i = 0, $e$1$i = 0, $e$2106$i = 0, $e$4$i = 0, $e$5$ph$i = 0, $e2$i = 0, $ebuf0$i = 0, $estr$0$i = 0, $estr$1$lcssa$i = 0, $estr$195$i = 0, $estr$2$i = 0, $fl$0100 = 0, $fl$053 = 0, $fl$1 = 0, $fl$1$ = 0, $fl$3 = 0, $fl$4 = 0, $fl$6 = 0, $i$0$lcssa = 0, $i$0$lcssa178 = 0, $i$0105 = 0, $i$0124$i = 0, $i$03$i = 0, $i$03$i25 = 0, $i$1$lcssa$i = 0, $i$1116 = 0, $i$1118$i = 0, $i$2105$i = 0, $i$291 = 0, $i$291$lcssa = 0, $i$3101$i = 0, $i$389 = 0, $isdigittmp = 0, $isdigittmp1$i = 0, $isdigittmp1$i22 = 0, $isdigittmp11 = 0, $isdigittmp4$i = 0, $isdigittmp4$i24 = 0, $isdigittmp9 = 0, $j$0117$i = 0, $j$0119$i = 0, $j$1102$i = 0, $j$2$i = 0, $l$0 = 0, $l$0$i = 0, $l$1104 = 0, $l$2 = 0, $l10n$0 = 0, $l10n$0$lcssa = 0, $l10n$1 = 0, $l10n$2 = 0, $l10n$3 = 0, $mb = 0, $notrhs$i = 0, $p$0 = 0, $p$1 = 0, $p$2 = 0, $p$4176 = 0, $p$5 = 0, $pl$0 = 0, $pl$0$i = 0, $pl$1 = 0, $pl$1$i = 0, $pl$2 = 0, $prefix$0 = 0, $prefix$0$$i = 0, $prefix$0$i = 0, $prefix$1 = 0, $prefix$2 = 0, $r$0$a$9$i = 0, $re$171$i = 0, $round$070$i = 0.0, $round6$1$i = 0.0, $s$0 = 0, $s$0$i = 0, $s$1 = 0, $s$1$i = 0, $s$1$i$lcssa = 0, $s$2$lcssa = 0, $s$292 = 0, $s$4 = 0, $s$6 = 0, $s$7 = 0, $s$7$lcssa298 = 0, $s7$081$i = 0, $s7$1$i = 0, $s8$0$lcssa$i = 0, $s8$072$i = 0, $s9$0$i = 0, $s9$185$i = 0, $s9$2$i = 0, $small$0$i = 0.0, $small$1$i = 0.0, $st$0 = 0, $st$0$lcssa299 = 0, $storemerge = 0, $storemerge13 = 0, $storemerge851 = 0, $storemerge899 = 0, $t$0 = 0, $t$1 = 0, $w$0 = 0, $w$1 = 0, $w$2 = 0, $wc = 0, $ws$0106 = 0, $ws$1117 = 0, $z$0$i = 0, $z$0$lcssa = 0, $z$093 = 0, $z$1$lcssa$i = 0, $z$1148$i = 0, $z$2 = 0, $z$2$i = 0, $z$2$i$lcssa = 0, $z$3$lcssa$i = 0, $z$3135$i = 0, $z$4$i = 0, $z$7$$i = 0, $z$7$i = 0, $z$7$i$lcssa = 0, $z$7$ph$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 $big$i = sp + 24 | 0;
 $e2$i = sp + 16 | 0;
 $buf$i = sp + 588 | 0;
 $ebuf0$i = sp + 576 | 0;
 $arg = sp;
 $buf = sp + 536 | 0;
 $wc = sp + 8 | 0;
 $mb = sp + 528 | 0;
 $0 = ($f | 0) != 0;
 $1 = $buf + 40 | 0;
 $2 = $1;
 $3 = $buf + 39 | 0;
 $4 = $wc + 4 | 0;
 $5 = $buf$i;
 $6 = 0 - $5 | 0;
 $7 = $ebuf0$i + 12 | 0;
 $8 = $ebuf0$i + 11 | 0;
 $9 = $7;
 $10 = $9 - $5 | 0;
 $11 = -2 - $5 | 0;
 $12 = $9 + 2 | 0;
 $13 = $big$i + 288 | 0;
 $14 = $buf$i + 9 | 0;
 $15 = $14;
 $16 = $buf$i + 8 | 0;
 $cnt$0 = 0;
 $l$0 = 0;
 $l10n$0 = 0;
 $s$0 = $fmt;
 L1 : while (1) {
  do if (($cnt$0 | 0) > -1) if (($l$0 | 0) > (2147483647 - $cnt$0 | 0)) {
   HEAP32[(___errno_location() | 0) >> 2] = 75;
   $cnt$1 = -1;
   break;
  } else {
   $cnt$1 = $l$0 + $cnt$0 | 0;
   break;
  } else $cnt$1 = $cnt$0; while (0);
  $22 = HEAP8[$s$0 >> 0] | 0;
  if (!($22 << 24 >> 24)) {
   $cnt$1$lcssa = $cnt$1;
   $l10n$0$lcssa = $l10n$0;
   label = 244;
   break;
  } else {
   $24 = $22;
   $s$1 = $s$0;
  }
  L9 : while (1) {
   switch ($24 << 24 >> 24) {
   case 37:
    {
     $s$292 = $s$1;
     $z$093 = $s$1;
     label = 9;
     break L9;
     break;
    }
   case 0:
    {
     $s$2$lcssa = $s$1;
     $z$0$lcssa = $s$1;
     break L9;
     break;
    }
   default:
    {}
   }
   $25 = $s$1 + 1 | 0;
   $24 = HEAP8[$25 >> 0] | 0;
   $s$1 = $25;
  }
  L12 : do if ((label | 0) == 9) while (1) {
   label = 0;
   if ((HEAP8[$s$292 + 1 >> 0] | 0) != 37) {
    $s$2$lcssa = $s$292;
    $z$0$lcssa = $z$093;
    break L12;
   }
   $29 = $z$093 + 1 | 0;
   $30 = $s$292 + 2 | 0;
   if ((HEAP8[$30 >> 0] | 0) == 37) {
    $s$292 = $30;
    $z$093 = $29;
    label = 9;
   } else {
    $s$2$lcssa = $30;
    $z$0$lcssa = $29;
    break;
   }
  } while (0);
  $35 = $z$0$lcssa - $s$0 | 0;
  if ($0) if (!(HEAP32[$f >> 2] & 32)) ___fwritex($s$0, $35, $f) | 0;
  if (($z$0$lcssa | 0) != ($s$0 | 0)) {
   $cnt$0 = $cnt$1;
   $l$0 = $35;
   $s$0 = $s$2$lcssa;
   continue;
  }
  $40 = $s$2$lcssa + 1 | 0;
  $41 = HEAP8[$40 >> 0] | 0;
  $isdigittmp = ($41 << 24 >> 24) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $45 = (HEAP8[$s$2$lcssa + 2 >> 0] | 0) == 36;
   $$43 = $45 ? $s$2$lcssa + 3 | 0 : $40;
   $48 = HEAP8[$$43 >> 0] | 0;
   $argpos$0 = $45 ? $isdigittmp : -1;
   $l10n$1 = $45 ? 1 : $l10n$0;
   $storemerge = $$43;
  } else {
   $48 = $41;
   $argpos$0 = -1;
   $l10n$1 = $l10n$0;
   $storemerge = $40;
  }
  $47 = $48 << 24 >> 24;
  L25 : do if (($47 & -32 | 0) == 32) {
   $52 = $47;
   $57 = $48;
   $fl$0100 = 0;
   $storemerge899 = $storemerge;
   while (1) {
    if (!(1 << $52 + -32 & 75913)) {
     $67 = $57;
     $fl$053 = $fl$0100;
     $storemerge851 = $storemerge899;
     break L25;
    }
    $60 = 1 << ($57 << 24 >> 24) + -32 | $fl$0100;
    $61 = $storemerge899 + 1 | 0;
    $62 = HEAP8[$61 >> 0] | 0;
    $52 = $62 << 24 >> 24;
    if (($52 & -32 | 0) != 32) {
     $67 = $62;
     $fl$053 = $60;
     $storemerge851 = $61;
     break;
    } else {
     $57 = $62;
     $fl$0100 = $60;
     $storemerge899 = $61;
    }
   }
  } else {
   $67 = $48;
   $fl$053 = 0;
   $storemerge851 = $storemerge;
  } while (0);
  do if ($67 << 24 >> 24 == 42) {
   $68 = $storemerge851 + 1 | 0;
   $isdigittmp11 = (HEAP8[$68 >> 0] | 0) + -48 | 0;
   if ($isdigittmp11 >>> 0 < 10) if ((HEAP8[$storemerge851 + 2 >> 0] | 0) == 36) {
    HEAP32[$nl_type + ($isdigittmp11 << 2) >> 2] = 10;
    $l10n$2 = 1;
    $storemerge13 = $storemerge851 + 3 | 0;
    $w$0 = HEAP32[$nl_arg + ((HEAP8[$68 >> 0] | 0) + -48 << 3) >> 2] | 0;
   } else label = 24; else label = 24;
   if ((label | 0) == 24) {
    label = 0;
    if ($l10n$1 | 0) {
     $$0 = -1;
     break L1;
    }
    if (!$0) {
     $fl$1 = $fl$053;
     $l10n$3 = 0;
     $s$4 = $68;
     $w$1 = 0;
     break;
    }
    $92 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $93 = HEAP32[$92 >> 2] | 0;
    HEAP32[$ap >> 2] = $92 + 4;
    $l10n$2 = 0;
    $storemerge13 = $68;
    $w$0 = $93;
   }
   if (($w$0 | 0) < 0) {
    $fl$1 = $fl$053 | 8192;
    $l10n$3 = $l10n$2;
    $s$4 = $storemerge13;
    $w$1 = 0 - $w$0 | 0;
   } else {
    $fl$1 = $fl$053;
    $l10n$3 = $l10n$2;
    $s$4 = $storemerge13;
    $w$1 = $w$0;
   }
  } else {
   $isdigittmp1$i = ($67 << 24 >> 24) + -48 | 0;
   if ($isdigittmp1$i >>> 0 < 10) {
    $101 = $storemerge851;
    $i$03$i = 0;
    $isdigittmp4$i = $isdigittmp1$i;
    while (1) {
     $99 = ($i$03$i * 10 | 0) + $isdigittmp4$i | 0;
     $100 = $101 + 1 | 0;
     $isdigittmp4$i = (HEAP8[$100 >> 0] | 0) + -48 | 0;
     if ($isdigittmp4$i >>> 0 >= 10) {
      $$lcssa = $99;
      $$lcssa295 = $100;
      break;
     } else {
      $101 = $100;
      $i$03$i = $99;
     }
    }
    if (($$lcssa | 0) < 0) {
     $$0 = -1;
     break L1;
    } else {
     $fl$1 = $fl$053;
     $l10n$3 = $l10n$1;
     $s$4 = $$lcssa295;
     $w$1 = $$lcssa;
    }
   } else {
    $fl$1 = $fl$053;
    $l10n$3 = $l10n$1;
    $s$4 = $storemerge851;
    $w$1 = 0;
   }
  } while (0);
  L46 : do if ((HEAP8[$s$4 >> 0] | 0) == 46) {
   $107 = $s$4 + 1 | 0;
   $108 = HEAP8[$107 >> 0] | 0;
   if ($108 << 24 >> 24 != 42) {
    $isdigittmp1$i22 = ($108 << 24 >> 24) + -48 | 0;
    if ($isdigittmp1$i22 >>> 0 < 10) {
     $140 = $107;
     $i$03$i25 = 0;
     $isdigittmp4$i24 = $isdigittmp1$i22;
    } else {
     $p$0 = 0;
     $s$6 = $107;
     break;
    }
    while (1) {
     $138 = ($i$03$i25 * 10 | 0) + $isdigittmp4$i24 | 0;
     $139 = $140 + 1 | 0;
     $isdigittmp4$i24 = (HEAP8[$139 >> 0] | 0) + -48 | 0;
     if ($isdigittmp4$i24 >>> 0 >= 10) {
      $p$0 = $138;
      $s$6 = $139;
      break L46;
     } else {
      $140 = $139;
      $i$03$i25 = $138;
     }
    }
   }
   $110 = $s$4 + 2 | 0;
   $isdigittmp9 = (HEAP8[$110 >> 0] | 0) + -48 | 0;
   if ($isdigittmp9 >>> 0 < 10) if ((HEAP8[$s$4 + 3 >> 0] | 0) == 36) {
    HEAP32[$nl_type + ($isdigittmp9 << 2) >> 2] = 10;
    $p$0 = HEAP32[$nl_arg + ((HEAP8[$110 >> 0] | 0) + -48 << 3) >> 2] | 0;
    $s$6 = $s$4 + 4 | 0;
    break;
   }
   if ($l10n$3 | 0) {
    $$0 = -1;
    break L1;
   }
   if ($0) {
    $134 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $135 = HEAP32[$134 >> 2] | 0;
    HEAP32[$ap >> 2] = $134 + 4;
    $p$0 = $135;
    $s$6 = $110;
   } else {
    $p$0 = 0;
    $s$6 = $110;
   }
  } else {
   $p$0 = -1;
   $s$6 = $s$4;
  } while (0);
  $s$7 = $s$6;
  $st$0 = 0;
  while (1) {
   $145 = (HEAP8[$s$7 >> 0] | 0) + -65 | 0;
   if ($145 >>> 0 > 57) {
    $$0 = -1;
    break L1;
   }
   $147 = $s$7 + 1 | 0;
   $149 = HEAP8[143858 + ($st$0 * 58 | 0) + $145 >> 0] | 0;
   $150 = $149 & 255;
   if (($150 + -1 | 0) >>> 0 < 8) {
    $s$7 = $147;
    $st$0 = $150;
   } else {
    $$lcssa300 = $147;
    $$lcssa301 = $149;
    $$lcssa302 = $150;
    $s$7$lcssa298 = $s$7;
    $st$0$lcssa299 = $st$0;
    break;
   }
  }
  if (!($$lcssa301 << 24 >> 24)) {
   $$0 = -1;
   break;
  }
  $155 = ($argpos$0 | 0) > -1;
  do if ($$lcssa301 << 24 >> 24 == 19) if ($155) {
   $$0 = -1;
   break L1;
  } else label = 52; else {
   if ($155) {
    HEAP32[$nl_type + ($argpos$0 << 2) >> 2] = $$lcssa302;
    $158 = $nl_arg + ($argpos$0 << 3) | 0;
    $163 = HEAP32[$158 + 4 >> 2] | 0;
    $164 = $arg;
    HEAP32[$164 >> 2] = HEAP32[$158 >> 2];
    HEAP32[$164 + 4 >> 2] = $163;
    label = 52;
    break;
   }
   if (!$0) {
    $$0 = 0;
    break L1;
   }
   _pop_arg($arg, $$lcssa302, $ap);
  } while (0);
  if ((label | 0) == 52) {
   label = 0;
   if (!$0) {
    $cnt$0 = $cnt$1;
    $l$0 = $35;
    $l10n$0 = $l10n$3;
    $s$0 = $$lcssa300;
    continue;
   }
  }
  $169 = HEAP8[$s$7$lcssa298 >> 0] | 0;
  $t$0 = ($st$0$lcssa299 | 0) != 0 & ($169 & 15 | 0) == 3 ? $169 & -33 : $169;
  $176 = $fl$1 & -65537;
  $fl$1$ = ($fl$1 & 8192 | 0) == 0 ? $fl$1 : $176;
  L75 : do switch ($t$0 | 0) {
  case 110:
   {
    switch ($st$0$lcssa299 | 0) {
    case 0:
     {
      HEAP32[HEAP32[$arg >> 2] >> 2] = $cnt$1;
      $cnt$0 = $cnt$1;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      $s$0 = $$lcssa300;
      continue L1;
      break;
     }
    case 1:
     {
      HEAP32[HEAP32[$arg >> 2] >> 2] = $cnt$1;
      $cnt$0 = $cnt$1;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      $s$0 = $$lcssa300;
      continue L1;
      break;
     }
    case 2:
     {
      $188 = HEAP32[$arg >> 2] | 0;
      HEAP32[$188 >> 2] = $cnt$1;
      HEAP32[$188 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
      $cnt$0 = $cnt$1;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      $s$0 = $$lcssa300;
      continue L1;
      break;
     }
    case 3:
     {
      HEAP16[HEAP32[$arg >> 2] >> 1] = $cnt$1;
      $cnt$0 = $cnt$1;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      $s$0 = $$lcssa300;
      continue L1;
      break;
     }
    case 4:
     {
      HEAP8[HEAP32[$arg >> 2] >> 0] = $cnt$1;
      $cnt$0 = $cnt$1;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      $s$0 = $$lcssa300;
      continue L1;
      break;
     }
    case 6:
     {
      HEAP32[HEAP32[$arg >> 2] >> 2] = $cnt$1;
      $cnt$0 = $cnt$1;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      $s$0 = $$lcssa300;
      continue L1;
      break;
     }
    case 7:
     {
      $200 = HEAP32[$arg >> 2] | 0;
      HEAP32[$200 >> 2] = $cnt$1;
      HEAP32[$200 + 4 >> 2] = (($cnt$1 | 0) < 0) << 31 >> 31;
      $cnt$0 = $cnt$1;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      $s$0 = $$lcssa300;
      continue L1;
      break;
     }
    default:
     {
      $cnt$0 = $cnt$1;
      $l$0 = $35;
      $l10n$0 = $l10n$3;
      $s$0 = $$lcssa300;
      continue L1;
     }
    }
    break;
   }
  case 112:
   {
    $fl$3 = $fl$1$ | 8;
    $p$1 = $p$0 >>> 0 > 8 ? $p$0 : 8;
    $t$1 = 120;
    label = 64;
    break;
   }
  case 88:
  case 120:
   {
    $fl$3 = $fl$1$;
    $p$1 = $p$0;
    $t$1 = $t$0;
    label = 64;
    break;
   }
  case 111:
   {
    $244 = $arg;
    $246 = HEAP32[$244 >> 2] | 0;
    $249 = HEAP32[$244 + 4 >> 2] | 0;
    if (($246 | 0) == 0 & ($249 | 0) == 0) $$0$lcssa$i = $1; else {
     $$03$i33 = $1;
     $254 = $246;
     $258 = $249;
     while (1) {
      $257 = $$03$i33 + -1 | 0;
      HEAP8[$257 >> 0] = $254 & 7 | 48;
      $254 = _bitshift64Lshr($254 | 0, $258 | 0, 3) | 0;
      $258 = tempRet0;
      if (($254 | 0) == 0 & ($258 | 0) == 0) {
       $$0$lcssa$i = $257;
       break;
      } else $$03$i33 = $257;
     }
    }
    if (!($fl$1$ & 8)) {
     $a$0 = $$0$lcssa$i;
     $fl$4 = $fl$1$;
     $p$2 = $p$0;
     $pl$1 = 0;
     $prefix$1 = 144338;
     label = 77;
    } else {
     $267 = $2 - $$0$lcssa$i | 0;
     $a$0 = $$0$lcssa$i;
     $fl$4 = $fl$1$;
     $p$2 = ($p$0 | 0) > ($267 | 0) ? $p$0 : $267 + 1 | 0;
     $pl$1 = 0;
     $prefix$1 = 144338;
     label = 77;
    }
    break;
   }
  case 105:
  case 100:
   {
    $270 = $arg;
    $272 = HEAP32[$270 >> 2] | 0;
    $275 = HEAP32[$270 + 4 >> 2] | 0;
    if (($275 | 0) < 0) {
     $277 = _i64Subtract(0, 0, $272 | 0, $275 | 0) | 0;
     $278 = tempRet0;
     $279 = $arg;
     HEAP32[$279 >> 2] = $277;
     HEAP32[$279 + 4 >> 2] = $278;
     $287 = $277;
     $288 = $278;
     $pl$0 = 1;
     $prefix$0 = 144338;
     label = 76;
     break L75;
    }
    if (!($fl$1$ & 2048)) {
     $285 = $fl$1$ & 1;
     $287 = $272;
     $288 = $275;
     $pl$0 = $285;
     $prefix$0 = ($285 | 0) == 0 ? 144338 : 144340;
     label = 76;
    } else {
     $287 = $272;
     $288 = $275;
     $pl$0 = 1;
     $prefix$0 = 144339;
     label = 76;
    }
    break;
   }
  case 117:
   {
    $177 = $arg;
    $287 = HEAP32[$177 >> 2] | 0;
    $288 = HEAP32[$177 + 4 >> 2] | 0;
    $pl$0 = 0;
    $prefix$0 = 144338;
    label = 76;
    break;
   }
  case 99:
   {
    HEAP8[$3 >> 0] = HEAP32[$arg >> 2];
    $a$2 = $3;
    $fl$6 = $176;
    $p$5 = 1;
    $pl$2 = 0;
    $prefix$2 = 144338;
    $z$2 = $1;
    break;
   }
  case 109:
   {
    $a$1 = _strerror(HEAP32[(___errno_location() | 0) >> 2] | 0) | 0;
    label = 82;
    break;
   }
  case 115:
   {
    $318 = HEAP32[$arg >> 2] | 0;
    $a$1 = $318 | 0 ? $318 : 146240;
    label = 82;
    break;
   }
  case 67:
   {
    HEAP32[$wc >> 2] = HEAP32[$arg >> 2];
    HEAP32[$4 >> 2] = 0;
    HEAP32[$arg >> 2] = $wc;
    $798 = $wc;
    $p$4176 = -1;
    label = 86;
    break;
   }
  case 83:
   {
    $$pre171 = HEAP32[$arg >> 2] | 0;
    if (!$p$0) {
     _pad($f, 32, $w$1, 0, $fl$1$);
     $i$0$lcssa178 = 0;
     label = 97;
    } else {
     $798 = $$pre171;
     $p$4176 = $p$0;
     label = 86;
    }
    break;
   }
  case 65:
  case 71:
  case 70:
  case 69:
  case 97:
  case 103:
  case 102:
  case 101:
   {
    $358 = +HEAPF64[$arg >> 3];
    HEAP32[$e2$i >> 2] = 0;
    HEAPF64[tempDoublePtr >> 3] = $358;
    if ((HEAP32[tempDoublePtr + 4 >> 2] | 0) < 0) {
     $$07$i = -$358;
     $pl$0$i = 1;
     $prefix$0$i = 146247;
    } else if (!($fl$1$ & 2048)) {
     $365 = $fl$1$ & 1;
     $$07$i = $358;
     $pl$0$i = $365;
     $prefix$0$i = ($365 | 0) == 0 ? 146248 : 146253;
    } else {
     $$07$i = $358;
     $pl$0$i = 1;
     $prefix$0$i = 146250;
    }
    HEAPF64[tempDoublePtr >> 3] = $$07$i;
    $369 = HEAP32[tempDoublePtr + 4 >> 2] & 2146435072;
    do if ($369 >>> 0 < 2146435072 | ($369 | 0) == 2146435072 & 0 < 0) {
     $391 = +_frexpl($$07$i, $e2$i) * 2.0;
     $392 = $391 != 0.0;
     if ($392) HEAP32[$e2$i >> 2] = (HEAP32[$e2$i >> 2] | 0) + -1;
     $395 = $t$0 | 32;
     if (($395 | 0) == 97) {
      $397 = $t$0 & 32;
      $prefix$0$$i = ($397 | 0) == 0 ? $prefix$0$i : $prefix$0$i + 9 | 0;
      $400 = $pl$0$i | 2;
      $402 = 12 - $p$0 | 0;
      do if ($p$0 >>> 0 > 11 | ($402 | 0) == 0) $$1$i = $391; else {
       $re$171$i = $402;
       $round$070$i = 8.0;
       while (1) {
        $re$171$i = $re$171$i + -1 | 0;
        $406 = $round$070$i * 16.0;
        if (!$re$171$i) {
         $$lcssa319 = $406;
         break;
        } else $round$070$i = $406;
       }
       if ((HEAP8[$prefix$0$$i >> 0] | 0) == 45) {
        $$1$i = -($$lcssa319 + (-$391 - $$lcssa319));
        break;
       } else {
        $$1$i = $391 + $$lcssa319 - $$lcssa319;
        break;
       }
      } while (0);
      $416 = HEAP32[$e2$i >> 2] | 0;
      $419 = ($416 | 0) < 0 ? 0 - $416 | 0 : $416;
      $422 = _fmt_u($419, (($419 | 0) < 0) << 31 >> 31, $7) | 0;
      if (($422 | 0) == ($7 | 0)) {
       HEAP8[$8 >> 0] = 48;
       $estr$0$i = $8;
      } else $estr$0$i = $422;
      HEAP8[$estr$0$i + -1 >> 0] = ($416 >> 31 & 2) + 43;
      $431 = $estr$0$i + -2 | 0;
      HEAP8[$431 >> 0] = $t$0 + 15;
      $notrhs$i = ($p$0 | 0) < 1;
      $433 = ($fl$1$ & 8 | 0) == 0;
      $$2$i = $$1$i;
      $s$0$i = $buf$i;
      while (1) {
       $434 = ~~$$2$i;
       $440 = $s$0$i + 1 | 0;
       HEAP8[$s$0$i >> 0] = HEAPU8[144322 + $434 >> 0] | $397;
       $$2$i = ($$2$i - +($434 | 0)) * 16.0;
       do if (($440 - $5 | 0) == 1) {
        if ($433 & ($notrhs$i & $$2$i == 0.0)) {
         $s$1$i = $440;
         break;
        }
        HEAP8[$440 >> 0] = 46;
        $s$1$i = $s$0$i + 2 | 0;
       } else $s$1$i = $440; while (0);
       if (!($$2$i != 0.0)) {
        $s$1$i$lcssa = $s$1$i;
        break;
       } else $s$0$i = $s$1$i;
      }
      $$pre188$i = $s$1$i$lcssa;
      $452 = $431;
      $l$0$i = ($p$0 | 0) != 0 & ($11 + $$pre188$i | 0) < ($p$0 | 0) ? $12 + $p$0 - $452 | 0 : $10 - $452 + $$pre188$i | 0;
      $457 = $l$0$i + $400 | 0;
      _pad($f, 32, $w$1, $457, $fl$1$);
      if (!(HEAP32[$f >> 2] & 32)) ___fwritex($prefix$0$$i, $400, $f) | 0;
      _pad($f, 48, $w$1, $457, $fl$1$ ^ 65536);
      $462 = $$pre188$i - $5 | 0;
      if (!(HEAP32[$f >> 2] & 32)) ___fwritex($buf$i, $462, $f) | 0;
      $466 = $9 - $452 | 0;
      _pad($f, 48, $l$0$i - ($462 + $466) | 0, 0, 0);
      if (!(HEAP32[$f >> 2] & 32)) ___fwritex($431, $466, $f) | 0;
      _pad($f, 32, $w$1, $457, $fl$1$ ^ 8192);
      $$0$i = ($457 | 0) < ($w$1 | 0) ? $w$1 : $457;
      break;
     }
     $$p$i = ($p$0 | 0) < 0 ? 6 : $p$0;
     if ($392) {
      $476 = (HEAP32[$e2$i >> 2] | 0) + -28 | 0;
      HEAP32[$e2$i >> 2] = $476;
      $$3$i = $391 * 268435456.0;
      $478 = $476;
     } else {
      $$3$i = $391;
      $478 = HEAP32[$e2$i >> 2] | 0;
     }
     $$33$i = ($478 | 0) < 0 ? $big$i : $13;
     $479 = $$33$i;
     $$4$i = $$3$i;
     $z$0$i = $$33$i;
     while (1) {
      $480 = ~~$$4$i >>> 0;
      HEAP32[$z$0$i >> 2] = $480;
      $481 = $z$0$i + 4 | 0;
      $$4$i = ($$4$i - +($480 >>> 0)) * 1.0e9;
      if (!($$4$i != 0.0)) {
       $$lcssa303 = $481;
       break;
      } else $z$0$i = $481;
     }
     $$pr$i = HEAP32[$e2$i >> 2] | 0;
     if (($$pr$i | 0) > 0) {
      $488 = $$pr$i;
      $a$1149$i = $$33$i;
      $z$1148$i = $$lcssa303;
      while (1) {
       $489 = ($488 | 0) > 29 ? 29 : $488;
       $d$0141$i = $z$1148$i + -4 | 0;
       do if ($d$0141$i >>> 0 < $a$1149$i >>> 0) $a$2$ph$i = $a$1149$i; else {
        $carry$0142$i = 0;
        $d$0143$i = $d$0141$i;
        while (1) {
         $492 = _bitshift64Shl(HEAP32[$d$0143$i >> 2] | 0, 0, $489 | 0) | 0;
         $494 = _i64Add($492 | 0, tempRet0 | 0, $carry$0142$i | 0, 0) | 0;
         $495 = tempRet0;
         $496 = ___uremdi3($494 | 0, $495 | 0, 1e9, 0) | 0;
         HEAP32[$d$0143$i >> 2] = $496;
         $498 = ___udivdi3($494 | 0, $495 | 0, 1e9, 0) | 0;
         $d$0143$i = $d$0143$i + -4 | 0;
         if ($d$0143$i >>> 0 < $a$1149$i >>> 0) {
          $$lcssa304 = $498;
          break;
         } else $carry$0142$i = $498;
        }
        if (!$$lcssa304) {
         $a$2$ph$i = $a$1149$i;
         break;
        }
        $502 = $a$1149$i + -4 | 0;
        HEAP32[$502 >> 2] = $$lcssa304;
        $a$2$ph$i = $502;
       } while (0);
       $z$2$i = $z$1148$i;
       while (1) {
        if ($z$2$i >>> 0 <= $a$2$ph$i >>> 0) {
         $z$2$i$lcssa = $z$2$i;
         break;
        }
        $504 = $z$2$i + -4 | 0;
        if (!(HEAP32[$504 >> 2] | 0)) $z$2$i = $504; else {
         $z$2$i$lcssa = $z$2$i;
         break;
        }
       }
       $508 = (HEAP32[$e2$i >> 2] | 0) - $489 | 0;
       HEAP32[$e2$i >> 2] = $508;
       if (($508 | 0) > 0) {
        $488 = $508;
        $a$1149$i = $a$2$ph$i;
        $z$1148$i = $z$2$i$lcssa;
       } else {
        $$pr50$i = $508;
        $a$1$lcssa$i = $a$2$ph$i;
        $z$1$lcssa$i = $z$2$i$lcssa;
        break;
       }
      }
     } else {
      $$pr50$i = $$pr$i;
      $a$1$lcssa$i = $$33$i;
      $z$1$lcssa$i = $$lcssa303;
     }
     if (($$pr50$i | 0) < 0) {
      $513 = (($$p$i + 25 | 0) / 9 | 0) + 1 | 0;
      $514 = ($395 | 0) == 102;
      $516 = $$pr50$i;
      $a$3136$i = $a$1$lcssa$i;
      $z$3135$i = $z$1$lcssa$i;
      while (1) {
       $515 = 0 - $516 | 0;
       $518 = ($515 | 0) > 9 ? 9 : $515;
       do if ($a$3136$i >>> 0 < $z$3135$i >>> 0) {
        $524 = (1 << $518) + -1 | 0;
        $525 = 1e9 >>> $518;
        $carry3$0130$i = 0;
        $d$1129$i = $a$3136$i;
        while (1) {
         $526 = HEAP32[$d$1129$i >> 2] | 0;
         HEAP32[$d$1129$i >> 2] = ($526 >>> $518) + $carry3$0130$i;
         $530 = Math_imul($526 & $524, $525) | 0;
         $d$1129$i = $d$1129$i + 4 | 0;
         if ($d$1129$i >>> 0 >= $z$3135$i >>> 0) {
          $$lcssa306 = $530;
          break;
         } else $carry3$0130$i = $530;
        }
        $$a$3$i = (HEAP32[$a$3136$i >> 2] | 0) == 0 ? $a$3136$i + 4 | 0 : $a$3136$i;
        if (!$$lcssa306) {
         $$a$3192$i = $$a$3$i;
         $z$4$i = $z$3135$i;
         break;
        }
        HEAP32[$z$3135$i >> 2] = $$lcssa306;
        $$a$3192$i = $$a$3$i;
        $z$4$i = $z$3135$i + 4 | 0;
       } else {
        $$a$3192$i = (HEAP32[$a$3136$i >> 2] | 0) == 0 ? $a$3136$i + 4 | 0 : $a$3136$i;
        $z$4$i = $z$3135$i;
       } while (0);
       $538 = $514 ? $$33$i : $$a$3192$i;
       $$z$4$i = ($z$4$i - $538 >> 2 | 0) > ($513 | 0) ? $538 + ($513 << 2) | 0 : $z$4$i;
       $516 = (HEAP32[$e2$i >> 2] | 0) + $518 | 0;
       HEAP32[$e2$i >> 2] = $516;
       if (($516 | 0) >= 0) {
        $a$3$lcssa$i = $$a$3192$i;
        $z$3$lcssa$i = $$z$4$i;
        break;
       } else {
        $a$3136$i = $$a$3192$i;
        $z$3135$i = $$z$4$i;
       }
      }
     } else {
      $a$3$lcssa$i = $a$1$lcssa$i;
      $z$3$lcssa$i = $z$1$lcssa$i;
     }
     do if ($a$3$lcssa$i >>> 0 < $z$3$lcssa$i >>> 0) {
      $552 = ($479 - $a$3$lcssa$i >> 2) * 9 | 0;
      $553 = HEAP32[$a$3$lcssa$i >> 2] | 0;
      if ($553 >>> 0 < 10) {
       $e$1$i = $552;
       break;
      } else {
       $e$0125$i = $552;
       $i$0124$i = 10;
      }
      while (1) {
       $i$0124$i = $i$0124$i * 10 | 0;
       $556 = $e$0125$i + 1 | 0;
       if ($553 >>> 0 < $i$0124$i >>> 0) {
        $e$1$i = $556;
        break;
       } else $e$0125$i = $556;
      }
     } else $e$1$i = 0; while (0);
     $561 = ($395 | 0) == 103;
     $562 = ($$p$i | 0) != 0;
     $564 = $$p$i - (($395 | 0) != 102 ? $e$1$i : 0) + (($562 & $561) << 31 >> 31) | 0;
     if (($564 | 0) < ((($z$3$lcssa$i - $479 >> 2) * 9 | 0) + -9 | 0)) {
      $572 = $564 + 9216 | 0;
      $575 = $$33$i + 4 + ((($572 | 0) / 9 | 0) + -1024 << 2) | 0;
      $j$0117$i = (($572 | 0) % 9 | 0) + 1 | 0;
      if (($j$0117$i | 0) < 9) {
       $i$1118$i = 10;
       $j$0119$i = $j$0117$i;
       while (1) {
        $578 = $i$1118$i * 10 | 0;
        $j$0119$i = $j$0119$i + 1 | 0;
        if (($j$0119$i | 0) == 9) {
         $i$1$lcssa$i = $578;
         break;
        } else $i$1118$i = $578;
       }
      } else $i$1$lcssa$i = 10;
      $579 = HEAP32[$575 >> 2] | 0;
      $580 = ($579 >>> 0) % ($i$1$lcssa$i >>> 0) | 0;
      $583 = ($575 + 4 | 0) == ($z$3$lcssa$i | 0);
      do if ($583 & ($580 | 0) == 0) {
       $a$8$i = $a$3$lcssa$i;
       $d$4$i = $575;
       $e$4$i = $e$1$i;
      } else {
       $$20$i = ((($579 >>> 0) / ($i$1$lcssa$i >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
       $587 = ($i$1$lcssa$i | 0) / 2 | 0;
       if ($580 >>> 0 < $587 >>> 0) $small$0$i = .5; else $small$0$i = $583 & ($580 | 0) == ($587 | 0) ? 1.0 : 1.5;
       do if (!$pl$0$i) {
        $round6$1$i = $$20$i;
        $small$1$i = $small$0$i;
       } else {
        if ((HEAP8[$prefix$0$i >> 0] | 0) != 45) {
         $round6$1$i = $$20$i;
         $small$1$i = $small$0$i;
         break;
        }
        $round6$1$i = -$$20$i;
        $small$1$i = -$small$0$i;
       } while (0);
       $595 = $579 - $580 | 0;
       HEAP32[$575 >> 2] = $595;
       if (!($round6$1$i + $small$1$i != $round6$1$i)) {
        $a$8$i = $a$3$lcssa$i;
        $d$4$i = $575;
        $e$4$i = $e$1$i;
        break;
       }
       $598 = $595 + $i$1$lcssa$i | 0;
       HEAP32[$575 >> 2] = $598;
       if ($598 >>> 0 > 999999999) {
        $a$5111$i = $a$3$lcssa$i;
        $d$2110$i = $575;
        while (1) {
         $600 = $d$2110$i + -4 | 0;
         HEAP32[$d$2110$i >> 2] = 0;
         if ($600 >>> 0 < $a$5111$i >>> 0) {
          $602 = $a$5111$i + -4 | 0;
          HEAP32[$602 >> 2] = 0;
          $a$6$i = $602;
         } else $a$6$i = $a$5111$i;
         $604 = (HEAP32[$600 >> 2] | 0) + 1 | 0;
         HEAP32[$600 >> 2] = $604;
         if ($604 >>> 0 > 999999999) {
          $a$5111$i = $a$6$i;
          $d$2110$i = $600;
         } else {
          $a$5$lcssa$i = $a$6$i;
          $d$2$lcssa$i = $600;
          break;
         }
        }
       } else {
        $a$5$lcssa$i = $a$3$lcssa$i;
        $d$2$lcssa$i = $575;
       }
       $609 = ($479 - $a$5$lcssa$i >> 2) * 9 | 0;
       $610 = HEAP32[$a$5$lcssa$i >> 2] | 0;
       if ($610 >>> 0 < 10) {
        $a$8$i = $a$5$lcssa$i;
        $d$4$i = $d$2$lcssa$i;
        $e$4$i = $609;
        break;
       } else {
        $e$2106$i = $609;
        $i$2105$i = 10;
       }
       while (1) {
        $i$2105$i = $i$2105$i * 10 | 0;
        $613 = $e$2106$i + 1 | 0;
        if ($610 >>> 0 < $i$2105$i >>> 0) {
         $a$8$i = $a$5$lcssa$i;
         $d$4$i = $d$2$lcssa$i;
         $e$4$i = $613;
         break;
        } else $e$2106$i = $613;
       }
      } while (0);
      $615 = $d$4$i + 4 | 0;
      $a$9$ph$i = $a$8$i;
      $e$5$ph$i = $e$4$i;
      $z$7$ph$i = $z$3$lcssa$i >>> 0 > $615 >>> 0 ? $615 : $z$3$lcssa$i;
     } else {
      $a$9$ph$i = $a$3$lcssa$i;
      $e$5$ph$i = $e$1$i;
      $z$7$ph$i = $z$3$lcssa$i;
     }
     $617 = 0 - $e$5$ph$i | 0;
     $z$7$i = $z$7$ph$i;
     while (1) {
      if ($z$7$i >>> 0 <= $a$9$ph$i >>> 0) {
       $$lcssa162$i = 0;
       $z$7$i$lcssa = $z$7$i;
       break;
      }
      $619 = $z$7$i + -4 | 0;
      if (!(HEAP32[$619 >> 2] | 0)) $z$7$i = $619; else {
       $$lcssa162$i = 1;
       $z$7$i$lcssa = $z$7$i;
       break;
      }
     }
     do if ($561) {
      $$p$$i = ($562 & 1 ^ 1) + $$p$i | 0;
      if (($$p$$i | 0) > ($e$5$ph$i | 0) & ($e$5$ph$i | 0) > -5) {
       $$013$i = $t$0 + -1 | 0;
       $$210$i = $$p$$i + -1 - $e$5$ph$i | 0;
      } else {
       $$013$i = $t$0 + -2 | 0;
       $$210$i = $$p$$i + -1 | 0;
      }
      $630 = $fl$1$ & 8;
      if ($630 | 0) {
       $$114$i = $$013$i;
       $$311$i = $$210$i;
       $$pre$phi190$iZ2D = $630;
       break;
      }
      do if ($$lcssa162$i) {
       $633 = HEAP32[$z$7$i$lcssa + -4 >> 2] | 0;
       if (!$633) {
        $j$2$i = 9;
        break;
       }
       if (!(($633 >>> 0) % 10 | 0)) {
        $i$3101$i = 10;
        $j$1102$i = 0;
       } else {
        $j$2$i = 0;
        break;
       }
       while (1) {
        $i$3101$i = $i$3101$i * 10 | 0;
        $638 = $j$1102$i + 1 | 0;
        if (($633 >>> 0) % ($i$3101$i >>> 0) | 0 | 0) {
         $j$2$i = $638;
         break;
        } else $j$1102$i = $638;
       }
      } else $j$2$i = 9; while (0);
      $647 = (($z$7$i$lcssa - $479 >> 2) * 9 | 0) + -9 | 0;
      if (($$013$i | 32 | 0) == 102) {
       $648 = $647 - $j$2$i | 0;
       $$23$i = ($648 | 0) < 0 ? 0 : $648;
       $$114$i = $$013$i;
       $$311$i = ($$210$i | 0) < ($$23$i | 0) ? $$210$i : $$23$i;
       $$pre$phi190$iZ2D = 0;
       break;
      } else {
       $652 = $647 + $e$5$ph$i - $j$2$i | 0;
       $$25$i = ($652 | 0) < 0 ? 0 : $652;
       $$114$i = $$013$i;
       $$311$i = ($$210$i | 0) < ($$25$i | 0) ? $$210$i : $$25$i;
       $$pre$phi190$iZ2D = 0;
       break;
      }
     } else {
      $$114$i = $t$0;
      $$311$i = $$p$i;
      $$pre$phi190$iZ2D = $fl$1$ & 8;
     } while (0);
     $655 = $$311$i | $$pre$phi190$iZ2D;
     $657 = ($655 | 0) != 0 & 1;
     $659 = ($$114$i | 32 | 0) == 102;
     if ($659) {
      $$pn$i = ($e$5$ph$i | 0) > 0 ? $e$5$ph$i : 0;
      $estr$2$i = 0;
     } else {
      $663 = ($e$5$ph$i | 0) < 0 ? $617 : $e$5$ph$i;
      $666 = _fmt_u($663, (($663 | 0) < 0) << 31 >> 31, $7) | 0;
      if (($9 - $666 | 0) < 2) {
       $estr$195$i = $666;
       while (1) {
        $670 = $estr$195$i + -1 | 0;
        HEAP8[$670 >> 0] = 48;
        if (($9 - $670 | 0) < 2) $estr$195$i = $670; else {
         $estr$1$lcssa$i = $670;
         break;
        }
       }
      } else $estr$1$lcssa$i = $666;
      HEAP8[$estr$1$lcssa$i + -1 >> 0] = ($e$5$ph$i >> 31 & 2) + 43;
      $680 = $estr$1$lcssa$i + -2 | 0;
      HEAP8[$680 >> 0] = $$114$i;
      $$pn$i = $9 - $680 | 0;
      $estr$2$i = $680;
     }
     $685 = $pl$0$i + 1 + $$311$i + $657 + $$pn$i | 0;
     _pad($f, 32, $w$1, $685, $fl$1$);
     if (!(HEAP32[$f >> 2] & 32)) ___fwritex($prefix$0$i, $pl$0$i, $f) | 0;
     _pad($f, 48, $w$1, $685, $fl$1$ ^ 65536);
     do if ($659) {
      $r$0$a$9$i = $a$9$ph$i >>> 0 > $$33$i >>> 0 ? $$33$i : $a$9$ph$i;
      $d$584$i = $r$0$a$9$i;
      while (1) {
       $692 = _fmt_u(HEAP32[$d$584$i >> 2] | 0, 0, $14) | 0;
       do if (($d$584$i | 0) == ($r$0$a$9$i | 0)) {
        if (($692 | 0) != ($14 | 0)) {
         $s7$1$i = $692;
         break;
        }
        HEAP8[$16 >> 0] = 48;
        $s7$1$i = $16;
       } else {
        if ($692 >>> 0 <= $buf$i >>> 0) {
         $s7$1$i = $692;
         break;
        }
        _memset($buf$i | 0, 48, $692 - $5 | 0) | 0;
        $s7$081$i = $692;
        while (1) {
         $697 = $s7$081$i + -1 | 0;
         if ($697 >>> 0 > $buf$i >>> 0) $s7$081$i = $697; else {
          $s7$1$i = $697;
          break;
         }
        }
       } while (0);
       if (!(HEAP32[$f >> 2] & 32)) ___fwritex($s7$1$i, $15 - $s7$1$i | 0, $f) | 0;
       $705 = $d$584$i + 4 | 0;
       if ($705 >>> 0 > $$33$i >>> 0) {
        $$lcssa316 = $705;
        break;
       } else $d$584$i = $705;
      }
      do if ($655 | 0) {
       if (HEAP32[$f >> 2] & 32 | 0) break;
       ___fwritex(146278, 1, $f) | 0;
      } while (0);
      if (($$311$i | 0) > 0 & $$lcssa316 >>> 0 < $z$7$i$lcssa >>> 0) {
       $$41278$i = $$311$i;
       $d$677$i = $$lcssa316;
       while (1) {
        $715 = _fmt_u(HEAP32[$d$677$i >> 2] | 0, 0, $14) | 0;
        if ($715 >>> 0 > $buf$i >>> 0) {
         _memset($buf$i | 0, 48, $715 - $5 | 0) | 0;
         $s8$072$i = $715;
         while (1) {
          $719 = $s8$072$i + -1 | 0;
          if ($719 >>> 0 > $buf$i >>> 0) $s8$072$i = $719; else {
           $s8$0$lcssa$i = $719;
           break;
          }
         }
        } else $s8$0$lcssa$i = $715;
        if (!(HEAP32[$f >> 2] & 32)) ___fwritex($s8$0$lcssa$i, ($$41278$i | 0) > 9 ? 9 : $$41278$i, $f) | 0;
        $d$677$i = $d$677$i + 4 | 0;
        $727 = $$41278$i + -9 | 0;
        if (!(($$41278$i | 0) > 9 & $d$677$i >>> 0 < $z$7$i$lcssa >>> 0)) {
         $$412$lcssa$i = $727;
         break;
        } else $$41278$i = $727;
       }
      } else $$412$lcssa$i = $$311$i;
      _pad($f, 48, $$412$lcssa$i + 9 | 0, 9, 0);
     } else {
      $z$7$$i = $$lcssa162$i ? $z$7$i$lcssa : $a$9$ph$i + 4 | 0;
      if (($$311$i | 0) > -1) {
       $734 = ($$pre$phi190$iZ2D | 0) == 0;
       $$589$i = $$311$i;
       $d$788$i = $a$9$ph$i;
       while (1) {
        $736 = _fmt_u(HEAP32[$d$788$i >> 2] | 0, 0, $14) | 0;
        if (($736 | 0) == ($14 | 0)) {
         HEAP8[$16 >> 0] = 48;
         $s9$0$i = $16;
        } else $s9$0$i = $736;
        do if (($d$788$i | 0) == ($a$9$ph$i | 0)) {
         $742 = $s9$0$i + 1 | 0;
         if (!(HEAP32[$f >> 2] & 32)) ___fwritex($s9$0$i, 1, $f) | 0;
         if ($734 & ($$589$i | 0) < 1) {
          $s9$2$i = $742;
          break;
         }
         if (HEAP32[$f >> 2] & 32 | 0) {
          $s9$2$i = $742;
          break;
         }
         ___fwritex(146278, 1, $f) | 0;
         $s9$2$i = $742;
        } else {
         if ($s9$0$i >>> 0 <= $buf$i >>> 0) {
          $s9$2$i = $s9$0$i;
          break;
         }
         _memset($buf$i | 0, 48, $s9$0$i + $6 | 0) | 0;
         $s9$185$i = $s9$0$i;
         while (1) {
          $740 = $s9$185$i + -1 | 0;
          if ($740 >>> 0 > $buf$i >>> 0) $s9$185$i = $740; else {
           $s9$2$i = $740;
           break;
          }
         }
        } while (0);
        $751 = $15 - $s9$2$i | 0;
        if (!(HEAP32[$f >> 2] & 32)) ___fwritex($s9$2$i, ($$589$i | 0) > ($751 | 0) ? $751 : $$589$i, $f) | 0;
        $757 = $$589$i - $751 | 0;
        $d$788$i = $d$788$i + 4 | 0;
        if (!($d$788$i >>> 0 < $z$7$$i >>> 0 & ($757 | 0) > -1)) {
         $$5$lcssa$i = $757;
         break;
        } else $$589$i = $757;
       }
      } else $$5$lcssa$i = $$311$i;
      _pad($f, 48, $$5$lcssa$i + 18 | 0, 18, 0);
      if (HEAP32[$f >> 2] & 32 | 0) break;
      ___fwritex($estr$2$i, $9 - $estr$2$i | 0, $f) | 0;
     } while (0);
     _pad($f, 32, $w$1, $685, $fl$1$ ^ 8192);
     $$0$i = ($685 | 0) < ($w$1 | 0) ? $w$1 : $685;
    } else {
     $376 = ($t$0 & 32 | 0) != 0;
     $378 = $$07$i != $$07$i | 0.0 != 0.0;
     $pl$1$i = $378 ? 0 : $pl$0$i;
     $380 = $pl$1$i + 3 | 0;
     _pad($f, 32, $w$1, $380, $176);
     $381 = HEAP32[$f >> 2] | 0;
     if (!($381 & 32)) {
      ___fwritex($prefix$0$i, $pl$1$i, $f) | 0;
      $385 = HEAP32[$f >> 2] | 0;
     } else $385 = $381;
     if (!($385 & 32)) ___fwritex($378 ? ($376 ? 146289 : 146274) : $376 ? 146266 : 146270, 3, $f) | 0;
     _pad($f, 32, $w$1, $380, $fl$1$ ^ 8192);
     $$0$i = ($380 | 0) < ($w$1 | 0) ? $w$1 : $380;
    } while (0);
    $cnt$0 = $cnt$1;
    $l$0 = $$0$i;
    $l10n$0 = $l10n$3;
    $s$0 = $$lcssa300;
    continue L1;
    break;
   }
  default:
   {
    $a$2 = $s$0;
    $fl$6 = $fl$1$;
    $p$5 = $p$0;
    $pl$2 = 0;
    $prefix$2 = 144338;
    $z$2 = $1;
   }
  } while (0);
  L311 : do if ((label | 0) == 64) {
   label = 0;
   $207 = $arg;
   $209 = HEAP32[$207 >> 2] | 0;
   $212 = HEAP32[$207 + 4 >> 2] | 0;
   $213 = $t$1 & 32;
   if (($209 | 0) == 0 & ($212 | 0) == 0) {
    $a$0 = $1;
    $fl$4 = $fl$3;
    $p$2 = $p$1;
    $pl$1 = 0;
    $prefix$1 = 144338;
    label = 77;
   } else {
    $$012$i = $1;
    $218 = $209;
    $225 = $212;
    while (1) {
     $224 = $$012$i + -1 | 0;
     HEAP8[$224 >> 0] = HEAPU8[144322 + ($218 & 15) >> 0] | $213;
     $218 = _bitshift64Lshr($218 | 0, $225 | 0, 4) | 0;
     $225 = tempRet0;
     if (($218 | 0) == 0 & ($225 | 0) == 0) {
      $$lcssa321 = $224;
      break;
     } else $$012$i = $224;
    }
    $231 = $arg;
    if (($fl$3 & 8 | 0) == 0 | (HEAP32[$231 >> 2] | 0) == 0 & (HEAP32[$231 + 4 >> 2] | 0) == 0) {
     $a$0 = $$lcssa321;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 0;
     $prefix$1 = 144338;
     label = 77;
    } else {
     $a$0 = $$lcssa321;
     $fl$4 = $fl$3;
     $p$2 = $p$1;
     $pl$1 = 2;
     $prefix$1 = 144338 + ($t$1 >> 4) | 0;
     label = 77;
    }
   }
  } else if ((label | 0) == 76) {
   label = 0;
   $a$0 = _fmt_u($287, $288, $1) | 0;
   $fl$4 = $fl$1$;
   $p$2 = $p$0;
   $pl$1 = $pl$0;
   $prefix$1 = $prefix$0;
   label = 77;
  } else if ((label | 0) == 82) {
   label = 0;
   $321 = _memchr($a$1, 0, $p$0) | 0;
   $322 = ($321 | 0) == 0;
   $a$2 = $a$1;
   $fl$6 = $176;
   $p$5 = $322 ? $p$0 : $321 - $a$1 | 0;
   $pl$2 = 0;
   $prefix$2 = 144338;
   $z$2 = $322 ? $a$1 + $p$0 | 0 : $321;
  } else if ((label | 0) == 86) {
   label = 0;
   $i$0105 = 0;
   $l$1104 = 0;
   $ws$0106 = $798;
   while (1) {
    $334 = HEAP32[$ws$0106 >> 2] | 0;
    if (!$334) {
     $i$0$lcssa = $i$0105;
     $l$2 = $l$1104;
     break;
    }
    $336 = _wctomb($mb, $334) | 0;
    if (($336 | 0) < 0 | $336 >>> 0 > ($p$4176 - $i$0105 | 0) >>> 0) {
     $i$0$lcssa = $i$0105;
     $l$2 = $336;
     break;
    }
    $341 = $336 + $i$0105 | 0;
    if ($p$4176 >>> 0 > $341 >>> 0) {
     $i$0105 = $341;
     $l$1104 = $336;
     $ws$0106 = $ws$0106 + 4 | 0;
    } else {
     $i$0$lcssa = $341;
     $l$2 = $336;
     break;
    }
   }
   if (($l$2 | 0) < 0) {
    $$0 = -1;
    break L1;
   }
   _pad($f, 32, $w$1, $i$0$lcssa, $fl$1$);
   if (!$i$0$lcssa) {
    $i$0$lcssa178 = 0;
    label = 97;
   } else {
    $i$1116 = 0;
    $ws$1117 = $798;
    while (1) {
     $345 = HEAP32[$ws$1117 >> 2] | 0;
     if (!$345) {
      $i$0$lcssa178 = $i$0$lcssa;
      label = 97;
      break L311;
     }
     $348 = _wctomb($mb, $345) | 0;
     $i$1116 = $348 + $i$1116 | 0;
     if (($i$1116 | 0) > ($i$0$lcssa | 0)) {
      $i$0$lcssa178 = $i$0$lcssa;
      label = 97;
      break L311;
     }
     if (!(HEAP32[$f >> 2] & 32)) ___fwritex($mb, $348, $f) | 0;
     if ($i$1116 >>> 0 >= $i$0$lcssa >>> 0) {
      $i$0$lcssa178 = $i$0$lcssa;
      label = 97;
      break;
     } else $ws$1117 = $ws$1117 + 4 | 0;
    }
   }
  } while (0);
  if ((label | 0) == 97) {
   label = 0;
   _pad($f, 32, $w$1, $i$0$lcssa178, $fl$1$ ^ 8192);
   $cnt$0 = $cnt$1;
   $l$0 = ($w$1 | 0) > ($i$0$lcssa178 | 0) ? $w$1 : $i$0$lcssa178;
   $l10n$0 = $l10n$3;
   $s$0 = $$lcssa300;
   continue;
  }
  if ((label | 0) == 77) {
   label = 0;
   $$fl$4 = ($p$2 | 0) > -1 ? $fl$4 & -65537 : $fl$4;
   $292 = $arg;
   $300 = (HEAP32[$292 >> 2] | 0) != 0 | (HEAP32[$292 + 4 >> 2] | 0) != 0;
   if (($p$2 | 0) != 0 | $300) {
    $306 = ($300 & 1 ^ 1) + ($2 - $a$0) | 0;
    $a$2 = $a$0;
    $fl$6 = $$fl$4;
    $p$5 = ($p$2 | 0) > ($306 | 0) ? $p$2 : $306;
    $pl$2 = $pl$1;
    $prefix$2 = $prefix$1;
    $z$2 = $1;
   } else {
    $a$2 = $1;
    $fl$6 = $$fl$4;
    $p$5 = 0;
    $pl$2 = $pl$1;
    $prefix$2 = $prefix$1;
    $z$2 = $1;
   }
  }
  $772 = $z$2 - $a$2 | 0;
  $$p$5 = ($p$5 | 0) < ($772 | 0) ? $772 : $p$5;
  $774 = $pl$2 + $$p$5 | 0;
  $w$2 = ($w$1 | 0) < ($774 | 0) ? $774 : $w$1;
  _pad($f, 32, $w$2, $774, $fl$6);
  if (!(HEAP32[$f >> 2] & 32)) ___fwritex($prefix$2, $pl$2, $f) | 0;
  _pad($f, 48, $w$2, $774, $fl$6 ^ 65536);
  _pad($f, 48, $$p$5, $772, 0);
  if (!(HEAP32[$f >> 2] & 32)) ___fwritex($a$2, $772, $f) | 0;
  _pad($f, 32, $w$2, $774, $fl$6 ^ 8192);
  $cnt$0 = $cnt$1;
  $l$0 = $w$2;
  $l10n$0 = $l10n$3;
  $s$0 = $$lcssa300;
 }
 L345 : do if ((label | 0) == 244) if (!$f) if (!$l10n$0$lcssa) $$0 = 0; else {
  $i$291 = 1;
  while (1) {
   $787 = HEAP32[$nl_type + ($i$291 << 2) >> 2] | 0;
   if (!$787) {
    $i$291$lcssa = $i$291;
    break;
   }
   _pop_arg($nl_arg + ($i$291 << 3) | 0, $787, $ap);
   $i$291 = $i$291 + 1 | 0;
   if (($i$291 | 0) >= 10) {
    $$0 = 1;
    break L345;
   }
  }
  if (($i$291$lcssa | 0) < 10) {
   $i$389 = $i$291$lcssa;
   while (1) {
    if (HEAP32[$nl_type + ($i$389 << 2) >> 2] | 0) {
     $$0 = -1;
     break L345;
    }
    $i$389 = $i$389 + 1 | 0;
    if (($i$389 | 0) >= 10) {
     $$0 = 1;
     break;
    }
   }
  } else $$0 = 1;
 } else $$0 = $cnt$1$lcssa; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6SoLoud6Soloud6mixBusEPfjS1_jfj($this, $aBuffer, $aSamples, $aScratch, $aBus, $aSamplerate, $aChannels) {
 $this = $this | 0;
 $aBuffer = $aBuffer | 0;
 $aSamples = $aSamples | 0;
 $aScratch = $aScratch | 0;
 $aBus = $aBus | 0;
 $aSamplerate = +$aSamplerate;
 $aChannels = $aChannels | 0;
 var $$$i$us = 0, $$lcssa = 0.0, $$lcssa415 = 0.0, $$lcssa416 = 0.0, $$lcssa417 = 0.0, $$lcssa418 = 0.0, $$lcssa419 = 0.0, $$lcssa420 = 0.0, $$lcssa421 = 0.0, $$lcssa422 = 0.0, $$lcssa423 = 0.0, $$lcssa424 = 0.0, $$lcssa425 = 0.0, $$lcssa426 = 0.0, $$lcssa427 = 0.0, $$lcssa428 = 0.0, $$lcssa429 = 0.0, $$lcssa430 = 0.0, $$lcssa431 = 0.0, $$lcssa432 = 0.0, $$lcssa433 = 0.0, $$lcssa434 = 0.0, $$lcssa435 = 0.0, $$lcssa436 = 0.0, $$lcssa437 = 0.0, $$lcssa438 = 0.0, $$lcssa439 = 0.0, $$lcssa440 = 0.0, $$lcssa441 = 0.0, $$lcssa442 = 0.0, $$lcssa443 = 0.0, $$lcssa444 = 0.0, $$lcssa445 = 0.0, $$lcssa446 = 0.0, $$lcssa447 = 0.0, $$lcssa448 = 0.0, $$lcssa449 = 0.0, $$lcssa450 = 0.0, $$lcssa451 = 0.0, $$lcssa452 = 0.0, $$lcssa453 = 0.0, $$lcssa454 = 0.0, $$lcssa455 = 0.0, $$lcssa456 = 0.0, $$lcssa457 = 0.0, $$lcssa458 = 0.0, $$lcssa459 = 0.0, $$lcssa460 = 0.0, $$lcssa461 = 0.0, $$lcssa462 = 0.0, $$pre263 = 0, $$pre264 = 0.0, $0 = 0, $10 = 0, $100 = 0, $101 = 0, $104 = 0, $105 = 0, $11 = 0, $110 = 0, $113 = 0, $115 = 0, $116 = 0, $119 = 0, $12 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $144 = 0, $146 = 0, $15 = 0, $151 = 0.0, $159 = 0, $16 = 0, $161 = 0, $162 = 0, $163 = 0.0, $164 = 0.0, $169 = 0, $17 = 0, $18 = 0, $181 = 0.0, $182 = 0.0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0.0, $195 = 0, $197 = 0.0, $20 = 0, $200 = 0.0, $206 = 0.0, $21 = 0, $211 = 0, $218 = 0, $22 = 0.0, $222 = 0.0, $223 = 0.0, $224 = 0.0, $225 = 0.0, $228 = 0, $23 = 0, $230 = 0.0, $236 = 0.0, $24 = 0, $240 = 0, $246 = 0, $25 = 0, $250 = 0.0, $251 = 0.0, $252 = 0.0, $253 = 0.0, $256 = 0, $258 = 0.0, $260 = 0, $264 = 0, $268 = 0.0, $269 = 0.0, $270 = 0.0, $271 = 0.0, $273 = 0.0, $275 = 0, $28 = 0, $280 = 0, $286 = 0.0, $287 = 0.0, $288 = 0.0, $289 = 0.0, $290 = 0.0, $291 = 0.0, $292 = 0.0, $293 = 0.0, $294 = 0.0, $295 = 0.0, $296 = 0.0, $297 = 0.0, $298 = 0.0, $299 = 0.0, $3 = 0, $300 = 0.0, $301 = 0.0, $302 = 0.0, $303 = 0.0, $304 = 0.0, $305 = 0.0, $306 = 0.0, $307 = 0.0, $308 = 0.0, $309 = 0.0, $312 = 0, $314 = 0.0, $315 = 0, $320 = 0.0, $323 = 0.0, $324 = 0.0, $327 = 0, $33 = 0, $332 = 0, $336 = 0, $341 = 0, $345 = 0.0, $346 = 0.0, $347 = 0.0, $348 = 0.0, $349 = 0.0, $350 = 0.0, $351 = 0.0, $352 = 0.0, $355 = 0, $357 = 0.0, $358 = 0, $360 = 0.0, $361 = 0, $363 = 0.0, $365 = 0, $369 = 0, $37 = 0, $373 = 0, $377 = 0, $381 = 0.0, $382 = 0.0, $383 = 0.0, $384 = 0.0, $385 = 0.0, $386 = 0.0, $387 = 0.0, $388 = 0.0, $39 = 0.0, $390 = 0.0, $391 = 0, $393 = 0.0, $395 = 0, $399 = 0, $404 = 0, $409 = 0, $413 = 0.0, $414 = 0.0, $415 = 0.0, $416 = 0.0, $417 = 0.0, $418 = 0.0, $419 = 0.0, $42 = 0, $420 = 0.0, $422 = 0.0, $424 = 0, $429 = 0, $43 = 0, $434 = 0, $439 = 0, $44 = 0, $445 = 0.0, $446 = 0.0, $447 = 0.0, $448 = 0.0, $449 = 0.0, $450 = 0.0, $451 = 0.0, $452 = 0.0, $453 = 0.0, $454 = 0.0, $455 = 0.0, $456 = 0.0, $457 = 0.0, $458 = 0.0, $459 = 0.0, $460 = 0.0, $461 = 0.0, $462 = 0.0, $463 = 0.0, $464 = 0.0, $465 = 0.0, $466 = 0.0, $467 = 0.0, $468 = 0.0, $469 = 0.0, $470 = 0.0, $471 = 0.0, $472 = 0.0, $473 = 0.0, $474 = 0.0, $475 = 0.0, $476 = 0.0, $477 = 0.0, $478 = 0.0, $479 = 0.0, $48 = 0, $480 = 0.0, $483 = 0, $485 = 0.0, $486 = 0, $488 = 0.0, $489 = 0, $49 = 0, $491 = 0.0, $492 = 0, $494 = 0.0, $495 = 0, $497 = 0.0, $499 = 0, $50 = 0, $503 = 0, $507 = 0, $51 = 0, $511 = 0, $515 = 0, $519 = 0, $52 = 0, $523 = 0.0, $524 = 0.0, $525 = 0.0, $526 = 0.0, $527 = 0.0, $528 = 0.0, $529 = 0.0, $53 = 0, $530 = 0.0, $531 = 0.0, $532 = 0.0, $533 = 0.0, $534 = 0.0, $536 = 0.0, $537 = 0, $539 = 0.0, $54 = 0, $540 = 0, $542 = 0.0, $543 = 0, $545 = 0.0, $547 = 0, $551 = 0, $554 = 0.0, $557 = 0, $56 = 0, $564 = 0, $569 = 0, $574 = 0, $578 = 0.0, $579 = 0.0, $580 = 0.0, $581 = 0.0, $582 = 0.0, $583 = 0.0, $584 = 0.0, $585 = 0.0, $586 = 0.0, $587 = 0.0, $588 = 0.0, $589 = 0.0, $59 = 0, $591 = 0.0, $592 = 0, $594 = 0.0, $596 = 0, $6 = 0, $600 = 0, $604 = 0.0, $607 = 0, $612 = 0, $617 = 0, $622 = 0, $626 = 0.0, $627 = 0.0, $628 = 0.0, $629 = 0.0, $630 = 0.0, $631 = 0.0, $632 = 0.0, $633 = 0.0, $634 = 0.0, $635 = 0.0, $636 = 0.0, $637 = 0.0, $639 = 0.0, $641 = 0, $646 = 0, $651 = 0, $656 = 0, $661 = 0, $666 = 0, $67 = 0, $678 = 0, $679 = 0, $686 = 0, $687 = 0, $688 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $699 = 0, $7 = 0, $710 = 0, $714 = 0, $716 = 0, $717 = 0, $720 = 0, $721 = 0, $730 = 0, $8 = 0, $82 = 0, $86 = 0, $9 = 0, $97 = 0, $i$03$i$us = 0, $i$191 = 0, $j$045 = 0, $j$1067 = 0, $j$1165 = 0, $j$1263 = 0, $j$1361 = 0, $j$1459 = 0, $j$148 = 0, $j$1557 = 0, $j$249$us = 0, $j$386 = 0, $j$386$us = 0, $j$479 = 0, $j$577 = 0, $j$675 = 0, $j$773 = 0, $j$871 = 0, $j$969 = 0, $k$054 = 0, $k$181$us = 0, $ofs$085$us = 0, $outofs$0 = 0, $outofs$1$ph = 0, $outofs$152 = 0, $outofs33$0$ph = 0, $outofs33$044$us = 0, $pan = 0, $pand = 0, $pani = 0, $pos$02$i$us = 0, $s1$0$i$us = 0.0, $storemerge$us = 0, $writesamples$0 = 0, $writesamples$1 = 0, $writesamples35$0$us = 0, $writesamples35$1$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $pan = sp + 48 | 0;
 $pand = sp + 24 | 0;
 $pani = sp;
 $0 = Math_imul($aChannels, $aSamples) | 0;
 if ($0 | 0) _memset($aBuffer | 0, 0, $0 << 2 | 0) | 0;
 $3 = $this + 109916 | 0;
 if (!(HEAP32[$3 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 $6 = ($aChannels | 0) == 0;
 $7 = ($aSamples | 0) == 0;
 $8 = $pani + 4 | 0;
 $9 = $pan + 4 | 0;
 $10 = $aSamples << 1;
 $11 = $aSamples << 2;
 $12 = $aSamples * 5 | 0;
 $13 = $aSamples * 3 | 0;
 $14 = $pani + 8 | 0;
 $15 = $pan + 8 | 0;
 $16 = $pani + 12 | 0;
 $17 = $pan + 12 | 0;
 $18 = $pani + 16 | 0;
 $19 = $pan + 16 | 0;
 $20 = $pani + 20 | 0;
 $21 = $pan + 20 | 0;
 $22 = +($aSamples >>> 0);
 $23 = $this + 4232 | 0;
 $24 = $aChannels << 2;
 $i$191 = 0;
 do {
  $25 = $this + 105820 + ($i$191 << 2) | 0;
  $28 = HEAP32[$this + 44 + (HEAP32[$25 >> 2] << 2) >> 2] | 0;
  do if ($28 | 0) if ((HEAP32[$28 + 352 >> 2] | 0) == ($aBus | 0)) {
   $33 = $28 + 12 | 0;
   if (HEAP32[$33 >> 2] & 36 | 0) {
    $678 = $28 + 12 | 0;
    $679 = HEAP32[$678 >> 2] | 0;
    if (($679 & 164 | 0) != 160) break;
    $686 = ~~+Math_floor(+(+HEAPF32[$28 + 56 >> 2] / $aSamplerate * 1048576.0));
    $687 = $28 + 404 | 0;
    $688 = HEAP32[$687 >> 2] | 0;
    do if (!$688) {
     $outofs33$0$ph = 0;
     label = 108;
    } else if ($688 >>> 0 > $aSamples >>> 0) {
     HEAP32[$687 >> 2] = $688 - $aSamples;
     $730 = $679;
     break;
    } else {
     HEAP32[$687 >> 2] = 0;
     $outofs33$0$ph = $688;
     label = 108;
     break;
    } while (0);
    if ((label | 0) == 108) {
     label = 0;
     if (($686 | 0) != 0 & $outofs33$0$ph >>> 0 < $aSamples >>> 0) {
      $693 = $28 + 400 | 0;
      $694 = $28 + 388 | 0;
      $695 = $28 + 392 | 0;
      $696 = $28 + 396 | 0;
      $outofs33$044$us = $outofs33$0$ph;
      do {
       if (!(HEAP32[$693 >> 2] | 0)) {
        $699 = HEAP32[$694 >> 2] | 0;
        HEAP32[$694 >> 2] = HEAP32[$695 >> 2];
        HEAP32[$695 >> 2] = $699;
        if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 12 >> 2] & 63]($28) | 0)) FUNCTION_TABLE_viii[HEAP32[(HEAP32[$28 >> 2] | 0) + 8 >> 2] & 7]($28, HEAP32[HEAP32[$694 >> 2] >> 2] | 0, 512);
        $710 = HEAP32[$696 >> 2] | 0;
        $storemerge$us = $710 >>> 0 < 536870912 ? 0 : $710 + -536870912 | 0;
        HEAP32[$696 >> 2] = $storemerge$us;
        $714 = $storemerge$us;
       } else {
        HEAP32[$693 >> 2] = 0;
        $714 = HEAP32[$696 >> 2] | 0;
       }
       if ($714 >>> 0 < 536870912) {
        $716 = ((536870912 - $714 | 0) >>> 0) / ($686 >>> 0) | 0;
        $717 = $716 + 1 | 0;
        $720 = ((Math_imul($717, $686) | 0) + $714 | 0) >>> 0 > 536870911;
        $writesamples35$0$us = $720 ? $716 : $717;
       } else $writesamples35$0$us = 0;
       $721 = $writesamples35$0$us + $outofs33$044$us | 0;
       if ($721 >>> 0 > $aSamples >>> 0) {
        HEAP32[$693 >> 2] = $721 - $aSamples;
        $writesamples35$1$us = $aSamples - $outofs33$044$us | 0;
       } else $writesamples35$1$us = $writesamples35$0$us;
       $outofs33$044$us = $writesamples35$1$us + $outofs33$044$us | 0;
       HEAP32[$696 >> 2] = $714 + (Math_imul($writesamples35$1$us, $686) | 0);
      } while ($outofs33$044$us >>> 0 < $aSamples >>> 0);
      $730 = HEAP32[$678 >> 2] | 0;
     } else $730 = $679;
    }
    if ($730 & 1 | 0) break;
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 12 >> 2] & 63]($28) | 0)) break;
    __ZN6SoLoud6Soloud9stopVoiceEj($this, HEAP32[$25 >> 2] | 0);
    break;
   }
   $37 = $28 + 56 | 0;
   $39 = +HEAPF32[$37 >> 2] / $aSamplerate;
   $42 = ~~+Math_floor(+($39 > 4096.0 ? 0.0 : $39 * 1048576.0));
   $43 = $28 + 404 | 0;
   $44 = HEAP32[$43 >> 2] | 0;
   if (!$44) $outofs$1$ph = 0; else {
    $54 = $44 >>> 0 > $aSamples >>> 0;
    $outofs$0 = $54 ? $aSamples : $44;
    HEAP32[$43 >> 2] = $54 ? $44 - $aSamples | 0 : 0;
    $56 = $28 + 60 | 0;
    if (!(HEAP32[$56 >> 2] | 0)) $outofs$1$ph = $outofs$0; else {
     $59 = $outofs$0 << 2;
     $j$045 = 0;
     do {
      _memset($aScratch + ((Math_imul($j$045, $aSamples) | 0) << 2) | 0, 0, $59 | 0) | 0;
      $j$045 = $j$045 + 1 | 0;
     } while ($j$045 >>> 0 < (HEAP32[$56 >> 2] | 0) >>> 0);
     $outofs$1$ph = $outofs$0;
    }
   }
   if (($42 | 0) != 0 & $outofs$1$ph >>> 0 < $aSamples >>> 0) {
    $48 = $28 + 400 | 0;
    $49 = $28 + 388 | 0;
    $50 = $28 + 392 | 0;
    $51 = $28 + 60 | 0;
    $52 = $28 + 396 | 0;
    $53 = $28 + 388 | 0;
    $outofs$152 = $outofs$1$ph;
    do {
     if (!(HEAP32[$48 >> 2] | 0)) {
      $67 = HEAP32[$49 >> 2] | 0;
      HEAP32[$49 >> 2] = HEAP32[$50 >> 2];
      HEAP32[$50 >> 2] = $67;
      if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 12 >> 2] & 63]($28) | 0) _memset(HEAP32[HEAP32[$49 >> 2] >> 2] | 0, 0, HEAP32[$51 >> 2] << 11 | 0) | 0; else FUNCTION_TABLE_viii[HEAP32[(HEAP32[$28 >> 2] | 0) + 8 >> 2] & 7]($28, HEAP32[HEAP32[$49 >> 2] >> 2] | 0, 512);
      $82 = HEAP32[$52 >> 2] | 0;
      HEAP32[$52 >> 2] = $82 >>> 0 < 536870912 ? 0 : $82 + -536870912 | 0;
      $j$148 = 0;
      do {
       $86 = HEAP32[$28 + 356 + ($j$148 << 2) >> 2] | 0;
       if ($86 | 0) FUNCTION_TABLE_viiiidd[HEAP32[(HEAP32[$86 >> 2] | 0) + 8 >> 2] & 1]($86, HEAP32[HEAP32[$49 >> 2] >> 2] | 0, 512, HEAP32[$51 >> 2] | 0, +HEAPF32[$37 >> 2], +HEAPF64[$23 >> 3]);
       $j$148 = $j$148 + 1 | 0;
      } while (($j$148 | 0) != 8);
     } else HEAP32[$48 >> 2] = 0;
     $97 = HEAP32[$52 >> 2] | 0;
     if ($97 >>> 0 < 536870912) {
      $100 = ((536870912 - $97 | 0) >>> 0) / ($42 >>> 0) | 0;
      $101 = $100 + 1 | 0;
      $104 = ((Math_imul($101, $42) | 0) + $97 | 0) >>> 0 > 536870911;
      $writesamples$0 = $104 ? $100 : $101;
     } else $writesamples$0 = 0;
     $105 = $writesamples$0 + $outofs$152 | 0;
     if ($105 >>> 0 > $aSamples >>> 0) {
      HEAP32[$48 >> 2] = $105 - $aSamples;
      $writesamples$1 = $aSamples - $outofs$152 | 0;
     } else $writesamples$1 = $writesamples$0;
     if ($writesamples$1 | 0) {
      $110 = HEAP32[$51 >> 2] | 0;
      if ($110 | 0) {
       $113 = HEAP32[HEAP32[$53 >> 2] >> 2] | 0;
       if (($writesamples$1 | 0) > 0) {
        $$pre263 = HEAP32[HEAP32[$50 >> 2] >> 2] | 0;
        $j$249$us = 0;
        do {
         $115 = $j$249$us << 9;
         $116 = $113 + ($115 << 2) | 0;
         $119 = $aScratch + ((Math_imul($j$249$us, $aSamples) | 0) << 2) + ($outofs$152 << 2) | 0;
         $121 = $$pre263 + ($115 << 2) + 2044 | 0;
         $i$03$i$us = 0;
         $pos$02$i$us = $97;
         while (1) {
          $122 = $pos$02$i$us >> 20;
          $$$i$us = $122 >>> 0 > 511 ? 511 : $122;
          $s1$0$i$us = +HEAPF32[(($$$i$us | 0) == 0 ? $121 : $116 + ($$$i$us + -1 << 2) | 0) >> 2];
          HEAPF32[$119 + ($i$03$i$us << 2) >> 2] = $s1$0$i$us + +($pos$02$i$us & 1048575 | 0) * (+HEAPF32[$116 + ($$$i$us << 2) >> 2] - $s1$0$i$us) * 9.5367431640625e-07;
          $i$03$i$us = $i$03$i$us + 1 | 0;
          if (($i$03$i$us | 0) == ($writesamples$1 | 0)) break; else $pos$02$i$us = $pos$02$i$us + $42 | 0;
         }
         $j$249$us = $j$249$us + 1 | 0;
        } while ($j$249$us >>> 0 < $110 >>> 0);
       }
      }
     }
     $outofs$152 = $writesamples$1 + $outofs$152 | 0;
     HEAP32[$52 >> 2] = $97 + (Math_imul($writesamples$1, $42) | 0);
    } while ($outofs$152 >>> 0 < $aSamples >>> 0);
   }
   if (!$6) {
    $144 = $28 + 48 | 0;
    $k$054 = 0;
    do {
     $146 = HEAP32[$28 + 324 + ($k$054 << 2) >> 2] | 0;
     HEAP32[$pan + ($k$054 << 2) >> 2] = $146;
     $151 = +HEAPF32[$28 + 20 + ($k$054 << 2) >> 2] * +HEAPF32[$144 >> 2];
     HEAPF32[$pand + ($k$054 << 2) >> 2] = $151;
     HEAPF32[$pani + ($k$054 << 2) >> 2] = ($151 - (HEAP32[tempDoublePtr >> 2] = $146, +HEAPF32[tempDoublePtr >> 2])) / $22;
     $k$054 = $k$054 + 1 | 0;
    } while (($k$054 | 0) != ($aChannels | 0));
    L88 : do switch ($aChannels | 0) {
    case 1:
     {
      $159 = HEAP32[$28 + 60 >> 2] | 0;
      if ($159 | 0) {
       $161 = $28 + 324 | 0;
       if ($7) {
        $j$386 = 0;
        while (1) {
         HEAP32[$pan >> 2] = HEAP32[$161 >> 2];
         $j$386 = $j$386 + 1 | 0;
         if ($j$386 >>> 0 >= $159 >>> 0) break L88;
        }
       }
       $$pre264 = +HEAPF32[$pani >> 2];
       $j$386$us = 0;
       $ofs$085$us = 0;
       while (1) {
        $162 = HEAP32[$161 >> 2] | 0;
        HEAP32[$pan >> 2] = $162;
        $164 = (HEAP32[tempDoublePtr >> 2] = $162, +HEAPF32[tempDoublePtr >> 2]);
        $k$181$us = 0;
        while (1) {
         $163 = $$pre264 + $164;
         $169 = $aBuffer + ($k$181$us << 2) | 0;
         HEAPF32[$169 >> 2] = +HEAPF32[$169 >> 2] + $163 * +HEAPF32[$aScratch + ($k$181$us + $ofs$085$us << 2) >> 2];
         $k$181$us = $k$181$us + 1 | 0;
         if (($k$181$us | 0) == ($aSamples | 0)) {
          $$lcssa462 = $163;
          break;
         } else $164 = $163;
        }
        HEAPF32[$pan >> 2] = $$lcssa462;
        $j$386$us = $j$386$us + 1 | 0;
        if ($j$386$us >>> 0 >= $159 >>> 0) break; else $ofs$085$us = $ofs$085$us + $aSamples | 0;
       }
      }
      break;
     }
    case 2:
     {
      switch (HEAP32[$28 + 60 >> 2] | 0) {
      case 6:
       {
        if ($7) break L88;
        $187 = +HEAPF32[$pani >> 2];
        $188 = +HEAPF32[$8 >> 2];
        $190 = +HEAPF32[$pan >> 2];
        $192 = +HEAPF32[$9 >> 2];
        $j$479 = 0;
        while (1) {
         $189 = $187 + $190;
         $191 = $188 + $192;
         $195 = $j$479 + $aSamples | 0;
         $197 = +HEAPF32[$aScratch + ($195 << 2) >> 2];
         $200 = +HEAPF32[$aScratch + ($j$479 + $10 << 2) >> 2];
         $206 = +HEAPF32[$aScratch + ($j$479 + $12 << 2) >> 2];
         $211 = $aBuffer + ($j$479 << 2) | 0;
         HEAPF32[$211 >> 2] = +HEAPF32[$211 >> 2] + (+HEAPF32[$aScratch + ($j$479 << 2) >> 2] + $200 + +HEAPF32[$aScratch + ($j$479 + $11 << 2) >> 2]) * .30000001192092896 * $189;
         $218 = $aBuffer + ($195 << 2) | 0;
         HEAPF32[$218 >> 2] = +HEAPF32[$218 >> 2] + ($197 + $200 + $206) * .30000001192092896 * $191;
         $j$479 = $j$479 + 1 | 0;
         if (($j$479 | 0) == ($aSamples | 0)) {
          $$lcssa460 = $189;
          $$lcssa461 = $191;
          break;
         } else {
          $190 = $189;
          $192 = $191;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa460;
        HEAPF32[$9 >> 2] = $$lcssa461;
        break L88;
        break;
       }
      case 4:
       {
        if ($7) break L88;
        $185 = +HEAPF32[$pani >> 2];
        $186 = +HEAPF32[$8 >> 2];
        $223 = +HEAPF32[$pan >> 2];
        $225 = +HEAPF32[$9 >> 2];
        $j$577 = 0;
        while (1) {
         $222 = $185 + $223;
         $224 = $186 + $225;
         $228 = $j$577 + $aSamples | 0;
         $230 = +HEAPF32[$aScratch + ($228 << 2) >> 2];
         $236 = +HEAPF32[$aScratch + ($j$577 + $13 << 2) >> 2];
         $240 = $aBuffer + ($j$577 << 2) | 0;
         HEAPF32[$240 >> 2] = +HEAPF32[$240 >> 2] + (+HEAPF32[$aScratch + ($j$577 << 2) >> 2] + +HEAPF32[$aScratch + ($j$577 + $10 << 2) >> 2]) * .5 * $222;
         $246 = $aBuffer + ($228 << 2) | 0;
         HEAPF32[$246 >> 2] = +HEAPF32[$246 >> 2] + ($230 + $236) * .5 * $224;
         $j$577 = $j$577 + 1 | 0;
         if (($j$577 | 0) == ($aSamples | 0)) {
          $$lcssa458 = $222;
          $$lcssa459 = $224;
          break;
         } else {
          $223 = $222;
          $225 = $224;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa458;
        HEAPF32[$9 >> 2] = $$lcssa459;
        break L88;
        break;
       }
      case 2:
       {
        if ($7) break L88;
        $183 = +HEAPF32[$pani >> 2];
        $184 = +HEAPF32[$8 >> 2];
        $251 = +HEAPF32[$pan >> 2];
        $253 = +HEAPF32[$9 >> 2];
        $j$675 = 0;
        while (1) {
         $250 = $183 + $251;
         $252 = $184 + $253;
         $256 = $j$675 + $aSamples | 0;
         $258 = +HEAPF32[$aScratch + ($256 << 2) >> 2];
         $260 = $aBuffer + ($j$675 << 2) | 0;
         HEAPF32[$260 >> 2] = +HEAPF32[$260 >> 2] + +HEAPF32[$aScratch + ($j$675 << 2) >> 2] * $250;
         $264 = $aBuffer + ($256 << 2) | 0;
         HEAPF32[$264 >> 2] = +HEAPF32[$264 >> 2] + $258 * $252;
         $j$675 = $j$675 + 1 | 0;
         if (($j$675 | 0) == ($aSamples | 0)) {
          $$lcssa456 = $250;
          $$lcssa457 = $252;
          break;
         } else {
          $251 = $250;
          $253 = $252;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa456;
        HEAPF32[$9 >> 2] = $$lcssa457;
        break L88;
        break;
       }
      case 1:
       {
        if ($7) break L88;
        $181 = +HEAPF32[$pani >> 2];
        $182 = +HEAPF32[$8 >> 2];
        $269 = +HEAPF32[$pan >> 2];
        $271 = +HEAPF32[$9 >> 2];
        $j$773 = 0;
        while (1) {
         $268 = $181 + $269;
         $270 = $182 + $271;
         $273 = +HEAPF32[$aScratch + ($j$773 << 2) >> 2];
         $275 = $aBuffer + ($j$773 << 2) | 0;
         HEAPF32[$275 >> 2] = +HEAPF32[$275 >> 2] + $273 * $268;
         $280 = $aBuffer + ($j$773 + $aSamples << 2) | 0;
         HEAPF32[$280 >> 2] = +HEAPF32[$280 >> 2] + $273 * $270;
         $j$773 = $j$773 + 1 | 0;
         if (($j$773 | 0) == ($aSamples | 0)) {
          $$lcssa454 = $268;
          $$lcssa455 = $270;
          break;
         } else {
          $269 = $268;
          $271 = $270;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa454;
        HEAPF32[$9 >> 2] = $$lcssa455;
        break L88;
        break;
       }
      default:
       break L88;
      }
      break;
     }
    case 4:
     {
      switch (HEAP32[$28 + 60 >> 2] | 0) {
      case 6:
       {
        if ($7) break L88;
        $298 = +HEAPF32[$pani >> 2];
        $299 = +HEAPF32[$8 >> 2];
        $300 = +HEAPF32[$14 >> 2];
        $301 = +HEAPF32[$16 >> 2];
        $303 = +HEAPF32[$pan >> 2];
        $305 = +HEAPF32[$9 >> 2];
        $307 = +HEAPF32[$15 >> 2];
        $309 = +HEAPF32[$17 >> 2];
        $j$871 = 0;
        while (1) {
         $302 = $298 + $303;
         $304 = $299 + $305;
         $306 = $300 + $307;
         $308 = $301 + $309;
         $312 = $j$871 + $aSamples | 0;
         $314 = +HEAPF32[$aScratch + ($312 << 2) >> 2];
         $315 = $j$871 + $10 | 0;
         $320 = +HEAPF32[$aScratch + ($j$871 + $11 << 2) >> 2];
         $323 = +HEAPF32[$aScratch + ($j$871 + $12 << 2) >> 2];
         $324 = +HEAPF32[$aScratch + ($315 << 2) >> 2] * .699999988079071;
         $327 = $aBuffer + ($j$871 << 2) | 0;
         HEAPF32[$327 >> 2] = +HEAPF32[$327 >> 2] + ($324 + +HEAPF32[$aScratch + ($j$871 << 2) >> 2] * $302);
         $332 = $aBuffer + ($312 << 2) | 0;
         HEAPF32[$332 >> 2] = +HEAPF32[$332 >> 2] + ($324 + $314 * $304);
         $336 = $aBuffer + ($315 << 2) | 0;
         HEAPF32[$336 >> 2] = +HEAPF32[$336 >> 2] + $320 * $306;
         $341 = $aBuffer + ($j$871 + $13 << 2) | 0;
         HEAPF32[$341 >> 2] = +HEAPF32[$341 >> 2] + $323 * $308;
         $j$871 = $j$871 + 1 | 0;
         if (($j$871 | 0) == ($aSamples | 0)) {
          $$lcssa450 = $302;
          $$lcssa451 = $304;
          $$lcssa452 = $306;
          $$lcssa453 = $308;
          break;
         } else {
          $303 = $302;
          $305 = $304;
          $307 = $306;
          $309 = $308;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa450;
        HEAPF32[$9 >> 2] = $$lcssa451;
        HEAPF32[$15 >> 2] = $$lcssa452;
        HEAPF32[$17 >> 2] = $$lcssa453;
        break L88;
        break;
       }
      case 4:
       {
        if ($7) break L88;
        $294 = +HEAPF32[$pani >> 2];
        $295 = +HEAPF32[$8 >> 2];
        $296 = +HEAPF32[$14 >> 2];
        $297 = +HEAPF32[$16 >> 2];
        $346 = +HEAPF32[$pan >> 2];
        $348 = +HEAPF32[$9 >> 2];
        $350 = +HEAPF32[$15 >> 2];
        $352 = +HEAPF32[$17 >> 2];
        $j$969 = 0;
        while (1) {
         $345 = $294 + $346;
         $347 = $295 + $348;
         $349 = $296 + $350;
         $351 = $297 + $352;
         $355 = $j$969 + $aSamples | 0;
         $357 = +HEAPF32[$aScratch + ($355 << 2) >> 2];
         $358 = $j$969 + $10 | 0;
         $360 = +HEAPF32[$aScratch + ($358 << 2) >> 2];
         $361 = $j$969 + $13 | 0;
         $363 = +HEAPF32[$aScratch + ($361 << 2) >> 2];
         $365 = $aBuffer + ($j$969 << 2) | 0;
         HEAPF32[$365 >> 2] = +HEAPF32[$365 >> 2] + +HEAPF32[$aScratch + ($j$969 << 2) >> 2] * $345;
         $369 = $aBuffer + ($355 << 2) | 0;
         HEAPF32[$369 >> 2] = +HEAPF32[$369 >> 2] + $357 * $347;
         $373 = $aBuffer + ($358 << 2) | 0;
         HEAPF32[$373 >> 2] = +HEAPF32[$373 >> 2] + $360 * $349;
         $377 = $aBuffer + ($361 << 2) | 0;
         HEAPF32[$377 >> 2] = +HEAPF32[$377 >> 2] + $363 * $351;
         $j$969 = $j$969 + 1 | 0;
         if (($j$969 | 0) == ($aSamples | 0)) {
          $$lcssa446 = $345;
          $$lcssa447 = $347;
          $$lcssa448 = $349;
          $$lcssa449 = $351;
          break;
         } else {
          $346 = $345;
          $348 = $347;
          $350 = $349;
          $352 = $351;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa446;
        HEAPF32[$9 >> 2] = $$lcssa447;
        HEAPF32[$15 >> 2] = $$lcssa448;
        HEAPF32[$17 >> 2] = $$lcssa449;
        break L88;
        break;
       }
      case 2:
       {
        if ($7) break L88;
        $290 = +HEAPF32[$pani >> 2];
        $291 = +HEAPF32[$8 >> 2];
        $292 = +HEAPF32[$14 >> 2];
        $293 = +HEAPF32[$16 >> 2];
        $382 = +HEAPF32[$pan >> 2];
        $384 = +HEAPF32[$9 >> 2];
        $386 = +HEAPF32[$15 >> 2];
        $388 = +HEAPF32[$17 >> 2];
        $j$1067 = 0;
        while (1) {
         $381 = $290 + $382;
         $383 = $291 + $384;
         $385 = $292 + $386;
         $387 = $293 + $388;
         $390 = +HEAPF32[$aScratch + ($j$1067 << 2) >> 2];
         $391 = $j$1067 + $aSamples | 0;
         $393 = +HEAPF32[$aScratch + ($391 << 2) >> 2];
         $395 = $aBuffer + ($j$1067 << 2) | 0;
         HEAPF32[$395 >> 2] = +HEAPF32[$395 >> 2] + $390 * $381;
         $399 = $aBuffer + ($391 << 2) | 0;
         HEAPF32[$399 >> 2] = +HEAPF32[$399 >> 2] + $393 * $383;
         $404 = $aBuffer + ($j$1067 + $10 << 2) | 0;
         HEAPF32[$404 >> 2] = +HEAPF32[$404 >> 2] + $390 * $385;
         $409 = $aBuffer + ($j$1067 + $13 << 2) | 0;
         HEAPF32[$409 >> 2] = +HEAPF32[$409 >> 2] + $393 * $387;
         $j$1067 = $j$1067 + 1 | 0;
         if (($j$1067 | 0) == ($aSamples | 0)) {
          $$lcssa442 = $381;
          $$lcssa443 = $383;
          $$lcssa444 = $385;
          $$lcssa445 = $387;
          break;
         } else {
          $382 = $381;
          $384 = $383;
          $386 = $385;
          $388 = $387;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa442;
        HEAPF32[$9 >> 2] = $$lcssa443;
        HEAPF32[$15 >> 2] = $$lcssa444;
        HEAPF32[$17 >> 2] = $$lcssa445;
        break L88;
        break;
       }
      case 1:
       {
        if ($7) break L88;
        $286 = +HEAPF32[$pani >> 2];
        $287 = +HEAPF32[$8 >> 2];
        $288 = +HEAPF32[$14 >> 2];
        $289 = +HEAPF32[$16 >> 2];
        $414 = +HEAPF32[$pan >> 2];
        $416 = +HEAPF32[$9 >> 2];
        $418 = +HEAPF32[$15 >> 2];
        $420 = +HEAPF32[$17 >> 2];
        $j$1165 = 0;
        while (1) {
         $413 = $286 + $414;
         $415 = $287 + $416;
         $417 = $288 + $418;
         $419 = $289 + $420;
         $422 = +HEAPF32[$aScratch + ($j$1165 << 2) >> 2];
         $424 = $aBuffer + ($j$1165 << 2) | 0;
         HEAPF32[$424 >> 2] = +HEAPF32[$424 >> 2] + $422 * $413;
         $429 = $aBuffer + ($j$1165 + $aSamples << 2) | 0;
         HEAPF32[$429 >> 2] = +HEAPF32[$429 >> 2] + $422 * $415;
         $434 = $aBuffer + ($j$1165 + $10 << 2) | 0;
         HEAPF32[$434 >> 2] = +HEAPF32[$434 >> 2] + $422 * $417;
         $439 = $aBuffer + ($j$1165 + $13 << 2) | 0;
         HEAPF32[$439 >> 2] = +HEAPF32[$439 >> 2] + $422 * $419;
         $j$1165 = $j$1165 + 1 | 0;
         if (($j$1165 | 0) == ($aSamples | 0)) {
          $$lcssa438 = $413;
          $$lcssa439 = $415;
          $$lcssa440 = $417;
          $$lcssa441 = $419;
          break;
         } else {
          $414 = $413;
          $416 = $415;
          $418 = $417;
          $420 = $419;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa438;
        HEAPF32[$9 >> 2] = $$lcssa439;
        HEAPF32[$15 >> 2] = $$lcssa440;
        HEAPF32[$17 >> 2] = $$lcssa441;
        break L88;
        break;
       }
      default:
       break L88;
      }
      break;
     }
    case 6:
     {
      switch (HEAP32[$28 + 60 >> 2] | 0) {
      case 6:
       {
        if ($7) break L88;
        $463 = +HEAPF32[$pani >> 2];
        $464 = +HEAPF32[$8 >> 2];
        $465 = +HEAPF32[$14 >> 2];
        $466 = +HEAPF32[$16 >> 2];
        $467 = +HEAPF32[$18 >> 2];
        $468 = +HEAPF32[$20 >> 2];
        $470 = +HEAPF32[$pan >> 2];
        $472 = +HEAPF32[$9 >> 2];
        $474 = +HEAPF32[$15 >> 2];
        $476 = +HEAPF32[$17 >> 2];
        $478 = +HEAPF32[$19 >> 2];
        $480 = +HEAPF32[$21 >> 2];
        $j$1263 = 0;
        while (1) {
         $469 = $463 + $470;
         $471 = $464 + $472;
         $473 = $465 + $474;
         $475 = $466 + $476;
         $477 = $467 + $478;
         $479 = $468 + $480;
         $483 = $j$1263 + $aSamples | 0;
         $485 = +HEAPF32[$aScratch + ($483 << 2) >> 2];
         $486 = $j$1263 + $10 | 0;
         $488 = +HEAPF32[$aScratch + ($486 << 2) >> 2];
         $489 = $j$1263 + $13 | 0;
         $491 = +HEAPF32[$aScratch + ($489 << 2) >> 2];
         $492 = $j$1263 + $11 | 0;
         $494 = +HEAPF32[$aScratch + ($492 << 2) >> 2];
         $495 = $j$1263 + $12 | 0;
         $497 = +HEAPF32[$aScratch + ($495 << 2) >> 2];
         $499 = $aBuffer + ($j$1263 << 2) | 0;
         HEAPF32[$499 >> 2] = +HEAPF32[$499 >> 2] + +HEAPF32[$aScratch + ($j$1263 << 2) >> 2] * $469;
         $503 = $aBuffer + ($483 << 2) | 0;
         HEAPF32[$503 >> 2] = +HEAPF32[$503 >> 2] + $485 * $471;
         $507 = $aBuffer + ($486 << 2) | 0;
         HEAPF32[$507 >> 2] = +HEAPF32[$507 >> 2] + $488 * $473;
         $511 = $aBuffer + ($489 << 2) | 0;
         HEAPF32[$511 >> 2] = +HEAPF32[$511 >> 2] + $491 * $475;
         $515 = $aBuffer + ($492 << 2) | 0;
         HEAPF32[$515 >> 2] = +HEAPF32[$515 >> 2] + $494 * $477;
         $519 = $aBuffer + ($495 << 2) | 0;
         HEAPF32[$519 >> 2] = +HEAPF32[$519 >> 2] + $497 * $479;
         $j$1263 = $j$1263 + 1 | 0;
         if (($j$1263 | 0) == ($aSamples | 0)) {
          $$lcssa432 = $469;
          $$lcssa433 = $471;
          $$lcssa434 = $473;
          $$lcssa435 = $475;
          $$lcssa436 = $477;
          $$lcssa437 = $479;
          break;
         } else {
          $470 = $469;
          $472 = $471;
          $474 = $473;
          $476 = $475;
          $478 = $477;
          $480 = $479;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa432;
        HEAPF32[$9 >> 2] = $$lcssa433;
        HEAPF32[$15 >> 2] = $$lcssa434;
        HEAPF32[$17 >> 2] = $$lcssa435;
        HEAPF32[$19 >> 2] = $$lcssa436;
        HEAPF32[$21 >> 2] = $$lcssa437;
        break L88;
        break;
       }
      case 4:
       {
        if ($7) break L88;
        $457 = +HEAPF32[$pani >> 2];
        $458 = +HEAPF32[$8 >> 2];
        $459 = +HEAPF32[$14 >> 2];
        $460 = +HEAPF32[$16 >> 2];
        $461 = +HEAPF32[$18 >> 2];
        $462 = +HEAPF32[$20 >> 2];
        $524 = +HEAPF32[$pan >> 2];
        $526 = +HEAPF32[$9 >> 2];
        $528 = +HEAPF32[$15 >> 2];
        $530 = +HEAPF32[$17 >> 2];
        $532 = +HEAPF32[$19 >> 2];
        $534 = +HEAPF32[$21 >> 2];
        $j$1361 = 0;
        while (1) {
         $523 = $457 + $524;
         $525 = $458 + $526;
         $527 = $459 + $528;
         $529 = $460 + $530;
         $531 = $461 + $532;
         $533 = $462 + $534;
         $536 = +HEAPF32[$aScratch + ($j$1361 << 2) >> 2];
         $537 = $j$1361 + $aSamples | 0;
         $539 = +HEAPF32[$aScratch + ($537 << 2) >> 2];
         $540 = $j$1361 + $10 | 0;
         $542 = +HEAPF32[$aScratch + ($540 << 2) >> 2];
         $543 = $j$1361 + $13 | 0;
         $545 = +HEAPF32[$aScratch + ($543 << 2) >> 2];
         $547 = $aBuffer + ($j$1361 << 2) | 0;
         HEAPF32[$547 >> 2] = +HEAPF32[$547 >> 2] + $536 * $523;
         $551 = $aBuffer + ($537 << 2) | 0;
         HEAPF32[$551 >> 2] = +HEAPF32[$551 >> 2] + $539 * $525;
         $554 = $536 + $539;
         $557 = $aBuffer + ($540 << 2) | 0;
         HEAPF32[$557 >> 2] = +HEAPF32[$557 >> 2] + $554 * .5 * $527;
         $564 = $aBuffer + ($543 << 2) | 0;
         HEAPF32[$564 >> 2] = +HEAPF32[$564 >> 2] + ($554 + $542 + $545) * .25 * $529;
         $569 = $aBuffer + ($j$1361 + $11 << 2) | 0;
         HEAPF32[$569 >> 2] = +HEAPF32[$569 >> 2] + $542 * $531;
         $574 = $aBuffer + ($j$1361 + $12 << 2) | 0;
         HEAPF32[$574 >> 2] = +HEAPF32[$574 >> 2] + $545 * $533;
         $j$1361 = $j$1361 + 1 | 0;
         if (($j$1361 | 0) == ($aSamples | 0)) {
          $$lcssa426 = $523;
          $$lcssa427 = $525;
          $$lcssa428 = $527;
          $$lcssa429 = $529;
          $$lcssa430 = $531;
          $$lcssa431 = $533;
          break;
         } else {
          $524 = $523;
          $526 = $525;
          $528 = $527;
          $530 = $529;
          $532 = $531;
          $534 = $533;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa426;
        HEAPF32[$9 >> 2] = $$lcssa427;
        HEAPF32[$15 >> 2] = $$lcssa428;
        HEAPF32[$17 >> 2] = $$lcssa429;
        HEAPF32[$19 >> 2] = $$lcssa430;
        HEAPF32[$21 >> 2] = $$lcssa431;
        break L88;
        break;
       }
      case 2:
       {
        if ($7) break L88;
        $451 = +HEAPF32[$pani >> 2];
        $452 = +HEAPF32[$8 >> 2];
        $453 = +HEAPF32[$14 >> 2];
        $454 = +HEAPF32[$16 >> 2];
        $455 = +HEAPF32[$18 >> 2];
        $456 = +HEAPF32[$20 >> 2];
        $579 = +HEAPF32[$pan >> 2];
        $581 = +HEAPF32[$9 >> 2];
        $583 = +HEAPF32[$15 >> 2];
        $585 = +HEAPF32[$17 >> 2];
        $587 = +HEAPF32[$19 >> 2];
        $589 = +HEAPF32[$21 >> 2];
        $j$1459 = 0;
        while (1) {
         $578 = $451 + $579;
         $580 = $452 + $581;
         $582 = $453 + $583;
         $584 = $454 + $585;
         $586 = $455 + $587;
         $588 = $456 + $589;
         $591 = +HEAPF32[$aScratch + ($j$1459 << 2) >> 2];
         $592 = $j$1459 + $aSamples | 0;
         $594 = +HEAPF32[$aScratch + ($592 << 2) >> 2];
         $596 = $aBuffer + ($j$1459 << 2) | 0;
         HEAPF32[$596 >> 2] = +HEAPF32[$596 >> 2] + $591 * $578;
         $600 = $aBuffer + ($592 << 2) | 0;
         HEAPF32[$600 >> 2] = +HEAPF32[$600 >> 2] + $594 * $580;
         $604 = ($591 + $594) * .5;
         $607 = $aBuffer + ($j$1459 + $10 << 2) | 0;
         HEAPF32[$607 >> 2] = +HEAPF32[$607 >> 2] + $604 * $582;
         $612 = $aBuffer + ($j$1459 + $13 << 2) | 0;
         HEAPF32[$612 >> 2] = +HEAPF32[$612 >> 2] + $604 * $584;
         $617 = $aBuffer + ($j$1459 + $11 << 2) | 0;
         HEAPF32[$617 >> 2] = +HEAPF32[$617 >> 2] + $591 * $586;
         $622 = $aBuffer + ($j$1459 + $12 << 2) | 0;
         HEAPF32[$622 >> 2] = +HEAPF32[$622 >> 2] + $594 * $588;
         $j$1459 = $j$1459 + 1 | 0;
         if (($j$1459 | 0) == ($aSamples | 0)) {
          $$lcssa420 = $578;
          $$lcssa421 = $580;
          $$lcssa422 = $582;
          $$lcssa423 = $584;
          $$lcssa424 = $586;
          $$lcssa425 = $588;
          break;
         } else {
          $579 = $578;
          $581 = $580;
          $583 = $582;
          $585 = $584;
          $587 = $586;
          $589 = $588;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa420;
        HEAPF32[$9 >> 2] = $$lcssa421;
        HEAPF32[$15 >> 2] = $$lcssa422;
        HEAPF32[$17 >> 2] = $$lcssa423;
        HEAPF32[$19 >> 2] = $$lcssa424;
        HEAPF32[$21 >> 2] = $$lcssa425;
        break L88;
        break;
       }
      case 1:
       {
        if ($7) break L88;
        $445 = +HEAPF32[$pani >> 2];
        $446 = +HEAPF32[$8 >> 2];
        $447 = +HEAPF32[$14 >> 2];
        $448 = +HEAPF32[$16 >> 2];
        $449 = +HEAPF32[$18 >> 2];
        $450 = +HEAPF32[$20 >> 2];
        $627 = +HEAPF32[$pan >> 2];
        $629 = +HEAPF32[$9 >> 2];
        $631 = +HEAPF32[$15 >> 2];
        $633 = +HEAPF32[$17 >> 2];
        $635 = +HEAPF32[$19 >> 2];
        $637 = +HEAPF32[$21 >> 2];
        $j$1557 = 0;
        while (1) {
         $626 = $445 + $627;
         $628 = $446 + $629;
         $630 = $447 + $631;
         $632 = $448 + $633;
         $634 = $449 + $635;
         $636 = $450 + $637;
         $639 = +HEAPF32[$aScratch + ($j$1557 << 2) >> 2];
         $641 = $aBuffer + ($j$1557 << 2) | 0;
         HEAPF32[$641 >> 2] = +HEAPF32[$641 >> 2] + $639 * $626;
         $646 = $aBuffer + ($j$1557 + $aSamples << 2) | 0;
         HEAPF32[$646 >> 2] = +HEAPF32[$646 >> 2] + $639 * $628;
         $651 = $aBuffer + ($j$1557 + $10 << 2) | 0;
         HEAPF32[$651 >> 2] = +HEAPF32[$651 >> 2] + $639 * $630;
         $656 = $aBuffer + ($j$1557 + $13 << 2) | 0;
         HEAPF32[$656 >> 2] = +HEAPF32[$656 >> 2] + $639 * $632;
         $661 = $aBuffer + ($j$1557 + $11 << 2) | 0;
         HEAPF32[$661 >> 2] = +HEAPF32[$661 >> 2] + $639 * $634;
         $666 = $aBuffer + ($j$1557 + $12 << 2) | 0;
         HEAPF32[$666 >> 2] = +HEAPF32[$666 >> 2] + $639 * $636;
         $j$1557 = $j$1557 + 1 | 0;
         if (($j$1557 | 0) == ($aSamples | 0)) {
          $$lcssa = $626;
          $$lcssa415 = $628;
          $$lcssa416 = $630;
          $$lcssa417 = $632;
          $$lcssa418 = $634;
          $$lcssa419 = $636;
          break;
         } else {
          $627 = $626;
          $629 = $628;
          $631 = $630;
          $633 = $632;
          $635 = $634;
          $637 = $636;
         }
        }
        HEAPF32[$pan >> 2] = $$lcssa;
        HEAPF32[$9 >> 2] = $$lcssa415;
        HEAPF32[$15 >> 2] = $$lcssa416;
        HEAPF32[$17 >> 2] = $$lcssa417;
        HEAPF32[$19 >> 2] = $$lcssa418;
        HEAPF32[$21 >> 2] = $$lcssa419;
        break L88;
        break;
       }
      default:
       break L88;
      }
      break;
     }
    default:
     {}
    } while (0);
    if (!$6) _memcpy($28 + 324 | 0, $pand | 0, $24 | 0) | 0;
   }
   if (!(HEAP32[$33 >> 2] & 1)) if (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 12 >> 2] & 63]($28) | 0) __ZN6SoLoud6Soloud9stopVoiceEj($this, HEAP32[$25 >> 2] | 0);
  } while (0);
  $i$191 = $i$191 + 1 | 0;
 } while ($i$191 >>> 0 < (HEAP32[$3 >> 2] | 0) >>> 0);
 STACKTOP = sp;
 return;
}

function __ZN2UI7OnFrameERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $$phi$trans$insert = 0, $$pre$phi65Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $103 = 0, $11 = 0, $112 = 0, $12 = 0, $120 = 0, $126 = 0, $13 = 0, $134 = 0, $14 = 0, $146 = 0, $15 = 0, $157 = 0, $16 = 0, $162 = 0, $163 = 0, $166 = 0, $168 = 0, $169 = 0, $17 = 0, $183 = 0, $189 = 0, $193 = 0, $194 = 0, $199 = 0, $2 = 0, $203 = 0, $207 = 0, $208 = 0, $213 = 0, $217 = 0, $221 = 0, $222 = 0, $227 = 0, $23 = 0, $233 = 0, $237 = 0, $239 = 0, $243 = 0, $244 = 0, $249 = 0, $25 = 0, $253 = 0, $257 = 0, $258 = 0, $264 = 0, $266 = 0, $272 = 0, $273 = 0, $279 = 0, $282 = 0, $288 = 0, $289 = 0, $29 = 0, $294 = 0, $3 = 0, $300 = 0, $304 = 0, $306 = 0, $310 = 0, $311 = 0, $316 = 0, $325 = 0, $331 = 0, $337 = 0, $338 = 0, $34 = 0, $343 = 0, $349 = 0, $350 = 0, $354 = 0, $358 = 0, $359 = 0, $364 = 0, $379 = 0, $38 = 0, $385 = 0, $389 = 0, $393 = 0, $395 = 0, $398 = 0, $4 = 0, $402 = 0, $403 = 0, $405 = 0, $408 = 0, $412 = 0, $415 = 0, $417 = 0, $418 = 0, $42 = 0, $421 = 0, $428 = 0, $435 = 0, $436 = 0, $438 = 0, $440 = 0, $444 = 0, $447 = 0, $451 = 0, $47 = 0, $5 = 0, $54 = 0, $55 = 0, $6 = 0, $60 = 0, $69 = 0, $7 = 0, $70 = 0, $72 = 0, $76 = 0, $77 = 0, $8 = 0, $9 = 0, $96 = 0, $97 = 0, $__begin$052 = 0, $__begin3$048 = 0, $i5$047$in = 0, $loadWindow = 0, $model$0 = 0, $strBuilder = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer18 = 0, $vararg_buffer21 = 0, $vararg_buffer24 = 0, $vararg_buffer27 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, dest = 0, label = 0, sp = 0, stop = 0, $i5$047$in$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $vararg_buffer27 = sp + 88 | 0;
 $vararg_buffer24 = sp + 80 | 0;
 $vararg_buffer21 = sp + 72 | 0;
 $vararg_buffer18 = sp + 64 | 0;
 $vararg_buffer15 = sp + 56 | 0;
 $vararg_buffer13 = sp + 48 | 0;
 $vararg_buffer10 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer4 = sp + 24 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $strBuilder = sp + 164 | 0;
 $0 = sp;
 $loadWindow = sp + 160 | 0;
 $1 = sp + 156 | 0;
 $2 = sp + 152 | 0;
 $3 = sp + 148 | 0;
 $4 = sp + 144 | 0;
 $5 = sp + 140 | 0;
 $6 = sp + 136 | 0;
 $7 = sp + 132 | 0;
 $8 = sp + 128 | 0;
 $9 = sp + 124 | 0;
 $10 = sp + 120 | 0;
 $11 = sp + 112 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 96 | 0;
 __ZN5Oryol13StringBuilderC2Ev($strBuilder);
 $14 = __ZN5Oryol5Clock3NowEv() | 0;
 $15 = tempRet0;
 $16 = $this + 1049432 | 0;
 $17 = $16;
 $23 = _i64Subtract($14 | 0, $15 | 0, HEAP32[$17 >> 2] | 0, HEAP32[$17 + 4 >> 2] | 0) | 0;
 $25 = $16;
 HEAP32[$25 >> 2] = $14;
 HEAP32[$25 + 4 >> 2] = $15;
 $29 = $0;
 HEAP32[$29 >> 2] = $23;
 HEAP32[$29 + 4 >> 2] = tempRet0;
 __ZN5Oryol4IMUI8NewFrameENS_8DurationE($0);
 $34 = HEAP16[$this + 1049464 >> 1] | 0;
 L1 : do if (!(($34 & 255) << 24 >> 24)) {
  $428 = $this + 1049465 | 0;
  if (($34 & 65535) >= 256) {
   __ZN5ImGui22SetNextWindowPosCenterEi(0);
   HEAPF32[$11 >> 2] = 0.0;
   HEAPF32[$11 + 4 >> 2] = 0.0;
   if (__ZN5ImGui5BeginEPKcPbRK6ImVec2fi(34448, $428, $11, .75, 131) | 0) {
    __ZN5ImGui4TextEPKcz(34453, $vararg_buffer13);
    HEAPF32[$12 >> 2] = 96.0;
    HEAPF32[$12 + 4 >> 2] = 0.0;
    __ZN5ImGui5DummyERK6ImVec2($12);
    __ZN5ImGui8SameLineEff(0.0, -1.0);
    HEAPF32[$13 >> 2] = 0.0;
    HEAPF32[$13 + 4 >> 2] = 0.0;
    if (__ZN5ImGui6ButtonEPKcRK6ImVec2(34491, $13) | 0) HEAP8[$428 >> 0] = 0;
   }
   __ZN5ImGui3EndEv();
  }
 } else {
  if (__ZN5ImGui16BeginMainMenuBarEv() | 0) {
   $38 = $kc + 725496 | 0;
   switch (HEAP32[$38 >> 2] | 0) {
   case 1:
    {
     $model$0 = 33920;
     break;
    }
   case 2:
    {
     $model$0 = 33903;
     break;
    }
   case 4:
    {
     $model$0 = 33910;
     break;
    }
   default:
    $model$0 = 33917;
   }
   if (__ZN5ImGui9BeginMenuEPKcb($model$0, 1) | 0) {
    if (__ZN5ImGui8MenuItemEPKcS1_bb(33927, 0, 0, 1) | 0) {
     $42 = __ZN5Oryol6Memory5AllocEi(24) | 0;
     HEAP32[$42 >> 2] = 0;
     HEAP32[$42 + 4 >> 2] = 0;
     HEAP32[$42 + 8 >> 2] = 0;
     HEAP32[$42 + 12 >> 2] = 0;
     HEAP32[$42 + 16 >> 2] = 0;
     HEAP32[$42 + 20 >> 2] = 0;
     HEAP32[$42 >> 2] = 824;
     HEAP8[$42 + 8 >> 0] = 1;
     __ZN5Oryol6StringC2Ev($42 + 12 | 0);
     HEAP32[$42 >> 2] = 1860;
     HEAP32[$42 + 20 >> 2] = 0;
     if (!$42) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33940);
      _abort();
     }
     $47 = $42 + 4 | 0;
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 1;
     HEAP32[$loadWindow >> 2] = $42;
     __ZN10LoadWindow13SetFileLoaderEP10FileLoader($42, $this + 12 | 0);
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$42 >> 2] | 0) + 12 >> 2] & 63]($42, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $loadWindow);
     $54 = $42 + 4 | 0;
     $55 = HEAP32[$54 >> 2] | 0;
     HEAP32[$54 >> 2] = $55 - 1;
     if (($55 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$42 >> 2] >> 2] & 255]($42);
    }
    do if (__ZN5ImGui8MenuItemEPKcS1_bb(34003, 0, 0, 1) | 0) {
     $60 = $kc + 725504 | 0;
     if (!(HEAP8[$60 >> 0] | 0)) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(34015, 0, 34024, 200, 34066);
      _abort();
     } else {
      __ZN4yakc6memory9unmap_allEv($kc + 65908 | 0);
      HEAP8[$60 >> 0] = 0;
      __ZN4yakc4kc857poweronENS_10kc85_modelENS_9kc85_caosE($kc, HEAP32[$38 >> 2] | 0, HEAP32[$kc + 725500 >> 2] | 0);
      break;
     }
    } while (0);
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34094, 0, 0, 1) | 0) {
     HEAP8[$kc + 462696 >> 0] = 0;
     $69 = $kc + 462860 | 0;
     $70 = HEAP32[$69 >> 2] | 0;
     if ($70 | 0) {
      $72 = $kc + 462864 | 0;
      FUNCTION_TABLE_viiii[$70 & 7](HEAP32[$72 >> 2] | 0, 0, 0, 0);
      FUNCTION_TABLE_viiii[HEAP32[$69 >> 2] & 7](HEAP32[$72 >> 2] | 0, 0, 0, 1);
     }
     $76 = $kc + 462868 | 0;
     HEAP8[$76 >> 0] = 2;
     HEAP8[$76 + 1 >> 0] = 0;
     $77 = $kc + 462870 | 0;
     HEAP8[$77 >> 0] = 2;
     HEAP8[$77 + 1 >> 0] = 0;
     HEAP8[$kc + 69284 >> 0] = 2;
     HEAP8[$kc + 69285 >> 0] = 0;
     HEAP32[$kc + 69288 >> 2] = 0;
     HEAP8[$kc + 69292 >> 0] = 0;
     HEAP8[$kc + 69332 >> 0] = 2;
     HEAP8[$kc + 69333 >> 0] = 0;
     HEAP32[$kc + 69336 >> 2] = 0;
     HEAP8[$kc + 69340 >> 0] = 0;
     HEAP8[$kc + 69380 >> 0] = 2;
     HEAP8[$kc + 69381 >> 0] = 0;
     HEAP32[$kc + 69384 >> 2] = 0;
     HEAP8[$kc + 69388 >> 0] = 0;
     HEAP8[$kc + 69428 >> 0] = 2;
     HEAP8[$kc + 69429 >> 0] = 0;
     HEAP32[$kc + 69432 >> 2] = 0;
     HEAP8[$kc + 69436 >> 0] = 0;
     HEAP8[$kc + 69257 >> 0] = 0;
     HEAP8[$kc + 69258 >> 0] = 0;
     $96 = $kc + 69260 | 0;
     HEAP8[$96 >> 0] = 0;
     HEAP8[$96 + 1 >> 0] = 0;
     HEAP8[$96 + 2 >> 0] = 0;
     HEAP8[$96 + 3 >> 0] = 0;
     $97 = $kc + 65642 | 0;
     HEAP8[$kc + 69252 >> 0] = 0;
     HEAP8[$kc + 69253 >> 0] = 0;
     $100 = $97;
     $101 = $100;
     HEAP16[$101 >> 1] = 0;
     HEAP16[$101 + 2 >> 1] = 0 >>> 16;
     $103 = $100 + 4 | 0;
     HEAP16[$103 >> 1] = 0;
     HEAP16[$103 + 2 >> 1] = 0 >>> 16;
     HEAP8[$kc + 725460 >> 0] = 0;
     HEAP8[$kc + 725461 >> 0] = 0;
     HEAP32[$kc + 725520 >> 2] = 0;
     HEAP16[$97 >> 1] = -8192;
    }
    if (__ZN5ImGui9BeginMenuEPKcb(34100, 1) | 0) {
     do if ((HEAP32[$kc + 463208 >> 2] | 0) != -1) if (__ZN5ImGui8MenuItemEPKcS1_bb(34115, 0, 0, 1) | 0) {
      $112 = $kc + 725504 | 0;
      if (!(HEAP8[$112 >> 0] | 0)) {
       __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(34015, 0, 34024, 200, 34066);
       _abort();
      } else {
       __ZN4yakc6memory9unmap_allEv($kc + 65908 | 0);
       HEAP8[$112 >> 0] = 0;
       __ZN4yakc4kc857poweronENS_10kc85_modelENS_9kc85_caosE($kc, 1, 0);
       break;
      }
     } while (0);
     do if ((HEAP32[$kc + 463216 >> 2] | 0) != -1) if (__ZN5ImGui8MenuItemEPKcS1_bb(34126, 0, 0, 1) | 0) {
      $120 = $kc + 725504 | 0;
      if (!(HEAP8[$120 >> 0] | 0)) {
       __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(34015, 0, 34024, 200, 34066);
       _abort();
      } else {
       __ZN4yakc6memory9unmap_allEv($kc + 65908 | 0);
       HEAP8[$120 >> 0] = 0;
       __ZN4yakc4kc857poweronENS_10kc85_modelENS_9kc85_caosE($kc, 1, 1);
       break;
      }
     } while (0);
     __ZN5ImGui7EndMenuEv();
    }
    if (__ZN5ImGui9BeginMenuEPKcb(34138, 1) | 0) {
     do if (__ZN5ImGui8MenuItemEPKcS1_bb(34153, 0, 0, 1) | 0) {
      $126 = $kc + 725504 | 0;
      if (!(HEAP8[$126 >> 0] | 0)) {
       __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(34015, 0, 34024, 200, 34066);
       _abort();
      } else {
       __ZN4yakc6memory9unmap_allEv($kc + 65908 | 0);
       HEAP8[$126 >> 0] = 0;
       __ZN4yakc4kc857poweronENS_10kc85_modelENS_9kc85_caosE($kc, 2, 2);
       break;
      }
     } while (0);
     do if ((HEAP32[$kc + 463232 >> 2] | 0) != -1) if (__ZN5ImGui8MenuItemEPKcS1_bb(34165, 0, 0, 1) | 0) {
      $134 = $kc + 725504 | 0;
      if (!(HEAP8[$134 >> 0] | 0)) {
       __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(34015, 0, 34024, 200, 34066);
       _abort();
      } else {
       __ZN4yakc6memory9unmap_allEv($kc + 65908 | 0);
       HEAP8[$134 >> 0] = 0;
       __ZN4yakc4kc857poweronENS_10kc85_modelENS_9kc85_caosE($kc, 2, 3);
       break;
      }
     } while (0);
     __ZN5ImGui7EndMenuEv();
    }
    if (__ZN5ImGui9BeginMenuEPKcb(34178, 1) | 0) {
     do if ((HEAP32[$kc + 463248 >> 2] | 0) != -1) if ((HEAP32[$kc + 463240 >> 2] | 0) != -1) if (__ZN5ImGui8MenuItemEPKcS1_bb(34193, 0, 0, 1) | 0) {
      $146 = $kc + 725504 | 0;
      if (!(HEAP8[$146 >> 0] | 0)) {
       __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(34015, 0, 34024, 200, 34066);
       _abort();
      } else {
       __ZN4yakc6memory9unmap_allEv($kc + 65908 | 0);
       HEAP8[$146 >> 0] = 0;
       __ZN4yakc4kc857poweronENS_10kc85_modelENS_9kc85_caosE($kc, 4, 4);
       break;
      }
     } while (0);
     do if ((HEAP32[$kc + 463264 >> 2] | 0) != -1) if ((HEAP32[$kc + 463256 >> 2] | 0) != -1) if (__ZN5ImGui8MenuItemEPKcS1_bb(34205, 0, 0, 1) | 0) {
      $157 = $kc + 725504 | 0;
      if (!(HEAP8[$157 >> 0] | 0)) {
       __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(34015, 0, 34024, 200, 34066);
       _abort();
      } else {
       __ZN4yakc6memory9unmap_allEv($kc + 65908 | 0);
       HEAP8[$157 >> 0] = 0;
       __ZN4yakc4kc857poweronENS_10kc85_modelENS_9kc85_caosE($kc, 4, 5);
       break;
      }
     } while (0);
     __ZN5ImGui7EndMenuEv();
    }
    __ZN5ImGui7EndMenuEv();
   }
   if (__ZN5ImGui9BeginMenuEPKcb(34217, 1) | 0) {
    $162 = $this + 12 | 0;
    $163 = HEAP32[$162 >> 2] | 0;
    if ($163 | 0) {
     $166 = HEAP32[$this + 20 >> 2] | 0;
     $168 = HEAP32[$this + 24 >> 2] | 0;
     $169 = $163 + ($168 * 20 | 0) | 0;
     if (($166 | 0) != ($168 | 0)) {
      $__begin$052 = $163 + ($166 * 20 | 0) | 0;
      do {
       if (HEAP32[$38 >> 2] & HEAP32[$__begin$052 + 16 >> 2] | 0) if (__ZN5ImGui8MenuItemEPKcS1_bb(__ZNK5Oryol6String6AsCStrEv($__begin$052) | 0, 0, 0, 1) | 0) __ZN10FileLoader12LoadAndStartERN4yakc4kc85ERKNS_4ItemE($162, $kc, $__begin$052);
       $__begin$052 = $__begin$052 + 20 | 0;
      } while (($__begin$052 | 0) != ($169 | 0));
     }
    }
    __ZN5ImGui7EndMenuEv();
   }
   if (__ZN5ImGui9BeginMenuEPKcb(34223, 1) | 0) {
    if (__ZN5ImGui8MenuItemEPKcS1_bb(36557, 0, 0, 1) | 0) {
     $183 = __ZN5Oryol6Memory5AllocEi(24) | 0;
     HEAP32[$183 >> 2] = 0;
     HEAP32[$183 + 4 >> 2] = 0;
     HEAP32[$183 + 8 >> 2] = 0;
     HEAP32[$183 + 12 >> 2] = 0;
     HEAP32[$183 + 16 >> 2] = 0;
     HEAP32[$183 + 20 >> 2] = 0;
     HEAP32[$183 >> 2] = 824;
     HEAP8[$183 + 8 >> 0] = 1;
     __ZN5Oryol6StringC2Ev($183 + 12 | 0);
     HEAP32[$183 >> 2] = 1052;
     HEAP8[$183 + 20 >> 0] = 0;
     HEAP8[$183 + 21 >> 0] = 0;
     if (!$183) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $189 = $183 + 4 | 0;
     HEAP32[$189 >> 2] = (HEAP32[$189 >> 2] | 0) + 1;
     HEAP32[$1 >> 2] = $183;
     FUNCTION_TABLE_vii[HEAP32[1064 >> 2] & 63]($183, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $1);
     $193 = $183 + 4 | 0;
     $194 = HEAP32[$193 >> 2] | 0;
     HEAP32[$193 >> 2] = $194 - 1;
     if (($194 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$183 >> 2] >> 2] & 255]($183);
     HEAP32[$1 >> 2] = 0;
    }
    if (__ZN5ImGui8MenuItemEPKcS1_bb(36296, 0, 0, 1) | 0) {
     $199 = __ZN5Oryol6Memory5AllocEi(20) | 0;
     HEAP32[$199 >> 2] = 0;
     HEAP32[$199 + 4 >> 2] = 0;
     HEAP32[$199 + 8 >> 2] = 0;
     HEAP32[$199 + 12 >> 2] = 0;
     HEAP32[$199 + 16 >> 2] = 0;
     HEAP32[$199 >> 2] = 824;
     HEAP8[$199 + 8 >> 0] = 1;
     __ZN5Oryol6StringC2Ev($199 + 12 | 0);
     HEAP32[$199 >> 2] = 1024;
     if (!$199) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $203 = $199 + 4 | 0;
     HEAP32[$203 >> 2] = (HEAP32[$203 >> 2] | 0) + 1;
     HEAP32[$2 >> 2] = $199;
     FUNCTION_TABLE_vii[HEAP32[1036 >> 2] & 63]($199, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $2);
     $207 = $199 + 4 | 0;
     $208 = HEAP32[$207 >> 2] | 0;
     HEAP32[$207 >> 2] = $208 - 1;
     if (($208 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$199 >> 2] >> 2] & 255]($199);
     HEAP32[$2 >> 2] = 0;
    }
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34981, 0, 0, 1) | 0) {
     $213 = __ZN5Oryol6Memory5AllocEi(20) | 0;
     HEAP32[$213 >> 2] = 0;
     HEAP32[$213 + 4 >> 2] = 0;
     HEAP32[$213 + 8 >> 2] = 0;
     HEAP32[$213 + 12 >> 2] = 0;
     HEAP32[$213 + 16 >> 2] = 0;
     HEAP32[$213 >> 2] = 824;
     HEAP8[$213 + 8 >> 0] = 1;
     __ZN5Oryol6StringC2Ev($213 + 12 | 0);
     HEAP32[$213 >> 2] = 796;
     if (!$213) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $217 = $213 + 4 | 0;
     HEAP32[$217 >> 2] = (HEAP32[$217 >> 2] | 0) + 1;
     HEAP32[$3 >> 2] = $213;
     FUNCTION_TABLE_vii[HEAP32[808 >> 2] & 63]($213, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $3);
     $221 = $213 + 4 | 0;
     $222 = HEAP32[$221 >> 2] | 0;
     HEAP32[$221 >> 2] = $222 - 1;
     if (($222 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$213 >> 2] >> 2] & 255]($213);
     HEAP32[$3 >> 2] = 0;
    }
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34232, 0, 0, 1) | 0) {
     $227 = __ZN5Oryol6Memory5AllocEi(52) | 0;
     dest = $227;
     stop = dest + 52 | 0;
     do {
      HEAP32[dest >> 2] = 0;
      dest = dest + 4 | 0;
     } while ((dest | 0) < (stop | 0));
     HEAP32[$227 >> 2] = 824;
     HEAP8[$227 + 8 >> 0] = 1;
     __ZN5Oryol6StringC2Ev($227 + 12 | 0);
     HEAP32[$227 >> 2] = 968;
     HEAP32[$227 + 20 >> 2] = 0;
     HEAP16[$227 + 30 >> 1] = 0;
     HEAP8[$227 + 32 >> 0] = 1;
     $233 = $227 + 24 | 0;
     HEAP32[$233 >> 2] = 0;
     HEAP8[$233 + 4 >> 0] = 0;
     HEAP32[$227 + 36 >> 2] = 0;
     HEAP16[$227 + 46 >> 1] = 0;
     HEAP8[$227 + 48 >> 0] = 1;
     $237 = $227 + 40 | 0;
     HEAP32[$237 >> 2] = 0;
     HEAP8[$237 + 4 >> 0] = 0;
     if (!$227) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $239 = $227 + 4 | 0;
     HEAP32[$239 >> 2] = (HEAP32[$239 >> 2] | 0) + 1;
     HEAP32[$4 >> 2] = $227;
     FUNCTION_TABLE_vii[HEAP32[980 >> 2] & 63]($227, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $4);
     $243 = $227 + 4 | 0;
     $244 = HEAP32[$243 >> 2] | 0;
     HEAP32[$243 >> 2] = $244 - 1;
     if (($244 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$227 >> 2] >> 2] & 255]($227);
     HEAP32[$4 >> 2] = 0;
    }
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34240, 0, 0, 1) | 0) {
     $249 = __ZN5Oryol6Memory5AllocEi(20) | 0;
     HEAP32[$249 >> 2] = 0;
     HEAP32[$249 + 4 >> 2] = 0;
     HEAP32[$249 + 8 >> 2] = 0;
     HEAP32[$249 + 12 >> 2] = 0;
     HEAP32[$249 + 16 >> 2] = 0;
     HEAP32[$249 >> 2] = 824;
     HEAP8[$249 + 8 >> 0] = 1;
     __ZN5Oryol6StringC2Ev($249 + 12 | 0);
     HEAP32[$249 >> 2] = 996;
     if (!$249) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $253 = $249 + 4 | 0;
     HEAP32[$253 >> 2] = (HEAP32[$253 >> 2] | 0) + 1;
     HEAP32[$5 >> 2] = $249;
     FUNCTION_TABLE_vii[HEAP32[1008 >> 2] & 63]($249, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $5);
     $257 = $249 + 4 | 0;
     $258 = HEAP32[$257 >> 2] | 0;
     HEAP32[$257 >> 2] = $258 - 1;
     if (($258 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$249 >> 2] >> 2] & 255]($249);
     HEAP32[$5 >> 2] = 0;
    }
    __ZN5ImGui7EndMenuEv();
   }
   if (__ZN5ImGui9BeginMenuEPKcb(34248, 1) | 0) {
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34258, 0, 0, 1) | 0) {
     $264 = __ZN5Oryol6Memory5AllocEi(404) | 0;
     _memset($264 | 0, 0, 404) | 0;
     __ZN11DebugWindowC2Ev($264);
     if (!$264) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $266 = $264 + 4 | 0;
     HEAP32[$266 >> 2] = (HEAP32[$266 >> 2] | 0) + 1;
     HEAP32[$6 >> 2] = $264;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$264 >> 2] | 0) + 12 >> 2] & 63]($264, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $6);
     $272 = $264 + 4 | 0;
     $273 = HEAP32[$272 >> 2] | 0;
     HEAP32[$272 >> 2] = $273 - 1;
     if (($273 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$264 >> 2] >> 2] & 255]($264);
     HEAP32[$6 >> 2] = 0;
    }
    if (__ZN5ImGui8MenuItemEPKcS1_bb(37624, 0, 0, 1) | 0) {
     $279 = __ZN5Oryol6Memory5AllocEi(1052) | 0;
     __ZN11AudioWindowC2EP5Audio($279, HEAP32[$this + 1051088 >> 2] | 0);
     if (!$279) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $282 = $279 + 4 | 0;
     HEAP32[$282 >> 2] = (HEAP32[$282 >> 2] | 0) + 1;
     HEAP32[$7 >> 2] = $279;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$279 >> 2] | 0) + 12 >> 2] & 63]($279, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $7);
     $288 = $279 + 4 | 0;
     $289 = HEAP32[$288 >> 2] | 0;
     HEAP32[$288 >> 2] = $289 - 1;
     if (($289 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$279 >> 2] >> 2] & 255]($279);
     HEAP32[$7 >> 2] = 0;
    }
    if (__ZN5ImGui8MenuItemEPKcS1_bb(35628, 0, 0, 1) | 0) {
     $294 = __ZN5Oryol6Memory5AllocEi(52) | 0;
     dest = $294;
     stop = dest + 52 | 0;
     do {
      HEAP32[dest >> 2] = 0;
      dest = dest + 4 | 0;
     } while ((dest | 0) < (stop | 0));
     HEAP32[$294 >> 2] = 824;
     HEAP8[$294 + 8 >> 0] = 1;
     __ZN5Oryol6StringC2Ev($294 + 12 | 0);
     HEAP32[$294 >> 2] = 940;
     HEAP32[$294 + 20 >> 2] = 0;
     HEAP16[$294 + 30 >> 1] = 0;
     HEAP8[$294 + 32 >> 0] = 1;
     $300 = $294 + 24 | 0;
     HEAP32[$300 >> 2] = 0;
     HEAP8[$300 + 4 >> 0] = 0;
     HEAP32[$294 + 36 >> 2] = 0;
     HEAP16[$294 + 46 >> 1] = 0;
     HEAP8[$294 + 48 >> 0] = 1;
     $304 = $294 + 40 | 0;
     HEAP32[$304 >> 2] = 0;
     HEAP8[$304 + 4 >> 0] = 0;
     if (!$294) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $306 = $294 + 4 | 0;
     HEAP32[$306 >> 2] = (HEAP32[$306 >> 2] | 0) + 1;
     HEAP32[$8 >> 2] = $294;
     FUNCTION_TABLE_vii[HEAP32[952 >> 2] & 63]($294, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $8);
     $310 = $294 + 4 | 0;
     $311 = HEAP32[$310 >> 2] | 0;
     HEAP32[$310 >> 2] = $311 - 1;
     if (($311 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$294 >> 2] >> 2] & 255]($294);
     HEAP32[$8 >> 2] = 0;
    }
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34930, 0, 0, 1) | 0) {
     $316 = __ZN5Oryol6Memory5AllocEi(136) | 0;
     _memset($316 | 0, 0, 136) | 0;
     HEAP32[$316 >> 2] = 824;
     HEAP8[$316 + 8 >> 0] = 1;
     __ZN5Oryol6StringC2Ev($316 + 12 | 0);
     HEAP32[$316 >> 2] = 768;
     HEAP8[$316 + 20 >> 0] = 1;
     HEAP32[$316 + 24 >> 2] = 16;
     HEAP32[$316 + 28 >> 2] = -1;
     HEAP8[$316 + 32 >> 0] = 0;
     HEAP8[$316 + 21 >> 0] = 1;
     HEAP16[$316 + 130 >> 1] = 0;
     $325 = $316 + 132 | 0;
     HEAP16[$325 >> 1] = 4096;
     HEAP32[$vararg_buffer >> 2] = 0;
     _sprintf($316 + 65 | 0, 34992, $vararg_buffer) | 0;
     HEAP32[$vararg_buffer1 >> 2] = HEAPU16[$325 >> 1];
     _sprintf($316 + 97 | 0, 34992, $vararg_buffer1) | 0;
     if (!$316) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $331 = $316 + 4 | 0;
     HEAP32[$331 >> 2] = (HEAP32[$331 >> 2] | 0) + 1;
     HEAP32[$9 >> 2] = $316;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$316 >> 2] | 0) + 12 >> 2] & 63]($316, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $9);
     $337 = $316 + 4 | 0;
     $338 = HEAP32[$337 >> 2] | 0;
     HEAP32[$337 >> 2] = $338 - 1;
     if (($338 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$316 >> 2] >> 2] & 255]($316);
     HEAP32[$9 >> 2] = 0;
    }
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34271, 0, 0, 1) | 0) {
     $343 = __ZN5Oryol6Memory5AllocEi(60) | 0;
     dest = $343;
     stop = dest + 60 | 0;
     do {
      HEAP32[dest >> 2] = 0;
      dest = dest + 4 | 0;
     } while ((dest | 0) < (stop | 0));
     HEAP32[$343 >> 2] = 824;
     HEAP8[$343 + 8 >> 0] = 1;
     __ZN5Oryol6StringC2Ev($343 + 12 | 0);
     HEAP32[$343 >> 2] = 1888;
     HEAP32[$343 + 20 >> 2] = 0;
     HEAP16[$343 + 30 >> 1] = 0;
     HEAP8[$343 + 32 >> 0] = 1;
     $349 = $343 + 24 | 0;
     HEAP32[$349 >> 2] = 0;
     HEAP8[$349 + 4 >> 0] = 0;
     $350 = $343 + 36 | 0;
     HEAP32[$350 >> 2] = 0;
     HEAP32[$350 + 4 >> 2] = 0;
     HEAP32[$350 + 8 >> 2] = 0;
     HEAP32[$350 + 12 >> 2] = 0;
     HEAP32[$343 + 52 >> 2] = 16;
     HEAP32[$343 + 56 >> 2] = 65536;
     if (!$343) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
      _abort();
     }
     $354 = $343 + 4 | 0;
     HEAP32[$354 >> 2] = (HEAP32[$354 >> 2] | 0) + 1;
     HEAP32[$10 >> 2] = $343;
     FUNCTION_TABLE_vii[HEAP32[1900 >> 2] & 63]($343, $kc);
     __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this + 1049440 | 0, $10);
     $358 = $343 + 4 | 0;
     $359 = HEAP32[$358 >> 2] | 0;
     HEAP32[$358 >> 2] = $359 - 1;
     if (($359 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$343 >> 2] >> 2] & 255]($343);
     HEAP32[$10 >> 2] = 0;
    }
    $364 = $this + 120 | 0;
    if (__ZN5ImGui9BeginMenuEPKcb(34292, 1) | 0) {
     HEAP32[$vararg_buffer4 >> 2] = 0;
     __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 34306, $vararg_buffer4) | 0;
     if (__ZN5ImGui8MenuItemEPKcS1_bb(__ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0, 0, 1) | 0) __ZN15SnapshotStorage12TakeSnapshotERKN4yakc4kc85Ei($364, $kc, 0);
     HEAP32[$vararg_buffer7 >> 2] = 1;
     __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 34306, $vararg_buffer7) | 0;
     if (__ZN5ImGui8MenuItemEPKcS1_bb(__ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0, 0, 1) | 0) __ZN15SnapshotStorage12TakeSnapshotERKN4yakc4kc85Ei($364, $kc, 1);
     HEAP32[$vararg_buffer24 >> 2] = 2;
     __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 34306, $vararg_buffer24) | 0;
     if (__ZN5ImGui8MenuItemEPKcS1_bb(__ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0, 0, 1) | 0) __ZN15SnapshotStorage12TakeSnapshotERKN4yakc4kc85Ei($364, $kc, 2);
     HEAP32[$vararg_buffer27 >> 2] = 3;
     __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 34306, $vararg_buffer27) | 0;
     if (__ZN5ImGui8MenuItemEPKcS1_bb(__ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0, 0, 1) | 0) __ZN15SnapshotStorage12TakeSnapshotERKN4yakc4kc85Ei($364, $kc, 3);
     __ZN5ImGui7EndMenuEv();
    }
    if (__ZNK15SnapshotStorage12HasSnapshotsEv($364) | 0) if (__ZN5ImGui9BeginMenuEPKcb(34318, 1) | 0) {
     do if (__ZNK15SnapshotStorage11HasSnapshotEi($364, 0) | 0) {
      HEAP32[$vararg_buffer10 >> 2] = 0;
      __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 34306, $vararg_buffer10) | 0;
      if (!(__ZN5ImGui8MenuItemEPKcS1_bb(__ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0, 0, 1) | 0)) break;
      __ZN15SnapshotStorage13ApplySnapshotEiRN4yakc4kc85E($364, 0, $kc);
     } while (0);
     do if (__ZNK15SnapshotStorage11HasSnapshotEi($364, 1) | 0) {
      HEAP32[$vararg_buffer15 >> 2] = 1;
      __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 34306, $vararg_buffer15) | 0;
      if (!(__ZN5ImGui8MenuItemEPKcS1_bb(__ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0, 0, 1) | 0)) break;
      __ZN15SnapshotStorage13ApplySnapshotEiRN4yakc4kc85E($364, 1, $kc);
     } while (0);
     do if (__ZNK15SnapshotStorage11HasSnapshotEi($364, 2) | 0) {
      HEAP32[$vararg_buffer18 >> 2] = 2;
      __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 34306, $vararg_buffer18) | 0;
      if (!(__ZN5ImGui8MenuItemEPKcS1_bb(__ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0, 0, 1) | 0)) break;
      __ZN15SnapshotStorage13ApplySnapshotEiRN4yakc4kc85E($364, 2, $kc);
     } while (0);
     do if (__ZNK15SnapshotStorage11HasSnapshotEi($364, 3) | 0) {
      HEAP32[$vararg_buffer21 >> 2] = 3;
      __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 34306, $vararg_buffer21) | 0;
      if (!(__ZN5ImGui8MenuItemEPKcS1_bb(__ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0, 0, 1) | 0)) break;
      __ZN15SnapshotStorage13ApplySnapshotEiRN4yakc4kc85E($364, 3, $kc);
     } while (0);
     __ZN5ImGui7EndMenuEv();
    }
    __ZN5ImGui7EndMenuEv();
   }
   if (__ZN5ImGui9BeginMenuEPKcb(34333, 1) | 0) {
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34342, 0, (HEAP8[$this >> 0] | 0) != 0, 1) | 0) {
     $379 = HEAP16[$this >> 1] | 0;
     HEAP8[$this >> 0] = $379 & 255 ^ 1;
     $$pre$phiZ2D = $this + 1 | 0;
     $385 = ($379 & 65535) >>> 8 & 255;
    } else {
     $$phi$trans$insert = $this + 1 | 0;
     $$pre$phiZ2D = $$phi$trans$insert;
     $385 = HEAP8[$$phi$trans$insert >> 0] | 0;
    }
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34353, 0, $385 << 24 >> 24 != 0, 1) | 0) HEAP8[$$pre$phiZ2D >> 0] = HEAP8[$$pre$phiZ2D >> 0] ^ 1;
    $389 = $this + 4 | 0;
    __ZN5ImGui11SliderFloatEPKcPfffS1_f(34362, $389, 0.0, .0625, 126797, 1.0) | 0;
    if (__ZN5ImGui8MenuItemEPKcS1_bb(34371, 0, 0, 1) | 0) {
     HEAP8[$this >> 0] = 0;
     HEAP8[$$pre$phiZ2D >> 0] = 1;
     HEAP16[$this + 2 >> 1] = 0;
     HEAPF32[$389 >> 2] = .015625;
     HEAP32[$this + 8 >> 2] = 1;
    }
    $393 = $this + 1049466 | 0;
    if (__ZN5ImGui8MenuItemEPKcS1_Pbb(34389, 0, $393, 1) | 0) {
     HEAP8[$393 >> 0] = 1;
     $395 = $this + 1049467 | 0;
     HEAP8[$395 >> 0] = 0;
     _memcpy(__ZN5ImGui8GetStyleEv() | 0, $this + 1049472 | 0, 808) | 0;
     $398 = $this + 1049592 | 0;
     HEAP32[36632] = HEAP32[$398 >> 2];
     HEAP32[36633] = HEAP32[$398 + 4 >> 2];
     HEAP32[36634] = HEAP32[$398 + 8 >> 2];
     HEAP32[36635] = HEAP32[$398 + 12 >> 2];
     HEAPF32[36644] = 0.0;
     HEAPF32[36645] = 1.0;
     HEAPF32[36646] = 0.0;
     HEAPF32[36647] = 1.0;
     HEAP32[36636] = HEAP32[36644];
     HEAP32[36637] = HEAP32[36645];
     HEAP32[36638] = HEAP32[36646];
     HEAP32[36639] = HEAP32[36647];
     HEAPF32[36648] = 1.0;
     HEAPF32[36649] = 0.0;
     HEAPF32[36650] = 0.0;
     HEAPF32[36651] = 1.0;
     HEAP32[36640] = HEAP32[36648];
     HEAP32[36641] = HEAP32[36649];
     HEAP32[36642] = HEAP32[36650];
     HEAP32[36643] = HEAP32[36651];
     HEAPF32[36652] = 1.0;
     HEAPF32[36653] = .5;
     HEAPF32[36654] = .25;
     HEAPF32[36655] = 1.0;
     HEAPF32[36656] = 1.0;
     HEAPF32[36657] = 1.0;
     HEAPF32[36658] = 1.0;
     HEAPF32[36659] = 1.0;
     HEAPF32[36660] = 1.0;
     HEAPF32[36661] = 0.0;
     HEAPF32[36662] = 1.0;
     HEAPF32[36663] = 1.0;
     HEAP32[36664] = -1;
     HEAP32[36665] = -1;
     $$pre$phi65Z2D = $395;
    } else $$pre$phi65Z2D = $this + 1049467 | 0;
    if (__ZN5ImGui8MenuItemEPKcS1_Pbb(34403, 0, $$pre$phi65Z2D, 1) | 0) {
     HEAP8[$$pre$phi65Z2D >> 0] = 1;
     HEAP8[$393 >> 0] = 0;
     _memcpy(__ZN5ImGui8GetStyleEv() | 0, $this + 1050280 | 0, 808) | 0;
     $402 = $this + 1050400 | 0;
     HEAP32[36632] = HEAP32[$402 >> 2];
     HEAP32[36633] = HEAP32[$402 + 4 >> 2];
     HEAP32[36634] = HEAP32[$402 + 8 >> 2];
     HEAP32[36635] = HEAP32[$402 + 12 >> 2];
     HEAPF32[36636] = 0.0;
     HEAPF32[36637] = 0.0;
     HEAPF32[36638] = 1.0;
     HEAPF32[36639] = 1.0;
     HEAPF32[36640] = 1.0;
     HEAPF32[36641] = 0.0;
     HEAPF32[36642] = 0.0;
     HEAPF32[36643] = 1.0;
     HEAPF32[36652] = 1.0;
     HEAPF32[36653] = 0.0;
     HEAPF32[36654] = 0.0;
     HEAPF32[36655] = 1.0;
     HEAPF32[36656] = 0.0;
     HEAPF32[36657] = 0.0;
     HEAPF32[36658] = 0.0;
     HEAPF32[36659] = 1.0;
     HEAPF32[36660] = 1.0;
     HEAPF32[36661] = 0.0;
     HEAPF32[36662] = 1.0;
     HEAPF32[36663] = 1.0;
     HEAP32[36664] = -16777216;
     HEAP32[36665] = -16777216;
    }
    $403 = $this + 1049468 | 0;
    if (__ZN5ImGui8MenuItemEPKcS1_Pbb(34418, 0, $403, 1) | 0) {
     $405 = HEAP8[$403 >> 0] | 0;
     HEAP8[(__ZN5ImGui8GetStyleEv() | 0) + 112 >> 0] = $405;
     $408 = HEAP8[$403 >> 0] | 0;
     HEAP8[$this + 1049584 >> 0] = $408;
     HEAP8[$this + 1050392 >> 0] = $408;
    }
    __ZN5ImGui7EndMenuEv();
   }
   __ZN5ImGui14EndMainMenuBarEv();
  }
  $412 = HEAP32[$this + 1049440 >> 2] | 0;
  if ($412 | 0) {
   $415 = HEAP32[$this + 1049448 >> 2] | 0;
   $417 = HEAP32[$this + 1049452 >> 2] | 0;
   $418 = $412 + ($417 << 2) | 0;
   if (($415 | 0) != ($417 | 0)) {
    $__begin3$048 = $412 + ($415 << 2) | 0;
    while (1) {
     $421 = HEAP32[$__begin3$048 >> 2] | 0;
     if (!$421) break;
     FUNCTION_TABLE_iii[HEAP32[(HEAP32[$421 >> 2] | 0) + 16 >> 2] & 31]($421, $kc) | 0;
     $__begin3$048 = $__begin3$048 + 4 | 0;
     if (($__begin3$048 | 0) == ($418 | 0)) break L1;
    }
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
    _abort();
   }
  }
 } while (0);
 __ZN5ImGui6RenderEv();
 $435 = $this + 1049440 | 0;
 $436 = $this + 1049452 | 0;
 $438 = $this + 1049448 | 0;
 $440 = (HEAP32[$436 >> 2] | 0) - (HEAP32[$438 >> 2] | 0) | 0;
 if (($440 | 0) <= 0) {
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return;
 }
 $i5$047$in = $440;
 while (1) {
  $i5$047$in$looptemp = $i5$047$in;
  $i5$047$in = $i5$047$in + -1 | 0;
  if (($i5$047$in$looptemp | 0) <= 0) {
   label = 176;
   break;
  }
  $444 = HEAP32[$438 >> 2] | 0;
  if (((HEAP32[$436 >> 2] | 0) - $444 | 0) < ($i5$047$in$looptemp | 0)) {
   label = 176;
   break;
  }
  $447 = HEAP32[$435 >> 2] | 0;
  if (!$447) {
   label = 178;
   break;
  }
  $451 = HEAP32[$447 + ($444 + $i5$047$in << 2) >> 2] | 0;
  if (!$451) {
   label = 180;
   break;
  }
  if (!(HEAP8[$451 + 8 >> 0] | 0)) __ZN5Oryol5_priv13elementBufferINS_3PtrI10WindowBaseEEE5eraseEi($435, $i5$047$in);
  if (($i5$047$in$looptemp | 0) <= 1) {
   label = 173;
   break;
  }
 }
 if ((label | 0) == 173) {
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 176) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 34499);
  _abort();
 } else if ((label | 0) == 178) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 34499);
  _abort();
 } else if ((label | 0) == 180) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 33536);
  _abort();
 }
}

function __ZN5ImGui8NewFrameEv() {
 var $$23$i47 = 0, $$idx11$pre$phiZZ2D = 0, $$idx18$val145 = 0.0, $$idx18$val146 = 0.0, $$idx29 = 0, $$idx29$val = 0.0, $$idx30 = 0, $$idx30$val = 0.0, $$idx4$i = 0, $$idx4$val$i = 0.0, $$idx5$i = 0, $$idx5$val$i = 0.0, $$idx6$i = 0, $$idx6$i41 = 0, $$idx6$val$i = 0.0, $$idx6$val$us$us$i = 0.0, $$idx7$i = 0, $$idx7$i42 = 0, $$idx7$val$i = 0.0, $$idx7$val$i$lcssa = 0.0, $$idx7$val$us$us$i = 0.0, $$idx7$val$us$us$i$lcssa = 0.0, $$idx8 = 0, $$idx8$val = 0.0, $$idx9 = 0, $$idx9$val = 0.0, $$lcssa192 = 0, $$lcssa194 = 0, $$lcssa197 = 0, $$lcssa197$lcssa = 0, $$lcssa199 = 0, $$lcssa199$lcssa = 0, $$lcssa202 = 0, $$pr80 = 0, $$pre = 0, $$pre$i$i = 0, $$pre$phi133Z2D = 0, $$pre$phi137Z2D = 0, $$pre$phi139Z2D = 0, $$pre$phiZ2D = 0, $$pre123 = 0, $$pre124 = 0, $$pre125 = 0, $$pre127$pre$phiZZ2D = 0, $$pre128$pre$phiZZ2D = 0, $$pre134 = 0, $$pre143 = 0, $0 = 0, $10 = 0, $101 = 0, $106 = 0.0, $107 = 0.0, $124 = 0, $126 = 0, $129 = 0, $132 = 0.0, $142 = 0, $150 = 0.0, $153 = 0, $158 = 0, $159 = 0, $164 = 0, $167 = 0, $171 = 0, $174 = 0, $175 = 0, $176 = 0.0, $178 = 0, $182 = 0, $185 = 0, $186 = 0.0, $189 = 0.0, $194 = 0.0, $197 = 0, $202 = 0, $203 = 0, $207 = 0, $208 = 0, $211 = 0, $217 = 0, $219 = 0, $220 = 0, $225 = 0, $226 = 0, $230 = 0.0, $234 = 0.0, $235 = 0, $237 = 0, $239 = 0.0, $240 = 0, $245 = 0.0, $246 = 0.0, $25 = 0, $250 = 0.0, $254 = 0, $259 = 0, $260 = 0, $267 = 0, $268 = 0.0, $269 = 0.0, $270 = 0.0, $273 = 0.0, $277 = 0.0, $278 = 0, $280 = 0, $283 = 0, $293 = 0, $297 = 0, $30 = 0, $303 = 0.0, $307 = 0.0, $309 = 0, $311 = 0, $312 = 0, $319 = 0, $32 = 0, $323 = 0, $324 = 0.0, $327 = 0.0, $329 = 0.0, $33 = 0, $330 = 0.0, $332 = 0, $333 = 0, $337 = 0, $34 = 0, $342 = 0, $352 = 0, $353 = 0, $357 = 0, $361 = 0, $362 = 0, $366 = 0, $383 = 0, $39 = 0, $390 = 0, $396 = 0, $400 = 0.0, $404 = 0, $406 = 0, $408 = 0, $42 = 0, $421 = 0, $426 = 0, $44 = 0, $446 = 0, $447 = 0, $448 = 0, $457 = 0, $466 = 0.0, $477 = 0, $478 = 0.0, $480 = 0.0, $484 = 0.0, $485 = 0.0, $486 = 0.0, $493 = 0.0, $494 = 0.0, $497 = 0, $500 = 0, $505 = 0, $508 = 0, $512 = 0, $519 = 0, $520 = 0.0, $529 = 0.0, $530 = 0, $532 = 0.0, $535 = 0, $541 = 0, $549 = 0, $55 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $557 = 0, $559 = 0, $562 = 0, $567 = 0, $568 = 0, $57 = 0, $572 = 0, $574 = 0, $579 = 0, $580 = 0, $581 = 0, $584 = 0, $586 = 0, $589 = 0, $59 = 0, $594 = 0, $595 = 0, $599 = 0, $60 = 0, $601 = 0, $606 = 0, $607 = 0, $610 = 0, $614 = 0, $615 = 0, $617 = 0, $620 = 0, $626 = 0, $63 = 0, $634 = 0, $635 = 0, $638 = 0, $639 = 0, $645 = 0, $646 = 0, $649 = 0, $654 = 0, $655 = 0, $659 = 0, $661 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $670 = 0, $674 = 0, $675 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $69 = 0, $82 = 0, $84 = 0, $86 = 0, $9 = 0, $90 = 0, $94 = 0, $file_size$i = 0, $i$0$in$ph$i = 0, $i$0$in$ph$us$i = 0, $i$0102 = 0, $i$019$i$lcssa = 0, $i$019$in$i = 0, $i$019$us$us$i$lcssa = 0, $i$019$us$us$in$i = 0, $i$04$i$i = 0, $i$04$i$i$lcssa200 = 0, $i$i = 0, $i1$0101 = 0, $i2$097 = 0, $i3$096 = 0, $line_end$0$lcssa$i = 0, $line_end$0$lcssa23$i = 0, $line_end$0$lcssa24$i = 0, $line_end$011$i = 0, $line_start$017$i = 0, $m$010$i = 0, $mouse_any_down$0$off099 = 0, $mouse_earliest_button_down$0100 = 0, $mouse_earliest_button_down$1 = 0, $mouse_earliest_button_down$1$lcssa = 0, $n$011$i = 0, $n$1$i = 0, $name$i = 0, $settings$016$i = 0, $settings$1$i = 0, $settings$2$i = 0, $storemerge = 0.0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, $y$i = 0, label = 0, sp = 0, $i$019$us$us$in$i$looptemp = 0, $i$019$in$i$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer12 = sp + 24 | 0;
 $vararg_buffer8 = sp + 16 | 0;
 $vararg_buffer4 = sp + 8 | 0;
 $vararg_buffer = sp;
 $file_size$i = sp + 104 | 0;
 $name$i = sp + 40 | 0;
 $y$i = sp + 32 | 0;
 $i$i = sp + 28 | 0;
 $0 = 146904;
 if (!(+HEAPF32[$0 >> 2] >= 0.0)) ___assert_fail(125754, 124187, 1877, 125777);
 if (!(+HEAPF32[36724] >= 0.0)) ___assert_fail(125786, 124187, 1878, 125777);
 if (!(+HEAPF32[36725] >= 0.0)) ___assert_fail(125786, 124187, 1878, 125777);
 $9 = 147020;
 $10 = HEAP32[$9 >> 2] | 0;
 if ((HEAP32[$10 + 32 >> 2] | 0) <= 0) ___assert_fail(125843, 124187, 1879, 125777);
 if (!(HEAP32[(HEAP32[HEAP32[$10 + 40 >> 2] >> 2] | 0) + 36 >> 2] | 0)) ___assert_fail(125870, 124187, 1880, 125777);
 if (!(+HEAPF32[38013] > 0.0)) ___assert_fail(125903, 124187, 1881, 125777);
 if (!(HEAP8[146892] | 0)) {
  $25 = 147664;
  HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
  $30 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63](12) | 0;
  HEAP32[39501] = $30;
  $32 = $30 + 4 | 0;
  HEAP32[$32 >> 2] = 0;
  HEAP32[$30 >> 2] = 0;
  $33 = $30 + 8 | 0;
  HEAP32[$33 >> 2] = 0;
  $34 = 147664;
  HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 1;
  $39 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63](8) | 0;
  _memcpy($39 | 0, HEAP32[$33 >> 2] | 0, HEAP32[$30 >> 2] | 0) | 0;
  $42 = HEAP32[$33 >> 2] | 0;
  if ($42 | 0) {
   $44 = 147664;
   HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + -1;
  }
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($42);
  HEAP32[$33 >> 2] = $39;
  HEAP32[$32 >> 2] = 8;
  $$pre$i$i = HEAP32[$30 >> 2] | 0;
  HEAP32[$30 >> 2] = $$pre$i$i + 1;
  HEAP8[$39 + $$pre$i$i >> 0] = 0;
  if (HEAP32[38216] | 0) ___assert_fail(125939, 124187, 1889, 125777);
  $55 = HEAP32[36728] | 0;
  if ($55 | 0) {
   $57 = __Z18ImLoadFileToMemoryPKcS0_Pii($55, 125958, $file_size$i, 1) | 0;
   if ($57 | 0) {
    $59 = HEAP32[$file_size$i >> 2] | 0;
    $60 = $57 + $59 | 0;
    L31 : do if (($59 | 0) > 0) {
     $$idx4$i = 151948;
     $$idx5$i = 151952;
     $line_start$017$i = $57;
     $settings$016$i = 0;
     L33 : while (1) {
      do if ($line_start$017$i >>> 0 < $60 >>> 0) {
       $line_end$011$i = $line_start$017$i;
       L36 : while (1) {
        switch (HEAP8[$line_end$011$i >> 0] | 0) {
        case 13:
        case 10:
         {
          $line_end$0$lcssa$i = $line_end$011$i;
          break L36;
          break;
         }
        default:
         {}
        }
        $69 = $line_end$011$i + 1 | 0;
        if ($69 >>> 0 < $60 >>> 0) $line_end$011$i = $69; else {
         $line_end$0$lcssa$i = $69;
         break;
        }
       }
       if ($line_end$0$lcssa$i >>> 0 > $line_start$017$i >>> 0 & (HEAP8[$line_start$017$i >> 0] | 0) == 91) {
        if ((HEAP8[$line_end$0$lcssa$i + -1 >> 0] | 0) != 93) {
         $line_end$0$lcssa24$i = $line_end$0$lcssa$i;
         label = 36;
         break;
        }
        HEAP32[$vararg_buffer >> 2] = -2 - $line_start$017$i + $line_end$0$lcssa$i;
        HEAP32[$vararg_buffer + 4 >> 2] = $line_start$017$i + 1;
        __Z14ImFormatStringPciPKcz($name$i, 64, 125961, $vararg_buffer) | 0;
        $82 = __Z6ImHashPKvij($name$i, 0, 0) | 0;
        $84 = HEAP32[38216] | 0;
        L42 : do if (!$84) label = 34; else {
         $86 = 152872;
         $i$04$i$i = 0;
         while (1) {
          if (($84 | 0) <= ($i$04$i$i | 0)) break L33;
          $90 = HEAP32[$86 >> 2] | 0;
          if ((HEAP32[$90 + ($i$04$i$i * 28 | 0) + 4 >> 2] | 0) == ($82 | 0)) {
           $$lcssa202 = $90;
           $i$04$i$i$lcssa200 = $i$04$i$i;
           break;
          }
          $i$04$i$i = $i$04$i$i + 1 | 0;
          if (($i$04$i$i | 0) == ($84 | 0)) {
           label = 34;
           break L42;
          }
         }
         $94 = $$lcssa202 + ($i$04$i$i$lcssa200 * 28 | 0) | 0;
         if (!$94) label = 34; else $settings$1$i = $94;
        } while (0);
        if ((label | 0) == 34) {
         label = 0;
         $settings$1$i = __ZL17AddWindowSettingsPKc($name$i) | 0;
        }
        $line_end$0$lcssa23$i = $line_end$0$lcssa$i;
        $settings$2$i = $settings$1$i;
       } else {
        $line_end$0$lcssa24$i = $line_end$0$lcssa$i;
        label = 36;
       }
      } else {
       $line_end$0$lcssa24$i = $line_start$017$i;
       label = 36;
      } while (0);
      if ((label | 0) == 36) {
       label = 0;
       if (!$settings$016$i) {
        $line_end$0$lcssa23$i = $line_end$0$lcssa24$i;
        $settings$2$i = 0;
       } else {
        HEAP32[$vararg_buffer4 >> 2] = $name$i;
        HEAP32[$vararg_buffer4 + 4 >> 2] = $y$i;
        do if ((_sscanf($line_start$017$i, 125966, $vararg_buffer4) | 0) == 2) {
         $101 = HEAP32[$y$i >> 2] | 0;
         HEAP32[$settings$016$i + 8 >> 2] = HEAP32[$name$i >> 2];
         HEAP32[$settings$016$i + 12 >> 2] = $101;
        } else {
         HEAP32[$vararg_buffer8 >> 2] = $name$i;
         HEAP32[$vararg_buffer8 + 4 >> 2] = $y$i;
         if ((_sscanf($line_start$017$i, 125976, $vararg_buffer8) | 0) == 2) {
          $106 = +HEAPF32[$name$i >> 2];
          $107 = +HEAPF32[$y$i >> 2];
          $$idx4$val$i = +HEAPF32[$$idx4$i >> 2];
          $$idx5$val$i = +HEAPF32[$$idx5$i >> 2];
          HEAPF32[$settings$016$i + 16 >> 2] = $106 >= $$idx4$val$i ? $106 : $$idx4$val$i;
          HEAPF32[$settings$016$i + 20 >> 2] = $107 >= $$idx5$val$i ? $107 : $$idx5$val$i;
          break;
         }
         HEAP32[$vararg_buffer12 >> 2] = $i$i;
         if ((_sscanf($line_start$017$i, 125987, $vararg_buffer12) | 0) != 1) break;
         HEAP8[$settings$016$i + 24 >> 0] = (HEAP32[$i$i >> 2] | 0) != 0 & 1;
        } while (0);
        $line_end$0$lcssa23$i = $line_end$0$lcssa24$i;
        $settings$2$i = $settings$016$i;
       }
      }
      $line_start$017$i = $line_end$0$lcssa23$i + 1 | 0;
      if ($line_start$017$i >>> 0 >= $60 >>> 0) break L31; else $settings$016$i = $settings$2$i;
     }
     ___assert_fail(127217, 127226, 805, 127272);
    } while (0);
    $63 = 147664;
    HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + -1;
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($57);
   }
  }
  HEAP8[146892] = 1;
  $$pre = HEAP32[$9 >> 2] | 0;
  if ((HEAP32[$$pre + 32 >> 2] | 0) > 0) $124 = $$pre; else ___assert_fail(127217, 127226, 805, 127272);
 } else $124 = $10;
 $126 = HEAP32[HEAP32[$124 + 40 >> 2] >> 2] | 0;
 if (!$126) ___assert_fail(125406, 124187, 4320, 125431);
 $129 = HEAP32[$126 + 36 >> 2] | 0;
 if (!$129) ___assert_fail(125406, 124187, 4320, 125431);
 $132 = +HEAPF32[$126 + 4 >> 2];
 if (!($132 > 0.0)) ___assert_fail(125446, 124187, 4321, 125431);
 HEAP32[38186] = $126;
 HEAPF32[38188] = $132 * (+HEAPF32[36756] * +HEAPF32[$126 >> 2]);
 $142 = HEAP32[38201] | 0;
 if (!$142) $150 = 0.0; else $150 = +HEAPF32[38188] * +HEAPF32[$142 + 568 >> 2];
 HEAPF32[38187] = $150;
 $153 = $129 + 24 | 0;
 $158 = HEAP32[$153 + 4 >> 2] | 0;
 $159 = 152756;
 HEAP32[$159 >> 2] = HEAP32[$153 >> 2];
 HEAP32[$159 + 4 >> 2] = $158;
 $164 = 152764;
 HEAPF32[$164 >> 2] = +HEAPF32[$0 >> 2] + +HEAPF32[$164 >> 2];
 $167 = 152768;
 HEAP32[$167 >> 2] = (HEAP32[$167 >> 2] | 0) + 1;
 HEAP8[156952] = 0;
 $171 = 153052;
 __ZN10ImDrawList5ClearEv($171);
 __ZN10ImDrawList13PushTextureIDERKPv($171, HEAP32[$9 >> 2] | 0);
 __ZN10ImDrawList22PushClipRectFullScreenEv($171);
 __ZN10ImDrawList10AddDrawCmdEv($171);
 HEAP8[152992] = 0;
 $174 = 152996;
 $175 = 147084;
 HEAP32[$174 >> 2] = 0;
 HEAP32[$174 + 4 >> 2] = 0;
 HEAP32[$174 + 8 >> 2] = 0;
 HEAP32[$174 + 12 >> 2] = 0;
 $176 = +HEAPF32[$175 >> 2];
 if ($176 < 0.0) {
  $178 = 147088;
  if (+HEAPF32[$178 >> 2] < 0.0) {
   HEAP32[$175 >> 2] = -971228160;
   HEAP32[$178 >> 2] = -971228160;
   $$idx18$val146 = -9999.0;
   label = 59;
  } else label = 58;
 } else label = 58;
 if ((label | 0) == 58) if ($176 < 0.0) {
  $$idx18$val146 = $176;
  label = 59;
 } else {
  $$idx18$val145 = $176;
  label = 61;
 }
 if ((label | 0) == 59) {
  $182 = 147088;
  if (+HEAPF32[$182 >> 2] < 0.0) {
   $$pre127$pre$phiZZ2D = 147680;
   $$pre128$pre$phiZZ2D = $182;
   label = 62;
  } else {
   $$idx18$val145 = $$idx18$val146;
   label = 61;
  }
 }
 if ((label | 0) == 61) {
  $185 = 147680;
  $186 = +HEAPF32[$185 >> 2];
  $189 = +HEAPF32[36921];
  $$pre143 = 147088;
  if ($186 < 0.0 & $189 < 0.0) {
   $$pre127$pre$phiZZ2D = $185;
   $$pre128$pre$phiZZ2D = $$pre143;
   label = 62;
  } else {
   $194 = +HEAPF32[$$pre143 >> 2] - $189;
   HEAPF32[36922] = $$idx18$val145 - $186;
   HEAPF32[36923] = $194;
   $$idx11$pre$phiZZ2D = $$pre143;
   $$pre$phiZ2D = $185;
  }
 }
 if ((label | 0) == 62) {
  HEAP32[36922] = 0;
  HEAP32[36923] = 0;
  $$idx11$pre$phiZZ2D = $$pre128$pre$phiZZ2D;
  $$pre$phiZ2D = $$pre127$pre$phiZZ2D;
 }
 $197 = $175;
 $202 = HEAP32[$197 + 4 >> 2] | 0;
 $203 = $$pre$phiZ2D;
 HEAP32[$203 >> 2] = HEAP32[$197 >> 2];
 HEAP32[$203 + 4 >> 2] = $202;
 $207 = 146920;
 $208 = 146924;
 $i$0102 = 0;
 do {
  $211 = 147092 + $i$0102 | 0;
  if (!(HEAP8[$211 >> 0] | 0)) {
   $219 = 147696 + $i$0102 | 0;
   HEAP8[$219 >> 0] = 0;
   $220 = 147780 + ($i$0102 << 2) | 0;
   $$pre$phi133Z2D = $220;
   $225 = +HEAPF32[$220 >> 2] >= 0.0;
   $237 = $219;
  } else {
   $217 = 147696 + $i$0102 | 0;
   HEAP8[$217 >> 0] = +HEAPF32[147780 + ($i$0102 << 2) >> 2] < 0.0 & 1;
   $$pre$phi133Z2D = 147780 + ($i$0102 << 2) | 0;
   $225 = 0;
   $237 = $217;
  }
  HEAP8[147769 + $i$0102 >> 0] = $225 & 1;
  $226 = HEAP32[$$pre$phi133Z2D >> 2] | 0;
  HEAP32[147800 + ($i$0102 << 2) >> 2] = $226;
  $230 = (HEAP32[tempDoublePtr >> 2] = $226, +HEAPF32[tempDoublePtr >> 2]);
  if (!(HEAP8[$211 >> 0] | 0)) $234 = -1.0; else if ($230 < 0.0) $234 = 0.0; else $234 = $230 + +HEAPF32[$0 >> 2];
  HEAPF32[$$pre$phi133Z2D >> 2] = $234;
  $235 = 147764 + $i$0102 | 0;
  HEAP8[$235 >> 0] = 0;
  if (!(HEAP8[$237 >> 0] | 0)) {
   if (HEAP8[$211 >> 0] | 0) {
    $267 = 147820 + ($i$0102 << 2) | 0;
    $268 = +HEAPF32[$267 >> 2];
    $269 = +HEAPF32[$175 >> 2] - +HEAPF32[147704 + ($i$0102 << 3) >> 2];
    $270 = +HEAPF32[$$idx11$pre$phiZZ2D >> 2] - +HEAPF32[147704 + ($i$0102 << 3) + 4 >> 2];
    $273 = $269 * $269 + $270 * $270;
    HEAPF32[$267 >> 2] = $268 >= $273 ? $268 : $273;
   }
  } else {
   $239 = +HEAPF32[$164 >> 2];
   $240 = 147744 + ($i$0102 << 2) | 0;
   if ($239 - +HEAPF32[$240 >> 2] < +HEAPF32[$207 >> 2]) {
    $245 = +HEAPF32[$175 >> 2] - +HEAPF32[147704 + ($i$0102 << 3) >> 2];
    $246 = +HEAPF32[$$idx11$pre$phiZZ2D >> 2] - +HEAPF32[147704 + ($i$0102 << 3) + 4 >> 2];
    $250 = +HEAPF32[$208 >> 2];
    if ($245 * $245 + $246 * $246 < $250 * $250) {
     HEAP8[$235 >> 0] = 1;
     $storemerge = -3402823466385288598117041.0e14;
    } else $storemerge = -3402823466385288598117041.0e14;
   } else $storemerge = $239;
   HEAPF32[$240 >> 2] = $storemerge;
   $254 = $175;
   $259 = HEAP32[$254 + 4 >> 2] | 0;
   $260 = 147704 + ($i$0102 << 3) | 0;
   HEAP32[$260 >> 2] = HEAP32[$254 >> 2];
   HEAP32[$260 + 4 >> 2] = $259;
   HEAPF32[147820 + ($i$0102 << 2) >> 2] = 0.0;
  }
  $i$0102 = $i$0102 + 1 | 0;
 } while (($i$0102 | 0) != 5);
 _memcpy(149888, 147840, 2048) | 0;
 $i1$0101 = 0;
 do {
  $$pre134 = 147840 + ($i1$0101 << 2) | 0;
  if (!(HEAP8[147108 + $i1$0101 >> 0] | 0)) $307 = -1.0; else {
   $303 = +HEAPF32[$$pre134 >> 2];
   if ($303 < 0.0) $307 = 0.0; else $307 = $303 + +HEAPF32[$0 >> 2];
  }
  HEAPF32[$$pre134 >> 2] = $307;
  $i1$0101 = $i1$0101 + 1 | 0;
 } while (($i1$0101 | 0) != 512);
 $277 = +HEAPF32[$0 >> 2];
 $278 = 158496;
 $280 = 158016 + (HEAP32[$278 >> 2] << 2) | 0;
 $283 = 158500;
 HEAPF32[$283 >> 2] = +HEAPF32[$283 >> 2] + ($277 - +HEAPF32[$280 >> 2]);
 HEAPF32[$280 >> 2] = $277;
 HEAP32[$278 >> 2] = ((HEAP32[$278 >> 2] | 0) + 1 | 0) % 120 | 0;
 HEAPF32[36915] = 1.0 / (+HEAPF32[$283 >> 2] / 120.0);
 $293 = 152832;
 HEAP32[38210] = HEAP32[$293 >> 2];
 HEAP32[$293 >> 2] = 0;
 HEAP8[152836] = 0;
 $297 = 152852;
 if (!(HEAP8[$297 >> 0] | 0)) {
  $309 = 152848;
  $311 = 152844;
  $312 = HEAP32[$311 >> 2] | 0;
  if (($312 | 0) == 0 ? 1 : (HEAP32[$309 >> 2] | 0) != ($312 | 0)) {
   $$pre$phi137Z2D = $311;
   $$pre$phi139Z2D = $309;
  } else {
   HEAP32[38211] = 0;
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = 0;
   $$pre$phi137Z2D = $311;
   $$pre$phi139Z2D = $309;
  }
 } else {
  $$pre$phi137Z2D = 152844;
  $$pre$phi139Z2D = 152848;
 }
 $319 = HEAP32[$$pre$phi137Z2D >> 2] | 0;
 HEAP32[$$pre$phi139Z2D >> 2] = $319;
 HEAP8[$297 >> 0] = 0;
 HEAP8[152853] = 0;
 if (!$319) HEAP32[38215] = 0;
 $323 = 152876;
 $324 = +HEAPF32[$323 >> 2];
 if ($324 > 0.0) {
  $327 = $324 - +HEAPF32[$0 >> 2];
  HEAPF32[$323 >> 2] = $327;
  if ($327 <= 0.0) __ZL12SaveSettingsv();
 }
 $329 = +HEAPF32[$175 >> 2];
 $330 = +HEAPF32[$$idx11$pre$phiZZ2D >> 2];
 $332 = HEAP32[38195] | 0;
 $333 = 152788;
 $$idx6$i = 151996;
 $$idx7$i = 152e3;
 $i$0$in$ph$us$i = $332;
 L135 : while (1) {
  if (($i$0$in$ph$us$i | 0) <= 0) {
   label = 103;
   break;
  }
  if (($i$0$in$ph$us$i | 0) > ($332 | 0)) {
   label = 102;
   break;
  }
  $$pre123 = HEAP32[$333 >> 2] | 0;
  $i$019$us$us$in$i = $i$0$in$ph$us$i;
  L139 : while (1) {
   $i$019$us$us$in$i$looptemp = $i$019$us$us$in$i;
   $i$019$us$us$in$i = $i$019$us$us$in$i + -1 | 0;
   $337 = HEAP32[$$pre123 + ($i$019$us$us$in$i << 2) >> 2] | 0;
   do if (HEAP8[$337 + 112 >> 0] | 0) {
    $342 = HEAP32[$337 + 8 >> 2] | 0;
    if ($342 & 512 | 0) break;
    $$idx6$val$us$us$i = +HEAPF32[$$idx6$i >> 2];
    $$idx7$val$us$us$i = +HEAPF32[$$idx7$i >> 2];
    if ((+HEAPF32[$337 + 452 >> 2] - $$idx6$val$us$us$i <= $329 ? +HEAPF32[$337 + 456 >> 2] - $$idx7$val$us$us$i <= $330 : 0) & $$idx6$val$us$us$i + +HEAPF32[$337 + 460 >> 2] > $329) {
     $$idx7$val$us$us$i$lcssa = $$idx7$val$us$us$i;
     $$lcssa197 = $337;
     $$lcssa199 = $342;
     $i$019$us$us$i$lcssa = $i$019$us$us$in$i;
     break L139;
    }
   } while (0);
   if (($i$019$us$us$in$i$looptemp | 0) <= 1) {
    label = 103;
    break L135;
   }
  }
  if ($$idx7$val$us$us$i$lcssa + +HEAPF32[$$lcssa197 + 464 >> 2] > $330) {
   $$lcssa197$lcssa = $$lcssa197;
   $$lcssa199$lcssa = $$lcssa199;
   label = 104;
   break;
  } else $i$0$in$ph$us$i = $i$019$us$us$i$lcssa;
 }
 if ((label | 0) == 102) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 103) {
  $352 = 152824;
  HEAP32[$352 >> 2] = 0;
  $681 = $352;
  label = 106;
 } else if ((label | 0) == 104) {
  $353 = 152824;
  HEAP32[$353 >> 2] = $$lcssa197$lcssa;
  if (!($$lcssa199$lcssa & 1048576)) {
   $681 = $353;
   label = 106;
  } else {
   $357 = HEAP32[$$lcssa197$lcssa + 576 >> 2] | 0;
   HEAP32[38207] = $357;
   $404 = $357;
   $406 = $353;
  }
 }
 do if ((label | 0) == 106) {
  $361 = HEAP32[38195] | 0;
  $362 = 152788;
  $$idx6$i41 = 151996;
  $$idx7$i42 = 152e3;
  $i$0$in$ph$i = $361;
  L153 : while (1) {
   if (($i$0$in$ph$i | 0) <= 0) {
    $$23$i47 = 0;
    label = 116;
    break;
   }
   if (($i$0$in$ph$i | 0) > ($361 | 0)) {
    label = 111;
    break;
   }
   $$pre124 = HEAP32[$362 >> 2] | 0;
   $i$019$in$i = $i$0$in$ph$i;
   L157 : while (1) {
    $i$019$in$i$looptemp = $i$019$in$i;
    $i$019$in$i = $i$019$in$i + -1 | 0;
    $366 = HEAP32[$$pre124 + ($i$019$in$i << 2) >> 2] | 0;
    do if (HEAP8[$366 + 112 >> 0] | 0) {
     if (HEAP32[$366 + 8 >> 2] & 1049088 | 0) break;
     $$idx6$val$i = +HEAPF32[$$idx6$i41 >> 2];
     $$idx7$val$i = +HEAPF32[$$idx7$i42 >> 2];
     if ((+HEAPF32[$366 + 452 >> 2] - $$idx6$val$i <= $329 ? +HEAPF32[$366 + 456 >> 2] - $$idx7$val$i <= $330 : 0) & $$idx6$val$i + +HEAPF32[$366 + 460 >> 2] > $329) {
      $$idx7$val$i$lcssa = $$idx7$val$i;
      $$lcssa194 = $366;
      $i$019$i$lcssa = $i$019$in$i;
      break L157;
     }
    } while (0);
    if (($i$019$in$i$looptemp | 0) <= 1) {
     $$23$i47 = 0;
     label = 116;
     break L153;
    }
   }
   if ($$idx7$val$i$lcssa + +HEAPF32[$$lcssa194 + 464 >> 2] > $330) {
    $$23$i47 = $$lcssa194;
    label = 116;
    break;
   } else $i$0$in$ph$i = $i$019$i$lcssa;
  }
  if ((label | 0) == 111) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 116) {
   HEAP32[38207] = $$23$i47;
   $404 = $$23$i47;
   $406 = $681;
   break;
  }
 } while (0);
 $383 = HEAP32[38229] | 0;
 do if (!$383) label = 124; else {
  if (($383 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
  $390 = HEAP32[(HEAP32[38231] | 0) + (($383 + -1 | 0) * 24 | 0) + 4 >> 2] | 0;
  if (!$390) label = 124; else if (!(HEAP32[$390 + 8 >> 2] & 67108864)) label = 124; else {
   $396 = 153048;
   $400 = +HEAPF32[$396 >> 2] + +HEAPF32[$0 >> 2] * 6.0;
   HEAPF32[$396 >> 2] = $400 < 1.0 ? $400 : 1.0;
   if (($404 | 0) == ($390 | 0)) break;
   HEAP32[$406 >> 2] = 0;
   HEAP32[38207] = 0;
  }
 } while (0);
 if ((label | 0) == 124) HEAPF32[38262] = 0.0;
 $408 = 152916;
 $i2$097 = 0;
 $mouse_any_down$0$off099 = 0;
 $mouse_earliest_button_down$0100 = -1;
 while (1) {
  if (HEAP8[147696 + $i2$097 >> 0] | 0) HEAP8[147774 + $i2$097 >> 0] = ((HEAP32[$406 >> 2] | 0) == 0 ? (HEAP32[$408 >> 2] | 0) != 0 : 1) & 1;
  $421 = HEAP8[147092 + $i2$097 >> 0] | 0;
  $426 = ($421 & 255 | $mouse_any_down$0$off099 & 1 | 0) != 0;
  do if (!($421 << 24 >> 24)) $mouse_earliest_button_down$1 = $mouse_earliest_button_down$0100; else {
   if (($mouse_earliest_button_down$0100 | 0) != -1) if (!(+HEAPF32[147744 + ($mouse_earliest_button_down$0100 << 2) >> 2] > +HEAPF32[147744 + ($i2$097 << 2) >> 2])) {
    $mouse_earliest_button_down$1 = $mouse_earliest_button_down$0100;
    break;
   }
   $mouse_earliest_button_down$1 = $i2$097;
  } while (0);
  $i2$097 = $i2$097 + 1 | 0;
  if (($i2$097 | 0) == 5) {
   $$lcssa192 = $426;
   $mouse_earliest_button_down$1$lcssa = $mouse_earliest_button_down$1;
   break;
  } else {
   $mouse_any_down$0$off099 = $426;
   $mouse_earliest_button_down$0100 = $mouse_earliest_button_down$1;
  }
 }
 if (($mouse_earliest_button_down$1$lcssa | 0) == -1) label = 135; else if (!(HEAP8[147774 + $mouse_earliest_button_down$1$lcssa >> 0] | 0)) {
  $682 = 1;
  label = 136;
 } else label = 135;
 if ((label | 0) == 135) if ((HEAP32[$406 >> 2] | 0) == 0 & ($$lcssa192 ^ 1)) {
  $682 = 0;
  label = 136;
 } else {
  $446 = 1;
  $683 = 0;
 }
 if ((label | 0) == 136) if ((HEAP32[$$pre$phi137Z2D >> 2] | 0) == 0 & (HEAP32[$408 >> 2] | 0) == 0) {
  $446 = HEAP8[158504] | 0;
  $683 = $682;
 } else {
  $446 = 1;
  $683 = $682;
 }
 HEAP8[147654] = $446;
 $447 = HEAP32[$$pre$phi137Z2D >> 2] | 0;
 $448 = ($447 | 0) == 0;
 if ($448) {
  HEAP8[147655] = HEAP8[158505] | 0;
  $457 = 0;
 } else {
  HEAP8[147655] = 1;
  $457 = (HEAP32[38382] | 0) == ($447 | 0) & 1;
 }
 HEAP8[147656] = $457;
 HEAP32[38290] = 0;
 HEAP8[158505] = 0;
 HEAP8[158504] = 0;
 HEAP32[39495] = 1065353216;
 HEAP32[39496] = 1065353216;
 do if ($683) {
  HEAP32[38207] = 0;
  HEAP32[$406 >> 2] = 0;
 } else {
  $$pr80 = HEAP32[$406 >> 2] | 0;
  if (!$$pr80) break;
  $466 = +HEAPF32[36775];
  if (!($466 != 0.0)) break;
  if (HEAP8[$$pr80 + 115 >> 0] | 0) break;
  if (!(HEAP8[147105] | 0)) {
   $512 = HEAP32[$$pr80 + 8 >> 2] | 0;
   if ($512 & 16 | 0) break;
   $519 = $$pr80 + 76 | 0;
   $520 = +HEAPF32[$519 >> 2];
   $529 = $520 - +(($512 >>> 22 & 2 ^ 2) + 3 | 0) * ($466 * (+HEAPF32[38188] * +HEAPF32[$$pr80 + 568 >> 2]));
   $530 = $$pr80 + 192 | 0;
   $532 = $520 + +HEAPF32[$530 >> 2];
   HEAPF32[$519 >> 2] = $529;
   HEAPF32[$530 >> 2] = $532 - $529;
   break;
  } else {
   if (!(HEAP8[147028] | 0)) break;
   $477 = $$pr80 + 568 | 0;
   $478 = +HEAPF32[$477 >> 2];
   $480 = $466 * .10000000149011612 + $478;
   $484 = $480 < .5 ? .5 : $480 > 2.5 ? 2.5 : $480;
   $485 = $484 / $478;
   HEAPF32[$477 >> 2] = $484;
   $486 = 1.0 - $485;
   $$idx29 = $$pr80 + 28 | 0;
   $$idx29$val = +HEAPF32[$$idx29 >> 2];
   $$idx30 = $$pr80 + 32 | 0;
   $$idx30$val = +HEAPF32[$$idx30 >> 2];
   $$idx8 = $$pr80 + 20 | 0;
   $$idx8$val = +HEAPF32[$$idx8 >> 2];
   $$idx9 = $$pr80 + 24 | 0;
   $$idx9$val = +HEAPF32[$$idx9 >> 2];
   $493 = $$idx29$val * $486 * (+HEAPF32[$175 >> 2] - $$idx8$val) / $$idx29$val;
   $494 = $$idx30$val * $486 * (+HEAPF32[$$idx11$pre$phiZZ2D >> 2] - $$idx9$val) / $$idx30$val;
   HEAPF32[$$idx8 >> 2] = $$idx8$val + $493;
   HEAPF32[$$idx9 >> 2] = $$idx9$val + $494;
   $497 = $$pr80 + 12 | 0;
   HEAPF32[$497 >> 2] = $493 + +HEAPF32[$497 >> 2];
   $500 = $$pr80 + 16 | 0;
   HEAPF32[$500 >> 2] = $494 + +HEAPF32[$500 >> 2];
   HEAPF32[$$idx29 >> 2] = $485 * $$idx29$val;
   HEAPF32[$$idx30 >> 2] = $485 * $$idx30$val;
   $505 = $$pr80 + 36 | 0;
   HEAPF32[$505 >> 2] = $485 * +HEAPF32[$505 >> 2];
   $508 = $$pr80 + 40 | 0;
   HEAPF32[$508 >> 2] = $485 * +HEAPF32[$508 >> 2];
   break;
  }
 } while (0);
 do if ($448) {
  $535 = HEAP32[38205] | 0;
  if (!$535) break;
  if (!(HEAP8[$535 + 112 >> 0] | 0)) break;
  $541 = HEAP32[36733] | 0;
  if (($541 | 0) < 0) break;
  if ($541 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
  if (!(+HEAPF32[147840 + ($541 << 2) >> 2] == 0.0)) break;
  HEAP32[$535 + 604 >> 2] = 0;
 } while (0);
 $549 = HEAP32[38195] | 0;
 L225 : do if ($549 | 0) {
  $551 = 152788;
  $i3$096 = 0;
  while (1) {
   if (($549 | 0) <= ($i3$096 | 0)) break;
   $674 = HEAP32[(HEAP32[$551 >> 2] | 0) + ($i3$096 << 2) >> 2] | 0;
   $675 = $674 + 112 | 0;
   HEAP8[$674 + 113 >> 0] = HEAP8[$675 >> 0] | 0;
   HEAP8[$675 >> 0] = 0;
   HEAP8[$674 + 114 >> 0] = 0;
   $i3$096 = $i3$096 + 1 | 0;
   if (($i3$096 | 0) == ($549 | 0)) break L225;
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 $552 = 152808;
 $553 = 152812;
 $554 = HEAP32[$553 >> 2] | 0;
 do if (($554 | 0) < 0) {
  $557 = (($554 | 0) / 2 | 0) + $554 | 0;
  $559 = ($557 | 0) > 0 ? $557 : 0;
  if (($554 | 0) >= ($559 | 0)) break;
  $562 = 147664;
  HEAP32[$562 >> 2] = (HEAP32[$562 >> 2] | 0) + 1;
  $567 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($559 << 2) | 0;
  $568 = 152816;
  _memcpy($567 | 0, HEAP32[$568 >> 2] | 0, HEAP32[$552 >> 2] << 2 | 0) | 0;
  $572 = HEAP32[$568 >> 2] | 0;
  if ($572 | 0) {
   $574 = 147664;
   HEAP32[$574 >> 2] = (HEAP32[$574 >> 2] | 0) + -1;
  }
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($572);
  HEAP32[$568 >> 2] = $567;
  HEAP32[$553 >> 2] = $559;
 } while (0);
 HEAP32[$552 >> 2] = 0;
 $579 = 152928;
 $580 = 152932;
 $581 = HEAP32[$580 >> 2] | 0;
 do if (($581 | 0) < 0) {
  $584 = (($581 | 0) / 2 | 0) + $581 | 0;
  $586 = ($584 | 0) > 0 ? $584 : 0;
  if (($581 | 0) >= ($586 | 0)) break;
  $589 = 147664;
  HEAP32[$589 >> 2] = (HEAP32[$589 >> 2] | 0) + 1;
  $594 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($586 * 24 | 0) | 0;
  $595 = 152936;
  _memcpy($594 | 0, HEAP32[$595 >> 2] | 0, (HEAP32[$579 >> 2] | 0) * 24 | 0) | 0;
  $599 = HEAP32[$595 >> 2] | 0;
  if ($599 | 0) {
   $601 = 147664;
   HEAP32[$601 >> 2] = (HEAP32[$601 >> 2] | 0) + -1;
  }
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($599);
  HEAP32[$595 >> 2] = $594;
  HEAP32[$580 >> 2] = $586;
 } while (0);
 HEAP32[$579 >> 2] = 0;
 $606 = 152916;
 $607 = HEAP32[$606 >> 2] | 0;
 if (!$607) {
  $667 = 146892;
  $666 = $667 + 6056 | 0;
  HEAP32[$666 >> 2] = 1137180672;
  $668 = $667 + 6060 | 0;
  HEAP32[$668 >> 2] = 1137180672;
  $669 = $667 + 6080 | 0;
  HEAP32[$669 >> 2] = 4;
  HEAPF32[$file_size$i >> 2] = 0.0;
  $670 = $file_size$i + 4 | 0;
  HEAPF32[$670 >> 2] = 0.0;
  __ZN5ImGui5BeginEPKcPbRK6ImVec2fi(126122, 0, $file_size$i, -1.0, 0) | 0;
  STACKTOP = sp;
  return;
 }
 $610 = HEAP32[38205] | 0;
 L249 : do if (($607 | 0) > 0 & ($610 | 0) != 0) {
  $614 = HEAP32[38231] | 0;
  $615 = $610 + 576 | 0;
  $n$011$i = 0;
  L251 : while (1) {
   $617 = HEAP32[$614 + ($n$011$i * 24 | 0) + 4 >> 2] | 0;
   do if ($617 | 0) {
    $620 = HEAP32[$617 + 8 >> 2] | 0;
    if (!($620 & 33554432)) {
     label = 176;
     break L251;
    }
    if (!($620 & 1048576)) {
     $684 = 1;
     $m$010$i = $n$011$i;
    } else break;
    do {
     if (!$684) {
      label = 180;
      break L251;
     }
     $626 = HEAP32[$614 + ($m$010$i * 24 | 0) + 4 >> 2] | 0;
     if (!$626) $634 = 0; else $634 = (HEAP32[$626 + 576 >> 2] | 0) == (HEAP32[$615 >> 2] | 0);
     $m$010$i = $m$010$i + 1 | 0;
     $684 = ($m$010$i | 0) < ($607 | 0);
    } while (!($634 | $684 ^ 1));
    if (!$634) {
     $n$1$i = $n$011$i;
     break L249;
    }
   } while (0);
   $635 = $n$011$i + 1 | 0;
   if (($635 | 0) < ($607 | 0)) $n$011$i = $635; else {
    $n$1$i = $635;
    break L249;
   }
  }
  if ((label | 0) == 176) ___assert_fail(126050, 124187, 3163, 126102); else if ((label | 0) == 180) ___assert_fail(127217, 127226, 805, 127272);
 } else $n$1$i = 0; while (0);
 if (($n$1$i | 0) >= ($607 | 0)) {
  $667 = 146892;
  $666 = $667 + 6056 | 0;
  HEAP32[$666 >> 2] = 1137180672;
  $668 = $667 + 6060 | 0;
  HEAP32[$668 >> 2] = 1137180672;
  $669 = $667 + 6080 | 0;
  HEAP32[$669 >> 2] = 4;
  HEAPF32[$file_size$i >> 2] = 0.0;
  $670 = $file_size$i + 4 | 0;
  HEAPF32[$670 >> 2] = 0.0;
  __ZN5ImGui5BeginEPKcPbRK6ImVec2fi(126122, 0, $file_size$i, -1.0, 0) | 0;
  STACKTOP = sp;
  return;
 }
 $638 = 152920;
 $639 = HEAP32[$638 >> 2] | 0;
 do if (($639 | 0) < ($n$1$i | 0)) {
  if (!$639) $645 = 8; else $645 = (($639 | 0) / 2 | 0) + $639 | 0;
  $646 = ($645 | 0) > ($n$1$i | 0) ? $645 : $n$1$i;
  if (($639 | 0) >= ($646 | 0)) {
   $$pre125 = 146892;
   break;
  }
  $649 = 147664;
  HEAP32[$649 >> 2] = (HEAP32[$649 >> 2] | 0) + 1;
  $654 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($646 * 24 | 0) | 0;
  $655 = 152924;
  _memcpy($654 | 0, HEAP32[$655 >> 2] | 0, (HEAP32[$606 >> 2] | 0) * 24 | 0) | 0;
  $659 = HEAP32[$655 >> 2] | 0;
  if ($659 | 0) {
   $661 = 147664;
   HEAP32[$661 >> 2] = (HEAP32[$661 >> 2] | 0) + -1;
  }
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($659);
  HEAP32[$655 >> 2] = $654;
  HEAP32[$638 >> 2] = $646;
  $$pre125 = 146892;
 } else $$pre125 = 146892; while (0);
 HEAP32[$606 >> 2] = $n$1$i;
 $667 = $$pre125;
 $666 = $667 + 6056 | 0;
 HEAP32[$666 >> 2] = 1137180672;
 $668 = $667 + 6060 | 0;
 HEAP32[$668 >> 2] = 1137180672;
 $669 = $667 + 6080 | 0;
 HEAP32[$669 >> 2] = 4;
 HEAPF32[$file_size$i >> 2] = 0.0;
 $670 = $file_size$i + 4 | 0;
 HEAPF32[$670 >> 2] = 0.0;
 __ZN5ImGui5BeginEPKcPbRK6ImVec2fi(126122, 0, $file_size$i, -1.0, 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN2UI5SetupERN4yakc4kc85EP5Audio($this, $kc, $audio_) {
 $this = $this | 0;
 $kc = $kc | 0;
 $audio_ = $audio_ | 0;
 var $1 = 0, $10 = 0, $101 = 0, $103 = 0, $105 = 0, $107 = 0, $109 = 0, $11 = 0, $111 = 0, $113 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $137 = 0, $139 = 0, $141 = 0, $143 = 0, $145 = 0, $147 = 0, $149 = 0, $15 = 0, $151 = 0, $153 = 0, $155 = 0, $157 = 0, $159 = 0, $161 = 0, $163 = 0, $165 = 0, $167 = 0, $169 = 0, $17 = 0, $171 = 0, $173 = 0, $175 = 0, $177 = 0, $179 = 0, $181 = 0, $183 = 0, $185 = 0, $187 = 0, $189 = 0, $19 = 0, $191 = 0, $193 = 0, $195 = 0, $197 = 0, $199 = 0, $2 = 0, $201 = 0, $203 = 0, $205 = 0, $207 = 0, $209 = 0, $21 = 0, $211 = 0, $213 = 0, $215 = 0, $217 = 0, $219 = 0, $221 = 0, $223 = 0, $225 = 0, $227 = 0, $229 = 0, $23 = 0, $231 = 0, $233 = 0, $235 = 0, $237 = 0, $239 = 0, $241 = 0, $243 = 0, $245 = 0, $247 = 0, $249 = 0, $25 = 0, $251 = 0, $253 = 0, $255 = 0, $257 = 0, $259 = 0, $261 = 0, $263 = 0, $265 = 0, $267 = 0, $269 = 0, $27 = 0, $271 = 0, $273 = 0, $275 = 0, $277 = 0, $279 = 0, $281 = 0, $283 = 0, $285 = 0, $287 = 0, $289 = 0, $29 = 0, $291 = 0, $293 = 0, $295 = 0, $297 = 0, $299 = 0, $3 = 0, $301 = 0, $303 = 0, $305 = 0, $307 = 0, $309 = 0, $31 = 0, $311 = 0, $313 = 0, $315 = 0, $317 = 0, $319 = 0, $321 = 0, $323 = 0, $325 = 0, $327 = 0, $329 = 0, $33 = 0, $331 = 0, $333 = 0, $335 = 0, $337 = 0, $339 = 0, $341 = 0, $343 = 0, $345 = 0, $347 = 0, $349 = 0, $35 = 0, $351 = 0, $353 = 0, $356 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $37 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $537 = 0, $540 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $560 = 0, $57 = 0, $59 = 0, $6 = 0, $61 = 0, $63 = 0, $65 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $718 = 0, $720 = 0, $723 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $85 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, $99 = 0, $style$sroa$10 = 0, $style$sroa$12$sroa$0 = 0, $style$sroa$6 = 0, $style$sroa$8$sroa$0 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $style$sroa$6 = sp + 72 | 0;
 $style$sroa$8$sroa$0 = sp + 40 | 0;
 $style$sroa$10 = sp;
 $style$sroa$12$sroa$0 = sp + 88 | 0;
 HEAP32[$this + 1051088 >> 2] = $audio_;
 __ZN5Oryol4IMUI5SetupEv();
 $1 = __ZN5ImGui8GetStyleEv() | 0;
 $2 = $1 + 4 | 0;
 HEAP32[$style$sroa$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$style$sroa$6 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 HEAP32[$style$sroa$6 + 8 >> 2] = HEAP32[$2 + 8 >> 2];
 HEAP32[$style$sroa$6 + 12 >> 2] = HEAP32[$2 + 12 >> 2];
 $3 = $1 + 28 | 0;
 HEAP32[$style$sroa$8$sroa$0 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$style$sroa$8$sroa$0 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP32[$style$sroa$8$sroa$0 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
 HEAP32[$style$sroa$8$sroa$0 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
 HEAP32[$style$sroa$8$sroa$0 + 16 >> 2] = HEAP32[$3 + 16 >> 2];
 HEAP32[$style$sroa$8$sroa$0 + 20 >> 2] = HEAP32[$3 + 20 >> 2];
 HEAP32[$style$sroa$8$sroa$0 + 24 >> 2] = HEAP32[$3 + 24 >> 2];
 HEAP32[$style$sroa$8$sroa$0 + 28 >> 2] = HEAP32[$3 + 28 >> 2];
 dest = $style$sroa$10;
 src = $1 + 72 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $5 = $1 + 114 | 0;
 HEAP16[$style$sroa$12$sroa$0 >> 1] = HEAP16[$5 >> 1] | 0;
 HEAP16[$style$sroa$12$sroa$0 + 2 >> 1] = HEAP16[$5 + 2 >> 1] | 0;
 HEAP16[$style$sroa$12$sroa$0 + 4 >> 1] = HEAP16[$5 + 4 >> 1] | 0;
 $6 = $1 + 120 | 0;
 $7 = HEAPU16[$6 >> 1] | HEAPU16[$6 + 2 >> 1] << 16;
 $8 = $1 + 124 | 0;
 $9 = HEAPU16[$8 >> 1] | HEAPU16[$8 + 2 >> 1] << 16;
 $10 = $1 + 128 | 0;
 $11 = HEAPU16[$10 >> 1] | HEAPU16[$10 + 2 >> 1] << 16;
 $12 = $1 + 132 | 0;
 $13 = HEAPU16[$12 >> 1] | HEAPU16[$12 + 2 >> 1] << 16;
 $15 = HEAP32[$1 + 136 >> 2] | 0;
 $17 = HEAP32[$1 + 140 >> 2] | 0;
 $19 = HEAP32[$1 + 144 >> 2] | 0;
 $21 = HEAP32[$1 + 148 >> 2] | 0;
 $23 = HEAP32[$1 + 152 >> 2] | 0;
 $25 = HEAP32[$1 + 156 >> 2] | 0;
 $27 = HEAP32[$1 + 160 >> 2] | 0;
 $29 = HEAP32[$1 + 164 >> 2] | 0;
 $31 = HEAP32[$1 + 168 >> 2] | 0;
 $33 = HEAP32[$1 + 172 >> 2] | 0;
 $35 = HEAP32[$1 + 176 >> 2] | 0;
 $37 = HEAP32[$1 + 180 >> 2] | 0;
 $39 = HEAP32[$1 + 184 >> 2] | 0;
 $41 = HEAP32[$1 + 188 >> 2] | 0;
 $43 = HEAP32[$1 + 192 >> 2] | 0;
 $45 = HEAP32[$1 + 196 >> 2] | 0;
 $47 = HEAP32[$1 + 200 >> 2] | 0;
 $49 = HEAP32[$1 + 204 >> 2] | 0;
 $51 = HEAP32[$1 + 208 >> 2] | 0;
 $53 = HEAP32[$1 + 212 >> 2] | 0;
 $55 = HEAP32[$1 + 216 >> 2] | 0;
 $57 = HEAP32[$1 + 220 >> 2] | 0;
 $59 = HEAP32[$1 + 224 >> 2] | 0;
 $61 = HEAP32[$1 + 228 >> 2] | 0;
 $63 = HEAP32[$1 + 232 >> 2] | 0;
 $65 = HEAP32[$1 + 236 >> 2] | 0;
 $67 = HEAP32[$1 + 240 >> 2] | 0;
 $69 = HEAP32[$1 + 244 >> 2] | 0;
 $71 = HEAP32[$1 + 248 >> 2] | 0;
 $73 = HEAP32[$1 + 252 >> 2] | 0;
 $75 = HEAP32[$1 + 256 >> 2] | 0;
 $77 = HEAP32[$1 + 260 >> 2] | 0;
 $79 = HEAP32[$1 + 264 >> 2] | 0;
 $81 = HEAP32[$1 + 268 >> 2] | 0;
 $83 = HEAP32[$1 + 272 >> 2] | 0;
 $85 = HEAP32[$1 + 276 >> 2] | 0;
 $87 = HEAP32[$1 + 280 >> 2] | 0;
 $89 = HEAP32[$1 + 284 >> 2] | 0;
 $91 = HEAP32[$1 + 288 >> 2] | 0;
 $93 = HEAP32[$1 + 292 >> 2] | 0;
 $95 = HEAP32[$1 + 296 >> 2] | 0;
 $97 = HEAP32[$1 + 300 >> 2] | 0;
 $99 = HEAP32[$1 + 304 >> 2] | 0;
 $101 = HEAP32[$1 + 308 >> 2] | 0;
 $103 = HEAP32[$1 + 312 >> 2] | 0;
 $105 = HEAP32[$1 + 316 >> 2] | 0;
 $107 = HEAP32[$1 + 320 >> 2] | 0;
 $109 = HEAP32[$1 + 324 >> 2] | 0;
 $111 = HEAP32[$1 + 328 >> 2] | 0;
 $113 = HEAP32[$1 + 332 >> 2] | 0;
 $115 = HEAP32[$1 + 336 >> 2] | 0;
 $117 = HEAP32[$1 + 340 >> 2] | 0;
 $119 = HEAP32[$1 + 344 >> 2] | 0;
 $121 = HEAP32[$1 + 348 >> 2] | 0;
 $123 = HEAP32[$1 + 352 >> 2] | 0;
 $125 = HEAP32[$1 + 356 >> 2] | 0;
 $127 = HEAP32[$1 + 360 >> 2] | 0;
 $129 = HEAP32[$1 + 364 >> 2] | 0;
 $131 = HEAP32[$1 + 368 >> 2] | 0;
 $133 = HEAP32[$1 + 372 >> 2] | 0;
 $135 = HEAP32[$1 + 376 >> 2] | 0;
 $137 = HEAP32[$1 + 380 >> 2] | 0;
 $139 = HEAP32[$1 + 384 >> 2] | 0;
 $141 = HEAP32[$1 + 388 >> 2] | 0;
 $143 = HEAP32[$1 + 392 >> 2] | 0;
 $145 = HEAP32[$1 + 396 >> 2] | 0;
 $147 = HEAP32[$1 + 400 >> 2] | 0;
 $149 = HEAP32[$1 + 404 >> 2] | 0;
 $151 = HEAP32[$1 + 408 >> 2] | 0;
 $153 = HEAP32[$1 + 412 >> 2] | 0;
 $155 = HEAP32[$1 + 416 >> 2] | 0;
 $157 = HEAP32[$1 + 420 >> 2] | 0;
 $159 = HEAP32[$1 + 424 >> 2] | 0;
 $161 = HEAP32[$1 + 428 >> 2] | 0;
 $163 = HEAP32[$1 + 432 >> 2] | 0;
 $165 = HEAP32[$1 + 436 >> 2] | 0;
 $167 = HEAP32[$1 + 440 >> 2] | 0;
 $169 = HEAP32[$1 + 444 >> 2] | 0;
 $171 = HEAP32[$1 + 448 >> 2] | 0;
 $173 = HEAP32[$1 + 452 >> 2] | 0;
 $175 = HEAP32[$1 + 456 >> 2] | 0;
 $177 = HEAP32[$1 + 460 >> 2] | 0;
 $179 = HEAP32[$1 + 464 >> 2] | 0;
 $181 = HEAP32[$1 + 468 >> 2] | 0;
 $183 = HEAP32[$1 + 472 >> 2] | 0;
 $185 = HEAP32[$1 + 476 >> 2] | 0;
 $187 = HEAP32[$1 + 480 >> 2] | 0;
 $189 = HEAP32[$1 + 484 >> 2] | 0;
 $191 = HEAP32[$1 + 488 >> 2] | 0;
 $193 = HEAP32[$1 + 492 >> 2] | 0;
 $195 = HEAP32[$1 + 496 >> 2] | 0;
 $197 = HEAP32[$1 + 500 >> 2] | 0;
 $199 = HEAP32[$1 + 504 >> 2] | 0;
 $201 = HEAP32[$1 + 508 >> 2] | 0;
 $203 = HEAP32[$1 + 512 >> 2] | 0;
 $205 = HEAP32[$1 + 516 >> 2] | 0;
 $207 = HEAP32[$1 + 520 >> 2] | 0;
 $209 = HEAP32[$1 + 524 >> 2] | 0;
 $211 = HEAP32[$1 + 528 >> 2] | 0;
 $213 = HEAP32[$1 + 532 >> 2] | 0;
 $215 = HEAP32[$1 + 536 >> 2] | 0;
 $217 = HEAP32[$1 + 540 >> 2] | 0;
 $219 = HEAP32[$1 + 544 >> 2] | 0;
 $221 = HEAP32[$1 + 548 >> 2] | 0;
 $223 = HEAP32[$1 + 552 >> 2] | 0;
 $225 = HEAP32[$1 + 556 >> 2] | 0;
 $227 = HEAP32[$1 + 560 >> 2] | 0;
 $229 = HEAP32[$1 + 564 >> 2] | 0;
 $231 = HEAP32[$1 + 568 >> 2] | 0;
 $233 = HEAP32[$1 + 572 >> 2] | 0;
 $235 = HEAP32[$1 + 576 >> 2] | 0;
 $237 = HEAP32[$1 + 580 >> 2] | 0;
 $239 = HEAP32[$1 + 584 >> 2] | 0;
 $241 = HEAP32[$1 + 588 >> 2] | 0;
 $243 = HEAP32[$1 + 592 >> 2] | 0;
 $245 = HEAP32[$1 + 596 >> 2] | 0;
 $247 = HEAP32[$1 + 600 >> 2] | 0;
 $249 = HEAP32[$1 + 604 >> 2] | 0;
 $251 = HEAP32[$1 + 608 >> 2] | 0;
 $253 = HEAP32[$1 + 612 >> 2] | 0;
 $255 = HEAP32[$1 + 616 >> 2] | 0;
 $257 = HEAP32[$1 + 620 >> 2] | 0;
 $259 = HEAP32[$1 + 624 >> 2] | 0;
 $261 = HEAP32[$1 + 628 >> 2] | 0;
 $263 = HEAP32[$1 + 632 >> 2] | 0;
 $265 = HEAP32[$1 + 636 >> 2] | 0;
 $267 = HEAP32[$1 + 640 >> 2] | 0;
 $269 = HEAP32[$1 + 644 >> 2] | 0;
 $271 = HEAP32[$1 + 648 >> 2] | 0;
 $273 = HEAP32[$1 + 652 >> 2] | 0;
 $275 = HEAP32[$1 + 656 >> 2] | 0;
 $277 = HEAP32[$1 + 660 >> 2] | 0;
 $279 = HEAP32[$1 + 664 >> 2] | 0;
 $281 = HEAP32[$1 + 668 >> 2] | 0;
 $283 = HEAP32[$1 + 672 >> 2] | 0;
 $285 = HEAP32[$1 + 676 >> 2] | 0;
 $287 = HEAP32[$1 + 680 >> 2] | 0;
 $289 = HEAP32[$1 + 684 >> 2] | 0;
 $291 = HEAP32[$1 + 688 >> 2] | 0;
 $293 = HEAP32[$1 + 692 >> 2] | 0;
 $295 = HEAP32[$1 + 696 >> 2] | 0;
 $297 = HEAP32[$1 + 700 >> 2] | 0;
 $299 = HEAP32[$1 + 704 >> 2] | 0;
 $301 = HEAP32[$1 + 708 >> 2] | 0;
 $303 = HEAP32[$1 + 712 >> 2] | 0;
 $305 = HEAP32[$1 + 716 >> 2] | 0;
 $307 = HEAP32[$1 + 720 >> 2] | 0;
 $309 = HEAP32[$1 + 724 >> 2] | 0;
 $311 = HEAP32[$1 + 728 >> 2] | 0;
 $313 = HEAP32[$1 + 732 >> 2] | 0;
 $315 = HEAP32[$1 + 736 >> 2] | 0;
 $317 = HEAP32[$1 + 740 >> 2] | 0;
 $319 = HEAP32[$1 + 744 >> 2] | 0;
 $321 = HEAP32[$1 + 748 >> 2] | 0;
 $323 = HEAP32[$1 + 752 >> 2] | 0;
 $325 = HEAP32[$1 + 756 >> 2] | 0;
 $327 = HEAP32[$1 + 760 >> 2] | 0;
 $329 = HEAP32[$1 + 764 >> 2] | 0;
 $331 = HEAP32[$1 + 768 >> 2] | 0;
 $333 = HEAP32[$1 + 772 >> 2] | 0;
 $335 = HEAP32[$1 + 776 >> 2] | 0;
 $337 = HEAP32[$1 + 780 >> 2] | 0;
 $339 = HEAP32[$1 + 784 >> 2] | 0;
 $341 = HEAP32[$1 + 788 >> 2] | 0;
 $343 = HEAP32[$1 + 792 >> 2] | 0;
 $345 = HEAP32[$1 + 796 >> 2] | 0;
 $347 = HEAP32[$1 + 800 >> 2] | 0;
 $349 = HEAP32[$1 + 804 >> 2] | 0;
 $351 = HEAP8[$this + 1049468 >> 0] | 0;
 HEAPF32[$this + 1049472 >> 2] = 1.0;
 $353 = $this + 1049476 | 0;
 HEAP32[$353 >> 2] = HEAP32[$style$sroa$6 >> 2];
 HEAP32[$353 + 4 >> 2] = HEAP32[$style$sroa$6 + 4 >> 2];
 HEAP32[$353 + 8 >> 2] = HEAP32[$style$sroa$6 + 8 >> 2];
 HEAP32[$353 + 12 >> 2] = HEAP32[$style$sroa$6 + 12 >> 2];
 HEAPF32[$this + 1049492 >> 2] = 0.0;
 HEAP32[$this + 1049496 >> 2] = 2;
 $356 = $this + 1049500 | 0;
 HEAP32[$356 >> 2] = HEAP32[$style$sroa$8$sroa$0 >> 2];
 HEAP32[$356 + 4 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 4 >> 2];
 HEAP32[$356 + 8 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 8 >> 2];
 HEAP32[$356 + 12 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 12 >> 2];
 HEAP32[$356 + 16 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 16 >> 2];
 HEAP32[$356 + 20 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 20 >> 2];
 HEAP32[$356 + 24 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 24 >> 2];
 HEAP32[$356 + 28 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 28 >> 2];
 HEAP32[$this + 1049532 >> 2] = 1084227584;
 HEAP32[$this + 1049536 >> 2] = 1084227584;
 HEAPF32[$this + 1049540 >> 2] = 1.0;
 dest = $this + 1049544 | 0;
 src = $style$sroa$10;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$this + 1049584 >> 0] = $351;
 HEAP8[$this + 1049585 >> 0] = 0;
 $363 = $this + 1049586 | 0;
 HEAP16[$363 >> 1] = HEAP16[$style$sroa$12$sroa$0 >> 1] | 0;
 HEAP16[$363 + 2 >> 1] = HEAP16[$style$sroa$12$sroa$0 + 2 >> 1] | 0;
 HEAP16[$363 + 4 >> 1] = HEAP16[$style$sroa$12$sroa$0 + 4 >> 1] | 0;
 $364 = $this + 1049592 | 0;
 HEAP16[$364 >> 1] = $7;
 HEAP16[$364 + 2 >> 1] = $7 >>> 16;
 $365 = $this + 1049596 | 0;
 HEAP16[$365 >> 1] = $9;
 HEAP16[$365 + 2 >> 1] = $9 >>> 16;
 $366 = $this + 1049600 | 0;
 HEAP16[$366 >> 1] = $11;
 HEAP16[$366 + 2 >> 1] = $11 >>> 16;
 $367 = $this + 1049604 | 0;
 HEAP16[$367 >> 1] = $13;
 HEAP16[$367 + 2 >> 1] = $13 >>> 16;
 HEAP32[$this + 1049608 >> 2] = $15;
 HEAP32[$this + 1049612 >> 2] = $17;
 HEAP32[$this + 1049616 >> 2] = $19;
 HEAP32[$this + 1049620 >> 2] = $21;
 HEAP32[$this + 1049624 >> 2] = $23;
 HEAP32[$this + 1049628 >> 2] = $25;
 HEAP32[$this + 1049632 >> 2] = $27;
 HEAP32[$this + 1049636 >> 2] = $29;
 HEAP32[$this + 1049640 >> 2] = $31;
 HEAP32[$this + 1049644 >> 2] = $33;
 HEAP32[$this + 1049648 >> 2] = $35;
 HEAP32[$this + 1049652 >> 2] = $37;
 HEAP32[$this + 1049656 >> 2] = $39;
 HEAP32[$this + 1049660 >> 2] = $41;
 HEAP32[$this + 1049664 >> 2] = $43;
 HEAP32[$this + 1049668 >> 2] = $45;
 HEAP32[$this + 1049672 >> 2] = $47;
 HEAP32[$this + 1049676 >> 2] = $49;
 HEAP32[$this + 1049680 >> 2] = $51;
 HEAP32[$this + 1049684 >> 2] = $53;
 HEAP32[$this + 1049688 >> 2] = $55;
 HEAP32[$this + 1049692 >> 2] = $57;
 HEAP32[$this + 1049696 >> 2] = $59;
 HEAP32[$this + 1049700 >> 2] = $61;
 HEAP32[$this + 1049704 >> 2] = $63;
 HEAP32[$this + 1049708 >> 2] = $65;
 HEAP32[$this + 1049712 >> 2] = $67;
 HEAP32[$this + 1049716 >> 2] = $69;
 HEAP32[$this + 1049720 >> 2] = $71;
 HEAP32[$this + 1049724 >> 2] = $73;
 HEAP32[$this + 1049728 >> 2] = $75;
 HEAP32[$this + 1049732 >> 2] = $77;
 HEAP32[$this + 1049736 >> 2] = $79;
 HEAP32[$this + 1049740 >> 2] = $81;
 HEAP32[$this + 1049744 >> 2] = $83;
 HEAP32[$this + 1049748 >> 2] = $85;
 HEAP32[$this + 1049752 >> 2] = $87;
 HEAP32[$this + 1049756 >> 2] = $89;
 HEAP32[$this + 1049760 >> 2] = $91;
 HEAP32[$this + 1049764 >> 2] = $93;
 HEAP32[$this + 1049768 >> 2] = $95;
 HEAP32[$this + 1049772 >> 2] = $97;
 HEAP32[$this + 1049776 >> 2] = $99;
 HEAP32[$this + 1049780 >> 2] = $101;
 HEAP32[$this + 1049784 >> 2] = $103;
 HEAP32[$this + 1049788 >> 2] = $105;
 HEAP32[$this + 1049792 >> 2] = $107;
 HEAP32[$this + 1049796 >> 2] = $109;
 HEAP32[$this + 1049800 >> 2] = $111;
 HEAP32[$this + 1049804 >> 2] = $113;
 HEAP32[$this + 1049808 >> 2] = $115;
 HEAP32[$this + 1049812 >> 2] = $117;
 HEAP32[$this + 1049816 >> 2] = $119;
 HEAP32[$this + 1049820 >> 2] = $121;
 HEAP32[$this + 1049824 >> 2] = $123;
 HEAP32[$this + 1049828 >> 2] = $125;
 HEAP32[$this + 1049832 >> 2] = $127;
 HEAP32[$this + 1049836 >> 2] = $129;
 HEAP32[$this + 1049840 >> 2] = $131;
 HEAP32[$this + 1049844 >> 2] = $133;
 HEAP32[$this + 1049848 >> 2] = $135;
 HEAP32[$this + 1049852 >> 2] = $137;
 HEAP32[$this + 1049856 >> 2] = $139;
 HEAP32[$this + 1049860 >> 2] = $141;
 HEAP32[$this + 1049864 >> 2] = $143;
 HEAP32[$this + 1049868 >> 2] = $145;
 HEAP32[$this + 1049872 >> 2] = $147;
 HEAP32[$this + 1049876 >> 2] = $149;
 HEAP32[$this + 1049880 >> 2] = $151;
 HEAP32[$this + 1049884 >> 2] = $153;
 HEAP32[$this + 1049888 >> 2] = $155;
 HEAP32[$this + 1049892 >> 2] = $157;
 HEAP32[$this + 1049896 >> 2] = $159;
 HEAP32[$this + 1049900 >> 2] = $161;
 HEAP32[$this + 1049904 >> 2] = $163;
 HEAP32[$this + 1049908 >> 2] = $165;
 HEAP32[$this + 1049912 >> 2] = $167;
 HEAP32[$this + 1049916 >> 2] = $169;
 HEAP32[$this + 1049920 >> 2] = $171;
 HEAP32[$this + 1049924 >> 2] = $173;
 HEAP32[$this + 1049928 >> 2] = $175;
 HEAP32[$this + 1049932 >> 2] = $177;
 HEAP32[$this + 1049936 >> 2] = $179;
 HEAP32[$this + 1049940 >> 2] = $181;
 HEAP32[$this + 1049944 >> 2] = $183;
 HEAP32[$this + 1049948 >> 2] = $185;
 HEAP32[$this + 1049952 >> 2] = $187;
 HEAP32[$this + 1049956 >> 2] = $189;
 HEAP32[$this + 1049960 >> 2] = $191;
 HEAP32[$this + 1049964 >> 2] = $193;
 HEAP32[$this + 1049968 >> 2] = $195;
 HEAP32[$this + 1049972 >> 2] = $197;
 HEAP32[$this + 1049976 >> 2] = $199;
 HEAP32[$this + 1049980 >> 2] = $201;
 HEAP32[$this + 1049984 >> 2] = $203;
 HEAP32[$this + 1049988 >> 2] = $205;
 HEAP32[$this + 1049992 >> 2] = $207;
 HEAP32[$this + 1049996 >> 2] = $209;
 HEAP32[$this + 105e4 >> 2] = $211;
 HEAP32[$this + 1050004 >> 2] = $213;
 HEAP32[$this + 1050008 >> 2] = $215;
 HEAP32[$this + 1050012 >> 2] = $217;
 HEAP32[$this + 1050016 >> 2] = $219;
 HEAP32[$this + 1050020 >> 2] = $221;
 HEAP32[$this + 1050024 >> 2] = $223;
 HEAP32[$this + 1050028 >> 2] = $225;
 HEAP32[$this + 1050032 >> 2] = $227;
 HEAP32[$this + 1050036 >> 2] = $229;
 HEAP32[$this + 1050040 >> 2] = $231;
 HEAP32[$this + 1050044 >> 2] = $233;
 HEAP32[$this + 1050048 >> 2] = $235;
 HEAP32[$this + 1050052 >> 2] = $237;
 HEAP32[$this + 1050056 >> 2] = $239;
 HEAP32[$this + 1050060 >> 2] = $241;
 HEAP32[$this + 1050064 >> 2] = $243;
 HEAP32[$this + 1050068 >> 2] = $245;
 HEAP32[$this + 1050072 >> 2] = $247;
 HEAP32[$this + 1050076 >> 2] = $249;
 HEAP32[$this + 1050080 >> 2] = $251;
 HEAP32[$this + 1050084 >> 2] = $253;
 HEAP32[$this + 1050088 >> 2] = $255;
 HEAP32[$this + 1050092 >> 2] = $257;
 HEAP32[$this + 1050096 >> 2] = $259;
 HEAP32[$this + 1050100 >> 2] = $261;
 HEAP32[$this + 1050104 >> 2] = $263;
 HEAP32[$this + 1050108 >> 2] = $265;
 HEAP32[$this + 1050112 >> 2] = $267;
 HEAP32[$this + 1050116 >> 2] = $269;
 HEAP32[$this + 1050120 >> 2] = $271;
 HEAP32[$this + 1050124 >> 2] = $273;
 HEAP32[$this + 1050128 >> 2] = $275;
 HEAP32[$this + 1050132 >> 2] = $277;
 HEAP32[$this + 1050136 >> 2] = $279;
 HEAP32[$this + 1050140 >> 2] = $281;
 HEAP32[$this + 1050144 >> 2] = $283;
 HEAP32[$this + 1050148 >> 2] = $285;
 HEAP32[$this + 1050152 >> 2] = $287;
 HEAP32[$this + 1050156 >> 2] = $289;
 HEAP32[$this + 1050160 >> 2] = $291;
 HEAP32[$this + 1050164 >> 2] = $293;
 HEAP32[$this + 1050168 >> 2] = $295;
 HEAP32[$this + 1050172 >> 2] = $297;
 HEAP32[$this + 1050176 >> 2] = $299;
 HEAP32[$this + 1050180 >> 2] = $301;
 HEAP32[$this + 1050184 >> 2] = $303;
 HEAP32[$this + 1050188 >> 2] = $305;
 HEAP32[$this + 1050192 >> 2] = $307;
 HEAP32[$this + 1050196 >> 2] = $309;
 HEAP32[$this + 1050200 >> 2] = $311;
 HEAP32[$this + 1050204 >> 2] = $313;
 HEAP32[$this + 1050208 >> 2] = $315;
 HEAP32[$this + 1050212 >> 2] = $317;
 HEAP32[$this + 1050216 >> 2] = $319;
 HEAP32[$this + 1050220 >> 2] = $321;
 HEAP32[$this + 1050224 >> 2] = $323;
 HEAP32[$this + 1050228 >> 2] = $325;
 HEAP32[$this + 1050232 >> 2] = $327;
 HEAP32[$this + 1050236 >> 2] = $329;
 HEAP32[$this + 1050240 >> 2] = $331;
 HEAP32[$this + 1050244 >> 2] = $333;
 HEAP32[$this + 1050248 >> 2] = $335;
 HEAP32[$this + 1050252 >> 2] = $337;
 HEAP32[$this + 1050256 >> 2] = $339;
 HEAP32[$this + 1050260 >> 2] = $341;
 HEAP32[$this + 1050264 >> 2] = $343;
 HEAP32[$this + 1050268 >> 2] = $345;
 HEAP32[$this + 1050272 >> 2] = $347;
 HEAP32[$this + 1050276 >> 2] = $349;
 HEAPF32[$this + 1050280 >> 2] = 1.0;
 $537 = $this + 1050284 | 0;
 HEAP32[$537 >> 2] = HEAP32[$style$sroa$6 >> 2];
 HEAP32[$537 + 4 >> 2] = HEAP32[$style$sroa$6 + 4 >> 2];
 HEAP32[$537 + 8 >> 2] = HEAP32[$style$sroa$6 + 8 >> 2];
 HEAP32[$537 + 12 >> 2] = HEAP32[$style$sroa$6 + 12 >> 2];
 HEAPF32[$this + 1050300 >> 2] = 0.0;
 HEAP32[$this + 1050304 >> 2] = 2;
 $540 = $this + 1050308 | 0;
 HEAP32[$540 >> 2] = HEAP32[$style$sroa$8$sroa$0 >> 2];
 HEAP32[$540 + 4 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 4 >> 2];
 HEAP32[$540 + 8 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 8 >> 2];
 HEAP32[$540 + 12 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 12 >> 2];
 HEAP32[$540 + 16 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 16 >> 2];
 HEAP32[$540 + 20 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 20 >> 2];
 HEAP32[$540 + 24 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 24 >> 2];
 HEAP32[$540 + 28 >> 2] = HEAP32[$style$sroa$8$sroa$0 + 28 >> 2];
 HEAP32[$this + 1050340 >> 2] = 1084227584;
 HEAP32[$this + 1050344 >> 2] = 1084227584;
 HEAPF32[$this + 1050348 >> 2] = 1.0;
 dest = $this + 1050352 | 0;
 src = $style$sroa$10;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$this + 1050392 >> 0] = $351;
 HEAP8[$this + 1050393 >> 0] = 0;
 $547 = $this + 1050394 | 0;
 HEAP16[$547 >> 1] = HEAP16[$style$sroa$12$sroa$0 >> 1] | 0;
 HEAP16[$547 + 2 >> 1] = HEAP16[$style$sroa$12$sroa$0 + 2 >> 1] | 0;
 HEAP16[$547 + 4 >> 1] = HEAP16[$style$sroa$12$sroa$0 + 4 >> 1] | 0;
 $548 = $this + 1050400 | 0;
 HEAPF32[tempDoublePtr >> 2] = 0.0;
 HEAP16[$548 >> 1] = HEAP16[tempDoublePtr >> 1];
 HEAP16[$548 + 2 >> 1] = HEAP16[tempDoublePtr + 2 >> 1];
 $549 = $this + 1050404 | 0;
 HEAPF32[tempDoublePtr >> 2] = 0.0;
 HEAP16[$549 >> 1] = HEAP16[tempDoublePtr >> 1];
 HEAP16[$549 + 2 >> 1] = HEAP16[tempDoublePtr + 2 >> 1];
 $550 = $this + 1050408 | 0;
 HEAPF32[tempDoublePtr >> 2] = 0.0;
 HEAP16[$550 >> 1] = HEAP16[tempDoublePtr >> 1];
 HEAP16[$550 + 2 >> 1] = HEAP16[tempDoublePtr + 2 >> 1];
 $551 = $this + 1050412 | 0;
 HEAPF32[tempDoublePtr >> 2] = 1.0;
 HEAP16[$551 >> 1] = HEAP16[tempDoublePtr >> 1];
 HEAP16[$551 + 2 >> 1] = HEAP16[tempDoublePtr + 2 >> 1];
 HEAPF32[$this + 1050416 >> 2] = .6000000238418579;
 HEAPF32[$this + 1050420 >> 2] = .6000000238418579;
 HEAPF32[$this + 1050424 >> 2] = .6000000238418579;
 HEAPF32[$this + 1050428 >> 2] = 1.0;
 HEAPF32[$this + 1050432 >> 2] = .9399999976158142;
 HEAPF32[$this + 1050436 >> 2] = .9399999976158142;
 HEAPF32[$this + 1050440 >> 2] = .9399999976158142;
 HEAPF32[$this + 1050444 >> 2] = 1.0;
 $560 = $this + 1050448 | 0;
 HEAP32[$560 >> 2] = 0;
 HEAP32[$560 + 4 >> 2] = 0;
 HEAP32[$560 + 8 >> 2] = 0;
 HEAP32[$560 + 12 >> 2] = 0;
 HEAP32[$560 + 16 >> 2] = 0;
 HEAP32[$560 + 20 >> 2] = 0;
 HEAP32[$560 + 24 >> 2] = 0;
 HEAPF32[$this + 1050476 >> 2] = .38999998569488525;
 HEAPF32[$this + 1050480 >> 2] = 1.0;
 HEAPF32[$this + 1050484 >> 2] = 1.0;
 HEAPF32[$this + 1050488 >> 2] = 1.0;
 HEAPF32[$this + 1050492 >> 2] = .10000000149011612;
 HEAPF32[$this + 1050496 >> 2] = 1.0;
 HEAPF32[$this + 1050500 >> 2] = 1.0;
 HEAPF32[$this + 1050504 >> 2] = 1.0;
 HEAPF32[$this + 1050508 >> 2] = 1.0;
 HEAPF32[$this + 1050512 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050516 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050520 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050524 >> 2] = .4000000059604645;
 HEAPF32[$this + 1050528 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050532 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050536 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050540 >> 2] = .6700000166893005;
 HEAPF32[$this + 1050544 >> 2] = .9599999785423279;
 HEAPF32[$this + 1050548 >> 2] = .9599999785423279;
 HEAPF32[$this + 1050552 >> 2] = .9599999785423279;
 HEAPF32[$this + 1050556 >> 2] = 1.0;
 HEAPF32[$this + 1050560 >> 2] = 1.0;
 HEAPF32[$this + 1050564 >> 2] = 1.0;
 HEAPF32[$this + 1050568 >> 2] = 1.0;
 HEAPF32[$this + 1050572 >> 2] = .5099999904632568;
 HEAPF32[$this + 1050576 >> 2] = .8199999928474426;
 HEAPF32[$this + 1050580 >> 2] = .8199999928474426;
 HEAPF32[$this + 1050584 >> 2] = .8199999928474426;
 HEAPF32[$this + 1050588 >> 2] = 1.0;
 HEAPF32[$this + 1050592 >> 2] = .8600000143051147;
 HEAPF32[$this + 1050596 >> 2] = .8600000143051147;
 HEAPF32[$this + 1050600 >> 2] = .8600000143051147;
 HEAPF32[$this + 1050604 >> 2] = 1.0;
 HEAPF32[$this + 1050608 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050612 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050616 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050620 >> 2] = .5299999713897705;
 HEAPF32[$this + 1050624 >> 2] = .6899999976158142;
 HEAPF32[$this + 1050628 >> 2] = .6899999976158142;
 HEAPF32[$this + 1050632 >> 2] = .6899999976158142;
 HEAPF32[$this + 1050636 >> 2] = .800000011920929;
 HEAPF32[$this + 1050640 >> 2] = .49000000953674316;
 HEAPF32[$this + 1050644 >> 2] = .49000000953674316;
 HEAPF32[$this + 1050648 >> 2] = .49000000953674316;
 HEAPF32[$this + 1050652 >> 2] = .800000011920929;
 HEAPF32[$this + 1050656 >> 2] = .49000000953674316;
 HEAPF32[$this + 1050660 >> 2] = .49000000953674316;
 HEAPF32[$this + 1050664 >> 2] = .49000000953674316;
 HEAPF32[$this + 1050668 >> 2] = 1.0;
 HEAPF32[$this + 1050672 >> 2] = .8600000143051147;
 HEAPF32[$this + 1050676 >> 2] = .8600000143051147;
 HEAPF32[$this + 1050680 >> 2] = .8600000143051147;
 HEAPF32[$this + 1050684 >> 2] = .9900000095367432;
 HEAPF32[$this + 1050688 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050692 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050696 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050700 >> 2] = 1.0;
 HEAPF32[$this + 1050704 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050708 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050712 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050716 >> 2] = .7799999713897705;
 HEAPF32[$this + 1050720 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050724 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050728 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050732 >> 2] = 1.0;
 HEAPF32[$this + 1050736 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050740 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050744 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050748 >> 2] = .4000000059604645;
 HEAPF32[$this + 1050752 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050756 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050760 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050764 >> 2] = 1.0;
 HEAPF32[$this + 1050768 >> 2] = .05999999865889549;
 HEAPF32[$this + 1050772 >> 2] = .5299999713897705;
 HEAPF32[$this + 1050776 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050780 >> 2] = 1.0;
 HEAPF32[$this + 1050784 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050788 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050792 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050796 >> 2] = .3100000023841858;
 HEAPF32[$this + 1050800 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050804 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050808 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050812 >> 2] = .800000011920929;
 HEAPF32[$this + 1050816 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050820 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050824 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050828 >> 2] = 1.0;
 HEAPF32[$this + 1050832 >> 2] = .38999998569488525;
 HEAPF32[$this + 1050836 >> 2] = .38999998569488525;
 HEAPF32[$this + 1050840 >> 2] = .38999998569488525;
 HEAPF32[$this + 1050844 >> 2] = 1.0;
 HEAPF32[$this + 1050848 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050852 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050856 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050860 >> 2] = .7799999713897705;
 HEAPF32[$this + 1050864 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050868 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050872 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050876 >> 2] = 1.0;
 HEAPF32[$this + 1050880 >> 2] = 1.0;
 HEAPF32[$this + 1050884 >> 2] = 1.0;
 HEAPF32[$this + 1050888 >> 2] = 1.0;
 HEAPF32[$this + 1050892 >> 2] = 0.0;
 HEAPF32[$this + 1050896 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050900 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050904 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050908 >> 2] = .6700000166893005;
 HEAPF32[$this + 1050912 >> 2] = .25999999046325684;
 HEAPF32[$this + 1050916 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050920 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050924 >> 2] = .949999988079071;
 HEAPF32[$this + 1050928 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050932 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050936 >> 2] = .5899999737739563;
 HEAPF32[$this + 1050940 >> 2] = .5;
 HEAPF32[$this + 1050944 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050948 >> 2] = .38999998569488525;
 HEAPF32[$this + 1050952 >> 2] = .36000001430511475;
 HEAPF32[$this + 1050956 >> 2] = 1.0;
 HEAPF32[$this + 1050960 >> 2] = .9800000190734863;
 HEAPF32[$this + 1050964 >> 2] = .38999998569488525;
 HEAPF32[$this + 1050968 >> 2] = .36000001430511475;
 HEAPF32[$this + 1050972 >> 2] = 1.0;
 HEAPF32[$this + 1050976 >> 2] = .38999998569488525;
 HEAPF32[$this + 1050980 >> 2] = .38999998569488525;
 HEAPF32[$this + 1050984 >> 2] = .38999998569488525;
 HEAPF32[$this + 1050988 >> 2] = 1.0;
 HEAPF32[$this + 1050992 >> 2] = 1.0;
 HEAPF32[$this + 1050996 >> 2] = .4300000071525574;
 HEAPF32[$this + 1051e3 >> 2] = .3499999940395355;
 HEAPF32[$this + 1051004 >> 2] = 1.0;
 HEAPF32[$this + 1051008 >> 2] = .8999999761581421;
 HEAPF32[$this + 1051012 >> 2] = .699999988079071;
 HEAPF32[$this + 1051016 >> 2] = 0.0;
 HEAPF32[$this + 1051020 >> 2] = 1.0;
 HEAPF32[$this + 1051024 >> 2] = 1.0;
 HEAPF32[$this + 1051028 >> 2] = .6000000238418579;
 HEAPF32[$this + 1051032 >> 2] = 0.0;
 HEAPF32[$this + 1051036 >> 2] = 1.0;
 HEAPF32[$this + 1051040 >> 2] = .25999999046325684;
 HEAPF32[$this + 1051044 >> 2] = .5899999737739563;
 HEAPF32[$this + 1051048 >> 2] = .9800000190734863;
 HEAPF32[$this + 1051052 >> 2] = .3499999940395355;
 HEAPF32[$this + 1051056 >> 2] = 1.0;
 HEAPF32[$this + 1051060 >> 2] = 1.0;
 HEAPF32[$this + 1051064 >> 2] = 1.0;
 HEAPF32[$this + 1051068 >> 2] = .9399999976158142;
 HEAPF32[$this + 1051072 >> 2] = .20000000298023224;
 HEAPF32[$this + 1051076 >> 2] = .20000000298023224;
 HEAPF32[$this + 1051080 >> 2] = .20000000298023224;
 HEAPF32[$this + 1051084 >> 2] = .3499999940395355;
 HEAP8[$this + 1049466 >> 0] = 1;
 HEAP8[$this + 1049467 >> 0] = 0;
 _memcpy(__ZN5ImGui8GetStyleEv() | 0, $this + 1049472 | 0, 808) | 0;
 $718 = $this + 1049592 | 0;
 HEAP32[36632] = HEAP32[$718 >> 2];
 HEAP32[36633] = HEAP32[$718 + 4 >> 2];
 HEAP32[36634] = HEAP32[$718 + 8 >> 2];
 HEAP32[36635] = HEAP32[$718 + 12 >> 2];
 HEAPF32[36644] = 0.0;
 HEAPF32[36645] = 1.0;
 HEAPF32[36646] = 0.0;
 HEAPF32[36647] = 1.0;
 HEAP32[36636] = HEAP32[36644];
 HEAP32[36637] = HEAP32[36645];
 HEAP32[36638] = HEAP32[36646];
 HEAP32[36639] = HEAP32[36647];
 HEAPF32[36648] = 1.0;
 HEAPF32[36649] = 0.0;
 HEAPF32[36650] = 0.0;
 HEAPF32[36651] = 1.0;
 HEAP32[36640] = HEAP32[36648];
 HEAP32[36641] = HEAP32[36649];
 HEAP32[36642] = HEAP32[36650];
 HEAP32[36643] = HEAP32[36651];
 HEAPF32[36652] = 1.0;
 HEAPF32[36653] = .5;
 HEAPF32[36654] = .25;
 HEAPF32[36655] = 1.0;
 HEAPF32[36656] = 1.0;
 HEAPF32[36657] = 1.0;
 HEAPF32[36658] = 1.0;
 HEAPF32[36659] = 1.0;
 HEAPF32[36660] = 1.0;
 HEAPF32[36661] = 0.0;
 HEAPF32[36662] = 1.0;
 HEAPF32[36663] = 1.0;
 HEAP32[36664] = -1;
 HEAP32[36665] = -1;
 __ZN10FileLoader5SetupERN4yakc4kc85E($this + 12 | 0, $kc);
 $720 = __ZN5Oryol5Clock3NowEv() | 0;
 $723 = $this + 1049432 | 0;
 HEAP32[$723 >> 2] = $720;
 HEAP32[$723 + 4 >> 2] = tempRet0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE6AssignERKNS_2IdERKS3_NS_13ResourceState4CodeE($this, $id, $setup, $state) {
 $this = $this | 0;
 $id = $id | 0;
 $setup = $setup | 0;
 $state = $state | 0;
 var $11 = 0, $126 = 0, $13 = 0, $131 = 0, $132 = 0, $136 = 0, $137 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $147 = 0, $15 = 0, $152 = 0, $153 = 0, $208 = 0, $213 = 0, $214 = 0, $218 = 0, $219 = 0, $22 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $229 = 0, $234 = 0, $235 = 0, $27 = 0, $28 = 0, $290 = 0, $295 = 0, $296 = 0, $3 = 0, $300 = 0, $301 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $311 = 0, $316 = 0, $317 = 0, $32 = 0, $372 = 0, $377 = 0, $378 = 0, $382 = 0, $383 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $393 = 0, $398 = 0, $399 = 0, $44 = 0, $45 = 0, $454 = 0, $459 = 0, $460 = 0, $464 = 0, $465 = 0, $467 = 0, $468 = 0, $469 = 0, $470 = 0, $471 = 0, $475 = 0, $480 = 0, $481 = 0, $536 = 0, $54 = 0, $541 = 0, $542 = 0, $546 = 0, $547 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $557 = 0, $562 = 0, $563 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $618 = 0, $623 = 0, $624 = 0, $628 = 0, $629 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $639 = 0, $644 = 0, $645 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $i$01$i$i$i = 0, $i$01$i$i$i15 = 0, $i$01$i$i$i21 = 0, $i$01$i$i$i27 = 0, $i$01$i$i$i3 = 0, $i$01$i$i$i33 = 0, $i$01$i$i$i39 = 0, $i$01$i$i$i9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 169, 55663);
  _abort();
 }
 $3 = HEAPU16[$id >> 1] | 0;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 55560);
  _abort();
 }
 $11 = HEAP32[$this + 16 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 55560);
  _abort();
 }
 $13 = $7 + $3 | 0;
 $14 = $11 + ($13 * 3712 | 0) | 0;
 $15 = $11 + ($13 * 3712 | 0) + 8 | 0;
 if ((HEAP32[$15 >> 2] | 0) == 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53850, 0, 48917, 172, 55663);
  _abort();
 }
 HEAP32[$15 >> 2] = $state;
 HEAP32[$11 + ($13 * 3712 | 0) + 12 >> 2] = HEAP32[$this + 4 >> 2];
 if (($14 | 0) != ($id | 0)) {
  $22 = $id;
  $27 = HEAP32[$22 + 4 >> 2] | 0;
  $28 = $14;
  HEAP32[$28 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$28 + 4 >> 2] = $27;
 }
 $32 = $11 + ($13 * 3712 | 0) + 16 | 0;
 if (($32 | 0) != ($setup | 0)) {
  HEAP32[$32 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($32, $setup);
 }
 HEAP32[$11 + ($13 * 3712 | 0) + 20 >> 2] = HEAP32[$setup + 4 >> 2];
 $39 = $setup + 8 | 0;
 $44 = HEAP32[$39 + 4 >> 2] | 0;
 $45 = $11 + ($13 * 3712 | 0) + 24 | 0;
 HEAP32[$45 >> 2] = HEAP32[$39 >> 2];
 HEAP32[$45 + 4 >> 2] = $44;
 __ZN5Oryol11ShaderSetup12programEntryaSERKS1_($11 + ($13 * 3712 | 0) + 32 | 0, $setup + 16 | 0) | 0;
 HEAP32[$11 + ($13 * 3712 | 0) + 340 >> 2] = HEAP32[$setup + 324 >> 2];
 $54 = $11 + ($13 * 3712 | 0) + 344 | 0;
 $55 = $setup + 328 | 0;
 if (($55 | 0) == ($54 | 0)) {
  $57 = $11 + ($13 * 3712 | 0) + 352 | 0;
  $58 = $setup + 336 | 0;
  HEAP32[$57 >> 2] = HEAP32[$58 >> 2];
  HEAP32[$57 + 4 >> 2] = HEAP32[$58 + 4 >> 2];
  HEAP32[$57 + 8 >> 2] = HEAP32[$58 + 8 >> 2];
  HEAP32[$57 + 12 >> 2] = HEAP32[$58 + 12 >> 2];
 } else {
  HEAP32[$54 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($54, $55);
  $59 = $11 + ($13 * 3712 | 0) + 352 | 0;
  $60 = $setup + 336 | 0;
  HEAP32[$59 >> 2] = HEAP32[$60 >> 2];
  HEAP32[$59 + 4 >> 2] = HEAP32[$60 + 4 >> 2];
  HEAP32[$59 + 8 >> 2] = HEAP32[$60 + 8 >> 2];
  HEAP32[$59 + 12 >> 2] = HEAP32[$60 + 12 >> 2];
  $i$01$i$i$i3 = 0;
  do {
   $61 = $11 + ($13 * 3712 | 0) + 368 + ($i$01$i$i$i3 * 12 | 0) | 0;
   HEAP32[$61 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($61, $setup + 352 + ($i$01$i$i$i3 * 12 | 0) | 0);
   $65 = $setup + 352 + ($i$01$i$i$i3 * 12 | 0) + 4 | 0;
   $70 = HEAP32[$65 + 4 >> 2] | 0;
   $71 = $11 + ($13 * 3712 | 0) + 368 + ($i$01$i$i$i3 * 12 | 0) + 4 | 0;
   HEAP32[$71 >> 2] = HEAP32[$65 >> 2];
   HEAP32[$71 + 4 >> 2] = $70;
   $i$01$i$i$i3 = $i$01$i$i$i3 + 1 | 0;
  } while (($i$01$i$i$i3 | 0) != 16);
 }
 HEAP32[$11 + ($13 * 3712 | 0) + 560 >> 2] = HEAP32[$setup + 544 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 564 >> 2] = HEAP32[$setup + 548 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 568 >> 2] = HEAP32[$setup + 552 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 572 >> 2] = HEAP32[$setup + 556 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 576 >> 2] = HEAP32[$setup + 560 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 580 >> 2] = HEAP32[$setup + 564 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 584 >> 2] = HEAP32[$setup + 568 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 588 >> 2] = HEAP32[$setup + 572 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 592 >> 2] = HEAP32[$setup + 576 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 596 >> 2] = HEAP32[$setup + 580 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 600 >> 2] = HEAP32[$setup + 584 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 604 >> 2] = HEAP32[$setup + 588 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 608 >> 2] = HEAP32[$setup + 592 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 612 >> 2] = HEAP32[$setup + 596 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 616 >> 2] = HEAP32[$setup + 600 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 620 >> 2] = HEAP32[$setup + 604 >> 2];
 $126 = $setup + 608 | 0;
 $131 = HEAP32[$126 + 4 >> 2] | 0;
 $132 = $11 + ($13 * 3712 | 0) + 624 | 0;
 HEAP32[$132 >> 2] = HEAP32[$126 >> 2];
 HEAP32[$132 + 4 >> 2] = $131;
 $136 = $11 + ($13 * 3712 | 0) + 632 | 0;
 $137 = $setup + 616 | 0;
 if (($137 | 0) == ($136 | 0)) {
  $139 = $11 + ($13 * 3712 | 0) + 640 | 0;
  $140 = $setup + 624 | 0;
  HEAP32[$139 >> 2] = HEAP32[$140 >> 2];
  HEAP32[$139 + 4 >> 2] = HEAP32[$140 + 4 >> 2];
  HEAP32[$139 + 8 >> 2] = HEAP32[$140 + 8 >> 2];
  HEAP32[$139 + 12 >> 2] = HEAP32[$140 + 12 >> 2];
 } else {
  HEAP32[$136 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($136, $137);
  $141 = $11 + ($13 * 3712 | 0) + 640 | 0;
  $142 = $setup + 624 | 0;
  HEAP32[$141 >> 2] = HEAP32[$142 >> 2];
  HEAP32[$141 + 4 >> 2] = HEAP32[$142 + 4 >> 2];
  HEAP32[$141 + 8 >> 2] = HEAP32[$142 + 8 >> 2];
  HEAP32[$141 + 12 >> 2] = HEAP32[$142 + 12 >> 2];
  $i$01$i$i$i9 = 0;
  do {
   $143 = $11 + ($13 * 3712 | 0) + 656 + ($i$01$i$i$i9 * 12 | 0) | 0;
   HEAP32[$143 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($143, $setup + 640 + ($i$01$i$i$i9 * 12 | 0) | 0);
   $147 = $setup + 640 + ($i$01$i$i$i9 * 12 | 0) + 4 | 0;
   $152 = HEAP32[$147 + 4 >> 2] | 0;
   $153 = $11 + ($13 * 3712 | 0) + 656 + ($i$01$i$i$i9 * 12 | 0) + 4 | 0;
   HEAP32[$153 >> 2] = HEAP32[$147 >> 2];
   HEAP32[$153 + 4 >> 2] = $152;
   $i$01$i$i$i9 = $i$01$i$i$i9 + 1 | 0;
  } while (($i$01$i$i$i9 | 0) != 16);
 }
 HEAP32[$11 + ($13 * 3712 | 0) + 848 >> 2] = HEAP32[$setup + 832 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 852 >> 2] = HEAP32[$setup + 836 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 856 >> 2] = HEAP32[$setup + 840 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 860 >> 2] = HEAP32[$setup + 844 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 864 >> 2] = HEAP32[$setup + 848 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 868 >> 2] = HEAP32[$setup + 852 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 872 >> 2] = HEAP32[$setup + 856 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 876 >> 2] = HEAP32[$setup + 860 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 880 >> 2] = HEAP32[$setup + 864 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 884 >> 2] = HEAP32[$setup + 868 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 888 >> 2] = HEAP32[$setup + 872 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 892 >> 2] = HEAP32[$setup + 876 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 896 >> 2] = HEAP32[$setup + 880 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 900 >> 2] = HEAP32[$setup + 884 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 904 >> 2] = HEAP32[$setup + 888 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 908 >> 2] = HEAP32[$setup + 892 >> 2];
 $208 = $setup + 896 | 0;
 $213 = HEAP32[$208 + 4 >> 2] | 0;
 $214 = $11 + ($13 * 3712 | 0) + 912 | 0;
 HEAP32[$214 >> 2] = HEAP32[$208 >> 2];
 HEAP32[$214 + 4 >> 2] = $213;
 $218 = $11 + ($13 * 3712 | 0) + 920 | 0;
 $219 = $setup + 904 | 0;
 if (($219 | 0) == ($218 | 0)) {
  $221 = $11 + ($13 * 3712 | 0) + 928 | 0;
  $222 = $setup + 912 | 0;
  HEAP32[$221 >> 2] = HEAP32[$222 >> 2];
  HEAP32[$221 + 4 >> 2] = HEAP32[$222 + 4 >> 2];
  HEAP32[$221 + 8 >> 2] = HEAP32[$222 + 8 >> 2];
  HEAP32[$221 + 12 >> 2] = HEAP32[$222 + 12 >> 2];
 } else {
  HEAP32[$218 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($218, $219);
  $223 = $11 + ($13 * 3712 | 0) + 928 | 0;
  $224 = $setup + 912 | 0;
  HEAP32[$223 >> 2] = HEAP32[$224 >> 2];
  HEAP32[$223 + 4 >> 2] = HEAP32[$224 + 4 >> 2];
  HEAP32[$223 + 8 >> 2] = HEAP32[$224 + 8 >> 2];
  HEAP32[$223 + 12 >> 2] = HEAP32[$224 + 12 >> 2];
  $i$01$i$i$i15 = 0;
  do {
   $225 = $11 + ($13 * 3712 | 0) + 944 + ($i$01$i$i$i15 * 12 | 0) | 0;
   HEAP32[$225 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($225, $setup + 928 + ($i$01$i$i$i15 * 12 | 0) | 0);
   $229 = $setup + 928 + ($i$01$i$i$i15 * 12 | 0) + 4 | 0;
   $234 = HEAP32[$229 + 4 >> 2] | 0;
   $235 = $11 + ($13 * 3712 | 0) + 944 + ($i$01$i$i$i15 * 12 | 0) + 4 | 0;
   HEAP32[$235 >> 2] = HEAP32[$229 >> 2];
   HEAP32[$235 + 4 >> 2] = $234;
   $i$01$i$i$i15 = $i$01$i$i$i15 + 1 | 0;
  } while (($i$01$i$i$i15 | 0) != 16);
 }
 HEAP32[$11 + ($13 * 3712 | 0) + 1136 >> 2] = HEAP32[$setup + 1120 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1140 >> 2] = HEAP32[$setup + 1124 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1144 >> 2] = HEAP32[$setup + 1128 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1148 >> 2] = HEAP32[$setup + 1132 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1152 >> 2] = HEAP32[$setup + 1136 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1156 >> 2] = HEAP32[$setup + 1140 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1160 >> 2] = HEAP32[$setup + 1144 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1164 >> 2] = HEAP32[$setup + 1148 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1168 >> 2] = HEAP32[$setup + 1152 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1172 >> 2] = HEAP32[$setup + 1156 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1176 >> 2] = HEAP32[$setup + 1160 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1180 >> 2] = HEAP32[$setup + 1164 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1184 >> 2] = HEAP32[$setup + 1168 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1188 >> 2] = HEAP32[$setup + 1172 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1192 >> 2] = HEAP32[$setup + 1176 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1196 >> 2] = HEAP32[$setup + 1180 >> 2];
 $290 = $setup + 1184 | 0;
 $295 = HEAP32[$290 + 4 >> 2] | 0;
 $296 = $11 + ($13 * 3712 | 0) + 1200 | 0;
 HEAP32[$296 >> 2] = HEAP32[$290 >> 2];
 HEAP32[$296 + 4 >> 2] = $295;
 $300 = $11 + ($13 * 3712 | 0) + 1208 | 0;
 $301 = $setup + 1192 | 0;
 if (($301 | 0) == ($300 | 0)) {
  $303 = $11 + ($13 * 3712 | 0) + 1216 | 0;
  $304 = $setup + 1200 | 0;
  HEAP32[$303 >> 2] = HEAP32[$304 >> 2];
  HEAP32[$303 + 4 >> 2] = HEAP32[$304 + 4 >> 2];
  HEAP32[$303 + 8 >> 2] = HEAP32[$304 + 8 >> 2];
  HEAP32[$303 + 12 >> 2] = HEAP32[$304 + 12 >> 2];
 } else {
  HEAP32[$300 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($300, $301);
  $305 = $11 + ($13 * 3712 | 0) + 1216 | 0;
  $306 = $setup + 1200 | 0;
  HEAP32[$305 >> 2] = HEAP32[$306 >> 2];
  HEAP32[$305 + 4 >> 2] = HEAP32[$306 + 4 >> 2];
  HEAP32[$305 + 8 >> 2] = HEAP32[$306 + 8 >> 2];
  HEAP32[$305 + 12 >> 2] = HEAP32[$306 + 12 >> 2];
  $i$01$i$i$i21 = 0;
  do {
   $307 = $11 + ($13 * 3712 | 0) + 1232 + ($i$01$i$i$i21 * 12 | 0) | 0;
   HEAP32[$307 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($307, $setup + 1216 + ($i$01$i$i$i21 * 12 | 0) | 0);
   $311 = $setup + 1216 + ($i$01$i$i$i21 * 12 | 0) + 4 | 0;
   $316 = HEAP32[$311 + 4 >> 2] | 0;
   $317 = $11 + ($13 * 3712 | 0) + 1232 + ($i$01$i$i$i21 * 12 | 0) + 4 | 0;
   HEAP32[$317 >> 2] = HEAP32[$311 >> 2];
   HEAP32[$317 + 4 >> 2] = $316;
   $i$01$i$i$i21 = $i$01$i$i$i21 + 1 | 0;
  } while (($i$01$i$i$i21 | 0) != 16);
 }
 HEAP32[$11 + ($13 * 3712 | 0) + 1424 >> 2] = HEAP32[$setup + 1408 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1428 >> 2] = HEAP32[$setup + 1412 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1432 >> 2] = HEAP32[$setup + 1416 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1436 >> 2] = HEAP32[$setup + 1420 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1440 >> 2] = HEAP32[$setup + 1424 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1444 >> 2] = HEAP32[$setup + 1428 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1448 >> 2] = HEAP32[$setup + 1432 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1452 >> 2] = HEAP32[$setup + 1436 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1456 >> 2] = HEAP32[$setup + 1440 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1460 >> 2] = HEAP32[$setup + 1444 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1464 >> 2] = HEAP32[$setup + 1448 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1468 >> 2] = HEAP32[$setup + 1452 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1472 >> 2] = HEAP32[$setup + 1456 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1476 >> 2] = HEAP32[$setup + 1460 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1480 >> 2] = HEAP32[$setup + 1464 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1484 >> 2] = HEAP32[$setup + 1468 >> 2];
 $372 = $setup + 1472 | 0;
 $377 = HEAP32[$372 + 4 >> 2] | 0;
 $378 = $11 + ($13 * 3712 | 0) + 1488 | 0;
 HEAP32[$378 >> 2] = HEAP32[$372 >> 2];
 HEAP32[$378 + 4 >> 2] = $377;
 $382 = $11 + ($13 * 3712 | 0) + 1496 | 0;
 $383 = $setup + 1480 | 0;
 if (($383 | 0) == ($382 | 0)) {
  $385 = $11 + ($13 * 3712 | 0) + 1504 | 0;
  $386 = $setup + 1488 | 0;
  HEAP32[$385 >> 2] = HEAP32[$386 >> 2];
  HEAP32[$385 + 4 >> 2] = HEAP32[$386 + 4 >> 2];
  HEAP32[$385 + 8 >> 2] = HEAP32[$386 + 8 >> 2];
  HEAP32[$385 + 12 >> 2] = HEAP32[$386 + 12 >> 2];
 } else {
  HEAP32[$382 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($382, $383);
  $387 = $11 + ($13 * 3712 | 0) + 1504 | 0;
  $388 = $setup + 1488 | 0;
  HEAP32[$387 >> 2] = HEAP32[$388 >> 2];
  HEAP32[$387 + 4 >> 2] = HEAP32[$388 + 4 >> 2];
  HEAP32[$387 + 8 >> 2] = HEAP32[$388 + 8 >> 2];
  HEAP32[$387 + 12 >> 2] = HEAP32[$388 + 12 >> 2];
  $i$01$i$i$i27 = 0;
  do {
   $389 = $11 + ($13 * 3712 | 0) + 1520 + ($i$01$i$i$i27 * 12 | 0) | 0;
   HEAP32[$389 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($389, $setup + 1504 + ($i$01$i$i$i27 * 12 | 0) | 0);
   $393 = $setup + 1504 + ($i$01$i$i$i27 * 12 | 0) + 4 | 0;
   $398 = HEAP32[$393 + 4 >> 2] | 0;
   $399 = $11 + ($13 * 3712 | 0) + 1520 + ($i$01$i$i$i27 * 12 | 0) + 4 | 0;
   HEAP32[$399 >> 2] = HEAP32[$393 >> 2];
   HEAP32[$399 + 4 >> 2] = $398;
   $i$01$i$i$i27 = $i$01$i$i$i27 + 1 | 0;
  } while (($i$01$i$i$i27 | 0) != 16);
 }
 HEAP32[$11 + ($13 * 3712 | 0) + 1712 >> 2] = HEAP32[$setup + 1696 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1716 >> 2] = HEAP32[$setup + 1700 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1720 >> 2] = HEAP32[$setup + 1704 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1724 >> 2] = HEAP32[$setup + 1708 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1728 >> 2] = HEAP32[$setup + 1712 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1732 >> 2] = HEAP32[$setup + 1716 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1736 >> 2] = HEAP32[$setup + 1720 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1740 >> 2] = HEAP32[$setup + 1724 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1744 >> 2] = HEAP32[$setup + 1728 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1748 >> 2] = HEAP32[$setup + 1732 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1752 >> 2] = HEAP32[$setup + 1736 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1756 >> 2] = HEAP32[$setup + 1740 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1760 >> 2] = HEAP32[$setup + 1744 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1764 >> 2] = HEAP32[$setup + 1748 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1768 >> 2] = HEAP32[$setup + 1752 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 1772 >> 2] = HEAP32[$setup + 1756 >> 2];
 $454 = $setup + 1760 | 0;
 $459 = HEAP32[$454 + 4 >> 2] | 0;
 $460 = $11 + ($13 * 3712 | 0) + 1776 | 0;
 HEAP32[$460 >> 2] = HEAP32[$454 >> 2];
 HEAP32[$460 + 4 >> 2] = $459;
 $464 = $11 + ($13 * 3712 | 0) + 1784 | 0;
 $465 = $setup + 1768 | 0;
 if (($465 | 0) == ($464 | 0)) {
  $467 = $11 + ($13 * 3712 | 0) + 1792 | 0;
  $468 = $setup + 1776 | 0;
  HEAP32[$467 >> 2] = HEAP32[$468 >> 2];
  HEAP32[$467 + 4 >> 2] = HEAP32[$468 + 4 >> 2];
  HEAP32[$467 + 8 >> 2] = HEAP32[$468 + 8 >> 2];
  HEAP32[$467 + 12 >> 2] = HEAP32[$468 + 12 >> 2];
 } else {
  HEAP32[$464 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($464, $465);
  $469 = $11 + ($13 * 3712 | 0) + 1792 | 0;
  $470 = $setup + 1776 | 0;
  HEAP32[$469 >> 2] = HEAP32[$470 >> 2];
  HEAP32[$469 + 4 >> 2] = HEAP32[$470 + 4 >> 2];
  HEAP32[$469 + 8 >> 2] = HEAP32[$470 + 8 >> 2];
  HEAP32[$469 + 12 >> 2] = HEAP32[$470 + 12 >> 2];
  $i$01$i$i$i33 = 0;
  do {
   $471 = $11 + ($13 * 3712 | 0) + 1808 + ($i$01$i$i$i33 * 12 | 0) | 0;
   HEAP32[$471 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($471, $setup + 1792 + ($i$01$i$i$i33 * 12 | 0) | 0);
   $475 = $setup + 1792 + ($i$01$i$i$i33 * 12 | 0) + 4 | 0;
   $480 = HEAP32[$475 + 4 >> 2] | 0;
   $481 = $11 + ($13 * 3712 | 0) + 1808 + ($i$01$i$i$i33 * 12 | 0) + 4 | 0;
   HEAP32[$481 >> 2] = HEAP32[$475 >> 2];
   HEAP32[$481 + 4 >> 2] = $480;
   $i$01$i$i$i33 = $i$01$i$i$i33 + 1 | 0;
  } while (($i$01$i$i$i33 | 0) != 16);
 }
 HEAP32[$11 + ($13 * 3712 | 0) + 2e3 >> 2] = HEAP32[$setup + 1984 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2004 >> 2] = HEAP32[$setup + 1988 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2008 >> 2] = HEAP32[$setup + 1992 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2012 >> 2] = HEAP32[$setup + 1996 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2016 >> 2] = HEAP32[$setup + 2e3 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2020 >> 2] = HEAP32[$setup + 2004 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2024 >> 2] = HEAP32[$setup + 2008 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2028 >> 2] = HEAP32[$setup + 2012 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2032 >> 2] = HEAP32[$setup + 2016 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2036 >> 2] = HEAP32[$setup + 2020 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2040 >> 2] = HEAP32[$setup + 2024 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2044 >> 2] = HEAP32[$setup + 2028 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2048 >> 2] = HEAP32[$setup + 2032 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2052 >> 2] = HEAP32[$setup + 2036 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2056 >> 2] = HEAP32[$setup + 2040 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2060 >> 2] = HEAP32[$setup + 2044 >> 2];
 $536 = $setup + 2048 | 0;
 $541 = HEAP32[$536 + 4 >> 2] | 0;
 $542 = $11 + ($13 * 3712 | 0) + 2064 | 0;
 HEAP32[$542 >> 2] = HEAP32[$536 >> 2];
 HEAP32[$542 + 4 >> 2] = $541;
 $546 = $11 + ($13 * 3712 | 0) + 2072 | 0;
 $547 = $setup + 2056 | 0;
 if (($547 | 0) == ($546 | 0)) {
  $549 = $11 + ($13 * 3712 | 0) + 2080 | 0;
  $550 = $setup + 2064 | 0;
  HEAP32[$549 >> 2] = HEAP32[$550 >> 2];
  HEAP32[$549 + 4 >> 2] = HEAP32[$550 + 4 >> 2];
  HEAP32[$549 + 8 >> 2] = HEAP32[$550 + 8 >> 2];
  HEAP32[$549 + 12 >> 2] = HEAP32[$550 + 12 >> 2];
 } else {
  HEAP32[$546 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($546, $547);
  $551 = $11 + ($13 * 3712 | 0) + 2080 | 0;
  $552 = $setup + 2064 | 0;
  HEAP32[$551 >> 2] = HEAP32[$552 >> 2];
  HEAP32[$551 + 4 >> 2] = HEAP32[$552 + 4 >> 2];
  HEAP32[$551 + 8 >> 2] = HEAP32[$552 + 8 >> 2];
  HEAP32[$551 + 12 >> 2] = HEAP32[$552 + 12 >> 2];
  $i$01$i$i$i39 = 0;
  do {
   $553 = $11 + ($13 * 3712 | 0) + 2096 + ($i$01$i$i$i39 * 12 | 0) | 0;
   HEAP32[$553 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($553, $setup + 2080 + ($i$01$i$i$i39 * 12 | 0) | 0);
   $557 = $setup + 2080 + ($i$01$i$i$i39 * 12 | 0) + 4 | 0;
   $562 = HEAP32[$557 + 4 >> 2] | 0;
   $563 = $11 + ($13 * 3712 | 0) + 2096 + ($i$01$i$i$i39 * 12 | 0) + 4 | 0;
   HEAP32[$563 >> 2] = HEAP32[$557 >> 2];
   HEAP32[$563 + 4 >> 2] = $562;
   $i$01$i$i$i39 = $i$01$i$i$i39 + 1 | 0;
  } while (($i$01$i$i$i39 | 0) != 16);
 }
 HEAP32[$11 + ($13 * 3712 | 0) + 2288 >> 2] = HEAP32[$setup + 2272 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2292 >> 2] = HEAP32[$setup + 2276 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2296 >> 2] = HEAP32[$setup + 2280 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2300 >> 2] = HEAP32[$setup + 2284 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2304 >> 2] = HEAP32[$setup + 2288 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2308 >> 2] = HEAP32[$setup + 2292 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2312 >> 2] = HEAP32[$setup + 2296 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2316 >> 2] = HEAP32[$setup + 2300 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2320 >> 2] = HEAP32[$setup + 2304 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2324 >> 2] = HEAP32[$setup + 2308 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2328 >> 2] = HEAP32[$setup + 2312 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2332 >> 2] = HEAP32[$setup + 2316 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2336 >> 2] = HEAP32[$setup + 2320 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2340 >> 2] = HEAP32[$setup + 2324 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2344 >> 2] = HEAP32[$setup + 2328 >> 2];
 HEAP32[$11 + ($13 * 3712 | 0) + 2348 >> 2] = HEAP32[$setup + 2332 >> 2];
 $618 = $setup + 2336 | 0;
 $623 = HEAP32[$618 + 4 >> 2] | 0;
 $624 = $11 + ($13 * 3712 | 0) + 2352 | 0;
 HEAP32[$624 >> 2] = HEAP32[$618 >> 2];
 HEAP32[$624 + 4 >> 2] = $623;
 $628 = $11 + ($13 * 3712 | 0) + 2360 | 0;
 $629 = $setup + 2344 | 0;
 if (($629 | 0) == ($628 | 0)) {
  $631 = $11 + ($13 * 3712 | 0) + 2368 | 0;
  $632 = $setup + 2352 | 0;
  HEAP32[$631 >> 2] = HEAP32[$632 >> 2];
  HEAP32[$631 + 4 >> 2] = HEAP32[$632 + 4 >> 2];
  HEAP32[$631 + 8 >> 2] = HEAP32[$632 + 8 >> 2];
  HEAP32[$631 + 12 >> 2] = HEAP32[$632 + 12 >> 2];
  $650 = $setup + 2560 | 0;
  $651 = HEAP32[$650 >> 2] | 0;
  $652 = $11 + ($13 * 3712 | 0) + 2576 | 0;
  HEAP32[$652 >> 2] = $651;
  $653 = $setup + 2564 | 0;
  $654 = HEAP32[$653 >> 2] | 0;
  $655 = $11 + ($13 * 3712 | 0) + 2580 | 0;
  HEAP32[$655 >> 2] = $654;
  $656 = $setup + 2568 | 0;
  $657 = HEAP32[$656 >> 2] | 0;
  $658 = $11 + ($13 * 3712 | 0) + 2584 | 0;
  HEAP32[$658 >> 2] = $657;
  $659 = $setup + 2572 | 0;
  $660 = HEAP32[$659 >> 2] | 0;
  $661 = $11 + ($13 * 3712 | 0) + 2588 | 0;
  HEAP32[$661 >> 2] = $660;
  $662 = $setup + 2576 | 0;
  $663 = HEAP32[$662 >> 2] | 0;
  $664 = $11 + ($13 * 3712 | 0) + 2592 | 0;
  HEAP32[$664 >> 2] = $663;
  $665 = $setup + 2580 | 0;
  $666 = HEAP32[$665 >> 2] | 0;
  $667 = $11 + ($13 * 3712 | 0) + 2596 | 0;
  HEAP32[$667 >> 2] = $666;
  $668 = $setup + 2584 | 0;
  $669 = HEAP32[$668 >> 2] | 0;
  $670 = $11 + ($13 * 3712 | 0) + 2600 | 0;
  HEAP32[$670 >> 2] = $669;
  $671 = $setup + 2588 | 0;
  $672 = HEAP32[$671 >> 2] | 0;
  $673 = $11 + ($13 * 3712 | 0) + 2604 | 0;
  HEAP32[$673 >> 2] = $672;
  $674 = $setup + 2592 | 0;
  $675 = HEAP32[$674 >> 2] | 0;
  $676 = $11 + ($13 * 3712 | 0) + 2608 | 0;
  HEAP32[$676 >> 2] = $675;
  $677 = $setup + 2596 | 0;
  $678 = HEAP32[$677 >> 2] | 0;
  $679 = $11 + ($13 * 3712 | 0) + 2612 | 0;
  HEAP32[$679 >> 2] = $678;
  $680 = $setup + 2600 | 0;
  $681 = HEAP32[$680 >> 2] | 0;
  $682 = $11 + ($13 * 3712 | 0) + 2616 | 0;
  HEAP32[$682 >> 2] = $681;
  $683 = $setup + 2604 | 0;
  $684 = HEAP32[$683 >> 2] | 0;
  $685 = $11 + ($13 * 3712 | 0) + 2620 | 0;
  HEAP32[$685 >> 2] = $684;
  $686 = $setup + 2608 | 0;
  $687 = HEAP32[$686 >> 2] | 0;
  $688 = $11 + ($13 * 3712 | 0) + 2624 | 0;
  HEAP32[$688 >> 2] = $687;
  $689 = $setup + 2612 | 0;
  $690 = HEAP32[$689 >> 2] | 0;
  $691 = $11 + ($13 * 3712 | 0) + 2628 | 0;
  HEAP32[$691 >> 2] = $690;
  $692 = $setup + 2616 | 0;
  $693 = HEAP32[$692 >> 2] | 0;
  $694 = $11 + ($13 * 3712 | 0) + 2632 | 0;
  HEAP32[$694 >> 2] = $693;
  $695 = $setup + 2620 | 0;
  $696 = HEAP32[$695 >> 2] | 0;
  $697 = $11 + ($13 * 3712 | 0) + 2636 | 0;
  HEAP32[$697 >> 2] = $696;
  $698 = $11 + ($13 * 3712 | 0) + 2640 | 0;
  $699 = $setup + 2624 | 0;
  $700 = $699;
  $701 = $700;
  $702 = HEAP32[$701 >> 2] | 0;
  $703 = $700 + 4 | 0;
  $704 = $703;
  $705 = HEAP32[$704 >> 2] | 0;
  $706 = $698;
  $707 = $706;
  HEAP32[$707 >> 2] = $702;
  $708 = $706 + 4 | 0;
  $709 = $708;
  HEAP32[$709 >> 2] = $705;
  $710 = $setup + 2632 | 0;
  $711 = HEAP32[$710 >> 2] | 0;
  $712 = $11 + ($13 * 3712 | 0) + 2648 | 0;
  HEAP32[$712 >> 2] = $711;
  $713 = $11 + ($13 * 3712 | 0) + 2652 | 0;
  $714 = $setup + 2636 | 0;
  __ZN5Oryol11StaticArrayINS_11ShaderSetup17textureBlockEntryELi2EEaSERKS3_($713, $714);
  return $14 | 0;
 }
 HEAP32[$628 >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($628, $629);
 $633 = $11 + ($13 * 3712 | 0) + 2368 | 0;
 $634 = $setup + 2352 | 0;
 HEAP32[$633 >> 2] = HEAP32[$634 >> 2];
 HEAP32[$633 + 4 >> 2] = HEAP32[$634 + 4 >> 2];
 HEAP32[$633 + 8 >> 2] = HEAP32[$634 + 8 >> 2];
 HEAP32[$633 + 12 >> 2] = HEAP32[$634 + 12 >> 2];
 $i$01$i$i$i = 0;
 do {
  $635 = $11 + ($13 * 3712 | 0) + 2384 + ($i$01$i$i$i * 12 | 0) | 0;
  HEAP32[$635 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($635, $setup + 2368 + ($i$01$i$i$i * 12 | 0) | 0);
  $639 = $setup + 2368 + ($i$01$i$i$i * 12 | 0) + 4 | 0;
  $644 = HEAP32[$639 + 4 >> 2] | 0;
  $645 = $11 + ($13 * 3712 | 0) + 2384 + ($i$01$i$i$i * 12 | 0) + 4 | 0;
  HEAP32[$645 >> 2] = HEAP32[$639 >> 2];
  HEAP32[$645 + 4 >> 2] = $644;
  $i$01$i$i$i = $i$01$i$i$i + 1 | 0;
 } while (($i$01$i$i$i | 0) != 16);
 $650 = $setup + 2560 | 0;
 $651 = HEAP32[$650 >> 2] | 0;
 $652 = $11 + ($13 * 3712 | 0) + 2576 | 0;
 HEAP32[$652 >> 2] = $651;
 $653 = $setup + 2564 | 0;
 $654 = HEAP32[$653 >> 2] | 0;
 $655 = $11 + ($13 * 3712 | 0) + 2580 | 0;
 HEAP32[$655 >> 2] = $654;
 $656 = $setup + 2568 | 0;
 $657 = HEAP32[$656 >> 2] | 0;
 $658 = $11 + ($13 * 3712 | 0) + 2584 | 0;
 HEAP32[$658 >> 2] = $657;
 $659 = $setup + 2572 | 0;
 $660 = HEAP32[$659 >> 2] | 0;
 $661 = $11 + ($13 * 3712 | 0) + 2588 | 0;
 HEAP32[$661 >> 2] = $660;
 $662 = $setup + 2576 | 0;
 $663 = HEAP32[$662 >> 2] | 0;
 $664 = $11 + ($13 * 3712 | 0) + 2592 | 0;
 HEAP32[$664 >> 2] = $663;
 $665 = $setup + 2580 | 0;
 $666 = HEAP32[$665 >> 2] | 0;
 $667 = $11 + ($13 * 3712 | 0) + 2596 | 0;
 HEAP32[$667 >> 2] = $666;
 $668 = $setup + 2584 | 0;
 $669 = HEAP32[$668 >> 2] | 0;
 $670 = $11 + ($13 * 3712 | 0) + 2600 | 0;
 HEAP32[$670 >> 2] = $669;
 $671 = $setup + 2588 | 0;
 $672 = HEAP32[$671 >> 2] | 0;
 $673 = $11 + ($13 * 3712 | 0) + 2604 | 0;
 HEAP32[$673 >> 2] = $672;
 $674 = $setup + 2592 | 0;
 $675 = HEAP32[$674 >> 2] | 0;
 $676 = $11 + ($13 * 3712 | 0) + 2608 | 0;
 HEAP32[$676 >> 2] = $675;
 $677 = $setup + 2596 | 0;
 $678 = HEAP32[$677 >> 2] | 0;
 $679 = $11 + ($13 * 3712 | 0) + 2612 | 0;
 HEAP32[$679 >> 2] = $678;
 $680 = $setup + 2600 | 0;
 $681 = HEAP32[$680 >> 2] | 0;
 $682 = $11 + ($13 * 3712 | 0) + 2616 | 0;
 HEAP32[$682 >> 2] = $681;
 $683 = $setup + 2604 | 0;
 $684 = HEAP32[$683 >> 2] | 0;
 $685 = $11 + ($13 * 3712 | 0) + 2620 | 0;
 HEAP32[$685 >> 2] = $684;
 $686 = $setup + 2608 | 0;
 $687 = HEAP32[$686 >> 2] | 0;
 $688 = $11 + ($13 * 3712 | 0) + 2624 | 0;
 HEAP32[$688 >> 2] = $687;
 $689 = $setup + 2612 | 0;
 $690 = HEAP32[$689 >> 2] | 0;
 $691 = $11 + ($13 * 3712 | 0) + 2628 | 0;
 HEAP32[$691 >> 2] = $690;
 $692 = $setup + 2616 | 0;
 $693 = HEAP32[$692 >> 2] | 0;
 $694 = $11 + ($13 * 3712 | 0) + 2632 | 0;
 HEAP32[$694 >> 2] = $693;
 $695 = $setup + 2620 | 0;
 $696 = HEAP32[$695 >> 2] | 0;
 $697 = $11 + ($13 * 3712 | 0) + 2636 | 0;
 HEAP32[$697 >> 2] = $696;
 $698 = $11 + ($13 * 3712 | 0) + 2640 | 0;
 $699 = $setup + 2624 | 0;
 $700 = $699;
 $701 = $700;
 $702 = HEAP32[$701 >> 2] | 0;
 $703 = $700 + 4 | 0;
 $704 = $703;
 $705 = HEAP32[$704 >> 2] | 0;
 $706 = $698;
 $707 = $706;
 HEAP32[$707 >> 2] = $702;
 $708 = $706 + 4 | 0;
 $709 = $708;
 HEAP32[$709 >> 2] = $705;
 $710 = $setup + 2632 | 0;
 $711 = HEAP32[$710 >> 2] | 0;
 $712 = $11 + ($13 * 3712 | 0) + 2648 | 0;
 HEAP32[$712 >> 2] = $711;
 $713 = $11 + ($13 * 3712 | 0) + 2652 | 0;
 $714 = $setup + 2636 | 0;
 __ZN5Oryol11StaticArrayINS_11ShaderSetup17textureBlockEntryELi2EEaSERKS3_($713, $714);
 return $14 | 0;
}

function _vfscanf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$lcssa = 0, $$lcssa386 = 0, $$lcssa40 = 0, $$pre$phi184Z2D = 0, $$size$0 = 0, $0 = 0, $10 = 0, $104 = 0, $105 = 0, $107 = 0, $109 = 0, $11 = 0, $112 = 0, $115 = 0, $117 = 0, $12 = 0, $125 = 0, $129 = 0, $13 = 0, $136 = 0, $14 = 0, $142 = 0, $148 = 0, $15 = 0, $150 = 0, $151 = 0, $157 = 0, $160 = 0, $164 = 0, $166 = 0, $17 = 0, $172 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $180 = 0, $185 = 0, $189 = 0, $194 = 0, $195 = 0, $196 = 0, $198 = 0, $20 = 0, $200 = 0, $201 = 0, $209 = 0, $219 = 0, $221 = 0, $225 = 0, $227 = 0, $235 = 0, $243 = 0, $244 = 0, $247 = 0, $249 = 0, $25 = 0, $255 = 0, $262 = 0, $264 = 0, $270 = 0, $277 = 0, $282 = 0, $283 = 0, $290 = 0, $303 = 0, $307 = 0.0, $32 = 0, $327 = 0, $38 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $62 = 0, $7 = 0, $8 = 0, $81 = 0, $82 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $alloc$0 = 0, $alloc$0402 = 0, $alloc$1 = 0, $alloc$2 = 0, $ap2$i = 0, $base$0 = 0, $c$0102 = 0, $dest$0 = 0, $i$0$i = 0, $i$0$ph = 0, $i$0$ph$phi = 0, $i$0$ph22 = 0, $i$0$ph22$lcssa = 0, $i$1 = 0, $i$2 = 0, $i$2$ph = 0, $i$2$ph$phi = 0, $i$3 = 0, $i$4 = 0, $invert$0 = 0, $isdigittmp = 0, $k$0$ph = 0, $k$1$ph = 0, $matches$0107 = 0, $matches$0107$lcssa = 0, $matches$0107371 = 0, $matches$1 = 0, $matches$2 = 0, $matches$3 = 0, $p$0110 = 0, $p$1 = 0, $p$1$lcssa = 0, $p$10 = 0, $p$11 = 0, $p$2 = 0, $p$3$lcssa = 0, $p$398 = 0, $p$4 = 0, $p$5 = 0, $p$6 = 0, $p$7 = 0, $p$7$ph = 0, $p$8 = 0, $p$9 = 0, $pos$0111 = 0, $pos$1 = 0, $pos$2 = 0, $s$0105 = 0, $s$0105$lcssa = 0, $s$1 = 0, $s$2$ph = 0, $s$4 = 0, $s$5 = 0, $s$6 = 0, $s$7 = 0, $s$8 = 0, $s$9 = 0, $scanset = 0, $size$0 = 0, $st = 0, $wc = 0, $wcs$0106 = 0, $wcs$0106$lcssa = 0, $wcs$1 = 0, $wcs$10 = 0, $wcs$2 = 0, $wcs$3$ph = 0, $wcs$3$ph$lcssa = 0, $wcs$5 = 0, $wcs$6 = 0, $wcs$7 = 0, $wcs$8 = 0, $wcs$9 = 0, $width$0$lcssa = 0, $width$099 = 0, $width$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 $ap2$i = sp + 16 | 0;
 $st = sp + 8 | 0;
 $scanset = sp + 33 | 0;
 $wc = sp;
 $0 = sp + 32 | 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) $327 = ___lockfile($f) | 0; else $327 = 0;
 $5 = HEAP8[$fmt >> 0] | 0;
 L4 : do if (!($5 << 24 >> 24)) $matches$3 = 0; else {
  $7 = $f + 4 | 0;
  $8 = $f + 100 | 0;
  $9 = $f + 108 | 0;
  $10 = $f + 8 | 0;
  $11 = $scanset + 10 | 0;
  $12 = $scanset + 33 | 0;
  $13 = $st + 4 | 0;
  $14 = $scanset + 46 | 0;
  $15 = $scanset + 94 | 0;
  $17 = $5;
  $matches$0107 = 0;
  $p$0110 = $fmt;
  $pos$0111 = 0;
  $s$0105 = 0;
  $wcs$0106 = 0;
  L6 : while (1) {
   L8 : do if (!(_isspace($17 & 255) | 0)) {
    $47 = (HEAP8[$p$0110 >> 0] | 0) == 37;
    L10 : do if ($47) {
     $48 = $p$0110 + 1 | 0;
     $49 = HEAP8[$48 >> 0] | 0;
     L12 : do switch ($49 << 24 >> 24) {
     case 37:
      {
       break L10;
       break;
      }
     case 42:
      {
       $dest$0 = 0;
       $p$2 = $p$0110 + 2 | 0;
       break;
      }
     default:
      {
       $isdigittmp = ($49 & 255) + -48 | 0;
       if ($isdigittmp >>> 0 < 10) if ((HEAP8[$p$0110 + 2 >> 0] | 0) == 36) {
        HEAP32[$ap2$i >> 2] = HEAP32[$ap >> 2];
        $i$0$i = $isdigittmp;
        while (1) {
         $81 = (HEAP32[$ap2$i >> 2] | 0) + (4 - 1) & ~(4 - 1);
         $82 = HEAP32[$81 >> 2] | 0;
         HEAP32[$ap2$i >> 2] = $81 + 4;
         if ($i$0$i >>> 0 > 1) $i$0$i = $i$0$i + -1 | 0; else {
          $$lcssa = $82;
          break;
         }
        }
        $dest$0 = $$lcssa;
        $p$2 = $p$0110 + 3 | 0;
        break L12;
       }
       $90 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
       $91 = HEAP32[$90 >> 2] | 0;
       HEAP32[$ap >> 2] = $90 + 4;
       $dest$0 = $91;
       $p$2 = $48;
      }
     } while (0);
     $92 = HEAP8[$p$2 >> 0] | 0;
     $93 = $92 & 255;
     if (($93 + -48 | 0) >>> 0 < 10) {
      $97 = $93;
      $p$398 = $p$2;
      $width$099 = 0;
      while (1) {
       $96 = ($width$099 * 10 | 0) + -48 + $97 | 0;
       $98 = $p$398 + 1 | 0;
       $99 = HEAP8[$98 >> 0] | 0;
       $97 = $99 & 255;
       if (($97 + -48 | 0) >>> 0 >= 10) {
        $$lcssa40 = $99;
        $p$3$lcssa = $98;
        $width$0$lcssa = $96;
        break;
       } else {
        $p$398 = $98;
        $width$099 = $96;
       }
      }
     } else {
      $$lcssa40 = $92;
      $p$3$lcssa = $p$2;
      $width$0$lcssa = 0;
     }
     if ($$lcssa40 << 24 >> 24 == 109) {
      $104 = $p$3$lcssa + 1 | 0;
      $107 = HEAP8[$104 >> 0] | 0;
      $alloc$0 = ($dest$0 | 0) != 0 & 1;
      $p$4 = $104;
      $s$1 = 0;
      $wcs$1 = 0;
     } else {
      $107 = $$lcssa40;
      $alloc$0 = 0;
      $p$4 = $p$3$lcssa;
      $s$1 = $s$0105;
      $wcs$1 = $wcs$0106;
     }
     $105 = $p$4 + 1 | 0;
     switch ($107 & 255 | 0) {
     case 104:
      {
       $109 = (HEAP8[$105 >> 0] | 0) == 104;
       $p$5 = $109 ? $p$4 + 2 | 0 : $105;
       $size$0 = $109 ? -2 : -1;
       break;
      }
     case 108:
      {
       $112 = (HEAP8[$105 >> 0] | 0) == 108;
       $p$5 = $112 ? $p$4 + 2 | 0 : $105;
       $size$0 = $112 ? 3 : 1;
       break;
      }
     case 106:
      {
       $p$5 = $105;
       $size$0 = 3;
       break;
      }
     case 116:
     case 122:
      {
       $p$5 = $105;
       $size$0 = 1;
       break;
      }
     case 76:
      {
       $p$5 = $105;
       $size$0 = 2;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       $p$5 = $p$4;
       $size$0 = 0;
       break;
      }
     default:
      {
       $alloc$0402 = $alloc$0;
       $matches$0107371 = $matches$0107;
       $s$7 = $s$1;
       $wcs$8 = $wcs$1;
       label = 154;
       break L6;
      }
     }
     $115 = HEAPU8[$p$5 >> 0] | 0;
     $117 = ($115 & 47 | 0) == 3;
     $$ = $117 ? $115 | 32 : $115;
     $$size$0 = $117 ? 1 : $size$0;
     switch ($$ | 0) {
     case 99:
      {
       $pos$1 = $pos$0111;
       $width$1 = ($width$0$lcssa | 0) < 1 ? 1 : $width$0$lcssa;
       break;
      }
     case 91:
      {
       $pos$1 = $pos$0111;
       $width$1 = $width$0$lcssa;
       break;
      }
     case 110:
      {
       if (!$dest$0) {
        $matches$1 = $matches$0107;
        $p$11 = $p$5;
        $pos$2 = $pos$0111;
        $s$6 = $s$1;
        $wcs$7 = $wcs$1;
        break L8;
       }
       switch ($$size$0 | 0) {
       case -2:
        {
         HEAP8[$dest$0 >> 0] = $pos$0111;
         $matches$1 = $matches$0107;
         $p$11 = $p$5;
         $pos$2 = $pos$0111;
         $s$6 = $s$1;
         $wcs$7 = $wcs$1;
         break L8;
         break;
        }
       case -1:
        {
         HEAP16[$dest$0 >> 1] = $pos$0111;
         $matches$1 = $matches$0107;
         $p$11 = $p$5;
         $pos$2 = $pos$0111;
         $s$6 = $s$1;
         $wcs$7 = $wcs$1;
         break L8;
         break;
        }
       case 0:
        {
         HEAP32[$dest$0 >> 2] = $pos$0111;
         $matches$1 = $matches$0107;
         $p$11 = $p$5;
         $pos$2 = $pos$0111;
         $s$6 = $s$1;
         $wcs$7 = $wcs$1;
         break L8;
         break;
        }
       case 1:
        {
         HEAP32[$dest$0 >> 2] = $pos$0111;
         $matches$1 = $matches$0107;
         $p$11 = $p$5;
         $pos$2 = $pos$0111;
         $s$6 = $s$1;
         $wcs$7 = $wcs$1;
         break L8;
         break;
        }
       case 3:
        {
         $125 = $dest$0;
         HEAP32[$125 >> 2] = $pos$0111;
         HEAP32[$125 + 4 >> 2] = (($pos$0111 | 0) < 0) << 31 >> 31;
         $matches$1 = $matches$0107;
         $p$11 = $p$5;
         $pos$2 = $pos$0111;
         $s$6 = $s$1;
         $wcs$7 = $wcs$1;
         break L8;
         break;
        }
       default:
        {
         $matches$1 = $matches$0107;
         $p$11 = $p$5;
         $pos$2 = $pos$0111;
         $s$6 = $s$1;
         $wcs$7 = $wcs$1;
         break L8;
        }
       }
       break;
      }
     default:
      {
       ___shlim($f, 0);
       do {
        $129 = HEAP32[$7 >> 2] | 0;
        if ($129 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
         HEAP32[$7 >> 2] = $129 + 1;
         $136 = HEAPU8[$129 >> 0] | 0;
        } else $136 = ___shgetc($f) | 0;
       } while ((_isspace($136) | 0) != 0);
       if (!(HEAP32[$8 >> 2] | 0)) $148 = HEAP32[$7 >> 2] | 0; else {
        $142 = (HEAP32[$7 >> 2] | 0) + -1 | 0;
        HEAP32[$7 >> 2] = $142;
        $148 = $142;
       }
       $pos$1 = (HEAP32[$9 >> 2] | 0) + $pos$0111 + $148 - (HEAP32[$10 >> 2] | 0) | 0;
       $width$1 = $width$0$lcssa;
      }
     }
     ___shlim($f, $width$1);
     $150 = HEAP32[$7 >> 2] | 0;
     $151 = HEAP32[$8 >> 2] | 0;
     if ($150 >>> 0 < $151 >>> 0) {
      HEAP32[$7 >> 2] = $150 + 1;
      $157 = $151;
     } else {
      if ((___shgetc($f) | 0) < 0) {
       $alloc$0402 = $alloc$0;
       $matches$0107371 = $matches$0107;
       $s$7 = $s$1;
       $wcs$8 = $wcs$1;
       label = 154;
       break L6;
      }
      $157 = HEAP32[$8 >> 2] | 0;
     }
     if ($157 | 0) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
     L68 : do switch ($$ | 0) {
     case 91:
     case 99:
     case 115:
      {
       $160 = ($$ | 0) == 99;
       L70 : do if (($$ | 16 | 0) == 115) {
        _memset($scanset | 0, -1, 257) | 0;
        HEAP8[$scanset >> 0] = 0;
        if (($$ | 0) == 115) {
         HEAP8[$12 >> 0] = 0;
         HEAP8[$11 >> 0] = 0;
         HEAP8[$11 + 1 >> 0] = 0;
         HEAP8[$11 + 2 >> 0] = 0;
         HEAP8[$11 + 3 >> 0] = 0;
         HEAP8[$11 + 4 >> 0] = 0;
         $p$9 = $p$5;
        } else $p$9 = $p$5;
       } else {
        $164 = $p$5 + 1 | 0;
        $166 = (HEAP8[$164 >> 0] | 0) == 94;
        $invert$0 = $166 & 1;
        $p$6 = $166 ? $p$5 + 2 | 0 : $164;
        _memset($scanset | 0, $166 & 1 | 0, 257) | 0;
        HEAP8[$scanset >> 0] = 0;
        switch (HEAP8[$p$6 >> 0] | 0) {
        case 45:
         {
          $172 = ($invert$0 ^ 1) & 255;
          HEAP8[$14 >> 0] = $172;
          $$pre$phi184Z2D = $172;
          $p$7$ph = $p$6 + 1 | 0;
          break;
         }
        case 93:
         {
          $175 = ($invert$0 ^ 1) & 255;
          HEAP8[$15 >> 0] = $175;
          $$pre$phi184Z2D = $175;
          $p$7$ph = $p$6 + 1 | 0;
          break;
         }
        default:
         {
          $$pre$phi184Z2D = ($invert$0 ^ 1) & 255;
          $p$7$ph = $p$6;
         }
        }
        $p$7 = $p$7$ph;
        while (1) {
         $176 = HEAP8[$p$7 >> 0] | 0;
         L81 : do switch ($176 << 24 >> 24) {
         case 0:
          {
           $alloc$0402 = $alloc$0;
           $matches$0107371 = $matches$0107;
           $s$7 = $s$1;
           $wcs$8 = $wcs$1;
           label = 154;
           break L6;
           break;
          }
         case 93:
          {
           $p$9 = $p$7;
           break L70;
           break;
          }
         case 45:
          {
           $177 = $p$7 + 1 | 0;
           $178 = HEAP8[$177 >> 0] | 0;
           switch ($178 << 24 >> 24) {
           case 93:
           case 0:
            {
             $189 = 45;
             $p$8 = $p$7;
             break L81;
             break;
            }
           default:
            {}
           }
           $180 = HEAP8[$p$7 + -1 >> 0] | 0;
           if (($180 & 255) < ($178 & 255)) {
            $c$0102 = $180 & 255;
            do {
             $c$0102 = $c$0102 + 1 | 0;
             HEAP8[$scanset + $c$0102 >> 0] = $$pre$phi184Z2D;
             $185 = HEAP8[$177 >> 0] | 0;
            } while (($c$0102 | 0) < ($185 & 255 | 0));
            $189 = $185;
            $p$8 = $177;
           } else {
            $189 = $178;
            $p$8 = $177;
           }
           break;
          }
         default:
          {
           $189 = $176;
           $p$8 = $p$7;
          }
         } while (0);
         HEAP8[$scanset + (($189 & 255) + 1) >> 0] = $$pre$phi184Z2D;
         $p$7 = $p$8 + 1 | 0;
        }
       } while (0);
       $194 = $160 ? $width$1 + 1 | 0 : 31;
       $195 = ($$size$0 | 0) == 1;
       $196 = ($alloc$0 | 0) != 0;
       L89 : do if ($195) {
        if ($196) {
         $198 = _malloc($194 << 2) | 0;
         if (!$198) {
          $alloc$0402 = $alloc$0;
          $matches$0107371 = $matches$0107;
          $s$7 = 0;
          $wcs$8 = $198;
          label = 154;
          break L6;
         } else $wcs$2 = $198;
        } else $wcs$2 = $dest$0;
        HEAP32[$st >> 2] = 0;
        HEAP32[$13 >> 2] = 0;
        $i$0$ph = 0;
        $k$0$ph = $194;
        $wcs$3$ph = $wcs$2;
        L95 : while (1) {
         $200 = ($wcs$3$ph | 0) == 0;
         $i$0$ph22 = $i$0$ph;
         while (1) {
          L99 : while (1) {
           $201 = HEAP32[$7 >> 2] | 0;
           if ($201 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
            HEAP32[$7 >> 2] = $201 + 1;
            $209 = HEAPU8[$201 >> 0] | 0;
           } else $209 = ___shgetc($f) | 0;
           if (!(HEAP8[$scanset + ($209 + 1) >> 0] | 0)) {
            $i$0$ph22$lcssa = $i$0$ph22;
            $wcs$3$ph$lcssa = $wcs$3$ph;
            break L95;
           }
           HEAP8[$0 >> 0] = $209;
           switch (_mbrtowc($wc, $0, 1, $st) | 0) {
           case -1:
            {
             $alloc$0402 = $alloc$0;
             $matches$0107371 = $matches$0107;
             $s$7 = 0;
             $wcs$8 = $wcs$3$ph;
             label = 154;
             break L6;
             break;
            }
           case -2:
            break;
           default:
            break L99;
           }
          }
          if ($200) $i$1 = $i$0$ph22; else {
           HEAP32[$wcs$3$ph + ($i$0$ph22 << 2) >> 2] = HEAP32[$wc >> 2];
           $i$1 = $i$0$ph22 + 1 | 0;
          }
          if ($196 & ($i$1 | 0) == ($k$0$ph | 0)) break; else $i$0$ph22 = $i$1;
         }
         $219 = $k$0$ph << 1 | 1;
         $221 = _realloc($wcs$3$ph, $219 << 2) | 0;
         if (!$221) {
          $alloc$0402 = $alloc$0;
          $matches$0107371 = $matches$0107;
          $s$7 = 0;
          $wcs$8 = $wcs$3$ph;
          label = 154;
          break L6;
         } else {
          $i$0$ph$phi = $k$0$ph;
          $k$0$ph = $219;
          $wcs$3$ph = $221;
          $i$0$ph = $i$0$ph$phi;
         }
        }
        if (!(_mbsinit($st) | 0)) {
         $alloc$0402 = $alloc$0;
         $matches$0107371 = $matches$0107;
         $s$7 = 0;
         $wcs$8 = $wcs$3$ph$lcssa;
         label = 154;
         break L6;
        } else {
         $i$4 = $i$0$ph22$lcssa;
         $s$4 = 0;
         $wcs$5 = $wcs$3$ph$lcssa;
        }
       } else {
        if ($196) {
         $225 = _malloc($194) | 0;
         if (!$225) {
          $alloc$0402 = $alloc$0;
          $matches$0107371 = $matches$0107;
          $s$7 = 0;
          $wcs$8 = 0;
          label = 154;
          break L6;
         } else {
          $i$2$ph = 0;
          $k$1$ph = $194;
          $s$2$ph = $225;
         }
         while (1) {
          $i$2 = $i$2$ph;
          do {
           $227 = HEAP32[$7 >> 2] | 0;
           if ($227 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
            HEAP32[$7 >> 2] = $227 + 1;
            $235 = HEAPU8[$227 >> 0] | 0;
           } else $235 = ___shgetc($f) | 0;
           if (!(HEAP8[$scanset + ($235 + 1) >> 0] | 0)) {
            $i$4 = $i$2;
            $s$4 = $s$2$ph;
            $wcs$5 = 0;
            break L89;
           }
           HEAP8[$s$2$ph + $i$2 >> 0] = $235;
           $i$2 = $i$2 + 1 | 0;
          } while (($i$2 | 0) != ($k$1$ph | 0));
          $243 = $k$1$ph << 1 | 1;
          $244 = _realloc($s$2$ph, $243) | 0;
          if (!$244) {
           $alloc$0402 = $alloc$0;
           $matches$0107371 = $matches$0107;
           $s$7 = $s$2$ph;
           $wcs$8 = 0;
           label = 154;
           break L6;
          } else {
           $i$2$ph$phi = $k$1$ph;
           $k$1$ph = $243;
           $s$2$ph = $244;
           $i$2$ph = $i$2$ph$phi;
          }
         }
        }
        if (!$dest$0) {
         $264 = $157;
         while (1) {
          $262 = HEAP32[$7 >> 2] | 0;
          if ($262 >>> 0 < $264 >>> 0) {
           HEAP32[$7 >> 2] = $262 + 1;
           $270 = HEAPU8[$262 >> 0] | 0;
          } else $270 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($270 + 1) >> 0] | 0)) {
           $i$4 = 0;
           $s$4 = 0;
           $wcs$5 = 0;
           break L89;
          }
          $264 = HEAP32[$8 >> 2] | 0;
         }
        } else {
         $249 = $157;
         $i$3 = 0;
         while (1) {
          $247 = HEAP32[$7 >> 2] | 0;
          if ($247 >>> 0 < $249 >>> 0) {
           HEAP32[$7 >> 2] = $247 + 1;
           $255 = HEAPU8[$247 >> 0] | 0;
          } else $255 = ___shgetc($f) | 0;
          if (!(HEAP8[$scanset + ($255 + 1) >> 0] | 0)) {
           $i$4 = $i$3;
           $s$4 = $dest$0;
           $wcs$5 = 0;
           break L89;
          }
          HEAP8[$dest$0 + $i$3 >> 0] = $255;
          $249 = HEAP32[$8 >> 2] | 0;
          $i$3 = $i$3 + 1 | 0;
         }
        }
       } while (0);
       if (!(HEAP32[$8 >> 2] | 0)) $282 = HEAP32[$7 >> 2] | 0; else {
        $277 = (HEAP32[$7 >> 2] | 0) + -1 | 0;
        HEAP32[$7 >> 2] = $277;
        $282 = $277;
       }
       $283 = $282 - (HEAP32[$10 >> 2] | 0) + (HEAP32[$9 >> 2] | 0) | 0;
       if (!$283) {
        $alloc$2 = $alloc$0;
        $matches$2 = $matches$0107;
        $s$9 = $s$4;
        $wcs$10 = $wcs$5;
        break L6;
       }
       if (!(($283 | 0) == ($width$1 | 0) | $160 ^ 1)) {
        $alloc$2 = $alloc$0;
        $matches$2 = $matches$0107;
        $s$9 = $s$4;
        $wcs$10 = $wcs$5;
        break L6;
       }
       do if ($196) if ($195) {
        HEAP32[$dest$0 >> 2] = $wcs$5;
        break;
       } else {
        HEAP32[$dest$0 >> 2] = $s$4;
        break;
       } while (0);
       if ($160) {
        $p$10 = $p$9;
        $s$5 = $s$4;
        $wcs$6 = $wcs$5;
       } else {
        if ($wcs$5 | 0) HEAP32[$wcs$5 + ($i$4 << 2) >> 2] = 0;
        if (!$s$4) {
         $p$10 = $p$9;
         $s$5 = 0;
         $wcs$6 = $wcs$5;
         break L68;
        }
        HEAP8[$s$4 + $i$4 >> 0] = 0;
        $p$10 = $p$9;
        $s$5 = $s$4;
        $wcs$6 = $wcs$5;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       $base$0 = 16;
       label = 136;
       break;
      }
     case 111:
      {
       $base$0 = 8;
       label = 136;
       break;
      }
     case 117:
     case 100:
      {
       $base$0 = 10;
       label = 136;
       break;
      }
     case 105:
      {
       $base$0 = 0;
       label = 136;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       $307 = +___floatscan($f, $$size$0, 0);
       if ((HEAP32[$9 >> 2] | 0) == ((HEAP32[$10 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) | 0)) {
        $alloc$2 = $alloc$0;
        $matches$2 = $matches$0107;
        $s$9 = $s$1;
        $wcs$10 = $wcs$1;
        break L6;
       }
       if (!$dest$0) {
        $p$10 = $p$5;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
       } else switch ($$size$0 | 0) {
       case 0:
        {
         HEAPF32[$dest$0 >> 2] = $307;
         $p$10 = $p$5;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L68;
         break;
        }
       case 1:
        {
         HEAPF64[$dest$0 >> 3] = $307;
         $p$10 = $p$5;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L68;
         break;
        }
       case 2:
        {
         HEAPF64[$dest$0 >> 3] = $307;
         $p$10 = $p$5;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L68;
         break;
        }
       default:
        {
         $p$10 = $p$5;
         $s$5 = $s$1;
         $wcs$6 = $wcs$1;
         break L68;
        }
       }
       break;
      }
     default:
      {
       $p$10 = $p$5;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
      }
     } while (0);
     L169 : do if ((label | 0) == 136) {
      label = 0;
      $290 = ___intscan($f, $base$0, 0, -1, -1) | 0;
      if ((HEAP32[$9 >> 2] | 0) == ((HEAP32[$10 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) | 0)) {
       $alloc$2 = $alloc$0;
       $matches$2 = $matches$0107;
       $s$9 = $s$1;
       $wcs$10 = $wcs$1;
       break L6;
      }
      if (($dest$0 | 0) != 0 & ($$ | 0) == 112) {
       HEAP32[$dest$0 >> 2] = $290;
       $p$10 = $p$5;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
       break;
      }
      if (!$dest$0) {
       $p$10 = $p$5;
       $s$5 = $s$1;
       $wcs$6 = $wcs$1;
      } else switch ($$size$0 | 0) {
      case -2:
       {
        HEAP8[$dest$0 >> 0] = $290;
        $p$10 = $p$5;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L169;
        break;
       }
      case -1:
       {
        HEAP16[$dest$0 >> 1] = $290;
        $p$10 = $p$5;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L169;
        break;
       }
      case 0:
       {
        HEAP32[$dest$0 >> 2] = $290;
        $p$10 = $p$5;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L169;
        break;
       }
      case 1:
       {
        HEAP32[$dest$0 >> 2] = $290;
        $p$10 = $p$5;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L169;
        break;
       }
      case 3:
       {
        $303 = $dest$0;
        HEAP32[$303 >> 2] = $290;
        HEAP32[$303 + 4 >> 2] = tempRet0;
        $p$10 = $p$5;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L169;
        break;
       }
      default:
       {
        $p$10 = $p$5;
        $s$5 = $s$1;
        $wcs$6 = $wcs$1;
        break L169;
       }
      }
     } while (0);
     $matches$1 = (($dest$0 | 0) != 0 & 1) + $matches$0107 | 0;
     $p$11 = $p$10;
     $pos$2 = (HEAP32[$9 >> 2] | 0) + $pos$1 + (HEAP32[$7 >> 2] | 0) - (HEAP32[$10 >> 2] | 0) | 0;
     $s$6 = $s$5;
     $wcs$7 = $wcs$6;
     break L8;
    } while (0);
    $51 = $p$0110 + ($47 & 1) | 0;
    ___shlim($f, 0);
    $52 = HEAP32[$7 >> 2] | 0;
    if ($52 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
     HEAP32[$7 >> 2] = $52 + 1;
     $62 = HEAPU8[$52 >> 0] | 0;
    } else $62 = ___shgetc($f) | 0;
    if (($62 | 0) != (HEAPU8[$51 >> 0] | 0)) {
     $$lcssa386 = $62;
     $matches$0107$lcssa = $matches$0107;
     $s$0105$lcssa = $s$0105;
     $wcs$0106$lcssa = $wcs$0106;
     label = 22;
     break L6;
    }
    $matches$1 = $matches$0107;
    $p$11 = $51;
    $pos$2 = $pos$0111 + 1 | 0;
    $s$6 = $s$0105;
    $wcs$7 = $wcs$0106;
   } else {
    $p$1 = $p$0110;
    while (1) {
     $20 = $p$1 + 1 | 0;
     if (!(_isspace(HEAPU8[$20 >> 0] | 0) | 0)) {
      $p$1$lcssa = $p$1;
      break;
     } else $p$1 = $20;
    }
    ___shlim($f, 0);
    do {
     $25 = HEAP32[$7 >> 2] | 0;
     if ($25 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $25 + 1;
      $32 = HEAPU8[$25 >> 0] | 0;
     } else $32 = ___shgetc($f) | 0;
    } while ((_isspace($32) | 0) != 0);
    if (!(HEAP32[$8 >> 2] | 0)) $44 = HEAP32[$7 >> 2] | 0; else {
     $38 = (HEAP32[$7 >> 2] | 0) + -1 | 0;
     HEAP32[$7 >> 2] = $38;
     $44 = $38;
    }
    $matches$1 = $matches$0107;
    $p$11 = $p$1$lcssa;
    $pos$2 = (HEAP32[$9 >> 2] | 0) + $pos$0111 + $44 - (HEAP32[$10 >> 2] | 0) | 0;
    $s$6 = $s$0105;
    $wcs$7 = $wcs$0106;
   } while (0);
   $p$0110 = $p$11 + 1 | 0;
   $17 = HEAP8[$p$0110 >> 0] | 0;
   if (!($17 << 24 >> 24)) {
    $matches$3 = $matches$1;
    break L4;
   } else {
    $matches$0107 = $matches$1;
    $pos$0111 = $pos$2;
    $s$0105 = $s$6;
    $wcs$0106 = $wcs$7;
   }
  }
  if ((label | 0) == 22) {
   if (HEAP32[$8 >> 2] | 0) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
   if (($matches$0107$lcssa | 0) != 0 | ($$lcssa386 | 0) > -1) {
    $matches$3 = $matches$0107$lcssa;
    break;
   } else {
    $alloc$1 = 0;
    $s$8 = $s$0105$lcssa;
    $wcs$9 = $wcs$0106$lcssa;
    label = 155;
   }
  } else if ((label | 0) == 154) if (!$matches$0107371) {
   $alloc$1 = $alloc$0402;
   $s$8 = $s$7;
   $wcs$9 = $wcs$8;
   label = 155;
  } else {
   $alloc$2 = $alloc$0402;
   $matches$2 = $matches$0107371;
   $s$9 = $s$7;
   $wcs$10 = $wcs$8;
  }
  if ((label | 0) == 155) {
   $alloc$2 = $alloc$1;
   $matches$2 = -1;
   $s$9 = $s$8;
   $wcs$10 = $wcs$9;
  }
  if (!$alloc$2) $matches$3 = $matches$2; else {
   _free($s$9);
   _free($wcs$10);
   $matches$3 = $matches$2;
  }
 } while (0);
 if ($327 | 0) ___unlockfile($f);
 STACKTOP = sp;
 return $matches$3 | 0;
}

function __ZN5ImGui9BeginMenuEPKcb($label, $enabled) {
 $label = $label | 0;
 $enabled = $enabled | 0;
 var $$0$i$ph$i = 0, $$0$i1$ph$i = 0, $$1 = 0, $$byval_copy1 = 0, $$idx$val = 0.0, $$idx21$val = 0.0, $$mux$pressed$0$in$ = 0, $$not14 = 0, $$pre$i = 0, $$pre$i41 = 0, $$pre$phi$i$iZ2D = 0, $$pre73 = 0, $0 = 0, $1 = 0, $10 = 0, $106 = 0.0, $107 = 0.0, $108 = 0, $109 = 0, $110 = 0, $116 = 0.0, $117 = 0.0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $127 = 0, $13 = 0, $132 = 0, $133 = 0, $136 = 0, $141 = 0, $142 = 0, $146 = 0, $148 = 0, $154 = 0, $156 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $178 = 0, $179 = 0, $185 = 0, $190 = 0, $191 = 0, $197 = 0, $199 = 0, $2 = 0, $208 = 0.0, $223 = 0.0, $227 = 0, $228 = 0, $229 = 0.0, $230 = 0, $234 = 0.0, $235 = 0, $236 = 0, $237 = 0.0, $239 = 0.0, $24 = 0, $240 = 0, $241 = 0.0, $243 = 0.0, $244 = 0, $245 = 0.0, $247 = 0.0, $248 = 0, $249 = 0.0, $253 = 0.0, $254 = 0.0, $258 = 0.0, $259 = 0.0, $261 = 0.0, $263 = 0.0, $265 = 0, $268 = 0.0, $270 = 0.0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $281 = 0, $286 = 0, $287 = 0, $29 = 0, $290 = 0, $295 = 0, $296 = 0, $300 = 0, $302 = 0, $308 = 0, $31 = 0.0, $310 = 0, $312 = 0, $322 = 0, $325 = 0, $326 = 0, $329 = 0, $33 = 0.0, $330 = 0, $331 = 0, $350 = 0, $354 = 0, $357 = 0, $362 = 0, $365 = 0.0, $367 = 0.0, $37 = 0.0, $374 = 0.0, $375 = 0.0, $378 = 0, $381 = 0.0, $385 = 0.0, $387 = 0.0, $389 = 0.0, $39 = 0.0, $392 = 0.0, $394 = 0.0, $397 = 0.0, $398 = 0.0, $4 = 0, $412 = 0, $42 = 0, $422 = 0, $424 = 0, $427 = 0, $429 = 0, $43 = 0, $431 = 0, $433 = 0, $434 = 0, $439 = 0, $447 = 0, $448 = 0, $45 = 0, $454 = 0, $455 = 0, $458 = 0, $463 = 0, $467 = 0, $469 = 0, $479 = 0, $48 = 0, $488 = 0, $55 = 0, $62 = 0, $67 = 0, $68 = 0, $74 = 0, $80 = 0, $81 = 0.0, $83 = 0, $9 = 0, $brmerge10$not = 0, $label_size$sroa$0$0 = 0, $moving_within_opened_triangle$1$off0 = 0, $opened$0$off061 = 0, $opened$0$off064 = 0, $popup_pos$sroa$0$0 = 0, $popup_pos$sroa$0$053 = 0, $popup_pos$sroa$0$054 = 0, $popup_pos$sroa$6$0 = 0, $popup_pos$sroa$6$055 = 0, $popup_pos$sroa$6$056 = 0, $pressed$0$in = 0, $pressed$0$in57 = 0, $pressed$0$in58 = 0, $tb$sroa$0$0$v = 0.0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $want_open$0$off062 = 0, $want_open$0$off065 = 0, $y$01$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy1 = sp;
 $0 = sp + 32 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 16 | 0;
 $4 = HEAP32[38201] | 0;
 HEAP8[$4 + 114 >> 0] = 1;
 if (HEAP8[$4 + 116 >> 0] | 0) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $9 = $4 + 424 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (($10 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $13 = $4 + 432 | 0;
 $17 = __Z6ImHashPKvij($label, 0, HEAP32[(HEAP32[$13 >> 2] | 0) + ($10 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($17 | 0)) HEAP8[152852] = 1;
 if (($label | 0) == (-1 | 0)) {
  $45 = 146892;
  $label_size$sroa$0$0 = 0;
 } else {
  $text_display_end$03$i$i = $label;
  L11 : while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     break L11;
     break;
    }
   case 35:
    {
     $24 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$24 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      break L11;
     } else $$pre$phi$i$iZ2D = $24;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    break;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
  $29 = HEAP32[38186] | 0;
  $31 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($label | 0)) {
   $45 = 146892;
   $label_size$sroa$0$0 = 0;
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($$byval_copy1, $29, $31, 3402823466385288598117041.0e14, -1.0, $label, $text_display_end$0$i, 0);
   $33 = +HEAPF32[$$byval_copy1 >> 2];
   if ($33 > 0.0) {
    $37 = $33 - $31 / +HEAPF32[$29 >> 2];
    HEAPF32[$$byval_copy1 >> 2] = $37;
    $39 = $37;
   } else $39 = $33;
   $45 = 146892;
   $label_size$sroa$0$0 = (HEAPF32[tempDoublePtr >> 2] = +(~~($39 + .949999988079071) | 0), HEAP32[tempDoublePtr >> 2] | 0);
  }
 }
 $42 = 152820;
 $43 = HEAP32[$42 >> 2] | 0;
 $48 = HEAP32[$45 + 6036 >> 2] | 0;
 if ((HEAP32[$45 + 6024 >> 2] | 0) > ($48 | 0)) $162 = (HEAP32[(HEAP32[$45 + 6032 >> 2] | 0) + ($48 * 24 | 0) >> 2] | 0) == ($17 | 0); else $162 = 0;
 $55 = $4 + 8 | 0;
 if (!(HEAP32[$55 >> 2] & 33554432)) {
  $62 = HEAP32[38232] | 0;
  if ((HEAP32[38229] | 0) > ($62 | 0)) {
   $67 = HEAP32[(HEAP32[38231] | 0) + ($62 * 24 | 0) + 12 >> 2] | 0;
   $68 = HEAP32[$9 >> 2] | 0;
   if (($68 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
   $74 = __Z6ImHashPKvij(126654, 0, HEAP32[(HEAP32[$13 >> 2] | 0) + ($68 + -1 << 2) >> 2] | 0) | 0;
   if ((HEAP32[38211] | 0) == ($74 | 0)) HEAP8[152852] = 1;
   if (($67 | 0) == ($74 | 0)) {
    HEAP32[$42 >> 2] = $4;
    $427 = 1;
   } else $427 = 0;
  } else $427 = 0;
 } else $427 = 0;
 $80 = $4 + 164 | 0;
 $81 = +HEAPF32[$80 >> 2];
 $83 = HEAP32[$4 + 168 >> 2] | 0;
 do if ((HEAP32[$4 + 264 >> 2] | 0) == 1) {
  if (!(HEAP32[$55 >> 2] & 1024)) $107 = 0.0; else $107 = +HEAPF32[38188] * +HEAPF32[$4 + 568 >> 2] + +HEAPF32[37993] * 2.0;
  $106 = (HEAP32[tempDoublePtr >> 2] = $83, +HEAPF32[tempDoublePtr >> 2]) - +HEAPF32[37993] + $107;
  $108 = (HEAPF32[tempDoublePtr >> 2] = $81 - +HEAPF32[$4 + 60 >> 2], HEAP32[tempDoublePtr >> 2] | 0);
  $109 = (HEAPF32[tempDoublePtr >> 2] = $106, HEAP32[tempDoublePtr >> 2] | 0);
  $110 = 151980;
  HEAPF32[$80 >> 2] = $81 + +(~~(+HEAPF32[$110 >> 2] * .5) | 0);
  $116 = +HEAPF32[$110 >> 2] * 2.0;
  $117 = +HEAPF32[37996] * 2.0;
  $118 = 151980;
  $119 = HEAP32[$118 >> 2] | 0;
  $120 = 151984;
  $121 = HEAP32[$120 >> 2] | 0;
  $122 = 152892;
  $123 = HEAP32[$122 >> 2] | 0;
  $124 = 152896;
  if (($123 | 0) == (HEAP32[$124 >> 2] | 0)) {
   $127 = $123 + 1 | 0;
   if (!$123) $132 = 8; else $132 = (($123 | 0) / 2 | 0) + $123 | 0;
   $133 = ($132 | 0) > ($127 | 0) ? $132 : $127;
   if (($123 | 0) < ($133 | 0)) {
    $136 = 147664;
    HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + 1;
    $141 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($133 * 12 | 0) | 0;
    $142 = 152900;
    _memcpy($141 | 0, HEAP32[$142 >> 2] | 0, (HEAP32[$122 >> 2] | 0) * 12 | 0) | 0;
    $146 = HEAP32[$142 >> 2] | 0;
    if ($146 | 0) {
     $148 = 147664;
     HEAP32[$148 >> 2] = (HEAP32[$148 >> 2] | 0) + -1;
    }
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($146);
    HEAP32[$142 >> 2] = $141;
    HEAP32[$124 >> 2] = $133;
    $154 = HEAP32[$122 >> 2] | 0;
   } else $154 = $123;
  } else $154 = $123;
  HEAP32[$122 >> 2] = $154 + 1;
  $156 = HEAP32[38225] | 0;
  HEAP32[$156 + ($154 * 12 | 0) >> 2] = 7;
  HEAP32[$156 + ($154 * 12 | 0) + 4 >> 2] = $119;
  HEAP32[$156 + ($154 * 12 | 0) + 8 >> 2] = $121;
  HEAPF32[$118 >> 2] = $116;
  HEAPF32[$120 >> 2] = $117;
  HEAP32[$0 >> 2] = $label_size$sroa$0$0;
  HEAPF32[$0 + 4 >> 2] = 0.0;
  $163 = __ZN5ImGui10SelectableEPKcbiRK6ImVec2($label, $162, $enabled ? 5 : 21, $0) | 0;
  $164 = 152892;
  $$pre$i = HEAP32[$164 >> 2] | 0;
  if (($$pre$i | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
  $178 = $$pre$i + -1 | 0;
  $179 = HEAP32[38225] | 0;
  switch (HEAP32[$179 + ($178 * 12 | 0) >> 2] | 0) {
  case 0:
   {
    $$0$i$ph$i = 151936;
    label = 43;
    break;
   }
  case 2:
   {
    $$0$i$ph$i = 151956;
    label = 43;
    break;
   }
  case 4:
   {
    $$0$i$ph$i = 151964;
    label = 43;
    break;
   }
  case 6:
   {
    $$0$i$ph$i = 151976;
    label = 43;
    break;
   }
  case 9:
   {
    $$0$i$ph$i = 152008;
    label = 43;
    break;
   }
  case 10:
   {
    $$0$i$ph$i = 152024;
    label = 43;
    break;
   }
  case 1:
   {
    $$0$i1$ph$i = 151940;
    label = 48;
    break;
   }
  case 3:
   {
    $$0$i1$ph$i = 151948;
    label = 48;
    break;
   }
  case 5:
   {
    $$0$i1$ph$i = 151968;
    label = 48;
    break;
   }
  case 7:
   {
    $$0$i1$ph$i = 151980;
    label = 48;
    break;
   }
  case 8:
   {
    $$0$i1$ph$i = 151988;
    label = 48;
    break;
   }
  default:
   $197 = $$pre$i;
  }
  if ((label | 0) == 43) {
   HEAP32[$$0$i$ph$i >> 2] = HEAP32[$179 + ($178 * 12 | 0) + 4 >> 2];
   $197 = $$pre$i;
  } else if ((label | 0) == 48) {
   $185 = $179 + ($178 * 12 | 0) + 4 | 0;
   $190 = HEAP32[$185 + 4 >> 2] | 0;
   $191 = $$0$i1$ph$i;
   HEAP32[$191 >> 2] = HEAP32[$185 >> 2];
   HEAP32[$191 + 4 >> 2] = $190;
   $$pre73 = HEAP32[$164 >> 2] | 0;
   if (($$pre73 | 0) > 0) $197 = $$pre73; else ___assert_fail(127436, 127226, 833, 125180);
  }
  HEAP32[$164 >> 2] = $197 + -1;
  $199 = HEAP32[38201] | 0;
  HEAP8[$199 + 114 >> 0] = 1;
  if (!(HEAP8[$199 + 116 >> 0] | 0)) {
   $208 = +HEAPF32[37995] + +HEAPF32[$199 + 172 >> 2];
   $y$01$i = HEAP32[$199 + 176 >> 2] | 0;
   HEAP32[$199 + 196 >> 2] = HEAP32[$199 + 204 >> 2];
   HEAP32[$199 + 200 >> 2] = HEAP32[$199 + 208 >> 2];
   HEAPF32[$199 + 164 >> 2] = $208;
   HEAP32[$199 + 168 >> 2] = $y$01$i;
  }
  HEAPF32[$80 >> 2] = +HEAPF32[$80 >> 2] + +(~~(+HEAPF32[$110 >> 2] * .5) | 0);
  $popup_pos$sroa$0$0 = $108;
  $popup_pos$sroa$6$0 = $109;
  $pressed$0$in = $163;
  label = 71;
 } else {
  $223 = (HEAP32[tempDoublePtr >> 2] = $83, +HEAPF32[tempDoublePtr >> 2]);
  $227 = (HEAPF32[tempDoublePtr >> 2] = $81, HEAP32[tempDoublePtr >> 2] | 0);
  $228 = (HEAPF32[tempDoublePtr >> 2] = $223 - +HEAPF32[37986], HEAP32[tempDoublePtr >> 2] | 0);
  $229 = (HEAP32[tempDoublePtr >> 2] = $label_size$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]);
  $230 = 152748;
  $234 = +(~~(+HEAPF32[$230 >> 2] * 1.2000000476837158) | 0);
  $235 = $4 + 488 | 0;
  $236 = $4 + 524 | 0;
  $237 = +HEAPF32[$236 >> 2];
  $239 = $237 >= $229 ? $237 : $229;
  HEAPF32[$236 >> 2] = $239;
  $240 = $4 + 528 | 0;
  $241 = +HEAPF32[$240 >> 2];
  $243 = $241 >= 0.0 ? $241 : 0.0;
  HEAPF32[$240 >> 2] = $243;
  $244 = $4 + 532 | 0;
  $245 = +HEAPF32[$244 >> 2];
  $247 = $245 >= $234 ? $245 : $234;
  HEAPF32[$244 >> 2] = $247;
  $248 = $4 + 480 | 0;
  $249 = $239 + 0.0;
  HEAPF32[$235 >> 2] = $249;
  if ($243 > 0.0) $253 = +HEAPF32[$248 >> 2]; else $253 = 0.0;
  $254 = $249 + ($243 + $253);
  HEAPF32[$235 >> 2] = $254;
  if ($247 > 0.0) $258 = +HEAPF32[$248 >> 2]; else $258 = 0.0;
  $259 = $254 + ($247 + $258);
  HEAPF32[$235 >> 2] = $259;
  $261 = +HEAPF32[$4 + 484 >> 2];
  $263 = $261 >= $259 ? $261 : $259;
  $265 = HEAP32[38201] | 0;
  __ZN5ImGui19GetContentRegionMaxEv($$byval_copy1);
  $268 = +HEAPF32[$$byval_copy1 >> 2] - (+HEAPF32[$265 + 164 >> 2] - +HEAPF32[$265 + 20 >> 2]) - $263;
  $270 = $268 <= 0.0 ? 0.0 : $268;
  HEAPF32[$1 >> 2] = $263;
  HEAPF32[$1 + 4 >> 2] = 0.0;
  $273 = __ZN5ImGui10SelectableEPKcbiRK6ImVec2($label, $162, $enabled ? 37 : 53, $1) | 0;
  if ($enabled) {
   HEAPF32[$2 >> 2] = $81 + ($270 + +HEAPF32[$4 + 500 >> 2] + +HEAPF32[$230 >> 2] * .20000000298023224);
   HEAPF32[$2 + 4 >> 2] = $223 + 0.0;
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   __ZN5ImGui22RenderCollapseTriangleE6ImVec2bfb($$byval_copy1, 0, 1.0, 0);
   $popup_pos$sroa$0$054 = $227;
   $popup_pos$sroa$6$056 = $228;
   $pressed$0$in58 = $273;
   label = 72;
   break;
  }
  $274 = 152072;
  $275 = 152056;
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$275 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$275 + 4 >> 2];
  HEAP32[$$byval_copy1 + 8 >> 2] = HEAP32[$275 + 8 >> 2];
  HEAP32[$$byval_copy1 + 12 >> 2] = HEAP32[$275 + 12 >> 2];
  $276 = 152880;
  $277 = HEAP32[$276 >> 2] | 0;
  $278 = 152884;
  if (($277 | 0) == (HEAP32[$278 >> 2] | 0)) {
   $281 = $277 + 1 | 0;
   if (!$277) $286 = 8; else $286 = (($277 | 0) / 2 | 0) + $277 | 0;
   $287 = ($286 | 0) > ($281 | 0) ? $286 : $281;
   if (($277 | 0) < ($287 | 0)) {
    $290 = 147664;
    HEAP32[$290 >> 2] = (HEAP32[$290 >> 2] | 0) + 1;
    $295 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($287 * 20 | 0) | 0;
    $296 = 152888;
    _memcpy($295 | 0, HEAP32[$296 >> 2] | 0, (HEAP32[$276 >> 2] | 0) * 20 | 0) | 0;
    $300 = HEAP32[$296 >> 2] | 0;
    if ($300 | 0) {
     $302 = 147664;
     HEAP32[$302 >> 2] = (HEAP32[$302 >> 2] | 0) + -1;
    }
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($300);
    HEAP32[$296 >> 2] = $295;
    HEAP32[$278 >> 2] = $287;
    $308 = HEAP32[$276 >> 2] | 0;
   } else $308 = $277;
  } else $308 = $277;
  HEAP32[$276 >> 2] = $308 + 1;
  $310 = HEAP32[38222] | 0;
  HEAP32[$310 + ($308 * 20 | 0) >> 2] = 0;
  $312 = $310 + ($308 * 20 | 0) + 4 | 0;
  HEAP32[$312 >> 2] = HEAP32[$$byval_copy1 >> 2];
  HEAP32[$312 + 4 >> 2] = HEAP32[$$byval_copy1 + 4 >> 2];
  HEAP32[$312 + 8 >> 2] = HEAP32[$$byval_copy1 + 8 >> 2];
  HEAP32[$312 + 12 >> 2] = HEAP32[$$byval_copy1 + 12 >> 2];
  HEAP32[$275 >> 2] = HEAP32[$274 >> 2];
  HEAP32[$275 + 4 >> 2] = HEAP32[$274 + 4 >> 2];
  HEAP32[$275 + 8 >> 2] = HEAP32[$274 + 8 >> 2];
  HEAP32[$275 + 12 >> 2] = HEAP32[$274 + 12 >> 2];
  HEAPF32[$2 >> 2] = $81 + ($270 + +HEAPF32[$4 + 500 >> 2] + +HEAPF32[$230 >> 2] * .20000000298023224);
  HEAPF32[$2 + 4 >> 2] = $223 + 0.0;
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
  __ZN5ImGui22RenderCollapseTriangleE6ImVec2bfb($$byval_copy1, 0, 1.0, 0);
  $322 = 152880;
  $$pre$i41 = HEAP32[$322 >> 2] | 0;
  if (($$pre$i41 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
  $325 = $$pre$i41 + -1 | 0;
  $326 = HEAP32[38222] | 0;
  $329 = 152056 + (HEAP32[$326 + ($325 * 20 | 0) >> 2] << 4) | 0;
  $330 = $326 + ($325 * 20 | 0) + 4 | 0;
  HEAP32[$329 >> 2] = HEAP32[$330 >> 2];
  HEAP32[$329 + 4 >> 2] = HEAP32[$330 + 4 >> 2];
  HEAP32[$329 + 8 >> 2] = HEAP32[$330 + 8 >> 2];
  HEAP32[$329 + 12 >> 2] = HEAP32[$330 + 12 >> 2];
  $331 = HEAP32[$322 >> 2] | 0;
  if (($331 | 0) > 0) {
   HEAP32[$322 >> 2] = $331 + -1;
   $popup_pos$sroa$0$0 = $227;
   $popup_pos$sroa$6$0 = $228;
   $pressed$0$in = $273;
   label = 71;
   break;
  } else ___assert_fail(127436, 127226, 833, 125180);
 } while (0);
 if ((label | 0) == 71) if ($enabled) {
  $popup_pos$sroa$0$054 = $popup_pos$sroa$0$0;
  $popup_pos$sroa$6$056 = $popup_pos$sroa$6$0;
  $pressed$0$in58 = $pressed$0$in;
  label = 72;
 } else {
  $422 = 0;
  $popup_pos$sroa$0$053 = $popup_pos$sroa$0$0;
  $popup_pos$sroa$6$055 = $popup_pos$sroa$6$0;
  $pressed$0$in57 = $pressed$0$in;
 }
 if ((label | 0) == 72) {
  $422 = __ZN5ImGui9IsHoveredERK6ImRectjb($4 + 224 | 0, $17, 0) | 0;
  $popup_pos$sroa$0$053 = $popup_pos$sroa$0$054;
  $popup_pos$sroa$6$055 = $popup_pos$sroa$6$056;
  $pressed$0$in57 = $pressed$0$in58;
 }
 if ($427) HEAP32[$42 >> 2] = $43;
 if (!(HEAP32[$55 >> 2] & 167772160)) {
  $$not14 = $427 ^ 1;
  if ($$not14 | $162 & $pressed$0$in57 ^ 1) if ($pressed$0$in57) {
   $opened$0$off061 = $162;
   $want_open$0$off062 = 1;
   label = 106;
  } else if ($162 | ($$not14 | $422 ^ 1)) {
   if (!$162) {
    $$1 = 0;
    STACKTOP = sp;
    return $$1 | 0;
   }
  } else {
   $opened$0$off061 = 0;
   $want_open$0$off062 = 1;
   label = 106;
  } else {
   $opened$0$off064 = 0;
   $want_open$0$off065 = 0;
   label = 89;
  }
 } else {
  $350 = (HEAP32[38206] | 0) == ($4 | 0);
  if ($350) {
   $354 = HEAP32[38232] | 0;
   if ((HEAP32[38229] | 0) > ($354 | 0)) {
    $357 = HEAP32[38231] | 0;
    if ((HEAP32[$357 + ($354 * 24 | 0) + 8 >> 2] | 0) == ($4 | 0)) {
     $362 = HEAP32[$357 + ($354 * 24 | 0) + 4 >> 2] | 0;
     if (!$362) $moving_within_opened_triangle$1$off0 = 0; else {
      $365 = +HEAPF32[$362 + 20 >> 2];
      $367 = +HEAPF32[$362 + 24 >> 2];
      $$idx$val = +HEAPF32[36771];
      $$idx21$val = +HEAPF32[36772];
      $374 = $$idx$val - +HEAPF32[36922];
      $375 = $$idx21$val - +HEAPF32[36923];
      $378 = +HEAPF32[$4 + 20 >> 2] < $365;
      $tb$sroa$0$0$v = $378 ? $365 : $365 + +HEAPF32[$362 + 28 >> 2];
      $381 = +Math_abs(+($374 - $tb$sroa$0$0$v)) * .30000001192092896;
      $385 = $381 < 5.0 ? 5.0 : $381 > 30.0 ? 30.0 : $381;
      $387 = $374 + ($378 ? -.5 : .5);
      $389 = $367 - $385 - $375;
      $392 = $375 + ($389 >= -100.0 ? $389 : -100.0);
      $394 = $367 + +HEAPF32[$362 + 32 >> 2] + $385 - $375;
      $397 = $375 + ($394 < 100.0 ? $394 : 100.0);
      $398 = $$idx$val - $tb$sroa$0$0$v;
      $412 = $398 * ($392 - $397) - ($tb$sroa$0$0$v - $tb$sroa$0$0$v) * ($$idx21$val - $397) < 0.0;
      if ($398 * ($375 - $392) - ($387 - $tb$sroa$0$0$v) * ($$idx21$val - $392) < 0.0 ^ $412) $moving_within_opened_triangle$1$off0 = 0; else $moving_within_opened_triangle$1$off0 = $412 ^ ($$idx$val - $387) * ($397 - $375) - ($$idx21$val - $375) * ($tb$sroa$0$0$v - $387) < 0.0 ^ 1;
     }
    } else $moving_within_opened_triangle$1$off0 = 0;
   } else $moving_within_opened_triangle$1$off0 = 0;
  } else $moving_within_opened_triangle$1$off0 = 0;
  if ($422 | $162 ^ 1 | $350 ^ 1) $488 = 0; else {
   $424 = HEAP32[38210] | 0;
   $488 = ($moving_within_opened_triangle$1$off0 | (($424 | 0) == 0 | ($424 | 0) == ($17 | 0))) ^ 1;
  }
  $brmerge10$not = ($162 | $422 ^ 1 | $moving_within_opened_triangle$1$off0) ^ 1;
  $$mux$pressed$0$in$ = $162 | $brmerge10$not ? $brmerge10$not : $pressed$0$in57 & $422;
  if ($488) {
   $opened$0$off064 = $162;
   $want_open$0$off065 = $$mux$pressed$0$in$;
   label = 89;
  } else {
   $opened$0$off061 = $162;
   $want_open$0$off062 = $$mux$pressed$0$in$;
   label = 106;
  }
 }
 if ((label | 0) == 89) {
  $429 = HEAP32[38229] | 0;
  $431 = HEAP32[38232] | 0;
  if (($429 | 0) > ($431 | 0)) {
   $433 = 152924;
   $434 = HEAP32[$433 >> 2] | 0;
   if ((HEAP32[$434 + ($431 * 24 | 0) >> 2] | 0) == ($17 | 0)) {
    $439 = 152916;
    do if (($431 | 0) > 0) if (($429 | 0) < ($431 | 0)) ___assert_fail(127217, 127226, 805, 127272); else {
     __ZN5ImGui11FocusWindowEP11ImGuiWindow(HEAP32[$434 + (($431 + -1 | 0) * 24 | 0) + 4 >> 2] | 0);
     break;
    } else if (($429 | 0) > 0) {
     __ZN5ImGui11FocusWindowEP11ImGuiWindow(HEAP32[$434 + 8 >> 2] | 0);
     break;
    } else ___assert_fail(127217, 127226, 805, 127272); while (0);
    $447 = 152920;
    $448 = HEAP32[$447 >> 2] | 0;
    if (($448 | 0) < ($431 | 0)) {
     if (!$448) $454 = 8; else $454 = (($448 | 0) / 2 | 0) + $448 | 0;
     $455 = ($454 | 0) > ($431 | 0) ? $454 : $431;
     if (($448 | 0) < ($455 | 0)) {
      $458 = 147664;
      HEAP32[$458 >> 2] = (HEAP32[$458 >> 2] | 0) + 1;
      $463 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($455 * 24 | 0) | 0;
      _memcpy($463 | 0, HEAP32[$433 >> 2] | 0, (HEAP32[$439 >> 2] | 0) * 24 | 0) | 0;
      $467 = HEAP32[$433 >> 2] | 0;
      if ($467 | 0) {
       $469 = 147664;
       HEAP32[$469 >> 2] = (HEAP32[$469 >> 2] | 0) + -1;
      }
      FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($467);
      HEAP32[$433 >> 2] = $463;
      HEAP32[$447 >> 2] = $455;
     }
    }
    HEAP32[$439 >> 2] = $431;
    $opened$0$off061 = $opened$0$off064;
    $want_open$0$off062 = $want_open$0$off065;
    label = 106;
   } else {
    $opened$0$off061 = $opened$0$off064;
    $want_open$0$off062 = $want_open$0$off065;
    label = 106;
   }
  } else {
   $opened$0$off061 = $opened$0$off064;
   $want_open$0$off062 = $want_open$0$off065;
   label = 106;
  }
 }
 do if ((label | 0) == 106) {
  if (!($opened$0$off061 | $want_open$0$off062 ^ 1)) if ((HEAP32[38229] | 0) > (HEAP32[38232] | 0)) {
   __ZN5ImGui11OpenPopupExEPKcb($label, 0);
   $$1 = 0;
   STACKTOP = sp;
   return $$1 | 0;
  }
  $479 = $want_open$0$off062 | $opened$0$off061;
  if ($want_open$0$off062) {
   __ZN5ImGui11OpenPopupExEPKcb($label, 0);
   if ($479) break; else $$1 = 0;
   STACKTOP = sp;
   return $$1 | 0;
  } else {
   if ($479) break; else $$1 = 0;
   STACKTOP = sp;
   return $$1 | 0;
  }
 } while (0);
 HEAP32[38235] = $popup_pos$sroa$0$053;
 HEAP32[38236] = $popup_pos$sroa$6$055;
 HEAP32[38242] = 1;
 $$1 = __ZL12BeginPopupExPKci($label, HEAP32[$55 >> 2] & 167772160 | 0 ? 135266432 : 134217856) | 0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN5Oryol12resourceBaseINS_13PipelineSetupEE5ClearEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $102 = 0, $109 = 0, $116 = 0, $123 = 0, $13 = 0, $130 = 0, $137 = 0, $14 = 0, $144 = 0, $151 = 0, $158 = 0, $165 = 0, $172 = 0, $179 = 0, $18 = 0, $185 = 0, $187 = 0, $188 = 0, $19 = 0, $190 = 0, $191 = 0, $193 = 0, $195 = 0, $196 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $201 = 0, $202 = 0, $204 = 0, $205 = 0, $207 = 0, $208 = 0, $21 = 0, $210 = 0, $211 = 0, $213 = 0, $214 = 0, $216 = 0, $217 = 0, $219 = 0, $22 = 0, $220 = 0, $222 = 0, $223 = 0, $225 = 0, $226 = 0, $228 = 0, $229 = 0, $231 = 0, $232 = 0, $234 = 0, $235 = 0, $237 = 0, $238 = 0, $24 = 0, $240 = 0, $247 = 0, $25 = 0, $254 = 0, $261 = 0, $268 = 0, $27 = 0, $275 = 0, $282 = 0, $289 = 0, $29 = 0, $296 = 0, $30 = 0, $303 = 0, $310 = 0, $317 = 0, $32 = 0, $324 = 0, $33 = 0, $331 = 0, $338 = 0, $345 = 0, $35 = 0, $351 = 0, $353 = 0, $354 = 0, $356 = 0, $357 = 0, $359 = 0, $36 = 0, $361 = 0, $362 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $376 = 0, $377 = 0, $379 = 0, $38 = 0, $380 = 0, $382 = 0, $383 = 0, $385 = 0, $386 = 0, $388 = 0, $389 = 0, $39 = 0, $391 = 0, $392 = 0, $394 = 0, $395 = 0, $397 = 0, $398 = 0, $400 = 0, $401 = 0, $403 = 0, $404 = 0, $406 = 0, $41 = 0, $413 = 0, $42 = 0, $420 = 0, $427 = 0, $434 = 0, $44 = 0, $441 = 0, $448 = 0, $45 = 0, $455 = 0, $462 = 0, $469 = 0, $47 = 0, $476 = 0, $48 = 0, $483 = 0, $490 = 0, $497 = 0, $50 = 0, $504 = 0, $51 = 0, $511 = 0, $517 = 0, $519 = 0, $520 = 0, $522 = 0, $523 = 0, $525 = 0, $527 = 0, $528 = 0, $53 = 0, $530 = 0, $531 = 0, $533 = 0, $534 = 0, $536 = 0, $537 = 0, $539 = 0, $54 = 0, $540 = 0, $542 = 0, $543 = 0, $545 = 0, $546 = 0, $548 = 0, $549 = 0, $551 = 0, $552 = 0, $554 = 0, $555 = 0, $557 = 0, $558 = 0, $56 = 0, $560 = 0, $561 = 0, $563 = 0, $564 = 0, $566 = 0, $567 = 0, $569 = 0, $57 = 0, $570 = 0, $572 = 0, $579 = 0, $586 = 0, $59 = 0, $593 = 0, $60 = 0, $600 = 0, $607 = 0, $614 = 0, $62 = 0, $621 = 0, $628 = 0, $63 = 0, $635 = 0, $642 = 0, $649 = 0, $65 = 0, $656 = 0, $66 = 0, $663 = 0, $670 = 0, $677 = 0, $68 = 0, $683 = 0, $685 = 0, $69 = 0, $690 = 0, $695 = 0, $697 = 0, $71 = 0, $72 = 0, $74 = 0, $8 = 0, $81 = 0, $88 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 $0 = sp;
 $1 = $this + 16 | 0;
 __ZN5Oryol13PipelineSetupC2Ev($0);
 $2 = ($0 | 0) == ($1 | 0);
 if (!$2) {
  HEAP32[$1 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($1, $0);
 }
 HEAP32[$this + 20 >> 2] = HEAP32[$0 + 4 >> 2];
 $8 = $0 + 8 | 0;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 $14 = $this + 24 | 0;
 HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$14 + 4 >> 2] = $13;
 $18 = $this + 32 | 0;
 $19 = $0 + 16 | 0;
 HEAP32[$18 >> 2] = HEAP32[$19 >> 2];
 HEAP32[$18 + 4 >> 2] = HEAP32[$19 + 4 >> 2];
 HEAP32[$18 + 8 >> 2] = HEAP32[$19 + 8 >> 2];
 HEAP32[$18 + 12 >> 2] = HEAP32[$19 + 12 >> 2];
 $20 = $this + 48 | 0;
 $21 = $0 + 32 | 0;
 HEAP32[$20 >> 2] = HEAP32[$21 >> 2];
 HEAP32[$20 + 4 >> 2] = HEAP32[$21 + 4 >> 2];
 HEAP16[$20 + 8 >> 1] = HEAP16[$21 + 8 >> 1] | 0;
 $22 = $this + 58 | 0;
 $24 = HEAP16[$0 + 42 >> 1] | 0;
 HEAP8[$22 >> 0] = $24;
 HEAP8[$22 + 1 >> 0] = $24 >> 8;
 $25 = $this + 60 | 0;
 $27 = HEAP16[$0 + 44 >> 1] | 0;
 HEAP8[$25 >> 0] = $27;
 HEAP8[$25 + 1 >> 0] = $27 >> 8;
 $29 = $this + 62 | 0;
 $30 = HEAP16[$0 + 46 >> 1] | 0;
 HEAP8[$29 >> 0] = $30;
 HEAP8[$29 + 1 >> 0] = $30 >> 8;
 $32 = $this + 64 | 0;
 $33 = HEAP16[$0 + 48 >> 1] | 0;
 HEAP8[$32 >> 0] = $33;
 HEAP8[$32 + 1 >> 0] = $33 >> 8;
 $35 = $this + 66 | 0;
 $36 = HEAP16[$0 + 50 >> 1] | 0;
 HEAP8[$35 >> 0] = $36;
 HEAP8[$35 + 1 >> 0] = $36 >> 8;
 $38 = $this + 68 | 0;
 $39 = HEAP16[$0 + 52 >> 1] | 0;
 HEAP8[$38 >> 0] = $39;
 HEAP8[$38 + 1 >> 0] = $39 >> 8;
 $41 = $this + 70 | 0;
 $42 = HEAP16[$0 + 54 >> 1] | 0;
 HEAP8[$41 >> 0] = $42;
 HEAP8[$41 + 1 >> 0] = $42 >> 8;
 $44 = $this + 72 | 0;
 $45 = HEAP16[$0 + 56 >> 1] | 0;
 HEAP8[$44 >> 0] = $45;
 HEAP8[$44 + 1 >> 0] = $45 >> 8;
 $47 = $this + 74 | 0;
 $48 = HEAP16[$0 + 58 >> 1] | 0;
 HEAP8[$47 >> 0] = $48;
 HEAP8[$47 + 1 >> 0] = $48 >> 8;
 $50 = $this + 76 | 0;
 $51 = HEAP16[$0 + 60 >> 1] | 0;
 HEAP8[$50 >> 0] = $51;
 HEAP8[$50 + 1 >> 0] = $51 >> 8;
 $53 = $this + 78 | 0;
 $54 = HEAP16[$0 + 62 >> 1] | 0;
 HEAP8[$53 >> 0] = $54;
 HEAP8[$53 + 1 >> 0] = $54 >> 8;
 $56 = $this + 80 | 0;
 $57 = HEAP16[$0 + 64 >> 1] | 0;
 HEAP8[$56 >> 0] = $57;
 HEAP8[$56 + 1 >> 0] = $57 >> 8;
 $59 = $this + 82 | 0;
 $60 = HEAP16[$0 + 66 >> 1] | 0;
 HEAP8[$59 >> 0] = $60;
 HEAP8[$59 + 1 >> 0] = $60 >> 8;
 $62 = $this + 84 | 0;
 $63 = HEAP16[$0 + 68 >> 1] | 0;
 HEAP8[$62 >> 0] = $63;
 HEAP8[$62 + 1 >> 0] = $63 >> 8;
 $65 = $this + 86 | 0;
 $66 = HEAP16[$0 + 70 >> 1] | 0;
 HEAP8[$65 >> 0] = $66;
 HEAP8[$65 + 1 >> 0] = $66 >> 8;
 $68 = $this + 88 | 0;
 $69 = HEAP16[$0 + 72 >> 1] | 0;
 HEAP8[$68 >> 0] = $69;
 HEAP8[$68 + 1 >> 0] = $69 >> 8;
 $71 = $this + 90 | 0;
 $72 = HEAP16[$0 + 74 >> 1] | 0;
 HEAP8[$71 >> 0] = $72;
 HEAP8[$71 + 1 >> 0] = $72 >> 8;
 $74 = HEAP16[$0 + 76 >> 1] | 0;
 HEAP8[$this + 92 >> 0] = $74;
 HEAP8[$this + 93 >> 0] = ($74 & 65535) >>> 8;
 $81 = HEAP16[$0 + 78 >> 1] | 0;
 HEAP8[$this + 94 >> 0] = $81;
 HEAP8[$this + 95 >> 0] = ($81 & 65535) >>> 8;
 $88 = HEAP16[$0 + 80 >> 1] | 0;
 HEAP8[$this + 96 >> 0] = $88;
 HEAP8[$this + 97 >> 0] = ($88 & 65535) >>> 8;
 $95 = HEAP16[$0 + 82 >> 1] | 0;
 HEAP8[$this + 98 >> 0] = $95;
 HEAP8[$this + 99 >> 0] = ($95 & 65535) >>> 8;
 $102 = HEAP16[$0 + 84 >> 1] | 0;
 HEAP8[$this + 100 >> 0] = $102;
 HEAP8[$this + 101 >> 0] = ($102 & 65535) >>> 8;
 $109 = HEAP16[$0 + 86 >> 1] | 0;
 HEAP8[$this + 102 >> 0] = $109;
 HEAP8[$this + 103 >> 0] = ($109 & 65535) >>> 8;
 $116 = HEAP16[$0 + 88 >> 1] | 0;
 HEAP8[$this + 104 >> 0] = $116;
 HEAP8[$this + 105 >> 0] = ($116 & 65535) >>> 8;
 $123 = HEAP16[$0 + 90 >> 1] | 0;
 HEAP8[$this + 106 >> 0] = $123;
 HEAP8[$this + 107 >> 0] = ($123 & 65535) >>> 8;
 $130 = HEAP16[$0 + 92 >> 1] | 0;
 HEAP8[$this + 108 >> 0] = $130;
 HEAP8[$this + 109 >> 0] = ($130 & 65535) >>> 8;
 $137 = HEAP16[$0 + 94 >> 1] | 0;
 HEAP8[$this + 110 >> 0] = $137;
 HEAP8[$this + 111 >> 0] = ($137 & 65535) >>> 8;
 $144 = HEAP16[$0 + 96 >> 1] | 0;
 HEAP8[$this + 112 >> 0] = $144;
 HEAP8[$this + 113 >> 0] = ($144 & 65535) >>> 8;
 $151 = HEAP16[$0 + 98 >> 1] | 0;
 HEAP8[$this + 114 >> 0] = $151;
 HEAP8[$this + 115 >> 0] = ($151 & 65535) >>> 8;
 $158 = HEAP16[$0 + 100 >> 1] | 0;
 HEAP8[$this + 116 >> 0] = $158;
 HEAP8[$this + 117 >> 0] = ($158 & 65535) >>> 8;
 $165 = HEAP16[$0 + 102 >> 1] | 0;
 HEAP8[$this + 118 >> 0] = $165;
 HEAP8[$this + 119 >> 0] = ($165 & 65535) >>> 8;
 $172 = HEAP16[$0 + 104 >> 1] | 0;
 HEAP8[$this + 120 >> 0] = $172;
 HEAP8[$this + 121 >> 0] = ($172 & 65535) >>> 8;
 $179 = HEAP16[$0 + 106 >> 1] | 0;
 HEAP8[$this + 122 >> 0] = $179;
 HEAP8[$this + 123 >> 0] = ($179 & 65535) >>> 8;
 $185 = $this + 124 | 0;
 $187 = HEAP16[$0 + 108 >> 1] | 0;
 HEAP8[$185 >> 0] = $187;
 HEAP8[$185 + 1 >> 0] = $187 >> 8;
 $188 = $this + 126 | 0;
 $190 = HEAP16[$0 + 110 >> 1] | 0;
 HEAP8[$188 >> 0] = $190;
 HEAP8[$188 + 1 >> 0] = $190 >> 8;
 $191 = $this + 128 | 0;
 $193 = HEAP16[$0 + 112 >> 1] | 0;
 HEAP8[$191 >> 0] = $193;
 HEAP8[$191 + 1 >> 0] = $193 >> 8;
 $195 = $this + 130 | 0;
 $196 = HEAP16[$0 + 114 >> 1] | 0;
 HEAP8[$195 >> 0] = $196;
 HEAP8[$195 + 1 >> 0] = $196 >> 8;
 $198 = $this + 132 | 0;
 $199 = HEAP16[$0 + 116 >> 1] | 0;
 HEAP8[$198 >> 0] = $199;
 HEAP8[$198 + 1 >> 0] = $199 >> 8;
 $201 = $this + 134 | 0;
 $202 = HEAP16[$0 + 118 >> 1] | 0;
 HEAP8[$201 >> 0] = $202;
 HEAP8[$201 + 1 >> 0] = $202 >> 8;
 $204 = $this + 136 | 0;
 $205 = HEAP16[$0 + 120 >> 1] | 0;
 HEAP8[$204 >> 0] = $205;
 HEAP8[$204 + 1 >> 0] = $205 >> 8;
 $207 = $this + 138 | 0;
 $208 = HEAP16[$0 + 122 >> 1] | 0;
 HEAP8[$207 >> 0] = $208;
 HEAP8[$207 + 1 >> 0] = $208 >> 8;
 $210 = $this + 140 | 0;
 $211 = HEAP16[$0 + 124 >> 1] | 0;
 HEAP8[$210 >> 0] = $211;
 HEAP8[$210 + 1 >> 0] = $211 >> 8;
 $213 = $this + 142 | 0;
 $214 = HEAP16[$0 + 126 >> 1] | 0;
 HEAP8[$213 >> 0] = $214;
 HEAP8[$213 + 1 >> 0] = $214 >> 8;
 $216 = $this + 144 | 0;
 $217 = HEAP16[$0 + 128 >> 1] | 0;
 HEAP8[$216 >> 0] = $217;
 HEAP8[$216 + 1 >> 0] = $217 >> 8;
 $219 = $this + 146 | 0;
 $220 = HEAP16[$0 + 130 >> 1] | 0;
 HEAP8[$219 >> 0] = $220;
 HEAP8[$219 + 1 >> 0] = $220 >> 8;
 $222 = $this + 148 | 0;
 $223 = HEAP16[$0 + 132 >> 1] | 0;
 HEAP8[$222 >> 0] = $223;
 HEAP8[$222 + 1 >> 0] = $223 >> 8;
 $225 = $this + 150 | 0;
 $226 = HEAP16[$0 + 134 >> 1] | 0;
 HEAP8[$225 >> 0] = $226;
 HEAP8[$225 + 1 >> 0] = $226 >> 8;
 $228 = $this + 152 | 0;
 $229 = HEAP16[$0 + 136 >> 1] | 0;
 HEAP8[$228 >> 0] = $229;
 HEAP8[$228 + 1 >> 0] = $229 >> 8;
 $231 = $this + 154 | 0;
 $232 = HEAP16[$0 + 138 >> 1] | 0;
 HEAP8[$231 >> 0] = $232;
 HEAP8[$231 + 1 >> 0] = $232 >> 8;
 $234 = $this + 156 | 0;
 $235 = HEAP16[$0 + 140 >> 1] | 0;
 HEAP8[$234 >> 0] = $235;
 HEAP8[$234 + 1 >> 0] = $235 >> 8;
 $237 = $this + 158 | 0;
 $238 = HEAP16[$0 + 142 >> 1] | 0;
 HEAP8[$237 >> 0] = $238;
 HEAP8[$237 + 1 >> 0] = $238 >> 8;
 $240 = HEAP16[$0 + 144 >> 1] | 0;
 HEAP8[$this + 160 >> 0] = $240;
 HEAP8[$this + 161 >> 0] = ($240 & 65535) >>> 8;
 $247 = HEAP16[$0 + 146 >> 1] | 0;
 HEAP8[$this + 162 >> 0] = $247;
 HEAP8[$this + 163 >> 0] = ($247 & 65535) >>> 8;
 $254 = HEAP16[$0 + 148 >> 1] | 0;
 HEAP8[$this + 164 >> 0] = $254;
 HEAP8[$this + 165 >> 0] = ($254 & 65535) >>> 8;
 $261 = HEAP16[$0 + 150 >> 1] | 0;
 HEAP8[$this + 166 >> 0] = $261;
 HEAP8[$this + 167 >> 0] = ($261 & 65535) >>> 8;
 $268 = HEAP16[$0 + 152 >> 1] | 0;
 HEAP8[$this + 168 >> 0] = $268;
 HEAP8[$this + 169 >> 0] = ($268 & 65535) >>> 8;
 $275 = HEAP16[$0 + 154 >> 1] | 0;
 HEAP8[$this + 170 >> 0] = $275;
 HEAP8[$this + 171 >> 0] = ($275 & 65535) >>> 8;
 $282 = HEAP16[$0 + 156 >> 1] | 0;
 HEAP8[$this + 172 >> 0] = $282;
 HEAP8[$this + 173 >> 0] = ($282 & 65535) >>> 8;
 $289 = HEAP16[$0 + 158 >> 1] | 0;
 HEAP8[$this + 174 >> 0] = $289;
 HEAP8[$this + 175 >> 0] = ($289 & 65535) >>> 8;
 $296 = HEAP16[$0 + 160 >> 1] | 0;
 HEAP8[$this + 176 >> 0] = $296;
 HEAP8[$this + 177 >> 0] = ($296 & 65535) >>> 8;
 $303 = HEAP16[$0 + 162 >> 1] | 0;
 HEAP8[$this + 178 >> 0] = $303;
 HEAP8[$this + 179 >> 0] = ($303 & 65535) >>> 8;
 $310 = HEAP16[$0 + 164 >> 1] | 0;
 HEAP8[$this + 180 >> 0] = $310;
 HEAP8[$this + 181 >> 0] = ($310 & 65535) >>> 8;
 $317 = HEAP16[$0 + 166 >> 1] | 0;
 HEAP8[$this + 182 >> 0] = $317;
 HEAP8[$this + 183 >> 0] = ($317 & 65535) >>> 8;
 $324 = HEAP16[$0 + 168 >> 1] | 0;
 HEAP8[$this + 184 >> 0] = $324;
 HEAP8[$this + 185 >> 0] = ($324 & 65535) >>> 8;
 $331 = HEAP16[$0 + 170 >> 1] | 0;
 HEAP8[$this + 186 >> 0] = $331;
 HEAP8[$this + 187 >> 0] = ($331 & 65535) >>> 8;
 $338 = HEAP16[$0 + 172 >> 1] | 0;
 HEAP8[$this + 188 >> 0] = $338;
 HEAP8[$this + 189 >> 0] = ($338 & 65535) >>> 8;
 $345 = HEAP16[$0 + 174 >> 1] | 0;
 HEAP8[$this + 190 >> 0] = $345;
 HEAP8[$this + 191 >> 0] = ($345 & 65535) >>> 8;
 $351 = $this + 192 | 0;
 $353 = HEAP16[$0 + 176 >> 1] | 0;
 HEAP8[$351 >> 0] = $353;
 HEAP8[$351 + 1 >> 0] = $353 >> 8;
 $354 = $this + 194 | 0;
 $356 = HEAP16[$0 + 178 >> 1] | 0;
 HEAP8[$354 >> 0] = $356;
 HEAP8[$354 + 1 >> 0] = $356 >> 8;
 $357 = $this + 196 | 0;
 $359 = HEAP16[$0 + 180 >> 1] | 0;
 HEAP8[$357 >> 0] = $359;
 HEAP8[$357 + 1 >> 0] = $359 >> 8;
 $361 = $this + 198 | 0;
 $362 = HEAP16[$0 + 182 >> 1] | 0;
 HEAP8[$361 >> 0] = $362;
 HEAP8[$361 + 1 >> 0] = $362 >> 8;
 $364 = $this + 200 | 0;
 $365 = HEAP16[$0 + 184 >> 1] | 0;
 HEAP8[$364 >> 0] = $365;
 HEAP8[$364 + 1 >> 0] = $365 >> 8;
 $367 = $this + 202 | 0;
 $368 = HEAP16[$0 + 186 >> 1] | 0;
 HEAP8[$367 >> 0] = $368;
 HEAP8[$367 + 1 >> 0] = $368 >> 8;
 $370 = $this + 204 | 0;
 $371 = HEAP16[$0 + 188 >> 1] | 0;
 HEAP8[$370 >> 0] = $371;
 HEAP8[$370 + 1 >> 0] = $371 >> 8;
 $373 = $this + 206 | 0;
 $374 = HEAP16[$0 + 190 >> 1] | 0;
 HEAP8[$373 >> 0] = $374;
 HEAP8[$373 + 1 >> 0] = $374 >> 8;
 $376 = $this + 208 | 0;
 $377 = HEAP16[$0 + 192 >> 1] | 0;
 HEAP8[$376 >> 0] = $377;
 HEAP8[$376 + 1 >> 0] = $377 >> 8;
 $379 = $this + 210 | 0;
 $380 = HEAP16[$0 + 194 >> 1] | 0;
 HEAP8[$379 >> 0] = $380;
 HEAP8[$379 + 1 >> 0] = $380 >> 8;
 $382 = $this + 212 | 0;
 $383 = HEAP16[$0 + 196 >> 1] | 0;
 HEAP8[$382 >> 0] = $383;
 HEAP8[$382 + 1 >> 0] = $383 >> 8;
 $385 = $this + 214 | 0;
 $386 = HEAP16[$0 + 198 >> 1] | 0;
 HEAP8[$385 >> 0] = $386;
 HEAP8[$385 + 1 >> 0] = $386 >> 8;
 $388 = $this + 216 | 0;
 $389 = HEAP16[$0 + 200 >> 1] | 0;
 HEAP8[$388 >> 0] = $389;
 HEAP8[$388 + 1 >> 0] = $389 >> 8;
 $391 = $this + 218 | 0;
 $392 = HEAP16[$0 + 202 >> 1] | 0;
 HEAP8[$391 >> 0] = $392;
 HEAP8[$391 + 1 >> 0] = $392 >> 8;
 $394 = $this + 220 | 0;
 $395 = HEAP16[$0 + 204 >> 1] | 0;
 HEAP8[$394 >> 0] = $395;
 HEAP8[$394 + 1 >> 0] = $395 >> 8;
 $397 = $this + 222 | 0;
 $398 = HEAP16[$0 + 206 >> 1] | 0;
 HEAP8[$397 >> 0] = $398;
 HEAP8[$397 + 1 >> 0] = $398 >> 8;
 $400 = $this + 224 | 0;
 $401 = HEAP16[$0 + 208 >> 1] | 0;
 HEAP8[$400 >> 0] = $401;
 HEAP8[$400 + 1 >> 0] = $401 >> 8;
 $403 = $this + 226 | 0;
 $404 = HEAP16[$0 + 210 >> 1] | 0;
 HEAP8[$403 >> 0] = $404;
 HEAP8[$403 + 1 >> 0] = $404 >> 8;
 $406 = HEAP16[$0 + 212 >> 1] | 0;
 HEAP8[$this + 228 >> 0] = $406;
 HEAP8[$this + 229 >> 0] = ($406 & 65535) >>> 8;
 $413 = HEAP16[$0 + 214 >> 1] | 0;
 HEAP8[$this + 230 >> 0] = $413;
 HEAP8[$this + 231 >> 0] = ($413 & 65535) >>> 8;
 $420 = HEAP16[$0 + 216 >> 1] | 0;
 HEAP8[$this + 232 >> 0] = $420;
 HEAP8[$this + 233 >> 0] = ($420 & 65535) >>> 8;
 $427 = HEAP16[$0 + 218 >> 1] | 0;
 HEAP8[$this + 234 >> 0] = $427;
 HEAP8[$this + 235 >> 0] = ($427 & 65535) >>> 8;
 $434 = HEAP16[$0 + 220 >> 1] | 0;
 HEAP8[$this + 236 >> 0] = $434;
 HEAP8[$this + 237 >> 0] = ($434 & 65535) >>> 8;
 $441 = HEAP16[$0 + 222 >> 1] | 0;
 HEAP8[$this + 238 >> 0] = $441;
 HEAP8[$this + 239 >> 0] = ($441 & 65535) >>> 8;
 $448 = HEAP16[$0 + 224 >> 1] | 0;
 HEAP8[$this + 240 >> 0] = $448;
 HEAP8[$this + 241 >> 0] = ($448 & 65535) >>> 8;
 $455 = HEAP16[$0 + 226 >> 1] | 0;
 HEAP8[$this + 242 >> 0] = $455;
 HEAP8[$this + 243 >> 0] = ($455 & 65535) >>> 8;
 $462 = HEAP16[$0 + 228 >> 1] | 0;
 HEAP8[$this + 244 >> 0] = $462;
 HEAP8[$this + 245 >> 0] = ($462 & 65535) >>> 8;
 $469 = HEAP16[$0 + 230 >> 1] | 0;
 HEAP8[$this + 246 >> 0] = $469;
 HEAP8[$this + 247 >> 0] = ($469 & 65535) >>> 8;
 $476 = HEAP16[$0 + 232 >> 1] | 0;
 HEAP8[$this + 248 >> 0] = $476;
 HEAP8[$this + 249 >> 0] = ($476 & 65535) >>> 8;
 $483 = HEAP16[$0 + 234 >> 1] | 0;
 HEAP8[$this + 250 >> 0] = $483;
 HEAP8[$this + 251 >> 0] = ($483 & 65535) >>> 8;
 $490 = HEAP16[$0 + 236 >> 1] | 0;
 HEAP8[$this + 252 >> 0] = $490;
 HEAP8[$this + 253 >> 0] = ($490 & 65535) >>> 8;
 $497 = HEAP16[$0 + 238 >> 1] | 0;
 HEAP8[$this + 254 >> 0] = $497;
 HEAP8[$this + 255 >> 0] = ($497 & 65535) >>> 8;
 $504 = HEAP16[$0 + 240 >> 1] | 0;
 HEAP8[$this + 256 >> 0] = $504;
 HEAP8[$this + 257 >> 0] = ($504 & 65535) >>> 8;
 $511 = HEAP16[$0 + 242 >> 1] | 0;
 HEAP8[$this + 258 >> 0] = $511;
 HEAP8[$this + 259 >> 0] = ($511 & 65535) >>> 8;
 $517 = $this + 260 | 0;
 $519 = HEAP16[$0 + 244 >> 1] | 0;
 HEAP8[$517 >> 0] = $519;
 HEAP8[$517 + 1 >> 0] = $519 >> 8;
 $520 = $this + 262 | 0;
 $522 = HEAP16[$0 + 246 >> 1] | 0;
 HEAP8[$520 >> 0] = $522;
 HEAP8[$520 + 1 >> 0] = $522 >> 8;
 $523 = $this + 264 | 0;
 $525 = HEAP16[$0 + 248 >> 1] | 0;
 HEAP8[$523 >> 0] = $525;
 HEAP8[$523 + 1 >> 0] = $525 >> 8;
 $527 = $this + 266 | 0;
 $528 = HEAP16[$0 + 250 >> 1] | 0;
 HEAP8[$527 >> 0] = $528;
 HEAP8[$527 + 1 >> 0] = $528 >> 8;
 $530 = $this + 268 | 0;
 $531 = HEAP16[$0 + 252 >> 1] | 0;
 HEAP8[$530 >> 0] = $531;
 HEAP8[$530 + 1 >> 0] = $531 >> 8;
 $533 = $this + 270 | 0;
 $534 = HEAP16[$0 + 254 >> 1] | 0;
 HEAP8[$533 >> 0] = $534;
 HEAP8[$533 + 1 >> 0] = $534 >> 8;
 $536 = $this + 272 | 0;
 $537 = HEAP16[$0 + 256 >> 1] | 0;
 HEAP8[$536 >> 0] = $537;
 HEAP8[$536 + 1 >> 0] = $537 >> 8;
 $539 = $this + 274 | 0;
 $540 = HEAP16[$0 + 258 >> 1] | 0;
 HEAP8[$539 >> 0] = $540;
 HEAP8[$539 + 1 >> 0] = $540 >> 8;
 $542 = $this + 276 | 0;
 $543 = HEAP16[$0 + 260 >> 1] | 0;
 HEAP8[$542 >> 0] = $543;
 HEAP8[$542 + 1 >> 0] = $543 >> 8;
 $545 = $this + 278 | 0;
 $546 = HEAP16[$0 + 262 >> 1] | 0;
 HEAP8[$545 >> 0] = $546;
 HEAP8[$545 + 1 >> 0] = $546 >> 8;
 $548 = $this + 280 | 0;
 $549 = HEAP16[$0 + 264 >> 1] | 0;
 HEAP8[$548 >> 0] = $549;
 HEAP8[$548 + 1 >> 0] = $549 >> 8;
 $551 = $this + 282 | 0;
 $552 = HEAP16[$0 + 266 >> 1] | 0;
 HEAP8[$551 >> 0] = $552;
 HEAP8[$551 + 1 >> 0] = $552 >> 8;
 $554 = $this + 284 | 0;
 $555 = HEAP16[$0 + 268 >> 1] | 0;
 HEAP8[$554 >> 0] = $555;
 HEAP8[$554 + 1 >> 0] = $555 >> 8;
 $557 = $this + 286 | 0;
 $558 = HEAP16[$0 + 270 >> 1] | 0;
 HEAP8[$557 >> 0] = $558;
 HEAP8[$557 + 1 >> 0] = $558 >> 8;
 $560 = $this + 288 | 0;
 $561 = HEAP16[$0 + 272 >> 1] | 0;
 HEAP8[$560 >> 0] = $561;
 HEAP8[$560 + 1 >> 0] = $561 >> 8;
 $563 = $this + 290 | 0;
 $564 = HEAP16[$0 + 274 >> 1] | 0;
 HEAP8[$563 >> 0] = $564;
 HEAP8[$563 + 1 >> 0] = $564 >> 8;
 $566 = $this + 292 | 0;
 $567 = HEAP16[$0 + 276 >> 1] | 0;
 HEAP8[$566 >> 0] = $567;
 HEAP8[$566 + 1 >> 0] = $567 >> 8;
 $569 = $this + 294 | 0;
 $570 = HEAP16[$0 + 278 >> 1] | 0;
 HEAP8[$569 >> 0] = $570;
 HEAP8[$569 + 1 >> 0] = $570 >> 8;
 $572 = HEAP16[$0 + 280 >> 1] | 0;
 HEAP8[$this + 296 >> 0] = $572;
 HEAP8[$this + 297 >> 0] = ($572 & 65535) >>> 8;
 $579 = HEAP16[$0 + 282 >> 1] | 0;
 HEAP8[$this + 298 >> 0] = $579;
 HEAP8[$this + 299 >> 0] = ($579 & 65535) >>> 8;
 $586 = HEAP16[$0 + 284 >> 1] | 0;
 HEAP8[$this + 300 >> 0] = $586;
 HEAP8[$this + 301 >> 0] = ($586 & 65535) >>> 8;
 $593 = HEAP16[$0 + 286 >> 1] | 0;
 HEAP8[$this + 302 >> 0] = $593;
 HEAP8[$this + 303 >> 0] = ($593 & 65535) >>> 8;
 $600 = HEAP16[$0 + 288 >> 1] | 0;
 HEAP8[$this + 304 >> 0] = $600;
 HEAP8[$this + 305 >> 0] = ($600 & 65535) >>> 8;
 $607 = HEAP16[$0 + 290 >> 1] | 0;
 HEAP8[$this + 306 >> 0] = $607;
 HEAP8[$this + 307 >> 0] = ($607 & 65535) >>> 8;
 $614 = HEAP16[$0 + 292 >> 1] | 0;
 HEAP8[$this + 308 >> 0] = $614;
 HEAP8[$this + 309 >> 0] = ($614 & 65535) >>> 8;
 $621 = HEAP16[$0 + 294 >> 1] | 0;
 HEAP8[$this + 310 >> 0] = $621;
 HEAP8[$this + 311 >> 0] = ($621 & 65535) >>> 8;
 $628 = HEAP16[$0 + 296 >> 1] | 0;
 HEAP8[$this + 312 >> 0] = $628;
 HEAP8[$this + 313 >> 0] = ($628 & 65535) >>> 8;
 $635 = HEAP16[$0 + 298 >> 1] | 0;
 HEAP8[$this + 314 >> 0] = $635;
 HEAP8[$this + 315 >> 0] = ($635 & 65535) >>> 8;
 $642 = HEAP16[$0 + 300 >> 1] | 0;
 HEAP8[$this + 316 >> 0] = $642;
 HEAP8[$this + 317 >> 0] = ($642 & 65535) >>> 8;
 $649 = HEAP16[$0 + 302 >> 1] | 0;
 HEAP8[$this + 318 >> 0] = $649;
 HEAP8[$this + 319 >> 0] = ($649 & 65535) >>> 8;
 $656 = HEAP16[$0 + 304 >> 1] | 0;
 HEAP8[$this + 320 >> 0] = $656;
 HEAP8[$this + 321 >> 0] = ($656 & 65535) >>> 8;
 $663 = HEAP16[$0 + 306 >> 1] | 0;
 HEAP8[$this + 322 >> 0] = $663;
 HEAP8[$this + 323 >> 0] = ($663 & 65535) >>> 8;
 $670 = HEAP16[$0 + 308 >> 1] | 0;
 HEAP8[$this + 324 >> 0] = $670;
 HEAP8[$this + 325 >> 0] = ($670 & 65535) >>> 8;
 $677 = HEAP16[$0 + 310 >> 1] | 0;
 HEAP8[$this + 326 >> 0] = $677;
 HEAP8[$this + 327 >> 0] = ($677 & 65535) >>> 8;
 $683 = $this + 328 | 0;
 $685 = HEAP16[$0 + 312 >> 1] | 0;
 HEAP8[$683 >> 0] = $685;
 HEAP8[$683 + 1 >> 0] = $685 >> 8;
 HEAP32[$this + 332 >> 2] = HEAP32[$0 + 316 >> 2];
 if ($2) {
  STACKTOP = sp;
  return;
 }
 $690 = $0 + 320 | 0;
 $695 = HEAP32[$690 + 4 >> 2] | 0;
 $697 = $this + 336 | 0;
 HEAP32[$697 >> 2] = HEAP32[$690 >> 2];
 HEAP32[$697 + 4 >> 2] = $695;
 STACKTOP = sp;
 return;
}

function __ZL19stbtt_GetGlyphShapePK14stbtt_fontinfoiPP12stbtt_vertex($info, $glyph_index, $pvertices) {
 $info = $info | 0;
 $glyph_index = $glyph_index | 0;
 $pvertices = $pvertices | 0;
 var $$0$i = 0, $$0$i32 = 0, $$4 = 0, $$idx11$val = 0, $$val10 = 0, $1 = 0, $102 = 0, $104 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $110 = 0, $114 = 0, $12 = 0, $13 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $154 = 0, $157 = 0, $158 = 0, $165 = 0, $167 = 0, $18 = 0, $184 = 0, $193 = 0, $2 = 0, $208 = 0, $209 = 0, $210 = 0, $22 = 0, $222 = 0, $247 = 0, $248 = 0, $249 = 0, $264 = 0, $269 = 0, $275 = 0, $303 = 0.0, $31 = 0, $32 = 0, $363 = 0, $365 = 0, $366 = 0, $368 = 0, $370 = 0.0, $372 = 0.0, $384 = 0, $386 = 0, $388 = 0.0, $390 = 0.0, $4 = 0, $403 = 0, $405 = 0, $408 = 0, $413 = 0, $42 = 0, $45 = 0, $52 = 0, $72 = 0, $75 = 0, $8 = 0, $82 = 0, $9 = 0, $comp$072 = 0, $comp$1 = 0, $comp$2 = 0, $comp_verts = 0, $cx$049 = 0, $cx$1 = 0, $cx$1$lcssa = 0, $cy$050 = 0, $cy$1 = 0, $cy$1$lcssa = 0, $flagcount$069 = 0, $flagcount$1 = 0, $flags$070 = 0, $flags$1 = 0, $i$068 = 0, $i$166 = 0, $i$263 = 0, $i$359 = 0, $i$4 = 0, $i$5 = 0, $i2$071 = 0, $j$058 = 0, $j$1 = 0, $mtx$sroa$0$0 = 0.0, $mtx$sroa$10$0 = 0.0, $mtx$sroa$17$0 = 0.0, $mtx$sroa$24$0 = 0.0, $mtx$sroa$31$0 = 0.0, $mtx$sroa$35$0 = 0.0, $next_move$057 = 0, $next_move$1 = 0, $num_vertices$060 = 0, $num_vertices$1 = 0, $num_vertices$3 = 0, $num_vertices$3$lcssa = 0, $num_vertices$573 = 0, $num_vertices$6 = 0, $num_vertices$9 = 0, $points$067 = 0, $points$1 = 0, $points$265 = 0, $points$3 = 0, $points$462 = 0, $points$5 = 0, $scx$053 = 0, $scx$1 = 0, $scx$2 = 0, $scx$2$lcssa = 0, $scy$055 = 0, $scy$1 = 0, $scy$2 = 0, $scy$2$lcssa = 0, $sqrtf = 0.0, $sqrtf6 = 0.0, $start_off$048 = 0, $start_off$1 = 0, $start_off$1$lcssa = 0, $sx$051 = 0, $sx$1 = 0, $sx$2 = 0, $sx$2$lcssa = 0, $sy$052 = 0, $sy$1 = 0, $sy$2 = 0, $sy$2$lcssa = 0, $vertices$074 = 0, $vertices$074$lcssa83 = 0, $vertices$1 = 0, $vertices$4 = 0, $was_off$047 = 0, $was_off$1 = 0, $was_off$1$lcssa = 0, $x$064 = 0, $x$1 = 0, $y$061 = 0, $y$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $comp_verts = sp;
 $1 = HEAP32[$info + 4 >> 2] | 0;
 $2 = __ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi($info, $glyph_index) | 0;
 HEAP32[$pvertices >> 2] = 0;
 if (($2 | 0) < 0) {
  $$4 = 0;
  STACKTOP = sp;
  return $$4 | 0;
 }
 $4 = $1 + $2 | 0;
 $8 = HEAPU8[$4 >> 0] << 8 | HEAPU8[$4 + 1 >> 0];
 $9 = $8 & 65535;
 L4 : do if ($9 << 16 >> 16 > 0) {
  $11 = $4 + 10 | 0;
  $12 = $8 << 16 >> 15;
  $13 = $11 + $12 | 0;
  $$val10 = HEAP8[$13 >> 0] | 0;
  $$idx11$val = HEAP8[$13 + 1 >> 0] | 0;
  $14 = $13 + -2 | 0;
  $18 = HEAPU8[$14 >> 0] << 8 | HEAPU8[$14 + 1 >> 0];
  $22 = __ZN5ImGui8MemAllocEj((($12 | 1) + $18 | 0) * 10 | 0) | 0;
  if (!$22) {
   $$4 = 0;
   STACKTOP = sp;
   return $$4 | 0;
  }
  $flagcount$069 = 0;
  $flags$070 = 0;
  $i$068 = 0;
  $points$067 = $13 + 2 + (($$val10 & 255) << 8 | $$idx11$val & 255) | 0;
  while (1) {
   if (!($flagcount$069 << 24 >> 24)) {
    $31 = $points$067 + 1 | 0;
    $32 = HEAP8[$points$067 >> 0] | 0;
    if (!($32 & 8)) {
     $flagcount$1 = 0;
     $flags$1 = $32;
     $points$1 = $31;
    } else {
     $flagcount$1 = HEAP8[$31 >> 0] | 0;
     $flags$1 = $32;
     $points$1 = $points$067 + 2 | 0;
    }
   } else {
    $flagcount$1 = $flagcount$069 + -1 << 24 >> 24;
    $flags$1 = $flags$070;
    $points$1 = $points$067;
   }
   HEAP8[$22 + (($i$068 + $12 | 0) * 10 | 0) + 8 >> 0] = $flags$1;
   if (($i$068 | 0) < ($18 | 0)) {
    $flagcount$069 = $flagcount$1;
    $flags$070 = $flags$1;
    $i$068 = $i$068 + 1 | 0;
    $points$067 = $points$1;
   } else {
    $i$166 = 0;
    $points$265 = $points$1;
    $x$064 = 0;
    break;
   }
  }
  while (1) {
   $42 = $i$166 + $12 | 0;
   $45 = HEAPU8[$22 + ($42 * 10 | 0) + 8 >> 0] | 0;
   if (!($45 & 2)) if (!($45 & 16)) {
    $points$3 = $points$265 + 2 | 0;
    $x$1 = ((HEAPU8[$points$265 >> 0] << 8 | HEAPU8[$points$265 + 1 >> 0]) << 16 >> 16) + $x$064 | 0;
   } else {
    $points$3 = $points$265;
    $x$1 = $x$064;
   } else {
    $52 = HEAPU8[$points$265 >> 0] | 0;
    $points$3 = $points$265 + 1 | 0;
    $x$1 = ($45 & 16 | 0 ? $52 : 0 - $52 | 0) + $x$064 | 0;
   }
   HEAP16[$22 + ($42 * 10 | 0) >> 1] = $x$1;
   if (($i$166 | 0) < ($18 | 0)) {
    $i$166 = $i$166 + 1 | 0;
    $points$265 = $points$3;
    $x$064 = $x$1;
   } else {
    $i$263 = 0;
    $points$462 = $points$3;
    $y$061 = 0;
    break;
   }
  }
  while (1) {
   $72 = $i$263 + $12 | 0;
   $75 = HEAPU8[$22 + ($72 * 10 | 0) + 8 >> 0] | 0;
   if (!($75 & 4)) if (!($75 & 32)) {
    $points$5 = $points$462 + 2 | 0;
    $y$1 = ((HEAPU8[$points$462 >> 0] << 8 | HEAPU8[$points$462 + 1 >> 0]) << 16 >> 16) + $y$061 | 0;
   } else {
    $points$5 = $points$462;
    $y$1 = $y$061;
   } else {
    $82 = HEAPU8[$points$462 >> 0] | 0;
    $points$5 = $points$462 + 1 | 0;
    $y$1 = ($75 & 32 | 0 ? $82 : 0 - $82 | 0) + $y$061 | 0;
   }
   HEAP16[$22 + ($72 * 10 | 0) + 2 >> 1] = $y$1;
   if (($i$263 | 0) < ($18 | 0)) {
    $i$263 = $i$263 + 1 | 0;
    $points$462 = $points$5;
    $y$061 = $y$1;
   } else {
    $cx$049 = 0;
    $cy$050 = 0;
    $i$359 = 0;
    $j$058 = 0;
    $next_move$057 = 0;
    $num_vertices$060 = 0;
    $scx$053 = 0;
    $scy$055 = 0;
    $start_off$048 = 0;
    $sx$051 = 0;
    $sy$052 = 0;
    $was_off$047 = 0;
    break;
   }
  }
  while (1) {
   $102 = $i$359 + $12 | 0;
   $104 = HEAP8[$22 + ($102 * 10 | 0) + 8 >> 0] | 0;
   $106 = HEAP16[$22 + ($102 * 10 | 0) >> 1] | 0;
   $107 = $106 << 16 >> 16;
   $109 = HEAP16[$22 + ($102 * 10 | 0) + 2 >> 1] | 0;
   $110 = $109 << 16 >> 16;
   do if (($next_move$057 | 0) == ($i$359 | 0)) {
    do if (!$i$359) $num_vertices$1 = $num_vertices$060; else {
     $114 = ($was_off$047 | 0) != 0;
     if (!$start_off$048) {
      $139 = $num_vertices$060 + 1 | 0;
      $140 = $22 + ($num_vertices$060 * 10 | 0) | 0;
      $141 = $22 + ($num_vertices$060 * 10 | 0) + 8 | 0;
      if ($114) {
       HEAP8[$141 >> 0] = 3;
       HEAP16[$140 >> 1] = $sx$051;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 2 >> 1] = $sy$052;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 4 >> 1] = $cx$049;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 6 >> 1] = $cy$050;
       $num_vertices$1 = $139;
       break;
      } else {
       HEAP8[$141 >> 0] = 2;
       HEAP16[$140 >> 1] = $sx$051;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 2 >> 1] = $sy$052;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 4 >> 1] = 0;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 6 >> 1] = 0;
       $num_vertices$1 = $139;
       break;
      }
     } else {
      if ($114) {
       HEAP8[$22 + ($num_vertices$060 * 10 | 0) + 8 >> 0] = 3;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) >> 1] = ($scx$053 + $cx$049 | 0) >>> 1;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 2 >> 1] = ($scy$055 + $cy$050 | 0) >>> 1;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 4 >> 1] = $cx$049;
       HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 6 >> 1] = $cy$050;
       $$0$i32 = $num_vertices$060 + 1 | 0;
      } else $$0$i32 = $num_vertices$060;
      HEAP8[$22 + ($$0$i32 * 10 | 0) + 8 >> 0] = 3;
      HEAP16[$22 + ($$0$i32 * 10 | 0) >> 1] = $sx$051;
      HEAP16[$22 + ($$0$i32 * 10 | 0) + 2 >> 1] = $sy$052;
      HEAP16[$22 + ($$0$i32 * 10 | 0) + 4 >> 1] = $scx$053;
      HEAP16[$22 + ($$0$i32 * 10 | 0) + 6 >> 1] = $scy$055;
      $num_vertices$1 = $$0$i32 + 1 | 0;
      break;
     }
    } while (0);
    $154 = $104 & 1;
    $157 = ($154 ^ 1) & 255;
    do if (!($154 << 24 >> 24)) {
     $158 = $102 + 1 | 0;
     $165 = HEAP16[$22 + ($158 * 10 | 0) >> 1] | 0;
     $167 = HEAP16[$22 + ($158 * 10 | 0) + 2 >> 1] | 0;
     if (!(HEAP8[$22 + ($158 * 10 | 0) + 8 >> 0] & 1)) {
      $i$4 = $i$359;
      $scx$1 = $107;
      $scy$1 = $110;
      $sx$1 = $165 + $107 >> 1;
      $sy$1 = ($167 << 16 >> 16) + $110 >> 1;
      break;
     } else {
      $i$4 = $i$359 + 1 | 0;
      $scx$1 = $107;
      $scy$1 = $110;
      $sx$1 = $165;
      $sy$1 = $167 << 16 >> 16;
      break;
     }
    } else {
     $i$4 = $i$359;
     $scx$1 = $scx$053;
     $scy$1 = $scy$055;
     $sx$1 = $107;
     $sy$1 = $110;
    } while (0);
    HEAP8[$22 + ($num_vertices$1 * 10 | 0) + 8 >> 0] = 1;
    HEAP16[$22 + ($num_vertices$1 * 10 | 0) >> 1] = $sx$1;
    HEAP16[$22 + ($num_vertices$1 * 10 | 0) + 2 >> 1] = $sy$1;
    HEAP16[$22 + ($num_vertices$1 * 10 | 0) + 4 >> 1] = 0;
    HEAP16[$22 + ($num_vertices$1 * 10 | 0) + 6 >> 1] = 0;
    $184 = $11 + ($j$058 << 1) | 0;
    $cx$1 = $cx$049;
    $cy$1 = $cy$050;
    $i$5 = $i$4;
    $j$1 = $j$058 + 1 | 0;
    $next_move$1 = (HEAPU8[$184 >> 0] << 8 | HEAPU8[$184 + 1 >> 0]) + 1 | 0;
    $num_vertices$3 = $num_vertices$1 + 1 | 0;
    $scx$2 = $scx$1;
    $scy$2 = $scy$1;
    $start_off$1 = $157;
    $sx$2 = $sx$1;
    $sy$2 = $sy$1;
    $was_off$1 = 0;
   } else {
    $193 = ($was_off$047 | 0) != 0;
    if (!($104 & 1)) {
     if (!$193) {
      $cx$1 = $107;
      $cy$1 = $110;
      $i$5 = $i$359;
      $j$1 = $j$058;
      $next_move$1 = $next_move$057;
      $num_vertices$3 = $num_vertices$060;
      $scx$2 = $scx$053;
      $scy$2 = $scy$055;
      $start_off$1 = $start_off$048;
      $sx$2 = $sx$051;
      $sy$2 = $sy$052;
      $was_off$1 = 1;
      break;
     }
     HEAP8[$22 + ($num_vertices$060 * 10 | 0) + 8 >> 0] = 3;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) >> 1] = ($107 + $cx$049 | 0) >>> 1;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 2 >> 1] = ($110 + $cy$050 | 0) >>> 1;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 4 >> 1] = $cx$049;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 6 >> 1] = $cy$050;
     $cx$1 = $107;
     $cy$1 = $110;
     $i$5 = $i$359;
     $j$1 = $j$058;
     $next_move$1 = $next_move$057;
     $num_vertices$3 = $num_vertices$060 + 1 | 0;
     $scx$2 = $scx$053;
     $scy$2 = $scy$055;
     $start_off$1 = $start_off$048;
     $sx$2 = $sx$051;
     $sy$2 = $sy$052;
     $was_off$1 = 1;
     break;
    }
    $208 = $num_vertices$060 + 1 | 0;
    $209 = $22 + ($num_vertices$060 * 10 | 0) | 0;
    $210 = $22 + ($num_vertices$060 * 10 | 0) + 8 | 0;
    if ($193) {
     HEAP8[$210 >> 0] = 3;
     HEAP16[$209 >> 1] = $106;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 2 >> 1] = $109;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 4 >> 1] = $cx$049;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 6 >> 1] = $cy$050;
     $cx$1 = $cx$049;
     $cy$1 = $cy$050;
     $i$5 = $i$359;
     $j$1 = $j$058;
     $next_move$1 = $next_move$057;
     $num_vertices$3 = $208;
     $scx$2 = $scx$053;
     $scy$2 = $scy$055;
     $start_off$1 = $start_off$048;
     $sx$2 = $sx$051;
     $sy$2 = $sy$052;
     $was_off$1 = 0;
     break;
    } else {
     HEAP8[$210 >> 0] = 2;
     HEAP16[$209 >> 1] = $106;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 2 >> 1] = $109;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 4 >> 1] = 0;
     HEAP16[$22 + ($num_vertices$060 * 10 | 0) + 6 >> 1] = 0;
     $cx$1 = $cx$049;
     $cy$1 = $cy$050;
     $i$5 = $i$359;
     $j$1 = $j$058;
     $next_move$1 = $next_move$057;
     $num_vertices$3 = $208;
     $scx$2 = $scx$053;
     $scy$2 = $scy$055;
     $start_off$1 = $start_off$048;
     $sx$2 = $sx$051;
     $sy$2 = $sy$052;
     $was_off$1 = 0;
     break;
    }
   } while (0);
   if (($i$5 | 0) < ($18 | 0)) {
    $cx$049 = $cx$1;
    $cy$050 = $cy$1;
    $i$359 = $i$5 + 1 | 0;
    $j$058 = $j$1;
    $next_move$057 = $next_move$1;
    $num_vertices$060 = $num_vertices$3;
    $scx$053 = $scx$2;
    $scy$055 = $scy$2;
    $start_off$048 = $start_off$1;
    $sx$051 = $sx$2;
    $sy$052 = $sy$2;
    $was_off$047 = $was_off$1;
   } else {
    $cx$1$lcssa = $cx$1;
    $cy$1$lcssa = $cy$1;
    $num_vertices$3$lcssa = $num_vertices$3;
    $scx$2$lcssa = $scx$2;
    $scy$2$lcssa = $scy$2;
    $start_off$1$lcssa = $start_off$1;
    $sx$2$lcssa = $sx$2;
    $sy$2$lcssa = $sy$2;
    $was_off$1$lcssa = $was_off$1;
    break;
   }
  }
  $222 = ($was_off$1$lcssa | 0) != 0;
  if (!$start_off$1$lcssa) {
   $247 = $num_vertices$3$lcssa + 1 | 0;
   $248 = $22 + ($num_vertices$3$lcssa * 10 | 0) | 0;
   $249 = $22 + ($num_vertices$3$lcssa * 10 | 0) + 8 | 0;
   if ($222) {
    HEAP8[$249 >> 0] = 3;
    HEAP16[$248 >> 1] = $sx$2$lcssa;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) + 2 >> 1] = $sy$2$lcssa;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) + 4 >> 1] = $cx$1$lcssa;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) + 6 >> 1] = $cy$1$lcssa;
    $num_vertices$9 = $247;
    $vertices$4 = $22;
    break;
   } else {
    HEAP8[$249 >> 0] = 2;
    HEAP16[$248 >> 1] = $sx$2$lcssa;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) + 2 >> 1] = $sy$2$lcssa;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) + 4 >> 1] = 0;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) + 6 >> 1] = 0;
    $num_vertices$9 = $247;
    $vertices$4 = $22;
    break;
   }
  } else {
   if ($222) {
    HEAP8[$22 + ($num_vertices$3$lcssa * 10 | 0) + 8 >> 0] = 3;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) >> 1] = ($scx$2$lcssa + $cx$1$lcssa | 0) >>> 1;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) + 2 >> 1] = ($scy$2$lcssa + $cy$1$lcssa | 0) >>> 1;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) + 4 >> 1] = $cx$1$lcssa;
    HEAP16[$22 + ($num_vertices$3$lcssa * 10 | 0) + 6 >> 1] = $cy$1$lcssa;
    $$0$i = $num_vertices$3$lcssa + 1 | 0;
   } else $$0$i = $num_vertices$3$lcssa;
   HEAP8[$22 + ($$0$i * 10 | 0) + 8 >> 0] = 3;
   HEAP16[$22 + ($$0$i * 10 | 0) >> 1] = $sx$2$lcssa;
   HEAP16[$22 + ($$0$i * 10 | 0) + 2 >> 1] = $sy$2$lcssa;
   HEAP16[$22 + ($$0$i * 10 | 0) + 4 >> 1] = $scx$2$lcssa;
   HEAP16[$22 + ($$0$i * 10 | 0) + 6 >> 1] = $scy$2$lcssa;
   $num_vertices$9 = $$0$i + 1 | 0;
   $vertices$4 = $22;
   break;
  }
 } else {
  if ($9 << 16 >> 16 != -1) {
   if ($9 << 16 >> 16 >= 0) {
    $num_vertices$9 = 0;
    $vertices$4 = 0;
    break;
   }
   ___assert_fail(139733, 140438, 1457, 140724);
  }
  $comp$072 = $4 + 10 | 0;
  $num_vertices$573 = 0;
  $vertices$074 = 0;
  while (1) {
   HEAP32[$comp_verts >> 2] = 0;
   $264 = HEAPU8[$comp$072 + 1 >> 0] | 0;
   $269 = HEAPU8[$comp$072 + 2 >> 0] << 8 | HEAPU8[$comp$072 + 3 >> 0];
   if (!($264 & 2)) {
    label = 54;
    break;
   }
   $275 = HEAP8[$comp$072 + 4 >> 0] | 0;
   if (!($264 & 1)) {
    $comp$1 = $comp$072 + 6 | 0;
    $mtx$sroa$31$0 = +($275 << 24 >> 24);
    $mtx$sroa$35$0 = +(HEAP8[$comp$072 + 5 >> 0] | 0);
   } else {
    $comp$1 = $comp$072 + 8 | 0;
    $mtx$sroa$31$0 = +(((HEAPU8[$comp$072 + 5 >> 0] | ($275 & 255) << 8) & 65535) << 16 >> 16);
    $mtx$sroa$35$0 = +(((HEAPU8[$comp$072 + 6 >> 0] << 8 | HEAPU8[$comp$072 + 7 >> 0]) & 65535) << 16 >> 16);
   }
   do if (!($264 & 8)) {
    if ($264 & 64 | 0) {
     $comp$2 = $comp$1 + 4 | 0;
     $mtx$sroa$0$0 = +(((HEAPU8[$comp$1 >> 0] << 8 | HEAPU8[$comp$1 + 1 >> 0]) & 65535) << 16 >> 16) * .00006103515625;
     $mtx$sroa$10$0 = 0.0;
     $mtx$sroa$17$0 = 0.0;
     $mtx$sroa$24$0 = +(((HEAPU8[$comp$1 + 2 >> 0] << 8 | HEAPU8[$comp$1 + 3 >> 0]) & 65535) << 16 >> 16) * .00006103515625;
     break;
    }
    if (!($264 & 128)) {
     $comp$2 = $comp$1;
     $mtx$sroa$0$0 = 1.0;
     $mtx$sroa$10$0 = 0.0;
     $mtx$sroa$17$0 = 0.0;
     $mtx$sroa$24$0 = 1.0;
    } else {
     $comp$2 = $comp$1 + 8 | 0;
     $mtx$sroa$0$0 = +(((HEAPU8[$comp$1 >> 0] << 8 | HEAPU8[$comp$1 + 1 >> 0]) & 65535) << 16 >> 16) * .00006103515625;
     $mtx$sroa$10$0 = +(((HEAPU8[$comp$1 + 2 >> 0] << 8 | HEAPU8[$comp$1 + 3 >> 0]) & 65535) << 16 >> 16) * .00006103515625;
     $mtx$sroa$17$0 = +(((HEAPU8[$comp$1 + 4 >> 0] << 8 | HEAPU8[$comp$1 + 5 >> 0]) & 65535) << 16 >> 16) * .00006103515625;
     $mtx$sroa$24$0 = +(((HEAPU8[$comp$1 + 6 >> 0] << 8 | HEAPU8[$comp$1 + 7 >> 0]) & 65535) << 16 >> 16) * .00006103515625;
    }
   } else {
    $303 = +(((HEAPU8[$comp$1 >> 0] << 8 | HEAPU8[$comp$1 + 1 >> 0]) & 65535) << 16 >> 16) * .00006103515625;
    $comp$2 = $comp$1 + 2 | 0;
    $mtx$sroa$0$0 = $303;
    $mtx$sroa$10$0 = 0.0;
    $mtx$sroa$17$0 = 0.0;
    $mtx$sroa$24$0 = $303;
   } while (0);
   $sqrtf = +Math_sqrt(+($mtx$sroa$10$0 * $mtx$sroa$10$0 + $mtx$sroa$0$0 * $mtx$sroa$0$0));
   $sqrtf6 = +Math_sqrt(+($mtx$sroa$24$0 * $mtx$sroa$24$0 + $mtx$sroa$17$0 * $mtx$sroa$17$0));
   $363 = __ZL19stbtt_GetGlyphShapePK14stbtt_fontinfoiPP12stbtt_vertex($info, $269, $comp_verts) | 0;
   if (($363 | 0) > 0) {
    $365 = HEAP32[$comp_verts >> 2] | 0;
    $i2$071 = 0;
    do {
     $366 = $365 + ($i2$071 * 10 | 0) | 0;
     $368 = $365 + ($i2$071 * 10 | 0) + 2 | 0;
     $370 = +(HEAP16[$366 >> 1] | 0);
     $372 = +(HEAP16[$368 >> 1] | 0);
     HEAP16[$366 >> 1] = ~~($sqrtf * ($mtx$sroa$31$0 + ($mtx$sroa$0$0 * $370 + $mtx$sroa$17$0 * $372)));
     HEAP16[$368 >> 1] = ~~($sqrtf6 * ($mtx$sroa$35$0 + ($mtx$sroa$10$0 * $370 + $mtx$sroa$24$0 * $372)));
     $384 = $365 + ($i2$071 * 10 | 0) + 4 | 0;
     $386 = $365 + ($i2$071 * 10 | 0) + 6 | 0;
     $388 = +(HEAP16[$384 >> 1] | 0);
     $390 = +(HEAP16[$386 >> 1] | 0);
     HEAP16[$384 >> 1] = ~~($sqrtf * ($mtx$sroa$31$0 + ($mtx$sroa$0$0 * $388 + $mtx$sroa$17$0 * $390)));
     HEAP16[$386 >> 1] = ~~($sqrtf6 * ($mtx$sroa$35$0 + ($mtx$sroa$10$0 * $388 + $mtx$sroa$24$0 * $390)));
     $i2$071 = $i2$071 + 1 | 0;
    } while (($i2$071 | 0) != ($363 | 0));
    $403 = $363 + $num_vertices$573 | 0;
    $405 = __ZN5ImGui8MemAllocEj($403 * 10 | 0) | 0;
    if (!$405) {
     $vertices$074$lcssa83 = $vertices$074;
     break;
    }
    if (($num_vertices$573 | 0) > 0) _memcpy($405 | 0, $vertices$074 | 0, $num_vertices$573 * 10 | 0) | 0;
    $413 = HEAP32[$comp_verts >> 2] | 0;
    _memcpy($405 + ($num_vertices$573 * 10 | 0) | 0, $413 | 0, $363 * 10 | 0) | 0;
    if ($vertices$074 | 0) __ZN5ImGui7MemFreeEPv($vertices$074);
    __ZN5ImGui7MemFreeEPv($413);
    $num_vertices$6 = $403;
    $vertices$1 = $405;
   } else {
    $num_vertices$6 = $num_vertices$573;
    $vertices$1 = $vertices$074;
   }
   if (!($264 & 32)) {
    $num_vertices$9 = $num_vertices$6;
    $vertices$4 = $vertices$1;
    break L4;
   } else {
    $comp$072 = $comp$2;
    $num_vertices$573 = $num_vertices$6;
    $vertices$074 = $vertices$1;
   }
  }
  if ((label | 0) == 54) ___assert_fail(139733, 140438, 1404, 140724);
  if ($vertices$074$lcssa83 | 0) __ZN5ImGui7MemFreeEPv($vertices$074$lcssa83);
  $408 = HEAP32[$comp_verts >> 2] | 0;
  if ($408 | 0) __ZN5ImGui7MemFreeEPv($408);
  $$4 = 0;
  STACKTOP = sp;
  return $$4 | 0;
 } while (0);
 HEAP32[$pvertices >> 2] = $vertices$4;
 $$4 = $num_vertices$9;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZN4yakc4kc8521update_bank_switchingEv($this) {
 $this = $this | 0;
 var $0 = 0, $106 = 0, $113 = 0, $114 = 0, $130 = 0, $156 = 0, $158 = 0, $162 = 0, $163 = 0, $166 = 0, $173 = 0, $2 = 0, $201 = 0, $208 = 0, $209 = 0, $227 = 0, $251 = 0, $258 = 0, $259 = 0, $275 = 0, $291 = 0, $298 = 0, $299 = 0, $324 = 0, $325 = 0, $33 = 0, $345 = 0, $35 = 0, $352 = 0, $353 = 0, $375 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $5 = 0, $7 = 0, $76 = 0, $83 = 0, $84 = 0, $layer_index$03$lcssa$i$i = 0, $layer_index$03$lcssa$i$i13 = 0, $layer_index$03$lcssa$i$i21 = 0, $layer_index$03$lcssa$i$i29 = 0, $layer_index$03$lcssa$i$i37 = 0, $layer_index$03$lcssa$i$i45 = 0, $layer_index$03$lcssa$i$i5 = 0, $layer_index$03$lcssa$i$i53 = 0, $layer_index$03$lcssa$i$i61 = 0, $page_index$04$i$i = 0, $page_index$04$i$i11 = 0, $page_index$04$i$i19 = 0, $page_index$04$i$i27 = 0, $page_index$04$i$i3 = 0, $page_index$04$i$i35 = 0, $page_index$04$i$i43 = 0, $page_index$04$i$i51 = 0, $page_index$04$i$i59 = 0, label = 0;
 $0 = $this + 65908 | 0;
 __ZN4yakc6memory11unmap_layerEi($0, 0);
 $2 = HEAP8[$this + 69262 >> 0] | 0;
 $4 = HEAP8[$this + 69263 >> 0] | 0;
 $5 = $this + 725496 | 0;
 switch (HEAP32[$5 >> 2] | 0) {
 case 2:
 case 1:
  {
   $7 = $2 & 255;
   L3 : do if ($7 & 2 | 0) {
    HEAP32[$this + 65908 >> 2] = $this;
    HEAP8[$this + 65912 >> 0] = 1;
    HEAP32[$this + 65916 >> 2] = $this + 2048;
    HEAP8[$this + 65920 >> 0] = 1;
    HEAP32[$this + 65924 >> 2] = $this + 4096;
    HEAP8[$this + 65928 >> 0] = 1;
    HEAP32[$this + 65932 >> 2] = $this + 6144;
    HEAP8[$this + 65936 >> 0] = 1;
    HEAP32[$this + 65940 >> 2] = $this + 8192;
    HEAP8[$this + 65944 >> 0] = 1;
    HEAP32[$this + 65948 >> 2] = $this + 10240;
    HEAP8[$this + 65952 >> 0] = 1;
    HEAP32[$this + 65956 >> 2] = $this + 12288;
    HEAP8[$this + 65960 >> 0] = 1;
    HEAP32[$this + 65964 >> 2] = $this + 14336;
    HEAP8[$this + 65968 >> 0] = 1;
    $33 = $this + 67188 | 0;
    $35 = $this;
    $page_index$04$i$i = 0;
    while (1) {
     if (!$35) if (!(HEAP32[$this + 66164 + ($page_index$04$i$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 66420 + ($page_index$04$i$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 66676 + ($page_index$04$i$i << 3) >> 2] | 0)) {
      HEAP32[$this + 66932 + ($page_index$04$i$i << 3) >> 2] = $33;
      HEAP8[$this + 66932 + ($page_index$04$i$i << 3) + 4 >> 0] = 0;
     } else {
      $layer_index$03$lcssa$i$i = 3;
      label = 6;
     } else {
      $layer_index$03$lcssa$i$i = 2;
      label = 6;
     } else {
      $layer_index$03$lcssa$i$i = 1;
      label = 6;
     } else {
      $layer_index$03$lcssa$i$i = 0;
      label = 6;
     }
     if ((label | 0) == 6) {
      label = 0;
      $39 = $this + 66932 + ($page_index$04$i$i << 3) | 0;
      $40 = $this + 65908 + ($layer_index$03$lcssa$i$i << 8) + ($page_index$04$i$i << 3) | 0;
      HEAP32[$39 >> 2] = HEAP32[$40 >> 2];
      HEAP8[$39 + 4 >> 0] = HEAP8[$40 + 4 >> 0] | 0;
     }
     $43 = $page_index$04$i$i + 1 | 0;
     if (($43 | 0) == 32) break L3;
     $35 = HEAP32[$this + 65908 + ($43 << 3) >> 2] | 0;
     $page_index$04$i$i = $43;
    }
   } while (0);
   if ($7 & 4 | 0) {
    HEAP32[$this + 66036 >> 2] = $this + 69476;
    HEAP8[$this + 66040 >> 0] = 1;
    HEAP32[$this + 66044 >> 2] = $this + 71524;
    HEAP8[$this + 66048 >> 0] = 1;
    HEAP32[$this + 66052 >> 2] = $this + 73572;
    HEAP8[$this + 66056 >> 0] = 1;
    HEAP32[$this + 66060 >> 2] = $this + 75620;
    HEAP8[$this + 66064 >> 0] = 1;
    HEAP32[$this + 66068 >> 2] = $this + 77668;
    HEAP8[$this + 66072 >> 0] = 1;
    HEAP32[$this + 66076 >> 2] = $this + 79716;
    HEAP8[$this + 66080 >> 0] = 1;
    HEAP32[$this + 66084 >> 2] = $this + 81764;
    HEAP8[$this + 66088 >> 0] = 1;
    HEAP32[$this + 66092 >> 2] = $this + 83812;
    HEAP8[$this + 66096 >> 0] = 1;
    $76 = $this + 67188 | 0;
    $page_index$04$i$i3 = 0;
    do {
     if (!(HEAP32[$this + 65908 + ($page_index$04$i$i3 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66164 + ($page_index$04$i$i3 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66420 + ($page_index$04$i$i3 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66676 + ($page_index$04$i$i3 << 3) >> 2] | 0)) {
      HEAP32[$this + 66932 + ($page_index$04$i$i3 << 3) >> 2] = $76;
      HEAP8[$this + 66932 + ($page_index$04$i$i3 << 3) + 4 >> 0] = 0;
     } else {
      $layer_index$03$lcssa$i$i5 = 3;
      label = 16;
     } else {
      $layer_index$03$lcssa$i$i5 = 2;
      label = 16;
     } else {
      $layer_index$03$lcssa$i$i5 = 1;
      label = 16;
     } else {
      $layer_index$03$lcssa$i$i5 = 0;
      label = 16;
     }
     if ((label | 0) == 16) {
      label = 0;
      $83 = $this + 66932 + ($page_index$04$i$i3 << 3) | 0;
      $84 = $this + 65908 + ($layer_index$03$lcssa$i$i5 << 8) + ($page_index$04$i$i3 << 3) | 0;
      HEAP32[$83 >> 2] = HEAP32[$84 >> 2];
      HEAP8[$83 + 4 >> 0] = HEAP8[$84 + 4 >> 0] | 0;
     }
     $page_index$04$i$i3 = $page_index$04$i$i3 + 1 | 0;
    } while (($page_index$04$i$i3 | 0) != 32);
   }
   if (!(($7 & 128 | 0) == 0 | (HEAP32[$5 >> 2] | 0) != 2)) {
    HEAP32[$this + 66100 >> 2] = 84336;
    HEAP8[$this + 66104 >> 0] = 0;
    HEAP32[$this + 66108 >> 2] = 86384;
    HEAP8[$this + 66112 >> 0] = 0;
    HEAP32[$this + 66116 >> 2] = 88432;
    HEAP8[$this + 66120 >> 0] = 0;
    HEAP32[$this + 66124 >> 2] = 90480;
    HEAP8[$this + 66128 >> 0] = 0;
    $106 = $this + 67188 | 0;
    $page_index$04$i$i59 = 0;
    do {
     if (!(HEAP32[$this + 65908 + ($page_index$04$i$i59 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66164 + ($page_index$04$i$i59 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66420 + ($page_index$04$i$i59 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66676 + ($page_index$04$i$i59 << 3) >> 2] | 0)) {
      HEAP32[$this + 66932 + ($page_index$04$i$i59 << 3) >> 2] = $106;
      HEAP8[$this + 66932 + ($page_index$04$i$i59 << 3) + 4 >> 0] = 0;
     } else {
      $layer_index$03$lcssa$i$i61 = 3;
      label = 25;
     } else {
      $layer_index$03$lcssa$i$i61 = 2;
      label = 25;
     } else {
      $layer_index$03$lcssa$i$i61 = 1;
      label = 25;
     } else {
      $layer_index$03$lcssa$i$i61 = 0;
      label = 25;
     }
     if ((label | 0) == 25) {
      label = 0;
      $113 = $this + 66932 + ($page_index$04$i$i59 << 3) | 0;
      $114 = $this + 65908 + ($layer_index$03$lcssa$i$i61 << 8) + ($page_index$04$i$i59 << 3) | 0;
      HEAP32[$113 >> 2] = HEAP32[$114 >> 2];
      HEAP8[$113 + 4 >> 0] = HEAP8[$114 + 4 >> 0] | 0;
     }
     $page_index$04$i$i59 = $page_index$04$i$i59 + 1 | 0;
    } while (($page_index$04$i$i59 | 0) != 32);
   }
   if (!($7 & 1)) {
    $375 = $this + 462872 | 0;
    __ZN4yakc8kc85_exp22update_memory_mappingsERNS_6memoryE($375, $0);
    return;
   }
   __ZN4yakc6memory3mapEitjPhb($0, 0, -8192, HEAP32[$this + 725540 >> 2] | 0, HEAP32[$this + 725536 >> 2] | 0, 0);
   $375 = $this + 462872 | 0;
   __ZN4yakc8kc85_exp22update_memory_mappingsERNS_6memoryE($375, $0);
   return;
  }
 case 4:
  {
   $130 = $2 & 255;
   L48 : do if ($130 & 2 | 0) {
    HEAP32[$this + 65908 >> 2] = $this;
    HEAP8[$this + 65912 >> 0] = 1;
    HEAP32[$this + 65916 >> 2] = $this + 2048;
    HEAP8[$this + 65920 >> 0] = 1;
    HEAP32[$this + 65924 >> 2] = $this + 4096;
    HEAP8[$this + 65928 >> 0] = 1;
    HEAP32[$this + 65932 >> 2] = $this + 6144;
    HEAP8[$this + 65936 >> 0] = 1;
    HEAP32[$this + 65940 >> 2] = $this + 8192;
    HEAP8[$this + 65944 >> 0] = 1;
    HEAP32[$this + 65948 >> 2] = $this + 10240;
    HEAP8[$this + 65952 >> 0] = 1;
    HEAP32[$this + 65956 >> 2] = $this + 12288;
    HEAP8[$this + 65960 >> 0] = 1;
    HEAP32[$this + 65964 >> 2] = $this + 14336;
    HEAP8[$this + 65968 >> 0] = 1;
    $156 = $this + 67188 | 0;
    $158 = $this;
    $page_index$04$i$i51 = 0;
    while (1) {
     if (!$158) if (!(HEAP32[$this + 66164 + ($page_index$04$i$i51 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66420 + ($page_index$04$i$i51 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66676 + ($page_index$04$i$i51 << 3) >> 2] | 0)) {
      HEAP32[$this + 66932 + ($page_index$04$i$i51 << 3) >> 2] = $156;
      HEAP8[$this + 66932 + ($page_index$04$i$i51 << 3) + 4 >> 0] = 0;
     } else {
      $layer_index$03$lcssa$i$i53 = 3;
      label = 36;
     } else {
      $layer_index$03$lcssa$i$i53 = 2;
      label = 36;
     } else {
      $layer_index$03$lcssa$i$i53 = 1;
      label = 36;
     } else {
      $layer_index$03$lcssa$i$i53 = 0;
      label = 36;
     }
     if ((label | 0) == 36) {
      label = 0;
      $162 = $this + 66932 + ($page_index$04$i$i51 << 3) | 0;
      $163 = $this + 65908 + ($layer_index$03$lcssa$i$i53 << 8) + ($page_index$04$i$i51 << 3) | 0;
      HEAP32[$162 >> 2] = HEAP32[$163 >> 2];
      HEAP8[$162 + 4 >> 0] = HEAP8[$163 + 4 >> 0] | 0;
     }
     $166 = $page_index$04$i$i51 + 1 | 0;
     if (($166 | 0) == 32) break L48;
     $158 = HEAP32[$this + 65908 + ($166 << 3) >> 2] | 0;
     $page_index$04$i$i51 = $166;
    }
   } while (0);
   $173 = $this + 725461 | 0;
   if (HEAP8[$173 >> 0] & 1) {
    HEAP32[$this + 65972 >> 2] = $this + 16384;
    HEAP8[$this + 65976 >> 0] = 1;
    HEAP32[$this + 65980 >> 2] = $this + 18432;
    HEAP8[$this + 65984 >> 0] = 1;
    HEAP32[$this + 65988 >> 2] = $this + 20480;
    HEAP8[$this + 65992 >> 0] = 1;
    HEAP32[$this + 65996 >> 2] = $this + 22528;
    HEAP8[$this + 66e3 >> 0] = 1;
    HEAP32[$this + 66004 >> 2] = $this + 24576;
    HEAP8[$this + 66008 >> 0] = 1;
    HEAP32[$this + 66012 >> 2] = $this + 26624;
    HEAP8[$this + 66016 >> 0] = 1;
    HEAP32[$this + 66020 >> 2] = $this + 28672;
    HEAP8[$this + 66024 >> 0] = 1;
    HEAP32[$this + 66028 >> 2] = $this + 30720;
    HEAP8[$this + 66032 >> 0] = 1;
    $201 = $this + 67188 | 0;
    $page_index$04$i$i43 = 0;
    do {
     if (!(HEAP32[$this + 65908 + ($page_index$04$i$i43 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66164 + ($page_index$04$i$i43 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66420 + ($page_index$04$i$i43 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66676 + ($page_index$04$i$i43 << 3) >> 2] | 0)) {
      HEAP32[$this + 66932 + ($page_index$04$i$i43 << 3) >> 2] = $201;
      HEAP8[$this + 66932 + ($page_index$04$i$i43 << 3) + 4 >> 0] = 0;
     } else {
      $layer_index$03$lcssa$i$i45 = 3;
      label = 46;
     } else {
      $layer_index$03$lcssa$i$i45 = 2;
      label = 46;
     } else {
      $layer_index$03$lcssa$i$i45 = 1;
      label = 46;
     } else {
      $layer_index$03$lcssa$i$i45 = 0;
      label = 46;
     }
     if ((label | 0) == 46) {
      label = 0;
      $208 = $this + 66932 + ($page_index$04$i$i43 << 3) | 0;
      $209 = $this + 65908 + ($layer_index$03$lcssa$i$i45 << 8) + ($page_index$04$i$i43 << 3) | 0;
      HEAP32[$208 >> 2] = HEAP32[$209 >> 2];
      HEAP8[$208 + 4 >> 0] = HEAP8[$209 + 4 >> 0] | 0;
     }
     $page_index$04$i$i43 = $page_index$04$i$i43 + 1 | 0;
    } while (($page_index$04$i$i43 | 0) != 32);
   }
   if ($4 & 32) {
    $227 = HEAP8[$this + 725460 >> 0] & 16 ? $this + 49152 | 0 : $this + 32768 | 0;
    HEAP32[$this + 66036 >> 2] = $227;
    HEAP8[$this + 66040 >> 0] = 1;
    HEAP32[$this + 66044 >> 2] = $227 + 2048;
    HEAP8[$this + 66048 >> 0] = 1;
    HEAP32[$this + 66052 >> 2] = $227 + 4096;
    HEAP8[$this + 66056 >> 0] = 1;
    HEAP32[$this + 66060 >> 2] = $227 + 6144;
    HEAP8[$this + 66064 >> 0] = 1;
    HEAP32[$this + 66068 >> 2] = $227 + 8192;
    HEAP8[$this + 66072 >> 0] = 1;
    HEAP32[$this + 66076 >> 2] = $227 + 10240;
    HEAP8[$this + 66080 >> 0] = 1;
    HEAP32[$this + 66084 >> 2] = $227 + 12288;
    HEAP8[$this + 66088 >> 0] = 1;
    HEAP32[$this + 66092 >> 2] = $227 + 14336;
    HEAP8[$this + 66096 >> 0] = 1;
    $251 = $this + 67188 | 0;
    $page_index$04$i$i35 = 0;
    do {
     if (!(HEAP32[$this + 65908 + ($page_index$04$i$i35 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66164 + ($page_index$04$i$i35 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66420 + ($page_index$04$i$i35 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66676 + ($page_index$04$i$i35 << 3) >> 2] | 0)) {
      HEAP32[$this + 66932 + ($page_index$04$i$i35 << 3) >> 2] = $251;
      HEAP8[$this + 66932 + ($page_index$04$i$i35 << 3) + 4 >> 0] = 0;
     } else {
      $layer_index$03$lcssa$i$i37 = 3;
      label = 55;
     } else {
      $layer_index$03$lcssa$i$i37 = 2;
      label = 55;
     } else {
      $layer_index$03$lcssa$i$i37 = 1;
      label = 55;
     } else {
      $layer_index$03$lcssa$i$i37 = 0;
      label = 55;
     }
     if ((label | 0) == 55) {
      label = 0;
      $258 = $this + 66932 + ($page_index$04$i$i35 << 3) | 0;
      $259 = $this + 65908 + ($layer_index$03$lcssa$i$i37 << 8) + ($page_index$04$i$i35 << 3) | 0;
      HEAP32[$258 >> 2] = HEAP32[$259 >> 2];
      HEAP8[$258 + 4 >> 0] = HEAP8[$259 + 4 >> 0] | 0;
     }
     $page_index$04$i$i35 = $page_index$04$i$i35 + 1 | 0;
    } while (($page_index$04$i$i35 | 0) != 32);
   }
   if ($130 & 4 | 0) {
    $275 = (HEAPU8[$this + 725460 >> 0] | 0) >>> 1 & 3;
    HEAP32[$this + 66036 >> 2] = $this + 69476 + ($275 << 14);
    HEAP8[$this + 66040 >> 0] = 1;
    HEAP32[$this + 66044 >> 2] = $this + 69476 + ($275 << 14) + 2048;
    HEAP8[$this + 66048 >> 0] = 1;
    HEAP32[$this + 66052 >> 2] = $this + 69476 + ($275 << 14) + 4096;
    HEAP8[$this + 66056 >> 0] = 1;
    HEAP32[$this + 66060 >> 2] = $this + 69476 + ($275 << 14) + 6144;
    HEAP8[$this + 66064 >> 0] = 1;
    HEAP32[$this + 66068 >> 2] = $this + 69476 + ($275 << 14) + 8192;
    HEAP8[$this + 66072 >> 0] = 1;
    $291 = $this + 67188 | 0;
    $page_index$04$i$i27 = 0;
    do {
     if (!(HEAP32[$this + 65908 + ($page_index$04$i$i27 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66164 + ($page_index$04$i$i27 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66420 + ($page_index$04$i$i27 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66676 + ($page_index$04$i$i27 << 3) >> 2] | 0)) {
      HEAP32[$this + 66932 + ($page_index$04$i$i27 << 3) >> 2] = $291;
      HEAP8[$this + 66932 + ($page_index$04$i$i27 << 3) + 4 >> 0] = 0;
     } else {
      $layer_index$03$lcssa$i$i29 = 3;
      label = 64;
     } else {
      $layer_index$03$lcssa$i$i29 = 2;
      label = 64;
     } else {
      $layer_index$03$lcssa$i$i29 = 1;
      label = 64;
     } else {
      $layer_index$03$lcssa$i$i29 = 0;
      label = 64;
     }
     if ((label | 0) == 64) {
      label = 0;
      $298 = $this + 66932 + ($page_index$04$i$i27 << 3) | 0;
      $299 = $this + 65908 + ($layer_index$03$lcssa$i$i29 << 8) + ($page_index$04$i$i27 << 3) | 0;
      HEAP32[$298 >> 2] = HEAP32[$299 >> 2];
      HEAP8[$298 + 4 >> 0] = HEAP8[$299 + 4 >> 0] | 0;
     }
     $page_index$04$i$i27 = $page_index$04$i$i27 + 1 | 0;
    } while (($page_index$04$i$i27 | 0) != 32);
    HEAP32[$this + 66076 >> 2] = $this + 79716;
    HEAP8[$this + 66080 >> 0] = 1;
    HEAP32[$this + 66084 >> 2] = $this + 81764;
    HEAP8[$this + 66088 >> 0] = 1;
    HEAP32[$this + 66092 >> 2] = $this + 83812;
    HEAP8[$this + 66096 >> 0] = 1;
    $page_index$04$i$i19 = 0;
    do {
     if (!(HEAP32[$this + 65908 + ($page_index$04$i$i19 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66164 + ($page_index$04$i$i19 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66420 + ($page_index$04$i$i19 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66676 + ($page_index$04$i$i19 << 3) >> 2] | 0)) {
      HEAP32[$this + 66932 + ($page_index$04$i$i19 << 3) >> 2] = $291;
      HEAP8[$this + 66932 + ($page_index$04$i$i19 << 3) + 4 >> 0] = 0;
     } else {
      $layer_index$03$lcssa$i$i21 = 3;
      label = 72;
     } else {
      $layer_index$03$lcssa$i$i21 = 2;
      label = 72;
     } else {
      $layer_index$03$lcssa$i$i21 = 1;
      label = 72;
     } else {
      $layer_index$03$lcssa$i$i21 = 0;
      label = 72;
     }
     if ((label | 0) == 72) {
      label = 0;
      $324 = $this + 66932 + ($page_index$04$i$i19 << 3) | 0;
      $325 = $this + 65908 + ($layer_index$03$lcssa$i$i21 << 8) + ($page_index$04$i$i19 << 3) | 0;
      HEAP32[$324 >> 2] = HEAP32[$325 >> 2];
      HEAP8[$324 + 4 >> 0] = HEAP8[$325 + 4 >> 0] | 0;
     }
     $page_index$04$i$i19 = $page_index$04$i$i19 + 1 | 0;
    } while (($page_index$04$i$i19 | 0) != 32);
   }
   if ($130 & 128 | 0) {
    HEAP32[$this + 66100 >> 2] = 84336;
    HEAP8[$this + 66104 >> 0] = 0;
    HEAP32[$this + 66108 >> 2] = 86384;
    HEAP8[$this + 66112 >> 0] = 0;
    HEAP32[$this + 66116 >> 2] = 88432;
    HEAP8[$this + 66120 >> 0] = 0;
    HEAP32[$this + 66124 >> 2] = 90480;
    HEAP8[$this + 66128 >> 0] = 0;
    $345 = $this + 67188 | 0;
    $page_index$04$i$i11 = 0;
    do {
     if (!(HEAP32[$this + 65908 + ($page_index$04$i$i11 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66164 + ($page_index$04$i$i11 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66420 + ($page_index$04$i$i11 << 3) >> 2] | 0)) if (!(HEAP32[$this + 66676 + ($page_index$04$i$i11 << 3) >> 2] | 0)) {
      HEAP32[$this + 66932 + ($page_index$04$i$i11 << 3) >> 2] = $345;
      HEAP8[$this + 66932 + ($page_index$04$i$i11 << 3) + 4 >> 0] = 0;
     } else {
      $layer_index$03$lcssa$i$i13 = 3;
      label = 81;
     } else {
      $layer_index$03$lcssa$i$i13 = 2;
      label = 81;
     } else {
      $layer_index$03$lcssa$i$i13 = 1;
      label = 81;
     } else {
      $layer_index$03$lcssa$i$i13 = 0;
      label = 81;
     }
     if ((label | 0) == 81) {
      label = 0;
      $352 = $this + 66932 + ($page_index$04$i$i11 << 3) | 0;
      $353 = $this + 65908 + ($layer_index$03$lcssa$i$i13 << 8) + ($page_index$04$i$i11 << 3) | 0;
      HEAP32[$352 >> 2] = HEAP32[$353 >> 2];
      HEAP8[$352 + 4 >> 0] = HEAP8[$353 + 4 >> 0] | 0;
     }
     $page_index$04$i$i11 = $page_index$04$i$i11 + 1 | 0;
    } while (($page_index$04$i$i11 | 0) != 32);
   }
   if ((HEAP8[$173 >> 0] | 0) < 0) __ZN4yakc6memory3mapEitjPhb($0, 0, -16384, HEAP32[$this + 725532 >> 2] | 0, HEAP32[$this + 725528 >> 2] | 0, 0);
   if (!($130 & 1)) {
    $375 = $this + 462872 | 0;
    __ZN4yakc8kc85_exp22update_memory_mappingsERNS_6memoryE($375, $0);
    return;
   }
   __ZN4yakc6memory3mapEitjPhb($0, 0, -8192, HEAP32[$this + 725540 >> 2] | 0, HEAP32[$this + 725536 >> 2] | 0, 0);
   $375 = $this + 462872 | 0;
   __ZN4yakc8kc85_exp22update_memory_mappingsERNS_6memoryE($375, $0);
   return;
  }
 default:
  {
   $375 = $this + 462872 | 0;
   __ZN4yakc8kc85_exp22update_memory_mappingsERNS_6memoryE($375, $0);
   return;
  }
 }
}

function __ZN10ImDrawList11AddPolylineEPK6ImVec2ijbfb($this, $points, $points_count, $col, $closed, $thickness, $anti_aliased) {
 $this = $this | 0;
 $points = $points | 0;
 $points_count = $points_count | 0;
 $col = $col | 0;
 $closed = $closed | 0;
 $thickness = +$thickness;
 $anti_aliased = $anti_aliased | 0;
 var $$0$i = 0.0, $$0$i134 = 0.0, $$alloca_mul = 0, $$idx = 0, $$idx106$val = 0.0, $$idx107$val = 0.0, $$idx118$val = 0.0, $$idx119$val = 0.0, $$idx126$val = 0.0, $$idx127$val = 0.0, $$idx18 = 0, $$idx19 = 0, $$idx19$val = 0.0, $$idx20 = 0, $$idx20$val = 0.0, $$idx70$val = 0.0, $$idx71$val = 0.0, $$idx79 = 0, $$idx84$val = 0.0, $$idx85$val = 0.0, $$idx89 = 0, $$idx94$val = 0.0, $$idx95$val = 0.0, $$pre$phiZ2D = 0, $$promoted = 0, $$promoted214 = 0, $101 = 0, $105 = 0, $106 = 0, $107 = 0, $110 = 0, $118 = 0, $129 = 0, $134 = 0, $135 = 0, $136 = 0, $14 = 0, $142 = 0, $146 = 0, $149 = 0, $15 = 0, $151 = 0, $156 = 0, $157 = 0, $16 = 0, $163 = 0, $167 = 0, $17 = 0, $172 = 0, $177 = 0, $178 = 0, $184 = 0, $188 = 0, $193 = 0.0, $194 = 0.0, $198 = 0.0, $2 = 0, $20 = 0, $203 = 0.0, $209 = 0.0, $215 = 0.0, $218 = 0, $219 = 0, $220 = 0.0, $221 = 0.0, $226 = 0, $227 = 0.0, $228 = 0.0, $233 = 0, $238 = 0, $24 = 0, $242 = 0, $244 = 0.0, $245 = 0, $246 = 0, $248 = 0, $25 = 0, $250 = 0, $251 = 0, $256 = 0.0, $257 = 0.0, $26 = 0, $260 = 0.0, $262 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $270 = 0, $271 = 0, $276 = 0, $281 = 0, $286 = 0, $29 = 0, $291 = 0, $292 = 0, $293 = 0, $295 = 0, $298 = 0, $30 = 0.0, $302 = 0, $307 = 0, $31 = 0.0, $316 = 0, $324 = 0, $326 = 0, $331 = 0, $332 = 0, $333 = 0, $339 = 0, $34 = 0.0, $343 = 0, $348 = 0, $353 = 0, $354 = 0, $360 = 0, $364 = 0, $369 = 0, $374 = 0, $375 = 0, $381 = 0, $385 = 0, $390 = 0, $395 = 0, $396 = 0, $4 = 0, $402 = 0, $406 = 0, $416 = 0.0, $417 = 0, $418 = 0, $419 = 0, $422 = 0, $423 = 0.0, $424 = 0.0, $427 = 0.0, $433 = 0.0, $434 = 0.0, $436 = 0, $440 = 0, $444 = 0, $453 = 0, $457 = 0, $46 = 0, $466 = 0, $470 = 0, $479 = 0, $483 = 0, $486 = 0, $487 = 0, $488 = 0, $493 = 0, $51 = 0, $52 = 0, $57 = 0.0, $60 = 0.0, $63 = 0, $64 = 0, $69 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $78 = 0, $80 = 0, $81 = 0, $85 = 0.0, $86 = 0.0, $89 = 0.0, $91 = 0.0, $95 = 0, $96 = 0, $dm$sroa$0$0 = 0.0, $dm$sroa$10$0 = 0.0, $dm7$sroa$0$0 = 0.0, $dm7$sroa$8$0 = 0.0, $i$0207 = 0, $i1$0212 = 0, $i10$0202 = 0, $i11$0209 = 0, $i113$0201 = 0, $i14$0204 = 0, $idx1$0210 = 0, $idx13$0205 = 0, $points$idx114$val = 0.0, $points$idx115$val = 0.0, $points$idx130$val = 0.0, $points$idx131$val = 0.0, $points_count$ = 0, $scale$0 = 0.0, $scale9$0 = 0.0, sp = 0, $i113$0201$looptemp = 0, $i1$0212$looptemp = 0, $i14$0204$looptemp = 0, $i11$0209$looptemp = 0, $idx1$0210$looptemp = 0;
 sp = STACKTOP;
 if (($points_count | 0) < 2) {
  STACKTOP = sp;
  return;
 }
 $2 = 152756;
 $4 = HEAP32[$2 >> 2] | 0;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $14 = $points_count + -1 | 0;
 $points_count$ = $closed ? $points_count : $14;
 if (!((HEAPU8[152048] | 0) & ($anti_aliased & 1))) {
  __ZN10ImDrawList11PrimReserveEii($this, $points_count$ * 6 | 0, $points_count$ << 2);
  if (($points_count$ | 0) <= 0) {
   STACKTOP = sp;
   return;
  }
  $416 = $thickness * .5;
  $417 = $this + 44 | 0;
  $418 = $this + 40 | 0;
  $419 = $this + 48 | 0;
  $i113$0201 = 0;
  do {
   $i113$0201$looptemp = $i113$0201;
   $i113$0201 = $i113$0201 + 1 | 0;
   $422 = ($i113$0201 | 0) == ($points_count | 0) ? 0 : $i113$0201;
   $$idx = $points + ($422 << 3) | 0;
   $$idx18 = $points + ($422 << 3) + 4 | 0;
   $$idx19 = $points + ($i113$0201$looptemp << 3) | 0;
   $$idx19$val = +HEAPF32[$$idx19 >> 2];
   $$idx20 = $points + ($i113$0201$looptemp << 3) + 4 | 0;
   $$idx20$val = +HEAPF32[$$idx20 >> 2];
   $423 = +HEAPF32[$$idx >> 2] - $$idx19$val;
   $424 = +HEAPF32[$$idx18 >> 2] - $$idx20$val;
   $427 = $423 * $423 + $424 * $424;
   if ($427 > 0.0) $$0$i = 1.0 / +Math_sqrt(+$427); else $$0$i = 1.0;
   $433 = $416 * ($423 * $$0$i);
   $434 = $416 * ($424 * $$0$i);
   $436 = HEAP32[$417 >> 2] | 0;
   HEAPF32[$436 >> 2] = $$idx19$val + $434;
   HEAPF32[$436 + 4 >> 2] = $$idx20$val - $433;
   $440 = $436 + 8 | 0;
   HEAP32[$440 >> 2] = $4;
   HEAP32[$440 + 4 >> 2] = $7;
   $444 = HEAP32[$417 >> 2] | 0;
   HEAP32[$444 + 16 >> 2] = $col;
   HEAPF32[$444 + 20 >> 2] = $434 + +HEAPF32[$$idx >> 2];
   HEAPF32[$444 + 24 >> 2] = +HEAPF32[$$idx18 >> 2] - $433;
   $453 = $444 + 28 | 0;
   HEAP32[$453 >> 2] = $4;
   HEAP32[$453 + 4 >> 2] = $7;
   $457 = HEAP32[$417 >> 2] | 0;
   HEAP32[$457 + 36 >> 2] = $col;
   HEAPF32[$457 + 40 >> 2] = +HEAPF32[$$idx >> 2] - $434;
   HEAPF32[$457 + 44 >> 2] = $433 + +HEAPF32[$$idx18 >> 2];
   $466 = $457 + 48 | 0;
   HEAP32[$466 >> 2] = $4;
   HEAP32[$466 + 4 >> 2] = $7;
   $470 = HEAP32[$417 >> 2] | 0;
   HEAP32[$470 + 56 >> 2] = $col;
   HEAPF32[$470 + 60 >> 2] = +HEAPF32[$$idx19 >> 2] - $434;
   HEAPF32[$470 + 64 >> 2] = $433 + +HEAPF32[$$idx20 >> 2];
   $479 = $470 + 68 | 0;
   HEAP32[$479 >> 2] = $4;
   HEAP32[$479 + 4 >> 2] = $7;
   $483 = HEAP32[$417 >> 2] | 0;
   HEAP32[$483 + 76 >> 2] = $col;
   HEAP32[$417 >> 2] = $483 + 80;
   $486 = HEAP32[$418 >> 2] | 0;
   $487 = $486 & 65535;
   $488 = HEAP32[$419 >> 2] | 0;
   HEAP16[$488 >> 1] = $487;
   HEAP16[$488 + 2 >> 1] = $486 + 1;
   $493 = $486 + 2 & 65535;
   HEAP16[$488 + 4 >> 1] = $493;
   HEAP16[$488 + 6 >> 1] = $487;
   HEAP16[$488 + 8 >> 1] = $493;
   HEAP16[$488 + 10 >> 1] = $486 + 3;
   HEAP32[$419 >> 2] = $488 + 12;
   HEAP32[$418 >> 2] = $486 + 4;
  } while (($i113$0201 | 0) != ($points_count$ | 0));
  STACKTOP = sp;
  return;
 }
 $15 = $thickness > 1.0;
 $16 = $col & 16777215;
 $17 = Math_imul($15 ? 18 : 12, $points_count$) | 0;
 $20 = $15 ? $points_count << 2 : $points_count * 3 | 0;
 __ZN10ImDrawList11PrimReserveEii($this, $17, $20);
 $$alloca_mul = Math_imul($points_count << 3, $15 ? 5 : 3) | 0;
 $24 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 $25 = $24 + ($points_count << 3) | 0;
 $26 = ($points_count$ | 0) > 0;
 if ($26) {
  $i1$0212 = 0;
  do {
   $i1$0212$looptemp = $i1$0212;
   $i1$0212 = $i1$0212 + 1 | 0;
   $29 = ($i1$0212 | 0) == ($points_count | 0) ? 0 : $i1$0212;
   $30 = +HEAPF32[$points + ($29 << 3) >> 2] - +HEAPF32[$points + ($i1$0212$looptemp << 3) >> 2];
   $31 = +HEAPF32[$points + ($29 << 3) + 4 >> 2] - +HEAPF32[$points + ($i1$0212$looptemp << 3) + 4 >> 2];
   $34 = $30 * $30 + $31 * $31;
   if ($34 > 0.0) $$0$i134 = 1.0 / +Math_sqrt(+$34); else $$0$i134 = 1.0;
   HEAPF32[$24 + ($i1$0212$looptemp << 3) >> 2] = $31 * $$0$i134;
   HEAPF32[$24 + ($i1$0212$looptemp << 3) + 4 >> 2] = -($30 * $$0$i134);
  } while (($i1$0212 | 0) != ($points_count$ | 0));
 }
 if (!$closed) {
  $46 = $24 + ($points_count + -2 << 3) | 0;
  $51 = HEAP32[$46 + 4 >> 2] | 0;
  $52 = $24 + ($14 << 3) | 0;
  HEAP32[$52 >> 2] = HEAP32[$46 >> 2];
  HEAP32[$52 + 4 >> 2] = $51;
 }
 if ($15) {
  $193 = ($thickness + -1.0) * .5;
  if (!$closed) {
   $194 = $193 + 1.0;
   $$idx79 = $24 + 4 | 0;
   $points$idx114$val = +HEAPF32[$points >> 2];
   $points$idx115$val = +HEAPF32[$points + 4 >> 2];
   $198 = $194 * +HEAPF32[$$idx79 >> 2] + $points$idx115$val;
   HEAPF32[$25 >> 2] = $194 * +HEAPF32[$24 >> 2] + $points$idx114$val;
   HEAPF32[$24 + ($points_count << 3) + 4 >> 2] = $198;
   $203 = $193 * +HEAPF32[$$idx79 >> 2] + $points$idx115$val;
   HEAPF32[$25 + 8 >> 2] = $193 * +HEAPF32[$24 >> 2] + $points$idx114$val;
   HEAPF32[$25 + 12 >> 2] = $203;
   $209 = $points$idx115$val - $193 * +HEAPF32[$$idx79 >> 2];
   HEAPF32[$25 + 16 >> 2] = $points$idx114$val - $193 * +HEAPF32[$24 >> 2];
   HEAPF32[$25 + 20 >> 2] = $209;
   $215 = $points$idx115$val - $194 * +HEAPF32[$$idx79 >> 2];
   HEAPF32[$25 + 24 >> 2] = $points$idx114$val - $194 * +HEAPF32[$24 >> 2];
   HEAPF32[$25 + 28 >> 2] = $215;
   $218 = $14 << 2;
   $219 = $25 + ($218 << 3) | 0;
   $$idx70$val = +HEAPF32[$24 + ($14 << 3) >> 2];
   $$idx71$val = +HEAPF32[$24 + ($14 << 3) + 4 >> 2];
   $220 = $194 * $$idx70$val;
   $221 = $194 * $$idx71$val;
   $$idx106$val = +HEAPF32[$points + ($14 << 3) >> 2];
   $$idx107$val = +HEAPF32[$points + ($14 << 3) + 4 >> 2];
   HEAPF32[$219 >> 2] = $220 + $$idx106$val;
   HEAPF32[$219 + 4 >> 2] = $221 + $$idx107$val;
   $226 = $25 + (($218 | 1) << 3) | 0;
   $227 = $193 * $$idx70$val;
   $228 = $193 * $$idx71$val;
   HEAPF32[$226 >> 2] = $227 + $$idx106$val;
   HEAPF32[$226 + 4 >> 2] = $228 + $$idx107$val;
   $233 = $25 + (($218 | 2) << 3) | 0;
   HEAPF32[$233 >> 2] = $$idx106$val - $227;
   HEAPF32[$233 + 4 >> 2] = $$idx107$val - $228;
   $238 = $25 + (($218 | 3) << 3) | 0;
   HEAPF32[$238 >> 2] = $$idx106$val - $220;
   HEAPF32[$238 + 4 >> 2] = $$idx107$val - $221;
  }
  $242 = $this + 40 | 0;
  if ($26) {
   $244 = $193 + 1.0;
   $245 = $this + 48 | 0;
   $$promoted = HEAP32[$245 >> 2] | 0;
   $246 = $points_count$ * 18 | 0;
   $293 = $$promoted;
   $i14$0204 = 0;
   $idx13$0205 = HEAP32[$242 >> 2] | 0;
   while (1) {
    $i14$0204$looptemp = $i14$0204;
    $i14$0204 = $i14$0204 + 1 | 0;
    $250 = ($i14$0204 | 0) == ($points_count | 0);
    $251 = $250 ? 0 : $i14$0204;
    if ($250) $291 = HEAP32[$242 >> 2] | 0; else $291 = $idx13$0205 + 4 | 0;
    $256 = (+HEAPF32[$24 + ($i14$0204$looptemp << 3) >> 2] + +HEAPF32[$24 + ($251 << 3) >> 2]) * .5;
    $257 = (+HEAPF32[$24 + ($i14$0204$looptemp << 3) + 4 >> 2] + +HEAPF32[$24 + ($251 << 3) + 4 >> 2]) * .5;
    $260 = $256 * $256 + $257 * $257;
    if ($260 > 9.999999974752427e-07) {
     $262 = 1.0 / $260;
     $scale9$0 = $262 > 100.0 ? 100.0 : $262;
     $dm7$sroa$0$0 = $256 * $scale9$0;
     $dm7$sroa$8$0 = $257 * $scale9$0;
    } else {
     $dm7$sroa$0$0 = $256;
     $dm7$sroa$8$0 = $257;
    }
    $266 = $244 * $dm7$sroa$0$0;
    $267 = $244 * $dm7$sroa$8$0;
    $268 = $193 * $dm7$sroa$0$0;
    $269 = $193 * $dm7$sroa$8$0;
    $270 = $251 << 2;
    $271 = $25 + ($270 << 3) | 0;
    $$idx94$val = +HEAPF32[$points + ($251 << 3) >> 2];
    $$idx95$val = +HEAPF32[$points + ($251 << 3) + 4 >> 2];
    HEAPF32[$271 >> 2] = $266 + $$idx94$val;
    HEAPF32[$271 + 4 >> 2] = $267 + $$idx95$val;
    $276 = $25 + (($270 | 1) << 3) | 0;
    HEAPF32[$276 >> 2] = $268 + $$idx94$val;
    HEAPF32[$276 + 4 >> 2] = $269 + $$idx95$val;
    $281 = $25 + (($270 | 2) << 3) | 0;
    HEAPF32[$281 >> 2] = $$idx94$val - $268;
    HEAPF32[$281 + 4 >> 2] = $$idx95$val - $269;
    $286 = $25 + (($270 | 3) << 3) | 0;
    HEAPF32[$286 >> 2] = $$idx94$val - $266;
    HEAPF32[$286 + 4 >> 2] = $$idx95$val - $267;
    $292 = $291 + 1 & 65535;
    HEAP16[$293 >> 1] = $292;
    $295 = $idx13$0205 + 1 & 65535;
    HEAP16[$293 + 2 >> 1] = $295;
    $298 = $idx13$0205 + 2 & 65535;
    HEAP16[$293 + 4 >> 1] = $298;
    HEAP16[$293 + 6 >> 1] = $298;
    $302 = $291 + 2 & 65535;
    HEAP16[$293 + 8 >> 1] = $302;
    HEAP16[$293 + 10 >> 1] = $292;
    HEAP16[$293 + 12 >> 1] = $292;
    HEAP16[$293 + 14 >> 1] = $295;
    $307 = $idx13$0205 & 65535;
    HEAP16[$293 + 16 >> 1] = $307;
    HEAP16[$293 + 18 >> 1] = $307;
    HEAP16[$293 + 20 >> 1] = $291;
    HEAP16[$293 + 22 >> 1] = $292;
    HEAP16[$293 + 24 >> 1] = $302;
    HEAP16[$293 + 26 >> 1] = $298;
    $316 = $idx13$0205 + 3 & 65535;
    HEAP16[$293 + 28 >> 1] = $316;
    HEAP16[$293 + 30 >> 1] = $316;
    HEAP16[$293 + 32 >> 1] = $291 + 3;
    HEAP16[$293 + 34 >> 1] = $302;
    if (($i14$0204 | 0) == ($points_count$ | 0)) break; else {
     $293 = $293 + 36 | 0;
     $idx13$0205 = $291;
    }
   }
   HEAP32[$245 >> 2] = $$promoted + ($246 << 1);
  }
  if (($points_count | 0) > 0) {
   $248 = $this + 44 | 0;
   $333 = HEAP32[$248 >> 2] | 0;
   $i10$0202 = 0;
   do {
    $324 = $i10$0202 << 2;
    $326 = $25 + ($324 << 3) | 0;
    $331 = HEAP32[$326 + 4 >> 2] | 0;
    $332 = $333;
    HEAP32[$332 >> 2] = HEAP32[$326 >> 2];
    HEAP32[$332 + 4 >> 2] = $331;
    $339 = (HEAP32[$248 >> 2] | 0) + 8 | 0;
    HEAP32[$339 >> 2] = $4;
    HEAP32[$339 + 4 >> 2] = $7;
    $343 = HEAP32[$248 >> 2] | 0;
    HEAP32[$343 + 16 >> 2] = $16;
    $348 = $25 + (($324 | 1) << 3) | 0;
    $353 = HEAP32[$348 + 4 >> 2] | 0;
    $354 = $343 + 20 | 0;
    HEAP32[$354 >> 2] = HEAP32[$348 >> 2];
    HEAP32[$354 + 4 >> 2] = $353;
    $360 = (HEAP32[$248 >> 2] | 0) + 28 | 0;
    HEAP32[$360 >> 2] = $4;
    HEAP32[$360 + 4 >> 2] = $7;
    $364 = HEAP32[$248 >> 2] | 0;
    HEAP32[$364 + 36 >> 2] = $col;
    $369 = $25 + (($324 | 2) << 3) | 0;
    $374 = HEAP32[$369 + 4 >> 2] | 0;
    $375 = $364 + 40 | 0;
    HEAP32[$375 >> 2] = HEAP32[$369 >> 2];
    HEAP32[$375 + 4 >> 2] = $374;
    $381 = (HEAP32[$248 >> 2] | 0) + 48 | 0;
    HEAP32[$381 >> 2] = $4;
    HEAP32[$381 + 4 >> 2] = $7;
    $385 = HEAP32[$248 >> 2] | 0;
    HEAP32[$385 + 56 >> 2] = $col;
    $390 = $25 + (($324 | 3) << 3) | 0;
    $395 = HEAP32[$390 + 4 >> 2] | 0;
    $396 = $385 + 60 | 0;
    HEAP32[$396 >> 2] = HEAP32[$390 >> 2];
    HEAP32[$396 + 4 >> 2] = $395;
    $402 = (HEAP32[$248 >> 2] | 0) + 68 | 0;
    HEAP32[$402 >> 2] = $4;
    HEAP32[$402 + 4 >> 2] = $7;
    $406 = HEAP32[$248 >> 2] | 0;
    HEAP32[$406 + 76 >> 2] = $16;
    $333 = $406 + 80 | 0;
    HEAP32[$248 >> 2] = $333;
    $i10$0202 = $i10$0202 + 1 | 0;
   } while (($i10$0202 | 0) != ($points_count | 0));
   $$pre$phiZ2D = $242;
  } else $$pre$phiZ2D = $242;
 } else {
  if (!$closed) {
   $$idx89 = $24 + 4 | 0;
   $points$idx130$val = +HEAPF32[$points >> 2];
   $points$idx131$val = +HEAPF32[$points + 4 >> 2];
   $57 = +HEAPF32[$$idx89 >> 2] + $points$idx131$val;
   HEAPF32[$25 >> 2] = +HEAPF32[$24 >> 2] + $points$idx130$val;
   HEAPF32[$24 + ($points_count << 3) + 4 >> 2] = $57;
   $60 = $points$idx131$val - +HEAPF32[$$idx89 >> 2];
   HEAPF32[$25 + 8 >> 2] = $points$idx130$val - +HEAPF32[$24 >> 2];
   HEAPF32[$25 + 12 >> 2] = $60;
   $63 = $14 << 1;
   $64 = $25 + ($63 << 3) | 0;
   $$idx84$val = +HEAPF32[$24 + ($14 << 3) >> 2];
   $$idx85$val = +HEAPF32[$24 + ($14 << 3) + 4 >> 2];
   $$idx126$val = +HEAPF32[$points + ($14 << 3) >> 2];
   $$idx127$val = +HEAPF32[$points + ($14 << 3) + 4 >> 2];
   HEAPF32[$64 >> 2] = $$idx84$val + $$idx126$val;
   HEAPF32[$64 + 4 >> 2] = $$idx85$val + $$idx127$val;
   $69 = $25 + (($63 | 1) << 3) | 0;
   HEAPF32[$69 >> 2] = $$idx126$val - $$idx84$val;
   HEAPF32[$69 + 4 >> 2] = $$idx127$val - $$idx85$val;
  }
  $73 = $this + 40 | 0;
  if ($26) {
   $74 = HEAP32[$73 >> 2] | 0;
   $75 = $this + 48 | 0;
   $$promoted214 = HEAP32[$75 >> 2] | 0;
   $76 = $points_count$ * 12 | 0;
   $106 = $$promoted214;
   $i11$0209 = 0;
   $idx1$0210 = $74;
   while (1) {
    $i11$0209$looptemp = $i11$0209;
    $i11$0209 = $i11$0209 + 1 | 0;
    $80 = ($i11$0209 | 0) == ($points_count | 0);
    $81 = $80 ? 0 : $i11$0209;
    $idx1$0210$looptemp = $idx1$0210;
    $idx1$0210 = $80 ? $74 : $idx1$0210 + 3 | 0;
    $85 = (+HEAPF32[$24 + ($i11$0209$looptemp << 3) >> 2] + +HEAPF32[$24 + ($81 << 3) >> 2]) * .5;
    $86 = (+HEAPF32[$24 + ($i11$0209$looptemp << 3) + 4 >> 2] + +HEAPF32[$24 + ($81 << 3) + 4 >> 2]) * .5;
    $89 = $85 * $85 + $86 * $86;
    if ($89 > 9.999999974752427e-07) {
     $91 = 1.0 / $89;
     $scale$0 = $91 > 100.0 ? 100.0 : $91;
     $dm$sroa$0$0 = $85 * $scale$0;
     $dm$sroa$10$0 = $86 * $scale$0;
    } else {
     $dm$sroa$0$0 = $85;
     $dm$sroa$10$0 = $86;
    }
    $95 = $81 << 1;
    $96 = $25 + ($95 << 3) | 0;
    $$idx118$val = +HEAPF32[$points + ($81 << 3) >> 2];
    $$idx119$val = +HEAPF32[$points + ($81 << 3) + 4 >> 2];
    HEAPF32[$96 >> 2] = $dm$sroa$0$0 + $$idx118$val;
    HEAPF32[$96 + 4 >> 2] = $dm$sroa$10$0 + $$idx119$val;
    $101 = $25 + (($95 | 1) << 3) | 0;
    HEAPF32[$101 >> 2] = $$idx118$val - $dm$sroa$0$0;
    HEAPF32[$101 + 4 >> 2] = $$idx119$val - $dm$sroa$10$0;
    $105 = $idx1$0210 & 65535;
    HEAP16[$106 >> 1] = $105;
    $107 = $idx1$0210$looptemp & 65535;
    HEAP16[$106 + 2 >> 1] = $107;
    $110 = $idx1$0210$looptemp + 2 & 65535;
    HEAP16[$106 + 4 >> 1] = $110;
    HEAP16[$106 + 6 >> 1] = $110;
    HEAP16[$106 + 8 >> 1] = $idx1$0210 + 2;
    HEAP16[$106 + 10 >> 1] = $105;
    $118 = $idx1$0210 + 1 & 65535;
    HEAP16[$106 + 12 >> 1] = $118;
    HEAP16[$106 + 14 >> 1] = $idx1$0210$looptemp + 1;
    HEAP16[$106 + 16 >> 1] = $107;
    HEAP16[$106 + 18 >> 1] = $107;
    HEAP16[$106 + 20 >> 1] = $105;
    HEAP16[$106 + 22 >> 1] = $118;
    if (($i11$0209 | 0) == ($points_count$ | 0)) break; else $106 = $106 + 24 | 0;
   }
   HEAP32[$75 >> 2] = $$promoted214 + ($76 << 1);
  }
  if (($points_count | 0) > 0) {
   $78 = $this + 44 | 0;
   $136 = HEAP32[$78 >> 2] | 0;
   $i$0207 = 0;
   do {
    $129 = $points + ($i$0207 << 3) | 0;
    $134 = HEAP32[$129 + 4 >> 2] | 0;
    $135 = $136;
    HEAP32[$135 >> 2] = HEAP32[$129 >> 2];
    HEAP32[$135 + 4 >> 2] = $134;
    $142 = (HEAP32[$78 >> 2] | 0) + 8 | 0;
    HEAP32[$142 >> 2] = $4;
    HEAP32[$142 + 4 >> 2] = $7;
    $146 = HEAP32[$78 >> 2] | 0;
    HEAP32[$146 + 16 >> 2] = $col;
    $149 = $i$0207 << 1;
    $151 = $25 + ($149 << 3) | 0;
    $156 = HEAP32[$151 + 4 >> 2] | 0;
    $157 = $146 + 20 | 0;
    HEAP32[$157 >> 2] = HEAP32[$151 >> 2];
    HEAP32[$157 + 4 >> 2] = $156;
    $163 = (HEAP32[$78 >> 2] | 0) + 28 | 0;
    HEAP32[$163 >> 2] = $4;
    HEAP32[$163 + 4 >> 2] = $7;
    $167 = HEAP32[$78 >> 2] | 0;
    HEAP32[$167 + 36 >> 2] = $16;
    $172 = $25 + (($149 | 1) << 3) | 0;
    $177 = HEAP32[$172 + 4 >> 2] | 0;
    $178 = $167 + 40 | 0;
    HEAP32[$178 >> 2] = HEAP32[$172 >> 2];
    HEAP32[$178 + 4 >> 2] = $177;
    $184 = (HEAP32[$78 >> 2] | 0) + 48 | 0;
    HEAP32[$184 >> 2] = $4;
    HEAP32[$184 + 4 >> 2] = $7;
    $188 = HEAP32[$78 >> 2] | 0;
    HEAP32[$188 + 56 >> 2] = $16;
    $136 = $188 + 60 | 0;
    HEAP32[$78 >> 2] = $136;
    $i$0207 = $i$0207 + 1 | 0;
   } while (($i$0207 | 0) != ($points_count | 0));
   $$pre$phiZ2D = $73;
  } else $$pre$phiZ2D = $73;
 }
 HEAP32[$$pre$phiZ2D >> 2] = (HEAP32[$$pre$phiZ2D >> 2] | 0) + ($20 & 65535);
 STACKTOP = sp;
 return;
}

function __ZN5ImGui6PlotExE13ImGuiPlotTypePKcPFfPviES3_iiS2_ff6ImVec2($plot_type, $label, $values_getter, $data, $values_count, $values_offset, $overlay_text, $scale_min, $scale_max, $graph_size) {
 $plot_type = $plot_type | 0;
 $label = $label | 0;
 $values_getter = $values_getter | 0;
 $data = $data | 0;
 $values_count = $values_count | 0;
 $values_offset = $values_offset | 0;
 $overlay_text = $overlay_text | 0;
 $scale_min = +$scale_min;
 $scale_max = +$scale_max;
 $graph_size = $graph_size | 0;
 var $$1 = 0.0, $$13 = 0.0, $$byval_copy = 0, $$idx18 = 0, $$idx19$val = 0.0, $$idx20$phi$trans$insert = 0, $$idx20$pre$phiZZ2D = 0, $$idx30$val = 0.0, $$idx31$val = 0.0, $$pre$phi$i$iZ2D = 0, $0 = 0, $1 = 0, $100 = 0, $106 = 0, $107 = 0.0, $109 = 0.0, $110 = 0, $111 = 0.0, $114 = 0, $116 = 0.0, $117 = 0, $118 = 0, $137 = 0.0, $138 = 0, $139 = 0.0, $14 = 0, $142 = 0, $143 = 0.0, $149 = 0, $150 = 0, $152 = 0.0, $154 = 0.0, $156 = 0.0, $158 = 0, $162 = 0, $167 = 0, $168 = 0, $173 = 0.0, $175 = 0.0, $177 = 0.0, $182 = 0.0, $19 = 0, $2 = 0, $207 = 0.0, $208 = 0, $21 = 0.0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $220 = 0.0, $227 = 0, $232 = 0.0, $233 = 0, $236 = 0.0, $24 = 0.0, $242 = 0.0, $246 = 0.0, $247 = 0.0, $25 = 0.0, $252 = 0, $253 = 0, $255 = 0.0, $257 = 0.0, $259 = 0.0, $263 = 0.0, $264 = 0.0, $287 = 0, $288 = 0, $29 = 0.0, $290 = 0.0, $292 = 0.0, $294 = 0.0, $297 = 0.0, $3 = 0, $31 = 0.0, $320 = 0, $322 = 0.0, $323 = 0, $324 = 0.0, $325 = 0.0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0.0, $330 = 0.0, $334 = 0, $341 = 0.0, $348 = 0.0, $353 = 0.0, $358 = 0.0, $36 = 0.0, $368 = 0, $375 = 0.0, $382 = 0.0, $385 = 0.0, $387 = 0.0, $389 = 0.0, $39 = 0, $401 = 0.0, $407 = 0, $41 = 0.0, $45 = 0.0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $54 = 0, $55 = 0.0, $57 = 0.0, $58 = 0, $59 = 0.0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $65 = 0, $68 = 0, $69 = 0, $73 = 0, $75 = 0.0, $76 = 0.0, $78 = 0.0, $79 = 0.0, $81 = 0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0, $89 = 0.0, $90 = 0.0, $91 = 0.0, $92 = 0, $98 = 0.0, $bitcast = 0.0, $frame_bb = 0, $i$073 = 0, $inner_bb = 0, $label_size$sroa$0$0 = 0, $label_size$sroa$6$0 = 0, $n$072 = 0, $n$072$us = 0, $t0$071 = 0.0, $t0$071$us = 0.0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $tmpcast$byval_copy = 0, $total_bb = 0, $tp0$sroa$0$070 = 0, $tp0$sroa$0$070$us = 0, $tp0$sroa$5$069 = 0, $tp0$sroa$5$069$us = 0, $v_hovered$0 = 0, $v_max$0$lcssa = 0.0, $v_max$074 = 0.0, $v_min$0$lcssa = 0.0, $v_min$075 = 0.0, $vararg_buffer = 0, $vararg_buffer4 = 0, $w$0$i = 0.0, label = 0, sp = 0, $tp0$sroa$0$070$us$looptemp = 0, $tp0$sroa$5$069$us$looptemp = 0, $tp0$sroa$0$070$looptemp = 0, $tp0$sroa$5$069$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $$byval_copy = sp + 96 | 0;
 $tmpcast$byval_copy = sp + 136 | 0;
 $vararg_buffer4 = sp + 80 | 0;
 $vararg_buffer = sp + 48 | 0;
 $frame_bb = sp + 24 | 0;
 $inner_bb = sp + 120 | 0;
 $total_bb = sp;
 $0 = sp + 40 | 0;
 $1 = sp + 16 | 0;
 $2 = sp + 112 | 0;
 $3 = sp + 104 | 0;
 $5 = HEAP32[38201] | 0;
 HEAP8[$5 + 114 >> 0] = 1;
 if (HEAP8[$5 + 116 >> 0] | 0) {
  STACKTOP = sp;
  return;
 }
 if (($label | 0) == (-1 | 0)) {
  $24 = +HEAPF32[38187];
  label = 9;
 } else {
  $text_display_end$03$i$i = $label;
  L6 : while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     break L6;
     break;
    }
   case 35:
    {
     $14 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$14 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      break L6;
     } else $$pre$phi$i$iZ2D = $14;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    break;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
  $19 = HEAP32[38186] | 0;
  $21 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($label | 0)) {
   $24 = $21;
   label = 9;
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($$byval_copy, $19, $21, 3402823466385288598117041.0e14, -1.0, $label, $text_display_end$0$i, 0);
   $25 = +HEAPF32[$$byval_copy >> 2];
   if ($25 > 0.0) {
    $29 = $25 - $21 / +HEAPF32[$19 >> 2];
    HEAPF32[$$byval_copy >> 2] = $29;
    $31 = $29;
   } else $31 = $25;
   $33 = +(~~($31 + .949999988079071) | 0);
   HEAPF32[$$byval_copy >> 2] = $33;
   $label_size$sroa$0$0 = (HEAPF32[tempDoublePtr >> 2] = $33, HEAP32[tempDoublePtr >> 2] | 0);
   $label_size$sroa$6$0 = HEAP32[$$byval_copy + 4 >> 2] | 0;
  }
 }
 if ((label | 0) == 9) {
  $label_size$sroa$0$0 = 0;
  $label_size$sroa$6$0 = (HEAPF32[tempDoublePtr >> 2] = $24, HEAP32[tempDoublePtr >> 2] | 0);
 }
 $36 = +HEAPF32[$graph_size >> 2];
 if ($36 == 0.0) {
  $39 = HEAP32[38201] | 0;
  $41 = +HEAPF32[$39 + 268 >> 2];
  if ($41 < 0.0) {
   __ZN5ImGui19GetContentRegionMaxEv($$byval_copy);
   $45 = $41 + (+HEAPF32[$$byval_copy >> 2] - (+HEAPF32[$39 + 164 >> 2] - +HEAPF32[$39 + 20 >> 2]));
   $w$0$i = $45 <= 1.0 ? 1.0 : $45;
  } else $w$0$i = $41;
  $49 = +(~~$w$0$i | 0);
  HEAPF32[$graph_size >> 2] = $49;
  $60 = $49;
 } else $60 = $36;
 $50 = $graph_size + 4 | 0;
 $51 = +HEAPF32[$50 >> 2];
 if ($51 == 0.0) {
  $54 = 151972;
  $55 = +HEAPF32[$54 >> 2];
  $57 = (HEAP32[tempDoublePtr >> 2] = $label_size$sroa$6$0, +HEAPF32[tempDoublePtr >> 2]) + $55 * 2.0;
  HEAPF32[$50 >> 2] = $57;
  $$idx20$pre$phiZZ2D = $54;
  $62 = $57;
  $78 = $55;
 } else {
  $$idx20$phi$trans$insert = 151972;
  $$idx20$pre$phiZZ2D = $$idx20$phi$trans$insert;
  $62 = $51;
  $78 = +HEAPF32[$$idx20$phi$trans$insert >> 2];
 }
 $58 = $5 + 164 | 0;
 $59 = $60 + +HEAPF32[$58 >> 2];
 $61 = $62 + +HEAPF32[$5 + 168 >> 2];
 $63 = $58;
 $65 = HEAP32[$63 >> 2] | 0;
 $68 = HEAP32[$63 + 4 >> 2] | 0;
 $69 = $frame_bb;
 HEAP32[$69 >> 2] = $65;
 HEAP32[$69 + 4 >> 2] = $68;
 $73 = $frame_bb + 8 | 0;
 HEAPF32[$73 >> 2] = $59;
 HEAPF32[$frame_bb + 12 >> 2] = $61;
 $bitcast = (HEAP32[tempDoublePtr >> 2] = $65, +HEAPF32[tempDoublePtr >> 2]);
 $$idx18 = $frame_bb + 4 | 0;
 $75 = (HEAP32[tempDoublePtr >> 2] = $68, +HEAPF32[tempDoublePtr >> 2]);
 $$idx19$val = +HEAPF32[37992];
 $76 = $bitcast + $$idx19$val;
 $79 = $59 - $$idx19$val;
 HEAPF32[$inner_bb >> 2] = $76;
 $81 = $inner_bb + 4 | 0;
 HEAPF32[$81 >> 2] = $75 + $78;
 $82 = $inner_bb + 8 | 0;
 HEAPF32[$82 >> 2] = $79;
 $83 = $inner_bb + 12 | 0;
 HEAPF32[$83 >> 2] = $61 - $78;
 $84 = (HEAP32[tempDoublePtr >> 2] = $label_size$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]);
 $85 = $84 > 0.0;
 if ($85) $90 = $84 + +HEAPF32[37997]; else $90 = 0.0;
 $89 = $90 + $59;
 $91 = $61 + 0.0;
 $92 = $total_bb;
 HEAP32[$92 >> 2] = $65;
 HEAP32[$92 + 4 >> 2] = $68;
 HEAPF32[$total_bb + 8 >> 2] = $89;
 HEAPF32[$total_bb + 12 >> 2] = $91;
 $98 = $91 - $75;
 $100 = HEAP32[38201] | 0;
 HEAP8[$100 + 114 >> 0] = 1;
 if (!(HEAP8[$100 + 116 >> 0] | 0)) {
  $106 = $100 + 196 | 0;
  $107 = +HEAPF32[$106 >> 2];
  $109 = $107 >= $98 ? $107 : $98;
  $110 = $100 + 200 | 0;
  $111 = +HEAPF32[$110 >> 2];
  $114 = $100 + 164 | 0;
  $116 = $89 - $bitcast + +HEAPF32[$114 >> 2];
  $117 = $100 + 168 | 0;
  $118 = HEAP32[$117 >> 2] | 0;
  HEAPF32[$100 + 172 >> 2] = $116;
  HEAP32[$100 + 176 >> 2] = $118;
  $137 = +(~~($109 + (HEAP32[tempDoublePtr >> 2] = $118, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
  HEAPF32[$114 >> 2] = +(~~(+HEAPF32[$100 + 20 >> 2] + +HEAPF32[$100 + 368 >> 2] + +HEAPF32[$100 + 372 >> 2]) | 0);
  HEAPF32[$117 >> 2] = $137;
  $138 = $100 + 188 | 0;
  $139 = +HEAPF32[$138 >> 2];
  HEAPF32[$138 >> 2] = $139 >= $116 ? $139 : $116;
  $142 = $100 + 192 | 0;
  $143 = +HEAPF32[$142 >> 2];
  HEAPF32[$142 >> 2] = $143 >= $137 ? $143 : $137;
  HEAPF32[$100 + 204 >> 2] = $109;
  HEAPF32[$100 + 208 >> 2] = $111 >= $78 ? $111 : $78;
  HEAPF32[$110 >> 2] = 0.0;
  HEAPF32[$106 >> 2] = 0.0;
 }
 if (__ZN5ImGui7ItemAddERK6ImRectPKj($total_bb, 0) | 0) {
  $149 = $scale_min == 3402823466385288598117041.0e14;
  $150 = $scale_max == 3402823466385288598117041.0e14;
  if ($149 | $150) {
   if (($values_count | 0) > 0) {
    $i$073 = 0;
    $v_max$074 = -3402823466385288598117041.0e14;
    $v_min$075 = 3402823466385288598117041.0e14;
    while (1) {
     $152 = +FUNCTION_TABLE_dii[$values_getter & 3]($data, $i$073);
     $154 = $v_min$075 < $152 ? $v_min$075 : $152;
     $156 = $v_max$074 >= $152 ? $v_max$074 : $152;
     $i$073 = $i$073 + 1 | 0;
     if (($i$073 | 0) == ($values_count | 0)) {
      $v_max$0$lcssa = $156;
      $v_min$0$lcssa = $154;
      break;
     } else {
      $v_max$074 = $156;
      $v_min$075 = $154;
     }
    }
   } else {
    $v_max$0$lcssa = -3402823466385288598117041.0e14;
    $v_min$0$lcssa = 3402823466385288598117041.0e14;
   }
   $$1 = $149 ? $v_min$0$lcssa : $scale_min;
   $$13 = $150 ? $v_max$0$lcssa : $scale_max;
  } else {
   $$1 = $scale_min;
   $$13 = $scale_max;
  }
  $158 = $0;
  HEAP32[$158 >> 2] = $65;
  HEAP32[$158 + 4 >> 2] = $68;
  $162 = $73;
  $167 = HEAP32[$162 + 4 >> 2] | 0;
  $168 = $1;
  HEAP32[$168 >> 2] = HEAP32[$162 >> 2];
  HEAP32[$168 + 4 >> 2] = $167;
  $173 = +HEAPF32[38038];
  $175 = +HEAPF32[38039];
  $177 = +HEAPF32[38040];
  $182 = +HEAPF32[38041] * +HEAPF32[37984];
  $207 = +HEAPF32[37994];
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$0 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  __ZN5ImGui11RenderFrameE6ImVec2S0_jbf($tmpcast$byval_copy, $$byval_copy, ($175 < 0.0 ? 0 : ~~(($175 > 1.0 ? 1.0 : $175) * 255.0 + .5) << 8) | ($173 < 0.0 ? 0 : ~~(($173 > 1.0 ? 1.0 : $173) * 255.0 + .5)) | ($177 < 0.0 ? 0 : ~~(($177 > 1.0 ? 1.0 : $177) * 255.0 + .5) << 16) | ($182 < 0.0 ? 0 : ~~(($182 > 1.0 ? 1.0 : $182) * 255.0 + .5) << 24), 1, $207);
  $208 = ~~$60;
  $211 = ($plot_type | 0) == 0;
  $212 = $211 << 31 >> 31;
  $213 = (($208 | 0) < ($values_count | 0) ? $208 : $values_count) + $212 | 0;
  $214 = $212 + $values_count | 0;
  do if (__ZN5ImGui9IsHoveredERK6ImRectjb($inner_bb, 0, 0) | 0) {
   $220 = (+HEAPF32[36771] - $76) / ($79 - $76);
   $227 = ~~(+($214 | 0) * ($220 < 0.0 ? 0.0 : $220 > .9998999834060669 ? .9998999834060669 : $220));
   if (!(($227 | 0) > -1 & ($227 | 0) < ($values_count | 0))) ___assert_fail(126920, 124187, 6717, 126955);
   $232 = +FUNCTION_TABLE_dii[$values_getter & 3]($data, ($227 + $values_offset | 0) % ($values_count | 0) | 0);
   $233 = $227 + 1 | 0;
   $236 = +FUNCTION_TABLE_dii[$values_getter & 3]($data, ($233 + $values_offset | 0) % ($values_count | 0) | 0);
   if ($211) {
    HEAP32[$vararg_buffer >> 2] = $227;
    HEAPF64[$vararg_buffer + 8 >> 3] = $232;
    HEAP32[$vararg_buffer + 16 >> 2] = $233;
    HEAPF64[$vararg_buffer + 24 >> 3] = $236;
    __ZN5ImGui10SetTooltipEPKcz(126962, $vararg_buffer);
    $v_hovered$0 = $227;
    break;
   }
   if (($plot_type | 0) == 1) {
    HEAP32[$vararg_buffer4 >> 2] = $227;
    HEAPF64[$vararg_buffer4 + 8 >> 3] = $232;
    __ZN5ImGui10SetTooltipEPKcz(126982, $vararg_buffer4);
    $v_hovered$0 = $227;
   } else $v_hovered$0 = $227;
  } else $v_hovered$0 = -1; while (0);
  $242 = 1.0 / +($213 | 0);
  $246 = $$13 - $$1;
  $247 = (+FUNCTION_TABLE_dii[$values_getter & 3]($data, ($values_offset | 0) % ($values_count | 0) | 0) - $$1) / $246;
  $252 = $247 < 0.0 ? 1065353216 : (HEAPF32[tempDoublePtr >> 2] = 1.0 - ($247 > 1.0 ? 1.0 : $247), HEAP32[tempDoublePtr >> 2] | 0);
  $253 = $211 ? 36 : 38;
  $255 = +HEAPF32[152056 + ($253 << 4) >> 2];
  $257 = +HEAPF32[152056 + ($253 << 4) + 4 >> 2];
  $259 = +HEAPF32[152056 + ($253 << 4) + 8 >> 2];
  $263 = +HEAPF32[37984];
  $264 = +HEAPF32[152056 + ($253 << 4) + 12 >> 2] * $263;
  $287 = ($257 < 0.0 ? 0 : ~~(($257 > 1.0 ? 1.0 : $257) * 255.0 + .5) << 8) | ($255 < 0.0 ? 0 : ~~(($255 > 1.0 ? 1.0 : $255) * 255.0 + .5)) | ($259 < 0.0 ? 0 : ~~(($259 > 1.0 ? 1.0 : $259) * 255.0 + .5) << 16) | ($264 < 0.0 ? 0 : ~~(($264 > 1.0 ? 1.0 : $264) * 255.0 + .5) << 24);
  $288 = $211 ? 37 : 39;
  $290 = +HEAPF32[152056 + ($288 << 4) >> 2];
  $292 = +HEAPF32[152056 + ($288 << 4) + 4 >> 2];
  $294 = +HEAPF32[152056 + ($288 << 4) + 8 >> 2];
  $297 = $263 * +HEAPF32[152056 + ($288 << 4) + 12 >> 2];
  $320 = ($292 < 0.0 ? 0 : ~~(($292 > 1.0 ? 1.0 : $292) * 255.0 + .5) << 8) | ($290 < 0.0 ? 0 : ~~(($290 > 1.0 ? 1.0 : $290) * 255.0 + .5)) | ($294 < 0.0 ? 0 : ~~(($294 > 1.0 ? 1.0 : $294) * 255.0 + .5) << 16) | ($297 < 0.0 ? 0 : ~~(($297 > 1.0 ? 1.0 : $297) * 255.0 + .5) << 24);
  L55 : do if (($213 | 0) > 0) {
   $322 = +($214 | 0);
   $323 = $values_offset + 1 | 0;
   $$idx30$val = +HEAPF32[$inner_bb >> 2];
   $$idx31$val = +HEAPF32[$81 >> 2];
   $324 = +HEAPF32[$82 >> 2] - $$idx30$val;
   $325 = +HEAPF32[$83 >> 2] - $$idx31$val;
   $326 = $$byval_copy + 4 | 0;
   $327 = $tmpcast$byval_copy + 4 | 0;
   $328 = $5 + 572 | 0;
   $329 = ($plot_type | 0) == 1;
   if ($211) {
    $n$072$us = 0;
    $t0$071$us = 0.0;
    $tp0$sroa$0$070$us = 0;
    $tp0$sroa$5$069$us = $252;
    while (1) {
     $334 = ~~($322 * $t0$071$us + .5);
     $t0$071$us = $242 + $t0$071$us;
     if (!(($334 | 0) > -1 & ($334 | 0) < ($values_count | 0))) break;
     $341 = (+FUNCTION_TABLE_dii[$values_getter & 3]($data, ($323 + $334 | 0) % ($values_count | 0) | 0) - $$1) / $246;
     $tp0$sroa$0$070$us$looptemp = $tp0$sroa$0$070$us;
     $tp0$sroa$0$070$us = (HEAPF32[tempDoublePtr >> 2] = $t0$071$us, HEAP32[tempDoublePtr >> 2] | 0);
     $tp0$sroa$5$069$us$looptemp = $tp0$sroa$5$069$us;
     $tp0$sroa$5$069$us = $341 < 0.0 ? 1065353216 : (HEAPF32[tempDoublePtr >> 2] = 1.0 - ($341 > 1.0 ? 1.0 : $341), HEAP32[tempDoublePtr >> 2] | 0);
     $348 = (HEAP32[tempDoublePtr >> 2] = $tp0$sroa$0$070$us$looptemp, +HEAPF32[tempDoublePtr >> 2]);
     $353 = $$idx31$val + (HEAP32[tempDoublePtr >> 2] = $tp0$sroa$5$069$us$looptemp, +HEAPF32[tempDoublePtr >> 2]) * $325;
     HEAPF32[$$byval_copy >> 2] = $$idx30$val + $348 * $324;
     HEAPF32[$326 >> 2] = $353;
     $358 = $$idx31$val + (HEAP32[tempDoublePtr >> 2] = $tp0$sroa$5$069$us, +HEAPF32[tempDoublePtr >> 2]) * $325;
     HEAPF32[$tmpcast$byval_copy >> 2] = $$idx30$val + $t0$071$us * $324;
     HEAPF32[$327 >> 2] = $358;
     __ZN10ImDrawList7AddLineERK6ImVec2S2_jf(HEAP32[$328 >> 2] | 0, $$byval_copy, $tmpcast$byval_copy, ($v_hovered$0 | 0) == ($334 | 0) ? $320 : $287, 1.0);
     $n$072$us = $n$072$us + 1 | 0;
     if (($n$072$us | 0) >= ($213 | 0)) break L55;
    }
    ___assert_fail(126992, 124187, 6741, 126955);
   }
   $330 = $$idx31$val + $325;
   $n$072 = 0;
   $t0$071 = 0.0;
   $tp0$sroa$0$070 = 0;
   $tp0$sroa$5$069 = $252;
   while (1) {
    $368 = ~~($322 * $t0$071 + .5);
    $t0$071 = $242 + $t0$071;
    if (!(($368 | 0) > -1 & ($368 | 0) < ($values_count | 0))) break;
    $375 = (+FUNCTION_TABLE_dii[$values_getter & 3]($data, ($323 + $368 | 0) % ($values_count | 0) | 0) - $$1) / $246;
    $tp0$sroa$0$070$looptemp = $tp0$sroa$0$070;
    $tp0$sroa$0$070 = (HEAPF32[tempDoublePtr >> 2] = $t0$071, HEAP32[tempDoublePtr >> 2] | 0);
    $tp0$sroa$5$069$looptemp = $tp0$sroa$5$069;
    $tp0$sroa$5$069 = $375 < 0.0 ? 1065353216 : (HEAPF32[tempDoublePtr >> 2] = 1.0 - ($375 > 1.0 ? 1.0 : $375), HEAP32[tempDoublePtr >> 2] | 0);
    $382 = (HEAP32[tempDoublePtr >> 2] = $tp0$sroa$0$070$looptemp, +HEAPF32[tempDoublePtr >> 2]);
    $385 = $$idx30$val + $382 * $324;
    $387 = $$idx31$val + (HEAP32[tempDoublePtr >> 2] = $tp0$sroa$5$069$looptemp, +HEAPF32[tempDoublePtr >> 2]) * $325;
    HEAPF32[$$byval_copy >> 2] = $385;
    HEAPF32[$326 >> 2] = $387;
    $389 = $$idx30$val + $t0$071 * $324;
    HEAPF32[$tmpcast$byval_copy >> 2] = $389;
    HEAPF32[$327 >> 2] = $330;
    if ($329) {
     if ($389 >= $385 + 2.0) HEAPF32[$tmpcast$byval_copy >> 2] = $389 + -1.0;
     __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi(HEAP32[$328 >> 2] | 0, $$byval_copy, $tmpcast$byval_copy, ($v_hovered$0 | 0) == ($368 | 0) ? $320 : $287, 0.0, 15);
    }
    $n$072 = $n$072 + 1 | 0;
    if (($n$072 | 0) >= ($213 | 0)) break L55;
   }
   ___assert_fail(126992, 124187, 6741, 126955);
  } while (0);
  if ($overlay_text | 0) {
   $401 = +HEAPF32[$$idx18 >> 2] + +HEAPF32[$$idx20$pre$phiZZ2D >> 2];
   HEAP32[$2 >> 2] = HEAP32[$frame_bb >> 2];
   HEAPF32[$2 + 4 >> 2] = $401;
   __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($2, $73, $overlay_text, 0, 0, 2, 0, 0);
  }
  if ($85) {
   $407 = HEAP32[$81 >> 2] | 0;
   HEAPF32[$3 >> 2] = +HEAPF32[$73 >> 2] + +HEAPF32[37997];
   HEAP32[$3 + 4 >> 2] = $407;
   HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   __ZN5ImGui10RenderTextE6ImVec2PKcS2_b($$byval_copy, $label, 0, 1);
  }
 }
 STACKTOP = sp;
 return;
}

function __ZN5ImGui7ColumnsEiPKcb($columns_count, $id, $border) {
 $columns_count = $columns_count | 0;
 $id = $id | 0;
 $border = $border | 0;
 var $$0$i = 0.0, $$0$i$us = 0.0, $$1$i = 0.0, $$cast = 0.0, $$idx$i$i = 0, $$idx$val$i = 0, $$idx1$val$i = 0, $$in$i = 0, $$pre23 = 0, $0 = 0, $1 = 0, $109 = 0.0, $111 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0.0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0.0, $128 = 0, $130 = 0, $136 = 0.0, $145 = 0.0, $15 = 0, $153 = 0.0, $155 = 0, $156 = 0.0, $157 = 0.0, $159 = 0, $16 = 0.0, $172 = 0, $178 = 0, $179 = 0, $18 = 0.0, $185 = 0, $187 = 0.0, $189 = 0.0, $19 = 0, $191 = 0.0, $196 = 0.0, $20 = 0.0, $221 = 0.0, $222 = 0, $229 = 0.0, $23 = 0, $231 = 0, $237 = 0.0, $242 = 0.0, $25 = 0.0, $254 = 0, $257 = 0, $26 = 0, $265 = 0, $27 = 0, $270 = 0, $272 = 0, $274 = 0, $275 = 0, $282 = 0.0, $287 = 0, $292 = 0.0, $297 = 0.0, $3 = 0, $304 = 0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $326 = 0, $327 = 0, $330 = 0, $335 = 0, $336 = 0, $340 = 0, $342 = 0, $348 = 0, $350 = 0, $351 = 0, $353 = 0.0, $355 = 0, $357 = 0, $358 = 0, $359 = 0, $360 = 0, $361 = 0, $362 = 0, $364 = 0.0, $365 = 0, $366 = 0, $368 = 0, $381 = 0.0, $387 = 0.0, $389 = 0, $394 = 0, $395 = 0.0, $396 = 0, $397 = 0, $398 = 0, $4 = 0, $401 = 0, $402 = 0, $407 = 0, $408 = 0, $411 = 0, $416 = 0, $417 = 0, $421 = 0, $423 = 0, $429 = 0, $433 = 0, $434 = 0, $437 = 0.0, $446 = 0, $447 = 0, $450 = 0, $452 = 0, $455 = 0, $46 = 0.0, $460 = 0, $461 = 0, $465 = 0, $467 = 0, $47 = 0, $48 = 0.0, $51 = 0, $52 = 0.0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $83 = 0, $85 = 0, $87 = 0, $94 = 0, $95 = 0.0, $96 = 0, $97 = 0.0, $99 = 0.0, $column_index$014 = 0, $column_index$014$us = 0, $column_rect = 0, $count$02$i$i$us = 0, $first$03$i$i$us = 0, $first$1$i$i$us = 0, $first$1$i$i$us$lcssa = 0, $held = 0, $hovered = 0, $i$015 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $column_rect = sp + 16 | 0;
 $hovered = sp + 33 | 0;
 $held = sp + 32 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $3 = HEAP32[38201] | 0;
 $4 = $3 + 114 | 0;
 HEAP8[$4 >> 0] = 1;
 if (($columns_count | 0) <= 0) ___assert_fail(125153, 124187, 8928, 125172);
 $6 = $3 + 380 | 0;
 L4 : do if ((HEAP32[$6 >> 2] | 0) != 1) {
  if (!(HEAP32[$3 + 376 >> 2] | 0)) $58 = $3; else {
   HEAP8[$4 >> 0] = 1;
   if (!(HEAP8[$3 + 116 >> 0] | 0)) {
    $15 = $3 + 196 | 0;
    $16 = +HEAPF32[$15 >> 2];
    $18 = $16 >= 0.0 ? $16 : 0.0;
    $19 = $3 + 200 | 0;
    $20 = +HEAPF32[$19 >> 2];
    $23 = $3 + 164 | 0;
    $25 = +HEAPF32[$23 >> 2] + 0.0;
    $26 = $3 + 168 | 0;
    $27 = HEAP32[$26 >> 2] | 0;
    HEAPF32[$3 + 172 >> 2] = $25;
    HEAP32[$3 + 176 >> 2] = $27;
    $46 = +(~~($18 + (HEAP32[tempDoublePtr >> 2] = $27, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
    HEAPF32[$23 >> 2] = +(~~(+HEAPF32[$3 + 20 >> 2] + +HEAPF32[$3 + 368 >> 2] + +HEAPF32[$3 + 372 >> 2]) | 0);
    HEAPF32[$26 >> 2] = $46;
    $47 = $3 + 188 | 0;
    $48 = +HEAPF32[$47 >> 2];
    HEAPF32[$47 >> 2] = $48 >= $25 ? $48 : $25;
    $51 = $3 + 192 | 0;
    $52 = +HEAPF32[$51 >> 2];
    HEAPF32[$51 >> 2] = $52 >= $46 ? $52 : $46;
    HEAPF32[$3 + 204 >> 2] = $18;
    HEAPF32[$3 + 208 >> 2] = $20 >= 0.0 ? $20 : 0.0;
    HEAPF32[$19 >> 2] = 0.0;
    HEAPF32[$15 >> 2] = 0.0;
    $58 = HEAP32[38201] | 0;
   } else $58 = $3;
  }
  $57 = $58 + 114 | 0;
  HEAP8[$57 >> 0] = 1;
  $59 = $58 + 280 | 0;
  $60 = HEAP32[$59 >> 2] | 0;
  if (($60 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
  $62 = $60 + -1 | 0;
  HEAP32[$59 >> 2] = $62;
  if (!$62) $$in$i = $58 + 472 | 0; else $$in$i = (HEAP32[$58 + 288 >> 2] | 0) + ($60 + -2 << 2) | 0;
  HEAP32[$58 + 268 >> 2] = HEAP32[$$in$i >> 2];
  HEAP8[$57 >> 0] = 1;
  $71 = $58 + 572 | 0;
  __ZN10ImDrawList11PopClipRectEv(HEAP32[$71 >> 2] | 0);
  $73 = HEAP32[$71 >> 2] | 0;
  $75 = HEAP32[$73 + 52 >> 2] | 0;
  if (($75 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
  $77 = $75 + -1 | 0;
  $79 = HEAP32[$73 + 60 >> 2] | 0;
  $83 = HEAP32[$79 + ($77 << 4) + 4 >> 2] | 0;
  $85 = HEAP32[$79 + ($77 << 4) + 8 >> 2] | 0;
  $87 = HEAP32[$79 + ($77 << 4) + 12 >> 2] | 0;
  HEAP32[$58 + 436 >> 2] = HEAP32[$79 + ($77 << 4) >> 2];
  HEAP32[$58 + 440 >> 2] = $83;
  HEAP32[$58 + 444 >> 2] = $85;
  HEAP32[$58 + 448 >> 2] = $87;
  __ZN10ImDrawList13ChannelsMergeEv(HEAP32[$3 + 572 >> 2] | 0);
  $94 = $3 + 400 | 0;
  $95 = +HEAPF32[$94 >> 2];
  $96 = $3 + 168 | 0;
  $97 = +HEAPF32[$96 >> 2];
  $99 = $95 >= $97 ? $95 : $97;
  HEAPF32[$94 >> 2] = $99;
  HEAPF32[$96 >> 2] = $99;
  $$pre23 = HEAP32[$6 >> 2] | 0;
  if (!(($$pre23 | 0) == ($columns_count | 0) | ($$pre23 | 0) == 1)) if (HEAP8[$3 + 404 >> 0] | 0) if (!(HEAP8[$3 + 116 >> 0] | 0)) {
   $109 = +HEAPF32[$3 + 392 >> 2];
   $111 = HEAP32[$3 + 168 >> 2] | 0;
   if (($$pre23 | 0) > 1) {
    $113 = $3 + 20 | 0;
    $114 = $3 + 408 | 0;
    $115 = $column_rect + 4 | 0;
    $116 = $column_rect + 8 | 0;
    $117 = $column_rect + 12 | 0;
    $$cast = (HEAP32[tempDoublePtr >> 2] = $111, +HEAPF32[tempDoublePtr >> 2]);
    $118 = $3 + 572 | 0;
    $119 = $109 + 1.0;
    $120 = $0 + 4 | 0;
    $121 = $1 + 4 | 0;
    $122 = 152853;
    $123 = 147084;
    $124 = 156912;
    $125 = 153160;
    $i$015 = 1;
    while (1) {
     $126 = +HEAPF32[$113 >> 2];
     $128 = HEAP32[38201] | 0;
     $130 = HEAP32[38211] | 0;
     if (!$130) label = 22; else if (($130 | 0) == ((HEAP32[$128 + 408 >> 2] | 0) + $i$015 | 0)) {
      $136 = +__ZL22GetDraggedColumnOffseti($i$015);
      $$1$i = $136;
      $159 = HEAP32[38201] | 0;
      $172 = 146892;
     } else label = 22;
     if ((label | 0) == 22) {
      label = 0;
      if (($i$015 | 0) >= (HEAP32[$128 + 412 >> 2] | 0)) {
       label = 23;
       break;
      }
      $145 = +HEAPF32[$128 + 384 >> 2];
      $$1$i = +(~~($145 + +HEAPF32[(HEAP32[$128 + 420 >> 2] | 0) + ($i$015 << 2) >> 2] * (+HEAPF32[$128 + 388 >> 2] - $145)) | 0);
      $159 = $128;
      $172 = 146892;
     }
     $153 = $126 + $$1$i;
     $155 = (HEAP32[$114 >> 2] | 0) + $i$015 | 0;
     $156 = $153 + -4.0;
     $157 = $153 + 4.0;
     HEAPF32[$column_rect >> 2] = $156;
     HEAPF32[$115 >> 2] = $109;
     HEAPF32[$116 >> 2] = $157;
     HEAP32[$117 >> 2] = $111;
     if (+HEAPF32[$159 + 440 >> 2] < $$cast) if (+HEAPF32[$159 + 448 >> 2] > $109) if (+HEAPF32[$159 + 436 >> 2] < $157) if (+HEAPF32[$159 + 444 >> 2] > $156) label = 31; else label = 29; else label = 29; else label = 29; else label = 29;
     if ((label | 0) == 29) {
      label = 0;
      if (($155 | 0) == (HEAP32[$172 + 5952 >> 2] | 0)) label = 31; else if (HEAP8[$172 + 11104 >> 0] | 0) label = 31;
     }
     if ((label | 0) == 31) {
      label = 0;
      __ZN5ImGui14ButtonBehaviorERK6ImRectjPbS3_i($column_rect, $155, $hovered, $held, 1) | 0;
      $178 = HEAP8[$hovered >> 0] | 0;
      $179 = HEAP8[$held >> 0] | 0;
      if (($179 | $178) << 24 >> 24) HEAP32[$125 >> 2] = 4;
      $185 = $179 << 24 >> 24 == 0 ? ($178 << 24 >> 24 ? 28 : 27) : 29;
      $187 = +HEAPF32[152056 + ($185 << 4) >> 2];
      $189 = +HEAPF32[152056 + ($185 << 4) + 4 >> 2];
      $191 = +HEAPF32[152056 + ($185 << 4) + 8 >> 2];
      $196 = +HEAPF32[152056 + ($185 << 4) + 12 >> 2] * +HEAPF32[37984];
      $221 = +(~~$153 | 0);
      $222 = HEAP32[$118 >> 2] | 0;
      HEAPF32[$0 >> 2] = $221;
      HEAPF32[$120 >> 2] = $119;
      HEAPF32[$1 >> 2] = $221;
      HEAP32[$121 >> 2] = $111;
      __ZN10ImDrawList7AddLineERK6ImVec2S2_jf($222, $0, $1, ($189 < 0.0 ? 0 : ~~(($189 > 1.0 ? 1.0 : $189) * 255.0 + .5) << 8) | ($187 < 0.0 ? 0 : ~~(($187 > 1.0 ? 1.0 : $187) * 255.0 + .5)) | ($191 < 0.0 ? 0 : ~~(($191 > 1.0 ? 1.0 : $191) * 255.0 + .5) << 16) | ($196 < 0.0 ? 0 : ~~(($196 > 1.0 ? 1.0 : $196) * 255.0 + .5) << 24), 1.0);
      if (HEAP8[$held >> 0] | 0) {
       if (HEAP8[$122 >> 0] | 0) HEAPF32[$124 >> 2] = $153 - +HEAPF32[$123 >> 2];
       $229 = +__ZL22GetDraggedColumnOffseti($i$015);
       $231 = HEAP32[38201] | 0;
       HEAP8[$231 + 114 >> 0] = 1;
       if (($i$015 | 0) >= (HEAP32[$231 + 412 >> 2] | 0)) {
        label = 37;
        break;
       }
       $237 = +HEAPF32[$231 + 384 >> 2];
       $242 = ($229 - $237) / (+HEAPF32[$231 + 388 >> 2] - $237);
       HEAPF32[(HEAP32[$231 + 420 >> 2] | 0) + ($i$015 << 2) >> 2] = $242;
       __ZN12ImGuiStorage8SetFloatEjf(HEAP32[$231 + 260 >> 2] | 0, (HEAP32[$231 + 408 >> 2] | 0) + $i$015 | 0, $242);
      }
     }
     $i$015 = $i$015 + 1 | 0;
     if (($i$015 | 0) >= (HEAP32[$6 >> 2] | 0)) break L4;
    }
    if ((label | 0) == 23) ___assert_fail(124599, 124187, 8883, 124642); else if ((label | 0) == 37) ___assert_fail(124599, 124187, 8895, 125189);
   }
  }
 } while (0);
 $254 = ($id | 0) != 0;
 __ZN5ImGui6PushIDEi($254 ? 287454023 : $columns_count + 287454023 | 0);
 $257 = HEAP32[$3 + 424 >> 2] | 0;
 if (($257 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $265 = __Z6ImHashPKvij($254 ? $id : 125205, 0, HEAP32[(HEAP32[$3 + 432 >> 2] | 0) + ($257 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($265 | 0)) HEAP8[152852] = 1;
 $270 = $3 + 408 | 0;
 HEAP32[$270 >> 2] = $265;
 $272 = HEAP32[38201] | 0;
 HEAP8[$272 + 114 >> 0] = 1;
 $274 = $272 + 424 | 0;
 $275 = HEAP32[$274 >> 2] | 0;
 if (($275 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 HEAP32[$274 >> 2] = $275 + -1;
 HEAP32[$3 + 376 >> 2] = 0;
 HEAP32[$6 >> 2] = $columns_count;
 HEAP8[$3 + 404 >> 0] = $border & 1;
 $282 = +HEAPF32[$3 + 52 >> 2];
 if ($282 != 0.0) $292 = $282; else $292 = +HEAPF32[$3 + 28 >> 2];
 $287 = HEAP32[$3 + 368 >> 2] | 0;
 HEAP32[$3 + 384 >> 2] = $287;
 $297 = (HEAP32[tempDoublePtr >> 2] = $287, +HEAPF32[tempDoublePtr >> 2]);
 HEAPF32[$3 + 388 >> 2] = $292 - +HEAPF32[$3 + 72 >> 2] - ((HEAP32[$3 + 8 >> 2] & 8 | 0) == 0 ? +HEAPF32[38004] : 0.0);
 $304 = HEAP32[$3 + 168 >> 2] | 0;
 HEAP32[$3 + 392 >> 2] = $304;
 HEAP32[$3 + 400 >> 2] = $304;
 HEAP32[$3 + 396 >> 2] = $304;
 HEAPF32[$3 + 372 >> 2] = 0.0;
 HEAPF32[$3 + 164 >> 2] = +(~~(+HEAPF32[$3 + 20 >> 2] + $297 + 0.0) | 0);
 $317 = $3 + 412 | 0;
 if (($columns_count | 0) == 1) {
  $446 = $3 + 416 | 0;
  $447 = HEAP32[$446 >> 2] | 0;
  if (($447 | 0) < 0) {
   $450 = (($447 | 0) / 2 | 0) + $447 | 0;
   $452 = ($450 | 0) > 0 ? $450 : 0;
   if (($447 | 0) < ($452 | 0)) {
    $455 = 147664;
    HEAP32[$455 >> 2] = (HEAP32[$455 >> 2] | 0) + 1;
    $460 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($452 << 2) | 0;
    $461 = $3 + 420 | 0;
    _memcpy($460 | 0, HEAP32[$461 >> 2] | 0, HEAP32[$317 >> 2] << 2 | 0) | 0;
    $465 = HEAP32[$461 >> 2] | 0;
    if ($465 | 0) {
     $467 = 147664;
     HEAP32[$467 >> 2] = (HEAP32[$467 >> 2] | 0) + -1;
    }
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($465);
    HEAP32[$461 >> 2] = $460;
    HEAP32[$446 >> 2] = $452;
   }
  }
  HEAP32[$317 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $318 = $columns_count + 1 | 0;
 $319 = $3 + 416 | 0;
 $320 = HEAP32[$319 >> 2] | 0;
 if (($320 | 0) <= ($columns_count | 0)) {
  if (!$320) $326 = 8; else $326 = (($320 | 0) / 2 | 0) + $320 | 0;
  $327 = ($326 | 0) > ($318 | 0) ? $326 : $318;
  if (($320 | 0) < ($327 | 0)) {
   $330 = 147664;
   HEAP32[$330 >> 2] = (HEAP32[$330 >> 2] | 0) + 1;
   $335 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($327 << 2) | 0;
   $336 = $3 + 420 | 0;
   _memcpy($335 | 0, HEAP32[$336 >> 2] | 0, HEAP32[$317 >> 2] << 2 | 0) | 0;
   $340 = HEAP32[$336 >> 2] | 0;
   if ($340 | 0) {
    $342 = 147664;
    HEAP32[$342 >> 2] = (HEAP32[$342 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($340);
   HEAP32[$336 >> 2] = $335;
   HEAP32[$319 >> 2] = $327;
  }
 }
 HEAP32[$317 >> 2] = $318;
 L90 : do if (($columns_count | 0) >= 0) {
  $348 = HEAP32[$270 >> 2] | 0;
  $350 = HEAP32[38211] | 0;
  $351 = 152852;
  $353 = +(HEAP32[$6 >> 2] | 0);
  $355 = HEAP32[$3 + 260 >> 2] | 0;
  $$idx$val$i = HEAP32[$355 >> 2] | 0;
  $$idx1$val$i = HEAP32[$355 + 8 >> 2] | 0;
  $$idx$i$i = $$idx$val$i << 3;
  $357 = $$idx$i$i >> 3;
  $358 = $$idx1$val$i + ($$idx$val$i << 3) | 0;
  $359 = $3 + 420 | 0;
  if (($$idx$i$i | 0) > 0) $column_index$014$us = 0; else {
   $360 = ($$idx$val$i | 0) == 0;
   $361 = $$idx1$val$i + 4 | 0;
   $column_index$014 = 0;
   while (1) {
    $434 = $348 + $column_index$014 | 0;
    if (($350 | 0) == ($434 | 0)) HEAP8[$351 >> 0] = 1;
    $437 = +($column_index$014 | 0) / $353;
    if ($360) $$0$i = $437; else if ((HEAP32[$$idx1$val$i >> 2] | 0) == ($434 | 0)) $$0$i = +HEAPF32[$361 >> 2]; else $$0$i = $437;
    if (($column_index$014 | 0) > ($columns_count | 0)) break;
    HEAPF32[(HEAP32[$359 >> 2] | 0) + ($column_index$014 << 2) >> 2] = $$0$i;
    if (($column_index$014 | 0) < ($columns_count | 0)) $column_index$014 = $column_index$014 + 1 | 0; else break L90;
   }
   ___assert_fail(127217, 127226, 805, 127272);
  }
  while (1) {
   $362 = $348 + $column_index$014$us | 0;
   if (($350 | 0) == ($362 | 0)) HEAP8[$351 >> 0] = 1;
   $364 = +($column_index$014$us | 0);
   $count$02$i$i$us = $357;
   $first$03$i$i$us = $$idx1$val$i;
   while (1) {
    $365 = ($count$02$i$i$us | 0) / 2 | 0;
    $366 = $first$03$i$i$us + ($365 << 3) | 0;
    $368 = (HEAP32[$366 >> 2] | 0) >>> 0 < $362 >>> 0;
    $count$02$i$i$us = $368 ? $count$02$i$i$us + -1 - $365 | 0 : $365;
    $first$1$i$i$us = $368 ? $366 + 8 | 0 : $first$03$i$i$us;
    if (($count$02$i$i$us | 0) <= 0) {
     $first$1$i$i$us$lcssa = $first$1$i$i$us;
     break;
    } else $first$03$i$i$us = $first$1$i$i$us;
   }
   $381 = $364 / $353;
   if (($first$1$i$i$us$lcssa | 0) == ($358 | 0)) $$0$i$us = $381; else if ((HEAP32[$first$1$i$i$us$lcssa >> 2] | 0) == ($362 | 0)) $$0$i$us = +HEAPF32[$first$1$i$i$us$lcssa + 4 >> 2]; else $$0$i$us = $381;
   if (($column_index$014$us | 0) > ($columns_count | 0)) break;
   HEAPF32[(HEAP32[$359 >> 2] | 0) + ($column_index$014$us << 2) >> 2] = $$0$i$us;
   if (($column_index$014$us | 0) < ($columns_count | 0)) $column_index$014$us = $column_index$014$us + 1 | 0; else break L90;
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 __ZN10ImDrawList13ChannelsSplitEi(HEAP32[$3 + 572 >> 2] | 0, HEAP32[$6 >> 2] | 0);
 __ZL18PushColumnClipRecti();
 $387 = +__ZN5ImGui14GetColumnWidthEi(-1) * .6499999761581421;
 $389 = HEAP32[38201] | 0;
 HEAP8[$389 + 114 >> 0] = 1;
 if ($387 == 0.0) $395 = +HEAPF32[$389 + 472 >> 2]; else $395 = $387;
 $394 = $389 + 268 | 0;
 HEAPF32[$394 >> 2] = $395;
 $396 = $389 + 280 | 0;
 $397 = HEAP32[$396 >> 2] | 0;
 $398 = $389 + 284 | 0;
 $401 = (HEAPF32[tempDoublePtr >> 2] = $395, HEAP32[tempDoublePtr >> 2] | 0);
 if (($397 | 0) == (HEAP32[$398 >> 2] | 0)) {
  $402 = $397 + 1 | 0;
  if (!$397) $407 = 8; else $407 = (($397 | 0) / 2 | 0) + $397 | 0;
  $408 = ($407 | 0) > ($402 | 0) ? $407 : $402;
  if (($397 | 0) < ($408 | 0)) {
   $411 = 147664;
   HEAP32[$411 >> 2] = (HEAP32[$411 >> 2] | 0) + 1;
   $416 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($408 << 2) | 0;
   $417 = $389 + 288 | 0;
   _memcpy($416 | 0, HEAP32[$417 >> 2] | 0, HEAP32[$396 >> 2] << 2 | 0) | 0;
   $421 = HEAP32[$417 >> 2] | 0;
   if ($421 | 0) {
    $423 = 147664;
    HEAP32[$423 >> 2] = (HEAP32[$423 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($421);
   HEAP32[$417 >> 2] = $416;
   HEAP32[$398 >> 2] = $408;
   $429 = HEAP32[$396 >> 2] | 0;
   $433 = HEAP32[$394 >> 2] | 0;
  } else {
   $429 = $397;
   $433 = $401;
  }
 } else {
  $429 = $397;
  $433 = $401;
 }
 HEAP32[$396 >> 2] = $429 + 1;
 HEAP32[(HEAP32[$389 + 288 >> 2] | 0) + ($429 << 2) >> 2] = $433;
 STACKTOP = sp;
 return;
}

function __ZN4Draw5SetupERKN5Oryol8GfxSetupEi($this, $gfxSetup, $frame) {
 $this = $this | 0;
 $gfxSetup = $gfxSetup | 0;
 $frame = $frame | 0;
 var $$lo = 0, $0 = 0, $1 = 0, $13 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $29 = 0, $3 = 0, $34 = 0, $4 = 0, $41 = 0, $414 = 0, $420 = 0, $421 = 0, $422 = 0, $429 = 0, $43 = 0, $439 = 0, $445 = 0, $450 = 0, $455 = 0, $456 = 0, $460 = 0, $465 = 0, $467 = 0, $471 = 0, $476 = 0, $48 = 0, $481 = 0, $482 = 0, $486 = 0, $487 = 0, $49 = 0, $53 = 0, $55 = 0, $60 = 0, $61 = 0, $9 = 0, $crtShd = 0, $fsq = 0, $fsqSetup = 0, $irmSetup = 0, $nocrtShd = 0, $pips = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 7360 | 0;
 $irmSetup = sp + 6664 | 0;
 $0 = sp + 6464 | 0;
 $fsqSetup = sp + 6472 | 0;
 $fsq = sp + 6456 | 0;
 $crtShd = sp + 6448 | 0;
 $1 = sp + 3064 | 0;
 $nocrtShd = sp + 6440 | 0;
 $2 = sp + 16 | 0;
 $pips = sp + 6112 | 0;
 $3 = sp + 8 | 0;
 $4 = sp;
 HEAP8[$this >> 0] = 0;
 HEAP32[$this + 964 >> 2] = $frame;
 HEAP32[$this + 380 >> 2] = 1;
 HEAP32[$this + 384 >> 2] = 1;
 HEAP32[$this + 676 >> 2] = 327680;
 __ZN5Oryol12TextureSetup5EmptyEiiiNS_11TextureType4CodeENS_11PixelFormat4CodeENS_5Usage4CodeE($irmSetup, 320, 256, 1, 0, 0, 2);
 HEAP32[$irmSetup >> 2] = 2;
 $9 = $irmSetup + 48 | 0;
 HEAP16[$9 >> 1] = HEAP16[$9 >> 1] & -4048 | 576;
 $13 = $this + 8 | 0;
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 157, 20110);
  _abort();
 }
 __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_12TextureSetupEEENS_2IdERKT_($0, (HEAP32[36694] | 0) + 1168 | 0, $irmSetup);
 $18 = $0;
 $20 = HEAP32[$18 >> 2] | 0;
 $23 = HEAP32[$18 + 4 >> 2] | 0;
 if (($13 | 0) != ($0 | 0)) {
  $24 = $13;
  HEAP32[$24 >> 2] = $20;
  HEAP32[$24 + 4 >> 2] = $23;
 }
 $29 = $this + 88 | 0;
 HEAP32[$29 >> 2] = $20;
 HEAP32[$29 + 4 >> 2] = $23;
 $34 = $this + 272 | 0;
 HEAP32[$34 >> 2] = $20;
 HEAP32[$34 + 4 >> 2] = $23;
 __ZN5Oryol9MeshSetup14FullScreenQuadEb($fsqSetup, 1);
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 157, 80435);
  _abort();
 }
 __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_9MeshSetupEEENS_2IdERKT_($fsq, (HEAP32[36694] | 0) + 1168 | 0, $fsqSetup);
 $41 = $this + 24 | 0;
 if (($41 | 0) != ($fsq | 0)) {
  $43 = $fsq;
  $48 = HEAP32[$43 + 4 >> 2] | 0;
  $49 = $41;
  HEAP32[$49 >> 2] = HEAP32[$43 >> 2];
  HEAP32[$49 + 4 >> 2] = $48;
 }
 $53 = $this + 208 | 0;
 if (($53 | 0) != ($fsq | 0)) {
  $55 = $fsq;
  $60 = HEAP32[$55 + 4 >> 2] | 0;
  $61 = $53;
  HEAP32[$61 >> 2] = HEAP32[$55 >> 2];
  HEAP32[$61 + 4 >> 2] = $60;
 }
 __ZN5Oryol9CRTShader5SetupEv($1);
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 157, 80633);
  _abort();
 }
 __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_11ShaderSetupEEENS_2IdERKT_($crtShd, (HEAP32[36694] | 0) + 1168 | 0, $1);
 HEAP32[$1 + 3028 >> 2] = 0;
 HEAP32[$1 + 3016 >> 2] = 0;
 HEAP32[$1 + 3004 >> 2] = 0;
 HEAP32[$1 + 2992 >> 2] = 0;
 HEAP32[$1 + 2980 >> 2] = 0;
 HEAP32[$1 + 2968 >> 2] = 0;
 HEAP32[$1 + 2956 >> 2] = 0;
 HEAP32[$1 + 2944 >> 2] = 0;
 HEAP32[$1 + 2932 >> 2] = 0;
 HEAP32[$1 + 2920 >> 2] = 0;
 HEAP32[$1 + 2908 >> 2] = 0;
 HEAP32[$1 + 2896 >> 2] = 0;
 HEAP32[$1 + 2884 >> 2] = 0;
 HEAP32[$1 + 2872 >> 2] = 0;
 HEAP32[$1 + 2860 >> 2] = 0;
 HEAP32[$1 + 2848 >> 2] = 0;
 HEAP32[$1 + 2840 >> 2] = 0;
 HEAP32[$1 + 2824 >> 2] = 0;
 HEAP32[$1 + 2812 >> 2] = 0;
 HEAP32[$1 + 2800 >> 2] = 0;
 HEAP32[$1 + 2788 >> 2] = 0;
 HEAP32[$1 + 2776 >> 2] = 0;
 HEAP32[$1 + 2764 >> 2] = 0;
 HEAP32[$1 + 2752 >> 2] = 0;
 HEAP32[$1 + 2740 >> 2] = 0;
 HEAP32[$1 + 2728 >> 2] = 0;
 HEAP32[$1 + 2716 >> 2] = 0;
 HEAP32[$1 + 2704 >> 2] = 0;
 HEAP32[$1 + 2692 >> 2] = 0;
 HEAP32[$1 + 2680 >> 2] = 0;
 HEAP32[$1 + 2668 >> 2] = 0;
 HEAP32[$1 + 2656 >> 2] = 0;
 HEAP32[$1 + 2644 >> 2] = 0;
 HEAP32[$1 + 2636 >> 2] = 0;
 HEAP32[$1 + 2548 >> 2] = 0;
 HEAP32[$1 + 2536 >> 2] = 0;
 HEAP32[$1 + 2524 >> 2] = 0;
 HEAP32[$1 + 2512 >> 2] = 0;
 HEAP32[$1 + 2500 >> 2] = 0;
 HEAP32[$1 + 2488 >> 2] = 0;
 HEAP32[$1 + 2476 >> 2] = 0;
 HEAP32[$1 + 2464 >> 2] = 0;
 HEAP32[$1 + 2452 >> 2] = 0;
 HEAP32[$1 + 2440 >> 2] = 0;
 HEAP32[$1 + 2428 >> 2] = 0;
 HEAP32[$1 + 2416 >> 2] = 0;
 HEAP32[$1 + 2404 >> 2] = 0;
 HEAP32[$1 + 2392 >> 2] = 0;
 HEAP32[$1 + 2380 >> 2] = 0;
 HEAP32[$1 + 2368 >> 2] = 0;
 HEAP32[$1 + 2344 >> 2] = 0;
 HEAP32[$1 + 2260 >> 2] = 0;
 HEAP32[$1 + 2248 >> 2] = 0;
 HEAP32[$1 + 2236 >> 2] = 0;
 HEAP32[$1 + 2224 >> 2] = 0;
 HEAP32[$1 + 2212 >> 2] = 0;
 HEAP32[$1 + 2200 >> 2] = 0;
 HEAP32[$1 + 2188 >> 2] = 0;
 HEAP32[$1 + 2176 >> 2] = 0;
 HEAP32[$1 + 2164 >> 2] = 0;
 HEAP32[$1 + 2152 >> 2] = 0;
 HEAP32[$1 + 2140 >> 2] = 0;
 HEAP32[$1 + 2128 >> 2] = 0;
 HEAP32[$1 + 2116 >> 2] = 0;
 HEAP32[$1 + 2104 >> 2] = 0;
 HEAP32[$1 + 2092 >> 2] = 0;
 HEAP32[$1 + 2080 >> 2] = 0;
 HEAP32[$1 + 2056 >> 2] = 0;
 HEAP32[$1 + 1972 >> 2] = 0;
 HEAP32[$1 + 1960 >> 2] = 0;
 HEAP32[$1 + 1948 >> 2] = 0;
 HEAP32[$1 + 1936 >> 2] = 0;
 HEAP32[$1 + 1924 >> 2] = 0;
 HEAP32[$1 + 1912 >> 2] = 0;
 HEAP32[$1 + 1900 >> 2] = 0;
 HEAP32[$1 + 1888 >> 2] = 0;
 HEAP32[$1 + 1876 >> 2] = 0;
 HEAP32[$1 + 1864 >> 2] = 0;
 HEAP32[$1 + 1852 >> 2] = 0;
 HEAP32[$1 + 1840 >> 2] = 0;
 HEAP32[$1 + 1828 >> 2] = 0;
 HEAP32[$1 + 1816 >> 2] = 0;
 HEAP32[$1 + 1804 >> 2] = 0;
 HEAP32[$1 + 1792 >> 2] = 0;
 HEAP32[$1 + 1768 >> 2] = 0;
 HEAP32[$1 + 1684 >> 2] = 0;
 HEAP32[$1 + 1672 >> 2] = 0;
 HEAP32[$1 + 1660 >> 2] = 0;
 HEAP32[$1 + 1648 >> 2] = 0;
 HEAP32[$1 + 1636 >> 2] = 0;
 HEAP32[$1 + 1624 >> 2] = 0;
 HEAP32[$1 + 1612 >> 2] = 0;
 HEAP32[$1 + 1600 >> 2] = 0;
 HEAP32[$1 + 1588 >> 2] = 0;
 HEAP32[$1 + 1576 >> 2] = 0;
 HEAP32[$1 + 1564 >> 2] = 0;
 HEAP32[$1 + 1552 >> 2] = 0;
 HEAP32[$1 + 1540 >> 2] = 0;
 HEAP32[$1 + 1528 >> 2] = 0;
 HEAP32[$1 + 1516 >> 2] = 0;
 HEAP32[$1 + 1504 >> 2] = 0;
 HEAP32[$1 + 1480 >> 2] = 0;
 HEAP32[$1 + 1396 >> 2] = 0;
 HEAP32[$1 + 1384 >> 2] = 0;
 HEAP32[$1 + 1372 >> 2] = 0;
 HEAP32[$1 + 1360 >> 2] = 0;
 HEAP32[$1 + 1348 >> 2] = 0;
 HEAP32[$1 + 1336 >> 2] = 0;
 HEAP32[$1 + 1324 >> 2] = 0;
 HEAP32[$1 + 1312 >> 2] = 0;
 HEAP32[$1 + 1300 >> 2] = 0;
 HEAP32[$1 + 1288 >> 2] = 0;
 HEAP32[$1 + 1276 >> 2] = 0;
 HEAP32[$1 + 1264 >> 2] = 0;
 HEAP32[$1 + 1252 >> 2] = 0;
 HEAP32[$1 + 1240 >> 2] = 0;
 HEAP32[$1 + 1228 >> 2] = 0;
 HEAP32[$1 + 1216 >> 2] = 0;
 HEAP32[$1 + 1192 >> 2] = 0;
 HEAP32[$1 + 1108 >> 2] = 0;
 HEAP32[$1 + 1096 >> 2] = 0;
 HEAP32[$1 + 1084 >> 2] = 0;
 HEAP32[$1 + 1072 >> 2] = 0;
 HEAP32[$1 + 1060 >> 2] = 0;
 HEAP32[$1 + 1048 >> 2] = 0;
 HEAP32[$1 + 1036 >> 2] = 0;
 HEAP32[$1 + 1024 >> 2] = 0;
 HEAP32[$1 + 1012 >> 2] = 0;
 HEAP32[$1 + 1e3 >> 2] = 0;
 HEAP32[$1 + 988 >> 2] = 0;
 HEAP32[$1 + 976 >> 2] = 0;
 HEAP32[$1 + 964 >> 2] = 0;
 HEAP32[$1 + 952 >> 2] = 0;
 HEAP32[$1 + 940 >> 2] = 0;
 HEAP32[$1 + 928 >> 2] = 0;
 HEAP32[$1 + 904 >> 2] = 0;
 HEAP32[$1 + 820 >> 2] = 0;
 HEAP32[$1 + 808 >> 2] = 0;
 HEAP32[$1 + 796 >> 2] = 0;
 HEAP32[$1 + 784 >> 2] = 0;
 HEAP32[$1 + 772 >> 2] = 0;
 HEAP32[$1 + 760 >> 2] = 0;
 HEAP32[$1 + 748 >> 2] = 0;
 HEAP32[$1 + 736 >> 2] = 0;
 HEAP32[$1 + 724 >> 2] = 0;
 HEAP32[$1 + 712 >> 2] = 0;
 HEAP32[$1 + 700 >> 2] = 0;
 HEAP32[$1 + 688 >> 2] = 0;
 HEAP32[$1 + 676 >> 2] = 0;
 HEAP32[$1 + 664 >> 2] = 0;
 HEAP32[$1 + 652 >> 2] = 0;
 HEAP32[$1 + 640 >> 2] = 0;
 HEAP32[$1 + 616 >> 2] = 0;
 HEAP32[$1 + 532 >> 2] = 0;
 HEAP32[$1 + 520 >> 2] = 0;
 HEAP32[$1 + 508 >> 2] = 0;
 HEAP32[$1 + 496 >> 2] = 0;
 HEAP32[$1 + 484 >> 2] = 0;
 HEAP32[$1 + 472 >> 2] = 0;
 HEAP32[$1 + 460 >> 2] = 0;
 HEAP32[$1 + 448 >> 2] = 0;
 HEAP32[$1 + 436 >> 2] = 0;
 HEAP32[$1 + 424 >> 2] = 0;
 HEAP32[$1 + 412 >> 2] = 0;
 HEAP32[$1 + 400 >> 2] = 0;
 HEAP32[$1 + 388 >> 2] = 0;
 HEAP32[$1 + 376 >> 2] = 0;
 HEAP32[$1 + 364 >> 2] = 0;
 HEAP32[$1 + 352 >> 2] = 0;
 HEAP32[$1 + 328 >> 2] = 0;
 __ZN5Oryol11ShaderSetup12programEntryD2Ev($1 + 16 | 0);
 HEAP32[$1 >> 2] = 0;
 __ZN5Oryol11NoCRTShader5SetupEv($2);
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 157, 80633);
  _abort();
 }
 __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_11ShaderSetupEEENS_2IdERKT_($nocrtShd, (HEAP32[36694] | 0) + 1168 | 0, $2);
 HEAP32[$2 + 3028 >> 2] = 0;
 HEAP32[$2 + 3016 >> 2] = 0;
 HEAP32[$2 + 3004 >> 2] = 0;
 HEAP32[$2 + 2992 >> 2] = 0;
 HEAP32[$2 + 2980 >> 2] = 0;
 HEAP32[$2 + 2968 >> 2] = 0;
 HEAP32[$2 + 2956 >> 2] = 0;
 HEAP32[$2 + 2944 >> 2] = 0;
 HEAP32[$2 + 2932 >> 2] = 0;
 HEAP32[$2 + 2920 >> 2] = 0;
 HEAP32[$2 + 2908 >> 2] = 0;
 HEAP32[$2 + 2896 >> 2] = 0;
 HEAP32[$2 + 2884 >> 2] = 0;
 HEAP32[$2 + 2872 >> 2] = 0;
 HEAP32[$2 + 2860 >> 2] = 0;
 HEAP32[$2 + 2848 >> 2] = 0;
 HEAP32[$2 + 2840 >> 2] = 0;
 HEAP32[$2 + 2824 >> 2] = 0;
 HEAP32[$2 + 2812 >> 2] = 0;
 HEAP32[$2 + 2800 >> 2] = 0;
 HEAP32[$2 + 2788 >> 2] = 0;
 HEAP32[$2 + 2776 >> 2] = 0;
 HEAP32[$2 + 2764 >> 2] = 0;
 HEAP32[$2 + 2752 >> 2] = 0;
 HEAP32[$2 + 2740 >> 2] = 0;
 HEAP32[$2 + 2728 >> 2] = 0;
 HEAP32[$2 + 2716 >> 2] = 0;
 HEAP32[$2 + 2704 >> 2] = 0;
 HEAP32[$2 + 2692 >> 2] = 0;
 HEAP32[$2 + 2680 >> 2] = 0;
 HEAP32[$2 + 2668 >> 2] = 0;
 HEAP32[$2 + 2656 >> 2] = 0;
 HEAP32[$2 + 2644 >> 2] = 0;
 HEAP32[$2 + 2636 >> 2] = 0;
 HEAP32[$2 + 2548 >> 2] = 0;
 HEAP32[$2 + 2536 >> 2] = 0;
 HEAP32[$2 + 2524 >> 2] = 0;
 HEAP32[$2 + 2512 >> 2] = 0;
 HEAP32[$2 + 2500 >> 2] = 0;
 HEAP32[$2 + 2488 >> 2] = 0;
 HEAP32[$2 + 2476 >> 2] = 0;
 HEAP32[$2 + 2464 >> 2] = 0;
 HEAP32[$2 + 2452 >> 2] = 0;
 HEAP32[$2 + 2440 >> 2] = 0;
 HEAP32[$2 + 2428 >> 2] = 0;
 HEAP32[$2 + 2416 >> 2] = 0;
 HEAP32[$2 + 2404 >> 2] = 0;
 HEAP32[$2 + 2392 >> 2] = 0;
 HEAP32[$2 + 2380 >> 2] = 0;
 HEAP32[$2 + 2368 >> 2] = 0;
 HEAP32[$2 + 2344 >> 2] = 0;
 HEAP32[$2 + 2260 >> 2] = 0;
 HEAP32[$2 + 2248 >> 2] = 0;
 HEAP32[$2 + 2236 >> 2] = 0;
 HEAP32[$2 + 2224 >> 2] = 0;
 HEAP32[$2 + 2212 >> 2] = 0;
 HEAP32[$2 + 2200 >> 2] = 0;
 HEAP32[$2 + 2188 >> 2] = 0;
 HEAP32[$2 + 2176 >> 2] = 0;
 HEAP32[$2 + 2164 >> 2] = 0;
 HEAP32[$2 + 2152 >> 2] = 0;
 HEAP32[$2 + 2140 >> 2] = 0;
 HEAP32[$2 + 2128 >> 2] = 0;
 HEAP32[$2 + 2116 >> 2] = 0;
 HEAP32[$2 + 2104 >> 2] = 0;
 HEAP32[$2 + 2092 >> 2] = 0;
 HEAP32[$2 + 2080 >> 2] = 0;
 HEAP32[$2 + 2056 >> 2] = 0;
 HEAP32[$2 + 1972 >> 2] = 0;
 HEAP32[$2 + 1960 >> 2] = 0;
 HEAP32[$2 + 1948 >> 2] = 0;
 HEAP32[$2 + 1936 >> 2] = 0;
 HEAP32[$2 + 1924 >> 2] = 0;
 HEAP32[$2 + 1912 >> 2] = 0;
 HEAP32[$2 + 1900 >> 2] = 0;
 HEAP32[$2 + 1888 >> 2] = 0;
 HEAP32[$2 + 1876 >> 2] = 0;
 HEAP32[$2 + 1864 >> 2] = 0;
 HEAP32[$2 + 1852 >> 2] = 0;
 HEAP32[$2 + 1840 >> 2] = 0;
 HEAP32[$2 + 1828 >> 2] = 0;
 HEAP32[$2 + 1816 >> 2] = 0;
 HEAP32[$2 + 1804 >> 2] = 0;
 HEAP32[$2 + 1792 >> 2] = 0;
 HEAP32[$2 + 1768 >> 2] = 0;
 HEAP32[$2 + 1684 >> 2] = 0;
 HEAP32[$2 + 1672 >> 2] = 0;
 HEAP32[$2 + 1660 >> 2] = 0;
 HEAP32[$2 + 1648 >> 2] = 0;
 HEAP32[$2 + 1636 >> 2] = 0;
 HEAP32[$2 + 1624 >> 2] = 0;
 HEAP32[$2 + 1612 >> 2] = 0;
 HEAP32[$2 + 1600 >> 2] = 0;
 HEAP32[$2 + 1588 >> 2] = 0;
 HEAP32[$2 + 1576 >> 2] = 0;
 HEAP32[$2 + 1564 >> 2] = 0;
 HEAP32[$2 + 1552 >> 2] = 0;
 HEAP32[$2 + 1540 >> 2] = 0;
 HEAP32[$2 + 1528 >> 2] = 0;
 HEAP32[$2 + 1516 >> 2] = 0;
 HEAP32[$2 + 1504 >> 2] = 0;
 HEAP32[$2 + 1480 >> 2] = 0;
 HEAP32[$2 + 1396 >> 2] = 0;
 HEAP32[$2 + 1384 >> 2] = 0;
 HEAP32[$2 + 1372 >> 2] = 0;
 HEAP32[$2 + 1360 >> 2] = 0;
 HEAP32[$2 + 1348 >> 2] = 0;
 HEAP32[$2 + 1336 >> 2] = 0;
 HEAP32[$2 + 1324 >> 2] = 0;
 HEAP32[$2 + 1312 >> 2] = 0;
 HEAP32[$2 + 1300 >> 2] = 0;
 HEAP32[$2 + 1288 >> 2] = 0;
 HEAP32[$2 + 1276 >> 2] = 0;
 HEAP32[$2 + 1264 >> 2] = 0;
 HEAP32[$2 + 1252 >> 2] = 0;
 HEAP32[$2 + 1240 >> 2] = 0;
 HEAP32[$2 + 1228 >> 2] = 0;
 HEAP32[$2 + 1216 >> 2] = 0;
 HEAP32[$2 + 1192 >> 2] = 0;
 HEAP32[$2 + 1108 >> 2] = 0;
 HEAP32[$2 + 1096 >> 2] = 0;
 HEAP32[$2 + 1084 >> 2] = 0;
 HEAP32[$2 + 1072 >> 2] = 0;
 HEAP32[$2 + 1060 >> 2] = 0;
 HEAP32[$2 + 1048 >> 2] = 0;
 HEAP32[$2 + 1036 >> 2] = 0;
 HEAP32[$2 + 1024 >> 2] = 0;
 HEAP32[$2 + 1012 >> 2] = 0;
 HEAP32[$2 + 1e3 >> 2] = 0;
 HEAP32[$2 + 988 >> 2] = 0;
 HEAP32[$2 + 976 >> 2] = 0;
 HEAP32[$2 + 964 >> 2] = 0;
 HEAP32[$2 + 952 >> 2] = 0;
 HEAP32[$2 + 940 >> 2] = 0;
 HEAP32[$2 + 928 >> 2] = 0;
 HEAP32[$2 + 904 >> 2] = 0;
 HEAP32[$2 + 820 >> 2] = 0;
 HEAP32[$2 + 808 >> 2] = 0;
 HEAP32[$2 + 796 >> 2] = 0;
 HEAP32[$2 + 784 >> 2] = 0;
 HEAP32[$2 + 772 >> 2] = 0;
 HEAP32[$2 + 760 >> 2] = 0;
 HEAP32[$2 + 748 >> 2] = 0;
 HEAP32[$2 + 736 >> 2] = 0;
 HEAP32[$2 + 724 >> 2] = 0;
 HEAP32[$2 + 712 >> 2] = 0;
 HEAP32[$2 + 700 >> 2] = 0;
 HEAP32[$2 + 688 >> 2] = 0;
 HEAP32[$2 + 676 >> 2] = 0;
 HEAP32[$2 + 664 >> 2] = 0;
 HEAP32[$2 + 652 >> 2] = 0;
 HEAP32[$2 + 640 >> 2] = 0;
 HEAP32[$2 + 616 >> 2] = 0;
 HEAP32[$2 + 532 >> 2] = 0;
 HEAP32[$2 + 520 >> 2] = 0;
 HEAP32[$2 + 508 >> 2] = 0;
 HEAP32[$2 + 496 >> 2] = 0;
 HEAP32[$2 + 484 >> 2] = 0;
 HEAP32[$2 + 472 >> 2] = 0;
 HEAP32[$2 + 460 >> 2] = 0;
 HEAP32[$2 + 448 >> 2] = 0;
 HEAP32[$2 + 436 >> 2] = 0;
 HEAP32[$2 + 424 >> 2] = 0;
 HEAP32[$2 + 412 >> 2] = 0;
 HEAP32[$2 + 400 >> 2] = 0;
 HEAP32[$2 + 388 >> 2] = 0;
 HEAP32[$2 + 376 >> 2] = 0;
 HEAP32[$2 + 364 >> 2] = 0;
 HEAP32[$2 + 352 >> 2] = 0;
 HEAP32[$2 + 328 >> 2] = 0;
 __ZN5Oryol11ShaderSetup12programEntryD2Ev($2 + 16 | 0);
 HEAP32[$2 >> 2] = 0;
 __ZN5Oryol13PipelineSetup19FromLayoutAndShaderERKNS_12VertexLayoutERKNS_2IdE($pips, $fsqSetup + 8 | 0, $crtShd);
 $414 = $pips + 36 | 0;
 HEAP16[$414 >> 1] = HEAP16[$414 >> 1] & -64 | 7;
 $420 = $pips + 8 | 0;
 $$lo = HEAP32[$420 >> 2] | 0;
 $421 = HEAPU16[$420 + 4 >> 1] | 0;
 $422 = _bitshift64Shl(HEAP32[$gfxSetup + 8 >> 2] | 0, 0, 31) | 0;
 $429 = tempRet0 & 15 | $421 & 65024;
 _bitshift64Shl(HEAP32[$gfxSetup + 12 >> 2] | 0, 0, 36) | 0;
 HEAP32[$420 >> 2] = $422 & -2147483648 | $$lo & 2147483647;
 HEAP16[$420 + 4 >> 1] = tempRet0 & 496 | $429;
 $439 = $pips + 40 | 0;
 HEAP16[$439 >> 1] = (HEAP32[$gfxSetup + 16 >> 2] & 65535) << 8 & 3840 | HEAP16[$439 >> 1] & -3841;
 $445 = $this + 16 | 0;
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 157, 80721);
  _abort();
 }
 __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_13PipelineSetupEEENS_2IdERKT_($3, (HEAP32[36694] | 0) + 1168 | 0, $pips);
 if (($445 | 0) != ($3 | 0)) {
  $450 = $3;
  $455 = HEAP32[$450 + 4 >> 2] | 0;
  $456 = $445;
  HEAP32[$456 >> 2] = HEAP32[$450 >> 2];
  HEAP32[$456 + 4 >> 2] = $455;
 }
 $460 = $nocrtShd;
 $465 = HEAP32[$460 + 4 >> 2] | 0;
 $467 = $pips + 320 | 0;
 HEAP32[$467 >> 2] = HEAP32[$460 >> 2];
 HEAP32[$467 + 4 >> 2] = $465;
 $471 = $this + 200 | 0;
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 157, 80721);
  _abort();
 }
 __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_13PipelineSetupEEENS_2IdERKT_($4, (HEAP32[36694] | 0) + 1168 | 0, $pips);
 if (($471 | 0) == ($4 | 0)) {
  $486 = $this + 192 | 0;
  HEAP32[$486 >> 2] = 1;
  $487 = $this + 376 | 0;
  HEAP32[$487 >> 2] = 1;
  STACKTOP = sp;
  return;
 }
 $476 = $4;
 $481 = HEAP32[$476 + 4 >> 2] | 0;
 $482 = $471;
 HEAP32[$482 >> 2] = HEAP32[$476 >> 2];
 HEAP32[$482 + 4 >> 2] = $481;
 $486 = $this + 192 | 0;
 HEAP32[$486 >> 2] = 1;
 $487 = $this + 376 | 0;
 HEAP32[$487 >> 2] = 1;
 STACKTOP = sp;
 return;
}

function __ZNK6ImFont10RenderTextEf6ImVec2jRK6ImVec4PKcS5_P10ImDrawListfb($this, $size, $pos, $col, $clip_rect, $text_begin, $text_end, $draw_list, $wrap_width, $cpu_fine_clip) {
 $this = $this | 0;
 $size = +$size;
 $pos = $pos | 0;
 $col = $col | 0;
 $clip_rect = $clip_rect | 0;
 $text_begin = $text_begin | 0;
 $text_end = $text_end | 0;
 $draw_list = $draw_list | 0;
 $wrap_width = +$wrap_width;
 $cpu_fine_clip = $cpu_fine_clip | 0;
 var $$0 = 0, $$1$i = 0, $$lcssa = 0, $100 = 0.0, $102 = 0.0, $105 = 0.0, $107 = 0.0, $109 = 0.0, $111 = 0.0, $120 = 0.0, $136 = 0.0, $145 = 0, $15 = 0.0, $150 = 0, $16 = 0, $186 = 0, $19 = 0.0, $193 = 0, $194 = 0, $195 = 0, $20 = 0.0, $21 = 0.0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $51 = 0, $52 = 0, $55 = 0, $56 = 0.0, $57 = 0.0, $66 = 0, $68 = 0, $73 = 0, $8 = 0.0, $83 = 0.0, $87 = 0.0, $9 = 0, $91 = 0.0, $95 = 0.0, $99 = 0.0, $c1 = 0, $char_width$1$ph = 0.0, $idx_write$0$ph25 = 0, $idx_write$0$ph52 = 0, $idx_write$0$ph52$lcssa151 = 0, $idx_write$5$ph = 0, $idx_write$6$ph = 0, $s$061 = 0, $s$1$be$us = 0, $s$1$lcssa18 = 0, $s$1$ph = 0, $s$1$ph1456 = 0, $s$134$us = 0, $s$231$us = 0, $s$231$us$lcssa = 0, $s$4 = 0, $s$543 = 0, $s$7$ph = 0, $u1$0 = 0.0, $u1$1 = 0.0, $u2$0 = 0.0, $u2$1 = 0.0, $v1$0 = 0.0, $v1$1 = 0.0, $v2$0 = 0.0, $v2$1 = 0.0, $vtx_current_idx$0$ph28 = 0, $vtx_current_idx$0$ph54 = 0, $vtx_current_idx$0$ph54$lcssa148 = 0, $vtx_current_idx$5$ph = 0, $vtx_current_idx$6$ph = 0, $vtx_write$0$ph22 = 0, $vtx_write$0$ph50 = 0, $vtx_write$0$ph50$lcssa154 = 0, $vtx_write$5$ph = 0, $vtx_write$6$ph = 0, $word_wrap_eol$0$ph49 = 0, $word_wrap_eol$033$us = 0, $word_wrap_eol$1$us = 0, $word_wrap_eol$2 = 0, $x$0$lcssa19 = 0.0, $x$0$ph57 = 0.0, $x$035$us = 0.0, $x$7$ph = 0.0, $x1$0 = 0.0, $x1$1 = 0.0, $x2$0 = 0.0, $x2$1 = 0.0, $y$0$lcssa17 = 0.0, $y$0$ph48 = 0.0, $y$032$us = 0.0, $y$1$ph = 0.0, $y1$0 = 0.0, $y1$1 = 0.0, $y2$0 = 0.0, $y2$1 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c1 = sp;
 if (!$text_end) $$0 = $text_begin + (_strlen($text_begin) | 0) | 0; else $$0 = $text_end;
 $8 = +HEAPF32[$this + 8 >> 2] + +(~~+HEAPF32[$pos >> 2] | 0);
 HEAPF32[$pos >> 2] = $8;
 $9 = $pos + 4 | 0;
 $15 = +HEAPF32[$this + 12 >> 2] + +(~~+HEAPF32[$9 >> 2] | 0);
 HEAPF32[$9 >> 2] = $15;
 $16 = $clip_rect + 12 | 0;
 if ($15 > +HEAPF32[$16 >> 2]) {
  STACKTOP = sp;
  return;
 }
 $19 = +HEAPF32[$this >> 2];
 $20 = $size / $19;
 $21 = $19 * $20;
 $22 = $wrap_width > 0.0;
 $23 = $draw_list + 44 | 0;
 $24 = HEAP32[$23 >> 2] | 0;
 $25 = $draw_list + 48 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 $27 = $draw_list + 40 | 0;
 $28 = HEAP32[$27 >> 2] | 0;
 L7 : do if ($22) $s$1$ph = $text_begin; else if ($$0 >>> 0 > $text_begin >>> 0 ? $15 + $21 < +HEAPF32[$clip_rect + 4 >> 2] : 0) {
  $s$061 = $text_begin;
  while (1) {
   if ((HEAP8[$s$061 >> 0] | 0) == 10) {
    $s$1$ph = $s$061;
    break L7;
   }
   $44 = $s$061 + 1 | 0;
   if ($44 >>> 0 < $$0 >>> 0) $s$061 = $44; else {
    $s$1$ph = $44;
    break;
   }
  }
 } else $s$1$ph = $text_begin; while (0);
 L13 : do if ($s$1$ph >>> 0 < $$0 >>> 0) {
  $37 = $clip_rect + 4 | 0;
  $38 = $this + 72 | 0;
  $39 = $this + 80 | 0;
  $40 = $this + 40 | 0;
  $41 = $this + 48 | 0;
  $42 = $this + 52 | 0;
  $43 = $clip_rect + 8 | 0;
  $idx_write$0$ph52 = $26;
  $s$1$ph1456 = $s$1$ph;
  $vtx_current_idx$0$ph54 = $28;
  $vtx_write$0$ph50 = $24;
  $word_wrap_eol$0$ph49 = 0;
  $x$0$ph57 = $8;
  $y$0$ph48 = $15;
  L15 : while (1) {
   L17 : do if ($22) {
    $s$134$us = $s$1$ph1456;
    $word_wrap_eol$033$us = $word_wrap_eol$0$ph49;
    $x$035$us = $x$0$ph57;
    $y$032$us = $y$0$ph48;
    while (1) {
     if (!$word_wrap_eol$033$us) {
      $186 = __ZNK6ImFont21CalcWordWrapPositionAEfPKcS1_f($this, $20, $s$134$us, $$0, $wrap_width - ($x$035$us - +HEAPF32[$pos >> 2])) | 0;
      $word_wrap_eol$1$us = ($186 | 0) == ($s$134$us | 0) ? $186 + 1 | 0 : $186;
     } else $word_wrap_eol$1$us = $word_wrap_eol$033$us;
     if ($s$134$us >>> 0 < $word_wrap_eol$1$us >>> 0) {
      $s$1$lcssa18 = $s$134$us;
      $word_wrap_eol$2 = $word_wrap_eol$1$us;
      $x$0$lcssa19 = $x$035$us;
      $y$0$lcssa17 = $y$032$us;
      break L17;
     }
     $x$035$us = +HEAPF32[$pos >> 2];
     $y$032$us = $21 + $y$032$us;
     L24 : do if ($s$134$us >>> 0 < $$0 >>> 0) {
      $s$231$us = $s$134$us;
      L25 : while (1) {
       $193 = HEAP8[$s$231$us >> 0] | 0;
       $194 = $193 << 24 >> 24;
       L27 : do if (($194 | 0) < 32) switch ($194 | 0) {
       case 9:
        break;
       default:
        {
         $$lcssa = $193;
         $s$231$us$lcssa = $s$231$us;
         break L25;
        }
       } else if (($194 | 0) < 12288) switch ($194 | 0) {
       case 32:
        {
         break L27;
         break;
        }
       default:
        {
         $$lcssa = $193;
         $s$231$us$lcssa = $s$231$us;
         break L25;
        }
       } else switch ($194 | 0) {
       case 12288:
        {
         break L27;
         break;
        }
       default:
        {
         $$lcssa = $193;
         $s$231$us$lcssa = $s$231$us;
         break L25;
        }
       } while (0);
       $195 = $s$231$us + 1 | 0;
       if ($195 >>> 0 < $$0 >>> 0) $s$231$us = $195; else {
        $s$1$be$us = $195;
        break L24;
       }
      }
      $s$1$be$us = $$lcssa << 24 >> 24 == 10 ? $s$231$us$lcssa + 1 | 0 : $s$231$us$lcssa;
     } else $s$1$be$us = $s$134$us; while (0);
     if ($s$1$be$us >>> 0 >= $$0 >>> 0) {
      $idx_write$0$ph25 = $idx_write$0$ph52;
      $vtx_current_idx$0$ph28 = $vtx_current_idx$0$ph54;
      $vtx_write$0$ph22 = $vtx_write$0$ph50;
      break L13;
     } else {
      $s$134$us = $s$1$be$us;
      $word_wrap_eol$033$us = 0;
     }
    }
   } else {
    $s$1$lcssa18 = $s$1$ph1456;
    $word_wrap_eol$2 = $word_wrap_eol$0$ph49;
    $x$0$lcssa19 = $x$0$ph57;
    $y$0$lcssa17 = $y$0$ph48;
   } while (0);
   $46 = HEAP8[$s$1$lcssa18 >> 0] | 0;
   $47 = $46 << 24 >> 24;
   HEAP32[$c1 >> 2] = $47;
   if ($46 << 24 >> 24 > -1) {
    $55 = $47;
    $s$4 = $s$1$lcssa18 + 1 | 0;
   } else {
    $51 = $s$1$lcssa18 + (__Z18ImTextCharFromUtf8PjPKcS1_($c1, $s$1$lcssa18, $$0) | 0) | 0;
    $52 = HEAP32[$c1 >> 2] | 0;
    if (!$52) {
     $idx_write$0$ph52$lcssa151 = $idx_write$0$ph52;
     $vtx_current_idx$0$ph54$lcssa148 = $vtx_current_idx$0$ph54;
     $vtx_write$0$ph50$lcssa154 = $vtx_write$0$ph50;
     label = 53;
     break;
    } else {
     $55 = $52;
     $s$4 = $51;
    }
   }
   L41 : do if ($55 >>> 0 < 32) {
    switch ($55 | 0) {
    case 13:
     {
      $idx_write$6$ph = $idx_write$0$ph52;
      $s$7$ph = $s$4;
      $vtx_current_idx$6$ph = $vtx_current_idx$0$ph54;
      $vtx_write$6$ph = $vtx_write$0$ph50;
      $x$7$ph = $x$0$lcssa19;
      $y$1$ph = $y$0$lcssa17;
      break L41;
      break;
     }
    case 10:
     break;
    default:
     {
      label = 20;
      break L41;
     }
    }
    $56 = +HEAPF32[$pos >> 2];
    $57 = $21 + $y$0$lcssa17;
    if ($57 > +HEAPF32[$16 >> 2]) {
     $idx_write$0$ph52$lcssa151 = $idx_write$0$ph52;
     $vtx_current_idx$0$ph54$lcssa148 = $vtx_current_idx$0$ph54;
     $vtx_write$0$ph50$lcssa154 = $vtx_write$0$ph50;
     label = 53;
     break L15;
    }
    if ($22) {
     $idx_write$6$ph = $idx_write$0$ph52;
     $s$7$ph = $s$4;
     $vtx_current_idx$6$ph = $vtx_current_idx$0$ph54;
     $vtx_write$6$ph = $vtx_write$0$ph50;
     $x$7$ph = $56;
     $y$1$ph = $57;
    } else if ($s$4 >>> 0 < $$0 >>> 0 ? $21 + $57 < +HEAPF32[$37 >> 2] : 0) {
     $s$543 = $s$4;
     while (1) {
      if ((HEAP8[$s$543 >> 0] | 0) == 10) {
       $idx_write$6$ph = $idx_write$0$ph52;
       $s$7$ph = $s$543;
       $vtx_current_idx$6$ph = $vtx_current_idx$0$ph54;
       $vtx_write$6$ph = $vtx_write$0$ph50;
       $x$7$ph = $56;
       $y$1$ph = $57;
       break L41;
      }
      $66 = $s$543 + 1 | 0;
      if ($66 >>> 0 < $$0 >>> 0) $s$543 = $66; else {
       $idx_write$6$ph = $idx_write$0$ph52;
       $s$7$ph = $66;
       $vtx_current_idx$6$ph = $vtx_current_idx$0$ph54;
       $vtx_write$6$ph = $vtx_write$0$ph50;
       $x$7$ph = $56;
       $y$1$ph = $57;
       break;
      }
     }
    } else {
     $idx_write$6$ph = $idx_write$0$ph52;
     $s$7$ph = $s$4;
     $vtx_current_idx$6$ph = $vtx_current_idx$0$ph54;
     $vtx_write$6$ph = $vtx_write$0$ph50;
     $x$7$ph = $56;
     $y$1$ph = $57;
    }
   } else label = 20; while (0);
   L49 : do if ((label | 0) == 20) {
    label = 0;
    $68 = $55 & 65535;
    if (($68 | 0) < (HEAP32[$38 >> 2] | 0)) {
     $73 = HEAP32[(HEAP32[$39 >> 2] | 0) + ($68 << 2) >> 2] | 0;
     if (($73 | 0) == -1) label = 25; else {
      if ((HEAP32[$40 >> 2] | 0) <= ($73 | 0)) {
       label = 23;
       break L15;
      }
      $$1$i = (HEAP32[$41 >> 2] | 0) + ($73 * 40 | 0) | 0;
     }
    } else label = 25;
    if ((label | 0) == 25) {
     label = 0;
     $$1$i = HEAP32[$42 >> 2] | 0;
    }
    L58 : do if (!$$1$i) {
     $char_width$1$ph = 0.0;
     $idx_write$5$ph = $idx_write$0$ph52;
     $vtx_current_idx$5$ph = $vtx_current_idx$0$ph54;
     $vtx_write$5$ph = $vtx_write$0$ph50;
    } else {
     $83 = $20 * +HEAPF32[$$1$i + 4 >> 2];
     switch ($55 | 0) {
     case 9:
     case 32:
      {
       $char_width$1$ph = $83;
       $idx_write$5$ph = $idx_write$0$ph52;
       $vtx_current_idx$5$ph = $vtx_current_idx$0$ph54;
       $vtx_write$5$ph = $vtx_write$0$ph50;
       break L58;
       break;
      }
     default:
      {}
     }
     $87 = $y$0$lcssa17 + $20 * +HEAPF32[$$1$i + 12 >> 2];
     $91 = $y$0$lcssa17 + $20 * +HEAPF32[$$1$i + 20 >> 2];
     $95 = $x$0$lcssa19 + $20 * +HEAPF32[$$1$i + 8 >> 2];
     $99 = $x$0$lcssa19 + $20 * +HEAPF32[$$1$i + 16 >> 2];
     $100 = +HEAPF32[$43 >> 2];
     if (!($95 <= $100)) {
      $char_width$1$ph = $83;
      $idx_write$5$ph = $idx_write$0$ph52;
      $vtx_current_idx$5$ph = $vtx_current_idx$0$ph54;
      $vtx_write$5$ph = $vtx_write$0$ph50;
     } else {
      $102 = +HEAPF32[$clip_rect >> 2];
      if (!($99 >= $102)) {
       $char_width$1$ph = $83;
       $idx_write$5$ph = $idx_write$0$ph52;
       $vtx_current_idx$5$ph = $vtx_current_idx$0$ph54;
       $vtx_write$5$ph = $vtx_write$0$ph50;
      } else {
       $105 = +HEAPF32[$$1$i + 24 >> 2];
       $107 = +HEAPF32[$$1$i + 28 >> 2];
       $109 = +HEAPF32[$$1$i + 32 >> 2];
       $111 = +HEAPF32[$$1$i + 36 >> 2];
       do if ($cpu_fine_clip) {
        if ($95 < $102) {
         $u1$0 = $105 + (1.0 - ($99 - $102) / ($99 - $95)) * ($109 - $105);
         $x1$0 = $102;
        } else {
         $u1$0 = $105;
         $x1$0 = $95;
        }
        $120 = +HEAPF32[$37 >> 2];
        if ($87 < $120) {
         $v1$0 = $107 + ($111 - $107) * (1.0 - ($91 - $120) / ($91 - $87));
         $y1$0 = $120;
        } else {
         $v1$0 = $107;
         $y1$0 = $87;
        }
        if ($99 > $100) {
         $u2$0 = $u1$0 + ($109 - $u1$0) * (($100 - $x1$0) / ($99 - $x1$0));
         $x2$0 = $100;
        } else {
         $u2$0 = $109;
         $x2$0 = $99;
        }
        $136 = +HEAPF32[$16 >> 2];
        if ($91 > $136) {
         $v2$0 = $v1$0 + ($111 - $v1$0) * (($136 - $y1$0) / ($91 - $y1$0));
         $y2$0 = $136;
        } else {
         $v2$0 = $111;
         $y2$0 = $91;
        }
        if (!($y1$0 >= $y2$0)) {
         $u1$1 = $u1$0;
         $u2$1 = $u2$0;
         $v1$1 = $v1$0;
         $v2$1 = $v2$0;
         $x1$1 = $x1$0;
         $x2$1 = $x2$0;
         $y1$1 = $y1$0;
         $y2$1 = $y2$0;
         break;
        }
        $idx_write$6$ph = $idx_write$0$ph52;
        $s$7$ph = $s$4;
        $vtx_current_idx$6$ph = $vtx_current_idx$0$ph54;
        $vtx_write$6$ph = $vtx_write$0$ph50;
        $x$7$ph = $x$0$lcssa19 + $83;
        $y$1$ph = $y$0$lcssa17;
        break L49;
       } else {
        $u1$1 = $105;
        $u2$1 = $109;
        $v1$1 = $107;
        $v2$1 = $111;
        $x1$1 = $95;
        $x2$1 = $99;
        $y1$1 = $87;
        $y2$1 = $91;
       } while (0);
       $145 = $vtx_current_idx$0$ph54 & 65535;
       HEAP16[$idx_write$0$ph52 >> 1] = $145;
       HEAP16[$idx_write$0$ph52 + 2 >> 1] = $vtx_current_idx$0$ph54 + 1;
       $150 = $vtx_current_idx$0$ph54 + 2 & 65535;
       HEAP16[$idx_write$0$ph52 + 4 >> 1] = $150;
       HEAP16[$idx_write$0$ph52 + 6 >> 1] = $145;
       HEAP16[$idx_write$0$ph52 + 8 >> 1] = $150;
       HEAP16[$idx_write$0$ph52 + 10 >> 1] = $vtx_current_idx$0$ph54 + 3;
       HEAPF32[$vtx_write$0$ph50 >> 2] = $x1$1;
       HEAPF32[$vtx_write$0$ph50 + 4 >> 2] = $y1$1;
       HEAP32[$vtx_write$0$ph50 + 16 >> 2] = $col;
       HEAPF32[$vtx_write$0$ph50 + 8 >> 2] = $u1$1;
       HEAPF32[$vtx_write$0$ph50 + 12 >> 2] = $v1$1;
       HEAPF32[$vtx_write$0$ph50 + 20 >> 2] = $x2$1;
       HEAPF32[$vtx_write$0$ph50 + 24 >> 2] = $y1$1;
       HEAP32[$vtx_write$0$ph50 + 36 >> 2] = $col;
       HEAPF32[$vtx_write$0$ph50 + 28 >> 2] = $u2$1;
       HEAPF32[$vtx_write$0$ph50 + 32 >> 2] = $v1$1;
       HEAPF32[$vtx_write$0$ph50 + 40 >> 2] = $x2$1;
       HEAPF32[$vtx_write$0$ph50 + 44 >> 2] = $y2$1;
       HEAP32[$vtx_write$0$ph50 + 56 >> 2] = $col;
       HEAPF32[$vtx_write$0$ph50 + 48 >> 2] = $u2$1;
       HEAPF32[$vtx_write$0$ph50 + 52 >> 2] = $v2$1;
       HEAPF32[$vtx_write$0$ph50 + 60 >> 2] = $x1$1;
       HEAPF32[$vtx_write$0$ph50 + 64 >> 2] = $y2$1;
       HEAP32[$vtx_write$0$ph50 + 76 >> 2] = $col;
       HEAPF32[$vtx_write$0$ph50 + 68 >> 2] = $u1$1;
       HEAPF32[$vtx_write$0$ph50 + 72 >> 2] = $v2$1;
       $char_width$1$ph = $83;
       $idx_write$5$ph = $idx_write$0$ph52 + 12 | 0;
       $vtx_current_idx$5$ph = $vtx_current_idx$0$ph54 + 4 | 0;
       $vtx_write$5$ph = $vtx_write$0$ph50 + 80 | 0;
      }
     }
    } while (0);
    $idx_write$6$ph = $idx_write$5$ph;
    $s$7$ph = $s$4;
    $vtx_current_idx$6$ph = $vtx_current_idx$5$ph;
    $vtx_write$6$ph = $vtx_write$5$ph;
    $x$7$ph = $x$0$lcssa19 + $char_width$1$ph;
    $y$1$ph = $y$0$lcssa17;
   } while (0);
   if ($s$7$ph >>> 0 < $$0 >>> 0) {
    $idx_write$0$ph52 = $idx_write$6$ph;
    $s$1$ph1456 = $s$7$ph;
    $vtx_current_idx$0$ph54 = $vtx_current_idx$6$ph;
    $vtx_write$0$ph50 = $vtx_write$6$ph;
    $word_wrap_eol$0$ph49 = $word_wrap_eol$2;
    $x$0$ph57 = $x$7$ph;
    $y$0$ph48 = $y$1$ph;
   } else {
    $idx_write$0$ph25 = $idx_write$6$ph;
    $vtx_current_idx$0$ph28 = $vtx_current_idx$6$ph;
    $vtx_write$0$ph22 = $vtx_write$6$ph;
    break L13;
   }
  }
  if ((label | 0) == 23) ___assert_fail(127217, 127226, 806, 127272); else if ((label | 0) == 53) {
   $idx_write$0$ph25 = $idx_write$0$ph52$lcssa151;
   $vtx_current_idx$0$ph28 = $vtx_current_idx$0$ph54$lcssa148;
   $vtx_write$0$ph22 = $vtx_write$0$ph50$lcssa154;
   break;
  }
 } else {
  $idx_write$0$ph25 = $26;
  $vtx_current_idx$0$ph28 = $28;
  $vtx_write$0$ph22 = $24;
 } while (0);
 HEAP32[$23 >> 2] = $vtx_write$0$ph22;
 HEAP32[$27 >> 2] = $vtx_current_idx$0$ph28;
 HEAP32[$25 >> 2] = $idx_write$0$ph25;
 STACKTOP = sp;
 return;
}
function __ZN10ImGuiStyleC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $85 = 0, $90 = 0;
 $0 = $this + 4 | 0;
 $4 = $this + 32 | 0;
 $5 = $this + 36 | 0;
 HEAPF32[$5 >> 2] = 0.0;
 HEAPF32[$4 >> 2] = 0.0;
 $6 = $this + 44 | 0;
 $12 = $this + 96 | 0;
 $16 = $this + 120 | 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = 0;
 HEAP32[$16 + 12 >> 2] = 0;
 $17 = $this + 136 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$6 + 16 >> 2] = 0;
 HEAP32[$6 + 20 >> 2] = 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 HEAP32[$12 + 12 >> 2] = 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 $18 = $this + 152 | 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$18 + 4 >> 2] = 0;
 HEAP32[$18 + 8 >> 2] = 0;
 HEAP32[$18 + 12 >> 2] = 0;
 $19 = $this + 168 | 0;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 HEAP32[$19 + 12 >> 2] = 0;
 $20 = $this + 184 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 HEAP32[$20 + 12 >> 2] = 0;
 $21 = $this + 200 | 0;
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 HEAP32[$21 + 12 >> 2] = 0;
 $22 = $this + 216 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 HEAP32[$22 + 12 >> 2] = 0;
 $23 = $this + 232 | 0;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = 0;
 HEAP32[$23 + 12 >> 2] = 0;
 $24 = $this + 248 | 0;
 HEAP32[$24 >> 2] = 0;
 HEAP32[$24 + 4 >> 2] = 0;
 HEAP32[$24 + 8 >> 2] = 0;
 HEAP32[$24 + 12 >> 2] = 0;
 $25 = $this + 264 | 0;
 HEAP32[$25 >> 2] = 0;
 HEAP32[$25 + 4 >> 2] = 0;
 HEAP32[$25 + 8 >> 2] = 0;
 HEAP32[$25 + 12 >> 2] = 0;
 $26 = $this + 280 | 0;
 HEAP32[$26 >> 2] = 0;
 HEAP32[$26 + 4 >> 2] = 0;
 HEAP32[$26 + 8 >> 2] = 0;
 HEAP32[$26 + 12 >> 2] = 0;
 $27 = $this + 296 | 0;
 HEAP32[$27 >> 2] = 0;
 HEAP32[$27 + 4 >> 2] = 0;
 HEAP32[$27 + 8 >> 2] = 0;
 HEAP32[$27 + 12 >> 2] = 0;
 $28 = $this + 312 | 0;
 HEAP32[$28 >> 2] = 0;
 HEAP32[$28 + 4 >> 2] = 0;
 HEAP32[$28 + 8 >> 2] = 0;
 HEAP32[$28 + 12 >> 2] = 0;
 $29 = $this + 328 | 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$29 + 8 >> 2] = 0;
 HEAP32[$29 + 12 >> 2] = 0;
 $30 = $this + 344 | 0;
 HEAP32[$30 >> 2] = 0;
 HEAP32[$30 + 4 >> 2] = 0;
 HEAP32[$30 + 8 >> 2] = 0;
 HEAP32[$30 + 12 >> 2] = 0;
 $31 = $this + 360 | 0;
 HEAP32[$31 >> 2] = 0;
 HEAP32[$31 + 4 >> 2] = 0;
 HEAP32[$31 + 8 >> 2] = 0;
 HEAP32[$31 + 12 >> 2] = 0;
 $32 = $this + 376 | 0;
 HEAP32[$32 >> 2] = 0;
 HEAP32[$32 + 4 >> 2] = 0;
 HEAP32[$32 + 8 >> 2] = 0;
 HEAP32[$32 + 12 >> 2] = 0;
 $33 = $this + 392 | 0;
 HEAP32[$33 >> 2] = 0;
 HEAP32[$33 + 4 >> 2] = 0;
 HEAP32[$33 + 8 >> 2] = 0;
 HEAP32[$33 + 12 >> 2] = 0;
 $34 = $this + 408 | 0;
 HEAP32[$34 >> 2] = 0;
 HEAP32[$34 + 4 >> 2] = 0;
 HEAP32[$34 + 8 >> 2] = 0;
 HEAP32[$34 + 12 >> 2] = 0;
 $35 = $this + 424 | 0;
 HEAP32[$35 >> 2] = 0;
 HEAP32[$35 + 4 >> 2] = 0;
 HEAP32[$35 + 8 >> 2] = 0;
 HEAP32[$35 + 12 >> 2] = 0;
 $36 = $this + 440 | 0;
 HEAP32[$36 >> 2] = 0;
 HEAP32[$36 + 4 >> 2] = 0;
 HEAP32[$36 + 8 >> 2] = 0;
 HEAP32[$36 + 12 >> 2] = 0;
 $37 = $this + 456 | 0;
 HEAP32[$37 >> 2] = 0;
 HEAP32[$37 + 4 >> 2] = 0;
 HEAP32[$37 + 8 >> 2] = 0;
 HEAP32[$37 + 12 >> 2] = 0;
 $38 = $this + 472 | 0;
 HEAP32[$38 >> 2] = 0;
 HEAP32[$38 + 4 >> 2] = 0;
 HEAP32[$38 + 8 >> 2] = 0;
 HEAP32[$38 + 12 >> 2] = 0;
 $39 = $this + 488 | 0;
 HEAP32[$39 >> 2] = 0;
 HEAP32[$39 + 4 >> 2] = 0;
 HEAP32[$39 + 8 >> 2] = 0;
 HEAP32[$39 + 12 >> 2] = 0;
 $40 = $this + 504 | 0;
 HEAP32[$40 >> 2] = 0;
 HEAP32[$40 + 4 >> 2] = 0;
 HEAP32[$40 + 8 >> 2] = 0;
 HEAP32[$40 + 12 >> 2] = 0;
 $41 = $this + 520 | 0;
 HEAP32[$41 >> 2] = 0;
 HEAP32[$41 + 4 >> 2] = 0;
 HEAP32[$41 + 8 >> 2] = 0;
 HEAP32[$41 + 12 >> 2] = 0;
 $42 = $this + 536 | 0;
 HEAP32[$42 >> 2] = 0;
 HEAP32[$42 + 4 >> 2] = 0;
 HEAP32[$42 + 8 >> 2] = 0;
 HEAP32[$42 + 12 >> 2] = 0;
 $43 = $this + 552 | 0;
 HEAP32[$43 >> 2] = 0;
 HEAP32[$43 + 4 >> 2] = 0;
 HEAP32[$43 + 8 >> 2] = 0;
 HEAP32[$43 + 12 >> 2] = 0;
 $44 = $this + 568 | 0;
 HEAP32[$44 >> 2] = 0;
 HEAP32[$44 + 4 >> 2] = 0;
 HEAP32[$44 + 8 >> 2] = 0;
 HEAP32[$44 + 12 >> 2] = 0;
 $45 = $this + 584 | 0;
 HEAP32[$45 >> 2] = 0;
 HEAP32[$45 + 4 >> 2] = 0;
 HEAP32[$45 + 8 >> 2] = 0;
 HEAP32[$45 + 12 >> 2] = 0;
 $46 = $this + 600 | 0;
 HEAP32[$46 >> 2] = 0;
 HEAP32[$46 + 4 >> 2] = 0;
 HEAP32[$46 + 8 >> 2] = 0;
 HEAP32[$46 + 12 >> 2] = 0;
 $47 = $this + 616 | 0;
 HEAP32[$47 >> 2] = 0;
 HEAP32[$47 + 4 >> 2] = 0;
 HEAP32[$47 + 8 >> 2] = 0;
 HEAP32[$47 + 12 >> 2] = 0;
 $48 = $this + 632 | 0;
 HEAP32[$48 >> 2] = 0;
 HEAP32[$48 + 4 >> 2] = 0;
 HEAP32[$48 + 8 >> 2] = 0;
 HEAP32[$48 + 12 >> 2] = 0;
 $49 = $this + 648 | 0;
 HEAP32[$49 >> 2] = 0;
 HEAP32[$49 + 4 >> 2] = 0;
 HEAP32[$49 + 8 >> 2] = 0;
 HEAP32[$49 + 12 >> 2] = 0;
 $50 = $this + 664 | 0;
 HEAP32[$50 >> 2] = 0;
 HEAP32[$50 + 4 >> 2] = 0;
 HEAP32[$50 + 8 >> 2] = 0;
 HEAP32[$50 + 12 >> 2] = 0;
 $51 = $this + 680 | 0;
 HEAP32[$51 >> 2] = 0;
 HEAP32[$51 + 4 >> 2] = 0;
 HEAP32[$51 + 8 >> 2] = 0;
 HEAP32[$51 + 12 >> 2] = 0;
 $52 = $this + 696 | 0;
 HEAP32[$52 >> 2] = 0;
 HEAP32[$52 + 4 >> 2] = 0;
 HEAP32[$52 + 8 >> 2] = 0;
 HEAP32[$52 + 12 >> 2] = 0;
 $53 = $this + 712 | 0;
 HEAP32[$53 >> 2] = 0;
 HEAP32[$53 + 4 >> 2] = 0;
 HEAP32[$53 + 8 >> 2] = 0;
 HEAP32[$53 + 12 >> 2] = 0;
 $54 = $this + 728 | 0;
 HEAP32[$54 >> 2] = 0;
 HEAP32[$54 + 4 >> 2] = 0;
 HEAP32[$54 + 8 >> 2] = 0;
 HEAP32[$54 + 12 >> 2] = 0;
 $55 = $this + 744 | 0;
 HEAP32[$55 >> 2] = 0;
 HEAP32[$55 + 4 >> 2] = 0;
 HEAP32[$55 + 8 >> 2] = 0;
 HEAP32[$55 + 12 >> 2] = 0;
 $56 = $this + 760 | 0;
 HEAP32[$56 >> 2] = 0;
 HEAP32[$56 + 4 >> 2] = 0;
 HEAP32[$56 + 8 >> 2] = 0;
 HEAP32[$56 + 12 >> 2] = 0;
 $57 = $this + 776 | 0;
 HEAP32[$57 >> 2] = 0;
 HEAP32[$57 + 4 >> 2] = 0;
 HEAP32[$57 + 8 >> 2] = 0;
 HEAP32[$57 + 12 >> 2] = 0;
 $58 = $this + 792 | 0;
 HEAP32[$58 >> 2] = 0;
 HEAP32[$58 + 4 >> 2] = 0;
 HEAP32[$58 + 8 >> 2] = 0;
 HEAP32[$58 + 12 >> 2] = 0;
 HEAPF32[$this >> 2] = 1.0;
 HEAP32[$0 >> 2] = 1090519040;
 HEAP32[$this + 8 >> 2] = 1090519040;
 HEAP32[$this + 12 >> 2] = 1107296256;
 HEAP32[$this + 16 >> 2] = 1107296256;
 HEAPF32[$this + 20 >> 2] = 9.0;
 HEAP32[$this + 24 >> 2] = 1;
 HEAPF32[$this + 28 >> 2] = 0.0;
 HEAP32[$4 >> 2] = 1082130432;
 HEAP32[$5 >> 2] = 1077936128;
 HEAPF32[$this + 40 >> 2] = 0.0;
 HEAP32[$6 >> 2] = 1090519040;
 HEAP32[$this + 48 >> 2] = 1082130432;
 HEAP32[$this + 52 >> 2] = 1082130432;
 HEAP32[$this + 56 >> 2] = 1082130432;
 HEAP32[$this + 60 >> 2] = 0;
 HEAP32[$this + 64 >> 2] = 0;
 HEAPF32[$this + 68 >> 2] = .699999988079071;
 HEAPF32[$this + 72 >> 2] = 22.0;
 HEAPF32[$this + 76 >> 2] = 6.0;
 HEAPF32[$this + 80 >> 2] = 16.0;
 HEAPF32[$this + 84 >> 2] = 9.0;
 HEAPF32[$this + 88 >> 2] = 10.0;
 HEAPF32[$this + 92 >> 2] = 0.0;
 HEAP32[$12 >> 2] = 1102053376;
 HEAP32[$this + 100 >> 2] = 1102053376;
 HEAP32[$this + 104 >> 2] = 1082130432;
 HEAP32[$this + 108 >> 2] = 1082130432;
 HEAP8[$this + 112 >> 0] = 1;
 HEAP8[$this + 113 >> 0] = 1;
 HEAPF32[$this + 116 >> 2] = 1.25;
 HEAPF32[$this + 120 >> 2] = .8999999761581421;
 HEAPF32[$this + 124 >> 2] = .8999999761581421;
 HEAPF32[$this + 128 >> 2] = .8999999761581421;
 HEAPF32[$this + 132 >> 2] = 1.0;
 HEAPF32[$this + 136 >> 2] = .6000000238418579;
 HEAPF32[$this + 140 >> 2] = .6000000238418579;
 HEAPF32[$this + 144 >> 2] = .6000000238418579;
 HEAPF32[$this + 148 >> 2] = 1.0;
 HEAPF32[$this + 152 >> 2] = 0.0;
 HEAPF32[$this + 156 >> 2] = 0.0;
 HEAPF32[$this + 160 >> 2] = 0.0;
 HEAPF32[$this + 164 >> 2] = 1.0;
 $85 = $this + 168 | 0;
 HEAP32[$85 >> 2] = 0;
 HEAP32[$85 + 4 >> 2] = 0;
 HEAP32[$85 + 8 >> 2] = 0;
 HEAP32[$85 + 12 >> 2] = 0;
 HEAPF32[$this + 184 >> 2] = .699999988079071;
 HEAPF32[$this + 188 >> 2] = .699999988079071;
 HEAPF32[$this + 192 >> 2] = .699999988079071;
 HEAPF32[$this + 196 >> 2] = .6499999761581421;
 $90 = $this + 200 | 0;
 HEAP32[$90 >> 2] = 0;
 HEAP32[$90 + 4 >> 2] = 0;
 HEAP32[$90 + 8 >> 2] = 0;
 HEAP32[$90 + 12 >> 2] = 0;
 HEAPF32[$this + 216 >> 2] = .800000011920929;
 HEAPF32[$this + 220 >> 2] = .800000011920929;
 HEAPF32[$this + 224 >> 2] = .800000011920929;
 HEAPF32[$this + 228 >> 2] = .30000001192092896;
 HEAPF32[$this + 232 >> 2] = .8999999761581421;
 HEAPF32[$this + 236 >> 2] = .800000011920929;
 HEAPF32[$this + 240 >> 2] = .800000011920929;
 HEAPF32[$this + 244 >> 2] = .4000000059604645;
 HEAPF32[$this + 248 >> 2] = .8999999761581421;
 HEAPF32[$this + 252 >> 2] = .6499999761581421;
 HEAPF32[$this + 256 >> 2] = .6499999761581421;
 HEAPF32[$this + 260 >> 2] = .44999998807907104;
 HEAPF32[$this + 264 >> 2] = .5;
 HEAPF32[$this + 268 >> 2] = .5;
 HEAPF32[$this + 272 >> 2] = 1.0;
 HEAPF32[$this + 276 >> 2] = .44999998807907104;
 HEAPF32[$this + 280 >> 2] = .4000000059604645;
 HEAPF32[$this + 284 >> 2] = .4000000059604645;
 HEAPF32[$this + 288 >> 2] = .800000011920929;
 HEAPF32[$this + 292 >> 2] = .20000000298023224;
 HEAPF32[$this + 296 >> 2] = .5;
 HEAPF32[$this + 300 >> 2] = .5;
 HEAPF32[$this + 304 >> 2] = 1.0;
 HEAPF32[$this + 308 >> 2] = .550000011920929;
 HEAPF32[$this + 312 >> 2] = .4000000059604645;
 HEAPF32[$this + 316 >> 2] = .4000000059604645;
 HEAPF32[$this + 320 >> 2] = .550000011920929;
 HEAPF32[$this + 324 >> 2] = .800000011920929;
 HEAPF32[$this + 328 >> 2] = .20000000298023224;
 HEAPF32[$this + 332 >> 2] = .25;
 HEAPF32[$this + 336 >> 2] = .30000001192092896;
 HEAPF32[$this + 340 >> 2] = .6000000238418579;
 HEAPF32[$this + 344 >> 2] = .4000000059604645;
 HEAPF32[$this + 348 >> 2] = .4000000059604645;
 HEAPF32[$this + 352 >> 2] = .800000011920929;
 HEAPF32[$this + 356 >> 2] = .30000001192092896;
 HEAPF32[$this + 360 >> 2] = .4000000059604645;
 HEAPF32[$this + 364 >> 2] = .4000000059604645;
 HEAPF32[$this + 368 >> 2] = .800000011920929;
 HEAPF32[$this + 372 >> 2] = .4000000059604645;
 HEAPF32[$this + 376 >> 2] = .800000011920929;
 HEAPF32[$this + 380 >> 2] = .5;
 HEAPF32[$this + 384 >> 2] = .5;
 HEAPF32[$this + 388 >> 2] = .4000000059604645;
 HEAPF32[$this + 392 >> 2] = .20000000298023224;
 HEAPF32[$this + 396 >> 2] = .20000000298023224;
 HEAPF32[$this + 400 >> 2] = .20000000298023224;
 HEAPF32[$this + 404 >> 2] = .9900000095367432;
 HEAPF32[$this + 408 >> 2] = .8999999761581421;
 HEAPF32[$this + 412 >> 2] = .8999999761581421;
 HEAPF32[$this + 416 >> 2] = .8999999761581421;
 HEAPF32[$this + 420 >> 2] = .5;
 HEAPF32[$this + 424 >> 2] = 1.0;
 HEAPF32[$this + 428 >> 2] = 1.0;
 HEAPF32[$this + 432 >> 2] = 1.0;
 HEAPF32[$this + 436 >> 2] = .30000001192092896;
 HEAPF32[$this + 440 >> 2] = .800000011920929;
 HEAPF32[$this + 444 >> 2] = .5;
 HEAPF32[$this + 448 >> 2] = .5;
 HEAPF32[$this + 452 >> 2] = 1.0;
 HEAPF32[$this + 456 >> 2] = .6700000166893005;
 HEAPF32[$this + 460 >> 2] = .4000000059604645;
 HEAPF32[$this + 464 >> 2] = .4000000059604645;
 HEAPF32[$this + 468 >> 2] = .6000000238418579;
 HEAPF32[$this + 472 >> 2] = .6700000166893005;
 HEAPF32[$this + 476 >> 2] = .4000000059604645;
 HEAPF32[$this + 480 >> 2] = .4000000059604645;
 HEAPF32[$this + 484 >> 2] = 1.0;
 HEAPF32[$this + 488 >> 2] = .800000011920929;
 HEAPF32[$this + 492 >> 2] = .5;
 HEAPF32[$this + 496 >> 2] = .5;
 HEAPF32[$this + 500 >> 2] = 1.0;
 HEAPF32[$this + 504 >> 2] = .4000000059604645;
 HEAPF32[$this + 508 >> 2] = .4000000059604645;
 HEAPF32[$this + 512 >> 2] = .8999999761581421;
 HEAPF32[$this + 516 >> 2] = .44999998807907104;
 HEAPF32[$this + 520 >> 2] = .44999998807907104;
 HEAPF32[$this + 524 >> 2] = .44999998807907104;
 HEAPF32[$this + 528 >> 2] = .8999999761581421;
 HEAPF32[$this + 532 >> 2] = .800000011920929;
 HEAPF32[$this + 536 >> 2] = .5299999713897705;
 HEAPF32[$this + 540 >> 2] = .5299999713897705;
 HEAPF32[$this + 544 >> 2] = .8700000047683716;
 HEAPF32[$this + 548 >> 2] = .800000011920929;
 HEAPF32[$this + 552 >> 2] = .5;
 HEAPF32[$this + 556 >> 2] = .5;
 HEAPF32[$this + 560 >> 2] = .5;
 HEAPF32[$this + 564 >> 2] = 1.0;
 HEAPF32[$this + 568 >> 2] = .699999988079071;
 HEAPF32[$this + 572 >> 2] = .6000000238418579;
 HEAPF32[$this + 576 >> 2] = .6000000238418579;
 HEAPF32[$this + 580 >> 2] = 1.0;
 HEAPF32[$this + 584 >> 2] = .8999999761581421;
 HEAPF32[$this + 588 >> 2] = .699999988079071;
 HEAPF32[$this + 592 >> 2] = .699999988079071;
 HEAPF32[$this + 596 >> 2] = 1.0;
 HEAPF32[$this + 600 >> 2] = 1.0;
 HEAPF32[$this + 604 >> 2] = 1.0;
 HEAPF32[$this + 608 >> 2] = 1.0;
 HEAPF32[$this + 612 >> 2] = .30000001192092896;
 HEAPF32[$this + 616 >> 2] = 1.0;
 HEAPF32[$this + 620 >> 2] = 1.0;
 HEAPF32[$this + 624 >> 2] = 1.0;
 HEAPF32[$this + 628 >> 2] = .6000000238418579;
 HEAPF32[$this + 632 >> 2] = 1.0;
 HEAPF32[$this + 636 >> 2] = 1.0;
 HEAPF32[$this + 640 >> 2] = 1.0;
 HEAPF32[$this + 644 >> 2] = .8999999761581421;
 HEAPF32[$this + 648 >> 2] = .5;
 HEAPF32[$this + 652 >> 2] = .5;
 HEAPF32[$this + 656 >> 2] = .8999999761581421;
 HEAPF32[$this + 660 >> 2] = .5;
 HEAPF32[$this + 664 >> 2] = .699999988079071;
 HEAPF32[$this + 668 >> 2] = .699999988079071;
 HEAPF32[$this + 672 >> 2] = .8999999761581421;
 HEAPF32[$this + 676 >> 2] = .6000000238418579;
 HEAPF32[$this + 680 >> 2] = .699999988079071;
 HEAPF32[$this + 684 >> 2] = .699999988079071;
 HEAPF32[$this + 688 >> 2] = .699999988079071;
 HEAPF32[$this + 692 >> 2] = 1.0;
 HEAPF32[$this + 696 >> 2] = 1.0;
 HEAPF32[$this + 700 >> 2] = 1.0;
 HEAPF32[$this + 704 >> 2] = 1.0;
 HEAPF32[$this + 708 >> 2] = 1.0;
 HEAPF32[$this + 712 >> 2] = .8999999761581421;
 HEAPF32[$this + 716 >> 2] = .699999988079071;
 HEAPF32[$this + 720 >> 2] = 0.0;
 HEAPF32[$this + 724 >> 2] = 1.0;
 HEAPF32[$this + 728 >> 2] = .8999999761581421;
 HEAPF32[$this + 732 >> 2] = .699999988079071;
 HEAPF32[$this + 736 >> 2] = 0.0;
 HEAPF32[$this + 740 >> 2] = 1.0;
 HEAPF32[$this + 744 >> 2] = 1.0;
 HEAPF32[$this + 748 >> 2] = .6000000238418579;
 HEAPF32[$this + 752 >> 2] = 0.0;
 HEAPF32[$this + 756 >> 2] = 1.0;
 HEAPF32[$this + 760 >> 2] = 0.0;
 HEAPF32[$this + 764 >> 2] = 0.0;
 HEAPF32[$this + 768 >> 2] = 1.0;
 HEAPF32[$this + 772 >> 2] = .3499999940395355;
 HEAPF32[$this + 776 >> 2] = .05000000074505806;
 HEAPF32[$this + 780 >> 2] = .05000000074505806;
 HEAPF32[$this + 784 >> 2] = .10000000149011612;
 HEAPF32[$this + 788 >> 2] = .8999999761581421;
 HEAPF32[$this + 792 >> 2] = .20000000298023224;
 HEAPF32[$this + 796 >> 2] = .20000000298023224;
 HEAPF32[$this + 800 >> 2] = .20000000298023224;
 HEAPF32[$this + 804 >> 2] = .3499999940395355;
 return;
}

function _strstr($h, $n) {
 $h = $h | 0;
 $n = $n | 0;
 var $$0 = 0, $$0$lcssa$i = 0, $$0$lcssa$i12 = 0, $$0$lcssa$i4 = 0, $$01$i = 0, $$02$i = 0, $$02$i8 = 0, $$03$i = 0, $$3$i = 0, $$lcssa$i = 0, $$lcssa$i11 = 0, $$lcssa291 = 0, $$lcssa294 = 0, $$lcssa297 = 0, $$lcssa311 = 0, $$lcssa314 = 0, $$lcssa317 = 0, $$lcssa332 = 0, $$pr$i = 0, $0 = 0, $111 = 0, $115 = 0, $118 = 0, $12 = 0, $125 = 0, $132 = 0, $134 = 0, $135 = 0, $142 = 0, $151 = 0, $153 = 0, $154 = 0, $161 = 0, $165 = 0, $169 = 0, $17 = 0, $171 = 0, $175 = 0, $179 = 0, $180 = 0, $181 = 0, $183 = 0, $186 = 0, $193 = 0, $204 = 0, $205 = 0, $212 = 0, $214 = 0, $23 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $26 = 0, $27 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $39 = 0, $48 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $69 = 0, $70 = 0, $8 = 0, $84 = 0, $9 = 0, $95 = 0, $98 = 0, $99 = 0, $byteset$i = 0, $hw$0$in2$i = 0, $hw$03$i = 0, $hw$03$i7 = 0, $ip$0$ph$lcssa$i = 0, $ip$0$ph$lcssa145$i = 0, $ip$0$ph78$i = 0, $ip$1$ip$0$i = 0, $ip$1$ph$lcssa$i = 0, $ip$1$ph57$i = 0, $jp$0$ph15$ph72$i = 0, $jp$0$ph1567$i = 0, $jp$0$ph1567$i$lcssa = 0, $jp$0$ph1567$i$lcssa$lcssa = 0, $jp$0$ph79$i = 0, $jp$1$ph11$ph51$i = 0, $jp$1$ph1146$i = 0, $jp$1$ph1146$i$lcssa = 0, $jp$1$ph1146$i$lcssa$lcssa = 0, $jp$1$ph58$i = 0, $k$061$i = 0, $k$141$i = 0, $k$340$i = 0, $k$340$i$lcssa = 0, $k$4$i = 0, $l$082$i = 0, $l$082$i$lcssa331 = 0, $mem$0$i = 0, $mem0$0$i = 0, $p$0$ph$ph$lcssa34$i = 0, $p$0$ph$ph$lcssa34146$i = 0, $p$0$ph$ph73$i = 0, $p$1$p$0$i = 0, $p$1$ph$ph$lcssa25$i = 0, $p$1$ph$ph52$i = 0, $p$3$i = 0, $shift$i = 0, $z$0$i = 0, $z$3$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056 | 0;
 $byteset$i = sp + 1024 | 0;
 $shift$i = sp;
 $0 = HEAP8[$n >> 0] | 0;
 do if (!($0 << 24 >> 24)) $$0 = $h; else {
  $3 = _strchr($h, $0 << 24 >> 24) | 0;
  if (!$3) $$0 = 0; else {
   $6 = HEAP8[$n + 1 >> 0] | 0;
   if (!($6 << 24 >> 24)) $$0 = $3; else {
    $8 = $3 + 1 | 0;
    $9 = HEAP8[$8 >> 0] | 0;
    if (!($9 << 24 >> 24)) $$0 = 0; else {
     $12 = HEAP8[$n + 2 >> 0] | 0;
     if (!($12 << 24 >> 24)) {
      $17 = $6 & 255 | ($0 & 255) << 8;
      $$01$i = $8;
      $233 = $9;
      $hw$0$in2$i = HEAPU8[$3 >> 0] << 8 | $9 & 255;
      while (1) {
       $23 = $hw$0$in2$i & 65535;
       if (($23 | 0) == ($17 | 0)) {
        $$0$lcssa$i = $$01$i;
        $32 = $233;
        break;
       }
       $26 = $$01$i + 1 | 0;
       $27 = HEAP8[$26 >> 0] | 0;
       if (!($27 << 24 >> 24)) {
        $$0$lcssa$i = $26;
        $32 = 0;
        break;
       } else {
        $$01$i = $26;
        $233 = $27;
        $hw$0$in2$i = $27 & 255 | $23 << 8;
       }
      }
      $$0 = $32 << 24 >> 24 ? $$0$lcssa$i + -1 | 0 : 0;
      break;
     }
     $35 = $3 + 2 | 0;
     $36 = HEAP8[$35 >> 0] | 0;
     if (!($36 << 24 >> 24)) $$0 = 0; else {
      $39 = HEAP8[$n + 3 >> 0] | 0;
      if (!($39 << 24 >> 24)) {
       $48 = ($6 & 255) << 16 | ($0 & 255) << 24 | ($12 & 255) << 8;
       $57 = ($36 & 255) << 8 | ($9 & 255) << 16 | HEAPU8[$3 >> 0] << 24;
       if (($57 | 0) == ($48 | 0)) {
        $$0$lcssa$i4 = $35;
        $$lcssa$i = $36;
       } else {
        $$02$i = $35;
        $hw$03$i = $57;
        while (1) {
         $59 = $$02$i + 1 | 0;
         $60 = HEAP8[$59 >> 0] | 0;
         $hw$03$i = ($60 & 255 | $hw$03$i) << 8;
         if ($60 << 24 >> 24 == 0 | ($hw$03$i | 0) == ($48 | 0)) {
          $$0$lcssa$i4 = $59;
          $$lcssa$i = $60;
          break;
         } else $$02$i = $59;
        }
       }
       $$0 = $$lcssa$i << 24 >> 24 ? $$0$lcssa$i4 + -2 | 0 : 0;
       break;
      }
      $69 = $3 + 3 | 0;
      $70 = HEAP8[$69 >> 0] | 0;
      if (!($70 << 24 >> 24)) $$0 = 0; else {
       if (!(HEAP8[$n + 4 >> 0] | 0)) {
        $84 = ($6 & 255) << 16 | ($0 & 255) << 24 | ($12 & 255) << 8 | $39 & 255;
        $95 = ($36 & 255) << 8 | ($9 & 255) << 16 | $70 & 255 | HEAPU8[$3 >> 0] << 24;
        if (($95 | 0) == ($84 | 0)) {
         $$0$lcssa$i12 = $69;
         $$lcssa$i11 = $70;
        } else {
         $$02$i8 = $69;
         $hw$03$i7 = $95;
         while (1) {
          $98 = $$02$i8 + 1 | 0;
          $99 = HEAP8[$98 >> 0] | 0;
          $hw$03$i7 = $99 & 255 | $hw$03$i7 << 8;
          if ($99 << 24 >> 24 == 0 | ($hw$03$i7 | 0) == ($84 | 0)) {
           $$0$lcssa$i12 = $98;
           $$lcssa$i11 = $99;
           break;
          } else $$02$i8 = $98;
         }
        }
        $$0 = $$lcssa$i11 << 24 >> 24 ? $$0$lcssa$i12 + -3 | 0 : 0;
        break;
       };
       HEAP32[$byteset$i >> 2] = 0;
       HEAP32[$byteset$i + 4 >> 2] = 0;
       HEAP32[$byteset$i + 8 >> 2] = 0;
       HEAP32[$byteset$i + 12 >> 2] = 0;
       HEAP32[$byteset$i + 16 >> 2] = 0;
       HEAP32[$byteset$i + 20 >> 2] = 0;
       HEAP32[$byteset$i + 24 >> 2] = 0;
       HEAP32[$byteset$i + 28 >> 2] = 0;
       $111 = $0;
       $l$082$i = 0;
       while (1) {
        if (!(HEAP8[$3 + $l$082$i >> 0] | 0)) {
         $$3$i = 0;
         break;
        }
        $115 = $byteset$i + ((($111 & 255) >>> 5 & 255) << 2) | 0;
        HEAP32[$115 >> 2] = HEAP32[$115 >> 2] | 1 << ($111 & 31);
        $118 = $l$082$i + 1 | 0;
        HEAP32[$shift$i + (($111 & 255) << 2) >> 2] = $118;
        $111 = HEAP8[$n + $118 >> 0] | 0;
        if (!($111 << 24 >> 24)) {
         $$lcssa332 = $118;
         $l$082$i$lcssa331 = $l$082$i;
         label = 23;
         break;
        } else $l$082$i = $118;
       }
       L32 : do if ((label | 0) == 23) {
        L34 : do if ($$lcssa332 >>> 0 > 1) {
         $234 = 1;
         $ip$0$ph78$i = -1;
         $jp$0$ph79$i = 0;
         L35 : while (1) {
          $235 = $234;
          $jp$0$ph15$ph72$i = $jp$0$ph79$i;
          $p$0$ph$ph73$i = 1;
          while (1) {
           $236 = $235;
           $jp$0$ph1567$i = $jp$0$ph15$ph72$i;
           L39 : while (1) {
            $134 = $236;
            $k$061$i = 1;
            while (1) {
             $132 = HEAP8[$n + ($k$061$i + $ip$0$ph78$i) >> 0] | 0;
             $135 = HEAP8[$n + $134 >> 0] | 0;
             if ($132 << 24 >> 24 != $135 << 24 >> 24) {
              $$lcssa311 = $134;
              $$lcssa314 = $132;
              $$lcssa317 = $135;
              $jp$0$ph1567$i$lcssa = $jp$0$ph1567$i;
              break L39;
             }
             if (($k$061$i | 0) == ($p$0$ph$ph73$i | 0)) break;
             $k$061$i = $k$061$i + 1 | 0;
             $134 = $k$061$i + $jp$0$ph1567$i | 0;
             if ($134 >>> 0 >= $$lcssa332 >>> 0) {
              $ip$0$ph$lcssa$i = $ip$0$ph78$i;
              $p$0$ph$ph$lcssa34$i = $p$0$ph$ph73$i;
              break L35;
             }
            }
            $jp$0$ph1567$i = $jp$0$ph1567$i + $p$0$ph$ph73$i | 0;
            $236 = $jp$0$ph1567$i + 1 | 0;
            if ($236 >>> 0 >= $$lcssa332 >>> 0) {
             $ip$0$ph$lcssa$i = $ip$0$ph78$i;
             $p$0$ph$ph$lcssa34$i = $p$0$ph$ph73$i;
             break L35;
            }
           }
           $142 = $$lcssa311 - $ip$0$ph78$i | 0;
           if (($$lcssa314 & 255) <= ($$lcssa317 & 255)) {
            $jp$0$ph1567$i$lcssa$lcssa = $jp$0$ph1567$i$lcssa;
            break;
           }
           $125 = $$lcssa311 + 1 | 0;
           if ($125 >>> 0 < $$lcssa332 >>> 0) {
            $235 = $125;
            $jp$0$ph15$ph72$i = $$lcssa311;
            $p$0$ph$ph73$i = $142;
           } else {
            $ip$0$ph$lcssa$i = $ip$0$ph78$i;
            $p$0$ph$ph$lcssa34$i = $142;
            break L35;
           }
          }
          $234 = $jp$0$ph1567$i$lcssa$lcssa + 2 | 0;
          if ($234 >>> 0 >= $$lcssa332 >>> 0) {
           $ip$0$ph$lcssa$i = $jp$0$ph1567$i$lcssa$lcssa;
           $p$0$ph$ph$lcssa34$i = 1;
           break;
          } else {
           $ip$0$ph78$i = $jp$0$ph1567$i$lcssa$lcssa;
           $jp$0$ph79$i = $jp$0$ph1567$i$lcssa$lcssa + 1 | 0;
          }
         }
         $237 = 1;
         $ip$1$ph57$i = -1;
         $jp$1$ph58$i = 0;
         while (1) {
          $239 = $237;
          $jp$1$ph11$ph51$i = $jp$1$ph58$i;
          $p$1$ph$ph52$i = 1;
          while (1) {
           $238 = $239;
           $jp$1$ph1146$i = $jp$1$ph11$ph51$i;
           L54 : while (1) {
            $153 = $238;
            $k$141$i = 1;
            while (1) {
             $151 = HEAP8[$n + ($k$141$i + $ip$1$ph57$i) >> 0] | 0;
             $154 = HEAP8[$n + $153 >> 0] | 0;
             if ($151 << 24 >> 24 != $154 << 24 >> 24) {
              $$lcssa291 = $153;
              $$lcssa294 = $151;
              $$lcssa297 = $154;
              $jp$1$ph1146$i$lcssa = $jp$1$ph1146$i;
              break L54;
             }
             if (($k$141$i | 0) == ($p$1$ph$ph52$i | 0)) break;
             $k$141$i = $k$141$i + 1 | 0;
             $153 = $k$141$i + $jp$1$ph1146$i | 0;
             if ($153 >>> 0 >= $$lcssa332 >>> 0) {
              $ip$0$ph$lcssa145$i = $ip$0$ph$lcssa$i;
              $ip$1$ph$lcssa$i = $ip$1$ph57$i;
              $p$0$ph$ph$lcssa34146$i = $p$0$ph$ph$lcssa34$i;
              $p$1$ph$ph$lcssa25$i = $p$1$ph$ph52$i;
              break L34;
             }
            }
            $jp$1$ph1146$i = $jp$1$ph1146$i + $p$1$ph$ph52$i | 0;
            $238 = $jp$1$ph1146$i + 1 | 0;
            if ($238 >>> 0 >= $$lcssa332 >>> 0) {
             $ip$0$ph$lcssa145$i = $ip$0$ph$lcssa$i;
             $ip$1$ph$lcssa$i = $ip$1$ph57$i;
             $p$0$ph$ph$lcssa34146$i = $p$0$ph$ph$lcssa34$i;
             $p$1$ph$ph$lcssa25$i = $p$1$ph$ph52$i;
             break L34;
            }
           }
           $161 = $$lcssa291 - $ip$1$ph57$i | 0;
           if (($$lcssa294 & 255) >= ($$lcssa297 & 255)) {
            $jp$1$ph1146$i$lcssa$lcssa = $jp$1$ph1146$i$lcssa;
            break;
           }
           $165 = $$lcssa291 + 1 | 0;
           if ($165 >>> 0 < $$lcssa332 >>> 0) {
            $239 = $165;
            $jp$1$ph11$ph51$i = $$lcssa291;
            $p$1$ph$ph52$i = $161;
           } else {
            $ip$0$ph$lcssa145$i = $ip$0$ph$lcssa$i;
            $ip$1$ph$lcssa$i = $ip$1$ph57$i;
            $p$0$ph$ph$lcssa34146$i = $p$0$ph$ph$lcssa34$i;
            $p$1$ph$ph$lcssa25$i = $161;
            break L34;
           }
          }
          $237 = $jp$1$ph1146$i$lcssa$lcssa + 2 | 0;
          if ($237 >>> 0 >= $$lcssa332 >>> 0) {
           $ip$0$ph$lcssa145$i = $ip$0$ph$lcssa$i;
           $ip$1$ph$lcssa$i = $jp$1$ph1146$i$lcssa$lcssa;
           $p$0$ph$ph$lcssa34146$i = $p$0$ph$ph$lcssa34$i;
           $p$1$ph$ph$lcssa25$i = 1;
           break;
          } else {
           $ip$1$ph57$i = $jp$1$ph1146$i$lcssa$lcssa;
           $jp$1$ph58$i = $jp$1$ph1146$i$lcssa$lcssa + 1 | 0;
          }
         }
        } else {
         $ip$0$ph$lcssa145$i = -1;
         $ip$1$ph$lcssa$i = -1;
         $p$0$ph$ph$lcssa34146$i = 1;
         $p$1$ph$ph$lcssa25$i = 1;
        } while (0);
        $169 = ($ip$1$ph$lcssa$i + 1 | 0) >>> 0 > ($ip$0$ph$lcssa145$i + 1 | 0) >>> 0;
        $p$1$p$0$i = $169 ? $p$1$ph$ph$lcssa25$i : $p$0$ph$ph$lcssa34146$i;
        $ip$1$ip$0$i = $169 ? $ip$1$ph$lcssa$i : $ip$0$ph$lcssa145$i;
        $171 = $ip$1$ip$0$i + 1 | 0;
        if (!(_memcmp($n, $n + $p$1$p$0$i | 0, $171) | 0)) {
         $mem0$0$i = $$lcssa332 - $p$1$p$0$i | 0;
         $p$3$i = $p$1$p$0$i;
        } else {
         $175 = $$lcssa332 - $ip$1$ip$0$i + -1 | 0;
         $mem0$0$i = 0;
         $p$3$i = ($ip$1$ip$0$i >>> 0 > $175 >>> 0 ? $ip$1$ip$0$i : $175) + 1 | 0;
        }
        $179 = $$lcssa332 | 63;
        $180 = ($mem0$0$i | 0) != 0;
        $181 = $$lcssa332 - $p$3$i | 0;
        $$03$i = $3;
        $mem$0$i = 0;
        $z$0$i = $3;
        L69 : while (1) {
         $183 = $$03$i;
         do if (($z$0$i - $183 | 0) >>> 0 < $$lcssa332 >>> 0) {
          $186 = _memchr($z$0$i, 0, $179) | 0;
          if (!$186) {
           $z$3$i = $z$0$i + $179 | 0;
           break;
          } else if (($186 - $183 | 0) >>> 0 < $$lcssa332 >>> 0) {
           $$3$i = 0;
           break L32;
          } else {
           $z$3$i = $186;
           break;
          }
         } else $z$3$i = $z$0$i; while (0);
         $193 = HEAP8[$$03$i + $l$082$i$lcssa331 >> 0] | 0;
         if (!(1 << ($193 & 31) & HEAP32[$byteset$i + ((($193 & 255) >>> 5 & 255) << 2) >> 2])) {
          $$03$i = $$03$i + $$lcssa332 | 0;
          $mem$0$i = 0;
          $z$0$i = $z$3$i;
          continue;
         }
         $204 = HEAP32[$shift$i + (($193 & 255) << 2) >> 2] | 0;
         $205 = $$lcssa332 - $204 | 0;
         if (($$lcssa332 | 0) != ($204 | 0)) {
          $$03$i = $$03$i + ($180 & ($mem$0$i | 0) != 0 & $205 >>> 0 < $p$3$i >>> 0 ? $181 : $205) | 0;
          $mem$0$i = 0;
          $z$0$i = $z$3$i;
          continue;
         }
         $212 = $171 >>> 0 > $mem$0$i >>> 0 ? $171 : $mem$0$i;
         $214 = HEAP8[$n + $212 >> 0] | 0;
         L83 : do if (!($214 << 24 >> 24)) $k$4$i = $171; else {
          $$pr$i = $214;
          $k$340$i = $212;
          while (1) {
           if ($$pr$i << 24 >> 24 != (HEAP8[$$03$i + $k$340$i >> 0] | 0)) {
            $k$340$i$lcssa = $k$340$i;
            break;
           }
           $k$340$i = $k$340$i + 1 | 0;
           $$pr$i = HEAP8[$n + $k$340$i >> 0] | 0;
           if (!($$pr$i << 24 >> 24)) {
            $k$4$i = $171;
            break L83;
           }
          }
          $$03$i = $$03$i + ($k$340$i$lcssa - $ip$1$ip$0$i) | 0;
          $mem$0$i = 0;
          $z$0$i = $z$3$i;
          continue L69;
         } while (0);
         do {
          if ($k$4$i >>> 0 <= $mem$0$i >>> 0) {
           $$3$i = $$03$i;
           break L32;
          }
          $k$4$i = $k$4$i + -1 | 0;
         } while ((HEAP8[$n + $k$4$i >> 0] | 0) == (HEAP8[$$03$i + $k$4$i >> 0] | 0));
         $$03$i = $$03$i + $p$3$i | 0;
         $mem$0$i = $mem0$0$i;
         $z$0$i = $z$3$i;
        }
       } while (0);
       $$0 = $$3$i;
      }
     }
    }
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN11DebugWindow17drawRegisterTableERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $$0$i$i = 0, $$0$i$i11 = 0, $$0$i$i13 = 0, $$0$i$i15 = 0, $$0$i$i17 = 0, $$0$i$i19 = 0, $$0$i$i2 = 0, $$0$i$i21 = 0, $$0$i$i23 = 0, $$0$i$i25 = 0, $$0$i$i27 = 0, $$0$i$i4 = 0, $$0$i$i6 = 0, $$0$i$i8 = 0, $$0$i$i9 = 0, $109 = 0, $163 = 0, $193 = 0, $20 = 0, $223 = 0, $253 = 0, $308 = 0, $32 = 0, $338 = 0, $368 = 0, $398 = 0, $429 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $49 = 0, $79 = 0, $green = 0, $green$red1 = 0, $red = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer5 = sp + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $red = sp + 56 | 0;
 $green = sp + 40 | 0;
 HEAP32[$red >> 2] = HEAP32[36640];
 HEAP32[$red + 4 >> 2] = HEAP32[36641];
 HEAP32[$red + 8 >> 2] = HEAP32[36642];
 HEAP32[$red + 12 >> 2] = HEAP32[36643];
 HEAP32[$green >> 2] = HEAP32[36636];
 HEAP32[$green + 4 >> 2] = HEAP32[36637];
 HEAP32[$green + 8 >> 2] = HEAP32[36638];
 HEAP32[$green + 12 >> 2] = HEAP32[36639];
 if (__ZN14HexInputWidget4DrawEv($this + 148 | 0) | 0) HEAP16[$kc + 65626 >> 1] = HEAP16[$this + 158 >> 1] | 0; else {
  $$0$i$i = HEAP16[$kc + 65626 >> 1] | 0;
  HEAP8[$this + 160 >> 0] = 1;
  HEAP16[$this + 158 >> 1] = $$0$i$i;
  HEAP8[$this + 152 >> 0] = HEAP8[35768 + (($$0$i$i & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 153 >> 0] = HEAP8[35768 + (($$0$i$i & 65535) >>> 8 & 15) >> 0] | 0;
  $20 = $$0$i$i & 65535;
  HEAP8[$this + 154 >> 0] = HEAP8[35768 + ($20 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 155 >> 0] = HEAP8[35768 + ($20 & 15) >> 0] | 0;
  HEAP8[$this + 156 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(72.0, -1.0);
 $32 = $kc + 65620 | 0;
 if (__ZN14HexInputWidget4DrawEv($this + 164 | 0) | 0) HEAP16[$32 >> 1] = HEAP16[$this + 174 >> 1] | 0; else {
  $$0$i$i2 = HEAP16[$32 >> 1] | 0;
  HEAP8[$this + 176 >> 0] = 1;
  HEAP16[$this + 174 >> 1] = $$0$i$i2;
  HEAP8[$this + 168 >> 0] = HEAP8[35768 + (($$0$i$i2 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 169 >> 0] = HEAP8[35768 + (($$0$i$i2 & 65535) >>> 8 & 15) >> 0] | 0;
  $49 = $$0$i$i2 & 65535;
  HEAP8[$this + 170 >> 0] = HEAP8[35768 + ($49 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 171 >> 0] = HEAP8[35768 + ($49 & 15) >> 0] | 0;
  HEAP8[$this + 172 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(144.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 180 | 0) | 0) HEAP16[$kc + 65622 >> 1] = HEAP16[$this + 190 >> 1] | 0; else {
  $$0$i$i4 = HEAP16[$kc + 65622 >> 1] | 0;
  HEAP8[$this + 192 >> 0] = 1;
  HEAP16[$this + 190 >> 1] = $$0$i$i4;
  HEAP8[$this + 184 >> 0] = HEAP8[35768 + (($$0$i$i4 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 185 >> 0] = HEAP8[35768 + (($$0$i$i4 & 65535) >>> 8 & 15) >> 0] | 0;
  $79 = $$0$i$i4 & 65535;
  HEAP8[$this + 186 >> 0] = HEAP8[35768 + ($79 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 187 >> 0] = HEAP8[35768 + ($79 & 15) >> 0] | 0;
  HEAP8[$this + 188 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(216.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 196 | 0) | 0) HEAP16[$kc + 65624 >> 1] = HEAP16[$this + 206 >> 1] | 0; else {
  $$0$i$i6 = HEAP16[$kc + 65624 >> 1] | 0;
  HEAP8[$this + 208 >> 0] = 1;
  HEAP16[$this + 206 >> 1] = $$0$i$i6;
  HEAP8[$this + 200 >> 0] = HEAP8[35768 + (($$0$i$i6 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 201 >> 0] = HEAP8[35768 + (($$0$i$i6 & 65535) >>> 8 & 15) >> 0] | 0;
  $109 = $$0$i$i6 & 65535;
  HEAP8[$this + 202 >> 0] = HEAP8[35768 + ($109 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 203 >> 0] = HEAP8[35768 + ($109 & 15) >> 0] | 0;
  HEAP8[$this + 204 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(288.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 276 | 0) | 0) HEAP8[$kc + 65644 >> 0] = HEAP16[$this + 286 >> 1]; else {
  $$0$i$i8 = HEAP8[$kc + 65644 >> 0] | 0;
  HEAP8[$this + 288 >> 0] = 0;
  HEAP16[$this + 286 >> 1] = $$0$i$i8 & 255;
  HEAP8[$this + 280 >> 0] = HEAP8[35768 + (($$0$i$i8 & 255) >>> 4 & 255) >> 0] | 0;
  HEAP8[$this + 281 >> 0] = HEAP8[35768 + ($$0$i$i8 & 15) >> 0] | 0;
  HEAP8[$this + 282 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(336.0, -1.0);
 __ZN5ImGui11TextColoredERK6ImVec4PKcz(HEAP8[$kc + 65648 >> 0] | 0 ? $green : $red, 35568, sp);
 if (__ZN14HexInputWidget4DrawEv($this + 212 | 0) | 0) HEAP16[$kc + 65640 >> 1] = HEAP16[$this + 222 >> 1] | 0; else {
  $$0$i$i9 = HEAP16[$kc + 65640 >> 1] | 0;
  HEAP8[$this + 224 >> 0] = 1;
  HEAP16[$this + 222 >> 1] = $$0$i$i9;
  HEAP8[$this + 216 >> 0] = HEAP8[35768 + (($$0$i$i9 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 217 >> 0] = HEAP8[35768 + (($$0$i$i9 & 65535) >>> 8 & 15) >> 0] | 0;
  $163 = $$0$i$i9 & 65535;
  HEAP8[$this + 218 >> 0] = HEAP8[35768 + ($163 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 219 >> 0] = HEAP8[35768 + ($163 & 15) >> 0] | 0;
  HEAP8[$this + 220 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(72.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 228 | 0) | 0) HEAP16[$kc + 65634 >> 1] = HEAP16[$this + 238 >> 1] | 0; else {
  $$0$i$i11 = HEAP16[$kc + 65634 >> 1] | 0;
  HEAP8[$this + 240 >> 0] = 1;
  HEAP16[$this + 238 >> 1] = $$0$i$i11;
  HEAP8[$this + 232 >> 0] = HEAP8[35768 + (($$0$i$i11 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 233 >> 0] = HEAP8[35768 + (($$0$i$i11 & 65535) >>> 8 & 15) >> 0] | 0;
  $193 = $$0$i$i11 & 65535;
  HEAP8[$this + 234 >> 0] = HEAP8[35768 + ($193 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 235 >> 0] = HEAP8[35768 + ($193 & 15) >> 0] | 0;
  HEAP8[$this + 236 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(144.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 244 | 0) | 0) HEAP16[$kc + 65636 >> 1] = HEAP16[$this + 254 >> 1] | 0; else {
  $$0$i$i13 = HEAP16[$kc + 65636 >> 1] | 0;
  HEAP8[$this + 256 >> 0] = 1;
  HEAP16[$this + 254 >> 1] = $$0$i$i13;
  HEAP8[$this + 248 >> 0] = HEAP8[35768 + (($$0$i$i13 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 249 >> 0] = HEAP8[35768 + (($$0$i$i13 & 65535) >>> 8 & 15) >> 0] | 0;
  $223 = $$0$i$i13 & 65535;
  HEAP8[$this + 250 >> 0] = HEAP8[35768 + ($223 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 251 >> 0] = HEAP8[35768 + ($223 & 15) >> 0] | 0;
  HEAP8[$this + 252 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(216.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 260 | 0) | 0) HEAP16[$kc + 65638 >> 1] = HEAP16[$this + 270 >> 1] | 0; else {
  $$0$i$i15 = HEAP16[$kc + 65638 >> 1] | 0;
  HEAP8[$this + 272 >> 0] = 1;
  HEAP16[$this + 270 >> 1] = $$0$i$i15;
  HEAP8[$this + 264 >> 0] = HEAP8[35768 + (($$0$i$i15 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 265 >> 0] = HEAP8[35768 + (($$0$i$i15 & 65535) >>> 8 & 15) >> 0] | 0;
  $253 = $$0$i$i15 & 65535;
  HEAP8[$this + 266 >> 0] = HEAP8[35768 + ($253 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 267 >> 0] = HEAP8[35768 + ($253 & 15) >> 0] | 0;
  HEAP8[$this + 268 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(288.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 372 | 0) | 0) HEAP8[$kc + 65646 >> 0] = HEAP16[$this + 382 >> 1]; else {
  $$0$i$i17 = HEAP8[$kc + 65646 >> 0] | 0;
  HEAP8[$this + 384 >> 0] = 0;
  HEAP16[$this + 382 >> 1] = $$0$i$i17 & 255;
  HEAP8[$this + 376 >> 0] = HEAP8[35768 + (($$0$i$i17 & 255) >>> 4 & 255) >> 0] | 0;
  HEAP8[$this + 377 >> 0] = HEAP8[35768 + ($$0$i$i17 & 15) >> 0] | 0;
  HEAP8[$this + 378 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(336.0, -1.0);
 __ZN5ImGui11TextColoredERK6ImVec4PKcz(HEAP8[$kc + 65649 >> 0] | 0 ? $green : $red, 35573, sp + 8 | 0);
 if (__ZN14HexInputWidget4DrawEv($this + 308 | 0) | 0) HEAP16[$kc + 65628 >> 1] = HEAP16[$this + 318 >> 1] | 0; else {
  $$0$i$i19 = HEAP16[$kc + 65628 >> 1] | 0;
  HEAP8[$this + 320 >> 0] = 1;
  HEAP16[$this + 318 >> 1] = $$0$i$i19;
  HEAP8[$this + 312 >> 0] = HEAP8[35768 + (($$0$i$i19 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 313 >> 0] = HEAP8[35768 + (($$0$i$i19 & 65535) >>> 8 & 15) >> 0] | 0;
  $308 = $$0$i$i19 & 65535;
  HEAP8[$this + 314 >> 0] = HEAP8[35768 + ($308 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 315 >> 0] = HEAP8[35768 + ($308 & 15) >> 0] | 0;
  HEAP8[$this + 316 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(72.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 324 | 0) | 0) HEAP16[$kc + 65630 >> 1] = HEAP16[$this + 334 >> 1] | 0; else {
  $$0$i$i21 = HEAP16[$kc + 65630 >> 1] | 0;
  HEAP8[$this + 336 >> 0] = 1;
  HEAP16[$this + 334 >> 1] = $$0$i$i21;
  HEAP8[$this + 328 >> 0] = HEAP8[35768 + (($$0$i$i21 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 329 >> 0] = HEAP8[35768 + (($$0$i$i21 & 65535) >>> 8 & 15) >> 0] | 0;
  $338 = $$0$i$i21 & 65535;
  HEAP8[$this + 330 >> 0] = HEAP8[35768 + ($338 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 331 >> 0] = HEAP8[35768 + ($338 & 15) >> 0] | 0;
  HEAP8[$this + 332 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(144.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 340 | 0) | 0) HEAP16[$kc + 65632 >> 1] = HEAP16[$this + 350 >> 1] | 0; else {
  $$0$i$i23 = HEAP16[$kc + 65632 >> 1] | 0;
  HEAP8[$this + 352 >> 0] = 1;
  HEAP16[$this + 350 >> 1] = $$0$i$i23;
  HEAP8[$this + 344 >> 0] = HEAP8[35768 + (($$0$i$i23 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 345 >> 0] = HEAP8[35768 + (($$0$i$i23 & 65535) >>> 8 & 15) >> 0] | 0;
  $368 = $$0$i$i23 & 65535;
  HEAP8[$this + 346 >> 0] = HEAP8[35768 + ($368 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 347 >> 0] = HEAP8[35768 + ($368 & 15) >> 0] | 0;
  HEAP8[$this + 348 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(216.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 356 | 0) | 0) HEAP16[$kc + 65642 >> 1] = HEAP16[$this + 366 >> 1] | 0; else {
  $$0$i$i25 = HEAP16[$kc + 65642 >> 1] | 0;
  HEAP8[$this + 368 >> 0] = 1;
  HEAP16[$this + 366 >> 1] = $$0$i$i25;
  HEAP8[$this + 360 >> 0] = HEAP8[35768 + (($$0$i$i25 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 361 >> 0] = HEAP8[35768 + (($$0$i$i25 & 65535) >>> 8 & 15) >> 0] | 0;
  $398 = $$0$i$i25 & 65535;
  HEAP8[$this + 362 >> 0] = HEAP8[35768 + ($398 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 363 >> 0] = HEAP8[35768 + ($398 & 15) >> 0] | 0;
  HEAP8[$this + 364 >> 0] = 0;
 }
 __ZN5ImGui8SameLineEff(288.0, -1.0);
 if (__ZN14HexInputWidget4DrawEv($this + 292 | 0) | 0) {
  HEAP8[$kc + 65645 >> 0] = HEAP16[$this + 302 >> 1];
  __ZN5ImGui8SameLineEff(336.0, -1.0);
  $429 = $kc + 65647 | 0;
  $430 = HEAP8[$429 >> 0] | 0;
  $431 = $430 << 24 >> 24 != 0;
  $green$red1 = $431 ? $green : $red;
  __ZN5ImGui11TextColoredERK6ImVec4PKcz($green$red1, 35578, $vararg_buffer3);
  $432 = $kc + 65626 | 0;
  $433 = HEAP8[$432 >> 0] | 0;
  $434 = $433 & 255;
  $435 = $434 & 128;
  $436 = ($435 | 0) != 0;
  $437 = $436 ? 83 : 45;
  HEAP8[$vararg_buffer3 >> 0] = $437;
  $438 = $434 & 64;
  $439 = ($438 | 0) != 0;
  $440 = $439 ? 90 : 45;
  $441 = $vararg_buffer3 + 1 | 0;
  HEAP8[$441 >> 0] = $440;
  $442 = $434 & 32;
  $443 = ($442 | 0) != 0;
  $444 = $443 ? 89 : 45;
  $445 = $vararg_buffer3 + 2 | 0;
  HEAP8[$445 >> 0] = $444;
  $446 = $434 & 16;
  $447 = ($446 | 0) != 0;
  $448 = $447 ? 72 : 45;
  $449 = $vararg_buffer3 + 3 | 0;
  HEAP8[$449 >> 0] = $448;
  $450 = $434 & 8;
  $451 = ($450 | 0) != 0;
  $452 = $451 ? 88 : 45;
  $453 = $vararg_buffer3 + 4 | 0;
  HEAP8[$453 >> 0] = $452;
  $454 = $434 & 4;
  $455 = ($454 | 0) != 0;
  $456 = $455 ? 86 : 45;
  $457 = $vararg_buffer3 + 5 | 0;
  HEAP8[$457 >> 0] = $456;
  $458 = $434 & 2;
  $459 = ($458 | 0) != 0;
  $460 = $459 ? 78 : 45;
  $461 = $vararg_buffer3 + 6 | 0;
  HEAP8[$461 >> 0] = $460;
  $462 = $434 & 1;
  $463 = ($462 | 0) != 0;
  $464 = $463 ? 67 : 45;
  $465 = $vararg_buffer3 + 7 | 0;
  HEAP8[$465 >> 0] = $464;
  $466 = $vararg_buffer3 + 8 | 0;
  HEAP8[$466 >> 0] = 0;
  HEAP32[$vararg_buffer5 >> 2] = $vararg_buffer3;
  __ZN5ImGui4TextEPKcz(35583, $vararg_buffer5);
  STACKTOP = sp;
  return;
 } else {
  $$0$i$i27 = HEAP8[$kc + 65645 >> 0] | 0;
  HEAP8[$this + 304 >> 0] = 0;
  HEAP16[$this + 302 >> 1] = $$0$i$i27 & 255;
  HEAP8[$this + 296 >> 0] = HEAP8[35768 + (($$0$i$i27 & 255) >>> 4 & 255) >> 0] | 0;
  HEAP8[$this + 297 >> 0] = HEAP8[35768 + ($$0$i$i27 & 15) >> 0] | 0;
  HEAP8[$this + 298 >> 0] = 0;
  __ZN5ImGui8SameLineEff(336.0, -1.0);
  $429 = $kc + 65647 | 0;
  $430 = HEAP8[$429 >> 0] | 0;
  $431 = $430 << 24 >> 24 != 0;
  $green$red1 = $431 ? $green : $red;
  __ZN5ImGui11TextColoredERK6ImVec4PKcz($green$red1, 35578, $vararg_buffer3);
  $432 = $kc + 65626 | 0;
  $433 = HEAP8[$432 >> 0] | 0;
  $434 = $433 & 255;
  $435 = $434 & 128;
  $436 = ($435 | 0) != 0;
  $437 = $436 ? 83 : 45;
  HEAP8[$vararg_buffer3 >> 0] = $437;
  $438 = $434 & 64;
  $439 = ($438 | 0) != 0;
  $440 = $439 ? 90 : 45;
  $441 = $vararg_buffer3 + 1 | 0;
  HEAP8[$441 >> 0] = $440;
  $442 = $434 & 32;
  $443 = ($442 | 0) != 0;
  $444 = $443 ? 89 : 45;
  $445 = $vararg_buffer3 + 2 | 0;
  HEAP8[$445 >> 0] = $444;
  $446 = $434 & 16;
  $447 = ($446 | 0) != 0;
  $448 = $447 ? 72 : 45;
  $449 = $vararg_buffer3 + 3 | 0;
  HEAP8[$449 >> 0] = $448;
  $450 = $434 & 8;
  $451 = ($450 | 0) != 0;
  $452 = $451 ? 88 : 45;
  $453 = $vararg_buffer3 + 4 | 0;
  HEAP8[$453 >> 0] = $452;
  $454 = $434 & 4;
  $455 = ($454 | 0) != 0;
  $456 = $455 ? 86 : 45;
  $457 = $vararg_buffer3 + 5 | 0;
  HEAP8[$457 >> 0] = $456;
  $458 = $434 & 2;
  $459 = ($458 | 0) != 0;
  $460 = $459 ? 78 : 45;
  $461 = $vararg_buffer3 + 6 | 0;
  HEAP8[$461 >> 0] = $460;
  $462 = $434 & 1;
  $463 = ($462 | 0) != 0;
  $464 = $463 ? 67 : 45;
  $465 = $vararg_buffer3 + 7 | 0;
  HEAP8[$465 >> 0] = $464;
  $466 = $vararg_buffer3 + 8 | 0;
  HEAP8[$466 >> 0] = 0;
  HEAP32[$vararg_buffer5 >> 2] = $vararg_buffer3;
  __ZN5ImGui4TextEPKcz(35583, $vararg_buffer5);
  STACKTOP = sp;
  return;
 }
}

function __ZN11ImFontAtlas30AddFontFromMemoryCompressedTTFEPKvifPK12ImFontConfigPKt($this, $compressed_ttf_data, $compressed_ttf_size, $size_pixels, $font_cfg_template, $glyph_ranges) {
 $this = $this | 0;
 $compressed_ttf_data = $compressed_ttf_data | 0;
 $compressed_ttf_size = $compressed_ttf_size | 0;
 $size_pixels = +$size_pixels;
 $font_cfg_template = $font_cfg_template | 0;
 $glyph_ranges = $glyph_ranges | 0;
 var $$0$i$i = 0, $$0$i2$i = 0, $$012$i$i$i = 0, $$012$i15$i$i = 0, $$012$i25$i$i = 0, $$012$i3$i$i = 0, $$012$i31$i$i = 0, $$012$i9$i$i = 0, $$02$i = 0, $$02$i$lcssa205 = 0, $$02$i209 = 0, $$03$i$i$i = 0, $$03$i14$i$i = 0, $$03$i2$i$i = 0, $$03$i24$i$i = 0, $$03$i30$i$i = 0, $$03$i8$i$i = 0, $$lcssa222 = 0, $$pre$phi1$iZ2D = 0, $$pre$phi78Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $104 = 0, $108 = 0, $109 = 0, $116 = 0, $119 = 0, $120 = 0, $121 = 0, $125 = 0, $14 = 0, $140 = 0, $144 = 0, $145 = 0, $152 = 0, $167 = 0, $17 = 0, $176 = 0, $177 = 0, $18 = 0, $184 = 0, $188 = 0, $190 = 0, $191 = 0, $194 = 0, $195 = 0, $199 = 0, $202 = 0, $206 = 0, $207 = 0, $208 = 0, $211 = 0, $212 = 0, $215 = 0, $216 = 0, $220 = 0, $223 = 0, $241 = 0, $245 = 0, $246 = 0, $253 = 0, $270 = 0, $279 = 0, $280 = 0, $287 = 0, $292 = 0, $297 = 0, $299 = 0, $303 = 0, $304 = 0, $307 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $4 = 0, $69 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $94 = 0, $font_cfg$i = 0, $storemerge$i$i = 0, $storemerge$i$i$i = 0, $storemerge$i19$i$i = 0, $storemerge$i21$i$i = 0, $storemerge35$i$i = 0, $storemerge36$i$i = 0, $storemerge37$i$i = 0, $storemerge38$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $font_cfg$i = sp;
 $0 = $compressed_ttf_data + 8 | 0;
 $4 = $compressed_ttf_data + 9 | 0;
 $9 = $compressed_ttf_data + 10 | 0;
 $14 = $compressed_ttf_data + 11 | 0;
 $17 = HEAPU8[$4 >> 0] << 16 | HEAPU8[$0 >> 0] << 24 | HEAPU8[$9 >> 0] << 8 | HEAPU8[$14 >> 0];
 $18 = __ZN5ImGui8MemAllocEj($17) | 0;
 if ((HEAPU8[$compressed_ttf_data + 1 >> 0] << 16 | HEAPU8[$compressed_ttf_data >> 0] << 24 | HEAPU8[$compressed_ttf_data + 3 >> 0] | HEAPU8[$compressed_ttf_data + 2 >> 0] << 8 | 0) == 1471938560) if (!(HEAPU8[$compressed_ttf_data + 5 >> 0] << 16 | HEAPU8[$compressed_ttf_data + 4 >> 0] << 24 | HEAPU8[$compressed_ttf_data + 7 >> 0] | HEAPU8[$compressed_ttf_data + 6 >> 0] << 8)) {
  $69 = HEAPU8[$4 >> 0] << 16 | HEAPU8[$0 >> 0] << 24 | HEAPU8[$9 >> 0] << 8 | HEAPU8[$14 >> 0];
  HEAP32[40689] = $compressed_ttf_data;
  HEAP32[40690] = $compressed_ttf_data + $compressed_ttf_size;
  $71 = $18 + $69 | 0;
  HEAP32[40691] = $71;
  HEAP32[40692] = $18;
  HEAP32[40693] = $18;
  $73 = $71 + 1 | 0;
  $$02$i = $compressed_ttf_data + 16 | 0;
  $83 = $18;
  L4 : while (1) {
   $74 = HEAP8[$$02$i >> 0] | 0;
   $75 = $74 & 255;
   L6 : do if (($74 & 255) > 31) {
    if ($74 << 24 >> 24 < 0) {
     $84 = $83 + (0 - (HEAPU8[$$02$i + 1 >> 0] | 0)) + -1 | 0;
     $85 = $75 + -127 | 0;
     $86 = $83 + $85 | 0;
     if ($86 >>> 0 > $71 >>> 0) {
      label = 7;
      break L4;
     }
     if ($84 >>> 0 < $18 >>> 0) {
      HEAP32[40693] = $73;
      $315 = $73;
     } else if (!$85) $315 = $83; else {
      $$012$i$i$i = $84;
      $$03$i$i$i = $85;
      $94 = $83;
      while (1) {
       $$03$i$i$i = $$03$i$i$i + -1 | 0;
       HEAP8[$94 >> 0] = HEAP8[$$012$i$i$i >> 0] | 0;
       if (!$$03$i$i$i) break; else {
        $$012$i$i$i = $$012$i$i$i + 1 | 0;
        $94 = $94 + 1 | 0;
       }
      }
      HEAP32[40693] = $86;
      $315 = $86;
     }
     $$0$i2$i = $$02$i + 2 | 0;
     $299 = $315;
     break;
    }
    if (($74 & 255) > 63) {
     $104 = $83 + (16383 - (HEAPU8[$$02$i + 1 >> 0] | $75 << 8)) | 0;
     $108 = (HEAPU8[$$02$i + 2 >> 0] | 0) + 1 | 0;
     $109 = $83 + $108 | 0;
     if ($109 >>> 0 > $71 >>> 0) {
      label = 16;
      break L4;
     }
     if ($104 >>> 0 < $18 >>> 0) $storemerge38$i$i = $73; else {
      $$012$i3$i$i = $104;
      $$03$i2$i$i = $108;
      $116 = $83;
      while (1) {
       $$03$i2$i$i = $$03$i2$i$i + -1 | 0;
       HEAP8[$116 >> 0] = HEAP8[$$012$i3$i$i >> 0] | 0;
       if (!$$03$i2$i$i) {
        $storemerge38$i$i = $109;
        break;
       } else {
        $$012$i3$i$i = $$012$i3$i$i + 1 | 0;
        $116 = $116 + 1 | 0;
       }
      }
     }
     HEAP32[40693] = $storemerge38$i$i;
     $$0$i2$i = $$02$i + 3 | 0;
     $299 = $storemerge38$i$i;
     break;
    } else {
     $119 = $$02$i + 1 | 0;
     $120 = $75 + -31 | 0;
     $121 = $83 + $120 | 0;
     if ($121 >>> 0 > $71 >>> 0) {
      label = 21;
      break L4;
     }
     if ($119 >>> 0 < $compressed_ttf_data >>> 0) {
      $125 = $74;
      $storemerge$i$i$i = $73;
     } else {
      _memcpy($83 | 0, $119 | 0, $120 | 0) | 0;
      $125 = HEAP8[$$02$i >> 0] | 0;
      $storemerge$i$i$i = $121;
     }
     HEAP32[40693] = $storemerge$i$i$i;
     $$0$i$i = $$02$i + (($125 & 255) + -30) | 0;
     $316 = $storemerge$i$i$i;
     label = 59;
     break;
    }
   } else {
    if (($74 & 255) > 23) {
     $140 = $83 + (1572863 - (HEAPU8[$$02$i + 2 >> 0] | $75 << 16 | HEAPU8[$$02$i + 1 >> 0] << 8)) | 0;
     $144 = (HEAPU8[$$02$i + 3 >> 0] | 0) + 1 | 0;
     $145 = $83 + $144 | 0;
     if ($145 >>> 0 > $71 >>> 0) {
      label = 27;
      break L4;
     }
     if ($140 >>> 0 < $18 >>> 0) $storemerge37$i$i = $73; else {
      $$012$i9$i$i = $140;
      $$03$i8$i$i = $144;
      $152 = $83;
      while (1) {
       $$03$i8$i$i = $$03$i8$i$i + -1 | 0;
       HEAP8[$152 >> 0] = HEAP8[$$012$i9$i$i >> 0] | 0;
       if (!$$03$i8$i$i) {
        $storemerge37$i$i = $145;
        break;
       } else {
        $$012$i9$i$i = $$012$i9$i$i + 1 | 0;
        $152 = $152 + 1 | 0;
       }
      }
     }
     HEAP32[40693] = $storemerge37$i$i;
     $$0$i2$i = $$02$i + 4 | 0;
     $299 = $storemerge37$i$i;
     break;
    }
    if (($74 & 255) > 15) {
     $167 = $83 + (1048575 - (HEAPU8[$$02$i + 2 >> 0] | $75 << 16 | HEAPU8[$$02$i + 1 >> 0] << 8)) | 0;
     $176 = (HEAPU8[$$02$i + 3 >> 0] << 8 | HEAPU8[$$02$i + 4 >> 0]) + 1 | 0;
     $177 = $83 + $176 | 0;
     if ($177 >>> 0 > $71 >>> 0) {
      label = 33;
      break L4;
     }
     if ($167 >>> 0 < $18 >>> 0) $storemerge36$i$i = $73; else {
      $$012$i15$i$i = $167;
      $$03$i14$i$i = $176;
      $184 = $83;
      while (1) {
       $$03$i14$i$i = $$03$i14$i$i + -1 | 0;
       HEAP8[$184 >> 0] = HEAP8[$$012$i15$i$i >> 0] | 0;
       if (!$$03$i14$i$i) {
        $storemerge36$i$i = $177;
        break;
       } else {
        $$012$i15$i$i = $$012$i15$i$i + 1 | 0;
        $184 = $184 + 1 | 0;
       }
      }
     }
     HEAP32[40693] = $storemerge36$i$i;
     $$0$i2$i = $$02$i + 5 | 0;
     $299 = $storemerge36$i$i;
     break;
    }
    if (($74 & 255) > 7) {
     $188 = $$02$i + 2 | 0;
     $190 = $$02$i + 1 | 0;
     $191 = HEAP8[$190 >> 0] | 0;
     $194 = ($191 & 255 | $75 << 8) + -2047 | 0;
     $195 = $83 + $194 | 0;
     if ($195 >>> 0 > $71 >>> 0) {
      label = 39;
      break L4;
     }
     if ($188 >>> 0 < $compressed_ttf_data >>> 0) {
      $199 = $74;
      $202 = $191;
      $storemerge$i19$i$i = $73;
     } else {
      _memcpy($83 | 0, $188 | 0, $194 | 0) | 0;
      $199 = HEAP8[$$02$i >> 0] | 0;
      $202 = HEAP8[$190 >> 0] | 0;
      $storemerge$i19$i$i = $195;
     }
     HEAP32[40693] = $storemerge$i19$i$i;
     $$0$i$i = $$02$i + ((($199 & 255) << 8 | $202 & 255) + -2045) | 0;
     $316 = $storemerge$i19$i$i;
     label = 59;
     break;
    }
    switch ($74 << 24 >> 24) {
    case 7:
     {
      $206 = $$02$i + 3 | 0;
      $207 = $$02$i + 1 | 0;
      $208 = HEAP8[$207 >> 0] | 0;
      $211 = $$02$i + 2 | 0;
      $212 = HEAP8[$211 >> 0] | 0;
      $215 = (($208 & 255) << 8 | $212 & 255) + 1 | 0;
      $216 = $83 + $215 | 0;
      if ($216 >>> 0 > $71 >>> 0) {
       label = 45;
       break L4;
      }
      if ($206 >>> 0 < $compressed_ttf_data >>> 0) {
       $220 = $208;
       $223 = $212;
       $storemerge$i21$i$i = $73;
      } else {
       _memcpy($83 | 0, $206 | 0, $215 | 0) | 0;
       $220 = HEAP8[$207 >> 0] | 0;
       $223 = HEAP8[$211 >> 0] | 0;
       $storemerge$i21$i$i = $216;
      }
      HEAP32[40693] = $storemerge$i21$i$i;
      $$0$i$i = $$02$i + ((($220 & 255) << 8 | $223 & 255) + 4) | 0;
      $316 = $storemerge$i21$i$i;
      label = 59;
      break L6;
      break;
     }
    case 6:
     {
      $241 = $83 + ~(HEAPU8[$$02$i + 3 >> 0] | HEAPU8[$$02$i + 1 >> 0] << 16 | HEAPU8[$$02$i + 2 >> 0] << 8) | 0;
      $245 = (HEAPU8[$$02$i + 4 >> 0] | 0) + 1 | 0;
      $246 = $83 + $245 | 0;
      if ($246 >>> 0 > $71 >>> 0) {
       label = 50;
       break L4;
      }
      if ($241 >>> 0 < $18 >>> 0) $storemerge35$i$i = $73; else {
       $$012$i25$i$i = $241;
       $$03$i24$i$i = $245;
       $253 = $83;
       while (1) {
        $$03$i24$i$i = $$03$i24$i$i + -1 | 0;
        HEAP8[$253 >> 0] = HEAP8[$$012$i25$i$i >> 0] | 0;
        if (!$$03$i24$i$i) {
         $storemerge35$i$i = $246;
         break;
        } else {
         $$012$i25$i$i = $$012$i25$i$i + 1 | 0;
         $253 = $253 + 1 | 0;
        }
       }
      }
      HEAP32[40693] = $storemerge35$i$i;
      $$0$i2$i = $$02$i + 5 | 0;
      $299 = $storemerge35$i$i;
      break L6;
      break;
     }
    case 4:
     {
      $270 = $83 + ~(HEAPU8[$$02$i + 3 >> 0] | HEAPU8[$$02$i + 1 >> 0] << 16 | HEAPU8[$$02$i + 2 >> 0] << 8) | 0;
      $279 = (HEAPU8[$$02$i + 4 >> 0] << 8 | HEAPU8[$$02$i + 5 >> 0]) + 1 | 0;
      $280 = $83 + $279 | 0;
      if ($280 >>> 0 > $71 >>> 0) {
       label = 55;
       break L4;
      }
      if ($270 >>> 0 < $18 >>> 0) $storemerge$i$i = $73; else {
       $$012$i31$i$i = $270;
       $$03$i30$i$i = $279;
       $287 = $83;
       while (1) {
        $$03$i30$i$i = $$03$i30$i$i + -1 | 0;
        HEAP8[$287 >> 0] = HEAP8[$$012$i31$i$i >> 0] | 0;
        if (!$$03$i30$i$i) {
         $storemerge$i$i = $280;
         break;
        } else {
         $$012$i31$i$i = $$012$i31$i$i + 1 | 0;
         $287 = $287 + 1 | 0;
        }
       }
      }
      HEAP32[40693] = $storemerge$i$i;
      $$0$i2$i = $$02$i + 6 | 0;
      $299 = $storemerge$i$i;
      break L6;
      break;
     }
    default:
     {
      $$02$i209 = $$02$i;
      $292 = $74;
      $297 = $83;
      break L4;
     }
    }
   } while (0);
   if ((label | 0) == 59) {
    label = 0;
    if (($$0$i$i | 0) == ($$02$i | 0)) {
     $$02$i$lcssa205 = $$02$i;
     $$lcssa222 = $316;
     label = 60;
     break;
    } else {
     $$0$i2$i = $$0$i$i;
     $299 = $316;
    }
   }
   if ($299 >>> 0 > $71 >>> 0) {
    label = 67;
    break;
   } else {
    $$02$i = $$0$i2$i;
    $83 = $299;
   }
  }
  switch (label | 0) {
  case 7:
   {
    ___assert_fail(139636, 127372, 2085, 139671);
    break;
   }
  case 16:
   {
    ___assert_fail(139636, 127372, 2085, 139671);
    break;
   }
  case 21:
   {
    ___assert_fail(139636, 127372, 2093, 139682);
    break;
   }
  case 27:
   {
    ___assert_fail(139636, 127372, 2085, 139671);
    break;
   }
  case 33:
   {
    ___assert_fail(139636, 127372, 2085, 139671);
    break;
   }
  case 39:
   {
    ___assert_fail(139636, 127372, 2093, 139682);
    break;
   }
  case 45:
   {
    ___assert_fail(139636, 127372, 2093, 139682);
    break;
   }
  case 50:
   {
    ___assert_fail(139636, 127372, 2085, 139671);
    break;
   }
  case 55:
   {
    ___assert_fail(139636, 127372, 2085, 139671);
    break;
   }
  case 60:
   {
    $$02$i209 = $$02$i$lcssa205;
    $292 = HEAP8[$$02$i$lcssa205 >> 0] | 0;
    $297 = $$lcssa222;
    break;
   }
  case 67:
   {
    ___assert_fail(139735, 127372, 2180, 139718);
    break;
   }
  }
  if ($292 << 24 >> 24 != 5) ___assert_fail(139733, 127372, 2176, 139718);
  if ((HEAP8[$$02$i209 + 1 >> 0] | 0) != -6) ___assert_fail(139733, 127372, 2176, 139718);
  if (($297 | 0) != ($71 | 0)) ___assert_fail(139691, 127372, 2170, 139718);
 }
 do if (!$font_cfg_template) {
  $303 = $font_cfg$i + 32 | 0;
  HEAP32[$font_cfg$i >> 2] = 0;
  $304 = $font_cfg$i + 4 | 0;
  HEAP32[$304 >> 2] = 0;
  HEAP8[$font_cfg$i + 8 >> 0] = 1;
  HEAP32[$font_cfg$i + 12 >> 2] = 0;
  $307 = $font_cfg$i + 16 | 0;
  HEAPF32[$307 >> 2] = 0.0;
  HEAP32[$font_cfg$i + 20 >> 2] = 3;
  HEAP32[$font_cfg$i + 24 >> 2] = 1;
  HEAP8[$font_cfg$i + 28 >> 0] = 0;
  HEAP32[$font_cfg$i + 80 >> 2] = 0;
  dest = $303;
  stop = dest + 44 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP16[$303 + 44 >> 1] = 0;
  $$pre$phi1$iZ2D = $font_cfg$i;
  $$pre$phi78Z2D = $307;
  $$pre$phiZ2D = $304;
  $317 = $font_cfg$i;
 } else {
  if (HEAP32[$font_cfg_template >> 2] | 0) ___assert_fail(139762, 127372, 1191, 139786);
  dest = $font_cfg$i;
  src = $font_cfg_template;
  stop = dest + 84 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  if (!(HEAP32[$font_cfg$i >> 2] | 0)) {
   $$pre$phi1$iZ2D = $font_cfg$i;
   $$pre$phi78Z2D = $font_cfg$i + 16 | 0;
   $$pre$phiZ2D = $font_cfg$i + 4 | 0;
   $317 = $font_cfg$i;
   break;
  } else ___assert_fail(139762, 127372, 1175, 139817);
 } while (0);
 HEAP32[$$pre$phi1$iZ2D >> 2] = $18;
 HEAP32[$$pre$phiZ2D >> 2] = $17;
 HEAPF32[$$pre$phi78Z2D >> 2] = $size_pixels;
 if (!$glyph_ranges) {
  $314 = __ZN11ImFontAtlas7AddFontEPK12ImFontConfig($this, $font_cfg$i) | 0;
  STACKTOP = sp;
  return $314 | 0;
 }
 HEAP32[$font_cfg$i + 40 >> 2] = $glyph_ranges;
 $314 = __ZN11ImFontAtlas7AddFontEPK12ImFontConfig($this, $font_cfg$i) | 0;
 STACKTOP = sp;
 return $314 | 0;
}

function __ZL16stbrp_pack_rectsP13stbrp_contextP10stbrp_recti($context, $rects, $num_rects) {
 $context = $context | 0;
 $rects = $rects | 0;
 $num_rects = $num_rects | 0;
 var $$lcssa = 0, $$lcssa40 = 0, $$ph = 0, $$phi$trans$insert$i = 0, $$pre = 0, $$pre35$i$i = 0, $0 = 0, $100 = 0, $103 = 0, $105 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $115 = 0, $119 = 0, $12 = 0, $121 = 0, $127 = 0, $128 = 0, $130 = 0, $140 = 0, $143 = 0, $16 = 0, $162 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $42 = 0, $5 = 0, $56 = 0, $57 = 0, $6 = 0, $63 = 0, $69 = 0, $7 = 0, $71 = 0, $72 = 0, $79 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $94 = 0, $97 = 0, $99 = 0, $best$0$lcssa37$i$i = 0, $best$026$i$i = 0, $best$1$i$i = 0, $best$1$i$i$lcssa = 0, $best$215$i$i = 0, $best$3$i$i = 0, $best_waste$0$lcssa36$i$i = 0, $best_waste$027$i$i = 0, $best_waste$1$i$i = 0, $best_waste$1$i$i$lcssa = 0, $best_waste$217$i$i = 0, $best_waste$3$i$i = 0, $best_x$016$i$i = 0, $best_x$1$i$i = 0, $best_y$0$lcssa38$i$i = 0, $best_y$023$i$i = 0, $best_y$1$i$i = 0, $best_y$1$i$i$lcssa = 0, $best_y$211$i$i = 0, $best_y$3$i$i = 0, $count$0$lcssa$i = 0, $count$010$i = 0, $count$1$lcssa$i = 0, $count$17$i = 0, $cur$0$lcssa$i = 0, $cur$0$ph$i = 0, $cur$014$i = 0, $cur$014$i$phi = 0, $cur$1$i = 0, $cur$211$i = 0, $cur$36$i = 0, $cur$38$i = 0, $i$014 = 0, $i$18 = 0, $i$27 = 0, $node$025$i$i = 0, $node$113$i$i = 0, $node$2$i$i = 0, $node$2$i$i$lcssa = 0, $prev$024$i$i = 0, $prev$112$i$i = 0, $prev$2$i$i = 0, $prev$2$i$i$lcssa = 0, $tail$0$lcssa$i$i = 0, $tail$020$i$i = 0, $tail$114$i$i = 0, $waste$i$i = 0, label = 0, sp = 0, $130$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $waste$i$i = sp;
 $0 = ($num_rects | 0) > 0;
 if ($0) {
  $i$014 = 0;
  do {
   HEAP32[$rects + ($i$014 << 4) + 12 >> 2] = $i$014;
   $i$014 = $i$014 + 1 | 0;
  } while (($i$014 | 0) != ($num_rects | 0));
  _qsort($rects, $num_rects, 16, 21);
  if ($0) {
   $3 = $context + 8 | 0;
   $4 = $context + 24 | 0;
   $$phi$trans$insert$i = $context + 16 | 0;
   $5 = $context + 4 | 0;
   $6 = $context + 28 | 0;
   $7 = $context + 20 | 0;
   $i$18 = 0;
   L6 : while (1) {
    $9 = HEAP16[$rects + ($i$18 << 4) + 4 >> 1] | 0;
    do if (!($9 << 16 >> 16)) label = 8; else {
     $12 = HEAP16[$rects + ($i$18 << 4) + 6 >> 1] | 0;
     if (!($12 << 16 >> 16)) label = 8; else {
      $16 = $9 & 65535;
      $17 = $12 & 65535;
      $18 = HEAP32[$3 >> 2] | 0;
      $20 = $16 + -1 + $18 | 0;
      $22 = $20 - (($20 | 0) % ($18 | 0) | 0) | 0;
      if (($22 | 0) % ($18 | 0) | 0 | 0) {
       label = 10;
       break L6;
      }
      $25 = HEAP32[$4 >> 2] | 0;
      $26 = HEAP16[$25 >> 1] | 0;
      if ((($26 & 65535) + $22 | 0) > (HEAP32[$context >> 2] | 0)) {
       $166 = 0;
       $56 = HEAP32[$$phi$trans$insert$i >> 2] | 0;
       $best$0$lcssa37$i$i = 0;
       $best_waste$0$lcssa36$i$i = 1073741824;
       $best_y$0$lcssa38$i$i = 1073741824;
      } else {
       $32 = $26;
       $best$026$i$i = 0;
       $best_waste$027$i$i = 1073741824;
       $best_y$023$i$i = 1073741824;
       $node$025$i$i = $25;
       $prev$024$i$i = $4;
       while (1) {
        $33 = __ZL25stbrp__skyline_find_min_yP13stbrp_contextP10stbrp_nodeiiPi($node$025$i$i, $32 & 65535, $22, $waste$i$i) | 0;
        $34 = HEAP32[$$phi$trans$insert$i >> 2] | 0;
        do if (!$34) {
         $36 = ($33 | 0) < ($best_y$023$i$i | 0);
         $best$1$i$i = $36 ? $prev$024$i$i : $best$026$i$i;
         $best_waste$1$i$i = $best_waste$027$i$i;
         $best_y$1$i$i = $36 ? $33 : $best_y$023$i$i;
        } else if (($33 + $17 | 0) > (HEAP32[$5 >> 2] | 0)) {
         $best$1$i$i = $best$026$i$i;
         $best_waste$1$i$i = $best_waste$027$i$i;
         $best_y$1$i$i = $best_y$023$i$i;
        } else {
         if (($33 | 0) < ($best_y$023$i$i | 0)) $167 = HEAP32[$waste$i$i >> 2] | 0; else {
          $42 = HEAP32[$waste$i$i >> 2] | 0;
          if (($33 | 0) == ($best_y$023$i$i | 0) & ($42 | 0) < ($best_waste$027$i$i | 0)) $167 = $42; else {
           $best$1$i$i = $best$026$i$i;
           $best_waste$1$i$i = $best_waste$027$i$i;
           $best_y$1$i$i = $best_y$023$i$i;
           break;
          }
         }
         $best$1$i$i = $prev$024$i$i;
         $best_waste$1$i$i = $167;
         $best_y$1$i$i = $33;
        } while (0);
        $prev$024$i$i = $node$025$i$i + 4 | 0;
        $node$025$i$i = HEAP32[$prev$024$i$i >> 2] | 0;
        $32 = HEAP16[$node$025$i$i >> 1] | 0;
        if ((($32 & 65535) + $22 | 0) > (HEAP32[$context >> 2] | 0)) {
         $$lcssa = $34;
         $best$1$i$i$lcssa = $best$1$i$i;
         $best_waste$1$i$i$lcssa = $best_waste$1$i$i;
         $best_y$1$i$i$lcssa = $best_y$1$i$i;
         break;
        } else {
         $best$026$i$i = $best$1$i$i;
         $best_waste$027$i$i = $best_waste$1$i$i;
         $best_y$023$i$i = $best_y$1$i$i;
        }
       }
       if (!$best$1$i$i$lcssa) {
        $166 = 0;
        $56 = $$lcssa;
        $best$0$lcssa37$i$i = 0;
        $best_waste$0$lcssa36$i$i = $best_waste$1$i$i$lcssa;
        $best_y$0$lcssa38$i$i = $best_y$1$i$i$lcssa;
       } else {
        $166 = HEAPU16[HEAP32[$best$1$i$i$lcssa >> 2] >> 1] | 0;
        $56 = $$lcssa;
        $best$0$lcssa37$i$i = $best$1$i$i$lcssa;
        $best_waste$0$lcssa36$i$i = $best_waste$1$i$i$lcssa;
        $best_y$0$lcssa38$i$i = $best_y$1$i$i$lcssa;
       }
      }
      if (($56 | 0) == 1) {
       $57 = HEAP32[$4 >> 2] | 0;
       if ((HEAPU16[$57 >> 1] | 0) < ($22 | 0)) {
        $tail$020$i$i = $57;
        while (1) {
         $63 = HEAP32[$tail$020$i$i + 4 >> 2] | 0;
         if ((HEAPU16[$63 >> 1] | 0) < ($22 | 0)) $tail$020$i$i = $63; else {
          $tail$0$lcssa$i$i = $63;
          break;
         }
        }
       } else $tail$0$lcssa$i$i = $57;
       if (!$tail$0$lcssa$i$i) {
        $100 = $166;
        $92 = $best$0$lcssa37$i$i;
        $94 = $best_y$0$lcssa38$i$i;
       } else {
        $best$215$i$i = $best$0$lcssa37$i$i;
        $best_waste$217$i$i = $best_waste$0$lcssa36$i$i;
        $best_x$016$i$i = $166;
        $best_y$211$i$i = $best_y$0$lcssa38$i$i;
        $node$113$i$i = $57;
        $prev$112$i$i = $4;
        $tail$114$i$i = $tail$0$lcssa$i$i;
        while (1) {
         $69 = (HEAPU16[$tail$114$i$i >> 1] | 0) - $22 | 0;
         if (($69 | 0) > -1) {
          $node$2$i$i = $node$113$i$i;
          $prev$2$i$i = $prev$112$i$i;
         } else {
          label = 28;
          break L6;
         }
         while (1) {
          $71 = $node$2$i$i + 4 | 0;
          $72 = HEAP32[$71 >> 2] | 0;
          if ((HEAPU16[$72 >> 1] | 0) > ($69 | 0)) {
           $node$2$i$i$lcssa = $node$2$i$i;
           $prev$2$i$i$lcssa = $prev$2$i$i;
           break;
          } else {
           $node$2$i$i = $72;
           $prev$2$i$i = $71;
          }
         }
         if ((HEAPU16[$node$2$i$i$lcssa >> 1] | 0) > ($69 | 0)) {
          label = 31;
          break L6;
         }
         $79 = __ZL25stbrp__skyline_find_min_yP13stbrp_contextP10stbrp_nodeiiPi($node$2$i$i$lcssa, $69, $22, $waste$i$i) | 0;
         do if (($79 | 0) > ($best_y$211$i$i | 0) ? 1 : ($79 + $17 | 0) >= (HEAP32[$5 >> 2] | 0)) {
          $best$3$i$i = $best$215$i$i;
          $best_waste$3$i$i = $best_waste$217$i$i;
          $best_x$1$i$i = $best_x$016$i$i;
          $best_y$3$i$i = $best_y$211$i$i;
         } else {
          $$pre35$i$i = HEAP32[$waste$i$i >> 2] | 0;
          if (($79 | 0) < ($best_y$211$i$i | 0) | ($$pre35$i$i | 0) < ($best_waste$217$i$i | 0)) $168 = $$pre35$i$i; else if (($69 | 0) < ($best_x$016$i$i | 0) & ($$pre35$i$i | 0) == ($best_waste$217$i$i | 0)) $168 = $best_waste$217$i$i; else {
           $best$3$i$i = $best$215$i$i;
           $best_waste$3$i$i = $best_waste$217$i$i;
           $best_x$1$i$i = $best_x$016$i$i;
           $best_y$3$i$i = $best_y$211$i$i;
           break;
          }
          $best$3$i$i = $prev$2$i$i$lcssa;
          $best_waste$3$i$i = $168;
          $best_x$1$i$i = $69;
          $best_y$3$i$i = $79;
         } while (0);
         $89 = HEAP32[$tail$114$i$i + 4 >> 2] | 0;
         if (!$89) {
          $100 = $best_x$1$i$i;
          $92 = $best$3$i$i;
          $94 = $best_y$3$i$i;
          break;
         } else {
          $best$215$i$i = $best$3$i$i;
          $best_waste$217$i$i = $best_waste$3$i$i;
          $best_x$016$i$i = $best_x$1$i$i;
          $best_y$211$i$i = $best_y$3$i$i;
          $node$113$i$i = $node$2$i$i$lcssa;
          $prev$112$i$i = $prev$2$i$i$lcssa;
          $tail$114$i$i = $89;
         }
        }
       }
      } else {
       $100 = $166;
       $92 = $best$0$lcssa37$i$i;
       $94 = $best_y$0$lcssa38$i$i;
      }
      if ($92 | 0) {
       $93 = $94 + $17 | 0;
       if (($93 | 0) <= (HEAP32[$5 >> 2] | 0)) {
        $97 = HEAP32[$6 >> 2] | 0;
        if ($97 | 0) {
         $99 = $100 & 65535;
         HEAP16[$97 >> 1] = $99;
         HEAP16[$97 + 2 >> 1] = $93;
         $103 = $97 + 4 | 0;
         HEAP32[$6 >> 2] = HEAP32[$103 >> 2];
         $105 = HEAP32[$92 >> 2] | 0;
         if ((HEAPU16[$105 >> 1] | 0) < ($100 | 0)) {
          $109 = $105 + 4 | 0;
          $110 = HEAP32[$109 >> 2] | 0;
          HEAP32[$109 >> 2] = $97;
          $cur$0$ph$i = $110;
         } else {
          HEAP32[$92 >> 2] = $97;
          $cur$0$ph$i = $105;
         }
         $111 = $cur$0$ph$i + 4 | 0;
         $112 = HEAP32[$111 >> 2] | 0;
         $$pre = $100 + $16 | 0;
         L55 : do if (!$112) $cur$0$lcssa$i = $cur$0$ph$i; else {
          $115 = $112;
          $119 = $111;
          $cur$014$i = $cur$0$ph$i;
          while (1) {
           if ((HEAPU16[$115 >> 1] | 0) > ($$pre | 0)) {
            $cur$0$lcssa$i = $cur$014$i;
            break L55;
           }
           HEAP32[$119 >> 2] = HEAP32[$6 >> 2];
           HEAP32[$6 >> 2] = $cur$014$i;
           $119 = $115 + 4 | 0;
           $121 = HEAP32[$119 >> 2] | 0;
           if (!$121) {
            $cur$0$lcssa$i = $115;
            break;
           } else {
            $cur$014$i$phi = $115;
            $115 = $121;
            $cur$014$i = $cur$014$i$phi;
           }
          }
         } while (0);
         HEAP32[$103 >> 2] = $cur$0$lcssa$i;
         if ((HEAPU16[$cur$0$lcssa$i >> 1] | 0) < ($$pre | 0)) HEAP16[$cur$0$lcssa$i >> 1] = $$pre;
         $127 = HEAP32[$4 >> 2] | 0;
         $128 = HEAP32[$context >> 2] | 0;
         $130 = HEAP16[$127 >> 1] | 0;
         $cur$1$i = $127;
         while (1) {
          $cur$1$i = HEAP32[$cur$1$i + 4 >> 2] | 0;
          if (($130 & 65535 | 0) >= ($128 | 0)) {
           $$lcssa40 = $cur$1$i;
           break;
          }
          $130$looptemp = $130;
          $130 = HEAP16[$cur$1$i >> 1] | 0;
          if (($130$looptemp & 65535) >= ($130 & 65535)) {
           label = 51;
           break L6;
          }
         }
         if ($$lcssa40 | 0) {
          label = 54;
          break L6;
         }
         if (!$127) $count$0$lcssa$i = 0; else {
          $count$010$i = 0;
          $cur$211$i = $127;
          while (1) {
           $140 = $count$010$i + 1 | 0;
           $cur$211$i = HEAP32[$cur$211$i + 4 >> 2] | 0;
           if (!$cur$211$i) {
            $count$0$lcssa$i = $140;
            break;
           } else $count$010$i = $140;
          }
         }
         $cur$36$i = HEAP32[$6 >> 2] | 0;
         if (!$cur$36$i) $count$1$lcssa$i = $count$0$lcssa$i; else {
          $count$17$i = $count$0$lcssa$i;
          $cur$38$i = $cur$36$i;
          while (1) {
           $143 = $count$17$i + 1 | 0;
           $cur$38$i = HEAP32[$cur$38$i + 4 >> 2] | 0;
           if (!$cur$38$i) {
            $count$1$lcssa$i = $143;
            break;
           } else $count$17$i = $143;
          }
         }
         if (($count$1$lcssa$i | 0) != ((HEAP32[$7 >> 2] | 0) + 2 | 0)) {
          label = 59;
          break L6;
         }
         HEAP16[$rects + ($i$18 << 4) + 8 >> 1] = $99;
         HEAP16[$rects + ($i$18 << 4) + 10 >> 1] = $94;
         break;
        }
       }
      }
      HEAP16[$rects + ($i$18 << 4) + 10 >> 1] = -1;
      HEAP16[$rects + ($i$18 << 4) + 8 >> 1] = -1;
     }
    } while (0);
    if ((label | 0) == 8) {
     label = 0;
     HEAP16[$rects + ($i$18 << 4) + 10 >> 1] = 0;
     HEAP16[$rects + ($i$18 << 4) + 8 >> 1] = 0;
    }
    $i$18 = $i$18 + 1 | 0;
    if (($i$18 | 0) >= ($num_rects | 0)) {
     label = 64;
     break;
    }
   }
   if ((label | 0) == 10) ___assert_fail(140161, 140089, 334, 140183); else if ((label | 0) == 28) ___assert_fail(140272, 140089, 391, 140183); else if ((label | 0) == 31) ___assert_fail(140282, 140089, 397, 140183); else if ((label | 0) == 51) ___assert_fail(140322, 140089, 475, 140344); else if ((label | 0) == 54) ___assert_fail(140374, 140089, 478, 140344); else if ((label | 0) == 59) ___assert_fail(140390, 140089, 495, 140344); else if ((label | 0) == 64) {
    _qsort($rects, $num_rects, 16, 22);
    if ($0) $i$27 = 0; else {
     STACKTOP = sp;
     return;
    }
    do {
     if ((HEAP16[$rects + ($i$27 << 4) + 8 >> 1] | 0) == -1) $162 = (HEAP16[$rects + ($i$27 << 4) + 10 >> 1] | 0) == -1; else $162 = 0;
     HEAP32[$rects + ($i$27 << 4) + 12 >> 2] = $162 & 1 ^ 1;
     $i$27 = $i$27 + 1 | 0;
    } while (($i$27 | 0) != ($num_rects | 0));
    STACKTOP = sp;
    return;
   }
  } else $$ph = $rects;
 } else {
  _qsort($rects, $num_rects, 16, 21);
  $$ph = $rects;
 }
 _qsort($$ph, $num_rects, 16, 22);
 STACKTOP = sp;
 return;
}

function __ZN12MemoryEditor4DrawEPKcPFhPvtEPFvS2_thES2_($this, $title, $read_func, $write_func, $userdata) {
 $this = $this | 0;
 $title = $title | 0;
 $read_func = $read_func | 0;
 $write_func = $write_func | 0;
 $userdata = $userdata | 0;
 var $$data_next$2$off0 = 0, $$pre35 = 0, $0 = 0, $1 = 0, $10 = 0.0, $101 = 0, $102 = 0.0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $110 = 0.0, $118 = 0, $119 = 0, $123 = 0.0, $124 = 0, $130 = 0, $14 = 0.0, $15 = 0.0, $153 = 0, $16 = 0.0, $17 = 0, $174 = 0, $176 = 0, $178 = 0.0, $179 = 0.0, $183 = 0, $185 = 0, $199 = 0, $2 = 0, $20 = 0, $206 = 0, $208 = 0, $21 = 0, $214 = 0, $223 = 0, $225 = 0, $230 = 0, $233 = 0, $239 = 0, $24 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0.0, $3 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $42 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $56 = 0, $59 = 0, $6 = 0, $62 = 0, $66 = 0, $68 = 0, $7 = 0, $71 = 0, $72 = 0, $77 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $87 = 0.0, $98 = 0, $clipper = 0, $cursor_pos = 0, $data = 0, $data_next$0$off0$lcssa = 0, $data_next$0$off029 = 0, $data_next$1$off0$lcssa = 0, $data_next$1$off020 = 0, $data_next$2$off0 = 0, $data_next$4$off0 = 0, $data_write$0$off0 = 0, $draw_separator$0$off028 = 0, $line_i$027 = 0, $n$019 = 0, $n1$024 = 0, $offset$017 = 0, $offset$123 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer16 = 0, $vararg_buffer19 = 0, $vararg_buffer22 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $vararg_buffer22 = sp + 64 | 0;
 $vararg_buffer19 = sp + 56 | 0;
 $vararg_buffer16 = sp + 48 | 0;
 $vararg_buffer13 = sp + 40 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 168 | 0;
 $1 = sp + 136 | 0;
 $2 = sp + 128 | 0;
 $3 = sp + 112 | 0;
 $clipper = sp + 152 | 0;
 $cursor_pos = sp + 144 | 0;
 $4 = sp + 104 | 0;
 $data = sp + 120 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 88 | 0;
 $7 = sp + 72 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi($title, $this, 128) | 0)) {
  __ZN5ImGui3EndEv();
  $244 = HEAP8[$this >> 0] | 0;
  $245 = $244 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $245 | 0;
 }
 $10 = -+__ZN5ImGui29GetItemsLineHeightWithSpacingEv();
 HEAPF32[$0 >> 2] = 0.0;
 HEAPF32[$0 + 4 >> 2] = $10;
 __ZN5ImGui10BeginChildEPKcRK6ImVec2bi(35651, $0, 0, 0) | 0;
 HEAPF32[$1 >> 2] = 0.0;
 HEAPF32[$1 + 4 >> 2] = 0.0;
 __ZN5ImGui12PushStyleVarEiRK6ImVec2(5, $1);
 HEAPF32[$2 >> 2] = 0.0;
 HEAPF32[$2 + 4 >> 2] = 0.0;
 __ZN5ImGui12PushStyleVarEiRK6ImVec2(7, $2);
 __ZN5ImGui12CalcTextSizeEPKcS1_bf($3, 36702, 0, 0, -1.0);
 $14 = +HEAPF32[$3 >> 2];
 $15 = $14 * 3.0;
 $16 = +__ZN5ImGui17GetTextLineHeightEv();
 $17 = $this + 112 | 0;
 $20 = $this + 4 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 $24 = ($21 + -1 + (HEAPU16[$17 >> 1] | 0) | 0) / ($21 | 0) | 0;
 $25 = $clipper + 4 | 0;
 HEAP32[$25 >> 2] = $24;
 HEAPF32[$clipper >> 2] = $16;
 $26 = $clipper + 8 | 0;
 $27 = $clipper + 12 | 0;
 __ZN5ImGui16CalcListClippingEifPiS0_($24, $16, $26, $27);
 $28 = +__ZN5ImGui13GetCursorPosYEv();
 __ZN5ImGui13SetCursorPosYEf($28 + +(HEAP32[$26 >> 2] | 0) * +HEAPF32[$clipper >> 2]);
 $35 = HEAP32[$20 >> 2] | 0;
 $36 = Math_imul($35, HEAP32[$26 >> 2] | 0) | 0;
 $38 = Math_imul(HEAP32[$27 >> 2] | 0, $35) | 0;
 $39 = $this + 1 | 0;
 $$pre35 = $this + 8 | 0;
 do if (!(HEAP8[$39 >> 0] | 0)) label = 4; else {
  $42 = HEAP32[$$pre35 >> 2] | 0;
  if (($42 | 0) < (HEAPU16[$17 >> 1] | 0)) if (($42 | 0) == -1) {
   $81 = -1;
   $83 = -1;
  } else {
   if (__ZN5ImGui12IsKeyPressedEib(__ZN5ImGui11GetKeyIndexEi(3) | 0, 1) | 0) {
    $49 = HEAP32[$$pre35 >> 2] | 0;
    $50 = HEAP32[$20 >> 2] | 0;
    if (($49 | 0) >= ($50 | 0)) {
     $52 = $49 - $50 | 0;
     HEAP32[$$pre35 >> 2] = $52;
     HEAP8[$this + 12 >> 0] = 1;
     $81 = $52;
     $83 = $42;
     break;
    }
   }
   if (__ZN5ImGui12IsKeyPressedEib(__ZN5ImGui11GetKeyIndexEi(4) | 0, 1) | 0) {
    $56 = HEAP32[$$pre35 >> 2] | 0;
    $59 = HEAP32[$20 >> 2] | 0;
    if (($56 | 0) < ((HEAPU16[$17 >> 1] | 0) - $59 | 0)) {
     $62 = $59 + $56 | 0;
     HEAP32[$$pre35 >> 2] = $62;
     HEAP8[$this + 12 >> 0] = 1;
     $81 = $62;
     $83 = $42;
     break;
    }
   }
   if (__ZN5ImGui12IsKeyPressedEib(__ZN5ImGui11GetKeyIndexEi(1) | 0, 1) | 0) {
    $66 = HEAP32[$$pre35 >> 2] | 0;
    if (($66 | 0) > 0) {
     $68 = $66 + -1 | 0;
     HEAP32[$$pre35 >> 2] = $68;
     HEAP8[$this + 12 >> 0] = 1;
     $81 = $68;
     $83 = $42;
     break;
    }
   }
   $71 = __ZN5ImGui12IsKeyPressedEib(__ZN5ImGui11GetKeyIndexEi(2) | 0, 1) | 0;
   $72 = HEAP32[$$pre35 >> 2] | 0;
   if ($71) if (($72 | 0) < ((HEAPU16[$17 >> 1] | 0) + -1 | 0)) {
    $77 = $72 + 1 | 0;
    HEAP32[$$pre35 >> 2] = $77;
    HEAP8[$this + 12 >> 0] = 1;
    $81 = $77;
    $83 = $42;
   } else {
    $81 = $72;
    $83 = $42;
   } else {
    $81 = $72;
    $83 = $42;
   }
  } else label = 4;
 } while (0);
 if ((label | 0) == 4) {
  HEAP32[$$pre35 >> 2] = -1;
  $81 = -1;
  $83 = -1;
 }
 $79 = HEAP32[$20 >> 2] | 0;
 $80 = ($81 | 0) / ($79 | 0) | 0;
 $82 = ($83 | 0) / ($79 | 0) | 0;
 do if (($80 | 0) != ($82 | 0)) {
  $87 = $16 * +($80 - $82 | 0);
  if ($87 < 0.0) {
   if (($81 | 0) >= (($79 << 1) + $36 | 0)) label = 21;
  } else label = 21;
  if ((label | 0) == 21) {
   if (!($87 > 0.0)) break;
   if (($81 | 0) <= ($38 - ($79 << 1) | 0)) break;
  }
  __ZN5ImGui10SetScrollYEf($87 + +__ZN5ImGui10GetScrollYEv());
 } while (0);
 $98 = HEAP32[$26 >> 2] | 0;
 if (($98 | 0) < (HEAP32[$27 >> 2] | 0)) {
  $101 = $this + 110 | 0;
  $102 = $14 * 2.0;
  $103 = $cursor_pos + 4 | 0;
  $104 = $5 + 4 | 0;
  $105 = $6 + 4 | 0;
  $106 = $this + 12 | 0;
  $107 = $this + 13 | 0;
  $119 = HEAP32[$20 >> 2] | 0;
  $data_next$0$off029 = 0;
  $draw_separator$0$off028 = 1;
  $line_i$027 = $98;
  while (1) {
   $118 = Math_imul($119, $line_i$027) | 0;
   HEAP32[$vararg_buffer >> 2] = (HEAPU16[$101 >> 1] | 0) + $118;
   __ZN5ImGui4TextEPKcz(35718, $vararg_buffer);
   __ZN5ImGui8SameLineEff(0.0, -1.0);
   $123 = +__ZN5ImGui13GetCursorPosXEv();
   $124 = HEAP32[$20 >> 2] | 0;
   L38 : do if (($124 | 0) > 0) {
    $246 = $124;
    $data_next$1$off020 = $data_next$0$off029;
    $n$019 = 0;
    $offset$017 = $118;
    while (1) {
     if (($offset$017 | 0) >= (HEAPU16[$17 >> 1] | 0)) {
      $130 = $246;
      $data_next$1$off0$lcssa = $data_next$1$off020;
      break L38;
     }
     __ZN5ImGui8SameLineEff($123 + $15 * +($n$019 | 0), -1.0);
     if ((HEAP32[$$pre35 >> 2] | 0) == ($offset$017 | 0)) {
      __ZN5ImGui6PushIDEi($offset$017);
      HEAP32[$cursor_pos >> 2] = -1;
      if (HEAP8[$106 >> 0] | 0) {
       __ZN5ImGui20SetKeyboardFocusHereEi(0);
       HEAP32[$vararg_buffer1 >> 2] = (FUNCTION_TABLE_iii[$read_func & 31]($userdata, (HEAPU16[$101 >> 1] | 0) + $offset$017 & 65535) | 0) & 255;
       _sprintf($107, 35893, $vararg_buffer1) | 0;
      }
      __ZN5ImGui12CalcTextSizeEPKcS1_bf($4, 34944, 0, 0, -1.0);
      __ZN5ImGui13PushItemWidthEf(+HEAPF32[$4 >> 2]);
      if (__ZN5ImGui9InputTextEPKcPcjiPFiP25ImGuiTextEditCallbackDataEPv(34947, $107, 32, 12594, 36, $cursor_pos) | 0) {
       $data_next$2$off0 = 1;
       $data_write$0$off0 = 1;
      } else if (!(HEAP8[$106 >> 0] | 0)) if (__ZN5ImGui12IsItemActiveEv() | 0) {
       $data_next$2$off0 = $data_next$1$off020;
       $data_write$0$off0 = 0;
      } else {
       HEAP32[$$pre35 >> 2] = -1;
       $data_next$2$off0 = $data_next$1$off020;
       $data_write$0$off0 = 0;
      } else {
       $data_next$2$off0 = $data_next$1$off020;
       $data_write$0$off0 = 0;
      }
      HEAP8[$106 >> 0] = 0;
      __ZN5ImGui12PopItemWidthEv();
      $153 = (HEAP32[$cursor_pos >> 2] | 0) > 1;
      $$data_next$2$off0 = $data_next$2$off0 | $153;
      if ($data_write$0$off0 | $153) {
       HEAP32[$vararg_buffer4 >> 2] = $data;
       if ((_sscanf($107, 35565, $vararg_buffer4) | 0) == 1) FUNCTION_TABLE_viii[$write_func & 7]($userdata, (HEAPU16[$101 >> 1] | 0) + $offset$017 & 65535, HEAP32[$data >> 2] & 255);
      }
      __ZN5ImGui5PopIDEv();
      $data_next$4$off0 = $$data_next$2$off0;
     } else {
      HEAP32[$vararg_buffer7 >> 2] = (FUNCTION_TABLE_iii[$read_func & 31]($userdata, (HEAPU16[$101 >> 1] | 0) + $offset$017 & 65535) | 0) & 255;
      __ZN5ImGui4TextEPKcz(35725, $vararg_buffer7);
      if (!(HEAP8[$39 >> 0] | 0)) $data_next$4$off0 = $data_next$1$off020; else if (__ZN5ImGui13IsItemHoveredEv() | 0) if (__ZN5ImGui14IsMouseClickedEib(0, 0) | 0) {
       HEAP8[$106 >> 0] = 1;
       HEAP32[$$pre35 >> 2] = $offset$017;
       $data_next$4$off0 = $data_next$1$off020;
      } else $data_next$4$off0 = $data_next$1$off020; else $data_next$4$off0 = $data_next$1$off020;
     }
     $n$019 = $n$019 + 1 | 0;
     $174 = HEAP32[$20 >> 2] | 0;
     if (($n$019 | 0) >= ($174 | 0)) {
      $130 = $174;
      $data_next$1$off0$lcssa = $data_next$4$off0;
      break;
     } else {
      $246 = $174;
      $data_next$1$off020 = $data_next$4$off0;
      $offset$017 = $offset$017 + 1 | 0;
     }
    }
   } else {
    $130 = $124;
    $data_next$1$off0$lcssa = $data_next$0$off029;
   } while (0);
   __ZN5ImGui8SameLineEff($102 + ($123 + $15 * +($130 | 0)), -1.0);
   if ($draw_separator$0$off028) {
    __ZN5ImGui18GetCursorScreenPosEv($cursor_pos);
    $176 = __ZN5ImGui17GetWindowDrawListEv() | 0;
    $178 = +HEAPF32[$cursor_pos >> 2] - $14;
    $179 = +HEAPF32[$103 >> 2];
    HEAPF32[$5 >> 2] = $178;
    HEAPF32[$104 >> 2] = $179 + -9999.0;
    HEAPF32[$6 >> 2] = $178;
    HEAPF32[$105 >> 2] = $179 + 9999.0;
    $183 = (__ZN5ImGui8GetStyleEv() | 0) + 184 | 0;
    HEAP32[$7 >> 2] = HEAP32[$183 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$183 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$183 + 8 >> 2];
    HEAP32[$7 + 12 >> 2] = HEAP32[$183 + 12 >> 2];
    __ZN10ImDrawList7AddLineERK6ImVec2S2_jf($176, $5, $6, __ZN5ImGui23ColorConvertFloat4ToU32ERK6ImVec4($7) | 0, 1.0);
   }
   $185 = HEAP32[$20 >> 2] | 0;
   L67 : do if (($185 | 0) > 0) {
    $248 = $185;
    $n1$024 = 0;
    $offset$123 = Math_imul($185, $line_i$027) | 0;
    while (1) {
     if (($offset$123 | 0) >= (HEAPU16[$17 >> 1] | 0)) {
      $247 = $248;
      break L67;
     }
     if (($n1$024 | 0) > 0) __ZN5ImGui8SameLineEff(0.0, -1.0);
     $199 = FUNCTION_TABLE_iii[$read_func & 31]($userdata, (HEAPU16[$101 >> 1] | 0) + $offset$123 & 65535) | 0;
     HEAP32[$vararg_buffer10 >> 2] = ($199 & 255) > 31 & $199 << 24 >> 24 > -1 ? $199 & 255 : 46;
     __ZN5ImGui4TextEPKcz(34954, $vararg_buffer10);
     $n1$024 = $n1$024 + 1 | 0;
     $206 = HEAP32[$20 >> 2] | 0;
     if (($n1$024 | 0) >= ($206 | 0)) {
      $247 = $206;
      break;
     } else {
      $248 = $206;
      $offset$123 = $offset$123 + 1 | 0;
     }
    }
   } else $247 = $185; while (0);
   $line_i$027 = $line_i$027 + 1 | 0;
   if (($line_i$027 | 0) >= (HEAP32[$27 >> 2] | 0)) {
    $data_next$0$off0$lcssa = $data_next$1$off0$lcssa;
    break;
   } else {
    $119 = $247;
    $data_next$0$off029 = $data_next$1$off0$lcssa;
    $draw_separator$0$off028 = 0;
   }
  }
 } else $data_next$0$off0$lcssa = 0;
 if ((HEAP32[$25 >> 2] | 0) <= -1) ___assert_fail(35663, 127226, 1019, 35679);
 $110 = +__ZN5ImGui13GetCursorPosYEv();
 __ZN5ImGui13SetCursorPosYEf($110 + +HEAPF32[$clipper >> 2] * +((HEAP32[$25 >> 2] | 0) - (HEAP32[$27 >> 2] | 0) | 0));
 HEAP32[$25 >> 2] = -1;
 __ZN5ImGui11PopStyleVarEi(2);
 __ZN5ImGui8EndChildEv();
 if ($data_next$0$off0$lcssa) {
  $208 = HEAP32[$$pre35 >> 2] | 0;
  if (($208 | 0) < (HEAPU16[$17 >> 1] | 0)) {
   HEAP32[$$pre35 >> 2] = $208 + 1;
   HEAP8[$this + 12 >> 0] = 1;
  }
 }
 __ZN5ImGui9SeparatorEv();
 __ZN5ImGui29AlignFirstTextHeightToWidgetsEv();
 __ZN5ImGui13PushItemWidthEf(56.0);
 __ZN5ImGui22PushAllowKeyboardFocusEb(0);
 $214 = HEAP32[$20 >> 2] | 0;
 if (__ZN5ImGui7DragIntEPKcPifiiS1_(34957, $20, .20000000298023224, 4, 32, 34964) | 0) {
  __ZN5ImGui13GetWindowSizeEv($cursor_pos);
  HEAPF32[$cursor_pos >> 2] = +HEAPF32[$cursor_pos >> 2] + ($14 + $15) * +((HEAP32[$20 >> 2] | 0) - $214 | 0);
  __ZN5ImGui13SetWindowSizeERK6ImVec2i($cursor_pos, 0);
 }
 __ZN5ImGui21PopAllowKeyboardFocusEv();
 __ZN5ImGui12PopItemWidthEv();
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 __ZN5ImGui13PushItemWidthEf(38.0);
 $223 = $this + 45 | 0;
 if (__ZN5ImGui9InputTextEPKcPcjiPFiP25ImGuiTextEditCallbackDataEPv(35641, $223, 32, 2, 0, 0) | 0) {
  $225 = $this + 110 | 0;
  HEAP32[$cursor_pos >> 2] = HEAPU16[$225 >> 1];
  HEAP32[$vararg_buffer13 >> 2] = $cursor_pos;
  if ((_sscanf($223, 35565, $vararg_buffer13) | 0) == 1) {
   $230 = HEAP32[$cursor_pos >> 2] | 0;
   HEAP16[$225 >> 1] = $230;
   HEAP32[$vararg_buffer16 >> 2] = $230 & 65535;
   _sprintf($223, 34992, $vararg_buffer16) | 0;
  }
 }
 __ZN5ImGui8SameLineEff(0.0, -1.0);
 $233 = $this + 77 | 0;
 if (__ZN5ImGui9InputTextEPKcPcjiPFiP25ImGuiTextEditCallbackDataEPv(34974, $233, 32, 2, 0, 0) | 0) {
  HEAP32[$cursor_pos >> 2] = HEAPU16[$17 >> 1];
  HEAP32[$vararg_buffer19 >> 2] = $cursor_pos;
  if ((_sscanf($233, 35565, $vararg_buffer19) | 0) == 1) {
   $239 = HEAP32[$cursor_pos >> 2] | 0;
   HEAP16[$17 >> 1] = $239;
   HEAP32[$vararg_buffer22 >> 2] = $239 & 65535;
   _sprintf($233, 34992, $vararg_buffer22) | 0;
  }
 }
 __ZN5ImGui12PopItemWidthEv();
 if ((HEAP32[$25 >> 2] | 0) != -1) ___assert_fail(35683, 127226, 1007, 35700);
 __ZN5ImGui3EndEv();
 $244 = HEAP8[$this >> 0] | 0;
 $245 = $244 << 24 >> 24 != 0;
 STACKTOP = sp;
 return $245 | 0;
}
function __ZN5ImGui16CollapsingHeaderEPKcS1_bb($label, $str_id, $display_frame, $default_open) {
 $label = $label | 0;
 $str_id = $str_id | 0;
 $display_frame = $display_frame | 0;
 $default_open = $default_open | 0;
 var $$0 = 0, $$02 = 0, $$1 = 0, $$idx$val = 0.0, $$idx$val60 = 0.0, $$pre$phi$i$iZ2D = 0, $0 = 0, $1 = 0, $100 = 0, $103 = 0, $104 = 0, $108 = 0, $110 = 0.0, $111 = 0.0, $117 = 0.0, $118 = 0.0, $121 = 0.0, $122 = 0.0, $124 = 0.0, $126 = 0.0, $129 = 0.0, $131 = 0, $136 = 0, $137 = 0.0, $139 = 0.0, $140 = 0, $141 = 0.0, $144 = 0, $146 = 0.0, $147 = 0, $148 = 0, $167 = 0.0, $168 = 0, $169 = 0.0, $172 = 0, $173 = 0.0, $182 = 0.0, $19 = 0, $190 = 0, $192 = 0, $194 = 0, $196 = 0, $2 = 0, $203 = 0, $21 = 0, $225 = 0, $231 = 0, $234 = 0, $235 = 0.0, $237 = 0.0, $239 = 0.0, $244 = 0.0, $267 = 0, $271 = 0.0, $273 = 0, $275 = 0, $278 = 0, $279 = 0, $28 = 0, $283 = 0, $288 = 0, $289 = 0, $294 = 0.0, $3 = 0, $301 = 0, $303 = 0, $306 = 0, $307 = 0, $312 = 0, $313 = 0, $317 = 0, $322 = 0, $331 = 0.0, $336 = 0, $341 = 0, $342 = 0, $346 = 0, $347 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0.0, $47 = 0.0, $48 = 0.0, $5 = 0, $52 = 0.0, $54 = 0.0, $57 = 0, $59 = 0, $62 = 0, $63 = 0, $67 = 0.0, $7 = 0, $71 = 0.0, $72 = 0.0, $74 = 0.0, $76 = 0.0, $77 = 0, $82 = 0.0, $84 = 0.0, $86 = 0.0, $87 = 0.0, $89 = 0.0, $92 = 0.0, $94 = 0.0, $97 = 0.0, $98 = 0, $bb = 0, $id = 0, $interact_bb = 0, $label$str_id = 0, $label_size = 0, $opened$0$off0$ph = 0, $opened$0$off049 = 0, $opened$0$off050 = 0, $padding$sroa$0$054 = 0.0, $padding$sroa$8$0 = 0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $text_pos = 0, $tmpcast$byval_copy = 0, $tmpcast8$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $tmpcast$byval_copy = sp + 64 | 0;
 $tmpcast8$byval_copy = sp + 56 | 0;
 $id = sp + 104 | 0;
 $label_size = sp + 32 | 0;
 $bb = sp + 16 | 0;
 $0 = sp + 112 | 0;
 $interact_bb = sp + 72 | 0;
 $text_pos = sp;
 $1 = sp + 48 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 96 | 0;
 $4 = sp + 88 | 0;
 $5 = sp + 8 | 0;
 $7 = HEAP32[38201] | 0;
 HEAP8[$7 + 114 >> 0] = 1;
 if (HEAP8[$7 + 116 >> 0] | 0) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $padding$sroa$8$0 = $display_frame ? HEAP32[37993] | 0 : 0;
 $padding$sroa$0$054 = +HEAPF32[37992];
 if (!(($label | 0) != 0 | ($str_id | 0) != 0)) ___assert_fail(126866, 124187, 5603, 126894);
 $label$str_id = ($str_id | 0) == 0 ? $label : $str_id;
 $$02 = ($label | 0) == 0 ? $label$str_id : $label;
 $19 = ($$02 | 0) == ($label$str_id | 0);
 $21 = HEAP32[$7 + 424 >> 2] | 0;
 if (($21 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $28 = __Z6ImHashPKvij($label$str_id, 0, HEAP32[(HEAP32[$7 + 432 >> 2] | 0) + ($21 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($28 | 0)) HEAP8[152852] = 1;
 HEAP32[$id >> 2] = $28;
 L13 : do if ($19) {
  if (($label$str_id | 0) == (-1 | 0)) {
   $47 = +HEAPF32[38187];
   label = 16;
   break;
  } else $text_display_end$03$i$i = $label$str_id;
  while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     label = 15;
     break L13;
     break;
    }
   case 35:
    {
     $37 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$37 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      label = 15;
      break L13;
     } else $$pre$phi$i$iZ2D = $37;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    label = 15;
    break L13;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
 } else {
  $text_display_end$0$i = 0;
  label = 15;
 } while (0);
 if ((label | 0) == 15) {
  $42 = HEAP32[38186] | 0;
  $44 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($$02 | 0)) {
   $47 = $44;
   label = 16;
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($tmpcast$byval_copy, $42, $44, 3402823466385288598117041.0e14, -1.0, $$02, $text_display_end$0$i, 0);
   $48 = +HEAPF32[$tmpcast$byval_copy >> 2];
   if ($48 > 0.0) {
    $52 = $48 - $44 / +HEAPF32[$42 >> 2];
    HEAPF32[$tmpcast$byval_copy >> 2] = $52;
    $54 = $52;
   } else $54 = $48;
   HEAPF32[$tmpcast$byval_copy >> 2] = +(~~($54 + .949999988079071) | 0);
   $57 = $tmpcast$byval_copy;
   $59 = HEAP32[$57 >> 2] | 0;
   $62 = HEAP32[$57 + 4 >> 2] | 0;
   $63 = $label_size;
   HEAP32[$63 >> 2] = $59;
   HEAP32[$63 + 4 >> 2] = $62;
   $67 = (HEAP32[tempDoublePtr >> 2] = $62, +HEAPF32[tempDoublePtr >> 2]);
   $126 = (HEAP32[tempDoublePtr >> 2] = $59, +HEAPF32[tempDoublePtr >> 2]);
   $87 = $67;
  }
 }
 if ((label | 0) == 16) {
  HEAPF32[$label_size >> 2] = 0.0;
  HEAPF32[$label_size + 4 >> 2] = $47;
  $126 = 0.0;
  $87 = $47;
 }
 $71 = (HEAP32[tempDoublePtr >> 2] = $padding$sroa$8$0, +HEAPF32[tempDoublePtr >> 2]);
 $72 = +HEAPF32[$7 + 200 >> 2] - $71;
 $74 = $72 <= 0.0 ? 0.0 : $72;
 $76 = +HEAPF32[$7 + 196 >> 2];
 $77 = 152748;
 $82 = +HEAPF32[$77 >> 2] + +HEAPF32[37993] * 2.0;
 $84 = $76 < $82 ? $76 : $82;
 $86 = $71 * 2.0 + $87;
 $89 = $84 >= $86 ? $84 : $86;
 $92 = +HEAPF32[$7 + 20 >> 2];
 __ZN5ImGui19GetContentRegionMaxEv($0);
 $94 = $92 + +HEAPF32[$0 >> 2];
 $97 = +HEAPF32[$7 + 168 >> 2] + $89;
 $98 = $7 + 164 | 0;
 $100 = HEAP32[$98 >> 2] | 0;
 $103 = HEAP32[$98 + 4 >> 2] | 0;
 $104 = $bb;
 HEAP32[$104 >> 2] = $100;
 HEAP32[$104 + 4 >> 2] = $103;
 $108 = $bb + 8 | 0;
 HEAPF32[$108 >> 2] = $94;
 HEAPF32[$bb + 12 >> 2] = $97;
 $110 = (HEAP32[tempDoublePtr >> 2] = $100, +HEAPF32[tempDoublePtr >> 2]);
 $111 = (HEAP32[tempDoublePtr >> 2] = $103, +HEAPF32[tempDoublePtr >> 2]);
 if ($display_frame) {
  $117 = +(~~(+HEAPF32[$7 + 60 >> 2] * .5) | 0) + -1.0;
  $118 = $110 - $117;
  HEAPF32[$bb >> 2] = $118;
  HEAPF32[$bb + 8 >> 2] = $94 + $117;
  $$idx$val60 = $118;
 } else $$idx$val60 = $110;
 $121 = +HEAPF32[$77 >> 2];
 $122 = $padding$sroa$0$054 * 2.0;
 $124 = ($display_frame ? $122 : $padding$sroa$0$054) + $121;
 $129 = $121 + ($126 > 0.0 ? $122 + $126 : 0.0);
 $131 = HEAP32[38201] | 0;
 HEAP8[$131 + 114 >> 0] = 1;
 if (!(HEAP8[$131 + 116 >> 0] | 0)) {
  $136 = $131 + 196 | 0;
  $137 = +HEAPF32[$136 >> 2];
  $139 = $137 >= $89 ? $137 : $89;
  $140 = $131 + 200 | 0;
  $141 = +HEAPF32[$140 >> 2];
  $144 = $131 + 164 | 0;
  $146 = $129 + +HEAPF32[$144 >> 2];
  $147 = $131 + 168 | 0;
  $148 = HEAP32[$147 >> 2] | 0;
  HEAPF32[$131 + 172 >> 2] = $146;
  HEAP32[$131 + 176 >> 2] = $148;
  $167 = +(~~($139 + (HEAP32[tempDoublePtr >> 2] = $148, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
  HEAPF32[$144 >> 2] = +(~~(+HEAPF32[$131 + 20 >> 2] + +HEAPF32[$131 + 368 >> 2] + +HEAPF32[$131 + 372 >> 2]) | 0);
  HEAPF32[$147 >> 2] = $167;
  $168 = $131 + 188 | 0;
  $169 = +HEAPF32[$168 >> 2];
  HEAPF32[$168 >> 2] = $169 >= $146 ? $169 : $146;
  $172 = $131 + 192 | 0;
  $173 = +HEAPF32[$172 >> 2];
  HEAPF32[$172 >> 2] = $173 >= $167 ? $173 : $167;
  HEAPF32[$131 + 204 >> 2] = $139;
  HEAPF32[$131 + 208 >> 2] = $141 >= $74 ? $141 : $74;
  HEAPF32[$140 >> 2] = 0.0;
  HEAPF32[$136 >> 2] = 0.0;
 }
 if ($display_frame) {
  HEAP32[$interact_bb >> 2] = HEAP32[$bb >> 2];
  HEAP32[$interact_bb + 4 >> 2] = HEAP32[$bb + 4 >> 2];
  HEAP32[$interact_bb + 8 >> 2] = HEAP32[$bb + 8 >> 2];
  HEAP32[$interact_bb + 12 >> 2] = HEAP32[$bb + 12 >> 2];
 } else {
  $182 = $129 + $$idx$val60 + +HEAPF32[37995] * 2.0;
  HEAPF32[$interact_bb >> 2] = $$idx$val60;
  HEAP32[$interact_bb + 4 >> 2] = $103;
  HEAPF32[$interact_bb + 8 >> 2] = $182;
  HEAPF32[$interact_bb + 12 >> 2] = $97;
 }
 $190 = __ZN5ImGui24TreeNodeBehaviorIsOpenedEji(HEAP32[$id >> 2] | 0, $default_open & 1 | ($display_frame ? 2 : 0)) | 0;
 if (__ZN5ImGui7ItemAddERK6ImRectPKj($interact_bb, $id) | 0) {
  $192 = HEAP32[$id >> 2] | 0;
  $194 = HEAP32[38201] | 0;
  HEAP8[$194 + 114 >> 0] = 1;
  $196 = __ZN5ImGui9IsHoveredERK6ImRectjb($interact_bb, $192, 0) | 0;
  if ($196) {
   HEAP32[38208] = $192;
   HEAP8[152836] = 0;
   if (!(HEAP8[147105] | 0)) {
    $203 = HEAP16[73553] | 0;
    if (($203 & 65535) < 256 & ($203 & 255) << 24 >> 24 == 0) if (HEAP8[147696] | 0) {
     HEAP32[38211] = $192;
     HEAP8[152854] = 0;
     HEAP8[152853] = 1;
     HEAP32[38214] = $194;
     __ZN5ImGui11FocusWindowEP11ImGuiWindow($194);
    }
   }
  }
  do if ((HEAP32[38211] | 0) == ($192 | 0)) {
   if (HEAP8[147092] | 0) {
    $231 = $196 ^ 1;
    if ($196) {
     $234 = 26;
     $347 = $231;
     $opened$0$off049 = $190;
     break;
    } else {
     $346 = $231;
     $opened$0$off050 = $190;
     label = 40;
     break;
    }
   }
   HEAP32[38211] = 0;
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = 0;
   if ($196) {
    $225 = $190 ^ 1;
    __ZN12ImGuiStorage6SetIntEji(HEAP32[$7 + 260 >> 2] | 0, HEAP32[$id >> 2] | 0, $225 & 1);
    $opened$0$off0$ph = $225;
   } else $opened$0$off0$ph = $190;
   $346 = $196 ^ 1;
   $opened$0$off050 = $opened$0$off0$ph;
   label = 40;
  } else {
   $346 = $196 ^ 1;
   $opened$0$off050 = $190;
   label = 40;
  } while (0);
  if ((label | 0) == 40) {
   $234 = $196 ? 25 : 24;
   $347 = $346;
   $opened$0$off049 = $opened$0$off050;
  }
  $235 = +HEAPF32[152056 + ($234 << 4) >> 2];
  $237 = +HEAPF32[152056 + ($234 << 4) + 4 >> 2];
  $239 = +HEAPF32[152056 + ($234 << 4) + 8 >> 2];
  $244 = +HEAPF32[152056 + ($234 << 4) + 12 >> 2] * +HEAPF32[37984];
  $267 = ($237 < 0.0 ? 0 : ~~(($237 > 1.0 ? 1.0 : $237) * 255.0 + .5) << 8) | ($235 < 0.0 ? 0 : ~~(($235 > 1.0 ? 1.0 : $235) * 255.0 + .5)) | ($239 < 0.0 ? 0 : ~~(($239 > 1.0 ? 1.0 : $239) * 255.0 + .5) << 16) | ($244 < 0.0 ? 0 : ~~(($244 > 1.0 ? 1.0 : $244) * 255.0 + .5) << 24);
  $271 = $74 + ($71 + $111);
  HEAPF32[$text_pos >> 2] = $124 + ($padding$sroa$0$054 + $$idx$val60);
  HEAPF32[$text_pos + 4 >> 2] = $271;
  do if ($display_frame) {
   $273 = $bb;
   $275 = HEAP32[$273 >> 2] | 0;
   $278 = HEAP32[$273 + 4 >> 2] | 0;
   $279 = $1;
   HEAP32[$279 >> 2] = $275;
   HEAP32[$279 + 4 >> 2] = $278;
   $283 = $108;
   $288 = HEAP32[$283 + 4 >> 2] | 0;
   $289 = $2;
   HEAP32[$289 >> 2] = HEAP32[$283 >> 2];
   HEAP32[$289 + 4 >> 2] = $288;
   $294 = +HEAPF32[37994];
   HEAP32[$tmpcast8$byval_copy >> 2] = HEAP32[$1 >> 2];
   HEAP32[$tmpcast8$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$2 >> 2];
   HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$2 + 4 >> 2];
   __ZN5ImGui11RenderFrameE6ImVec2S0_jbf($tmpcast8$byval_copy, $tmpcast$byval_copy, $267, 1, $294);
   HEAPF32[$3 >> 2] = $padding$sroa$0$054 + (HEAP32[tempDoublePtr >> 2] = $275, +HEAPF32[tempDoublePtr >> 2]) + 0.0;
   HEAPF32[$3 + 4 >> 2] = $271;
   HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$3 >> 2];
   HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   __ZN5ImGui22RenderCollapseTriangleE6ImVec2bfb($tmpcast$byval_copy, $opened$0$off049, 1.0, 1);
   if (!(HEAP8[157996] | 0)) {
    __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($text_pos, $108, $$02, 0, $label_size, 9, 0, 0);
    break;
   } else {
    __ZL15LogRenderedTextRK6ImVec2PKcS3_($271, 126911, 126914);
    __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($text_pos, $108, $$02, 0, $label_size, 9, 0, 0);
    __ZL15LogRenderedTextRK6ImVec2PKcS3_($271, 126916, 126918);
    break;
   }
  } else {
   if ($347) $$idx$val = $$idx$val60; else {
    $301 = $bb;
    $303 = HEAP32[$301 >> 2] | 0;
    $306 = HEAP32[$301 + 4 >> 2] | 0;
    $307 = $108;
    $312 = HEAP32[$307 + 4 >> 2] | 0;
    $313 = $tmpcast$byval_copy;
    HEAP32[$313 >> 2] = HEAP32[$307 >> 2];
    HEAP32[$313 + 4 >> 2] = $312;
    $317 = $tmpcast8$byval_copy;
    HEAP32[$317 >> 2] = $303;
    HEAP32[$317 + 4 >> 2] = $306;
    $322 = HEAP32[38201] | 0;
    HEAP8[$322 + 114 >> 0] = 1;
    __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi(HEAP32[$322 + 572 >> 2] | 0, $tmpcast8$byval_copy, $tmpcast$byval_copy, $267, 0.0, 15);
    $$idx$val = (HEAP32[tempDoublePtr >> 2] = $303, +HEAPF32[tempDoublePtr >> 2]);
   }
   $331 = $111 + ($74 + +HEAPF32[$77 >> 2] * .15000000596046448);
   HEAPF32[$4 >> 2] = $padding$sroa$0$054 + $$idx$val;
   HEAPF32[$4 + 4 >> 2] = $331;
   HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$4 >> 2];
   HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   __ZN5ImGui22RenderCollapseTriangleE6ImVec2bfb($tmpcast$byval_copy, $opened$0$off049, .699999988079071, 0);
   if (HEAP8[157996] | 0) __ZL15LogRenderedTextRK6ImVec2PKcS3_($271, 126918, 0);
   $336 = $text_pos;
   $341 = HEAP32[$336 + 4 >> 2] | 0;
   $342 = $5;
   HEAP32[$342 >> 2] = HEAP32[$336 >> 2];
   HEAP32[$342 + 4 >> 2] = $341;
   HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$5 >> 2];
   HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   __ZN5ImGui10RenderTextE6ImVec2PKcS2_b($tmpcast$byval_copy, $$02, 0, $19);
  } while (0);
  $$0 = $opened$0$off049;
 } else $$0 = $190;
 $$1 = $$0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN5ImGui10SelectableEPKcbiRK6ImVec2($label, $selected, $flags, $size_arg) {
 $label = $label | 0;
 $selected = $selected | 0;
 $flags = $flags | 0;
 $size_arg = $size_arg | 0;
 var $$0 = 0, $$1 = 0, $$pre$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $100 = 0.0, $101 = 0.0, $105 = 0.0, $107 = 0, $108 = 0, $114 = 0, $115 = 0.0, $117 = 0.0, $118 = 0, $119 = 0.0, $122 = 0, $124 = 0.0, $125 = 0, $126 = 0, $13 = 0, $145 = 0.0, $146 = 0, $147 = 0.0, $15 = 0, $150 = 0, $151 = 0.0, $157 = 0.0, $159 = 0, $161 = 0.0, $166 = 0.0, $17 = 0, $170 = 0.0, $174 = 0.0, $177 = 0.0, $180 = 0.0, $185 = 0.0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $194 = 0.0, $196 = 0.0, $199 = 0.0, $201 = 0.0, $204 = 0.0, $209 = 0.0, $21 = 0, $210 = 0.0, $220 = 0, $221 = 0, $225 = 0, $226 = 0, $227 = 0, $232 = 0, $234 = 0.0, $236 = 0.0, $238 = 0.0, $243 = 0.0, $25 = 0, $267 = 0, $269 = 0, $27 = 0, $272 = 0, $273 = 0, $275 = 0, $278 = 0, $279 = 0, $283 = 0, $288 = 0, $29 = 0, $299 = 0.0, $3 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $307 = 0, $312 = 0, $313 = 0, $316 = 0, $321 = 0, $322 = 0, $326 = 0, $328 = 0, $334 = 0, $336 = 0, $338 = 0, $339 = 0, $342 = 0, $343 = 0, $346 = 0, $347 = 0, $348 = 0, $35 = 0, $4 = 0, $42 = 0, $51 = 0, $56 = 0, $58 = 0.0, $61 = 0.0, $62 = 0.0, $66 = 0.0, $68 = 0.0, $71 = 0, $73 = 0, $76 = 0, $77 = 0, $81 = 0.0, $83 = 0.0, $86 = 0.0, $87 = 0, $88 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0, $93 = 0, $98 = 0.0, $99 = 0.0, $bb = 0, $bb_with_spacing = 0, $held = 0, $hovered = 0, $id = 0, $label_size = 0, $or$cond = 0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $tmpcast217 = 0, $tmpcast318 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $tmpcast318 = sp + 32 | 0;
 $tmpcast217 = sp + 24 | 0;
 $id = sp + 80 | 0;
 $label_size = sp + 16 | 0;
 $bb = sp + 56 | 0;
 $0 = sp + 72 | 0;
 $bb_with_spacing = sp;
 $hovered = sp + 85 | 0;
 $held = sp + 84 | 0;
 $1 = sp + 48 | 0;
 $3 = HEAP32[38201] | 0;
 $4 = $3 + 114 | 0;
 HEAP8[$4 >> 0] = 1;
 if (HEAP8[$3 + 116 >> 0] | 0) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $9 = ($flags & 2 | 0) != 0;
 do if ($9) if ((HEAP32[$3 + 380 >> 2] | 0) > 1) {
  HEAP8[$4 >> 0] = 1;
  $13 = $3 + 572 | 0;
  __ZN10ImDrawList11PopClipRectEv(HEAP32[$13 >> 2] | 0);
  $15 = HEAP32[$13 >> 2] | 0;
  $17 = HEAP32[$15 + 52 >> 2] | 0;
  if (($17 | 0) > 0) {
   $19 = $17 + -1 | 0;
   $21 = HEAP32[$15 + 60 >> 2] | 0;
   $25 = HEAP32[$21 + ($19 << 4) + 4 >> 2] | 0;
   $27 = HEAP32[$21 + ($19 << 4) + 8 >> 2] | 0;
   $29 = HEAP32[$21 + ($19 << 4) + 12 >> 2] | 0;
   HEAP32[$3 + 436 >> 2] = HEAP32[$21 + ($19 << 4) >> 2];
   HEAP32[$3 + 440 >> 2] = $25;
   HEAP32[$3 + 444 >> 2] = $27;
   HEAP32[$3 + 448 >> 2] = $29;
   break;
  } else ___assert_fail(127436, 127226, 815, 127445);
 } while (0);
 $35 = HEAP32[$3 + 424 >> 2] | 0;
 if (($35 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $42 = __Z6ImHashPKvij($label, 0, HEAP32[(HEAP32[$3 + 432 >> 2] | 0) + ($35 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($42 | 0)) HEAP8[152852] = 1;
 HEAP32[$id >> 2] = $42;
 if (($label | 0) == (-1 | 0)) {
  $61 = +HEAPF32[38187];
  label = 18;
 } else {
  $text_display_end$03$i$i = $label;
  L19 : while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     break L19;
     break;
    }
   case 35:
    {
     $51 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$51 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      break L19;
     } else $$pre$phi$i$iZ2D = $51;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    break;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
  $56 = HEAP32[38186] | 0;
  $58 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($label | 0)) {
   $61 = $58;
   label = 18;
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($tmpcast318, $56, $58, 3402823466385288598117041.0e14, -1.0, $label, $text_display_end$0$i, 0);
   $62 = +HEAPF32[$tmpcast318 >> 2];
   if ($62 > 0.0) {
    $66 = $62 - $58 / +HEAPF32[$56 >> 2];
    HEAPF32[$tmpcast318 >> 2] = $66;
    $68 = $66;
   } else $68 = $62;
   HEAPF32[$tmpcast318 >> 2] = +(~~($68 + .949999988079071) | 0);
   $71 = $tmpcast318;
   $73 = HEAP32[$71 >> 2] | 0;
   $76 = HEAP32[$71 + 4 >> 2] | 0;
   $77 = $label_size;
   HEAP32[$77 >> 2] = $73;
   HEAP32[$77 + 4 >> 2] = $76;
   $81 = (HEAP32[tempDoublePtr >> 2] = $73, +HEAPF32[tempDoublePtr >> 2]);
   $$pre$phiZ2D = $label_size;
   $107 = 146892;
   $86 = $81;
   $91 = (HEAP32[tempDoublePtr >> 2] = $76, +HEAPF32[tempDoublePtr >> 2]);
  }
 }
 if ((label | 0) == 18) {
  HEAPF32[$label_size >> 2] = 0.0;
  HEAPF32[$label_size + 4 >> 2] = $61;
  $$pre$phiZ2D = $label_size;
  $107 = 146892;
  $86 = 0.0;
  $91 = $61;
 }
 $83 = +HEAPF32[$size_arg >> 2];
 $87 = $size_arg + 4 | 0;
 $88 = +HEAPF32[$87 >> 2];
 $90 = $88 != 0.0 ? $88 : $91;
 $92 = $3 + 164 | 0;
 $93 = HEAP32[$92 >> 2] | 0;
 $98 = +HEAPF32[$3 + 168 >> 2] + +HEAPF32[$3 + 200 >> 2];
 $99 = (HEAP32[tempDoublePtr >> 2] = $93, +HEAPF32[tempDoublePtr >> 2]);
 $100 = ($83 != 0.0 ? $83 : $86) + $99;
 $101 = $90 + $98;
 HEAP32[$bb >> 2] = $93;
 HEAPF32[$bb + 4 >> 2] = $98;
 HEAPF32[$bb + 8 >> 2] = $100;
 HEAPF32[$bb + 12 >> 2] = $101;
 $105 = $101 - $98;
 $108 = HEAP32[$107 + 5912 >> 2] | 0;
 HEAP8[$108 + 114 >> 0] = 1;
 if (!(HEAP8[$108 + 116 >> 0] | 0)) {
  $114 = $108 + 196 | 0;
  $115 = +HEAPF32[$114 >> 2];
  $117 = $115 >= $105 ? $115 : $105;
  $118 = $108 + 200 | 0;
  $119 = +HEAPF32[$118 >> 2];
  $122 = $108 + 164 | 0;
  $124 = $100 - $99 + +HEAPF32[$122 >> 2];
  $125 = $108 + 168 | 0;
  $126 = HEAP32[$125 >> 2] | 0;
  HEAPF32[$108 + 172 >> 2] = $124;
  HEAP32[$108 + 176 >> 2] = $126;
  $145 = +(~~($117 + (HEAP32[tempDoublePtr >> 2] = $126, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[$107 + 5092 >> 2]) | 0);
  HEAPF32[$122 >> 2] = +(~~(+HEAPF32[$108 + 20 >> 2] + +HEAPF32[$108 + 368 >> 2] + +HEAPF32[$108 + 372 >> 2]) | 0);
  HEAPF32[$125 >> 2] = $145;
  $146 = $108 + 188 | 0;
  $147 = +HEAPF32[$146 >> 2];
  HEAPF32[$146 >> 2] = $147 >= $124 ? $147 : $124;
  $150 = $108 + 192 | 0;
  $151 = +HEAPF32[$150 >> 2];
  HEAPF32[$150 >> 2] = $151 >= $145 ? $151 : $145;
  HEAPF32[$108 + 204 >> 2] = $117;
  HEAPF32[$108 + 208 >> 2] = $119 >= 0.0 ? $119 : 0.0;
  HEAPF32[$118 >> 2] = 0.0;
  HEAPF32[$114 >> 2] = 0.0;
 }
 $157 = +HEAPF32[$3 + 60 >> 2];
 if ($9) {
  $159 = HEAP32[38201] | 0;
  $161 = +HEAPF32[$159 + 52 >> 2];
  if ($161 != 0.0) $166 = $161; else $166 = +HEAPF32[$159 + 28 >> 2];
  $174 = $166 - +HEAPF32[$159 + 72 >> 2] - +HEAPF32[$159 + 60 >> 2] - +HEAPF32[$159 + 100 >> 2];
 } else {
  __ZN5ImGui19GetContentRegionMaxEv($0);
  $174 = +HEAPF32[$0 >> 2];
 }
 $170 = +HEAPF32[$$pre$phiZ2D >> 2];
 $177 = $174 + +HEAPF32[$3 + 20 >> 2] - $157 - +HEAPF32[$92 >> 2];
 $180 = +HEAPF32[$size_arg >> 2];
 $or$cond = ($flags & 32 | 0) == 0 & $180 != 0.0;
 $185 = +HEAPF32[$87 >> 2];
 $188 = $99 + ($or$cond ? $180 : $170 >= $177 ? $170 : $177);
 $189 = $98 + ($185 != 0.0 ? $185 : $90);
 HEAP32[$bb_with_spacing >> 2] = $93;
 $190 = $bb_with_spacing + 4 | 0;
 HEAPF32[$190 >> 2] = $98;
 $191 = $bb_with_spacing + 8 | 0;
 HEAPF32[$191 >> 2] = $188;
 $192 = $bb_with_spacing + 12 | 0;
 HEAPF32[$192 >> 2] = $189;
 if ($or$cond) $210 = $188; else {
  $194 = $157 + $188;
  HEAPF32[$bb_with_spacing + 8 >> 2] = $194;
  $210 = $194;
 }
 $196 = +HEAPF32[37995];
 $199 = +(~~($196 * .5) | 0);
 $201 = +HEAPF32[37996];
 $204 = +(~~($201 * .5) | 0);
 HEAPF32[$bb_with_spacing >> 2] = $99 - $199;
 HEAPF32[$190 >> 2] = $98 - $204;
 $209 = $196 - $199 + $210;
 HEAPF32[$191 >> 2] = $209;
 HEAPF32[$192 >> 2] = $201 - $204 + $189;
 if (__ZN5ImGui7ItemAddERK6ImRectPKj($bb_with_spacing, $id) | 0) {
  $220 = $flags & 16;
  $221 = ($220 | 0) != 0;
  $225 = __ZN5ImGui14ButtonBehaviorERK6ImRectjPbS3_i($bb_with_spacing, HEAP32[$id >> 2] | 0, $hovered, $held, (($flags & 8 | 0) == 0 ? $flags >>> 1 & 2 : 6) | $220 << 1) | 0;
  $226 = HEAP8[$hovered >> 0] | 0;
  $227 = $226 << 24 >> 24 == 0;
  if ($selected & ($221 ^ 1) | $227 ^ 1) {
   $232 = $227 | (HEAP8[$held >> 0] | 0) == 0 ? ($226 << 24 >> 24 ? 25 : 24) : 26;
   $234 = +HEAPF32[152056 + ($232 << 4) >> 2];
   $236 = +HEAPF32[152056 + ($232 << 4) + 4 >> 2];
   $238 = +HEAPF32[152056 + ($232 << 4) + 8 >> 2];
   $243 = +HEAPF32[152056 + ($232 << 4) + 12 >> 2] * +HEAPF32[37984];
   $267 = $bb_with_spacing;
   $269 = HEAP32[$267 >> 2] | 0;
   $272 = HEAP32[$267 + 4 >> 2] | 0;
   $273 = $191;
   $275 = HEAP32[$273 >> 2] | 0;
   $278 = HEAP32[$273 + 4 >> 2] | 0;
   $279 = $tmpcast318;
   HEAP32[$279 >> 2] = $275;
   HEAP32[$279 + 4 >> 2] = $278;
   $283 = $tmpcast217;
   HEAP32[$283 >> 2] = $269;
   HEAP32[$283 + 4 >> 2] = $272;
   $288 = HEAP32[38201] | 0;
   HEAP8[$288 + 114 >> 0] = 1;
   __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi(HEAP32[$288 + 572 >> 2] | 0, $tmpcast217, $tmpcast318, ($236 < 0.0 ? 0 : ~~(($236 > 1.0 ? 1.0 : $236) * 255.0 + .5) << 8) | ($234 < 0.0 ? 0 : ~~(($234 > 1.0 ? 1.0 : $234) * 255.0 + .5)) | ($238 < 0.0 ? 0 : ~~(($238 > 1.0 ? 1.0 : $238) * 255.0 + .5) << 16) | ($243 < 0.0 ? 0 : ~~(($243 > 1.0 ? 1.0 : $243) * 255.0 + .5) << 24), 0.0, 15);
   $299 = (HEAP32[tempDoublePtr >> 2] = $275, +HEAPF32[tempDoublePtr >> 2]);
  } else $299 = $209;
  if ($9) if ((HEAP32[$3 + 380 >> 2] | 0) > 1) {
   __ZL18PushColumnClipRecti();
   __ZN5ImGui19GetContentRegionMaxEv($1);
   HEAPF32[$191 >> 2] = $299 - (+HEAPF32[$1 >> 2] - $174);
  }
  do if ($221) {
   $300 = 152072;
   $301 = 152056;
   HEAP32[$tmpcast318 >> 2] = HEAP32[$301 >> 2];
   HEAP32[$tmpcast318 + 4 >> 2] = HEAP32[$301 + 4 >> 2];
   HEAP32[$tmpcast318 + 8 >> 2] = HEAP32[$301 + 8 >> 2];
   HEAP32[$tmpcast318 + 12 >> 2] = HEAP32[$301 + 12 >> 2];
   $302 = 152880;
   $303 = HEAP32[$302 >> 2] | 0;
   $304 = 152884;
   if (($303 | 0) == (HEAP32[$304 >> 2] | 0)) {
    $307 = $303 + 1 | 0;
    if (!$303) $312 = 8; else $312 = (($303 | 0) / 2 | 0) + $303 | 0;
    $313 = ($312 | 0) > ($307 | 0) ? $312 : $307;
    if (($303 | 0) < ($313 | 0)) {
     $316 = 147664;
     HEAP32[$316 >> 2] = (HEAP32[$316 >> 2] | 0) + 1;
     $321 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($313 * 20 | 0) | 0;
     $322 = 152888;
     _memcpy($321 | 0, HEAP32[$322 >> 2] | 0, (HEAP32[$302 >> 2] | 0) * 20 | 0) | 0;
     $326 = HEAP32[$322 >> 2] | 0;
     if ($326 | 0) {
      $328 = 147664;
      HEAP32[$328 >> 2] = (HEAP32[$328 >> 2] | 0) + -1;
     }
     FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($326);
     HEAP32[$322 >> 2] = $321;
     HEAP32[$304 >> 2] = $313;
     $334 = HEAP32[$302 >> 2] | 0;
    } else $334 = $303;
   } else $334 = $303;
   HEAP32[$302 >> 2] = $334 + 1;
   $336 = HEAP32[38222] | 0;
   HEAP32[$336 + ($334 * 20 | 0) >> 2] = 0;
   $338 = $336 + ($334 * 20 | 0) + 4 | 0;
   HEAP32[$338 >> 2] = HEAP32[$tmpcast318 >> 2];
   HEAP32[$338 + 4 >> 2] = HEAP32[$tmpcast318 + 4 >> 2];
   HEAP32[$338 + 8 >> 2] = HEAP32[$tmpcast318 + 8 >> 2];
   HEAP32[$338 + 12 >> 2] = HEAP32[$tmpcast318 + 12 >> 2];
   HEAP32[$301 >> 2] = HEAP32[$300 >> 2];
   HEAP32[$301 + 4 >> 2] = HEAP32[$300 + 4 >> 2];
   HEAP32[$301 + 8 >> 2] = HEAP32[$300 + 8 >> 2];
   HEAP32[$301 + 12 >> 2] = HEAP32[$300 + 12 >> 2];
   __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($bb, $191, $label, 0, $label_size, 9, 0, 0);
   $339 = 152880;
   $$pre$i = HEAP32[$339 >> 2] | 0;
   if (($$pre$i | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
   $342 = $$pre$i + -1 | 0;
   $343 = HEAP32[38222] | 0;
   $346 = 152056 + (HEAP32[$343 + ($342 * 20 | 0) >> 2] << 4) | 0;
   $347 = $343 + ($342 * 20 | 0) + 4 | 0;
   HEAP32[$346 >> 2] = HEAP32[$347 >> 2];
   HEAP32[$346 + 4 >> 2] = HEAP32[$347 + 4 >> 2];
   HEAP32[$346 + 8 >> 2] = HEAP32[$347 + 8 >> 2];
   HEAP32[$346 + 12 >> 2] = HEAP32[$347 + 12 >> 2];
   $348 = HEAP32[$339 >> 2] | 0;
   if (($348 | 0) > 0) {
    HEAP32[$339 >> 2] = $348 + -1;
    break;
   } else ___assert_fail(127436, 127226, 833, 125180);
  } else __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($bb, $191, $label, 0, $label_size, 9, 0, 0); while (0);
  if (($flags & 1 | 0) == 0 & $225) if (HEAP32[$3 + 8 >> 2] & 33554432 | 0) __ZN5ImGui17CloseCurrentPopupEv();
  $$0 = $225;
 } else if ($9) if ((HEAP32[$3 + 380 >> 2] | 0) > 1) {
  __ZL18PushColumnClipRecti();
  $$0 = 0;
 } else $$0 = 0; else $$0 = 0;
 $$1 = $$0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN5Oryol5_priv13glMeshFactory20createFullscreenQuadERNS0_4meshE($this, $mesh) {
 $this = $this | 0;
 $mesh = $mesh | 0;
 var $0 = 0, $1 = 0, $104 = 0, $110 = 0, $116 = 0, $122 = 0, $128 = 0, $134 = 0, $140 = 0, $146 = 0, $152 = 0, $158 = 0, $16 = 0, $162 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $208 = 0, $214 = 0, $22 = 0, $220 = 0, $226 = 0, $232 = 0, $238 = 0, $24 = 0, $244 = 0, $25 = 0, $250 = 0, $256 = 0, $262 = 0, $268 = 0, $27 = 0, $274 = 0, $28 = 0, $280 = 0, $286 = 0, $292 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $304 = 0, $307 = 0, $31 = 0, $313 = 0, $314 = 0.0, $315 = 0.0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $57 = 0, $58 = 0, $60 = 0, $61 = 0, $63 = 0, $64 = 0, $68 = 0, $7 = 0, $74 = 0, $80 = 0, $86 = 0, $92 = 0, $98 = 0, $indices = 0, $vbAttrs = 0, $vertices = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $vbAttrs = sp + 80 | 0;
 $vertices = sp;
 $indices = sp + 156 | 0;
 $0 = $mesh + 24 | 0;
 $1 = $mesh + 90 | 0;
 if ((HEAP8[$1 >> 0] | 0) != 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64413, 0, 63465, 134, 64452);
  _abort();
 }
 if (HEAP8[$mesh + 26 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64544, 0, 63465, 135, 64452);
  _abort();
 }
 $7 = $mesh + 28 | 0;
 if ((HEAP8[$7 >> 0] | 0) != 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64606, 0, 63465, 136, 64452);
  _abort();
 }
 if ((HEAP8[$mesh + 27 >> 0] | 0) != 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64669, 0, 63465, 137, 64452);
  _abort();
 }
 if ((HEAP8[$mesh + 29 >> 0] | 0) != 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64733, 0, 63465, 138, 64452);
  _abort();
 }
 HEAP32[$vbAttrs >> 2] = 0;
 $16 = $vbAttrs + 4 | 0;
 __ZN5Oryol12VertexLayoutC2Ev($16);
 $17 = $vbAttrs + 72 | 0;
 HEAP32[$vbAttrs >> 2] = 4;
 HEAP32[$17 >> 2] = 0;
 HEAP16[$16 >> 1] = HEAPU8[$0 >> 0] | HEAPU8[$0 + 1 >> 0] << 8;
 $20 = $mesh + 26 | 0;
 HEAP16[$vbAttrs + 6 >> 1] = HEAPU8[$20 >> 0] | HEAPU8[$20 + 1 >> 0] << 8;
 $22 = $vbAttrs + 8 | 0;
 HEAP16[$22 >> 1] = HEAPU8[$7 >> 0] | HEAPU8[$7 + 1 >> 0] << 8;
 $24 = $vbAttrs + 10 | 0;
 $25 = $mesh + 30 | 0;
 HEAP16[$24 >> 1] = HEAPU8[$25 >> 0] | HEAPU8[$25 + 1 >> 0] << 8;
 $27 = $vbAttrs + 12 | 0;
 $28 = $mesh + 32 | 0;
 HEAP16[$27 >> 1] = HEAPU8[$28 >> 0] | HEAPU8[$28 + 1 >> 0] << 8;
 $30 = $vbAttrs + 14 | 0;
 $31 = $mesh + 34 | 0;
 HEAP16[$30 >> 1] = HEAPU8[$31 >> 0] | HEAPU8[$31 + 1 >> 0] << 8;
 $33 = $vbAttrs + 16 | 0;
 $34 = $mesh + 36 | 0;
 HEAP16[$33 >> 1] = HEAPU8[$34 >> 0] | HEAPU8[$34 + 1 >> 0] << 8;
 $36 = $vbAttrs + 18 | 0;
 $37 = $mesh + 38 | 0;
 HEAP16[$36 >> 1] = HEAPU8[$37 >> 0] | HEAPU8[$37 + 1 >> 0] << 8;
 $39 = $vbAttrs + 20 | 0;
 $40 = $mesh + 40 | 0;
 HEAP16[$39 >> 1] = HEAPU8[$40 >> 0] | HEAPU8[$40 + 1 >> 0] << 8;
 $42 = $vbAttrs + 22 | 0;
 $43 = $mesh + 42 | 0;
 HEAP16[$42 >> 1] = HEAPU8[$43 >> 0] | HEAPU8[$43 + 1 >> 0] << 8;
 $45 = $vbAttrs + 24 | 0;
 $46 = $mesh + 44 | 0;
 HEAP16[$45 >> 1] = HEAPU8[$46 >> 0] | HEAPU8[$46 + 1 >> 0] << 8;
 $48 = $vbAttrs + 26 | 0;
 $49 = $mesh + 46 | 0;
 HEAP16[$48 >> 1] = HEAPU8[$49 >> 0] | HEAPU8[$49 + 1 >> 0] << 8;
 $51 = $vbAttrs + 28 | 0;
 $52 = $mesh + 48 | 0;
 HEAP16[$51 >> 1] = HEAPU8[$52 >> 0] | HEAPU8[$52 + 1 >> 0] << 8;
 $54 = $vbAttrs + 30 | 0;
 $55 = $mesh + 50 | 0;
 HEAP16[$54 >> 1] = HEAPU8[$55 >> 0] | HEAPU8[$55 + 1 >> 0] << 8;
 $57 = $vbAttrs + 32 | 0;
 $58 = $mesh + 52 | 0;
 HEAP16[$57 >> 1] = HEAPU8[$58 >> 0] | HEAPU8[$58 + 1 >> 0] << 8;
 $60 = $vbAttrs + 34 | 0;
 $61 = $mesh + 54 | 0;
 HEAP16[$60 >> 1] = HEAPU8[$61 >> 0] | HEAPU8[$61 + 1 >> 0] << 8;
 $63 = $vbAttrs + 36 | 0;
 $64 = $mesh + 56 | 0;
 HEAP16[$63 >> 1] = HEAPU8[$64 >> 0] | HEAPU8[$64 + 1 >> 0] << 8;
 $68 = $vbAttrs + 38 | 0;
 HEAP8[$68 >> 0] = HEAP8[$mesh + 58 >> 0] | 0;
 HEAP8[$vbAttrs + 39 >> 0] = HEAP8[$mesh + 59 >> 0] | 0;
 $74 = $vbAttrs + 40 | 0;
 HEAP8[$74 >> 0] = HEAP8[$mesh + 60 >> 0] | 0;
 HEAP8[$vbAttrs + 41 >> 0] = HEAP8[$mesh + 61 >> 0] | 0;
 $80 = $vbAttrs + 42 | 0;
 HEAP8[$80 >> 0] = HEAP8[$mesh + 62 >> 0] | 0;
 HEAP8[$vbAttrs + 43 >> 0] = HEAP8[$mesh + 63 >> 0] | 0;
 $86 = $vbAttrs + 44 | 0;
 HEAP8[$86 >> 0] = HEAP8[$mesh + 64 >> 0] | 0;
 HEAP8[$vbAttrs + 45 >> 0] = HEAP8[$mesh + 65 >> 0] | 0;
 $92 = $vbAttrs + 46 | 0;
 HEAP8[$92 >> 0] = HEAP8[$mesh + 66 >> 0] | 0;
 HEAP8[$vbAttrs + 47 >> 0] = HEAP8[$mesh + 67 >> 0] | 0;
 $98 = $vbAttrs + 48 | 0;
 HEAP8[$98 >> 0] = HEAP8[$mesh + 68 >> 0] | 0;
 HEAP8[$vbAttrs + 49 >> 0] = HEAP8[$mesh + 69 >> 0] | 0;
 $104 = $vbAttrs + 50 | 0;
 HEAP8[$104 >> 0] = HEAP8[$mesh + 70 >> 0] | 0;
 HEAP8[$vbAttrs + 51 >> 0] = HEAP8[$mesh + 71 >> 0] | 0;
 $110 = $vbAttrs + 52 | 0;
 HEAP8[$110 >> 0] = HEAP8[$mesh + 72 >> 0] | 0;
 HEAP8[$vbAttrs + 53 >> 0] = HEAP8[$mesh + 73 >> 0] | 0;
 $116 = $vbAttrs + 54 | 0;
 HEAP8[$116 >> 0] = HEAP8[$mesh + 74 >> 0] | 0;
 HEAP8[$vbAttrs + 55 >> 0] = HEAP8[$mesh + 75 >> 0] | 0;
 $122 = $vbAttrs + 56 | 0;
 HEAP8[$122 >> 0] = HEAP8[$mesh + 76 >> 0] | 0;
 HEAP8[$vbAttrs + 57 >> 0] = HEAP8[$mesh + 77 >> 0] | 0;
 $128 = $vbAttrs + 58 | 0;
 HEAP8[$128 >> 0] = HEAP8[$mesh + 78 >> 0] | 0;
 HEAP8[$vbAttrs + 59 >> 0] = HEAP8[$mesh + 79 >> 0] | 0;
 $134 = $vbAttrs + 60 | 0;
 HEAP8[$134 >> 0] = HEAP8[$mesh + 80 >> 0] | 0;
 HEAP8[$vbAttrs + 61 >> 0] = HEAP8[$mesh + 81 >> 0] | 0;
 $140 = $vbAttrs + 62 | 0;
 HEAP8[$140 >> 0] = HEAP8[$mesh + 82 >> 0] | 0;
 HEAP8[$vbAttrs + 63 >> 0] = HEAP8[$mesh + 83 >> 0] | 0;
 $146 = $vbAttrs + 64 | 0;
 HEAP8[$146 >> 0] = HEAP8[$mesh + 84 >> 0] | 0;
 HEAP8[$vbAttrs + 65 >> 0] = HEAP8[$mesh + 85 >> 0] | 0;
 $152 = $vbAttrs + 66 | 0;
 HEAP8[$152 >> 0] = HEAP8[$mesh + 86 >> 0] | 0;
 HEAP8[$vbAttrs + 67 >> 0] = HEAP8[$mesh + 87 >> 0] | 0;
 $158 = $vbAttrs + 68 | 0;
 HEAP8[$158 >> 0] = HEAP8[$mesh + 88 >> 0] | 0;
 HEAP8[$vbAttrs + 69 >> 0] = HEAP8[$mesh + 89 >> 0] | 0;
 $162 = $vbAttrs + 70 | 0;
 HEAP16[$162 >> 1] = HEAPU8[$1 >> 0] | HEAPU8[$1 + 1 >> 0] << 8;
 HEAP32[$mesh + 208 >> 2] = HEAP32[$vbAttrs >> 2];
 $166 = $mesh + 212 | 0;
 $167 = HEAP32[$16 >> 2] | 0;
 $168 = $167 & 65535;
 HEAP8[$166 >> 0] = $168;
 HEAP8[$166 + 1 >> 0] = $168 >> 8;
 $169 = $mesh + 214 | 0;
 $171 = $167 >>> 16 & 65535;
 HEAP8[$169 >> 0] = $171;
 HEAP8[$169 + 1 >> 0] = $171 >> 8;
 $172 = $mesh + 216 | 0;
 $173 = HEAP16[$22 >> 1] | 0;
 HEAP8[$172 >> 0] = $173;
 HEAP8[$172 + 1 >> 0] = $173 >> 8;
 $174 = $mesh + 218 | 0;
 $175 = HEAP16[$24 >> 1] | 0;
 HEAP8[$174 >> 0] = $175;
 HEAP8[$174 + 1 >> 0] = $175 >> 8;
 $176 = $mesh + 220 | 0;
 $177 = HEAP16[$27 >> 1] | 0;
 HEAP8[$176 >> 0] = $177;
 HEAP8[$176 + 1 >> 0] = $177 >> 8;
 $178 = $mesh + 222 | 0;
 $179 = HEAP16[$30 >> 1] | 0;
 HEAP8[$178 >> 0] = $179;
 HEAP8[$178 + 1 >> 0] = $179 >> 8;
 $180 = $mesh + 224 | 0;
 $181 = HEAP16[$33 >> 1] | 0;
 HEAP8[$180 >> 0] = $181;
 HEAP8[$180 + 1 >> 0] = $181 >> 8;
 $182 = $mesh + 226 | 0;
 $183 = HEAP16[$36 >> 1] | 0;
 HEAP8[$182 >> 0] = $183;
 HEAP8[$182 + 1 >> 0] = $183 >> 8;
 $184 = $mesh + 228 | 0;
 $185 = HEAP16[$39 >> 1] | 0;
 HEAP8[$184 >> 0] = $185;
 HEAP8[$184 + 1 >> 0] = $185 >> 8;
 $186 = $mesh + 230 | 0;
 $187 = HEAP16[$42 >> 1] | 0;
 HEAP8[$186 >> 0] = $187;
 HEAP8[$186 + 1 >> 0] = $187 >> 8;
 $188 = $mesh + 232 | 0;
 $189 = HEAP16[$45 >> 1] | 0;
 HEAP8[$188 >> 0] = $189;
 HEAP8[$188 + 1 >> 0] = $189 >> 8;
 $190 = $mesh + 234 | 0;
 $191 = HEAP16[$48 >> 1] | 0;
 HEAP8[$190 >> 0] = $191;
 HEAP8[$190 + 1 >> 0] = $191 >> 8;
 $192 = $mesh + 236 | 0;
 $193 = HEAP16[$51 >> 1] | 0;
 HEAP8[$192 >> 0] = $193;
 HEAP8[$192 + 1 >> 0] = $193 >> 8;
 $194 = $mesh + 238 | 0;
 $195 = HEAP16[$54 >> 1] | 0;
 HEAP8[$194 >> 0] = $195;
 HEAP8[$194 + 1 >> 0] = $195 >> 8;
 $196 = $mesh + 240 | 0;
 $197 = HEAP16[$57 >> 1] | 0;
 HEAP8[$196 >> 0] = $197;
 HEAP8[$196 + 1 >> 0] = $197 >> 8;
 $198 = $mesh + 242 | 0;
 $199 = HEAP16[$60 >> 1] | 0;
 HEAP8[$198 >> 0] = $199;
 HEAP8[$198 + 1 >> 0] = $199 >> 8;
 $200 = $mesh + 244 | 0;
 $201 = HEAP16[$63 >> 1] | 0;
 HEAP8[$200 >> 0] = $201;
 HEAP8[$200 + 1 >> 0] = $201 >> 8;
 $202 = HEAP16[$68 >> 1] | 0;
 HEAP8[$mesh + 246 >> 0] = $202;
 HEAP8[$mesh + 247 >> 0] = ($202 & 65535) >>> 8;
 $208 = HEAP16[$74 >> 1] | 0;
 HEAP8[$mesh + 248 >> 0] = $208;
 HEAP8[$mesh + 249 >> 0] = ($208 & 65535) >>> 8;
 $214 = HEAP16[$80 >> 1] | 0;
 HEAP8[$mesh + 250 >> 0] = $214;
 HEAP8[$mesh + 251 >> 0] = ($214 & 65535) >>> 8;
 $220 = HEAP16[$86 >> 1] | 0;
 HEAP8[$mesh + 252 >> 0] = $220;
 HEAP8[$mesh + 253 >> 0] = ($220 & 65535) >>> 8;
 $226 = HEAP16[$92 >> 1] | 0;
 HEAP8[$mesh + 254 >> 0] = $226;
 HEAP8[$mesh + 255 >> 0] = ($226 & 65535) >>> 8;
 $232 = HEAP16[$98 >> 1] | 0;
 HEAP8[$mesh + 256 >> 0] = $232;
 HEAP8[$mesh + 257 >> 0] = ($232 & 65535) >>> 8;
 $238 = HEAP16[$104 >> 1] | 0;
 HEAP8[$mesh + 258 >> 0] = $238;
 HEAP8[$mesh + 259 >> 0] = ($238 & 65535) >>> 8;
 $244 = HEAP16[$110 >> 1] | 0;
 HEAP8[$mesh + 260 >> 0] = $244;
 HEAP8[$mesh + 261 >> 0] = ($244 & 65535) >>> 8;
 $250 = HEAP16[$116 >> 1] | 0;
 HEAP8[$mesh + 262 >> 0] = $250;
 HEAP8[$mesh + 263 >> 0] = ($250 & 65535) >>> 8;
 $256 = HEAP16[$122 >> 1] | 0;
 HEAP8[$mesh + 264 >> 0] = $256;
 HEAP8[$mesh + 265 >> 0] = ($256 & 65535) >>> 8;
 $262 = HEAP16[$128 >> 1] | 0;
 HEAP8[$mesh + 266 >> 0] = $262;
 HEAP8[$mesh + 267 >> 0] = ($262 & 65535) >>> 8;
 $268 = HEAP16[$134 >> 1] | 0;
 HEAP8[$mesh + 268 >> 0] = $268;
 HEAP8[$mesh + 269 >> 0] = ($268 & 65535) >>> 8;
 $274 = HEAP16[$140 >> 1] | 0;
 HEAP8[$mesh + 270 >> 0] = $274;
 HEAP8[$mesh + 271 >> 0] = ($274 & 65535) >>> 8;
 $280 = HEAP16[$146 >> 1] | 0;
 HEAP8[$mesh + 272 >> 0] = $280;
 HEAP8[$mesh + 273 >> 0] = ($280 & 65535) >>> 8;
 $286 = HEAP16[$152 >> 1] | 0;
 HEAP8[$mesh + 274 >> 0] = $286;
 HEAP8[$mesh + 275 >> 0] = ($286 & 65535) >>> 8;
 $292 = HEAP16[$158 >> 1] | 0;
 HEAP8[$mesh + 276 >> 0] = $292;
 HEAP8[$mesh + 277 >> 0] = ($292 & 65535) >>> 8;
 $298 = $mesh + 278 | 0;
 $299 = HEAP16[$162 >> 1] | 0;
 HEAP8[$298 >> 0] = $299;
 HEAP8[$298 + 1 >> 0] = $299 >> 8;
 $300 = HEAP32[$17 >> 2] | 0;
 HEAP32[$mesh + 280 >> 2] = $300;
 HEAP32[$mesh + 284 >> 2] = 6;
 HEAP32[$mesh + 288 >> 2] = 1;
 $304 = $mesh + 292 | 0;
 HEAP32[$304 >> 2] = 0;
 HEAP32[$mesh + 296 >> 2] = 1;
 $307 = $mesh + 300 | 0;
 HEAP32[$307 >> 2] = 0;
 HEAP32[$307 + 4 >> 2] = 6;
 $313 = (HEAP8[$mesh + 104 >> 0] | 0) != 0;
 $314 = $313 ? 0.0 : 1.0;
 $315 = $313 ? 1.0 : 0.0;
 HEAPF32[$vertices >> 2] = -1.0;
 HEAPF32[$vertices + 4 >> 2] = 1.0;
 HEAPF32[$vertices + 8 >> 2] = 0.0;
 HEAPF32[$vertices + 12 >> 2] = 0.0;
 HEAPF32[$vertices + 16 >> 2] = $314;
 HEAPF32[$vertices + 20 >> 2] = 1.0;
 HEAPF32[$vertices + 24 >> 2] = 1.0;
 HEAPF32[$vertices + 28 >> 2] = 0.0;
 HEAPF32[$vertices + 32 >> 2] = 1.0;
 HEAPF32[$vertices + 36 >> 2] = $314;
 HEAPF32[$vertices + 40 >> 2] = 1.0;
 HEAPF32[$vertices + 44 >> 2] = -1.0;
 HEAPF32[$vertices + 48 >> 2] = 0.0;
 HEAPF32[$vertices + 52 >> 2] = 1.0;
 HEAPF32[$vertices + 56 >> 2] = $315;
 HEAPF32[$vertices + 60 >> 2] = -1.0;
 HEAPF32[$vertices + 64 >> 2] = -1.0;
 HEAPF32[$vertices + 68 >> 2] = 0.0;
 HEAPF32[$vertices + 72 >> 2] = 0.0;
 HEAPF32[$vertices + 76 >> 2] = $315;
 HEAP16[$indices >> 1] = HEAP16[7156] | 0;
 HEAP16[$indices + 2 >> 1] = HEAP16[7157] | 0;
 HEAP16[$indices + 4 >> 1] = HEAP16[7158] | 0;
 HEAP16[$indices + 6 >> 1] = HEAP16[7159] | 0;
 HEAP16[$indices + 8 >> 1] = HEAP16[7160] | 0;
 HEAP16[$indices + 10 >> 1] = HEAP16[7161] | 0;
 if ((HEAP8[$mesh + 368 >> 0] | 0) != 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64797, 0, 63465, 172, 64452);
  _abort();
 }
 if ((HEAP8[$mesh + 384 >> 0] | 0) == 1) {
  HEAP32[$mesh + 372 >> 2] = __ZN5Oryol5_priv13glMeshFactory18createVertexBufferEPKvjNS_5Usage4CodeE($this, $vertices, 80, $300) | 0;
  HEAP32[$mesh + 388 >> 2] = __ZN5Oryol5_priv13glMeshFactory17createIndexBufferEPKvjNS_5Usage4CodeE($this, $indices, 12, HEAP32[$304 >> 2] | 0) | 0;
  STACKTOP = sp;
  return 3;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64834, 0, 63465, 173, 64452);
  _abort();
 }
 return 0;
}

function __ZN5ImGui15TextUnformattedEPKcS1_($text, $text_end) {
 $text = $text | 0;
 $text_end = $text_end | 0;
 var $$0 = 0, $$0$i = 0.0, $$01$i = 0.0, $$lcssa = 0, $$lcssa82 = 0, $$lcssa83 = 0, $$pn = 0.0, $$pre65 = 0, $$pre71 = 0, $0 = 0, $1 = 0, $101 = 0, $110 = 0.0, $111 = 0.0, $115 = 0.0, $117 = 0, $119 = 0, $12 = 0, $120 = 0.0, $122 = 0.0, $123 = 0, $124 = 0.0, $127 = 0, $129 = 0.0, $130 = 0, $131 = 0, $14 = 0.0, $147 = 0, $15 = 0, $151 = 0.0, $152 = 0, $153 = 0.0, $156 = 0, $157 = 0.0, $177 = 0.0, $181 = 0, $183 = 0.0, $186 = 0.0, $187 = 0.0, $191 = 0.0, $193 = 0.0, $195 = 0.0, $198 = 0, $20 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0.0, $212 = 0, $213 = 0, $218 = 0, $219 = 0.0, $221 = 0.0, $222 = 0, $223 = 0.0, $226 = 0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0, $24 = 0.0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0.0, $254 = 0, $255 = 0.0, $261 = 0, $266 = 0, $267 = 0, $27 = 0.0, $271 = 0, $3 = 0, $36 = 0, $40 = 0, $41 = 0, $51 = 0.0, $52 = 0, $53 = 0, $55 = 0.0, $57 = 0, $68 = 0, $73 = 0, $75 = 0.0, $77 = 0.0, $81 = 0.0, $83 = 0.0, $86 = 0.0, $88 = 0.0, $90 = 0, $93 = 0, $98 = 0, $bb6 = 0, $line$0$lcssa = 0, $line$058 = 0, $line$2 = 0, $line$3$lcssa = 0, $line$346 = 0, $line$638 = 0, $line_rect$sroa$10$0$in48 = 0.0, $line_rect$sroa$4$041 = 0, $line_size$sroa$0$0 = 0, $lines_skipped$0$lcssa = 0.0, $lines_skipped$059 = 0, $lines_skipped2$0$lcssa = 0.0, $lines_skipped2$039 = 0, $pos$sroa$7$0 = 0, $pos$sroa$7$1$lcssa = 0, $pos$sroa$7$142 = 0, $pos$sroa$7$4 = 0, $text_size$sroa$0$0$lcssa = 0.0, $text_size$sroa$0$044 = 0.0, $text_size$sroa$0$3 = 0.0, $text_size$sroa$0$4 = 0.0, $text_size$sroa$6$0 = 0.0, $text_size4$sroa$0$0 = 0.0, $text_size4$sroa$7$0 = 0, $tmpcast3$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast3$byval_copy = sp + 32 | 0;
 $0 = sp + 24 | 0;
 $bb6 = sp;
 $1 = sp + 16 | 0;
 $3 = HEAP32[38201] | 0;
 HEAP8[$3 + 114 >> 0] = 1;
 if (HEAP8[$3 + 116 >> 0] | 0) {
  STACKTOP = sp;
  return;
 }
 if (!$text) ___assert_fail(126147, 124187, 5047, 126158);
 if (!$text_end) $$0 = $text + (_strlen($text) | 0) | 0; else $$0 = $text_end;
 $12 = $3 + 164 | 0;
 $14 = +HEAPF32[$3 + 272 >> 2];
 $15 = $14 >= 0.0;
 if ($15 | ($$0 - $text | 0) < 2001) {
  if ($15) {
   if ($14 < 0.0) $$0$i = 0.0; else {
    if ($14 == 0.0) {
     __ZN5ImGui19GetContentRegionMaxEv($tmpcast3$byval_copy);
     $$01$i = +HEAPF32[$tmpcast3$byval_copy >> 2] + +HEAPF32[$3 + 20 >> 2];
    } else if ($14 > 0.0) $$01$i = $14 + (+HEAPF32[$3 + 20 >> 2] - +HEAPF32[$3 + 72 >> 2]); else $$01$i = $14;
    if ($$01$i > 0.0) {
     $177 = $$01$i - +HEAPF32[$12 >> 2];
     $$0$i = $177 >= 9.999999747378752e-06 ? $177 : 9.999999747378752e-06;
    } else $$0$i = 0.0;
   }
   $186 = $$0$i;
  } else $186 = 0.0;
  $181 = HEAP32[38186] | 0;
  $183 = +HEAPF32[38187];
  if (($$0 | 0) == ($text | 0)) {
   $212 = 146892;
   $text_size4$sroa$0$0 = 0.0;
   $text_size4$sroa$7$0 = (HEAPF32[tempDoublePtr >> 2] = $183, HEAP32[tempDoublePtr >> 2] | 0);
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($tmpcast3$byval_copy, $181, $183, 3402823466385288598117041.0e14, $186, $text, $$0, 0);
   $187 = +HEAPF32[$tmpcast3$byval_copy >> 2];
   if ($187 > 0.0) {
    $191 = $187 - $183 / +HEAPF32[$181 >> 2];
    HEAPF32[$tmpcast3$byval_copy >> 2] = $191;
    $193 = $191;
   } else $193 = $187;
   $195 = +(~~($193 + .949999988079071) | 0);
   HEAPF32[$tmpcast3$byval_copy >> 2] = $195;
   $212 = 146892;
   $text_size4$sroa$0$0 = $195;
   $text_size4$sroa$7$0 = HEAP32[$tmpcast3$byval_copy + 4 >> 2] | 0;
  }
  $198 = HEAP32[$12 >> 2] | 0;
  $203 = +HEAPF32[$3 + 168 >> 2] + +HEAPF32[$3 + 200 >> 2];
  $204 = (HEAP32[tempDoublePtr >> 2] = $198, +HEAPF32[tempDoublePtr >> 2]);
  $205 = (HEAP32[tempDoublePtr >> 2] = $text_size4$sroa$7$0, +HEAPF32[tempDoublePtr >> 2]);
  HEAP32[$bb6 >> 2] = $198;
  HEAPF32[$bb6 + 4 >> 2] = $203;
  HEAPF32[$bb6 + 8 >> 2] = $text_size4$sroa$0$0 + $204;
  HEAPF32[$bb6 + 12 >> 2] = $205 + $203;
  $213 = HEAP32[$212 + 5912 >> 2] | 0;
  HEAP8[$213 + 114 >> 0] = 1;
  if (!(HEAP8[$213 + 116 >> 0] | 0)) {
   $218 = $213 + 196 | 0;
   $219 = +HEAPF32[$218 >> 2];
   $221 = $219 >= $205 ? $219 : $205;
   $222 = $213 + 200 | 0;
   $223 = +HEAPF32[$222 >> 2];
   $226 = $213 + 164 | 0;
   $228 = $text_size4$sroa$0$0 + +HEAPF32[$226 >> 2];
   $229 = $213 + 168 | 0;
   $230 = HEAP32[$229 >> 2] | 0;
   HEAPF32[$213 + 172 >> 2] = $228;
   HEAP32[$213 + 176 >> 2] = $230;
   $249 = +(~~($221 + (HEAP32[tempDoublePtr >> 2] = $230, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[$212 + 5092 >> 2]) | 0);
   HEAPF32[$226 >> 2] = +(~~(+HEAPF32[$213 + 20 >> 2] + +HEAPF32[$213 + 368 >> 2] + +HEAPF32[$213 + 372 >> 2]) | 0);
   HEAPF32[$229 >> 2] = $249;
   $250 = $213 + 188 | 0;
   $251 = +HEAPF32[$250 >> 2];
   HEAPF32[$250 >> 2] = $251 >= $228 ? $251 : $228;
   $254 = $213 + 192 | 0;
   $255 = +HEAPF32[$254 >> 2];
   HEAPF32[$254 >> 2] = $255 >= $249 ? $255 : $249;
   HEAPF32[$213 + 204 >> 2] = $221;
   HEAPF32[$213 + 208 >> 2] = $223 >= 0.0 ? $223 : 0.0;
   HEAPF32[$222 >> 2] = 0.0;
   HEAPF32[$218 >> 2] = 0.0;
  }
  if (__ZN5ImGui7ItemAddERK6ImRectPKj($bb6, 0) | 0) {
   $261 = $bb6;
   $266 = HEAP32[$261 + 4 >> 2] | 0;
   $267 = $1;
   HEAP32[$267 >> 2] = HEAP32[$261 >> 2];
   HEAP32[$267 + 4 >> 2] = $266;
   HEAP32[$tmpcast3$byval_copy >> 2] = HEAP32[$1 >> 2];
   HEAP32[$tmpcast3$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   __ZN5ImGui17RenderTextWrappedE6ImVec2PKcS2_f($tmpcast3$byval_copy, $text, $$0, $186);
   STACKTOP = sp;
   return;
  } else {
   STACKTOP = sp;
   return;
  }
 }
 $20 = +HEAPF32[38187];
 $23 = +HEAPF32[$12 >> 2] + 0.0;
 $24 = +HEAPF32[$3 + 200 >> 2] + +HEAPF32[$3 + 168 >> 2];
 $25 = (HEAPF32[tempDoublePtr >> 2] = $24, HEAP32[tempDoublePtr >> 2] | 0);
 $27 = +HEAPF32[$3 + 440 >> 2];
 if (!($24 <= +HEAPF32[$3 + 448 >> 2])) {
  $117 = $3;
  $147 = 146892;
  $271 = 1;
  $text_size$sroa$0$4 = 0.0;
  $text_size$sroa$6$0 = 0.0;
 } else {
  if (!(HEAP8[157996] | 0)) {
   $36 = ~~(($27 - $24) / $20);
   if (($36 | 0) > 0) {
    if ($$0 >>> 0 > $text >>> 0) {
     $line$058 = $text;
     $lines_skipped$059 = 0;
     while (1) {
      $40 = (_strchr($line$058, 10) | 0) + 1 | 0;
      $41 = $lines_skipped$059 + 1 | 0;
      if ($40 >>> 0 < $$0 >>> 0 & ($41 | 0) < ($36 | 0)) {
       $line$058 = $40;
       $lines_skipped$059 = $41;
      } else {
       $$lcssa82 = $40;
       $$lcssa83 = $41;
       break;
      }
     }
     $line$0$lcssa = $$lcssa82;
     $lines_skipped$0$lcssa = +($$lcssa83 | 0);
    } else {
     $line$0$lcssa = $text;
     $lines_skipped$0$lcssa = 0.0;
    }
    $line$2 = $line$0$lcssa;
    $pos$sroa$7$0 = (HEAPF32[tempDoublePtr >> 2] = $24 + $20 * $lines_skipped$0$lcssa, HEAP32[tempDoublePtr >> 2] | 0);
   } else {
    $line$2 = $text;
    $pos$sroa$7$0 = $25;
   }
  } else {
   $line$2 = $text;
   $pos$sroa$7$0 = $25;
  }
  if ($line$2 >>> 0 < $$0 >>> 0) {
   $51 = $23 + +HEAPF32[$3 + 28 >> 2];
   $52 = $0 + 4 | 0;
   $$pn = (HEAP32[tempDoublePtr >> 2] = $pos$sroa$7$0, +HEAPF32[tempDoublePtr >> 2]);
   $55 = $27;
   $57 = $3;
   $68 = 146892;
   $line$346 = $line$2;
   $line_rect$sroa$4$041 = $pos$sroa$7$0;
   $pos$sroa$7$142 = $pos$sroa$7$0;
   $text_size$sroa$0$044 = 0.0;
   while (1) {
    $line_rect$sroa$10$0$in48 = $20 + $$pn;
    $53 = _strchr($line$346, 10) | 0;
    if ($55 < $line_rect$sroa$10$0$in48) if (+HEAPF32[$57 + 448 >> 2] > (HEAP32[tempDoublePtr >> 2] = $line_rect$sroa$4$041, +HEAPF32[tempDoublePtr >> 2])) if (+HEAPF32[$57 + 436 >> 2] < $51) {
     if (!(+HEAPF32[$57 + 444 >> 2] > $23)) label = 20;
    } else label = 20; else label = 20; else label = 20;
    if ((label | 0) == 20) {
     label = 0;
     if (!(HEAP8[$68 + 11104 >> 0] | 0)) {
      $line$3$lcssa = $line$346;
      $pos$sroa$7$1$lcssa = $pos$sroa$7$142;
      $text_size$sroa$0$0$lcssa = $text_size$sroa$0$044;
      break;
     }
    }
    $73 = HEAP32[$68 + 5852 >> 2] | 0;
    $75 = +HEAPF32[$68 + 5856 >> 2];
    if (($53 | 0) == ($line$346 | 0)) $line_size$sroa$0$0 = 0; else {
     __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($tmpcast3$byval_copy, $73, $75, 3402823466385288598117041.0e14, -1.0, $line$346, $53, 0);
     $77 = +HEAPF32[$tmpcast3$byval_copy >> 2];
     if ($77 > 0.0) {
      $81 = $77 - $75 / +HEAPF32[$73 >> 2];
      HEAPF32[$tmpcast3$byval_copy >> 2] = $81;
      $83 = $81;
     } else $83 = $77;
     $line_size$sroa$0$0 = (HEAPF32[tempDoublePtr >> 2] = +(~~($83 + .949999988079071) | 0), HEAP32[tempDoublePtr >> 2] | 0);
    }
    $86 = (HEAP32[tempDoublePtr >> 2] = $line_size$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]);
    $88 = $text_size$sroa$0$044 >= $86 ? $text_size$sroa$0$044 : $86;
    HEAPF32[$0 >> 2] = $23;
    HEAP32[$52 >> 2] = $pos$sroa$7$142;
    HEAP32[$tmpcast3$byval_copy >> 2] = HEAP32[$0 >> 2];
    HEAP32[$tmpcast3$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
    __ZN5ImGui10RenderTextE6ImVec2PKcS2_b($tmpcast3$byval_copy, $line$346, $53, 0);
    $90 = (($53 | 0) == 0 ? $$0 : $53) + 1 | 0;
    $93 = (HEAPF32[tempDoublePtr >> 2] = $20 + (HEAP32[tempDoublePtr >> 2] = $pos$sroa$7$142, +HEAPF32[tempDoublePtr >> 2]), HEAP32[tempDoublePtr >> 2] | 0);
    if ($90 >>> 0 >= $$0 >>> 0) {
     $line$3$lcssa = $90;
     $pos$sroa$7$1$lcssa = $93;
     $text_size$sroa$0$0$lcssa = $88;
     break;
    }
    $$pre65 = HEAP32[38201] | 0;
    $$pn = $line_rect$sroa$10$0$in48;
    $55 = +HEAPF32[$$pre65 + 440 >> 2];
    $57 = $$pre65;
    $68 = 146892;
    $line$346 = $90;
    $line_rect$sroa$4$041 = (HEAPF32[tempDoublePtr >> 2] = $20 + (HEAP32[tempDoublePtr >> 2] = $line_rect$sroa$4$041, +HEAPF32[tempDoublePtr >> 2]), HEAP32[tempDoublePtr >> 2] | 0);
    $pos$sroa$7$142 = $93;
    $text_size$sroa$0$044 = $88;
   }
   if ($line$3$lcssa >>> 0 < $$0 >>> 0) {
    $line$638 = $line$3$lcssa;
    $lines_skipped2$039 = 0;
    while (1) {
     $98 = _strchr($line$638, 10) | 0;
     $line$638 = (($98 | 0) == 0 ? $$0 : $98) + 1 | 0;
     $101 = $lines_skipped2$039 + 1 | 0;
     if ($line$638 >>> 0 >= $$0 >>> 0) {
      $$lcssa = $101;
      break;
     } else $lines_skipped2$039 = $101;
    }
    $lines_skipped2$0$lcssa = +($$lcssa | 0);
   } else $lines_skipped2$0$lcssa = 0.0;
   $pos$sroa$7$4 = (HEAPF32[tempDoublePtr >> 2] = (HEAP32[tempDoublePtr >> 2] = $pos$sroa$7$1$lcssa, +HEAPF32[tempDoublePtr >> 2]) + $20 * $lines_skipped2$0$lcssa, HEAP32[tempDoublePtr >> 2] | 0);
   $text_size$sroa$0$3 = $text_size$sroa$0$0$lcssa;
  } else {
   $pos$sroa$7$4 = $pos$sroa$7$0;
   $text_size$sroa$0$3 = 0.0;
  }
  $$pre71 = HEAP32[38201] | 0;
  $117 = $$pre71;
  $147 = 146892;
  $271 = (HEAP8[$$pre71 + 116 >> 0] | 0) == 0;
  $text_size$sroa$0$4 = $text_size$sroa$0$3;
  $text_size$sroa$6$0 = (HEAP32[tempDoublePtr >> 2] = $pos$sroa$7$4, +HEAPF32[tempDoublePtr >> 2]) - $24 + 0.0;
 }
 $110 = $23 + $text_size$sroa$0$4;
 $111 = $24 + $text_size$sroa$6$0;
 HEAPF32[$tmpcast3$byval_copy >> 2] = $23;
 HEAPF32[$tmpcast3$byval_copy + 4 >> 2] = $24;
 HEAPF32[$tmpcast3$byval_copy + 8 >> 2] = $110;
 HEAPF32[$tmpcast3$byval_copy + 12 >> 2] = $111;
 $115 = $111 - $24;
 HEAP8[$117 + 114 >> 0] = 1;
 if ($271) {
  $119 = $117 + 196 | 0;
  $120 = +HEAPF32[$119 >> 2];
  $122 = $120 >= $115 ? $120 : $115;
  $123 = $117 + 200 | 0;
  $124 = +HEAPF32[$123 >> 2];
  $127 = $117 + 164 | 0;
  $129 = $110 - $23 + +HEAPF32[$127 >> 2];
  $130 = $117 + 168 | 0;
  $131 = HEAP32[$130 >> 2] | 0;
  HEAPF32[$117 + 172 >> 2] = $129;
  HEAP32[$117 + 176 >> 2] = $131;
  $151 = +(~~($122 + (HEAP32[tempDoublePtr >> 2] = $131, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[$147 + 5092 >> 2]) | 0);
  HEAPF32[$127 >> 2] = +(~~(+HEAPF32[$117 + 20 >> 2] + +HEAPF32[$117 + 368 >> 2] + +HEAPF32[$117 + 372 >> 2]) | 0);
  HEAPF32[$130 >> 2] = $151;
  $152 = $117 + 188 | 0;
  $153 = +HEAPF32[$152 >> 2];
  HEAPF32[$152 >> 2] = $153 >= $129 ? $153 : $129;
  $156 = $117 + 192 | 0;
  $157 = +HEAPF32[$156 >> 2];
  HEAPF32[$156 >> 2] = $157 >= $151 ? $157 : $151;
  HEAPF32[$117 + 204 >> 2] = $122;
  HEAPF32[$117 + 208 >> 2] = $124 >= 0.0 ? $124 : 0.0;
  HEAPF32[$123 >> 2] = 0.0;
  HEAPF32[$119 >> 2] = 0.0;
 }
 __ZN5ImGui7ItemAddERK6ImRectPKj($tmpcast3$byval_copy, 0) | 0;
 STACKTOP = sp;
 return;
}

function _free($mem) {
 $mem = $mem | 0;
 var $$lcssa = 0, $$pre$phi41Z2D = 0, $$pre$phi43Z2D = 0, $$pre$phiZ2D = 0, $1 = 0, $104 = 0, $105 = 0, $113 = 0, $114 = 0, $12 = 0, $122 = 0, $130 = 0, $135 = 0, $136 = 0, $139 = 0, $141 = 0, $143 = 0, $15 = 0, $158 = 0, $16 = 0, $163 = 0, $165 = 0, $168 = 0, $171 = 0, $174 = 0, $177 = 0, $178 = 0, $179 = 0, $181 = 0, $183 = 0, $184 = 0, $186 = 0, $187 = 0, $193 = 0, $194 = 0, $2 = 0, $20 = 0, $203 = 0, $208 = 0, $211 = 0, $212 = 0, $218 = 0, $23 = 0, $233 = 0, $236 = 0, $237 = 0, $238 = 0, $242 = 0, $243 = 0, $249 = 0, $25 = 0, $254 = 0, $255 = 0, $258 = 0, $260 = 0, $263 = 0, $268 = 0, $27 = 0, $274 = 0, $278 = 0, $279 = 0, $297 = 0, $299 = 0, $306 = 0, $307 = 0, $308 = 0, $316 = 0, $40 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $68 = 0, $73 = 0, $74 = 0, $8 = 0, $83 = 0, $88 = 0, $9 = 0, $91 = 0, $92 = 0, $98 = 0, $F18$0 = 0, $I20$0 = 0, $K21$0 = 0, $R$1 = 0, $R$1$lcssa = 0, $R$3 = 0, $R8$1 = 0, $R8$1$lcssa = 0, $R8$3 = 0, $RP$1 = 0, $RP$1$lcssa = 0, $RP10$1 = 0, $RP10$1$lcssa = 0, $T$0 = 0, $T$0$lcssa = 0, $T$0$lcssa48 = 0, $p$1 = 0, $psize$1 = 0, $psize$2 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0;
 if (!$mem) return;
 $1 = $mem + -8 | 0;
 $2 = HEAP32[40711] | 0;
 if ($1 >>> 0 < $2 >>> 0) _abort();
 $5 = HEAP32[$mem + -4 >> 2] | 0;
 $6 = $5 & 3;
 if (($6 | 0) == 1) _abort();
 $8 = $5 & -8;
 $9 = $1 + $8 | 0;
 do if (!($5 & 1)) {
  $12 = HEAP32[$1 >> 2] | 0;
  if (!$6) return;
  $15 = $1 + (0 - $12) | 0;
  $16 = $12 + $8 | 0;
  if ($15 >>> 0 < $2 >>> 0) _abort();
  if (($15 | 0) == (HEAP32[40712] | 0)) {
   $104 = $9 + 4 | 0;
   $105 = HEAP32[$104 >> 2] | 0;
   if (($105 & 3 | 0) != 3) {
    $p$1 = $15;
    $psize$1 = $16;
    break;
   }
   HEAP32[40709] = $16;
   HEAP32[$104 >> 2] = $105 & -2;
   HEAP32[$15 + 4 >> 2] = $16 | 1;
   HEAP32[$15 + $16 >> 2] = $16;
   return;
  }
  $20 = $12 >>> 3;
  if ($12 >>> 0 < 256) {
   $23 = HEAP32[$15 + 8 >> 2] | 0;
   $25 = HEAP32[$15 + 12 >> 2] | 0;
   $27 = 162868 + ($20 << 1 << 2) | 0;
   if (($23 | 0) != ($27 | 0)) {
    if ($23 >>> 0 < $2 >>> 0) _abort();
    if ((HEAP32[$23 + 12 >> 2] | 0) != ($15 | 0)) _abort();
   }
   if (($25 | 0) == ($23 | 0)) {
    HEAP32[40707] = HEAP32[40707] & ~(1 << $20);
    $p$1 = $15;
    $psize$1 = $16;
    break;
   }
   if (($25 | 0) == ($27 | 0)) $$pre$phi43Z2D = $25 + 8 | 0; else {
    if ($25 >>> 0 < $2 >>> 0) _abort();
    $40 = $25 + 8 | 0;
    if ((HEAP32[$40 >> 2] | 0) == ($15 | 0)) $$pre$phi43Z2D = $40; else _abort();
   }
   HEAP32[$23 + 12 >> 2] = $25;
   HEAP32[$$pre$phi43Z2D >> 2] = $23;
   $p$1 = $15;
   $psize$1 = $16;
   break;
  }
  $45 = HEAP32[$15 + 24 >> 2] | 0;
  $47 = HEAP32[$15 + 12 >> 2] | 0;
  do if (($47 | 0) == ($15 | 0)) {
   $58 = $15 + 16 | 0;
   $59 = $58 + 4 | 0;
   $60 = HEAP32[$59 >> 2] | 0;
   if (!$60) {
    $62 = HEAP32[$58 >> 2] | 0;
    if (!$62) {
     $R$3 = 0;
     break;
    } else {
     $R$1 = $62;
     $RP$1 = $58;
    }
   } else {
    $R$1 = $60;
    $RP$1 = $59;
   }
   while (1) {
    $64 = $R$1 + 20 | 0;
    $65 = HEAP32[$64 >> 2] | 0;
    if ($65 | 0) {
     $R$1 = $65;
     $RP$1 = $64;
     continue;
    }
    $67 = $R$1 + 16 | 0;
    $68 = HEAP32[$67 >> 2] | 0;
    if (!$68) {
     $R$1$lcssa = $R$1;
     $RP$1$lcssa = $RP$1;
     break;
    } else {
     $R$1 = $68;
     $RP$1 = $67;
    }
   }
   if ($RP$1$lcssa >>> 0 < $2 >>> 0) _abort(); else {
    HEAP32[$RP$1$lcssa >> 2] = 0;
    $R$3 = $R$1$lcssa;
    break;
   }
  } else {
   $50 = HEAP32[$15 + 8 >> 2] | 0;
   if ($50 >>> 0 < $2 >>> 0) _abort();
   $52 = $50 + 12 | 0;
   if ((HEAP32[$52 >> 2] | 0) != ($15 | 0)) _abort();
   $55 = $47 + 8 | 0;
   if ((HEAP32[$55 >> 2] | 0) == ($15 | 0)) {
    HEAP32[$52 >> 2] = $47;
    HEAP32[$55 >> 2] = $50;
    $R$3 = $47;
    break;
   } else _abort();
  } while (0);
  if (!$45) {
   $p$1 = $15;
   $psize$1 = $16;
  } else {
   $73 = HEAP32[$15 + 28 >> 2] | 0;
   $74 = 163132 + ($73 << 2) | 0;
   if (($15 | 0) == (HEAP32[$74 >> 2] | 0)) {
    HEAP32[$74 >> 2] = $R$3;
    if (!$R$3) {
     HEAP32[40708] = HEAP32[40708] & ~(1 << $73);
     $p$1 = $15;
     $psize$1 = $16;
     break;
    }
   } else {
    if ($45 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
    $83 = $45 + 16 | 0;
    if ((HEAP32[$83 >> 2] | 0) == ($15 | 0)) HEAP32[$83 >> 2] = $R$3; else HEAP32[$45 + 20 >> 2] = $R$3;
    if (!$R$3) {
     $p$1 = $15;
     $psize$1 = $16;
     break;
    }
   }
   $88 = HEAP32[40711] | 0;
   if ($R$3 >>> 0 < $88 >>> 0) _abort();
   HEAP32[$R$3 + 24 >> 2] = $45;
   $91 = $15 + 16 | 0;
   $92 = HEAP32[$91 >> 2] | 0;
   do if ($92 | 0) if ($92 >>> 0 < $88 >>> 0) _abort(); else {
    HEAP32[$R$3 + 16 >> 2] = $92;
    HEAP32[$92 + 24 >> 2] = $R$3;
    break;
   } while (0);
   $98 = HEAP32[$91 + 4 >> 2] | 0;
   if (!$98) {
    $p$1 = $15;
    $psize$1 = $16;
   } else if ($98 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
    HEAP32[$R$3 + 20 >> 2] = $98;
    HEAP32[$98 + 24 >> 2] = $R$3;
    $p$1 = $15;
    $psize$1 = $16;
    break;
   }
  }
 } else {
  $p$1 = $1;
  $psize$1 = $8;
 } while (0);
 if ($p$1 >>> 0 >= $9 >>> 0) _abort();
 $113 = $9 + 4 | 0;
 $114 = HEAP32[$113 >> 2] | 0;
 if (!($114 & 1)) _abort();
 if (!($114 & 2)) {
  if (($9 | 0) == (HEAP32[40713] | 0)) {
   $122 = (HEAP32[40710] | 0) + $psize$1 | 0;
   HEAP32[40710] = $122;
   HEAP32[40713] = $p$1;
   HEAP32[$p$1 + 4 >> 2] = $122 | 1;
   if (($p$1 | 0) != (HEAP32[40712] | 0)) return;
   HEAP32[40712] = 0;
   HEAP32[40709] = 0;
   return;
  }
  if (($9 | 0) == (HEAP32[40712] | 0)) {
   $130 = (HEAP32[40709] | 0) + $psize$1 | 0;
   HEAP32[40709] = $130;
   HEAP32[40712] = $p$1;
   HEAP32[$p$1 + 4 >> 2] = $130 | 1;
   HEAP32[$p$1 + $130 >> 2] = $130;
   return;
  }
  $135 = ($114 & -8) + $psize$1 | 0;
  $136 = $114 >>> 3;
  do if ($114 >>> 0 < 256) {
   $139 = HEAP32[$9 + 8 >> 2] | 0;
   $141 = HEAP32[$9 + 12 >> 2] | 0;
   $143 = 162868 + ($136 << 1 << 2) | 0;
   if (($139 | 0) != ($143 | 0)) {
    if ($139 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
    if ((HEAP32[$139 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($141 | 0) == ($139 | 0)) {
    HEAP32[40707] = HEAP32[40707] & ~(1 << $136);
    break;
   }
   if (($141 | 0) == ($143 | 0)) $$pre$phi41Z2D = $141 + 8 | 0; else {
    if ($141 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
    $158 = $141 + 8 | 0;
    if ((HEAP32[$158 >> 2] | 0) == ($9 | 0)) $$pre$phi41Z2D = $158; else _abort();
   }
   HEAP32[$139 + 12 >> 2] = $141;
   HEAP32[$$pre$phi41Z2D >> 2] = $139;
  } else {
   $163 = HEAP32[$9 + 24 >> 2] | 0;
   $165 = HEAP32[$9 + 12 >> 2] | 0;
   do if (($165 | 0) == ($9 | 0)) {
    $177 = $9 + 16 | 0;
    $178 = $177 + 4 | 0;
    $179 = HEAP32[$178 >> 2] | 0;
    if (!$179) {
     $181 = HEAP32[$177 >> 2] | 0;
     if (!$181) {
      $R8$3 = 0;
      break;
     } else {
      $R8$1 = $181;
      $RP10$1 = $177;
     }
    } else {
     $R8$1 = $179;
     $RP10$1 = $178;
    }
    while (1) {
     $183 = $R8$1 + 20 | 0;
     $184 = HEAP32[$183 >> 2] | 0;
     if ($184 | 0) {
      $R8$1 = $184;
      $RP10$1 = $183;
      continue;
     }
     $186 = $R8$1 + 16 | 0;
     $187 = HEAP32[$186 >> 2] | 0;
     if (!$187) {
      $R8$1$lcssa = $R8$1;
      $RP10$1$lcssa = $RP10$1;
      break;
     } else {
      $R8$1 = $187;
      $RP10$1 = $186;
     }
    }
    if ($RP10$1$lcssa >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
     HEAP32[$RP10$1$lcssa >> 2] = 0;
     $R8$3 = $R8$1$lcssa;
     break;
    }
   } else {
    $168 = HEAP32[$9 + 8 >> 2] | 0;
    if ($168 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
    $171 = $168 + 12 | 0;
    if ((HEAP32[$171 >> 2] | 0) != ($9 | 0)) _abort();
    $174 = $165 + 8 | 0;
    if ((HEAP32[$174 >> 2] | 0) == ($9 | 0)) {
     HEAP32[$171 >> 2] = $165;
     HEAP32[$174 >> 2] = $168;
     $R8$3 = $165;
     break;
    } else _abort();
   } while (0);
   if ($163 | 0) {
    $193 = HEAP32[$9 + 28 >> 2] | 0;
    $194 = 163132 + ($193 << 2) | 0;
    if (($9 | 0) == (HEAP32[$194 >> 2] | 0)) {
     HEAP32[$194 >> 2] = $R8$3;
     if (!$R8$3) {
      HEAP32[40708] = HEAP32[40708] & ~(1 << $193);
      break;
     }
    } else {
     if ($163 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
     $203 = $163 + 16 | 0;
     if ((HEAP32[$203 >> 2] | 0) == ($9 | 0)) HEAP32[$203 >> 2] = $R8$3; else HEAP32[$163 + 20 >> 2] = $R8$3;
     if (!$R8$3) break;
    }
    $208 = HEAP32[40711] | 0;
    if ($R8$3 >>> 0 < $208 >>> 0) _abort();
    HEAP32[$R8$3 + 24 >> 2] = $163;
    $211 = $9 + 16 | 0;
    $212 = HEAP32[$211 >> 2] | 0;
    do if ($212 | 0) if ($212 >>> 0 < $208 >>> 0) _abort(); else {
     HEAP32[$R8$3 + 16 >> 2] = $212;
     HEAP32[$212 + 24 >> 2] = $R8$3;
     break;
    } while (0);
    $218 = HEAP32[$211 + 4 >> 2] | 0;
    if ($218 | 0) if ($218 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
     HEAP32[$R8$3 + 20 >> 2] = $218;
     HEAP32[$218 + 24 >> 2] = $R8$3;
     break;
    }
   }
  } while (0);
  HEAP32[$p$1 + 4 >> 2] = $135 | 1;
  HEAP32[$p$1 + $135 >> 2] = $135;
  if (($p$1 | 0) == (HEAP32[40712] | 0)) {
   HEAP32[40709] = $135;
   return;
  } else $psize$2 = $135;
 } else {
  HEAP32[$113 >> 2] = $114 & -2;
  HEAP32[$p$1 + 4 >> 2] = $psize$1 | 1;
  HEAP32[$p$1 + $psize$1 >> 2] = $psize$1;
  $psize$2 = $psize$1;
 }
 $233 = $psize$2 >>> 3;
 if ($psize$2 >>> 0 < 256) {
  $236 = 162868 + ($233 << 1 << 2) | 0;
  $237 = HEAP32[40707] | 0;
  $238 = 1 << $233;
  if (!($237 & $238)) {
   HEAP32[40707] = $237 | $238;
   $$pre$phiZ2D = $236 + 8 | 0;
   $F18$0 = $236;
  } else {
   $242 = $236 + 8 | 0;
   $243 = HEAP32[$242 >> 2] | 0;
   if ($243 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $242;
    $F18$0 = $243;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $p$1;
  HEAP32[$F18$0 + 12 >> 2] = $p$1;
  HEAP32[$p$1 + 8 >> 2] = $F18$0;
  HEAP32[$p$1 + 12 >> 2] = $236;
  return;
 }
 $249 = $psize$2 >>> 8;
 if (!$249) $I20$0 = 0; else if ($psize$2 >>> 0 > 16777215) $I20$0 = 31; else {
  $254 = ($249 + 1048320 | 0) >>> 16 & 8;
  $255 = $249 << $254;
  $258 = ($255 + 520192 | 0) >>> 16 & 4;
  $260 = $255 << $258;
  $263 = ($260 + 245760 | 0) >>> 16 & 2;
  $268 = 14 - ($258 | $254 | $263) + ($260 << $263 >>> 15) | 0;
  $I20$0 = $psize$2 >>> ($268 + 7 | 0) & 1 | $268 << 1;
 }
 $274 = 163132 + ($I20$0 << 2) | 0;
 HEAP32[$p$1 + 28 >> 2] = $I20$0;
 HEAP32[$p$1 + 20 >> 2] = 0;
 HEAP32[$p$1 + 16 >> 2] = 0;
 $278 = HEAP32[40708] | 0;
 $279 = 1 << $I20$0;
 do if (!($278 & $279)) {
  HEAP32[40708] = $278 | $279;
  HEAP32[$274 >> 2] = $p$1;
  HEAP32[$p$1 + 24 >> 2] = $274;
  HEAP32[$p$1 + 12 >> 2] = $p$1;
  HEAP32[$p$1 + 8 >> 2] = $p$1;
 } else {
  $K21$0 = $psize$2 << (($I20$0 | 0) == 31 ? 0 : 25 - ($I20$0 >>> 1) | 0);
  $T$0 = HEAP32[$274 >> 2] | 0;
  while (1) {
   if ((HEAP32[$T$0 + 4 >> 2] & -8 | 0) == ($psize$2 | 0)) {
    $T$0$lcssa = $T$0;
    label = 130;
    break;
   }
   $297 = $T$0 + 16 + ($K21$0 >>> 31 << 2) | 0;
   $299 = HEAP32[$297 >> 2] | 0;
   if (!$299) {
    $$lcssa = $297;
    $T$0$lcssa48 = $T$0;
    label = 127;
    break;
   } else {
    $K21$0 = $K21$0 << 1;
    $T$0 = $299;
   }
  }
  if ((label | 0) == 127) if ($$lcssa >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
   HEAP32[$$lcssa >> 2] = $p$1;
   HEAP32[$p$1 + 24 >> 2] = $T$0$lcssa48;
   HEAP32[$p$1 + 12 >> 2] = $p$1;
   HEAP32[$p$1 + 8 >> 2] = $p$1;
   break;
  } else if ((label | 0) == 130) {
   $306 = $T$0$lcssa + 8 | 0;
   $307 = HEAP32[$306 >> 2] | 0;
   $308 = HEAP32[40711] | 0;
   if ($307 >>> 0 >= $308 >>> 0 & $T$0$lcssa >>> 0 >= $308 >>> 0) {
    HEAP32[$307 + 12 >> 2] = $p$1;
    HEAP32[$306 >> 2] = $p$1;
    HEAP32[$p$1 + 8 >> 2] = $307;
    HEAP32[$p$1 + 12 >> 2] = $T$0$lcssa;
    HEAP32[$p$1 + 24 >> 2] = 0;
    break;
   } else _abort();
  }
 } while (0);
 $316 = (HEAP32[40715] | 0) + -1 | 0;
 HEAP32[40715] = $316;
 if (!$316) $sp$0$in$i = 163284; else return;
 while (1) {
  $sp$0$i = HEAP32[$sp$0$in$i >> 2] | 0;
  if (!$sp$0$i) break; else $sp$0$in$i = $sp$0$i + 8 | 0;
 }
 HEAP32[40715] = -1;
 return;
}

function __ZN4yakc3z808dd_fd_cbEh($this, $lead) {
 $this = $this | 0;
 $lead = $lead | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0, $123 = 0, $125 = 0, $126 = 0, $130 = 0, $132 = 0, $136 = 0, $137 = 0, $15 = 0, $158 = 0, $16 = 0, $160 = 0, $161 = 0, $165 = 0, $166 = 0, $167 = 0, $174 = 0, $190 = 0, $192 = 0, $193 = 0, $197 = 0, $2 = 0, $200 = 0, $201 = 0, $208 = 0, $224 = 0, $226 = 0, $227 = 0, $23 = 0, $231 = 0, $233 = 0, $234 = 0, $24 = 0, $241 = 0, $257 = 0, $259 = 0, $26 = 0, $260 = 0, $263 = 0, $265 = 0, $27 = 0, $273 = 0, $295 = 0, $3 = 0, $30 = 0, $301 = 0, $307 = 0, $308 = 0, $31 = 0, $316 = 0, $319 = 0, $333 = 0, $336 = 0, $34 = 0, $35 = 0, $40 = 0, $54 = 0, $56 = 0, $57 = 0, $61 = 0, $64 = 0, $65 = 0, $73 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $98 = 0, $addr$0$in = 0;
 $0 = $this + 22 | 0;
 $1 = HEAP16[$0 >> 1] | 0;
 $2 = $1 + 1 << 16 >> 16;
 HEAP16[$0 >> 1] = $2;
 $3 = $1 & 65535;
 $addr$0$in = (HEAPU16[($lead << 24 >> 24 == -35 ? $this + 8 | 0 : $this + 10 | 0) >> 1] | 0) + (HEAP8[(HEAP32[$this + 1312 + ($3 >>> 11 << 3) >> 2] | 0) + ($3 & 2047) >> 0] | 0) | 0;
 $15 = $1 + 2 << 16 >> 16;
 HEAP16[$0 >> 1] = $15;
 $16 = $2 & 65535;
 $23 = HEAPU8[(HEAP32[$this + 1312 + ($16 >>> 11 << 3) >> 2] | 0) + ($16 & 2047) >> 0] | 0;
 do switch ($23 | 0) {
 case 7:
 case 6:
 case 5:
 case 4:
 case 3:
 case 2:
 case 1:
 case 0:
  {
   $24 = $addr$0$in & 2047;
   $26 = $addr$0$in >>> 11 & 31;
   $27 = $this + 1312 + ($26 << 3) | 0;
   $30 = HEAP8[(HEAP32[$27 >> 2] | 0) + $24 >> 0] | 0;
   $31 = $30 & 255;
   $34 = $31 << 1 | $31 >>> 7;
   $35 = $34 & 255;
   $40 = $this + 6 | 0;
   HEAP8[$40 >> 0] = HEAP8[($34 & 255) + ($this + 31) >> 0] | ($30 & 255) >>> 7;
   switch ($23 | 0) {
   case 0:
    {
     HEAP8[$this + 1 >> 0] = $35;
     break;
    }
   case 1:
    {
     HEAP8[$this >> 0] = $35;
     break;
    }
   case 2:
    {
     HEAP8[$this + 2 + 1 >> 0] = $35;
     break;
    }
   case 3:
    {
     HEAP8[$this + 2 >> 0] = $35;
     break;
    }
   case 4:
    {
     HEAP8[$this + 4 + 1 >> 0] = $35;
     break;
    }
   case 5:
    {
     HEAP8[$this + 4 >> 0] = $35;
     break;
    }
   case 7:
    {
     HEAP8[$40 + 1 >> 0] = $35;
     break;
    }
   default:
    {}
   }
   if (!(HEAP8[$this + 1312 + ($26 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$27 >> 2] | 0) + $24 >> 0] = $35;
   $$0 = 23;
   return $$0 | 0;
  }
 case 15:
 case 14:
 case 13:
 case 12:
 case 11:
 case 10:
 case 9:
 case 8:
  {
   $54 = $addr$0$in & 2047;
   $56 = $addr$0$in >>> 11 & 31;
   $57 = $this + 1312 + ($56 << 3) | 0;
   $61 = HEAPU8[(HEAP32[$57 >> 2] | 0) + $54 >> 0] | 0;
   $64 = $61 >>> 1 | $61 << 7;
   $65 = $64 & 255;
   $73 = $this + 6 | 0;
   HEAP8[$73 >> 0] = HEAPU8[($64 & 255) + ($this + 31) >> 0] | $61 & 1;
   switch ($23 + 248 & 255 | 0) {
   case 0:
    {
     HEAP8[$this + 1 >> 0] = $65;
     break;
    }
   case 1:
    {
     HEAP8[$this >> 0] = $65;
     break;
    }
   case 2:
    {
     HEAP8[$this + 2 + 1 >> 0] = $65;
     break;
    }
   case 3:
    {
     HEAP8[$this + 2 >> 0] = $65;
     break;
    }
   case 4:
    {
     HEAP8[$this + 4 + 1 >> 0] = $65;
     break;
    }
   case 5:
    {
     HEAP8[$this + 4 >> 0] = $65;
     break;
    }
   case 7:
    {
     HEAP8[$73 + 1 >> 0] = $65;
     break;
    }
   default:
    {}
   }
   if (!(HEAP8[$this + 1312 + ($56 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$57 >> 2] | 0) + $54 >> 0] = $65;
   $$0 = 23;
   return $$0 | 0;
  }
 case 23:
 case 22:
 case 21:
 case 20:
 case 19:
 case 18:
 case 17:
 case 16:
  {
   $89 = $addr$0$in & 2047;
   $91 = $addr$0$in >>> 11 & 31;
   $92 = $this + 1312 + ($91 << 3) | 0;
   $95 = HEAP8[(HEAP32[$92 >> 2] | 0) + $89 >> 0] | 0;
   $98 = $this + 6 | 0;
   $102 = HEAPU8[$98 >> 0] & 1 | ($95 & 255) << 1;
   $103 = $102 & 255;
   HEAP8[$98 >> 0] = HEAP8[($102 & 255) + ($this + 31) >> 0] | ($95 & 255) >>> 7;
   switch ($23 + 240 & 255 | 0) {
   case 0:
    {
     HEAP8[$this + 1 >> 0] = $103;
     break;
    }
   case 1:
    {
     HEAP8[$this >> 0] = $103;
     break;
    }
   case 2:
    {
     HEAP8[$this + 2 + 1 >> 0] = $103;
     break;
    }
   case 3:
    {
     HEAP8[$this + 2 >> 0] = $103;
     break;
    }
   case 4:
    {
     HEAP8[$this + 4 + 1 >> 0] = $103;
     break;
    }
   case 5:
    {
     HEAP8[$this + 4 >> 0] = $103;
     break;
    }
   case 7:
    {
     HEAP8[$98 + 1 >> 0] = $103;
     break;
    }
   default:
    {}
   }
   if (!(HEAP8[$this + 1312 + ($91 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$92 >> 2] | 0) + $89 >> 0] = $103;
   $$0 = 23;
   return $$0 | 0;
  }
 case 31:
 case 30:
 case 29:
 case 28:
 case 27:
 case 26:
 case 25:
 case 24:
  {
   $123 = $addr$0$in & 2047;
   $125 = $addr$0$in >>> 11 & 31;
   $126 = $this + 1312 + ($125 << 3) | 0;
   $130 = HEAPU8[(HEAP32[$126 >> 2] | 0) + $123 >> 0] | 0;
   $132 = $this + 6 | 0;
   $136 = HEAPU8[$132 >> 0] << 7 | $130 >>> 1;
   $137 = $136 & 255;
   HEAP8[$132 >> 0] = HEAPU8[($136 & 255) + ($this + 31) >> 0] | $130 & 1;
   switch ($23 + 232 & 255 | 0) {
   case 0:
    {
     HEAP8[$this + 1 >> 0] = $137;
     break;
    }
   case 1:
    {
     HEAP8[$this >> 0] = $137;
     break;
    }
   case 2:
    {
     HEAP8[$this + 2 + 1 >> 0] = $137;
     break;
    }
   case 3:
    {
     HEAP8[$this + 2 >> 0] = $137;
     break;
    }
   case 4:
    {
     HEAP8[$this + 4 + 1 >> 0] = $137;
     break;
    }
   case 5:
    {
     HEAP8[$this + 4 >> 0] = $137;
     break;
    }
   case 7:
    {
     HEAP8[$132 + 1 >> 0] = $137;
     break;
    }
   default:
    {}
   }
   if (!(HEAP8[$this + 1312 + ($125 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$126 >> 2] | 0) + $123 >> 0] = $137;
   $$0 = 23;
   return $$0 | 0;
  }
 case 39:
 case 38:
 case 37:
 case 36:
 case 35:
 case 34:
 case 33:
 case 32:
  {
   $158 = $addr$0$in & 2047;
   $160 = $addr$0$in >>> 11 & 31;
   $161 = $this + 1312 + ($160 << 3) | 0;
   $165 = HEAPU8[(HEAP32[$161 >> 2] | 0) + $158 >> 0] | 0;
   $166 = $165 << 1;
   $167 = $166 & 255;
   $174 = $this + 6 | 0;
   HEAP8[$174 >> 0] = HEAPU8[($166 & 254) + ($this + 31) >> 0] | $165 >>> 7;
   switch ($23 + 224 & 255 | 0) {
   case 0:
    {
     HEAP8[$this + 1 >> 0] = $167;
     break;
    }
   case 1:
    {
     HEAP8[$this >> 0] = $167;
     break;
    }
   case 2:
    {
     HEAP8[$this + 2 + 1 >> 0] = $167;
     break;
    }
   case 3:
    {
     HEAP8[$this + 2 >> 0] = $167;
     break;
    }
   case 4:
    {
     HEAP8[$this + 4 + 1 >> 0] = $167;
     break;
    }
   case 5:
    {
     HEAP8[$this + 4 >> 0] = $167;
     break;
    }
   case 7:
    {
     HEAP8[$174 + 1 >> 0] = $167;
     break;
    }
   default:
    {}
   }
   if (!(HEAP8[$this + 1312 + ($160 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$161 >> 2] | 0) + $158 >> 0] = $167;
   $$0 = 23;
   return $$0 | 0;
  }
 case 47:
 case 46:
 case 45:
 case 44:
 case 43:
 case 42:
 case 41:
 case 40:
  {
   $190 = $addr$0$in & 2047;
   $192 = $addr$0$in >>> 11 & 31;
   $193 = $this + 1312 + ($192 << 3) | 0;
   $197 = HEAPU8[(HEAP32[$193 >> 2] | 0) + $190 >> 0] | 0;
   $200 = $197 >>> 1 | $197 & 128;
   $201 = $200 & 255;
   $208 = $this + 6 | 0;
   HEAP8[$208 >> 0] = HEAPU8[$this + 31 + $200 >> 0] | $197 & 1;
   switch ($23 + 216 & 255 | 0) {
   case 0:
    {
     HEAP8[$this + 1 >> 0] = $201;
     break;
    }
   case 1:
    {
     HEAP8[$this >> 0] = $201;
     break;
    }
   case 2:
    {
     HEAP8[$this + 2 + 1 >> 0] = $201;
     break;
    }
   case 3:
    {
     HEAP8[$this + 2 >> 0] = $201;
     break;
    }
   case 4:
    {
     HEAP8[$this + 4 + 1 >> 0] = $201;
     break;
    }
   case 5:
    {
     HEAP8[$this + 4 >> 0] = $201;
     break;
    }
   case 7:
    {
     HEAP8[$208 + 1 >> 0] = $201;
     break;
    }
   default:
    {}
   }
   if (!(HEAP8[$this + 1312 + ($192 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$193 >> 2] | 0) + $190 >> 0] = $201;
   $$0 = 23;
   return $$0 | 0;
  }
 case 55:
 case 54:
 case 53:
 case 52:
 case 51:
 case 50:
 case 49:
 case 48:
  {
   $224 = $addr$0$in & 2047;
   $226 = $addr$0$in >>> 11 & 31;
   $227 = $this + 1312 + ($226 << 3) | 0;
   $231 = HEAPU8[(HEAP32[$227 >> 2] | 0) + $224 >> 0] | 0;
   $233 = $231 << 1 | 1;
   $234 = $233 & 255;
   $241 = $this + 6 | 0;
   HEAP8[$241 >> 0] = HEAPU8[($233 & 255) + ($this + 31) >> 0] | $231 >>> 7;
   switch ($23 + 208 & 255 | 0) {
   case 0:
    {
     HEAP8[$this + 1 >> 0] = $234;
     break;
    }
   case 1:
    {
     HEAP8[$this >> 0] = $234;
     break;
    }
   case 2:
    {
     HEAP8[$this + 2 + 1 >> 0] = $234;
     break;
    }
   case 3:
    {
     HEAP8[$this + 2 >> 0] = $234;
     break;
    }
   case 4:
    {
     HEAP8[$this + 4 + 1 >> 0] = $234;
     break;
    }
   case 5:
    {
     HEAP8[$this + 4 >> 0] = $234;
     break;
    }
   case 7:
    {
     HEAP8[$241 + 1 >> 0] = $234;
     break;
    }
   default:
    {}
   }
   if (!(HEAP8[$this + 1312 + ($226 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$227 >> 2] | 0) + $224 >> 0] = $234;
   $$0 = 23;
   return $$0 | 0;
  }
 case 63:
 case 62:
 case 61:
 case 60:
 case 59:
 case 58:
 case 57:
 case 56:
  {
   $257 = $addr$0$in & 2047;
   $259 = $addr$0$in >>> 11 & 31;
   $260 = $this + 1312 + ($259 << 3) | 0;
   $263 = HEAP8[(HEAP32[$260 >> 2] | 0) + $257 >> 0] | 0;
   $265 = ($263 & 255) >>> 1;
   $273 = $this + 6 | 0;
   HEAP8[$273 >> 0] = HEAPU8[($265 & 255) + ($this + 31) >> 0] | $263 & 1;
   switch ($23 + 200 & 255 | 0) {
   case 0:
    {
     HEAP8[$this + 1 >> 0] = $265;
     break;
    }
   case 1:
    {
     HEAP8[$this >> 0] = $265;
     break;
    }
   case 2:
    {
     HEAP8[$this + 2 + 1 >> 0] = $265;
     break;
    }
   case 3:
    {
     HEAP8[$this + 2 >> 0] = $265;
     break;
    }
   case 4:
    {
     HEAP8[$this + 4 + 1 >> 0] = $265;
     break;
    }
   case 5:
    {
     HEAP8[$this + 4 >> 0] = $265;
     break;
    }
   case 7:
    {
     HEAP8[$273 + 1 >> 0] = $265;
     break;
    }
   default:
    {}
   }
   if (!(HEAP8[$this + 1312 + ($259 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[(HEAP32[$260 >> 2] | 0) + $257 >> 0] = $265;
   $$0 = 23;
   return $$0 | 0;
  }
 case 126:
 case 118:
 case 110:
 case 102:
 case 94:
 case 86:
 case 78:
 case 70:
  {
   $295 = HEAP8[(HEAP32[$this + 1312 + (($addr$0$in >>> 11 & 31) << 3) >> 2] | 0) + ($addr$0$in & 2047) >> 0] | 0;
   $301 = $295 & (1 << ($23 >>> 3 & 7) & 255);
   if (!($301 << 24 >> 24)) $307 = 84; else $307 = $301 & 128 | 16;
   $308 = $this + 6 | 0;
   HEAP8[$308 >> 0] = $307 | $295 & 40 | HEAPU8[$308 >> 0] & 1;
   $$0 = 20;
   return $$0 | 0;
  }
 case 190:
 case 182:
 case 174:
 case 166:
 case 158:
 case 150:
 case 142:
 case 134:
  {
   $316 = $addr$0$in >>> 11 & 31;
   $319 = (HEAP32[$this + 1312 + ($316 << 3) >> 2] | 0) + ($addr$0$in & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($316 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[$319 >> 0] = HEAPU8[$319 >> 0] & (1 << ($23 >>> 3 & 7) ^ 255);
   $$0 = 23;
   return $$0 | 0;
  }
 case 254:
 case 246:
 case 238:
 case 230:
 case 222:
 case 214:
 case 206:
 case 198:
  {
   $333 = $addr$0$in >>> 11 & 31;
   $336 = (HEAP32[$this + 1312 + ($333 << 3) >> 2] | 0) + ($addr$0$in & 2047) | 0;
   if (!(HEAP8[$this + 1312 + ($333 << 3) + 4 >> 0] | 0)) {
    $$0 = 23;
    return $$0 | 0;
   }
   HEAP8[$336 >> 0] = HEAPU8[$336 >> 0] | 1 << ($23 >>> 3 & 7);
   $$0 = 23;
   return $$0 | 0;
  }
 default:
  {
   if (!(HEAP8[$this + 3634 >> 0] | 0)) {
    $$0 = 4;
    return $$0 | 0;
   }
   HEAP8[$this + 30 >> 0] = 1;
   HEAP16[$0 >> 1] = ($15 & 65535) + 65532;
   $$0 = 4;
   return $$0 | 0;
  }
 } while (0);
 return 0;
}

function ___intscan($f, $base, $pok, $0, $1) {
 $f = $f | 0;
 $base = $base | 0;
 $pok = $pok | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$115 = 0, $$116 = 0, $$base14 = 0, $$lcssa = 0, $$lcssa108 = 0, $$lcssa109 = 0, $$lcssa110 = 0, $$lcssa111 = 0, $$lcssa112 = 0, $$lcssa113 = 0, $100 = 0, $101 = 0, $108 = 0, $120 = 0, $121 = 0, $128 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $135 = 0, $136 = 0, $144 = 0, $149 = 0, $150 = 0, $152 = 0, $155 = 0, $157 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $185 = 0, $186 = 0, $187 = 0, $195 = 0, $201 = 0, $203 = 0, $204 = 0, $206 = 0, $208 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $222 = 0, $223 = 0, $224 = 0, $239 = 0, $25 = 0, $260 = 0, $262 = 0, $272 = 0, $281 = 0, $284 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $3 = 0, $37 = 0, $39 = 0, $4 = 0, $47 = 0, $51 = 0, $6 = 0, $67 = 0, $70 = 0, $71 = 0, $72 = 0, $83 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $91 = 0, $93 = 0, $99 = 0, $c$0 = 0, $c$1 = 0, $c$117 = 0, $c$2$be = 0, $c$2$be$lcssa = 0, $c$2$lcssa = 0, $c$3$be = 0, $c$3$lcssa = 0, $c$359 = 0, $c$4$be = 0, $c$4$be$lcssa = 0, $c$4$lcssa = 0, $c$5$be = 0, $c$6$be = 0, $c$6$be$lcssa = 0, $c$6$lcssa = 0, $c$7$be = 0, $c$742 = 0, $c$8 = 0, $c$9$be = 0, $neg$0 = 0, $neg$1 = 0, $x$070 = 0, $x$136 = 0, $x$254 = 0, label = 0;
 L1 : do if ($base >>> 0 > 36) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $286 = 0;
  $287 = 0;
 } else {
  $3 = $f + 4 | 0;
  $4 = $f + 100 | 0;
  do {
   $6 = HEAP32[$3 >> 2] | 0;
   if ($6 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $6 + 1;
    $13 = HEAPU8[$6 >> 0] | 0;
   } else $13 = ___shgetc($f) | 0;
  } while ((_isspace($13) | 0) != 0);
  $$lcssa113 = $13;
  L11 : do switch ($$lcssa113 | 0) {
  case 43:
  case 45:
   {
    $17 = (($$lcssa113 | 0) == 45) << 31 >> 31;
    $18 = HEAP32[$3 >> 2] | 0;
    if ($18 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $18 + 1;
     $c$0 = HEAPU8[$18 >> 0] | 0;
     $neg$0 = $17;
     break L11;
    } else {
     $c$0 = ___shgetc($f) | 0;
     $neg$0 = $17;
     break L11;
    }
    break;
   }
  default:
   {
    $c$0 = $$lcssa113;
    $neg$0 = 0;
   }
  } while (0);
  $25 = ($base | 0) == 0;
  do if (($base | 16 | 0) == 16 & ($c$0 | 0) == 48) {
   $29 = HEAP32[$3 >> 2] | 0;
   if ($29 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $29 + 1;
    $37 = HEAPU8[$29 >> 0] | 0;
   } else $37 = ___shgetc($f) | 0;
   if (($37 | 32 | 0) != 120) if ($25) {
    $$116 = 8;
    $c$117 = $37;
    label = 46;
    break;
   } else {
    $$1 = $base;
    $c$1 = $37;
    label = 32;
    break;
   }
   $39 = HEAP32[$3 >> 2] | 0;
   if ($39 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $39 + 1;
    $47 = HEAPU8[$39 >> 0] | 0;
   } else $47 = ___shgetc($f) | 0;
   if ((HEAPU8[143593 + $47 >> 0] | 0) > 15) {
    $51 = (HEAP32[$4 >> 2] | 0) == 0;
    if (!$51) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    if (!$pok) {
     ___shlim($f, 0);
     $286 = 0;
     $287 = 0;
     break L1;
    }
    if ($51) {
     $286 = 0;
     $287 = 0;
     break L1;
    }
    HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    $286 = 0;
    $287 = 0;
    break L1;
   } else {
    $$116 = 16;
    $c$117 = $47;
    label = 46;
   }
  } else {
   $$base14 = $25 ? 10 : $base;
   if ((HEAPU8[143593 + $c$0 >> 0] | 0) >>> 0 < $$base14 >>> 0) {
    $$1 = $$base14;
    $c$1 = $c$0;
    label = 32;
   } else {
    if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
    ___shlim($f, 0);
    HEAP32[(___errno_location() | 0) >> 2] = 22;
    $286 = 0;
    $287 = 0;
    break L1;
   }
  } while (0);
  if ((label | 0) == 32) if (($$1 | 0) == 10) {
   $67 = $c$1 + -48 | 0;
   if ($67 >>> 0 < 10) {
    $71 = $67;
    $x$070 = 0;
    while (1) {
     $70 = ($x$070 * 10 | 0) + $71 | 0;
     $72 = HEAP32[$3 >> 2] | 0;
     if ($72 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $72 + 1;
      $c$2$be = HEAPU8[$72 >> 0] | 0;
     } else $c$2$be = ___shgetc($f) | 0;
     $71 = $c$2$be + -48 | 0;
     if (!($71 >>> 0 < 10 & $70 >>> 0 < 429496729)) {
      $$lcssa112 = $70;
      $c$2$be$lcssa = $c$2$be;
      break;
     } else $x$070 = $70;
    }
    $288 = $$lcssa112;
    $289 = 0;
    $c$2$lcssa = $c$2$be$lcssa;
   } else {
    $288 = 0;
    $289 = 0;
    $c$2$lcssa = $c$1;
   }
   $83 = $c$2$lcssa + -48 | 0;
   if ($83 >>> 0 < 10) {
    $85 = $288;
    $86 = $289;
    $90 = $83;
    $c$359 = $c$2$lcssa;
    while (1) {
     $87 = ___muldi3($85 | 0, $86 | 0, 10, 0) | 0;
     $88 = tempRet0;
     $91 = (($90 | 0) < 0) << 31 >> 31;
     $93 = ~$91;
     if ($88 >>> 0 > $93 >>> 0 | ($88 | 0) == ($93 | 0) & $87 >>> 0 > ~$90 >>> 0) {
      $$lcssa = $90;
      $290 = $85;
      $291 = $86;
      $c$3$lcssa = $c$359;
      break;
     }
     $99 = _i64Add($87 | 0, $88 | 0, $90 | 0, $91 | 0) | 0;
     $100 = tempRet0;
     $101 = HEAP32[$3 >> 2] | 0;
     if ($101 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $101 + 1;
      $c$3$be = HEAPU8[$101 >> 0] | 0;
     } else $c$3$be = ___shgetc($f) | 0;
     $108 = $c$3$be + -48 | 0;
     if ($108 >>> 0 < 10 & ($100 >>> 0 < 429496729 | ($100 | 0) == 429496729 & $99 >>> 0 < 2576980378)) {
      $85 = $99;
      $86 = $100;
      $90 = $108;
      $c$359 = $c$3$be;
     } else {
      $$lcssa = $108;
      $290 = $99;
      $291 = $100;
      $c$3$lcssa = $c$3$be;
      break;
     }
    }
    if ($$lcssa >>> 0 > 9) {
     $260 = $291;
     $262 = $290;
     $neg$1 = $neg$0;
    } else {
     $$115 = 10;
     $292 = $290;
     $293 = $291;
     $c$8 = $c$3$lcssa;
     label = 72;
    }
   } else {
    $260 = $289;
    $262 = $288;
    $neg$1 = $neg$0;
   }
  } else {
   $$116 = $$1;
   $c$117 = $c$1;
   label = 46;
  }
  L63 : do if ((label | 0) == 46) {
   if (!($$116 + -1 & $$116)) {
    $128 = HEAP8[143849 + (($$116 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    $130 = HEAP8[143593 + $c$117 >> 0] | 0;
    $131 = $130 & 255;
    if ($131 >>> 0 < $$116 >>> 0) {
     $135 = $131;
     $x$136 = 0;
     while (1) {
      $134 = $135 | $x$136 << $128;
      $136 = HEAP32[$3 >> 2] | 0;
      if ($136 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $136 + 1;
       $c$4$be = HEAPU8[$136 >> 0] | 0;
      } else $c$4$be = ___shgetc($f) | 0;
      $144 = HEAP8[143593 + $c$4$be >> 0] | 0;
      $135 = $144 & 255;
      if (!($134 >>> 0 < 134217728 & $135 >>> 0 < $$116 >>> 0)) {
       $$lcssa108 = $134;
       $$lcssa109 = $144;
       $c$4$be$lcssa = $c$4$be;
       break;
      } else $x$136 = $134;
     }
     $152 = $$lcssa109;
     $155 = 0;
     $157 = $$lcssa108;
     $c$4$lcssa = $c$4$be$lcssa;
    } else {
     $152 = $130;
     $155 = 0;
     $157 = 0;
     $c$4$lcssa = $c$117;
    }
    $149 = _bitshift64Lshr(-1, -1, $128 | 0) | 0;
    $150 = tempRet0;
    if (($152 & 255) >>> 0 >= $$116 >>> 0 | ($155 >>> 0 > $150 >>> 0 | ($155 | 0) == ($150 | 0) & $157 >>> 0 > $149 >>> 0)) {
     $$115 = $$116;
     $292 = $157;
     $293 = $155;
     $c$8 = $c$4$lcssa;
     label = 72;
     break;
    } else {
     $161 = $157;
     $162 = $155;
     $166 = $152;
    }
    while (1) {
     $163 = _bitshift64Shl($161 | 0, $162 | 0, $128 | 0) | 0;
     $164 = tempRet0;
     $167 = $166 & 255 | $163;
     $168 = HEAP32[$3 >> 2] | 0;
     if ($168 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $168 + 1;
      $c$5$be = HEAPU8[$168 >> 0] | 0;
     } else $c$5$be = ___shgetc($f) | 0;
     $166 = HEAP8[143593 + $c$5$be >> 0] | 0;
     if (($166 & 255) >>> 0 >= $$116 >>> 0 | ($164 >>> 0 > $150 >>> 0 | ($164 | 0) == ($150 | 0) & $167 >>> 0 > $149 >>> 0)) {
      $$115 = $$116;
      $292 = $167;
      $293 = $164;
      $c$8 = $c$5$be;
      label = 72;
      break L63;
     } else {
      $161 = $167;
      $162 = $164;
     }
    }
   }
   $120 = HEAP8[143593 + $c$117 >> 0] | 0;
   $121 = $120 & 255;
   if ($121 >>> 0 < $$116 >>> 0) {
    $186 = $121;
    $x$254 = 0;
    while (1) {
     $185 = $186 + (Math_imul($x$254, $$116) | 0) | 0;
     $187 = HEAP32[$3 >> 2] | 0;
     if ($187 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $187 + 1;
      $c$6$be = HEAPU8[$187 >> 0] | 0;
     } else $c$6$be = ___shgetc($f) | 0;
     $195 = HEAP8[143593 + $c$6$be >> 0] | 0;
     $186 = $195 & 255;
     if (!($185 >>> 0 < 119304647 & $186 >>> 0 < $$116 >>> 0)) {
      $$lcssa110 = $185;
      $$lcssa111 = $195;
      $c$6$be$lcssa = $c$6$be;
      break;
     } else $x$254 = $185;
    }
    $201 = $$lcssa111;
    $294 = $$lcssa110;
    $295 = 0;
    $c$6$lcssa = $c$6$be$lcssa;
   } else {
    $201 = $120;
    $294 = 0;
    $295 = 0;
    $c$6$lcssa = $c$117;
   }
   if (($201 & 255) >>> 0 < $$116 >>> 0) {
    $203 = ___udivdi3(-1, -1, $$116 | 0, 0) | 0;
    $204 = tempRet0;
    $206 = $295;
    $208 = $294;
    $215 = $201;
    $c$742 = $c$6$lcssa;
    while (1) {
     if ($206 >>> 0 > $204 >>> 0 | ($206 | 0) == ($204 | 0) & $208 >>> 0 > $203 >>> 0) {
      $$115 = $$116;
      $292 = $208;
      $293 = $206;
      $c$8 = $c$742;
      label = 72;
      break L63;
     }
     $212 = ___muldi3($208 | 0, $206 | 0, $$116 | 0, 0) | 0;
     $213 = tempRet0;
     $214 = $215 & 255;
     if ($213 >>> 0 > 4294967295 | ($213 | 0) == -1 & $212 >>> 0 > ~$214 >>> 0) {
      $$115 = $$116;
      $292 = $208;
      $293 = $206;
      $c$8 = $c$742;
      label = 72;
      break L63;
     }
     $222 = _i64Add($214 | 0, 0, $212 | 0, $213 | 0) | 0;
     $223 = tempRet0;
     $224 = HEAP32[$3 >> 2] | 0;
     if ($224 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$3 >> 2] = $224 + 1;
      $c$7$be = HEAPU8[$224 >> 0] | 0;
     } else $c$7$be = ___shgetc($f) | 0;
     $215 = HEAP8[143593 + $c$7$be >> 0] | 0;
     if (($215 & 255) >>> 0 >= $$116 >>> 0) {
      $$115 = $$116;
      $292 = $222;
      $293 = $223;
      $c$8 = $c$7$be;
      label = 72;
      break;
     } else {
      $206 = $223;
      $208 = $222;
      $c$742 = $c$7$be;
     }
    }
   } else {
    $$115 = $$116;
    $292 = $294;
    $293 = $295;
    $c$8 = $c$6$lcssa;
    label = 72;
   }
  } while (0);
  if ((label | 0) == 72) if ((HEAPU8[143593 + $c$8 >> 0] | 0) >>> 0 < $$115 >>> 0) {
   do {
    $239 = HEAP32[$3 >> 2] | 0;
    if ($239 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $239 + 1;
     $c$9$be = HEAPU8[$239 >> 0] | 0;
    } else $c$9$be = ___shgetc($f) | 0;
   } while ((HEAPU8[143593 + $c$9$be >> 0] | 0) >>> 0 < $$115 >>> 0);
   HEAP32[(___errno_location() | 0) >> 2] = 34;
   $260 = $1;
   $262 = $0;
   $neg$1 = ($0 & 1 | 0) == 0 & 0 == 0 ? $neg$0 : 0;
  } else {
   $260 = $293;
   $262 = $292;
   $neg$1 = $neg$0;
  }
  if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
  if (!($260 >>> 0 < $1 >>> 0 | ($260 | 0) == ($1 | 0) & $262 >>> 0 < $0 >>> 0)) {
   if (!(($0 & 1 | 0) != 0 | 0 != 0 | ($neg$1 | 0) != 0)) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $272 = _i64Add($0 | 0, $1 | 0, -1, -1) | 0;
    $286 = tempRet0;
    $287 = $272;
    break;
   }
   if ($260 >>> 0 > $1 >>> 0 | ($260 | 0) == ($1 | 0) & $262 >>> 0 > $0 >>> 0) {
    HEAP32[(___errno_location() | 0) >> 2] = 34;
    $286 = $1;
    $287 = $0;
    break;
   }
  }
  $281 = (($neg$1 | 0) < 0) << 31 >> 31;
  $284 = _i64Subtract($262 ^ $neg$1 | 0, $260 ^ $281 | 0, $neg$1 | 0, $281 | 0) | 0;
  $286 = tempRet0;
  $287 = $284;
 } while (0);
 tempRet0 = $286;
 return $287 | 0;
}

function __ZN5Oryol5_priv8meshBase5ClearEv($this) {
 $this = $this | 0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $100 = 0, $107 = 0, $11 = 0, $114 = 0, $121 = 0, $128 = 0, $13 = 0, $135 = 0, $14 = 0, $142 = 0, $149 = 0, $156 = 0, $16 = 0, $163 = 0, $169 = 0, $17 = 0, $171 = 0, $178 = 0, $179 = 0, $184 = 0, $185 = 0, $189 = 0, $19 = 0, $191 = 0, $192 = 0, $193 = 0, $195 = 0, $197 = 0, $198 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $203 = 0, $204 = 0, $206 = 0, $207 = 0, $209 = 0, $210 = 0, $212 = 0, $213 = 0, $215 = 0, $216 = 0, $218 = 0, $219 = 0, $22 = 0, $221 = 0, $222 = 0, $224 = 0, $225 = 0, $227 = 0, $228 = 0, $23 = 0, $230 = 0, $231 = 0, $233 = 0, $234 = 0, $236 = 0, $237 = 0, $239 = 0, $240 = 0, $242 = 0, $249 = 0, $25 = 0, $256 = 0, $26 = 0, $263 = 0, $270 = 0, $277 = 0, $28 = 0, $284 = 0, $29 = 0, $291 = 0, $298 = 0, $3 = 0, $305 = 0, $31 = 0, $312 = 0, $319 = 0, $32 = 0, $326 = 0, $333 = 0, $34 = 0, $340 = 0, $347 = 0, $35 = 0, $353 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $364 = 0, $366 = 0, $37 = 0, $371 = 0, $373 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $49 = 0, $50 = 0, $52 = 0, $53 = 0, $55 = 0, $56 = 0, $58 = 0, $6 = 0, $65 = 0, $7 = 0, $72 = 0, $79 = 0, $8 = 0, $86 = 0, $9 = 0, $93 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $0 = sp;
 $1 = sp + 192 | 0;
 $2 = $1 + 4 | 0;
 dest = $1;
 stop = dest + 76 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN5Oryol12VertexLayoutC2Ev($2);
 $3 = $1 + 72 | 0;
 HEAP32[$3 >> 2] = -1;
 HEAP32[$this + 208 >> 2] = HEAP32[$1 >> 2];
 $6 = $this + 212 | 0;
 $7 = HEAP32[$2 >> 2] | 0;
 $8 = $7 & 65535;
 HEAP8[$6 >> 0] = $8;
 HEAP8[$6 + 1 >> 0] = $8 >> 8;
 $9 = $this + 214 | 0;
 $11 = $7 >>> 16 & 65535;
 HEAP8[$9 >> 0] = $11;
 HEAP8[$9 + 1 >> 0] = $11 >> 8;
 $13 = $this + 216 | 0;
 $14 = HEAP16[$1 + 8 >> 1] | 0;
 HEAP8[$13 >> 0] = $14;
 HEAP8[$13 + 1 >> 0] = $14 >> 8;
 $16 = $this + 218 | 0;
 $17 = HEAP16[$1 + 10 >> 1] | 0;
 HEAP8[$16 >> 0] = $17;
 HEAP8[$16 + 1 >> 0] = $17 >> 8;
 $19 = $this + 220 | 0;
 $20 = HEAP16[$1 + 12 >> 1] | 0;
 HEAP8[$19 >> 0] = $20;
 HEAP8[$19 + 1 >> 0] = $20 >> 8;
 $22 = $this + 222 | 0;
 $23 = HEAP16[$1 + 14 >> 1] | 0;
 HEAP8[$22 >> 0] = $23;
 HEAP8[$22 + 1 >> 0] = $23 >> 8;
 $25 = $this + 224 | 0;
 $26 = HEAP16[$1 + 16 >> 1] | 0;
 HEAP8[$25 >> 0] = $26;
 HEAP8[$25 + 1 >> 0] = $26 >> 8;
 $28 = $this + 226 | 0;
 $29 = HEAP16[$1 + 18 >> 1] | 0;
 HEAP8[$28 >> 0] = $29;
 HEAP8[$28 + 1 >> 0] = $29 >> 8;
 $31 = $this + 228 | 0;
 $32 = HEAP16[$1 + 20 >> 1] | 0;
 HEAP8[$31 >> 0] = $32;
 HEAP8[$31 + 1 >> 0] = $32 >> 8;
 $34 = $this + 230 | 0;
 $35 = HEAP16[$1 + 22 >> 1] | 0;
 HEAP8[$34 >> 0] = $35;
 HEAP8[$34 + 1 >> 0] = $35 >> 8;
 $37 = $this + 232 | 0;
 $38 = HEAP16[$1 + 24 >> 1] | 0;
 HEAP8[$37 >> 0] = $38;
 HEAP8[$37 + 1 >> 0] = $38 >> 8;
 $40 = $this + 234 | 0;
 $41 = HEAP16[$1 + 26 >> 1] | 0;
 HEAP8[$40 >> 0] = $41;
 HEAP8[$40 + 1 >> 0] = $41 >> 8;
 $43 = $this + 236 | 0;
 $44 = HEAP16[$1 + 28 >> 1] | 0;
 HEAP8[$43 >> 0] = $44;
 HEAP8[$43 + 1 >> 0] = $44 >> 8;
 $46 = $this + 238 | 0;
 $47 = HEAP16[$1 + 30 >> 1] | 0;
 HEAP8[$46 >> 0] = $47;
 HEAP8[$46 + 1 >> 0] = $47 >> 8;
 $49 = $this + 240 | 0;
 $50 = HEAP16[$1 + 32 >> 1] | 0;
 HEAP8[$49 >> 0] = $50;
 HEAP8[$49 + 1 >> 0] = $50 >> 8;
 $52 = $this + 242 | 0;
 $53 = HEAP16[$1 + 34 >> 1] | 0;
 HEAP8[$52 >> 0] = $53;
 HEAP8[$52 + 1 >> 0] = $53 >> 8;
 $55 = $this + 244 | 0;
 $56 = HEAP16[$1 + 36 >> 1] | 0;
 HEAP8[$55 >> 0] = $56;
 HEAP8[$55 + 1 >> 0] = $56 >> 8;
 $58 = HEAP16[$1 + 38 >> 1] | 0;
 HEAP8[$this + 246 >> 0] = $58;
 HEAP8[$this + 247 >> 0] = ($58 & 65535) >>> 8;
 $65 = HEAP16[$1 + 40 >> 1] | 0;
 HEAP8[$this + 248 >> 0] = $65;
 HEAP8[$this + 249 >> 0] = ($65 & 65535) >>> 8;
 $72 = HEAP16[$1 + 42 >> 1] | 0;
 HEAP8[$this + 250 >> 0] = $72;
 HEAP8[$this + 251 >> 0] = ($72 & 65535) >>> 8;
 $79 = HEAP16[$1 + 44 >> 1] | 0;
 HEAP8[$this + 252 >> 0] = $79;
 HEAP8[$this + 253 >> 0] = ($79 & 65535) >>> 8;
 $86 = HEAP16[$1 + 46 >> 1] | 0;
 HEAP8[$this + 254 >> 0] = $86;
 HEAP8[$this + 255 >> 0] = ($86 & 65535) >>> 8;
 $93 = HEAP16[$1 + 48 >> 1] | 0;
 HEAP8[$this + 256 >> 0] = $93;
 HEAP8[$this + 257 >> 0] = ($93 & 65535) >>> 8;
 $100 = HEAP16[$1 + 50 >> 1] | 0;
 HEAP8[$this + 258 >> 0] = $100;
 HEAP8[$this + 259 >> 0] = ($100 & 65535) >>> 8;
 $107 = HEAP16[$1 + 52 >> 1] | 0;
 HEAP8[$this + 260 >> 0] = $107;
 HEAP8[$this + 261 >> 0] = ($107 & 65535) >>> 8;
 $114 = HEAP16[$1 + 54 >> 1] | 0;
 HEAP8[$this + 262 >> 0] = $114;
 HEAP8[$this + 263 >> 0] = ($114 & 65535) >>> 8;
 $121 = HEAP16[$1 + 56 >> 1] | 0;
 HEAP8[$this + 264 >> 0] = $121;
 HEAP8[$this + 265 >> 0] = ($121 & 65535) >>> 8;
 $128 = HEAP16[$1 + 58 >> 1] | 0;
 HEAP8[$this + 266 >> 0] = $128;
 HEAP8[$this + 267 >> 0] = ($128 & 65535) >>> 8;
 $135 = HEAP16[$1 + 60 >> 1] | 0;
 HEAP8[$this + 268 >> 0] = $135;
 HEAP8[$this + 269 >> 0] = ($135 & 65535) >>> 8;
 $142 = HEAP16[$1 + 62 >> 1] | 0;
 HEAP8[$this + 270 >> 0] = $142;
 HEAP8[$this + 271 >> 0] = ($142 & 65535) >>> 8;
 $149 = HEAP16[$1 + 64 >> 1] | 0;
 HEAP8[$this + 272 >> 0] = $149;
 HEAP8[$this + 273 >> 0] = ($149 & 65535) >>> 8;
 $156 = HEAP16[$1 + 66 >> 1] | 0;
 HEAP8[$this + 274 >> 0] = $156;
 HEAP8[$this + 275 >> 0] = ($156 & 65535) >>> 8;
 $163 = HEAP16[$1 + 68 >> 1] | 0;
 HEAP8[$this + 276 >> 0] = $163;
 HEAP8[$this + 277 >> 0] = ($163 & 65535) >>> 8;
 $169 = $this + 278 | 0;
 $171 = HEAP16[$1 + 70 >> 1] | 0;
 HEAP8[$169 >> 0] = $171;
 HEAP8[$169 + 1 >> 0] = $171 >> 8;
 HEAP32[$this + 280 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$this + 284 >> 2] = 0;
 HEAP32[$this + 288 >> 2] = -1;
 HEAP32[$this + 292 >> 2] = -1;
 dest = $this + 296 | 0;
 stop = dest + 68 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $178 = $this + 16 | 0;
 __ZN5Oryol9MeshSetupC2Ev($0);
 $179 = $0;
 $184 = HEAP32[$179 + 4 >> 2] | 0;
 $185 = $178;
 HEAP32[$185 >> 2] = HEAP32[$179 >> 2];
 HEAP32[$185 + 4 >> 2] = $184;
 $189 = $this + 24 | 0;
 $191 = HEAP32[$0 + 8 >> 2] | 0;
 $192 = $191 & 65535;
 HEAP8[$189 >> 0] = $192;
 HEAP8[$189 + 1 >> 0] = $192 >> 8;
 $193 = $this + 26 | 0;
 $195 = $191 >>> 16 & 65535;
 HEAP8[$193 >> 0] = $195;
 HEAP8[$193 + 1 >> 0] = $195 >> 8;
 $197 = $this + 28 | 0;
 $198 = HEAP16[$0 + 12 >> 1] | 0;
 HEAP8[$197 >> 0] = $198;
 HEAP8[$197 + 1 >> 0] = $198 >> 8;
 $200 = $this + 30 | 0;
 $201 = HEAP16[$0 + 14 >> 1] | 0;
 HEAP8[$200 >> 0] = $201;
 HEAP8[$200 + 1 >> 0] = $201 >> 8;
 $203 = $this + 32 | 0;
 $204 = HEAP16[$0 + 16 >> 1] | 0;
 HEAP8[$203 >> 0] = $204;
 HEAP8[$203 + 1 >> 0] = $204 >> 8;
 $206 = $this + 34 | 0;
 $207 = HEAP16[$0 + 18 >> 1] | 0;
 HEAP8[$206 >> 0] = $207;
 HEAP8[$206 + 1 >> 0] = $207 >> 8;
 $209 = $this + 36 | 0;
 $210 = HEAP16[$0 + 20 >> 1] | 0;
 HEAP8[$209 >> 0] = $210;
 HEAP8[$209 + 1 >> 0] = $210 >> 8;
 $212 = $this + 38 | 0;
 $213 = HEAP16[$0 + 22 >> 1] | 0;
 HEAP8[$212 >> 0] = $213;
 HEAP8[$212 + 1 >> 0] = $213 >> 8;
 $215 = $this + 40 | 0;
 $216 = HEAP16[$0 + 24 >> 1] | 0;
 HEAP8[$215 >> 0] = $216;
 HEAP8[$215 + 1 >> 0] = $216 >> 8;
 $218 = $this + 42 | 0;
 $219 = HEAP16[$0 + 26 >> 1] | 0;
 HEAP8[$218 >> 0] = $219;
 HEAP8[$218 + 1 >> 0] = $219 >> 8;
 $221 = $this + 44 | 0;
 $222 = HEAP16[$0 + 28 >> 1] | 0;
 HEAP8[$221 >> 0] = $222;
 HEAP8[$221 + 1 >> 0] = $222 >> 8;
 $224 = $this + 46 | 0;
 $225 = HEAP16[$0 + 30 >> 1] | 0;
 HEAP8[$224 >> 0] = $225;
 HEAP8[$224 + 1 >> 0] = $225 >> 8;
 $227 = $this + 48 | 0;
 $228 = HEAP16[$0 + 32 >> 1] | 0;
 HEAP8[$227 >> 0] = $228;
 HEAP8[$227 + 1 >> 0] = $228 >> 8;
 $230 = $this + 50 | 0;
 $231 = HEAP16[$0 + 34 >> 1] | 0;
 HEAP8[$230 >> 0] = $231;
 HEAP8[$230 + 1 >> 0] = $231 >> 8;
 $233 = $this + 52 | 0;
 $234 = HEAP16[$0 + 36 >> 1] | 0;
 HEAP8[$233 >> 0] = $234;
 HEAP8[$233 + 1 >> 0] = $234 >> 8;
 $236 = $this + 54 | 0;
 $237 = HEAP16[$0 + 38 >> 1] | 0;
 HEAP8[$236 >> 0] = $237;
 HEAP8[$236 + 1 >> 0] = $237 >> 8;
 $239 = $this + 56 | 0;
 $240 = HEAP16[$0 + 40 >> 1] | 0;
 HEAP8[$239 >> 0] = $240;
 HEAP8[$239 + 1 >> 0] = $240 >> 8;
 $242 = HEAP16[$0 + 42 >> 1] | 0;
 HEAP8[$this + 58 >> 0] = $242;
 HEAP8[$this + 59 >> 0] = ($242 & 65535) >>> 8;
 $249 = HEAP16[$0 + 44 >> 1] | 0;
 HEAP8[$this + 60 >> 0] = $249;
 HEAP8[$this + 61 >> 0] = ($249 & 65535) >>> 8;
 $256 = HEAP16[$0 + 46 >> 1] | 0;
 HEAP8[$this + 62 >> 0] = $256;
 HEAP8[$this + 63 >> 0] = ($256 & 65535) >>> 8;
 $263 = HEAP16[$0 + 48 >> 1] | 0;
 HEAP8[$this + 64 >> 0] = $263;
 HEAP8[$this + 65 >> 0] = ($263 & 65535) >>> 8;
 $270 = HEAP16[$0 + 50 >> 1] | 0;
 HEAP8[$this + 66 >> 0] = $270;
 HEAP8[$this + 67 >> 0] = ($270 & 65535) >>> 8;
 $277 = HEAP16[$0 + 52 >> 1] | 0;
 HEAP8[$this + 68 >> 0] = $277;
 HEAP8[$this + 69 >> 0] = ($277 & 65535) >>> 8;
 $284 = HEAP16[$0 + 54 >> 1] | 0;
 HEAP8[$this + 70 >> 0] = $284;
 HEAP8[$this + 71 >> 0] = ($284 & 65535) >>> 8;
 $291 = HEAP16[$0 + 56 >> 1] | 0;
 HEAP8[$this + 72 >> 0] = $291;
 HEAP8[$this + 73 >> 0] = ($291 & 65535) >>> 8;
 $298 = HEAP16[$0 + 58 >> 1] | 0;
 HEAP8[$this + 74 >> 0] = $298;
 HEAP8[$this + 75 >> 0] = ($298 & 65535) >>> 8;
 $305 = HEAP16[$0 + 60 >> 1] | 0;
 HEAP8[$this + 76 >> 0] = $305;
 HEAP8[$this + 77 >> 0] = ($305 & 65535) >>> 8;
 $312 = HEAP16[$0 + 62 >> 1] | 0;
 HEAP8[$this + 78 >> 0] = $312;
 HEAP8[$this + 79 >> 0] = ($312 & 65535) >>> 8;
 $319 = HEAP16[$0 + 64 >> 1] | 0;
 HEAP8[$this + 80 >> 0] = $319;
 HEAP8[$this + 81 >> 0] = ($319 & 65535) >>> 8;
 $326 = HEAP16[$0 + 66 >> 1] | 0;
 HEAP8[$this + 82 >> 0] = $326;
 HEAP8[$this + 83 >> 0] = ($326 & 65535) >>> 8;
 $333 = HEAP16[$0 + 68 >> 1] | 0;
 HEAP8[$this + 84 >> 0] = $333;
 HEAP8[$this + 85 >> 0] = ($333 & 65535) >>> 8;
 $340 = HEAP16[$0 + 70 >> 1] | 0;
 HEAP8[$this + 86 >> 0] = $340;
 HEAP8[$this + 87 >> 0] = ($340 & 65535) >>> 8;
 $347 = HEAP16[$0 + 72 >> 1] | 0;
 HEAP8[$this + 88 >> 0] = $347;
 HEAP8[$this + 89 >> 0] = ($347 & 65535) >>> 8;
 $353 = $this + 90 | 0;
 $355 = HEAP16[$0 + 74 >> 1] | 0;
 HEAP8[$353 >> 0] = $355;
 HEAP8[$353 + 1 >> 0] = $355 >> 8;
 $356 = $this + 92 | 0;
 $357 = $0 + 76 | 0;
 HEAP32[$356 >> 2] = HEAP32[$357 >> 2];
 HEAP32[$356 + 4 >> 2] = HEAP32[$357 + 4 >> 2];
 HEAP32[$356 + 8 >> 2] = HEAP32[$357 + 8 >> 2];
 HEAP8[$356 + 12 >> 0] = HEAP8[$357 + 12 >> 0] | 0;
 $358 = $this + 108 | 0;
 if (($0 | 0) == ($178 | 0)) {
  $$sink$i = HEAP32[$0 + 96 >> 2] | 0;
  $377 = $this + 112 | 0;
  HEAP32[$377 >> 2] = $$sink$i;
  $378 = $this + 128 | 0;
  $379 = $0 + 112 | 0;
  dest = $378;
  src = $379;
  stop = dest + 76 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP8[$378 + 76 >> 0] = HEAP8[$379 + 76 >> 0] | 0;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$358 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($358, $0 + 92 | 0);
  $364 = HEAP32[$0 + 96 >> 2] | 0;
  $366 = $0 + 104 | 0;
  $371 = HEAP32[$366 + 4 >> 2] | 0;
  $373 = $this + 120 | 0;
  HEAP32[$373 >> 2] = HEAP32[$366 >> 2];
  HEAP32[$373 + 4 >> 2] = $371;
  $$sink$i = $364;
  $377 = $this + 112 | 0;
  HEAP32[$377 >> 2] = $$sink$i;
  $378 = $this + 128 | 0;
  $379 = $0 + 112 | 0;
  dest = $378;
  src = $379;
  stop = dest + 76 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP8[$378 + 76 >> 0] = HEAP8[$379 + 76 >> 0] | 0;
  STACKTOP = sp;
  return;
 }
}

function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $$1 = 0, $$14 = 0, $$2 = 0, $$lcssa = 0, $$pre$phi22Z2D = 0, $$pre$phi24Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $10 = 0, $100 = 0, $107 = 0, $109 = 0, $11 = 0, $110 = 0, $116 = 0, $124 = 0, $129 = 0, $130 = 0, $133 = 0, $135 = 0, $137 = 0, $15 = 0, $150 = 0, $155 = 0, $157 = 0, $160 = 0, $162 = 0, $165 = 0, $168 = 0, $169 = 0, $170 = 0, $172 = 0, $174 = 0, $175 = 0, $177 = 0, $178 = 0, $18 = 0, $183 = 0, $184 = 0, $193 = 0, $198 = 0, $2 = 0, $20 = 0, $201 = 0, $202 = 0, $208 = 0, $22 = 0, $223 = 0, $226 = 0, $227 = 0, $228 = 0, $232 = 0, $233 = 0, $239 = 0, $244 = 0, $245 = 0, $248 = 0, $250 = 0, $253 = 0, $258 = 0, $264 = 0, $268 = 0, $269 = 0, $287 = 0, $289 = 0, $296 = 0, $297 = 0, $298 = 0, $35 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $57 = 0, $59 = 0, $60 = 0, $62 = 0, $63 = 0, $68 = 0, $69 = 0, $78 = 0, $83 = 0, $86 = 0, $87 = 0, $9 = 0, $93 = 0, $99 = 0, $F17$0 = 0, $I20$0 = 0, $K21$0 = 0, $R$1 = 0, $R$1$lcssa = 0, $R$3 = 0, $R7$1 = 0, $R7$1$lcssa = 0, $R7$3 = 0, $RP$1 = 0, $RP$1$lcssa = 0, $RP9$1 = 0, $RP9$1$lcssa = 0, $T$0 = 0, $T$0$lcssa = 0, $T$0$lcssa30 = 0, label = 0;
 $0 = $p + $psize | 0;
 $2 = HEAP32[$p + 4 >> 2] | 0;
 do if (!($2 & 1)) {
  $5 = HEAP32[$p >> 2] | 0;
  if (!($2 & 3)) return;
  $9 = $p + (0 - $5) | 0;
  $10 = $5 + $psize | 0;
  $11 = HEAP32[40711] | 0;
  if ($9 >>> 0 < $11 >>> 0) _abort();
  if (($9 | 0) == (HEAP32[40712] | 0)) {
   $99 = $0 + 4 | 0;
   $100 = HEAP32[$99 >> 2] | 0;
   if (($100 & 3 | 0) != 3) {
    $$1 = $9;
    $$14 = $10;
    break;
   }
   HEAP32[40709] = $10;
   HEAP32[$99 >> 2] = $100 & -2;
   HEAP32[$9 + 4 >> 2] = $10 | 1;
   HEAP32[$9 + $10 >> 2] = $10;
   return;
  }
  $15 = $5 >>> 3;
  if ($5 >>> 0 < 256) {
   $18 = HEAP32[$9 + 8 >> 2] | 0;
   $20 = HEAP32[$9 + 12 >> 2] | 0;
   $22 = 162868 + ($15 << 1 << 2) | 0;
   if (($18 | 0) != ($22 | 0)) {
    if ($18 >>> 0 < $11 >>> 0) _abort();
    if ((HEAP32[$18 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($20 | 0) == ($18 | 0)) {
    HEAP32[40707] = HEAP32[40707] & ~(1 << $15);
    $$1 = $9;
    $$14 = $10;
    break;
   }
   if (($20 | 0) == ($22 | 0)) $$pre$phi24Z2D = $20 + 8 | 0; else {
    if ($20 >>> 0 < $11 >>> 0) _abort();
    $35 = $20 + 8 | 0;
    if ((HEAP32[$35 >> 2] | 0) == ($9 | 0)) $$pre$phi24Z2D = $35; else _abort();
   }
   HEAP32[$18 + 12 >> 2] = $20;
   HEAP32[$$pre$phi24Z2D >> 2] = $18;
   $$1 = $9;
   $$14 = $10;
   break;
  }
  $40 = HEAP32[$9 + 24 >> 2] | 0;
  $42 = HEAP32[$9 + 12 >> 2] | 0;
  do if (($42 | 0) == ($9 | 0)) {
   $53 = $9 + 16 | 0;
   $54 = $53 + 4 | 0;
   $55 = HEAP32[$54 >> 2] | 0;
   if (!$55) {
    $57 = HEAP32[$53 >> 2] | 0;
    if (!$57) {
     $R$3 = 0;
     break;
    } else {
     $R$1 = $57;
     $RP$1 = $53;
    }
   } else {
    $R$1 = $55;
    $RP$1 = $54;
   }
   while (1) {
    $59 = $R$1 + 20 | 0;
    $60 = HEAP32[$59 >> 2] | 0;
    if ($60 | 0) {
     $R$1 = $60;
     $RP$1 = $59;
     continue;
    }
    $62 = $R$1 + 16 | 0;
    $63 = HEAP32[$62 >> 2] | 0;
    if (!$63) {
     $R$1$lcssa = $R$1;
     $RP$1$lcssa = $RP$1;
     break;
    } else {
     $R$1 = $63;
     $RP$1 = $62;
    }
   }
   if ($RP$1$lcssa >>> 0 < $11 >>> 0) _abort(); else {
    HEAP32[$RP$1$lcssa >> 2] = 0;
    $R$3 = $R$1$lcssa;
    break;
   }
  } else {
   $45 = HEAP32[$9 + 8 >> 2] | 0;
   if ($45 >>> 0 < $11 >>> 0) _abort();
   $47 = $45 + 12 | 0;
   if ((HEAP32[$47 >> 2] | 0) != ($9 | 0)) _abort();
   $50 = $42 + 8 | 0;
   if ((HEAP32[$50 >> 2] | 0) == ($9 | 0)) {
    HEAP32[$47 >> 2] = $42;
    HEAP32[$50 >> 2] = $45;
    $R$3 = $42;
    break;
   } else _abort();
  } while (0);
  if (!$40) {
   $$1 = $9;
   $$14 = $10;
  } else {
   $68 = HEAP32[$9 + 28 >> 2] | 0;
   $69 = 163132 + ($68 << 2) | 0;
   if (($9 | 0) == (HEAP32[$69 >> 2] | 0)) {
    HEAP32[$69 >> 2] = $R$3;
    if (!$R$3) {
     HEAP32[40708] = HEAP32[40708] & ~(1 << $68);
     $$1 = $9;
     $$14 = $10;
     break;
    }
   } else {
    if ($40 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
    $78 = $40 + 16 | 0;
    if ((HEAP32[$78 >> 2] | 0) == ($9 | 0)) HEAP32[$78 >> 2] = $R$3; else HEAP32[$40 + 20 >> 2] = $R$3;
    if (!$R$3) {
     $$1 = $9;
     $$14 = $10;
     break;
    }
   }
   $83 = HEAP32[40711] | 0;
   if ($R$3 >>> 0 < $83 >>> 0) _abort();
   HEAP32[$R$3 + 24 >> 2] = $40;
   $86 = $9 + 16 | 0;
   $87 = HEAP32[$86 >> 2] | 0;
   do if ($87 | 0) if ($87 >>> 0 < $83 >>> 0) _abort(); else {
    HEAP32[$R$3 + 16 >> 2] = $87;
    HEAP32[$87 + 24 >> 2] = $R$3;
    break;
   } while (0);
   $93 = HEAP32[$86 + 4 >> 2] | 0;
   if (!$93) {
    $$1 = $9;
    $$14 = $10;
   } else if ($93 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
    HEAP32[$R$3 + 20 >> 2] = $93;
    HEAP32[$93 + 24 >> 2] = $R$3;
    $$1 = $9;
    $$14 = $10;
    break;
   }
  }
 } else {
  $$1 = $p;
  $$14 = $psize;
 } while (0);
 $107 = HEAP32[40711] | 0;
 if ($0 >>> 0 < $107 >>> 0) _abort();
 $109 = $0 + 4 | 0;
 $110 = HEAP32[$109 >> 2] | 0;
 if (!($110 & 2)) {
  if (($0 | 0) == (HEAP32[40713] | 0)) {
   $116 = (HEAP32[40710] | 0) + $$14 | 0;
   HEAP32[40710] = $116;
   HEAP32[40713] = $$1;
   HEAP32[$$1 + 4 >> 2] = $116 | 1;
   if (($$1 | 0) != (HEAP32[40712] | 0)) return;
   HEAP32[40712] = 0;
   HEAP32[40709] = 0;
   return;
  }
  if (($0 | 0) == (HEAP32[40712] | 0)) {
   $124 = (HEAP32[40709] | 0) + $$14 | 0;
   HEAP32[40709] = $124;
   HEAP32[40712] = $$1;
   HEAP32[$$1 + 4 >> 2] = $124 | 1;
   HEAP32[$$1 + $124 >> 2] = $124;
   return;
  }
  $129 = ($110 & -8) + $$14 | 0;
  $130 = $110 >>> 3;
  do if ($110 >>> 0 < 256) {
   $133 = HEAP32[$0 + 8 >> 2] | 0;
   $135 = HEAP32[$0 + 12 >> 2] | 0;
   $137 = 162868 + ($130 << 1 << 2) | 0;
   if (($133 | 0) != ($137 | 0)) {
    if ($133 >>> 0 < $107 >>> 0) _abort();
    if ((HEAP32[$133 + 12 >> 2] | 0) != ($0 | 0)) _abort();
   }
   if (($135 | 0) == ($133 | 0)) {
    HEAP32[40707] = HEAP32[40707] & ~(1 << $130);
    break;
   }
   if (($135 | 0) == ($137 | 0)) $$pre$phi22Z2D = $135 + 8 | 0; else {
    if ($135 >>> 0 < $107 >>> 0) _abort();
    $150 = $135 + 8 | 0;
    if ((HEAP32[$150 >> 2] | 0) == ($0 | 0)) $$pre$phi22Z2D = $150; else _abort();
   }
   HEAP32[$133 + 12 >> 2] = $135;
   HEAP32[$$pre$phi22Z2D >> 2] = $133;
  } else {
   $155 = HEAP32[$0 + 24 >> 2] | 0;
   $157 = HEAP32[$0 + 12 >> 2] | 0;
   do if (($157 | 0) == ($0 | 0)) {
    $168 = $0 + 16 | 0;
    $169 = $168 + 4 | 0;
    $170 = HEAP32[$169 >> 2] | 0;
    if (!$170) {
     $172 = HEAP32[$168 >> 2] | 0;
     if (!$172) {
      $R7$3 = 0;
      break;
     } else {
      $R7$1 = $172;
      $RP9$1 = $168;
     }
    } else {
     $R7$1 = $170;
     $RP9$1 = $169;
    }
    while (1) {
     $174 = $R7$1 + 20 | 0;
     $175 = HEAP32[$174 >> 2] | 0;
     if ($175 | 0) {
      $R7$1 = $175;
      $RP9$1 = $174;
      continue;
     }
     $177 = $R7$1 + 16 | 0;
     $178 = HEAP32[$177 >> 2] | 0;
     if (!$178) {
      $R7$1$lcssa = $R7$1;
      $RP9$1$lcssa = $RP9$1;
      break;
     } else {
      $R7$1 = $178;
      $RP9$1 = $177;
     }
    }
    if ($RP9$1$lcssa >>> 0 < $107 >>> 0) _abort(); else {
     HEAP32[$RP9$1$lcssa >> 2] = 0;
     $R7$3 = $R7$1$lcssa;
     break;
    }
   } else {
    $160 = HEAP32[$0 + 8 >> 2] | 0;
    if ($160 >>> 0 < $107 >>> 0) _abort();
    $162 = $160 + 12 | 0;
    if ((HEAP32[$162 >> 2] | 0) != ($0 | 0)) _abort();
    $165 = $157 + 8 | 0;
    if ((HEAP32[$165 >> 2] | 0) == ($0 | 0)) {
     HEAP32[$162 >> 2] = $157;
     HEAP32[$165 >> 2] = $160;
     $R7$3 = $157;
     break;
    } else _abort();
   } while (0);
   if ($155 | 0) {
    $183 = HEAP32[$0 + 28 >> 2] | 0;
    $184 = 163132 + ($183 << 2) | 0;
    if (($0 | 0) == (HEAP32[$184 >> 2] | 0)) {
     HEAP32[$184 >> 2] = $R7$3;
     if (!$R7$3) {
      HEAP32[40708] = HEAP32[40708] & ~(1 << $183);
      break;
     }
    } else {
     if ($155 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
     $193 = $155 + 16 | 0;
     if ((HEAP32[$193 >> 2] | 0) == ($0 | 0)) HEAP32[$193 >> 2] = $R7$3; else HEAP32[$155 + 20 >> 2] = $R7$3;
     if (!$R7$3) break;
    }
    $198 = HEAP32[40711] | 0;
    if ($R7$3 >>> 0 < $198 >>> 0) _abort();
    HEAP32[$R7$3 + 24 >> 2] = $155;
    $201 = $0 + 16 | 0;
    $202 = HEAP32[$201 >> 2] | 0;
    do if ($202 | 0) if ($202 >>> 0 < $198 >>> 0) _abort(); else {
     HEAP32[$R7$3 + 16 >> 2] = $202;
     HEAP32[$202 + 24 >> 2] = $R7$3;
     break;
    } while (0);
    $208 = HEAP32[$201 + 4 >> 2] | 0;
    if ($208 | 0) if ($208 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
     HEAP32[$R7$3 + 20 >> 2] = $208;
     HEAP32[$208 + 24 >> 2] = $R7$3;
     break;
    }
   }
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $129 | 1;
  HEAP32[$$1 + $129 >> 2] = $129;
  if (($$1 | 0) == (HEAP32[40712] | 0)) {
   HEAP32[40709] = $129;
   return;
  } else $$2 = $129;
 } else {
  HEAP32[$109 >> 2] = $110 & -2;
  HEAP32[$$1 + 4 >> 2] = $$14 | 1;
  HEAP32[$$1 + $$14 >> 2] = $$14;
  $$2 = $$14;
 }
 $223 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $226 = 162868 + ($223 << 1 << 2) | 0;
  $227 = HEAP32[40707] | 0;
  $228 = 1 << $223;
  if (!($227 & $228)) {
   HEAP32[40707] = $227 | $228;
   $$pre$phiZ2D = $226 + 8 | 0;
   $F17$0 = $226;
  } else {
   $232 = $226 + 8 | 0;
   $233 = HEAP32[$232 >> 2] | 0;
   if ($233 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $232;
    $F17$0 = $233;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$F17$0 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $F17$0;
  HEAP32[$$1 + 12 >> 2] = $226;
  return;
 }
 $239 = $$2 >>> 8;
 if (!$239) $I20$0 = 0; else if ($$2 >>> 0 > 16777215) $I20$0 = 31; else {
  $244 = ($239 + 1048320 | 0) >>> 16 & 8;
  $245 = $239 << $244;
  $248 = ($245 + 520192 | 0) >>> 16 & 4;
  $250 = $245 << $248;
  $253 = ($250 + 245760 | 0) >>> 16 & 2;
  $258 = 14 - ($248 | $244 | $253) + ($250 << $253 >>> 15) | 0;
  $I20$0 = $$2 >>> ($258 + 7 | 0) & 1 | $258 << 1;
 }
 $264 = 163132 + ($I20$0 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $I20$0;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $268 = HEAP32[40708] | 0;
 $269 = 1 << $I20$0;
 if (!($268 & $269)) {
  HEAP32[40708] = $268 | $269;
  HEAP32[$264 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $264;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 }
 $K21$0 = $$2 << (($I20$0 | 0) == 31 ? 0 : 25 - ($I20$0 >>> 1) | 0);
 $T$0 = HEAP32[$264 >> 2] | 0;
 while (1) {
  if ((HEAP32[$T$0 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
   $T$0$lcssa = $T$0;
   label = 127;
   break;
  }
  $287 = $T$0 + 16 + ($K21$0 >>> 31 << 2) | 0;
  $289 = HEAP32[$287 >> 2] | 0;
  if (!$289) {
   $$lcssa = $287;
   $T$0$lcssa30 = $T$0;
   label = 124;
   break;
  } else {
   $K21$0 = $K21$0 << 1;
   $T$0 = $289;
  }
 }
 if ((label | 0) == 124) {
  if ($$lcssa >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
  HEAP32[$$lcssa >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $T$0$lcssa30;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 } else if ((label | 0) == 127) {
  $296 = $T$0$lcssa + 8 | 0;
  $297 = HEAP32[$296 >> 2] | 0;
  $298 = HEAP32[40711] | 0;
  if (!($297 >>> 0 >= $298 >>> 0 & $T$0$lcssa >>> 0 >= $298 >>> 0)) _abort();
  HEAP32[$297 + 12 >> 2] = $$1;
  HEAP32[$296 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $297;
  HEAP32[$$1 + 12 >> 2] = $T$0$lcssa;
  HEAP32[$$1 + 24 >> 2] = 0;
  return;
 }
}

function __ZN5ImGui8CheckboxEPKcPb($label, $v) {
 $label = $label | 0;
 $v = $v | 0;
 var $$ = 0, $$0 = 0, $$1 = 0, $$byval_copy = 0, $$idx21 = 0, $$idx21$val = 0.0, $$idx22 = 0, $$idx22$val = 0.0, $$pre$phi$i$iZ2D = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0.0, $108 = 0, $109 = 0, $110 = 0, $111 = 0, $116 = 0.0, $118 = 0, $12 = 0, $128 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $140 = 0.0, $141 = 0.0, $143 = 0, $149 = 0, $150 = 0.0, $152 = 0.0, $153 = 0, $154 = 0.0, $157 = 0, $159 = 0.0, $160 = 0, $161 = 0, $180 = 0.0, $181 = 0, $182 = 0.0, $185 = 0, $186 = 0.0, $19 = 0, $2 = 0, $200 = 0, $202 = 0, $204 = 0, $225 = 0, $232 = 0, $235 = 0.0, $237 = 0.0, $239 = 0.0, $244 = 0.0, $268 = 0, $269 = 0.0, $272 = 0.0, $277 = 0.0, $279 = 0.0, $28 = 0, $281 = 0, $289 = 0.0, $291 = 0.0, $293 = 0.0, $298 = 0.0, $3 = 0, $328 = 0.0, $329 = 0.0, $33 = 0, $35 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $43 = 0.0, $45 = 0.0, $47 = 0.0, $50 = 0.0, $51 = 0, $52 = 0.0, $54 = 0.0, $55 = 0.0, $56 = 0.0, $57 = 0.0, $59 = 0, $6 = 0, $60 = 0, $66 = 0, $67 = 0.0, $69 = 0.0, $70 = 0, $71 = 0.0, $74 = 0, $76 = 0.0, $77 = 0, $78 = 0, $97 = 0.0, $98 = 0, $99 = 0.0, $held$0$off0$i$ph = 0, $held$0$off0$i71 = 0, $id = 0, $label_size$sroa$0$0 = 0.0, $label_size$sroa$8$0 = 0, $pressed$3$off0$i70 = 0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $tmpcast$byval_copy = 0, $total_bb = 0, $y$01$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $$byval_copy = sp + 16 | 0;
 $tmpcast$byval_copy = sp + 72 | 0;
 $id = sp + 64 | 0;
 $total_bb = sp + 48 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $2 = sp + 40 | 0;
 $3 = sp + 32 | 0;
 $4 = sp + 24 | 0;
 $6 = HEAP32[38201] | 0;
 HEAP8[$6 + 114 >> 0] = 1;
 if (HEAP8[$6 + 116 >> 0] | 0) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $12 = HEAP32[$6 + 424 >> 2] | 0;
 if (($12 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $19 = __Z6ImHashPKvij($label, 0, HEAP32[(HEAP32[$6 + 432 >> 2] | 0) + ($12 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($19 | 0)) HEAP8[152852] = 1;
 HEAP32[$id >> 2] = $19;
 if (($label | 0) == (-1 | 0)) {
  $38 = +HEAPF32[38187];
  label = 13;
 } else {
  $text_display_end$03$i$i = $label;
  L12 : while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     break L12;
     break;
    }
   case 35:
    {
     $28 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$28 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      break L12;
     } else $$pre$phi$i$iZ2D = $28;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    break;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
  $33 = HEAP32[38186] | 0;
  $35 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($label | 0)) {
   $38 = $35;
   label = 13;
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($$byval_copy, $33, $35, 3402823466385288598117041.0e14, -1.0, $label, $text_display_end$0$i, 0);
   $39 = +HEAPF32[$$byval_copy >> 2];
   if ($39 > 0.0) {
    $43 = $39 - $35 / +HEAPF32[$33 >> 2];
    HEAPF32[$$byval_copy >> 2] = $43;
    $45 = $43;
   } else $45 = $39;
   $47 = +(~~($45 + .949999988079071) | 0);
   HEAPF32[$$byval_copy >> 2] = $47;
   $59 = 146892;
   $label_size$sroa$0$0 = $47;
   $label_size$sroa$8$0 = HEAP32[$$byval_copy + 4 >> 2] | 0;
  }
 }
 if ((label | 0) == 13) {
  $59 = 146892;
  $label_size$sroa$0$0 = 0.0;
  $label_size$sroa$8$0 = (HEAPF32[tempDoublePtr >> 2] = $38, HEAP32[tempDoublePtr >> 2] | 0);
 }
 $50 = (HEAP32[tempDoublePtr >> 2] = $label_size$sroa$8$0, +HEAPF32[tempDoublePtr >> 2]);
 $51 = 151972;
 $52 = +HEAPF32[$51 >> 2];
 $54 = $50 + $52 * 2.0;
 $$idx21 = $6 + 164 | 0;
 $$idx21$val = +HEAPF32[$$idx21 >> 2];
 $$idx22 = $6 + 168 | 0;
 $$idx22$val = +HEAPF32[$$idx22 >> 2];
 $55 = $$idx21$val + $54;
 $56 = $$idx22$val + $54;
 $57 = $56 - $$idx22$val;
 $60 = HEAP32[$59 + 5912 >> 2] | 0;
 HEAP8[$60 + 114 >> 0] = 1;
 if (!(HEAP8[$60 + 116 >> 0] | 0)) {
  $66 = $60 + 196 | 0;
  $67 = +HEAPF32[$66 >> 2];
  $69 = $67 >= $57 ? $67 : $57;
  $70 = $60 + 200 | 0;
  $71 = +HEAPF32[$70 >> 2];
  $74 = $60 + 164 | 0;
  $76 = $55 - $$idx21$val + +HEAPF32[$74 >> 2];
  $77 = $60 + 168 | 0;
  $78 = HEAP32[$77 >> 2] | 0;
  HEAPF32[$60 + 172 >> 2] = $76;
  HEAP32[$60 + 176 >> 2] = $78;
  $97 = +(~~($69 + (HEAP32[tempDoublePtr >> 2] = $78, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[$59 + 5092 >> 2]) | 0);
  HEAPF32[$74 >> 2] = +(~~(+HEAPF32[$60 + 20 >> 2] + +HEAPF32[$60 + 368 >> 2] + +HEAPF32[$60 + 372 >> 2]) | 0);
  HEAPF32[$77 >> 2] = $97;
  $98 = $60 + 188 | 0;
  $99 = +HEAPF32[$98 >> 2];
  HEAPF32[$98 >> 2] = $99 >= $76 ? $99 : $76;
  $102 = $60 + 192 | 0;
  $103 = +HEAPF32[$102 >> 2];
  HEAPF32[$102 >> 2] = $103 >= $97 ? $103 : $97;
  HEAPF32[$60 + 204 >> 2] = $69;
  HEAPF32[$60 + 208 >> 2] = $71 >= $52 ? $71 : $52;
  HEAPF32[$70 >> 2] = 0.0;
  HEAPF32[$66 >> 2] = 0.0;
 }
 HEAPF32[$total_bb >> 2] = $$idx21$val;
 $108 = $total_bb + 4 | 0;
 HEAPF32[$108 >> 2] = $$idx22$val;
 $109 = $total_bb + 8 | 0;
 HEAPF32[$109 >> 2] = $55;
 $110 = $total_bb + 12 | 0;
 HEAPF32[$110 >> 2] = $56;
 $111 = $label_size$sroa$0$0 > 0.0;
 if ($111) {
  $116 = +HEAPF32[37997];
  $118 = HEAP32[38201] | 0;
  HEAP8[$118 + 114 >> 0] = 1;
  if (!(HEAP8[$118 + 116 >> 0] | 0)) {
   $128 = ($116 < 0.0 ? +HEAPF32[37995] : $116) + +HEAPF32[$118 + 172 >> 2];
   $y$01$i = HEAP32[$118 + 176 >> 2] | 0;
   HEAP32[$118 + 196 >> 2] = HEAP32[$118 + 204 >> 2];
   HEAP32[$118 + 200 >> 2] = HEAP32[$118 + 208 >> 2];
   HEAPF32[$118 + 164 >> 2] = $128;
   HEAP32[$118 + 168 >> 2] = $y$01$i;
  }
  $137 = +HEAPF32[$51 >> 2];
  $138 = +HEAPF32[$$idx21 >> 2] + 0.0;
  $139 = $137 + +HEAPF32[$$idx22 >> 2];
  $140 = $50 + $139;
  $141 = $label_size$sroa$0$0 + $138;
  $143 = HEAP32[38201] | 0;
  HEAP8[$143 + 114 >> 0] = 1;
  if (!(HEAP8[$143 + 116 >> 0] | 0)) {
   $149 = $143 + 196 | 0;
   $150 = +HEAPF32[$149 >> 2];
   $152 = $150 >= $57 ? $150 : $57;
   $153 = $143 + 200 | 0;
   $154 = +HEAPF32[$153 >> 2];
   $157 = $143 + 164 | 0;
   $159 = $141 - $138 + +HEAPF32[$157 >> 2];
   $160 = $143 + 168 | 0;
   $161 = HEAP32[$160 >> 2] | 0;
   HEAPF32[$143 + 172 >> 2] = $159;
   HEAP32[$143 + 176 >> 2] = $161;
   $180 = +(~~($152 + (HEAP32[tempDoublePtr >> 2] = $161, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
   HEAPF32[$157 >> 2] = +(~~(+HEAPF32[$143 + 20 >> 2] + +HEAPF32[$143 + 368 >> 2] + +HEAPF32[$143 + 372 >> 2]) | 0);
   HEAPF32[$160 >> 2] = $180;
   $181 = $143 + 188 | 0;
   $182 = +HEAPF32[$181 >> 2];
   HEAPF32[$181 >> 2] = $182 >= $159 ? $182 : $159;
   $185 = $143 + 192 | 0;
   $186 = +HEAPF32[$185 >> 2];
   HEAPF32[$185 >> 2] = $186 >= $180 ? $186 : $180;
   HEAPF32[$143 + 204 >> 2] = $152;
   HEAPF32[$143 + 208 >> 2] = $154 >= $137 ? $154 : $137;
   HEAPF32[$153 >> 2] = 0.0;
   HEAPF32[$149 >> 2] = 0.0;
  }
  HEAPF32[$total_bb >> 2] = $$idx21$val < $138 ? $$idx21$val : $138;
  HEAPF32[$108 >> 2] = $$idx22$val < $139 ? $$idx22$val : $139;
  HEAPF32[$109 >> 2] = $55 >= $141 ? $55 : $141;
  HEAPF32[$110 >> 2] = $56 >= $140 ? $56 : $140;
  $328 = $139;
  $329 = $138;
 } else {
  $328 = +HEAPF32[$51 >> 2] + +HEAPF32[$$idx22 >> 2];
  $329 = +HEAPF32[$$idx21 >> 2] + 0.0;
 }
 if (__ZN5ImGui7ItemAddERK6ImRectPKj($total_bb, $id) | 0) {
  $200 = HEAP32[$id >> 2] | 0;
  $202 = HEAP32[38201] | 0;
  HEAP8[$202 + 114 >> 0] = 1;
  $204 = __ZN5ImGui9IsHoveredERK6ImRectjb($total_bb, $200, 0) | 0;
  if ($204) {
   HEAP32[38208] = $200;
   HEAP8[152836] = 0;
   if (HEAP8[147696] | 0) {
    HEAP32[38211] = $200;
    HEAP8[152854] = 0;
    HEAP8[152853] = 1;
    HEAP32[38214] = $202;
    __ZN5ImGui11FocusWindowEP11ImGuiWindow($202);
   }
  }
  if ((HEAP32[38211] | 0) == ($200 | 0)) if (!(HEAP8[147092] | 0)) {
   HEAP32[38211] = 0;
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = 0;
   $225 = $204 & 1;
   if ($204) {
    HEAP8[$v >> 0] = HEAP8[$v >> 0] ^ 1;
    $232 = $225;
    $held$0$off0$i71 = 0;
    $pressed$3$off0$i70 = 1;
   } else {
    $232 = $225;
    $held$0$off0$i71 = 0;
    $pressed$3$off0$i70 = 0;
   }
  } else {
   $held$0$off0$i$ph = 1;
   label = 32;
  } else {
   $held$0$off0$i$ph = 0;
   label = 32;
  }
  if ((label | 0) == 32) {
   $232 = $204 & 1;
   $held$0$off0$i71 = $held$0$off0$i$ph;
   $pressed$3$off0$i70 = 0;
  }
  HEAPF32[$0 >> 2] = $$idx21$val;
  HEAPF32[$0 + 4 >> 2] = $$idx22$val;
  HEAPF32[$1 >> 2] = $55;
  HEAPF32[$1 + 4 >> 2] = $56;
  $$ = $232 << 24 >> 24 == 0 | $held$0$off0$i71 << 24 >> 24 == 0 ? ($204 ? 7 : 6) : 8;
  $235 = +HEAPF32[152056 + ($$ << 4) >> 2];
  $237 = +HEAPF32[152056 + ($$ << 4) + 4 >> 2];
  $239 = +HEAPF32[152056 + ($$ << 4) + 8 >> 2];
  $244 = +HEAPF32[152056 + ($$ << 4) + 12 >> 2] * +HEAPF32[37984];
  $268 = 151976;
  $269 = +HEAPF32[$268 >> 2];
  HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$0 >> 2];
  HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  __ZN5ImGui11RenderFrameE6ImVec2S0_jbf($tmpcast$byval_copy, $$byval_copy, ($237 < 0.0 ? 0 : ~~(($237 > 1.0 ? 1.0 : $237) * 255.0 + .5) << 8) | ($235 < 0.0 ? 0 : ~~(($235 > 1.0 ? 1.0 : $235) * 255.0 + .5)) | ($239 < 0.0 ? 0 : ~~(($239 > 1.0 ? 1.0 : $239) * 255.0 + .5) << 16) | ($244 < 0.0 ? 0 : ~~(($244 > 1.0 ? 1.0 : $244) * 255.0 + .5) << 24), 1, $269);
  if (HEAP8[$v >> 0] | 0) {
   $272 = $55 - $$idx21$val;
   $277 = +(~~(($272 < $57 ? $272 : $57) / 6.0) | 0);
   $279 = $277 <= 1.0 ? 1.0 : $277;
   $281 = HEAP32[$6 + 572 >> 2] | 0;
   HEAPF32[$2 >> 2] = $$idx21$val + $279;
   HEAPF32[$2 + 4 >> 2] = $$idx22$val + $279;
   HEAPF32[$3 >> 2] = $55 - $279;
   HEAPF32[$3 + 4 >> 2] = $56 - $279;
   $289 = +HEAPF32[38086];
   $291 = +HEAPF32[38087];
   $293 = +HEAPF32[38088];
   $298 = +HEAPF32[38089] * +HEAPF32[37984];
   __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi($281, $2, $3, ($291 < 0.0 ? 0 : ~~(($291 > 1.0 ? 1.0 : $291) * 255.0 + .5) << 8) | ($289 < 0.0 ? 0 : ~~(($289 > 1.0 ? 1.0 : $289) * 255.0 + .5)) | ($293 < 0.0 ? 0 : ~~(($293 > 1.0 ? 1.0 : $293) * 255.0 + .5) << 16) | ($298 < 0.0 ? 0 : ~~(($298 > 1.0 ? 1.0 : $298) * 255.0 + .5) << 24), +HEAPF32[$268 >> 2], 15);
  }
  if (HEAP8[157996] | 0) __ZL15LogRenderedTextRK6ImVec2PKcS3_($328, HEAP8[$v >> 0] | 0 ? 127029 : 127033, 0);
  if ($111) {
   HEAPF32[$4 >> 2] = $329;
   HEAPF32[$4 + 4 >> 2] = $328;
   HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   __ZN5ImGui10RenderTextE6ImVec2PKcS2_b($$byval_copy, $label, 0, 1);
   $$0 = $pressed$3$off0$i70;
  } else $$0 = $pressed$3$off0$i70;
 } else $$0 = 0;
 $$1 = $$0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN5Oryol9loadQueue6updateEv($this) {
 $this = $this | 0;
 var $$pre5$i$i$i$i = 0, $$pre6$i$i$i$i = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $103 = 0, $107 = 0, $108 = 0, $11 = 0, $112 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $124 = 0, $125 = 0, $13 = 0, $135 = 0, $139 = 0, $141 = 0, $142 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $15 = 0, $152 = 0, $154 = 0, $155 = 0, $162 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $40 = 0, $43 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $53 = 0, $57 = 0, $60 = 0, $62 = 0, $66 = 0, $67 = 0, $7 = 0, $71 = 0, $75 = 0, $78 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $87 = 0, $88 = 0, $9 = 0, $91 = 0, $92 = 0, $96 = 0, $99 = 0, $__begin$053 = 0, $__begin5$055 = 0, $anyFailed$0$off054 = 0, $anyFailed$2$off0$ph = 0, $i$01$i$i$i = 0, $i$065$in = 0, $i1$060$in = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, label = 0, sp = 0, $i$065$in$looptemp = 0, $i1$060$in$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 96 | 0;
 $1 = sp + 40 | 0;
 $2 = sp + 16 | 0;
 $3 = $this + 12 | 0;
 $5 = $this + 8 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) | 0;
 L1 : do if (($7 | 0) > 0) {
  $9 = $1 + 40 | 0;
  $10 = $1 + 44 | 0;
  $11 = $1 + 48 | 0;
  $i$065$in = $7;
  L3 : while (1) {
   $i$065$in$looptemp = $i$065$in;
   $i$065$in = $i$065$in + -1 | 0;
   if (($i$065$in$looptemp | 0) <= 0) {
    label = 7;
    break;
   }
   $29 = HEAP32[$5 >> 2] | 0;
   if (((HEAP32[$3 >> 2] | 0) - $29 | 0) < ($i$065$in$looptemp | 0)) {
    label = 7;
    break;
   }
   $32 = HEAP32[$this >> 2] | 0;
   if (!$32) {
    label = 9;
    break;
   }
   $34 = $29 + $i$065$in | 0;
   $35 = $32 + ($34 * 56 | 0) | 0;
   $36 = HEAP32[$35 >> 2] | 0;
   if (!$36) {
    label = 11;
    break;
   }
   if (HEAP8[$36 + 8 >> 0] & 1) {
    $40 = HEAP32[$35 >> 2] | 0;
    if (!$40) {
     label = 14;
     break;
    }
    $43 = HEAP32[$40 + 72 >> 2] | 0;
    do if (($43 | 0) == 200) {
     __ZN5Oryol3URLC2ERKS0_($1, $40 + 12 | 0);
     $46 = $40 + 60 | 0;
     HEAP32[$9 >> 2] = HEAP32[$46 >> 2];
     $48 = $40 + 64 | 0;
     HEAP32[$10 >> 2] = HEAP32[$48 >> 2];
     $50 = $40 + 68 | 0;
     HEAP32[$11 >> 2] = HEAP32[$50 >> 2];
     HEAP32[$46 >> 2] = 0;
     HEAP32[$48 >> 2] = 0;
     HEAP32[$50 >> 2] = 0;
     $53 = HEAP32[$32 + ($34 * 56 | 0) + 24 >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$53 >> 2] | 0) + 24 >> 2] & 63]($53, $1);
     $57 = HEAP32[$11 >> 2] | 0;
     if ($57 | 0) __ZN5Oryol6Memory4FreeEPv($57);
     HEAP32[$11 >> 2] = 0;
     HEAP32[$9 >> 2] = 0;
     HEAP32[$10 >> 2] = 0;
     HEAP32[$1 >> 2] = 0;
    } else {
     $60 = HEAP32[$32 + ($34 * 56 | 0) + 48 >> 2] | 0;
     $62 = $40 + 12 | 0;
     if ($60 | 0) {
      HEAP32[$0 >> 2] = $43;
      FUNCTION_TABLE_viii[HEAP32[(HEAP32[$60 >> 2] | 0) + 24 >> 2] & 7]($60, $62, $0);
      break;
     }
     $66 = __ZNK5Oryol3URL6AsCStrEv($62) | 0;
     $67 = HEAP32[$35 >> 2] | 0;
     if (!$67) {
      label = 22;
      break L3;
     }
     $71 = __ZN5Oryol8IOStatus8ToStringENS0_4CodeE(HEAP32[$67 + 72 >> 2] | 0) | 0;
     HEAP32[$vararg_buffer >> 2] = $66;
     HEAP32[$vararg_buffer + 4 >> 2] = $71;
     __ZN5Oryol3Log4WarnEPKcz(104213, $vararg_buffer);
    } while (0);
    __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE5eraseEi($this, $i$065$in);
   }
   if (($i$065$in$looptemp | 0) <= 1) break L1;
  }
  if ((label | 0) == 7) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 104106);
   _abort();
  } else if ((label | 0) == 9) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 104106);
   _abort();
  } else if ((label | 0) == 11) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
   _abort();
  } else if ((label | 0) == 14) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
   _abort();
  } else if ((label | 0) == 22) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
   _abort();
  }
 } while (0);
 $12 = $this + 24 | 0;
 $13 = $this + 36 | 0;
 $15 = $this + 32 | 0;
 $17 = (HEAP32[$13 >> 2] | 0) - (HEAP32[$15 >> 2] | 0) | 0;
 if (($17 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $19 = $0 + 16 | 0;
 $20 = $0 + 20 | 0;
 $21 = $0 + 12 | 0;
 $22 = $0 + 8 | 0;
 $23 = $0 + 4 | 0;
 $24 = $2 + 16 | 0;
 $25 = $2 + 20 | 0;
 $$pre5$i$i$i$i = $2 + 8 | 0;
 $$pre6$i$i$i$i = $2 + 12 | 0;
 $26 = $2 + 4 | 0;
 $i1$060$in = $17;
 L35 : while (1) {
  $i1$060$in$looptemp = $i1$060$in;
  $i1$060$in = $i1$060$in + -1 | 0;
  if (($i1$060$in$looptemp | 0) <= 0) {
   label = 29;
   break;
  }
  $75 = HEAP32[$15 >> 2] | 0;
  if (((HEAP32[$13 >> 2] | 0) - $75 | 0) < ($i1$060$in$looptemp | 0)) {
   label = 29;
   break;
  }
  $78 = HEAP32[$12 >> 2] | 0;
  if (!$78) {
   label = 31;
   break;
  }
  $80 = $75 + $i1$060$in | 0;
  $81 = $78 + ($80 * 72 | 0) | 0;
  $82 = HEAP32[$81 >> 2] | 0;
  L40 : do if (!$82) label = 48; else {
   $85 = HEAP32[$78 + ($80 * 72 | 0) + 8 >> 2] | 0;
   $87 = HEAP32[$78 + ($80 * 72 | 0) + 12 >> 2] | 0;
   $88 = $82 + ($87 << 2) | 0;
   if (($85 | 0) == ($87 | 0)) label = 48; else {
    $91 = $78 + ($80 * 72 | 0) + 64 | 0;
    $__begin$053 = $82 + ($85 << 2) | 0;
    $anyFailed$0$off054 = 0;
    while (1) {
     $92 = HEAP32[$__begin$053 >> 2] | 0;
     if (!$92) {
      label = 36;
      break L35;
     }
     if (!(HEAP8[$92 + 8 >> 0] & 1)) break L40;
     $96 = HEAP32[$__begin$053 >> 2] | 0;
     if (!$96) {
      label = 39;
      break L35;
     }
     $99 = HEAP32[$96 + 72 >> 2] | 0;
     do if (($99 | 0) == 200) $anyFailed$2$off0$ph = $anyFailed$0$off054; else {
      $101 = HEAP32[$91 >> 2] | 0;
      $103 = $96 + 12 | 0;
      if ($101 | 0) {
       HEAP32[$0 >> 2] = $99;
       FUNCTION_TABLE_viii[HEAP32[(HEAP32[$101 >> 2] | 0) + 24 >> 2] & 7]($101, $103, $0);
       $anyFailed$2$off0$ph = 1;
       break;
      }
      $107 = __ZNK5Oryol3URL6AsCStrEv($103) | 0;
      $108 = HEAP32[$__begin$053 >> 2] | 0;
      if (!$108) {
       label = 44;
       break L35;
      }
      $112 = __ZN5Oryol8IOStatus8ToStringENS0_4CodeE(HEAP32[$108 + 72 >> 2] | 0) | 0;
      HEAP32[$vararg_buffer2 >> 2] = $107;
      HEAP32[$vararg_buffer2 + 4 >> 2] = $112;
      __ZN5Oryol3Log4WarnEPKcz(104213, $vararg_buffer2);
      $anyFailed$2$off0$ph = 1;
     } while (0);
     $__begin$053 = $__begin$053 + 4 | 0;
     if (($__begin$053 | 0) == ($88 | 0)) break; else $anyFailed$0$off054 = $anyFailed$2$off0$ph;
    }
    if ($anyFailed$2$off0$ph) label = 65; else label = 48;
   }
  } while (0);
  if ((label | 0) == 48) {
   label = 0;
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   HEAP32[$0 + 12 >> 2] = 0;
   HEAP32[$19 >> 2] = 16;
   HEAP32[$20 >> 2] = 65536;
   $115 = $78 + ($80 * 72 | 0) + 12 | 0;
   $117 = $78 + ($80 * 72 | 0) + 8 | 0;
   $119 = (HEAP32[$115 >> 2] | 0) - (HEAP32[$117 >> 2] | 0) | 0;
   if (($119 | 0) > 0) __ZN5Oryol5_priv13elementBufferINS_9loadQueue6resultEE5allocEii($0, $119, 0);
   $121 = HEAP32[$81 >> 2] | 0;
   if ($121 | 0) {
    $123 = HEAP32[$117 >> 2] | 0;
    $124 = HEAP32[$115 >> 2] | 0;
    $125 = $121 + ($124 << 2) | 0;
    if (($123 | 0) != ($124 | 0)) {
     $__begin5$055 = $121 + ($123 << 2) | 0;
     do {
      $155 = HEAP32[$__begin5$055 >> 2] | 0;
      if (!$155) {
       label = 63;
       break L35;
      }
      __ZN5Oryol5ArrayINS_9loadQueue6resultEE3AddIJRNS_3URLENS_6BufferEEEEvDpOT_($0, $155 + 12 | 0, $155 + 60 | 0);
      $__begin5$055 = $__begin5$055 + 4 | 0;
     } while (($__begin5$055 | 0) != ($125 | 0));
    }
   }
   HEAP32[$24 >> 2] = HEAP32[$19 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$2 >> 2] = 0;
   HEAP32[$2 + 4 >> 2] = 0;
   HEAP32[$2 + 8 >> 2] = 0;
   HEAP32[$2 >> 2] = HEAP32[$0 >> 2];
   HEAP32[$26 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$$pre5$i$i$i$i >> 2] = HEAP32[$22 >> 2];
   HEAP32[$$pre6$i$i$i$i >> 2] = HEAP32[$21 >> 2];
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   HEAP32[$0 + 12 >> 2] = 0;
   $135 = HEAP32[$78 + ($80 * 72 | 0) + 40 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$135 >> 2] | 0) + 24 >> 2] & 63]($135, $2);
   HEAP32[$24 >> 2] = 0;
   HEAP32[$25 >> 2] = 0;
   $139 = HEAP32[$2 >> 2] | 0;
   if ($139 | 0) {
    $141 = HEAP32[$$pre5$i$i$i$i >> 2] | 0;
    $142 = HEAP32[$$pre6$i$i$i$i >> 2] | 0;
    if (($141 | 0) < ($142 | 0)) {
     $146 = $139;
     $162 = $142;
     $i$01$i$i$i = $141;
     while (1) {
      $145 = $146 + ($i$01$i$i$i * 52 | 0) + 48 | 0;
      $147 = HEAP32[$145 >> 2] | 0;
      if (!$147) $154 = $162; else {
       __ZN5Oryol6Memory4FreeEPv($147);
       $154 = HEAP32[$$pre6$i$i$i$i >> 2] | 0;
      }
      HEAP32[$145 >> 2] = 0;
      HEAP32[$146 + ($i$01$i$i$i * 52 | 0) + 40 >> 2] = 0;
      HEAP32[$146 + ($i$01$i$i$i * 52 | 0) + 44 >> 2] = 0;
      HEAP32[$146 + ($i$01$i$i$i * 52 | 0) >> 2] = 0;
      $152 = $i$01$i$i$i + 1 | 0;
      if (($152 | 0) >= ($154 | 0)) break;
      $146 = HEAP32[$2 >> 2] | 0;
      $162 = $154;
      $i$01$i$i$i = $152;
     }
     $144 = HEAP32[$2 >> 2] | 0;
    } else $144 = $139;
    __ZN5Oryol6Memory4FreeEPv($144);
   };
   HEAP32[$2 >> 2] = 0;
   HEAP32[$2 + 4 >> 2] = 0;
   HEAP32[$2 + 8 >> 2] = 0;
   HEAP32[$2 + 12 >> 2] = 0;
   label = 65;
  }
  if ((label | 0) == 65) {
   label = 0;
   __ZN5Oryol5_priv13elementBufferINS_9loadQueue9groupItemEE5eraseEi($12, $i1$060$in);
  }
  if (($i1$060$in$looptemp | 0) <= 1) {
   label = 26;
   break;
  }
 }
 if ((label | 0) == 26) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 29) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 104581);
  _abort();
 } else if ((label | 0) == 31) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 104581);
  _abort();
 } else if ((label | 0) == 36) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
  _abort();
 } else if ((label | 0) == 39) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
  _abort();
 } else if ((label | 0) == 44) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
  _abort();
 } else if ((label | 0) == 63) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
  _abort();
 }
}

function __ZN5ImGui9DragFloatEPKcPffffS1_f($label, $v, $v_speed, $v_min, $v_max, $display_format, $power) {
 $label = $label | 0;
 $v = $v | 0;
 $v_speed = +$v_speed;
 $v_min = +$v_min;
 $v_max = +$v_max;
 $display_format = $display_format | 0;
 $power = +$power;
 var $$1 = 0, $$2 = 0, $$byval_copy = 0, $$display_format = 0, $$lcssa = 0, $$lcssa29 = 0, $$lcssa58 = 0, $$lcssa60 = 0, $$pre$i = 0, $$pre$phi$i$iZ2D = 0, $0 = 0, $104 = 0, $105 = 0.0, $107 = 0.0, $108 = 0, $109 = 0.0, $112 = 0, $114 = 0.0, $115 = 0, $116 = 0, $135 = 0.0, $136 = 0, $137 = 0.0, $140 = 0, $141 = 0.0, $146 = 0, $147 = 0, $15 = 0, $151 = 0, $154 = 0, $158 = 0, $161 = 0, $162 = 0, $164 = 0, $166 = 0, $168 = 0, $175 = 0, $195 = 0, $196 = 0, $2 = 0, $201 = 0, $202 = 0, $204 = 0.0, $205 = 0.0, $207 = 0, $21 = 0, $213 = 0, $214 = 0.0, $216 = 0.0, $217 = 0, $218 = 0.0, $221 = 0, $223 = 0.0, $224 = 0, $225 = 0, $23 = 0.0, $244 = 0.0, $245 = 0, $246 = 0.0, $249 = 0, $250 = 0.0, $255 = 0, $256 = 0, $27 = 0.0, $31 = 0.0, $36 = 0, $41 = 0, $43 = 0.0, $46 = 0.0, $47 = 0.0, $51 = 0.0, $53 = 0.0, $55 = 0.0, $58 = 0, $60 = 0, $61 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0, $68 = 0, $71 = 0, $72 = 0, $76 = 0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0, $93 = 0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $98 = 0, $id = 0, $label_size$sroa$0$0 = 0.0, $label_size$sroa$6$0 = 0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $text_size$i = 0, $total_bb = 0, $value_buf = 0, $w$0$i = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp + 32 | 0;
 $text_size$i = sp + 16 | 0;
 $id = sp + 48 | 0;
 $total_bb = sp;
 $value_buf = sp + 56 | 0;
 $0 = sp + 40 | 0;
 $2 = HEAP32[38201] | 0;
 HEAP8[$2 + 114 >> 0] = 1;
 if (HEAP8[$2 + 116 >> 0] | 0) {
  $$2 = 0;
  STACKTOP = sp;
  return $$2 | 0;
 }
 $8 = HEAP32[$2 + 424 >> 2] | 0;
 if (($8 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $15 = __Z6ImHashPKvij($label, 0, HEAP32[(HEAP32[$2 + 432 >> 2] | 0) + ($8 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($15 | 0)) HEAP8[152852] = 1;
 HEAP32[$id >> 2] = $15;
 $21 = HEAP32[38201] | 0;
 $23 = +HEAPF32[$21 + 268 >> 2];
 if ($23 < 0.0) {
  __ZN5ImGui19GetContentRegionMaxEv($text_size$i);
  $27 = $23 + (+HEAPF32[$text_size$i >> 2] - (+HEAPF32[$21 + 164 >> 2] - +HEAPF32[$21 + 20 >> 2]));
  $w$0$i = $27 <= 1.0 ? 1.0 : $27;
 } else $w$0$i = $23;
 $31 = +(~~$w$0$i | 0);
 if (($label | 0) == (-1 | 0)) {
  $46 = +HEAPF32[38187];
  label = 15;
 } else {
  $text_display_end$03$i$i = $label;
  L15 : while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     break L15;
     break;
    }
   case 35:
    {
     $36 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$36 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      break L15;
     } else $$pre$phi$i$iZ2D = $36;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    break;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
  $41 = HEAP32[38186] | 0;
  $43 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($label | 0)) {
   $46 = $43;
   label = 15;
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($text_size$i, $41, $43, 3402823466385288598117041.0e14, -1.0, $label, $text_display_end$0$i, 0);
   $47 = +HEAPF32[$text_size$i >> 2];
   if ($47 > 0.0) {
    $51 = $47 - $43 / +HEAPF32[$41 >> 2];
    HEAPF32[$text_size$i >> 2] = $51;
    $53 = $51;
   } else $53 = $47;
   $55 = +(~~($53 + .949999988079071) | 0);
   HEAPF32[$text_size$i >> 2] = $55;
   $label_size$sroa$0$0 = $55;
   $label_size$sroa$6$0 = HEAP32[$text_size$i + 4 >> 2] | 0;
  }
 }
 if ((label | 0) == 15) {
  $label_size$sroa$0$0 = 0.0;
  $label_size$sroa$6$0 = (HEAPF32[tempDoublePtr >> 2] = $46, HEAP32[tempDoublePtr >> 2] | 0);
 }
 $58 = $2 + 164 | 0;
 $60 = 151972;
 $61 = +HEAPF32[$60 >> 2];
 $64 = $31 + +HEAPF32[$58 >> 2];
 $65 = +HEAPF32[$2 + 168 >> 2] + ((HEAP32[tempDoublePtr >> 2] = $label_size$sroa$6$0, +HEAPF32[tempDoublePtr >> 2]) + $61 * 2.0);
 $66 = $58;
 $68 = HEAP32[$66 >> 2] | 0;
 $71 = HEAP32[$66 + 4 >> 2] | 0;
 $72 = $text_size$i;
 HEAP32[$72 >> 2] = $68;
 HEAP32[$72 + 4 >> 2] = $71;
 $76 = $text_size$i + 8 | 0;
 HEAPF32[$76 >> 2] = $64;
 HEAPF32[$text_size$i + 12 >> 2] = $65;
 $78 = (HEAP32[tempDoublePtr >> 2] = $71, +HEAPF32[tempDoublePtr >> 2]);
 $79 = $78 + $61;
 $80 = $label_size$sroa$0$0 > 0.0;
 if ($80) $85 = $label_size$sroa$0$0 + +HEAPF32[37997]; else $85 = 0.0;
 $84 = $85 + $64;
 $86 = $65 + 0.0;
 $87 = $total_bb;
 HEAP32[$87 >> 2] = $68;
 HEAP32[$87 + 4 >> 2] = $71;
 HEAPF32[$total_bb + 8 >> 2] = $84;
 HEAPF32[$total_bb + 12 >> 2] = $86;
 $93 = __ZN5ImGui7ItemAddERK6ImRectPKj($total_bb, $id) | 0;
 $94 = (HEAP32[tempDoublePtr >> 2] = $68, +HEAPF32[tempDoublePtr >> 2]);
 L32 : do if ($93) {
  $146 = HEAP32[$id >> 2] | 0;
  $147 = __ZN5ImGui9IsHoveredERK6ImRectjb($text_size$i, $146, 0) | 0;
  if ($147) {
   HEAP32[38208] = $146;
   HEAP8[152836] = 0;
  }
  $$display_format = ($display_format | 0) == 0 ? 126797 : $display_format;
  $151 = _strchr($$display_format, 37) | 0;
  L37 : do if (!$151) $202 = 3; else {
   $154 = $151;
   while (1) {
    $158 = HEAP8[$154 + 1 >> 0] | 0;
    if ($158 << 24 >> 24 != 37) {
     $$lcssa58 = $154;
     $$lcssa60 = $158;
     break;
    }
    $154 = _strchr($154 + 2 | 0, 37) | 0;
    if (!$154) {
     $202 = 3;
     break L37;
    }
   }
   $161 = $$lcssa58 + 2 | 0;
   if (($$lcssa60 + -48 & 255) < 10) {
    $162 = $161;
    while (1) {
     $$pre$i = HEAP8[$162 >> 0] | 0;
     $164 = $162 + 1 | 0;
     if (($$pre$i + -48 & 255) < 10) $162 = $164; else {
      $$lcssa = $$pre$i;
      $$lcssa29 = $164;
      break;
     }
    }
   } else {
    $$lcssa = $$lcssa60;
    $$lcssa29 = $161;
   }
   if ($$lcssa << 24 >> 24 == 46) {
    $166 = _atoi($$lcssa29) | 0;
    $202 = $166 >>> 0 > 10 ? 3 : $166;
   } else $202 = 3;
  } while (0);
  $168 = 152844;
  do if (__ZN5ImGui21FocusableItemRegisterEP11ImGuiWindowbb($2, (HEAP32[$168 >> 2] | 0) == (HEAP32[$id >> 2] | 0), 1) | 0) {
   HEAP32[38211] = HEAP32[$id >> 2];
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = $2;
   __ZN5ImGui11FocusWindowEP11ImGuiWindow($2);
   label = 38;
  } else {
   if ($147) {
    $175 = 147764;
    if ((HEAP8[$175 >> 0] | HEAP8[147696]) << 24 >> 24) {
     HEAP32[38211] = HEAP32[$id >> 2];
     HEAP8[152854] = 0;
     HEAP8[152853] = 1;
     HEAP32[38214] = $2;
     __ZN5ImGui11FocusWindowEP11ImGuiWindow($2);
     if (!((HEAP8[147105] | 0) == 0 & (HEAP8[$175 >> 0] | 0) == 0)) {
      label = 38;
      break;
     }
    }
   }
   $195 = HEAP32[$168 >> 2] | 0;
   $196 = HEAP32[$id >> 2] | 0;
   if (($195 | 0) == ($196 | 0)) if ((HEAP32[39224] | 0) == ($195 | 0)) {
    $201 = $195;
    break;
   }
   $204 = +HEAPF32[$60 >> 2];
   $205 = $86 - $78;
   $207 = HEAP32[38201] | 0;
   HEAP8[$207 + 114 >> 0] = 1;
   if (!(HEAP8[$207 + 116 >> 0] | 0)) {
    $213 = $207 + 196 | 0;
    $214 = +HEAPF32[$213 >> 2];
    $216 = $214 >= $205 ? $214 : $205;
    $217 = $207 + 200 | 0;
    $218 = +HEAPF32[$217 >> 2];
    $221 = $207 + 164 | 0;
    $223 = $84 - $94 + +HEAPF32[$221 >> 2];
    $224 = $207 + 168 | 0;
    $225 = HEAP32[$224 >> 2] | 0;
    HEAPF32[$207 + 172 >> 2] = $223;
    HEAP32[$207 + 176 >> 2] = $225;
    $244 = +(~~($216 + (HEAP32[tempDoublePtr >> 2] = $225, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
    HEAPF32[$221 >> 2] = +(~~(+HEAPF32[$207 + 20 >> 2] + +HEAPF32[$207 + 368 >> 2] + +HEAPF32[$207 + 372 >> 2]) | 0);
    HEAPF32[$224 >> 2] = $244;
    $245 = $207 + 188 | 0;
    $246 = +HEAPF32[$245 >> 2];
    HEAPF32[$245 >> 2] = $246 >= $223 ? $246 : $223;
    $249 = $207 + 192 | 0;
    $250 = +HEAPF32[$249 >> 2];
    HEAPF32[$249 >> 2] = $250 >= $244 ? $250 : $244;
    HEAPF32[$207 + 204 >> 2] = $216;
    HEAPF32[$207 + 208 >> 2] = $218 >= $204 ? $218 : $204;
    HEAPF32[$217 >> 2] = 0.0;
    HEAPF32[$213 >> 2] = 0.0;
    $255 = HEAP32[$id >> 2] | 0;
   } else $255 = $196;
   $256 = __ZN5ImGui12DragBehaviorERK6ImRectjPffffif($text_size$i, $255, $v, $v_speed, $v_min, $v_max, $202, $power) | 0;
   HEAPF64[$$byval_copy >> 3] = +HEAPF32[$v >> 2];
   __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($text_size$i, $76, $value_buf, $value_buf + (__Z14ImFormatStringPciPKcz($value_buf, 64, $$display_format, $$byval_copy) | 0) | 0, 0, 18, 0, 0);
   if ($80) {
    HEAPF32[$0 >> 2] = $64 + +HEAPF32[37997];
    HEAPF32[$0 + 4 >> 2] = $79;
    HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
    HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
    __ZN5ImGui10RenderTextE6ImVec2PKcS2_b($$byval_copy, $label, 0, 1);
   }
   $$1 = $256;
   break L32;
  } while (0);
  if ((label | 0) == 38) {
   HEAP32[39224] = 0;
   $201 = HEAP32[$id >> 2] | 0;
  }
  $$1 = __ZN5ImGui30InputScalarAsWidgetReplacementERK6ImRectPKc13ImGuiDataTypePvji($text_size$i, $label, 1, $v, $201, $202) | 0;
 } else {
  $95 = +HEAPF32[$60 >> 2];
  $96 = $86 - $78;
  $98 = HEAP32[38201] | 0;
  HEAP8[$98 + 114 >> 0] = 1;
  if (!(HEAP8[$98 + 116 >> 0] | 0)) {
   $104 = $98 + 196 | 0;
   $105 = +HEAPF32[$104 >> 2];
   $107 = $105 >= $96 ? $105 : $96;
   $108 = $98 + 200 | 0;
   $109 = +HEAPF32[$108 >> 2];
   $112 = $98 + 164 | 0;
   $114 = $84 - $94 + +HEAPF32[$112 >> 2];
   $115 = $98 + 168 | 0;
   $116 = HEAP32[$115 >> 2] | 0;
   HEAPF32[$98 + 172 >> 2] = $114;
   HEAP32[$98 + 176 >> 2] = $116;
   $135 = +(~~($107 + (HEAP32[tempDoublePtr >> 2] = $116, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
   HEAPF32[$112 >> 2] = +(~~(+HEAPF32[$98 + 20 >> 2] + +HEAPF32[$98 + 368 >> 2] + +HEAPF32[$98 + 372 >> 2]) | 0);
   HEAPF32[$115 >> 2] = $135;
   $136 = $98 + 188 | 0;
   $137 = +HEAPF32[$136 >> 2];
   HEAPF32[$136 >> 2] = $137 >= $114 ? $137 : $114;
   $140 = $98 + 192 | 0;
   $141 = +HEAPF32[$140 >> 2];
   HEAPF32[$140 >> 2] = $141 >= $135 ? $141 : $135;
   HEAPF32[$98 + 204 >> 2] = $107;
   HEAPF32[$98 + 208 >> 2] = $109 >= $95 ? $109 : $95;
   HEAPF32[$108 >> 2] = 0.0;
   HEAPF32[$104 >> 2] = 0.0;
   $$1 = 0;
  } else $$1 = 0;
 } while (0);
 $$2 = $$1;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN11DebugWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $$0$i$ph = 0, $$0$i1 = 0, $$0$i4 = 0, $$0$i5$ph = 0, $$0$in$i = 0, $$0$in$i3 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $40 = 0, $5 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__begin$031 = 0, $__begin2$030 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp + 4 | 0;
 $2 = sp;
 __ZN10WindowBase7setNameEPKc($this, 35323);
 $3 = $kc + 65626 | 0;
 $4 = $kc + 65620 | 0;
 $5 = $kc + 65622 | 0;
 $6 = $kc + 65624 | 0;
 $7 = $kc + 65640 | 0;
 $8 = $kc + 65634 | 0;
 $9 = $kc + 65636 | 0;
 $10 = $kc + 65638 | 0;
 $11 = $kc + 65628 | 0;
 $12 = $kc + 65630 | 0;
 $13 = $kc + 65632 | 0;
 $14 = $kc + 65642 | 0;
 $__begin$031 = 872;
 L1 : while (1) {
  $23 = HEAP32[$__begin$031 >> 2] | 0;
  $24 = $this + 20 + ($23 << 4) | 0;
  do switch ($23 | 0) {
  case 0:
   {
    label = 21;
    break L1;
    break;
   }
  case 1:
   {
    label = 22;
    break L1;
    break;
   }
  case 2:
   {
    label = 23;
    break L1;
    break;
   }
  case 3:
   {
    label = 24;
    break L1;
    break;
   }
  case 4:
   {
    label = 25;
    break L1;
    break;
   }
  case 5:
   {
    $$0$i$ph = 36670;
    break L1;
    break;
   }
  case 6:
   {
    label = 4;
    break L1;
    break;
   }
  case 7:
   {
    label = 5;
    break L1;
    break;
   }
  case 16:
   {
    label = 14;
    break L1;
    break;
   }
  case 17:
   {
    label = 15;
    break L1;
    break;
   }
  case 22:
   {
    label = 20;
    break L1;
    break;
   }
  case 8:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35332);
    $$0$in$i = $3;
    break;
   }
  case 9:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35335);
    $$0$in$i = $4;
    break;
   }
  case 10:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35338);
    $$0$in$i = $5;
    break;
   }
  case 11:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35341);
    $$0$in$i = $6;
    break;
   }
  case 12:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35344);
    $$0$in$i = $7;
    break;
   }
  case 13:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35348);
    $$0$in$i = $8;
    break;
   }
  case 14:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35352);
    $$0$in$i = $9;
    break;
   }
  case 15:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35356);
    $$0$in$i = $10;
    break;
   }
  case 18:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35360);
    $$0$in$i = $11;
    break;
   }
  case 19:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35363);
    $$0$in$i = $12;
    break;
   }
  case 20:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35366);
    $$0$in$i = $13;
    break;
   }
  case 21:
   {
    __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35369);
    $$0$in$i = $14;
    break;
   }
  default:
   {
    label = 27;
    break L1;
   }
  } while (0);
  $$0$i1 = HEAP16[$$0$in$i >> 1] | 0;
  if (($24 | 0) != ($0 | 0)) {
   HEAP32[$24 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($24, $0);
  }
  HEAP8[$this + 20 + ($23 << 4) + 12 >> 0] = 1;
  HEAP16[$this + 20 + ($23 << 4) + 10 >> 1] = $$0$i1;
  HEAP8[$this + 20 + ($23 << 4) + 4 >> 0] = HEAP8[35768 + (($$0$i1 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 20 + ($23 << 4) + 5 >> 0] = HEAP8[35768 + (($$0$i1 & 65535) >>> 8 & 15) >> 0] | 0;
  $40 = $$0$i1 & 65535;
  HEAP8[$this + 20 + ($23 << 4) + 6 >> 0] = HEAP8[35768 + ($40 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 20 + ($23 << 4) + 7 >> 0] = HEAP8[35768 + ($40 & 15) >> 0] | 0;
  HEAP8[$this + 20 + ($23 << 4) + 8 >> 0] = 0;
  HEAP32[$0 >> 2] = 0;
  $__begin$031 = $__begin$031 + 4 | 0;
  if (($__begin$031 | 0) == 920) {
   label = 2;
   break;
  }
 }
 switch (label | 0) {
 case 2:
  {
   $15 = $3 + 1 | 0;
   $16 = $kc + 65620 | 0;
   $17 = $16 + 1 | 0;
   $18 = $5 + 1 | 0;
   $19 = $6 + 1 | 0;
   $20 = $kc + 65644 | 0;
   $21 = $kc + 65645 | 0;
   $22 = $kc + 65646 | 0;
   $__begin2$030 = 920;
   L34 : while (1) {
    $58 = HEAP32[$__begin2$030 >> 2] | 0;
    $59 = $this + 20 + ($58 << 4) | 0;
    do switch ($58 | 0) {
    case 8:
     {
      label = 53;
      break L34;
      break;
     }
    case 9:
     {
      label = 54;
      break L34;
      break;
     }
    case 10:
     {
      label = 55;
      break L34;
      break;
     }
    case 11:
     {
      label = 56;
      break L34;
      break;
     }
    case 12:
     {
      label = 57;
      break L34;
      break;
     }
    case 13:
     {
      $$0$i5$ph = 35348;
      break L34;
      break;
     }
    case 14:
     {
      label = 44;
      break L34;
      break;
     }
    case 15:
     {
      label = 45;
      break L34;
      break;
     }
    case 18:
     {
      label = 48;
      break L34;
      break;
     }
    case 19:
     {
      label = 49;
      break L34;
      break;
     }
    case 20:
     {
      label = 50;
      break L34;
      break;
     }
    case 21:
     {
      label = 51;
      break L34;
      break;
     }
    case 0:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 42496);
      $$0$in$i3 = $15;
      break;
     }
    case 1:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 36702);
      $$0$in$i3 = $3;
      break;
     }
    case 2:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 42520);
      $$0$in$i3 = $17;
      break;
     }
    case 3:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 36730);
      $$0$in$i3 = $16;
      break;
     }
    case 4:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 36700);
      $$0$in$i3 = $18;
      break;
     }
    case 5:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 36670);
      $$0$in$i3 = $5;
      break;
     }
    case 6:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 36706);
      $$0$in$i3 = $19;
      break;
     }
    case 7:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 36712);
      $$0$in$i3 = $6;
      break;
     }
    case 16:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 41819);
      $$0$in$i3 = $20;
      break;
     }
    case 17:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 36672);
      $$0$in$i3 = $21;
      break;
     }
    case 22:
     {
      __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 35372);
      $$0$in$i3 = $22;
      break;
     }
    default:
     {
      label = 59;
      break L34;
     }
    } while (0);
    $$0$i4 = HEAP8[$$0$in$i3 >> 0] | 0;
    if (($59 | 0) != ($1 | 0)) {
     HEAP32[$59 >> 2] = 0;
     __ZN5Oryol10StringAtom4copyERKS0_($59, $1);
    }
    HEAP8[$this + 20 + ($58 << 4) + 12 >> 0] = 0;
    HEAP16[$this + 20 + ($58 << 4) + 10 >> 1] = $$0$i4 & 255;
    HEAP8[$this + 20 + ($58 << 4) + 4 >> 0] = HEAP8[35768 + (($$0$i4 & 255) >>> 4 & 255) >> 0] | 0;
    HEAP8[$this + 20 + ($58 << 4) + 5 >> 0] = HEAP8[35768 + ($$0$i4 & 15) >> 0] | 0;
    HEAP8[$this + 20 + ($58 << 4) + 6 >> 0] = 0;
    HEAP32[$1 >> 2] = 0;
    $__begin2$030 = $__begin2$030 + 4 | 0;
    if (($__begin2$030 | 0) == 932) {
     label = 32;
     break;
    }
   }
   switch (label | 0) {
   case 32:
    {
     $52 = $this + 388 | 0;
     __ZN5Oryol10StringAtom16setupFromCStringEPKc($2, 35490);
     if (($52 | 0) == ($2 | 0)) {
      $54 = $this + 400 | 0;
      HEAP8[$54 >> 0] = 1;
      $55 = $this + 398 | 0;
      HEAP16[$55 >> 1] = -1;
      $56 = $this + 392 | 0;
      $57 = $this + 396 | 0;
      HEAP8[$56 >> 0] = 70;
      HEAP8[$56 + 1 >> 0] = 70;
      HEAP8[$56 + 2 >> 0] = 70;
      HEAP8[$56 + 3 >> 0] = 70;
      HEAP8[$57 >> 0] = 0;
      STACKTOP = sp;
      return;
     }
     HEAP32[$52 >> 2] = 0;
     __ZN5Oryol10StringAtom4copyERKS0_($52, $2);
     $54 = $this + 400 | 0;
     HEAP8[$54 >> 0] = 1;
     $55 = $this + 398 | 0;
     HEAP16[$55 >> 1] = -1;
     $56 = $this + 392 | 0;
     $57 = $this + 396 | 0;
     HEAP8[$56 >> 0] = 70;
     HEAP8[$56 + 1 >> 0] = 70;
     HEAP8[$56 + 2 >> 0] = 70;
     HEAP8[$56 + 3 >> 0] = 70;
     HEAP8[$57 >> 0] = 0;
     STACKTOP = sp;
     return;
    }
   case 44:
    {
     $$0$i5$ph = 35352;
     break;
    }
   case 45:
    {
     $$0$i5$ph = 35356;
     break;
    }
   case 48:
    {
     $$0$i5$ph = 35360;
     break;
    }
   case 49:
    {
     $$0$i5$ph = 35363;
     break;
    }
   case 50:
    {
     $$0$i5$ph = 35366;
     break;
    }
   case 51:
    {
     $$0$i5$ph = 35369;
     break;
    }
   case 53:
    {
     $$0$i5$ph = 35332;
     break;
    }
   case 54:
    {
     $$0$i5$ph = 35335;
     break;
    }
   case 55:
    {
     $$0$i5$ph = 35338;
     break;
    }
   case 56:
    {
     $$0$i5$ph = 35341;
     break;
    }
   case 57:
    {
     $$0$i5$ph = 35344;
     break;
    }
   case 59:
    {
     __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 102120);
     __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 35375, 210, 35495);
     _abort();
     break;
    }
   }
   __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, $$0$i5$ph);
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 35375, 210, 35495);
   _abort();
   break;
  }
 case 4:
  {
   $$0$i$ph = 36706;
   break;
  }
 case 5:
  {
   $$0$i$ph = 36712;
   break;
  }
 case 14:
  {
   $$0$i$ph = 41819;
   break;
  }
 case 15:
  {
   $$0$i$ph = 36672;
   break;
  }
 case 20:
  {
   $$0$i$ph = 35372;
   break;
  }
 case 21:
  {
   $$0$i$ph = 42496;
   break;
  }
 case 22:
  {
   $$0$i$ph = 36702;
   break;
  }
 case 23:
  {
   $$0$i$ph = 42520;
   break;
  }
 case 24:
  {
   $$0$i$ph = 36730;
   break;
  }
 case 25:
  {
   $$0$i$ph = 36700;
   break;
  }
 case 27:
  {
   __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 102120);
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 35375, 252, 35419);
   _abort();
   break;
  }
 }
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, $$0$i$ph);
 __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 35375, 252, 35419);
 _abort();
}

function __ZN5ImGui11SliderFloatEPKcPfffS1_f($label, $v, $v_min, $v_max, $display_format, $power) {
 $label = $label | 0;
 $v = $v | 0;
 $v_min = +$v_min;
 $v_max = +$v_max;
 $display_format = $display_format | 0;
 $power = +$power;
 var $$1 = 0, $$2 = 0, $$byval_copy = 0, $$display_format = 0, $$lcssa = 0, $$lcssa17 = 0, $$lcssa46 = 0, $$lcssa48 = 0, $$pre$i = 0, $$pre$phi$i$iZ2D = 0, $0 = 0, $103 = 0, $104 = 0.0, $106 = 0.0, $107 = 0, $108 = 0.0, $111 = 0, $113 = 0.0, $114 = 0, $115 = 0, $134 = 0.0, $135 = 0, $136 = 0.0, $139 = 0, $140 = 0.0, $145 = 0, $146 = 0, $15 = 0, $150 = 0, $153 = 0, $157 = 0, $160 = 0, $161 = 0, $163 = 0, $165 = 0, $167 = 0, $189 = 0, $190 = 0, $195 = 0, $196 = 0, $198 = 0.0, $199 = 0.0, $2 = 0, $201 = 0, $207 = 0, $208 = 0.0, $21 = 0, $210 = 0.0, $211 = 0, $212 = 0.0, $215 = 0, $217 = 0.0, $218 = 0, $219 = 0, $23 = 0.0, $238 = 0.0, $239 = 0, $240 = 0.0, $243 = 0, $244 = 0.0, $249 = 0, $250 = 0, $259 = 0.0, $27 = 0.0, $31 = 0.0, $36 = 0, $41 = 0, $43 = 0.0, $46 = 0.0, $47 = 0.0, $51 = 0.0, $53 = 0.0, $55 = 0.0, $58 = 0, $60 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $68 = 0, $71 = 0, $72 = 0, $76 = 0, $78 = 0, $79 = 0.0, $8 = 0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0, $92 = 0, $93 = 0.0, $94 = 0.0, $95 = 0.0, $97 = 0, $id = 0, $label_size$sroa$0$0 = 0.0, $label_size$sroa$6$0 = 0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $text_size$i = 0, $total_bb = 0, $value_buf = 0, $w$0$i = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $$byval_copy = sp + 32 | 0;
 $text_size$i = sp + 16 | 0;
 $id = sp + 48 | 0;
 $total_bb = sp;
 $value_buf = sp + 56 | 0;
 $0 = sp + 40 | 0;
 $2 = HEAP32[38201] | 0;
 HEAP8[$2 + 114 >> 0] = 1;
 if (HEAP8[$2 + 116 >> 0] | 0) {
  $$2 = 0;
  STACKTOP = sp;
  return $$2 | 0;
 }
 $8 = HEAP32[$2 + 424 >> 2] | 0;
 if (($8 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $15 = __Z6ImHashPKvij($label, 0, HEAP32[(HEAP32[$2 + 432 >> 2] | 0) + ($8 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($15 | 0)) HEAP8[152852] = 1;
 HEAP32[$id >> 2] = $15;
 $21 = HEAP32[38201] | 0;
 $23 = +HEAPF32[$21 + 268 >> 2];
 if ($23 < 0.0) {
  __ZN5ImGui19GetContentRegionMaxEv($text_size$i);
  $27 = $23 + (+HEAPF32[$text_size$i >> 2] - (+HEAPF32[$21 + 164 >> 2] - +HEAPF32[$21 + 20 >> 2]));
  $w$0$i = $27 <= 1.0 ? 1.0 : $27;
 } else $w$0$i = $23;
 $31 = +(~~$w$0$i | 0);
 if (($label | 0) == (-1 | 0)) {
  $46 = +HEAPF32[38187];
  label = 15;
 } else {
  $text_display_end$03$i$i = $label;
  L15 : while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     break L15;
     break;
    }
   case 35:
    {
     $36 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$36 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      break L15;
     } else $$pre$phi$i$iZ2D = $36;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    break;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
  $41 = HEAP32[38186] | 0;
  $43 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($label | 0)) {
   $46 = $43;
   label = 15;
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($text_size$i, $41, $43, 3402823466385288598117041.0e14, -1.0, $label, $text_display_end$0$i, 0);
   $47 = +HEAPF32[$text_size$i >> 2];
   if ($47 > 0.0) {
    $51 = $47 - $43 / +HEAPF32[$41 >> 2];
    HEAPF32[$text_size$i >> 2] = $51;
    $53 = $51;
   } else $53 = $47;
   $55 = +(~~($53 + .949999988079071) | 0);
   HEAPF32[$text_size$i >> 2] = $55;
   $label_size$sroa$0$0 = $55;
   $label_size$sroa$6$0 = HEAP32[$text_size$i + 4 >> 2] | 0;
  }
 }
 if ((label | 0) == 15) {
  $label_size$sroa$0$0 = 0.0;
  $label_size$sroa$6$0 = (HEAPF32[tempDoublePtr >> 2] = $46, HEAP32[tempDoublePtr >> 2] | 0);
 }
 $58 = $2 + 164 | 0;
 $60 = 151972;
 $64 = $31 + +HEAPF32[$58 >> 2];
 $65 = +HEAPF32[$2 + 168 >> 2] + ((HEAP32[tempDoublePtr >> 2] = $label_size$sroa$6$0, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[$60 >> 2] * 2.0);
 $66 = $58;
 $68 = HEAP32[$66 >> 2] | 0;
 $71 = HEAP32[$66 + 4 >> 2] | 0;
 $72 = $text_size$i;
 HEAP32[$72 >> 2] = $68;
 HEAP32[$72 + 4 >> 2] = $71;
 $76 = $text_size$i + 8 | 0;
 HEAPF32[$76 >> 2] = $64;
 HEAPF32[$text_size$i + 12 >> 2] = $65;
 $78 = $label_size$sroa$0$0 > 0.0;
 $79 = (HEAP32[tempDoublePtr >> 2] = $71, +HEAPF32[tempDoublePtr >> 2]);
 if ($78) $84 = $label_size$sroa$0$0 + +HEAPF32[37997]; else $84 = 0.0;
 $83 = $84 + $64;
 $85 = $65 + 0.0;
 $86 = $total_bb;
 HEAP32[$86 >> 2] = $68;
 HEAP32[$86 + 4 >> 2] = $71;
 HEAPF32[$total_bb + 8 >> 2] = $83;
 HEAPF32[$total_bb + 12 >> 2] = $85;
 $92 = __ZN5ImGui7ItemAddERK6ImRectPKj($total_bb, $id) | 0;
 $93 = (HEAP32[tempDoublePtr >> 2] = $68, +HEAPF32[tempDoublePtr >> 2]);
 L32 : do if ($92) {
  $145 = HEAP32[$id >> 2] | 0;
  $146 = __ZN5ImGui9IsHoveredERK6ImRectjb($text_size$i, $145, 0) | 0;
  if ($146) {
   HEAP32[38208] = $145;
   HEAP8[152836] = 0;
  }
  $$display_format = ($display_format | 0) == 0 ? 126797 : $display_format;
  $150 = _strchr($$display_format, 37) | 0;
  L37 : do if (!$150) $196 = 3; else {
   $153 = $150;
   while (1) {
    $157 = HEAP8[$153 + 1 >> 0] | 0;
    if ($157 << 24 >> 24 != 37) {
     $$lcssa46 = $153;
     $$lcssa48 = $157;
     break;
    }
    $153 = _strchr($153 + 2 | 0, 37) | 0;
    if (!$153) {
     $196 = 3;
     break L37;
    }
   }
   $160 = $$lcssa46 + 2 | 0;
   if (($$lcssa48 + -48 & 255) < 10) {
    $161 = $160;
    while (1) {
     $$pre$i = HEAP8[$161 >> 0] | 0;
     $163 = $161 + 1 | 0;
     if (($$pre$i + -48 & 255) < 10) $161 = $163; else {
      $$lcssa = $$pre$i;
      $$lcssa17 = $163;
      break;
     }
    }
   } else {
    $$lcssa = $$lcssa48;
    $$lcssa17 = $160;
   }
   if ($$lcssa << 24 >> 24 == 46) {
    $165 = _atoi($$lcssa17) | 0;
    $196 = $165 >>> 0 > 10 ? 3 : $165;
   } else $196 = 3;
  } while (0);
  $167 = 152844;
  do if (__ZN5ImGui21FocusableItemRegisterEP11ImGuiWindowbb($2, (HEAP32[$167 >> 2] | 0) == (HEAP32[$id >> 2] | 0), 1) | 0) {
   HEAP32[38211] = HEAP32[$id >> 2];
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = $2;
   __ZN5ImGui11FocusWindowEP11ImGuiWindow($2);
   label = 38;
  } else {
   if ($146) if (HEAP8[147696] | 0) {
    HEAP32[38211] = HEAP32[$id >> 2];
    HEAP8[152854] = 0;
    HEAP8[152853] = 1;
    HEAP32[38214] = $2;
    __ZN5ImGui11FocusWindowEP11ImGuiWindow($2);
    if (HEAP8[147105] | 0) {
     label = 38;
     break;
    }
   }
   $189 = HEAP32[$167 >> 2] | 0;
   $190 = HEAP32[$id >> 2] | 0;
   if (($189 | 0) == ($190 | 0)) if ((HEAP32[39224] | 0) == ($189 | 0)) {
    $195 = $189;
    break;
   }
   $198 = +HEAPF32[$60 >> 2];
   $199 = $85 - $79;
   $201 = HEAP32[38201] | 0;
   HEAP8[$201 + 114 >> 0] = 1;
   if (!(HEAP8[$201 + 116 >> 0] | 0)) {
    $207 = $201 + 196 | 0;
    $208 = +HEAPF32[$207 >> 2];
    $210 = $208 >= $199 ? $208 : $199;
    $211 = $201 + 200 | 0;
    $212 = +HEAPF32[$211 >> 2];
    $215 = $201 + 164 | 0;
    $217 = $83 - $93 + +HEAPF32[$215 >> 2];
    $218 = $201 + 168 | 0;
    $219 = HEAP32[$218 >> 2] | 0;
    HEAPF32[$201 + 172 >> 2] = $217;
    HEAP32[$201 + 176 >> 2] = $219;
    $238 = +(~~($210 + (HEAP32[tempDoublePtr >> 2] = $219, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
    HEAPF32[$215 >> 2] = +(~~(+HEAPF32[$201 + 20 >> 2] + +HEAPF32[$201 + 368 >> 2] + +HEAPF32[$201 + 372 >> 2]) | 0);
    HEAPF32[$218 >> 2] = $238;
    $239 = $201 + 188 | 0;
    $240 = +HEAPF32[$239 >> 2];
    HEAPF32[$239 >> 2] = $240 >= $217 ? $240 : $217;
    $243 = $201 + 192 | 0;
    $244 = +HEAPF32[$243 >> 2];
    HEAPF32[$243 >> 2] = $244 >= $238 ? $244 : $238;
    HEAPF32[$201 + 204 >> 2] = $210;
    HEAPF32[$201 + 208 >> 2] = $212 >= $198 ? $212 : $198;
    HEAPF32[$211 >> 2] = 0.0;
    HEAPF32[$207 >> 2] = 0.0;
    $249 = HEAP32[$id >> 2] | 0;
   } else $249 = $190;
   $250 = __ZN5ImGui14SliderBehaviorERK6ImRectjPffffii($text_size$i, $249, $v, $v_min, $v_max, $power, $196, 0) | 0;
   HEAPF64[$$byval_copy >> 3] = +HEAPF32[$v >> 2];
   __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($text_size$i, $76, $value_buf, $value_buf + (__Z14ImFormatStringPciPKcz($value_buf, 64, $$display_format, $$byval_copy) | 0) | 0, 0, 18, 0, 0);
   if ($78) {
    $259 = $79 + +HEAPF32[$60 >> 2];
    HEAPF32[$0 >> 2] = $64 + +HEAPF32[37997];
    HEAPF32[$0 + 4 >> 2] = $259;
    HEAP32[$$byval_copy >> 2] = HEAP32[$0 >> 2];
    HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
    __ZN5ImGui10RenderTextE6ImVec2PKcS2_b($$byval_copy, $label, 0, 1);
   }
   $$1 = $250;
   break L32;
  } while (0);
  if ((label | 0) == 38) {
   HEAP32[39224] = 0;
   $195 = HEAP32[$id >> 2] | 0;
  }
  $$1 = __ZN5ImGui30InputScalarAsWidgetReplacementERK6ImRectPKc13ImGuiDataTypePvji($text_size$i, $label, 1, $v, $195, $196) | 0;
 } else {
  $94 = +HEAPF32[$60 >> 2];
  $95 = $85 - $79;
  $97 = HEAP32[38201] | 0;
  HEAP8[$97 + 114 >> 0] = 1;
  if (!(HEAP8[$97 + 116 >> 0] | 0)) {
   $103 = $97 + 196 | 0;
   $104 = +HEAPF32[$103 >> 2];
   $106 = $104 >= $95 ? $104 : $95;
   $107 = $97 + 200 | 0;
   $108 = +HEAPF32[$107 >> 2];
   $111 = $97 + 164 | 0;
   $113 = $83 - $93 + +HEAPF32[$111 >> 2];
   $114 = $97 + 168 | 0;
   $115 = HEAP32[$114 >> 2] | 0;
   HEAPF32[$97 + 172 >> 2] = $113;
   HEAP32[$97 + 176 >> 2] = $115;
   $134 = +(~~($106 + (HEAP32[tempDoublePtr >> 2] = $115, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
   HEAPF32[$111 >> 2] = +(~~(+HEAPF32[$97 + 20 >> 2] + +HEAPF32[$97 + 368 >> 2] + +HEAPF32[$97 + 372 >> 2]) | 0);
   HEAPF32[$114 >> 2] = $134;
   $135 = $97 + 188 | 0;
   $136 = +HEAPF32[$135 >> 2];
   HEAPF32[$135 >> 2] = $136 >= $113 ? $136 : $113;
   $139 = $97 + 192 | 0;
   $140 = +HEAPF32[$139 >> 2];
   HEAPF32[$139 >> 2] = $140 >= $134 ? $140 : $134;
   HEAPF32[$97 + 204 >> 2] = $106;
   HEAPF32[$97 + 208 >> 2] = $108 >= $94 ? $108 : $94;
   HEAPF32[$107 >> 2] = 0.0;
   HEAPF32[$103 >> 2] = 0.0;
   $$1 = 0;
  } else $$1 = 0;
 } while (0);
 $$2 = $$1;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN15MemoryMapWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $104 = 0, $116 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $126 = 0, $129 = 0, $133 = 0, $136 = 0, $137 = 0, $138 = 0, $142 = 0, $143 = 0, $145 = 0, $150 = 0, $156 = 0, $168 = 0, $18 = 0, $19 = 0, $20 = 0, $25 = 0, $30 = 0, $31 = 0, $37 = 0, $39 = 0, $40 = 0, $44 = 0, $46 = 0, $47 = 0, $53 = 0, $59 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $74 = 0, $77 = 0, $81 = 0, $84 = 0, $85 = 0, $86 = 0, $90 = 0, $91 = 0, $93 = 0, $98 = 0, $__begin$0$$0$lcssa$i = 0, $__begin$0$$0$lcssa$i$1 = 0, $__begin$0$$0$lcssa$i$i$i = 0, $__begin$0$$0$lcssa$i$i$i$1 = 0, $addr$010 = 0, $addr$010$1 = 0, $layer$014 = 0, $len2$011 = 0, $len2$011$1 = 0, $ram8_0$0 = 0, $ram8_1$0 = 0, $strBuilder = 0, $t$0 = 0, $t$0$1 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $strBuilder = sp + 40 | 0;
 $0 = sp + 32 | 0;
 __ZN5Oryol13StringBuilderC2Ev($strBuilder);
 if (!(HEAP8[146456] | 0)) if (___cxa_guard_acquire(146456) | 0) {
  HEAPF32[36666] = .25;
  HEAPF32[36667] = .25;
  HEAPF32[36668] = .25;
  HEAPF32[36669] = 1.0;
 }
 if (!(HEAP8[146464] | 0)) if (___cxa_guard_acquire(146464) | 0) {
  HEAPF32[36670] = 0.0;
  HEAPF32[36671] = 1.0;
  HEAPF32[36672] = 0.0;
  HEAPF32[36673] = 1.0;
 }
 if (!(HEAP8[146472] | 0)) if (___cxa_guard_acquire(146472) | 0) {
  HEAPF32[36674] = 0.0;
  HEAPF32[36675] = .5;
  HEAPF32[36676] = 0.0;
  HEAPF32[36677] = 1.0;
 }
 if (!(HEAP8[146480] | 0)) if (___cxa_guard_acquire(146480) | 0) {
  HEAPF32[36678] = 12.0;
  HEAPF32[36679] = 0.0;
 }
 $18 = HEAP32[$kc + 725496 >> 2] | 0;
 $19 = ($18 | 0) == 4;
 $20 = ($18 | 0) == 1;
 HEAPF32[$0 >> 2] = 512.0;
 HEAPF32[$0 + 4 >> 2] = $19 ? 220.0 : 120.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 1);
 $25 = $this + 8 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $25, 130) | 0)) {
  __ZN5ImGui3EndEv();
  $121 = HEAP8[$25 >> 0] | 0;
  $122 = $121 << 24 >> 24 != 0;
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return $122 | 0;
 }
 __ZN15MemoryMapWindow8drawGridEb(0, $19);
 $30 = HEAP8[$kc + 69263 >> 0] | 0;
 $31 = HEAPU8[$kc + 69262 >> 0] | 0;
 __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 0, 0, 16384, 35026, $31 >>> 1 & 1);
 if ($19) __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 0, 16384, 16384, 35032, HEAP8[$kc + 725461 >> 0] & 1);
 $37 = $31 & 4;
 do if (!$37) {
  __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 0, -32768, 16384, 35045, 0);
  if ($19) {
   HEAP32[$vararg_buffer1 >> 2] = 1;
   __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 35038, $vararg_buffer1) | 0;
   __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 1, -32768, 10240, __ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0);
   HEAP32[$vararg_buffer4 >> 2] = 2;
   __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 35038, $vararg_buffer4) | 0;
   __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 2, -32768, 10240, __ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0);
   HEAP32[$vararg_buffer7 >> 2] = 3;
   __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 35038, $vararg_buffer7) | 0;
   __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 3, -32768, 10240, __ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0);
   label = 28;
  }
 } else {
  if (!$19) {
   __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 0, -32768, 16384, 35051, 1);
   break;
  }
  $39 = $kc + 725460 | 0;
  $layer$014 = 0;
  while (1) {
   $40 = ($layer$014 | 0) == 0;
   $44 = (HEAPU8[$39 >> 0] | 0) >>> 1 & 3;
   HEAP32[$vararg_buffer >> 2] = $layer$014;
   __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 35038, $vararg_buffer) | 0;
   $46 = $40 ? 16384 : 10240;
   $47 = __ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0;
   if (($layer$014 | 0) == ($44 | 0)) __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, $layer$014, -32768, $46, $47, 1); else {
    __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, $layer$014, -32768, $46, $47, 0);
    if ($40) {
     __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 0, -22528, 6144, 35045, 1);
     $layer$014 = 1;
     continue;
    }
   }
   $layer$014 = $layer$014 + 1 | 0;
   if (($layer$014 | 0) == 4) break;
  }
  if ($19) label = 28;
 } while (0);
 if ((label | 0) == 28) {
  $53 = ($37 >>> 2) + 1 | 0;
  if (!($30 & 32)) {
   $ram8_0$0 = 0;
   $ram8_1$0 = 0;
  } else {
   $59 = (HEAP8[$kc + 725460 >> 0] & 16) == 0;
   $ram8_0$0 = $59 ? $53 : 0;
   $ram8_1$0 = $59 ? 0 : $53;
  }
  __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 4, -32768, 16384, 35055, $ram8_0$0);
  __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 5, -32768, 16384, 35065, $ram8_1$0);
 }
 if (!$20) __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 0, -16384, 8192, 35075, $31 >>> 7);
 if ($19) __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 1, -16384, 4096, 35085, (HEAPU8[$kc + 725461 >> 0] | 0) >>> 7 & 255);
 __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, 0, -8192, 8192, 35096, $31 & 1);
 $64 = $kc + 463128 | 0;
 $65 = $19 ? 5 : 0;
 $66 = $kc + 463128 | 0;
 $67 = $kc + 463168 | 0;
 $68 = $kc + 463168 | 0;
 $69 = HEAP8[$64 >> 0] | 0;
 $70 = $69 << 24 >> 24 == 8;
 if ($70) $74 = 0; else if ((HEAP8[$68 >> 0] | 0) == 8) $74 = 1; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 do if ((HEAP8[$kc + 463128 + ($74 * 40 | 0) + 12 >> 0] | 0) == -1) $120 = $69; else {
  $77 = $65 + 1 | 0;
  if ($70) $__begin$0$$0$lcssa$i = $66; else if ((HEAP8[$67 >> 0] | 0) == 8) $__begin$0$$0$lcssa$i = $67; else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
   _abort();
  }
  $81 = HEAP32[$__begin$0$$0$lcssa$i + 28 >> 2] | 0;
  if (!$81) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(35107, 0, 35129, 193, 35181);
   _abort();
  }
  $84 = HEAP32[$__begin$0$$0$lcssa$i + 36 >> 2] | 0;
  $85 = $84 & 65535;
  $86 = $85 + $81 | 0;
  if ($85 >>> 0 < $86 >>> 0) {
   $90 = $__begin$0$$0$lcssa$i + 38 | 0;
   $91 = $__begin$0$$0$lcssa$i + 16 | 0;
   $93 = $84 >>> 16 & 255;
   $addr$010 = $85;
   $len2$011 = $81;
   while (1) {
    if (!($93 & 1)) $t$0 = 0; else {
     $98 = HEAP32[$kc + 66932 + (($addr$010 >>> 11 & 31) << 3) >> 2] | 0;
     if ((HEAP8[$66 >> 0] | 0) == 8) $__begin$0$$0$lcssa$i$i$i = $66; else if ((HEAP8[$67 >> 0] | 0) == 8) $__begin$0$$0$lcssa$i$i$i = $67; else {
      label = 49;
      break;
     }
     $104 = HEAP32[$__begin$0$$0$lcssa$i$i$i + 24 >> 2] | 0;
     if (($104 | 0) == 0 | $104 >>> 0 > $98 >>> 0) $t$0 = 2; else $t$0 = ($104 + (HEAP32[$__begin$0$$0$lcssa$i$i$i + 28 >> 2] | 0) | 0) >>> 0 > $98 >>> 0 ? 1 : 2;
    }
    __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, $77, $addr$010 & 65535, $len2$011 >>> 0 > 16383 ? 16384 : $len2$011 & 16383, HEAP32[$91 >> 2] | 0, $t$0);
    $116 = $addr$010 + 16384 | 0;
    if ($116 >>> 0 >= $86 >>> 0) {
     label = 54;
     break;
    }
    $93 = HEAP8[$90 >> 0] | 0;
    $addr$010 = $116;
    $len2$011 = $len2$011 + -16384 | 0;
   }
   if ((label | 0) == 49) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
    _abort();
   } else if ((label | 0) == 54) {
    $120 = HEAP8[$64 >> 0] | 0;
    break;
   }
  } else $120 = $69;
 } while (0);
 $119 = $120 << 24 >> 24 == 12;
 if ($119) $126 = 0; else if ((HEAP8[$68 >> 0] | 0) == 12) $126 = 1; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 if ((HEAP8[$kc + 463128 + ($126 * 40 | 0) + 12 >> 0] | 0) == -1) {
  __ZN5ImGui3EndEv();
  $121 = HEAP8[$25 >> 0] | 0;
  $122 = $121 << 24 >> 24 != 0;
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return $122 | 0;
 }
 $129 = $65 | 2;
 if ($119) $__begin$0$$0$lcssa$i$1 = $66; else if ((HEAP8[$67 >> 0] | 0) == 12) $__begin$0$$0$lcssa$i$1 = $67; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 $133 = HEAP32[$__begin$0$$0$lcssa$i$1 + 28 >> 2] | 0;
 if (!$133) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(35107, 0, 35129, 193, 35181);
  _abort();
 }
 $136 = HEAP32[$__begin$0$$0$lcssa$i$1 + 36 >> 2] | 0;
 $137 = $136 & 65535;
 $138 = $137 + $133 | 0;
 if ($137 >>> 0 >= $138 >>> 0) {
  __ZN5ImGui3EndEv();
  $121 = HEAP8[$25 >> 0] | 0;
  $122 = $121 << 24 >> 24 != 0;
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return $122 | 0;
 }
 $142 = $__begin$0$$0$lcssa$i$1 + 38 | 0;
 $143 = $__begin$0$$0$lcssa$i$1 + 16 | 0;
 $145 = $136 >>> 16 & 255;
 $addr$010$1 = $137;
 $len2$011$1 = $133;
 L95 : while (1) {
  do if (!($145 & 1)) $t$0$1 = 0; else {
   $150 = HEAP32[$kc + 66932 + (($addr$010$1 >>> 11 & 31) << 3) >> 2] | 0;
   if ((HEAP8[$66 >> 0] | 0) == 12) $__begin$0$$0$lcssa$i$i$i$1 = $66; else if ((HEAP8[$67 >> 0] | 0) == 12) $__begin$0$$0$lcssa$i$i$i$1 = $67; else {
    label = 49;
    break L95;
   }
   $156 = HEAP32[$__begin$0$$0$lcssa$i$i$i$1 + 24 >> 2] | 0;
   if (($156 | 0) == 0 | $156 >>> 0 > $150 >>> 0) {
    $t$0$1 = 2;
    break;
   }
   $t$0$1 = ($156 + (HEAP32[$__begin$0$$0$lcssa$i$i$i$1 + 28 >> 2] | 0) | 0) >>> 0 > $150 >>> 0 ? 1 : 2;
  } while (0);
  __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE(0, $129, $addr$010$1 & 65535, $len2$011$1 >>> 0 > 16383 ? 16384 : $len2$011$1 & 16383, HEAP32[$143 >> 2] | 0, $t$0$1);
  $168 = $addr$010$1 + 16384 | 0;
  if ($168 >>> 0 >= $138 >>> 0) {
   label = 56;
   break;
  }
  $145 = HEAP8[$142 >> 0] | 0;
  $addr$010$1 = $168;
  $len2$011$1 = $len2$011$1 + -16384 | 0;
 }
 if ((label | 0) == 49) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 } else if ((label | 0) == 56) {
  __ZN5ImGui3EndEv();
  $121 = HEAP8[$25 >> 0] | 0;
  $122 = $121 << 24 >> 24 != 0;
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return $122 | 0;
 }
 return 0;
}

function __ZN4yakc13kc85_snapshot13take_snapshotERKNS_4kc85ERNS0_7state_tE($kc, $state) {
 $kc = $kc | 0;
 $state = $state | 0;
 var $0 = 0, $108 = 0, $11 = 0, $119 = 0, $12 = 0, $126 = 0, $127 = 0, $14 = 0, $141 = 0, $15 = 0, $17 = 0, $18 = 0, $180 = 0, $194 = 0, $195 = 0, $197 = 0, $2 = 0, $20 = 0, $208 = 0, $209 = 0, $21 = 0, $211 = 0, $218 = 0, $23 = 0, $24 = 0, $247 = 0, $248 = 0, $250 = 0, $254 = 0, $26 = 0, $263 = 0, $267 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $49 = 0, $5 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $94 = 0, $__begin$0$$0$lcssa$i$i$i = 0, $__begin$0$$0$lcssa$i$i1$i = 0, $c$01$i = 0;
 _memset($state | 0, 0, 262328) | 0;
 HEAP8[$state >> 0] = 67;
 HEAP8[$state + 1 >> 0] = 75;
 HEAP8[$state + 2 >> 0] = 65;
 HEAP8[$state + 3 >> 0] = 89;
 $0 = $state + 4 | 0;
 HEAP8[$0 >> 0] = 1;
 HEAP8[$0 + 1 >> 0] = 0;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 0;
 $2 = HEAP32[$kc + 65536 >> 2] | 0;
 $3 = $state + 8 | 0;
 HEAP8[$3 >> 0] = $2;
 HEAP8[$3 + 1 >> 0] = $2 >> 8;
 HEAP8[$3 + 2 >> 0] = $2 >> 16;
 HEAP8[$3 + 3 >> 0] = $2 >> 24;
 $5 = HEAP32[$kc + 65540 >> 2] | 0;
 $6 = $state + 12 | 0;
 HEAP8[$6 >> 0] = $5;
 HEAP8[$6 + 1 >> 0] = $5 >> 8;
 HEAP8[$6 + 2 >> 0] = $5 >> 16;
 HEAP8[$6 + 3 >> 0] = $5 >> 24;
 $8 = HEAP32[$kc + 65544 >> 2] | 0;
 $9 = $state + 16 | 0;
 HEAP8[$9 >> 0] = $8;
 HEAP8[$9 + 1 >> 0] = $8 >> 8;
 HEAP8[$9 + 2 >> 0] = $8 >> 16;
 HEAP8[$9 + 3 >> 0] = $8 >> 24;
 $11 = HEAP32[$kc + 65548 >> 2] | 0;
 $12 = $state + 20 | 0;
 HEAP8[$12 >> 0] = $11;
 HEAP8[$12 + 1 >> 0] = $11 >> 8;
 HEAP8[$12 + 2 >> 0] = $11 >> 16;
 HEAP8[$12 + 3 >> 0] = $11 >> 24;
 $14 = HEAP32[$kc + 65560 >> 2] | 0;
 $15 = $state + 24 | 0;
 HEAP8[$15 >> 0] = $14;
 HEAP8[$15 + 1 >> 0] = $14 >> 8;
 HEAP8[$15 + 2 >> 0] = $14 >> 16;
 HEAP8[$15 + 3 >> 0] = $14 >> 24;
 $17 = HEAP32[$kc + 65564 >> 2] | 0;
 $18 = $state + 28 | 0;
 HEAP8[$18 >> 0] = $17;
 HEAP8[$18 + 1 >> 0] = $17 >> 8;
 HEAP8[$18 + 2 >> 0] = $17 >> 16;
 HEAP8[$18 + 3 >> 0] = $17 >> 24;
 $20 = HEAP32[$kc + 65568 >> 2] | 0;
 $21 = $state + 32 | 0;
 HEAP8[$21 >> 0] = $20;
 HEAP8[$21 + 1 >> 0] = $20 >> 8;
 HEAP8[$21 + 2 >> 0] = $20 >> 16;
 HEAP8[$21 + 3 >> 0] = $20 >> 24;
 $23 = HEAP32[$kc + 65580 >> 2] | 0;
 $24 = $state + 36 | 0;
 HEAP8[$24 >> 0] = $23;
 HEAP8[$24 + 1 >> 0] = $23 >> 8;
 HEAP8[$24 + 2 >> 0] = $23 >> 16;
 HEAP8[$24 + 3 >> 0] = $23 >> 24;
 $26 = HEAP32[$kc + 65584 >> 2] | 0;
 $27 = $state + 40 | 0;
 HEAP8[$27 >> 0] = $26;
 HEAP8[$27 + 1 >> 0] = $26 >> 8;
 HEAP8[$27 + 2 >> 0] = $26 >> 16;
 HEAP8[$27 + 3 >> 0] = $26 >> 24;
 $29 = HEAP32[$kc + 65588 >> 2] | 0;
 $30 = $state + 44 | 0;
 HEAP8[$30 >> 0] = $29;
 HEAP8[$30 + 1 >> 0] = $29 >> 8;
 HEAP8[$30 + 2 >> 0] = $29 >> 16;
 HEAP8[$30 + 3 >> 0] = $29 >> 24;
 $32 = HEAP32[$kc + 65600 >> 2] | 0;
 $33 = $state + 48 | 0;
 HEAP8[$33 >> 0] = $32;
 HEAP8[$33 + 1 >> 0] = $32 >> 8;
 HEAP8[$33 + 2 >> 0] = $32 >> 16;
 HEAP8[$33 + 3 >> 0] = $32 >> 24;
 $35 = HEAP32[$kc + 65604 >> 2] | 0;
 $36 = $state + 52 | 0;
 HEAP8[$36 >> 0] = $35;
 HEAP8[$36 + 1 >> 0] = $35 >> 8;
 HEAP8[$36 + 2 >> 0] = $35 >> 16;
 HEAP8[$36 + 3 >> 0] = $35 >> 24;
 $38 = HEAP32[$kc + 65608 >> 2] | 0;
 $39 = $state + 56 | 0;
 HEAP8[$39 >> 0] = $38;
 HEAP8[$39 + 1 >> 0] = $38 >> 8;
 HEAP8[$39 + 2 >> 0] = $38 >> 16;
 HEAP8[$39 + 3 >> 0] = $38 >> 24;
 HEAP8[$state + 60 >> 0] = HEAP32[$kc + 725496 >> 2];
 HEAP8[$state + 61 >> 0] = HEAP32[$kc + 725500 >> 2];
 $49 = HEAP16[$kc + 725460 >> 1] | 0;
 HEAP8[$state + 62 >> 0] = $49;
 HEAP8[$state + 63 >> 0] = ($49 & 65535) >>> 8;
 $56 = HEAP16[$kc + 65626 >> 1] | 0;
 $57 = $state + 64 | 0;
 HEAP8[$57 >> 0] = $56;
 HEAP8[$57 + 1 >> 0] = $56 >> 8;
 $59 = HEAP16[$kc + 65620 >> 1] | 0;
 $60 = $state + 66 | 0;
 HEAP8[$60 >> 0] = $59;
 HEAP8[$60 + 1 >> 0] = $59 >> 8;
 $62 = HEAP16[$kc + 65622 >> 1] | 0;
 $63 = $state + 68 | 0;
 HEAP8[$63 >> 0] = $62;
 HEAP8[$63 + 1 >> 0] = $62 >> 8;
 $65 = HEAP16[$kc + 65624 >> 1] | 0;
 $66 = $state + 70 | 0;
 HEAP8[$66 >> 0] = $65;
 HEAP8[$66 + 1 >> 0] = $65 >> 8;
 $68 = HEAP32[$kc + 65640 >> 2] | 0;
 $69 = $68 & 65535;
 $70 = $state + 72 | 0;
 HEAP8[$70 >> 0] = $69;
 HEAP8[$70 + 1 >> 0] = $69 >> 8;
 $72 = HEAP16[$kc + 65634 >> 1] | 0;
 $73 = $state + 74 | 0;
 HEAP8[$73 >> 0] = $72;
 HEAP8[$73 + 1 >> 0] = $72 >> 8;
 $75 = HEAP32[$kc + 65636 >> 2] | 0;
 $76 = $75 & 65535;
 $77 = $state + 76 | 0;
 HEAP8[$77 >> 0] = $76;
 HEAP8[$77 + 1 >> 0] = $76 >> 8;
 $79 = $75 >>> 16 & 65535;
 $80 = $state + 78 | 0;
 HEAP8[$80 >> 0] = $79;
 HEAP8[$80 + 1 >> 0] = $79 >> 8;
 $82 = HEAP16[$kc + 65628 >> 1] | 0;
 $83 = $state + 80 | 0;
 HEAP8[$83 >> 0] = $82;
 HEAP8[$83 + 1 >> 0] = $82 >> 8;
 $85 = HEAP16[$kc + 65630 >> 1] | 0;
 $86 = $state + 82 | 0;
 HEAP8[$86 >> 0] = $85;
 HEAP8[$86 + 1 >> 0] = $85 >> 8;
 $88 = HEAP16[$kc + 65632 >> 1] | 0;
 $89 = $state + 84 | 0;
 HEAP8[$89 >> 0] = $88;
 HEAP8[$89 + 1 >> 0] = $88 >> 8;
 $91 = $68 >>> 16 & 65535;
 $92 = $state + 86 | 0;
 HEAP8[$92 >> 0] = $91;
 HEAP8[$92 + 1 >> 0] = $91 >> 8;
 $94 = HEAP32[$kc + 65644 >> 2] | 0;
 HEAP8[$state + 88 >> 0] = $94;
 HEAP8[$state + 89 >> 0] = ($94 & 65535) >>> 8;
 HEAP8[$state + 90 >> 0] = $94 >>> 16;
 HEAP8[$state + 91 >> 0] = $94 >>> 24;
 $108 = HEAP32[$kc + 65648 >> 2] | 0;
 HEAP8[$state + 92 >> 0] = $108;
 HEAP8[$state + 93 >> 0] = ($108 & 65535) >>> 8;
 HEAP8[$state + 94 >> 0] = $108 >>> 16;
 $119 = HEAP16[$kc + 69252 >> 1] | 0;
 HEAP8[$state + 95 >> 0] = $119;
 HEAP8[$state + 96 >> 0] = ($119 & 65535) >>> 8;
 $c$01$i = 0;
 do {
  $126 = HEAP32[$kc + 69284 + ($c$01$i * 48 | 0) + 4 >> 2] | 0;
  $127 = $state + 100 + ($c$01$i * 12 | 0) | 0;
  HEAP8[$127 >> 0] = $126;
  HEAP8[$127 + 1 >> 0] = $126 >> 8;
  HEAP8[$127 + 2 >> 0] = $126 >> 16;
  HEAP8[$127 + 3 >> 0] = $126 >> 24;
  HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 4 >> 0] = HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) >> 0] | 0;
  HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 5 >> 0] = HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 1 >> 0] | 0;
  HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 6 >> 0] = HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 8 >> 0] | 0;
  HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 7 >> 0] = HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 9 >> 0] | 0;
  $141 = HEAP32[$kc + 69284 + ($c$01$i * 48 | 0) + 28 >> 2] | 0;
  HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 8 >> 0] = $141;
  HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 9 >> 0] = ($141 & 65535) >>> 8;
  HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 10 >> 0] = $141 >>> 16;
  HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 11 >> 0] = $141 >>> 24;
  $c$01$i = $c$01$i + 1 | 0;
 } while (($c$01$i | 0) != 4);
 HEAP8[$state + 148 >> 0] = HEAP8[$kc + 69256 >> 0] | 0;
 HEAP8[$state + 149 >> 0] = HEAP8[$kc + 69257 >> 0] | 0;
 HEAP8[$state + 150 >> 0] = HEAP8[$kc + 69258 >> 0] | 0;
 HEAP8[$state + 151 >> 0] = HEAP8[$kc + 69262 >> 0] | 0;
 HEAP8[$state + 152 >> 0] = HEAP8[$kc + 69259 >> 0] | 0;
 HEAP8[$state + 153 >> 0] = HEAP8[$kc + 69260 >> 0] | 0;
 HEAP8[$state + 154 >> 0] = HEAP8[$kc + 69261 >> 0] | 0;
 HEAP8[$state + 155 >> 0] = HEAP8[$kc + 69263 >> 0] | 0;
 $180 = HEAP32[$kc + 69264 >> 2] | 0;
 HEAP8[$state + 156 >> 0] = $180;
 HEAP8[$state + 157 >> 0] = ($180 & 65535) >>> 8;
 HEAP8[$state + 158 >> 0] = $180 >>> 16;
 HEAP8[$state + 159 >> 0] = $180 >>> 24;
 $194 = HEAP16[$kc + 462700 >> 1] | 0;
 $195 = $state + 160 | 0;
 HEAP8[$195 >> 0] = $194;
 HEAP8[$195 + 1 >> 0] = $194 >> 8;
 $197 = HEAP32[$kc + 462696 >> 2] | 0;
 HEAP8[$state + 162 >> 0] = $197;
 HEAP8[$state + 163 >> 0] = ($197 & 65535) >>> 8;
 HEAP8[$state + 164 >> 0] = $197 >>> 16;
 $208 = HEAP32[$kc + 462848 >> 2] | 0;
 $209 = $state + 168 | 0;
 HEAP8[$209 >> 0] = $208;
 HEAP8[$209 + 1 >> 0] = $208 >> 8;
 HEAP8[$209 + 2 >> 0] = $208 >> 16;
 HEAP8[$209 + 3 >> 0] = $208 >> 24;
 $211 = HEAP16[$kc + 462868 >> 1] | 0;
 HEAP8[$state + 172 >> 0] = $211;
 HEAP8[$state + 173 >> 0] = ($211 & 65535) >>> 8;
 $218 = HEAP16[$kc + 462870 >> 1] | 0;
 HEAP8[$state + 174 >> 0] = $218;
 HEAP8[$state + 175 >> 0] = ($218 & 65535) >>> 8;
 HEAP8[$state + 176 >> 0] = HEAP8[$kc + 463128 >> 0] | 0;
 HEAP8[$state + 177 >> 0] = HEAP32[$kc + 463136 >> 2];
 HEAP8[$state + 178 >> 0] = HEAP8[$kc + 463166 >> 0] | 0;
 HEAP8[$state + 180 >> 0] = HEAP8[$kc + 463168 >> 0] | 0;
 HEAP8[$state + 181 >> 0] = HEAP32[$kc + 463176 >> 2];
 HEAP8[$state + 182 >> 0] = HEAP8[$kc + 463206 >> 0] | 0;
 _memcpy($state + 184 | 0, $kc | 0, 65536) | 0;
 _memcpy($state + 65720 | 0, $kc + 69476 | 0, 65536) | 0;
 $247 = $kc + 463128 | 0;
 $248 = HEAP8[$247 >> 0] | 0;
 $250 = $kc + 463168 | 0;
 if ($248 << 24 >> 24 == 8) $__begin$0$$0$lcssa$i$i$i = $247; else if ((HEAP8[$250 >> 0] | 0) == 8) $__begin$0$$0$lcssa$i$i$i = $250; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 $254 = HEAP32[$__begin$0$$0$lcssa$i$i$i + 24 >> 2] | 0;
 if (!$254) $263 = $248; else if (!(HEAP8[$__begin$0$$0$lcssa$i$i$i + 33 >> 0] | 0)) $263 = $248; else {
  _memcpy($state + 131256 | 0, $254 | 0, HEAP32[$__begin$0$$0$lcssa$i$i$i + 28 >> 2] | 0) | 0;
  $263 = HEAP8[$247 >> 0] | 0;
 }
 if ($263 << 24 >> 24 == 12) $__begin$0$$0$lcssa$i$i1$i = $247; else if ((HEAP8[$250 >> 0] | 0) == 12) $__begin$0$$0$lcssa$i$i1$i = $250; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 $267 = HEAP32[$__begin$0$$0$lcssa$i$i1$i + 24 >> 2] | 0;
 if (!$267) return;
 if (!(HEAP8[$__begin$0$$0$lcssa$i$i1$i + 33 >> 0] | 0)) return;
 _memcpy($state + 196792 | 0, $267 | 0, HEAP32[$__begin$0$$0$lcssa$i$i1$i + 28 >> 2] | 0) | 0;
 return;
}

function __ZN5Oryol5_priv13glMeshFactory10setupAttrsERNS0_4meshE($this, $msh) {
 $this = $this | 0;
 $msh = $msh | 0;
 var $0 = 0, $1 = 0, $10 = 0, $104 = 0, $110 = 0, $116 = 0, $12 = 0, $122 = 0, $128 = 0, $13 = 0, $134 = 0, $140 = 0, $146 = 0, $15 = 0, $150 = 0, $151 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $199 = 0, $205 = 0, $21 = 0, $211 = 0, $217 = 0, $22 = 0, $223 = 0, $229 = 0, $235 = 0, $24 = 0, $241 = 0, $247 = 0, $25 = 0, $253 = 0, $259 = 0, $265 = 0, $27 = 0, $271 = 0, $277 = 0, $28 = 0, $283 = 0, $289 = 0, $290 = 0, $296 = 0, $298 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $51 = 0, $52 = 0, $56 = 0, $62 = 0, $68 = 0, $7 = 0, $74 = 0, $80 = 0, $86 = 0, $9 = 0, $92 = 0, $98 = 0, $vbAttrs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vbAttrs = sp;
 HEAP32[$vbAttrs >> 2] = 0;
 $0 = $vbAttrs + 4 | 0;
 __ZN5Oryol12VertexLayoutC2Ev($0);
 $1 = $vbAttrs + 72 | 0;
 HEAP32[$1 >> 2] = -1;
 HEAP32[$vbAttrs >> 2] = HEAP32[$msh + 92 >> 2];
 $4 = $msh + 24 | 0;
 HEAP16[$0 >> 1] = HEAPU8[$4 >> 0] | HEAPU8[$4 + 1 >> 0] << 8;
 $7 = $msh + 26 | 0;
 HEAP16[$vbAttrs + 6 >> 1] = HEAPU8[$7 >> 0] | HEAPU8[$7 + 1 >> 0] << 8;
 $9 = $vbAttrs + 8 | 0;
 $10 = $msh + 28 | 0;
 HEAP16[$9 >> 1] = HEAPU8[$10 >> 0] | HEAPU8[$10 + 1 >> 0] << 8;
 $12 = $vbAttrs + 10 | 0;
 $13 = $msh + 30 | 0;
 HEAP16[$12 >> 1] = HEAPU8[$13 >> 0] | HEAPU8[$13 + 1 >> 0] << 8;
 $15 = $vbAttrs + 12 | 0;
 $16 = $msh + 32 | 0;
 HEAP16[$15 >> 1] = HEAPU8[$16 >> 0] | HEAPU8[$16 + 1 >> 0] << 8;
 $18 = $vbAttrs + 14 | 0;
 $19 = $msh + 34 | 0;
 HEAP16[$18 >> 1] = HEAPU8[$19 >> 0] | HEAPU8[$19 + 1 >> 0] << 8;
 $21 = $vbAttrs + 16 | 0;
 $22 = $msh + 36 | 0;
 HEAP16[$21 >> 1] = HEAPU8[$22 >> 0] | HEAPU8[$22 + 1 >> 0] << 8;
 $24 = $vbAttrs + 18 | 0;
 $25 = $msh + 38 | 0;
 HEAP16[$24 >> 1] = HEAPU8[$25 >> 0] | HEAPU8[$25 + 1 >> 0] << 8;
 $27 = $vbAttrs + 20 | 0;
 $28 = $msh + 40 | 0;
 HEAP16[$27 >> 1] = HEAPU8[$28 >> 0] | HEAPU8[$28 + 1 >> 0] << 8;
 $30 = $vbAttrs + 22 | 0;
 $31 = $msh + 42 | 0;
 HEAP16[$30 >> 1] = HEAPU8[$31 >> 0] | HEAPU8[$31 + 1 >> 0] << 8;
 $33 = $vbAttrs + 24 | 0;
 $34 = $msh + 44 | 0;
 HEAP16[$33 >> 1] = HEAPU8[$34 >> 0] | HEAPU8[$34 + 1 >> 0] << 8;
 $36 = $vbAttrs + 26 | 0;
 $37 = $msh + 46 | 0;
 HEAP16[$36 >> 1] = HEAPU8[$37 >> 0] | HEAPU8[$37 + 1 >> 0] << 8;
 $39 = $vbAttrs + 28 | 0;
 $40 = $msh + 48 | 0;
 HEAP16[$39 >> 1] = HEAPU8[$40 >> 0] | HEAPU8[$40 + 1 >> 0] << 8;
 $42 = $vbAttrs + 30 | 0;
 $43 = $msh + 50 | 0;
 HEAP16[$42 >> 1] = HEAPU8[$43 >> 0] | HEAPU8[$43 + 1 >> 0] << 8;
 $45 = $vbAttrs + 32 | 0;
 $46 = $msh + 52 | 0;
 HEAP16[$45 >> 1] = HEAPU8[$46 >> 0] | HEAPU8[$46 + 1 >> 0] << 8;
 $48 = $vbAttrs + 34 | 0;
 $49 = $msh + 54 | 0;
 HEAP16[$48 >> 1] = HEAPU8[$49 >> 0] | HEAPU8[$49 + 1 >> 0] << 8;
 $51 = $vbAttrs + 36 | 0;
 $52 = $msh + 56 | 0;
 HEAP16[$51 >> 1] = HEAPU8[$52 >> 0] | HEAPU8[$52 + 1 >> 0] << 8;
 $56 = $vbAttrs + 38 | 0;
 HEAP8[$56 >> 0] = HEAP8[$msh + 58 >> 0] | 0;
 HEAP8[$vbAttrs + 39 >> 0] = HEAP8[$msh + 59 >> 0] | 0;
 $62 = $vbAttrs + 40 | 0;
 HEAP8[$62 >> 0] = HEAP8[$msh + 60 >> 0] | 0;
 HEAP8[$vbAttrs + 41 >> 0] = HEAP8[$msh + 61 >> 0] | 0;
 $68 = $vbAttrs + 42 | 0;
 HEAP8[$68 >> 0] = HEAP8[$msh + 62 >> 0] | 0;
 HEAP8[$vbAttrs + 43 >> 0] = HEAP8[$msh + 63 >> 0] | 0;
 $74 = $vbAttrs + 44 | 0;
 HEAP8[$74 >> 0] = HEAP8[$msh + 64 >> 0] | 0;
 HEAP8[$vbAttrs + 45 >> 0] = HEAP8[$msh + 65 >> 0] | 0;
 $80 = $vbAttrs + 46 | 0;
 HEAP8[$80 >> 0] = HEAP8[$msh + 66 >> 0] | 0;
 HEAP8[$vbAttrs + 47 >> 0] = HEAP8[$msh + 67 >> 0] | 0;
 $86 = $vbAttrs + 48 | 0;
 HEAP8[$86 >> 0] = HEAP8[$msh + 68 >> 0] | 0;
 HEAP8[$vbAttrs + 49 >> 0] = HEAP8[$msh + 69 >> 0] | 0;
 $92 = $vbAttrs + 50 | 0;
 HEAP8[$92 >> 0] = HEAP8[$msh + 70 >> 0] | 0;
 HEAP8[$vbAttrs + 51 >> 0] = HEAP8[$msh + 71 >> 0] | 0;
 $98 = $vbAttrs + 52 | 0;
 HEAP8[$98 >> 0] = HEAP8[$msh + 72 >> 0] | 0;
 HEAP8[$vbAttrs + 53 >> 0] = HEAP8[$msh + 73 >> 0] | 0;
 $104 = $vbAttrs + 54 | 0;
 HEAP8[$104 >> 0] = HEAP8[$msh + 74 >> 0] | 0;
 HEAP8[$vbAttrs + 55 >> 0] = HEAP8[$msh + 75 >> 0] | 0;
 $110 = $vbAttrs + 56 | 0;
 HEAP8[$110 >> 0] = HEAP8[$msh + 76 >> 0] | 0;
 HEAP8[$vbAttrs + 57 >> 0] = HEAP8[$msh + 77 >> 0] | 0;
 $116 = $vbAttrs + 58 | 0;
 HEAP8[$116 >> 0] = HEAP8[$msh + 78 >> 0] | 0;
 HEAP8[$vbAttrs + 59 >> 0] = HEAP8[$msh + 79 >> 0] | 0;
 $122 = $vbAttrs + 60 | 0;
 HEAP8[$122 >> 0] = HEAP8[$msh + 80 >> 0] | 0;
 HEAP8[$vbAttrs + 61 >> 0] = HEAP8[$msh + 81 >> 0] | 0;
 $128 = $vbAttrs + 62 | 0;
 HEAP8[$128 >> 0] = HEAP8[$msh + 82 >> 0] | 0;
 HEAP8[$vbAttrs + 63 >> 0] = HEAP8[$msh + 83 >> 0] | 0;
 $134 = $vbAttrs + 64 | 0;
 HEAP8[$134 >> 0] = HEAP8[$msh + 84 >> 0] | 0;
 HEAP8[$vbAttrs + 65 >> 0] = HEAP8[$msh + 85 >> 0] | 0;
 $140 = $vbAttrs + 66 | 0;
 HEAP8[$140 >> 0] = HEAP8[$msh + 86 >> 0] | 0;
 HEAP8[$vbAttrs + 67 >> 0] = HEAP8[$msh + 87 >> 0] | 0;
 $146 = $vbAttrs + 68 | 0;
 HEAP8[$146 >> 0] = HEAP8[$msh + 88 >> 0] | 0;
 HEAP8[$vbAttrs + 69 >> 0] = HEAP8[$msh + 89 >> 0] | 0;
 $150 = $vbAttrs + 70 | 0;
 $151 = $msh + 90 | 0;
 HEAP16[$150 >> 1] = HEAPU8[$151 >> 0] | HEAPU8[$151 + 1 >> 0] << 8;
 HEAP32[$1 >> 2] = HEAP32[$msh + 16 >> 2];
 HEAP32[$msh + 208 >> 2] = HEAP32[$vbAttrs >> 2];
 $157 = $msh + 212 | 0;
 $158 = HEAP32[$0 >> 2] | 0;
 $159 = $158 & 65535;
 HEAP8[$157 >> 0] = $159;
 HEAP8[$157 + 1 >> 0] = $159 >> 8;
 $160 = $msh + 214 | 0;
 $162 = $158 >>> 16 & 65535;
 HEAP8[$160 >> 0] = $162;
 HEAP8[$160 + 1 >> 0] = $162 >> 8;
 $163 = $msh + 216 | 0;
 $164 = HEAP16[$9 >> 1] | 0;
 HEAP8[$163 >> 0] = $164;
 HEAP8[$163 + 1 >> 0] = $164 >> 8;
 $165 = $msh + 218 | 0;
 $166 = HEAP16[$12 >> 1] | 0;
 HEAP8[$165 >> 0] = $166;
 HEAP8[$165 + 1 >> 0] = $166 >> 8;
 $167 = $msh + 220 | 0;
 $168 = HEAP16[$15 >> 1] | 0;
 HEAP8[$167 >> 0] = $168;
 HEAP8[$167 + 1 >> 0] = $168 >> 8;
 $169 = $msh + 222 | 0;
 $170 = HEAP16[$18 >> 1] | 0;
 HEAP8[$169 >> 0] = $170;
 HEAP8[$169 + 1 >> 0] = $170 >> 8;
 $171 = $msh + 224 | 0;
 $172 = HEAP16[$21 >> 1] | 0;
 HEAP8[$171 >> 0] = $172;
 HEAP8[$171 + 1 >> 0] = $172 >> 8;
 $173 = $msh + 226 | 0;
 $174 = HEAP16[$24 >> 1] | 0;
 HEAP8[$173 >> 0] = $174;
 HEAP8[$173 + 1 >> 0] = $174 >> 8;
 $175 = $msh + 228 | 0;
 $176 = HEAP16[$27 >> 1] | 0;
 HEAP8[$175 >> 0] = $176;
 HEAP8[$175 + 1 >> 0] = $176 >> 8;
 $177 = $msh + 230 | 0;
 $178 = HEAP16[$30 >> 1] | 0;
 HEAP8[$177 >> 0] = $178;
 HEAP8[$177 + 1 >> 0] = $178 >> 8;
 $179 = $msh + 232 | 0;
 $180 = HEAP16[$33 >> 1] | 0;
 HEAP8[$179 >> 0] = $180;
 HEAP8[$179 + 1 >> 0] = $180 >> 8;
 $181 = $msh + 234 | 0;
 $182 = HEAP16[$36 >> 1] | 0;
 HEAP8[$181 >> 0] = $182;
 HEAP8[$181 + 1 >> 0] = $182 >> 8;
 $183 = $msh + 236 | 0;
 $184 = HEAP16[$39 >> 1] | 0;
 HEAP8[$183 >> 0] = $184;
 HEAP8[$183 + 1 >> 0] = $184 >> 8;
 $185 = $msh + 238 | 0;
 $186 = HEAP16[$42 >> 1] | 0;
 HEAP8[$185 >> 0] = $186;
 HEAP8[$185 + 1 >> 0] = $186 >> 8;
 $187 = $msh + 240 | 0;
 $188 = HEAP16[$45 >> 1] | 0;
 HEAP8[$187 >> 0] = $188;
 HEAP8[$187 + 1 >> 0] = $188 >> 8;
 $189 = $msh + 242 | 0;
 $190 = HEAP16[$48 >> 1] | 0;
 HEAP8[$189 >> 0] = $190;
 HEAP8[$189 + 1 >> 0] = $190 >> 8;
 $191 = $msh + 244 | 0;
 $192 = HEAP16[$51 >> 1] | 0;
 HEAP8[$191 >> 0] = $192;
 HEAP8[$191 + 1 >> 0] = $192 >> 8;
 $193 = HEAP16[$56 >> 1] | 0;
 HEAP8[$msh + 246 >> 0] = $193;
 HEAP8[$msh + 247 >> 0] = ($193 & 65535) >>> 8;
 $199 = HEAP16[$62 >> 1] | 0;
 HEAP8[$msh + 248 >> 0] = $199;
 HEAP8[$msh + 249 >> 0] = ($199 & 65535) >>> 8;
 $205 = HEAP16[$68 >> 1] | 0;
 HEAP8[$msh + 250 >> 0] = $205;
 HEAP8[$msh + 251 >> 0] = ($205 & 65535) >>> 8;
 $211 = HEAP16[$74 >> 1] | 0;
 HEAP8[$msh + 252 >> 0] = $211;
 HEAP8[$msh + 253 >> 0] = ($211 & 65535) >>> 8;
 $217 = HEAP16[$80 >> 1] | 0;
 HEAP8[$msh + 254 >> 0] = $217;
 HEAP8[$msh + 255 >> 0] = ($217 & 65535) >>> 8;
 $223 = HEAP16[$86 >> 1] | 0;
 HEAP8[$msh + 256 >> 0] = $223;
 HEAP8[$msh + 257 >> 0] = ($223 & 65535) >>> 8;
 $229 = HEAP16[$92 >> 1] | 0;
 HEAP8[$msh + 258 >> 0] = $229;
 HEAP8[$msh + 259 >> 0] = ($229 & 65535) >>> 8;
 $235 = HEAP16[$98 >> 1] | 0;
 HEAP8[$msh + 260 >> 0] = $235;
 HEAP8[$msh + 261 >> 0] = ($235 & 65535) >>> 8;
 $241 = HEAP16[$104 >> 1] | 0;
 HEAP8[$msh + 262 >> 0] = $241;
 HEAP8[$msh + 263 >> 0] = ($241 & 65535) >>> 8;
 $247 = HEAP16[$110 >> 1] | 0;
 HEAP8[$msh + 264 >> 0] = $247;
 HEAP8[$msh + 265 >> 0] = ($247 & 65535) >>> 8;
 $253 = HEAP16[$116 >> 1] | 0;
 HEAP8[$msh + 266 >> 0] = $253;
 HEAP8[$msh + 267 >> 0] = ($253 & 65535) >>> 8;
 $259 = HEAP16[$122 >> 1] | 0;
 HEAP8[$msh + 268 >> 0] = $259;
 HEAP8[$msh + 269 >> 0] = ($259 & 65535) >>> 8;
 $265 = HEAP16[$128 >> 1] | 0;
 HEAP8[$msh + 270 >> 0] = $265;
 HEAP8[$msh + 271 >> 0] = ($265 & 65535) >>> 8;
 $271 = HEAP16[$134 >> 1] | 0;
 HEAP8[$msh + 272 >> 0] = $271;
 HEAP8[$msh + 273 >> 0] = ($271 & 65535) >>> 8;
 $277 = HEAP16[$140 >> 1] | 0;
 HEAP8[$msh + 274 >> 0] = $277;
 HEAP8[$msh + 275 >> 0] = ($277 & 65535) >>> 8;
 $283 = HEAP16[$146 >> 1] | 0;
 HEAP8[$msh + 276 >> 0] = $283;
 HEAP8[$msh + 277 >> 0] = ($283 & 65535) >>> 8;
 $289 = $msh + 278 | 0;
 $290 = HEAP16[$150 >> 1] | 0;
 HEAP8[$289 >> 0] = $290;
 HEAP8[$289 + 1 >> 0] = $290 >> 8;
 HEAP32[$msh + 280 >> 2] = HEAP32[$1 >> 2];
 $296 = HEAP32[$msh + 100 >> 2] | 0;
 $298 = HEAP32[$msh + 20 >> 2] | 0;
 HEAP32[$msh + 284 >> 2] = HEAP32[$msh + 96 >> 2];
 HEAP32[$msh + 288 >> 2] = $296;
 HEAP32[$msh + 292 >> 2] = $298;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv16glTextureFactory18createRenderTargetERNS0_7textureE($this, $tex) {
 $this = $this | 0;
 $tex = $tex | 0;
 var $0 = 0, $105 = 0, $109 = 0, $12 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $151 = 0, $155 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $48 = 0, $6 = 0, $68 = 0, $70 = 0, $72 = 0, $76 = 0, $attrs = 0, $glColorRenderTexture = 0, $glDepthRenderBuffer = 0, $glFramebuffer = 0, $glOrigFramebuffer = 0, $height$0 = 0, $vararg_buffer = 0, $width$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer = sp;
 $glOrigFramebuffer = sp + 60 | 0;
 $glFramebuffer = sp + 56 | 0;
 $glColorRenderTexture = sp + 52 | 0;
 $glDepthRenderBuffer = sp + 48 | 0;
 $attrs = sp + 4 | 0;
 $0 = $tex + 752 | 0;
 if (HEAP32[$0 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72459, 0, 72053, 122, 72482);
  _abort();
 }
 $3 = $tex + 756 | 0;
 if (HEAP32[$3 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72578, 0, 72053, 123, 72482);
  _abort();
 }
 $6 = $tex + 768 | 0;
 if (HEAP32[$6 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72607, 0, 72053, 124, 72482);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer22invalidateTextureStateEv(HEAP32[$this >> 2] | 0);
 HEAP32[$glOrigFramebuffer >> 2] = 0;
 _glGetIntegerv(36006, $glOrigFramebuffer | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 129, 72482);
  _abort();
 }
 $12 = $tex + 16 | 0;
 if (!(__ZNK5Oryol12TextureSetup25ShouldSetupAsRenderTargetEv($12) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72630, 0, 72053, 132, 72482);
  _abort();
 }
 if (HEAP32[$12 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72664, 0, 72053, 133, 72482);
  _abort();
 }
 if ((HEAP32[$tex + 40 >> 2] | 0) != 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72703, 0, 72053, 134, 72482);
  _abort();
 }
 if (HEAP32[$tex + 20 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72725, 0, 72053, 135, 72482);
  _abort();
 }
 $22 = $tex + 44 | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 if ($23 >>> 0 >= 7) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72762, 0, 72053, 136, 72482);
  _abort();
 }
 if (!(97 >>> ($23 & 127) & 1)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72762, 0, 72053, 136, 72482);
  _abort();
 }
 do if (__ZNK5Oryol12TextureSetup21IsRelSizeRenderTargetEv($12) | 0) {
  $29 = __ZNK5Oryol5_priv14displayMgrBase15GetDisplayAttrsEv(HEAP32[$this + 4 >> 2] | 0) | 0;
  $height$0 = ~~(+(HEAP32[$29 + 20 >> 2] | 0) * +HEAPF32[$tex + 36 >> 2]);
  $width$0 = ~~(+(HEAP32[$29 + 16 >> 2] | 0) * +HEAPF32[$tex + 32 >> 2]);
 } else {
  if (!(__ZNK5Oryol12TextureSetup14HasSharedDepthEv($12) | 0)) {
   $height$0 = HEAP32[$tex + 28 >> 2] | 0;
   $width$0 = HEAP32[$tex + 24 >> 2] | 0;
   break;
  }
  $48 = __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6LookupERKNS_2IdE(HEAP32[$this + 20 >> 2] | 0, $tex + 56 | 0) | 0;
  if (!$48) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72825, 0, 72053, 150, 72482);
   _abort();
  } else {
   $height$0 = HEAP32[$48 + 732 >> 2] | 0;
   $width$0 = HEAP32[$48 + 728 >> 2] | 0;
   break;
  }
 } while (0);
 if (!(($height$0 | 0) > 0 & ($width$0 | 0) > 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72856, 0, 72053, 158, 72482);
  _abort();
 }
 HEAP32[$glFramebuffer >> 2] = 0;
 _glGenFramebuffers(1, $glFramebuffer | 0);
 if (!(HEAP32[$glFramebuffer >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72884, 0, 72053, 163, 72482);
  _abort();
 }
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 164, 72482);
  _abort();
 }
 _glBindFramebuffer(36160, HEAP32[$glFramebuffer >> 2] | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 166, 72482);
  _abort();
 }
 $68 = __ZN5Oryol5_priv7glTypes18asGLTexImageFormatENS_11PixelFormat4CodeE(HEAP32[$22 >> 2] | 0) | 0;
 $70 = __ZN5Oryol5_priv7glTypes26asGLTexImageInternalFormatENS_11PixelFormat4CodeE(HEAP32[$22 >> 2] | 0) | 0;
 $72 = __ZN5Oryol5_priv7glTypes16asGLTexImageTypeENS_11PixelFormat4CodeE(HEAP32[$22 >> 2] | 0) | 0;
 HEAP32[$glColorRenderTexture >> 2] = 0;
 _glGenTextures(1, $glColorRenderTexture | 0);
 _glActiveTexture(33984);
 _glBindTexture(3553, HEAP32[$glColorRenderTexture >> 2] | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 176, 72482);
  _abort();
 }
 $76 = $tex + 64 | 0;
 _glTexParameteri(3553, 10241, __ZN5Oryol5_priv7glTypes17asGLTexFilterModeENS_17TextureFilterMode4CodeE((HEAPU16[$76 >> 1] | 0) >>> 9 & 7) | 0);
 _glTexParameteri(3553, 10240, __ZN5Oryol5_priv7glTypes17asGLTexFilterModeENS_17TextureFilterMode4CodeE((HEAPU16[$76 >> 1] | 0) >>> 6 & 7) | 0);
 _glTexParameteri(3553, 10242, __ZN5Oryol5_priv7glTypes15asGLTexWrapModeENS_15TextureWrapMode4CodeE(HEAP16[$76 >> 1] & 3) | 0);
 _glTexParameteri(3553, 10243, __ZN5Oryol5_priv7glTypes15asGLTexWrapModeENS_15TextureWrapMode4CodeE((HEAPU16[$76 >> 1] | 0) >>> 2 & 3) | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 184, 72482);
  _abort();
 }
 _glTexImage2D(3553, 0, $70 | 0, $width$0 | 0, $height$0 | 0, 0, $68 | 0, $72 | 0, 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 186, 72482);
  _abort();
 }
 _glFramebufferTexture2D(36160, 36064, 3553, HEAP32[$glColorRenderTexture >> 2] | 0, 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 190, 72482);
  _abort();
 }
 HEAP32[$glDepthRenderBuffer >> 2] = 0;
 do if (__ZNK5Oryol12TextureSetup8HasDepthEv($12) | 0) {
  if (__ZNK5Oryol12TextureSetup14HasSharedDepthEv($12) | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72825, 0, 72053, 218, 72482);
   _abort();
  }
  $105 = $tex + 48 | 0;
  if (((HEAP32[$105 >> 2] | 0) + -11 | 0) >>> 0 >= 2) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72903, 0, 72053, 196, 72482);
   _abort();
  }
  _glGenRenderbuffers(1, $glDepthRenderBuffer | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 202, 72482);
   _abort();
  }
  $109 = HEAP32[$glDepthRenderBuffer >> 2] | 0;
  if (!$109) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72961, 0, 72053, 203, 72482);
   _abort();
  }
  _glBindRenderbuffer(36161, $109 | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 205, 72482);
   _abort();
  }
  _glRenderbufferStorage(36161, __ZN5Oryol5_priv7glTypes25asGLDepthAttachmentFormatENS_11PixelFormat4CodeE(HEAP32[$105 >> 2] | 0) | 0, $width$0 | 0, $height$0 | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 208, 72482);
   _abort();
  }
  _glFramebufferRenderbuffer(36160, 36096, 36161, HEAP32[$glDepthRenderBuffer >> 2] | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 210, 72482);
   _abort();
  }
  if ((HEAP32[$105 >> 2] | 0) != 12) break;
  _glFramebufferRenderbuffer(36160, 36128, 36161, HEAP32[$glDepthRenderBuffer >> 2] | 0);
  if (!(_glGetError() | 0)) break;
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 213, 72482);
  _abort();
 } while (0);
 if ((_glCheckFramebufferStatus(36160) | 0) != 36053) __ZN5Oryol3Log4WarnEPKcz(72986, $vararg_buffer);
 __ZN5Oryol5_priv10glRenderer22invalidateTextureStateEv(HEAP32[$this >> 2] | 0);
 HEAP32[$attrs >> 2] = 0;
 $128 = $attrs + 4 | 0;
 HEAP32[$128 >> 2] = -2;
 $129 = $attrs + 8 | 0;
 HEAP32[$129 >> 2] = -1;
 $130 = $attrs + 12 | 0;
 HEAP32[$130 >> 2] = 20;
 $131 = $attrs + 16 | 0;
 HEAP32[$131 >> 2] = 20;
 $132 = $attrs + 20 | 0;
 HEAP32[$132 >> 2] = -1;
 $133 = $attrs + 24 | 0;
 HEAP32[$133 >> 2] = 0;
 $134 = $attrs + 28 | 0;
 HEAP32[$134 >> 2] = 0;
 HEAP32[$attrs + 32 >> 2] = 0;
 $136 = $attrs + 36 | 0;
 HEAP32[$136 >> 2] = 1;
 $137 = $attrs + 40 | 0;
 HEAP8[$137 >> 0] = 0;
 $138 = $attrs + 41 | 0;
 HEAP8[$138 >> 0] = 0;
 $139 = $attrs + 42 | 0;
 HEAP8[$139 >> 0] = 0;
 $140 = $tex + 92 | 0;
 if (($140 | 0) != ($attrs | 0)) {
  HEAP32[$attrs >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($attrs, $140);
 }
 HEAP32[$128 >> 2] = HEAP32[$tex + 96 >> 2];
 HEAP32[$129 >> 2] = 0;
 HEAP32[$130 >> 2] = HEAP32[$22 >> 2];
 HEAP32[$131 >> 2] = HEAP32[$tex + 48 >> 2];
 HEAP32[$132 >> 2] = 0;
 HEAP32[$133 >> 2] = $width$0;
 HEAP32[$134 >> 2] = $height$0;
 HEAP32[$136 >> 2] = 1;
 HEAP8[$137 >> 0] = 1;
 HEAP8[$138 >> 0] = (__ZNK5Oryol12TextureSetup8HasDepthEv($12) | 0) & 1;
 HEAP8[$139 >> 0] = (__ZNK5Oryol12TextureSetup14HasSharedDepthEv($12) | 0) & 1;
 $151 = $tex + 704 | 0;
 if (($attrs | 0) != ($151 | 0)) {
  HEAP32[$151 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($151, $attrs);
 }
 HEAP32[$tex + 708 >> 2] = HEAP32[$128 >> 2];
 $155 = $tex + 712 | 0;
 HEAP32[$155 >> 2] = HEAP32[$129 >> 2];
 HEAP32[$155 + 4 >> 2] = HEAP32[$129 + 4 >> 2];
 HEAP32[$155 + 8 >> 2] = HEAP32[$129 + 8 >> 2];
 HEAP32[$155 + 12 >> 2] = HEAP32[$129 + 12 >> 2];
 HEAP32[$155 + 16 >> 2] = HEAP32[$129 + 16 >> 2];
 HEAP32[$155 + 20 >> 2] = HEAP32[$129 + 20 >> 2];
 HEAP32[$155 + 24 >> 2] = HEAP32[$129 + 24 >> 2];
 HEAP32[$155 + 28 >> 2] = HEAP32[$129 + 28 >> 2];
 HEAP16[$155 + 32 >> 1] = HEAP16[$129 + 32 >> 1] | 0;
 HEAP8[$155 + 34 >> 0] = HEAP8[$129 + 34 >> 0] | 0;
 HEAP32[$6 >> 2] = HEAP32[$glColorRenderTexture >> 2];
 HEAP32[$0 >> 2] = HEAP32[$glFramebuffer >> 2];
 HEAP32[$3 >> 2] = HEAP32[$glDepthRenderBuffer >> 2];
 HEAP32[$tex + 748 >> 2] = 3553;
 _glBindFramebuffer(36160, HEAP32[$glOrigFramebuffer >> 2] | 0);
 if (!(_glGetError() | 0)) {
  STACKTOP = sp;
  return 3;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 259, 72482);
  _abort();
 }
 return 0;
}

function __ZN4yakc13kc85_snapshot14apply_snapshotERKNS0_7state_tERNS_4kc85E($state, $kc) {
 $state = $state | 0;
 $kc = $kc | 0;
 var $12 = 0, $134 = 0, $15 = 0, $18 = 0, $2 = 0, $21 = 0, $219 = 0, $235 = 0, $236 = 0, $238 = 0, $24 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $27 = 0, $30 = 0, $33 = 0, $36 = 0, $39 = 0, $42 = 0, $45 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $68 = 0, $71 = 0, $74 = 0, $77 = 0, $80 = 0, $83 = 0, $86 = 0, $89 = 0, $9 = 0, $92 = 0, $c$01$i = 0;
 $2 = $state + 4 | 0;
 if (!((HEAPU8[$state >> 0] | HEAPU8[$state + 1 >> 0] << 8 | HEAPU8[$state + 2 >> 0] << 16 | HEAPU8[$state + 3 >> 0] << 24 | 0) == 1497451331 ? (HEAPU8[$2 >> 0] | HEAPU8[$2 + 1 >> 0] << 8 | HEAPU8[$2 + 2 >> 0] << 16 | HEAPU8[$2 + 3 >> 0] << 24 | 0) == 1 : 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(40724, 0, 40743, 206, 40794);
  _abort();
 }
 $6 = $state + 8 | 0;
 HEAP32[$kc + 65536 >> 2] = HEAPU8[$6 >> 0] | HEAPU8[$6 + 1 >> 0] << 8 | HEAPU8[$6 + 2 >> 0] << 16 | HEAPU8[$6 + 3 >> 0] << 24;
 $9 = $state + 12 | 0;
 HEAP32[$kc + 65540 >> 2] = HEAPU8[$9 >> 0] | HEAPU8[$9 + 1 >> 0] << 8 | HEAPU8[$9 + 2 >> 0] << 16 | HEAPU8[$9 + 3 >> 0] << 24;
 $12 = $state + 16 | 0;
 HEAP32[$kc + 65544 >> 2] = HEAPU8[$12 >> 0] | HEAPU8[$12 + 1 >> 0] << 8 | HEAPU8[$12 + 2 >> 0] << 16 | HEAPU8[$12 + 3 >> 0] << 24;
 $15 = $state + 20 | 0;
 HEAP32[$kc + 65548 >> 2] = HEAPU8[$15 >> 0] | HEAPU8[$15 + 1 >> 0] << 8 | HEAPU8[$15 + 2 >> 0] << 16 | HEAPU8[$15 + 3 >> 0] << 24;
 $18 = $state + 24 | 0;
 HEAP32[$kc + 65560 >> 2] = HEAPU8[$18 >> 0] | HEAPU8[$18 + 1 >> 0] << 8 | HEAPU8[$18 + 2 >> 0] << 16 | HEAPU8[$18 + 3 >> 0] << 24;
 $21 = $state + 28 | 0;
 HEAP32[$kc + 65564 >> 2] = HEAPU8[$21 >> 0] | HEAPU8[$21 + 1 >> 0] << 8 | HEAPU8[$21 + 2 >> 0] << 16 | HEAPU8[$21 + 3 >> 0] << 24;
 $24 = $state + 32 | 0;
 HEAP32[$kc + 65568 >> 2] = HEAPU8[$24 >> 0] | HEAPU8[$24 + 1 >> 0] << 8 | HEAPU8[$24 + 2 >> 0] << 16 | HEAPU8[$24 + 3 >> 0] << 24;
 $27 = $state + 36 | 0;
 HEAP32[$kc + 65580 >> 2] = HEAPU8[$27 >> 0] | HEAPU8[$27 + 1 >> 0] << 8 | HEAPU8[$27 + 2 >> 0] << 16 | HEAPU8[$27 + 3 >> 0] << 24;
 $30 = $state + 40 | 0;
 HEAP32[$kc + 65584 >> 2] = HEAPU8[$30 >> 0] | HEAPU8[$30 + 1 >> 0] << 8 | HEAPU8[$30 + 2 >> 0] << 16 | HEAPU8[$30 + 3 >> 0] << 24;
 $33 = $state + 44 | 0;
 HEAP32[$kc + 65588 >> 2] = HEAPU8[$33 >> 0] | HEAPU8[$33 + 1 >> 0] << 8 | HEAPU8[$33 + 2 >> 0] << 16 | HEAPU8[$33 + 3 >> 0] << 24;
 $36 = $state + 48 | 0;
 HEAP32[$kc + 65600 >> 2] = HEAPU8[$36 >> 0] | HEAPU8[$36 + 1 >> 0] << 8 | HEAPU8[$36 + 2 >> 0] << 16 | HEAPU8[$36 + 3 >> 0] << 24;
 $39 = $state + 52 | 0;
 HEAP32[$kc + 65604 >> 2] = HEAPU8[$39 >> 0] | HEAPU8[$39 + 1 >> 0] << 8 | HEAPU8[$39 + 2 >> 0] << 16 | HEAPU8[$39 + 3 >> 0] << 24;
 $42 = $state + 56 | 0;
 HEAP32[$kc + 65608 >> 2] = HEAPU8[$42 >> 0] | HEAPU8[$42 + 1 >> 0] << 8 | HEAPU8[$42 + 2 >> 0] << 16 | HEAPU8[$42 + 3 >> 0] << 24;
 $45 = $state + 60 | 0;
 HEAP32[$kc + 725496 >> 2] = HEAPU8[$45 >> 0];
 HEAP32[$kc + 725500 >> 2] = HEAPU8[$state + 61 >> 0];
 HEAP8[$kc + 725460 >> 0] = HEAP8[$state + 62 >> 0] | 0;
 HEAP8[$kc + 725461 >> 0] = HEAP8[$state + 63 >> 0] | 0;
 __ZN4yakc4kc8519update_rom_pointersEv($kc);
 $59 = $state + 64 | 0;
 HEAP16[$kc + 65626 >> 1] = HEAPU8[$59 >> 0] | HEAPU8[$59 + 1 >> 0] << 8;
 $62 = $state + 66 | 0;
 HEAP16[$kc + 65620 >> 1] = HEAPU8[$62 >> 0] | HEAPU8[$62 + 1 >> 0] << 8;
 $65 = $state + 68 | 0;
 HEAP16[$kc + 65622 >> 1] = HEAPU8[$65 >> 0] | HEAPU8[$65 + 1 >> 0] << 8;
 $68 = $state + 70 | 0;
 HEAP16[$kc + 65624 >> 1] = HEAPU8[$68 >> 0] | HEAPU8[$68 + 1 >> 0] << 8;
 $71 = $state + 72 | 0;
 HEAP16[$kc + 65640 >> 1] = HEAPU8[$71 >> 0] | HEAPU8[$71 + 1 >> 0] << 8;
 $74 = $state + 74 | 0;
 HEAP16[$kc + 65634 >> 1] = HEAPU8[$74 >> 0] | HEAPU8[$74 + 1 >> 0] << 8;
 $77 = $state + 76 | 0;
 HEAP16[$kc + 65636 >> 1] = HEAPU8[$77 >> 0] | HEAPU8[$77 + 1 >> 0] << 8;
 $80 = $state + 78 | 0;
 HEAP16[$kc + 65638 >> 1] = HEAPU8[$80 >> 0] | HEAPU8[$80 + 1 >> 0] << 8;
 $83 = $state + 80 | 0;
 HEAP16[$kc + 65628 >> 1] = HEAPU8[$83 >> 0] | HEAPU8[$83 + 1 >> 0] << 8;
 $86 = $state + 82 | 0;
 HEAP16[$kc + 65630 >> 1] = HEAPU8[$86 >> 0] | HEAPU8[$86 + 1 >> 0] << 8;
 $89 = $state + 84 | 0;
 HEAP16[$kc + 65632 >> 1] = HEAPU8[$89 >> 0] | HEAPU8[$89 + 1 >> 0] << 8;
 $92 = $state + 86 | 0;
 HEAP16[$kc + 65642 >> 1] = HEAPU8[$92 >> 0] | HEAPU8[$92 + 1 >> 0] << 8;
 HEAP8[$kc + 65644 >> 0] = HEAP8[$state + 88 >> 0] | 0;
 HEAP8[$kc + 65645 >> 0] = HEAP8[$state + 89 >> 0] | 0;
 HEAP8[$kc + 65646 >> 0] = HEAP8[$state + 90 >> 0] | 0;
 HEAP8[$kc + 65647 >> 0] = (HEAP8[$state + 91 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 65648 >> 0] = (HEAP8[$state + 92 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 65649 >> 0] = (HEAP8[$state + 93 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 65650 >> 0] = (HEAP8[$state + 94 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 69252 >> 0] = (HEAP8[$state + 95 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 69253 >> 0] = (HEAP8[$state + 96 >> 0] | 0) != 0 & 1;
 $c$01$i = 0;
 do {
  $134 = $state + 100 + ($c$01$i * 12 | 0) | 0;
  HEAP32[$kc + 69284 + ($c$01$i * 48 | 0) + 4 >> 2] = HEAPU8[$134 >> 0] | HEAPU8[$134 + 1 >> 0] << 8 | HEAPU8[$134 + 2 >> 0] << 16 | HEAPU8[$134 + 3 >> 0] << 24;
  HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) >> 0] = HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 4 >> 0] | 0;
  HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 1 >> 0] = HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 5 >> 0] | 0;
  HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 8 >> 0] = (HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 6 >> 0] | 0) != 0 & 1;
  HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 9 >> 0] = HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 7 >> 0] | 0;
  HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 28 >> 0] = (HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 8 >> 0] | 0) != 0 & 1;
  HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 29 >> 0] = (HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 9 >> 0] | 0) != 0 & 1;
  HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 30 >> 0] = HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 10 >> 0] | 0;
  HEAP8[$kc + 69284 + ($c$01$i * 48 | 0) + 31 >> 0] = (HEAP8[$state + 100 + ($c$01$i * 12 | 0) + 11 >> 0] | 0) != 0 & 1;
  $c$01$i = $c$01$i + 1 | 0;
 } while (($c$01$i | 0) != 4);
 HEAP8[$kc + 69256 >> 0] = HEAP8[$state + 148 >> 0] | 0;
 HEAP8[$kc + 69257 >> 0] = (HEAP8[$state + 149 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 69258 >> 0] = HEAP8[$state + 150 >> 0] | 0;
 HEAP8[$kc + 69262 >> 0] = HEAP8[$state + 151 >> 0] | 0;
 HEAP8[$kc + 69259 >> 0] = HEAP8[$state + 152 >> 0] | 0;
 HEAP8[$kc + 69260 >> 0] = (HEAP8[$state + 153 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 69261 >> 0] = HEAP8[$state + 154 >> 0] | 0;
 HEAP8[$kc + 69263 >> 0] = HEAP8[$state + 155 >> 0] | 0;
 HEAP8[$kc + 69264 >> 0] = (HEAP8[$state + 156 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 69265 >> 0] = (HEAP8[$state + 157 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 69266 >> 0] = HEAP8[$state + 158 >> 0] | 0;
 HEAP8[$kc + 69267 >> 0] = (HEAP8[$state + 159 >> 0] | 0) != 0 & 1;
 HEAP32[$kc + 462692 >> 2] = HEAPU8[$45 >> 0];
 $219 = $state + 160 | 0;
 HEAP16[$kc + 462700 >> 1] = HEAPU8[$219 >> 0] | HEAPU8[$219 + 1 >> 0] << 8;
 HEAP8[$kc + 462696 >> 0] = HEAP8[$state + 162 >> 0] | 0;
 HEAP8[$kc + 462697 >> 0] = (HEAP8[$state + 163 >> 0] | 0) != 0 & 1;
 HEAP8[$kc + 462698 >> 0] = (HEAP8[$state + 164 >> 0] | 0) != 0 & 1;
 $235 = $kc + 462860 | 0;
 $236 = HEAP32[$235 >> 2] | 0;
 if (!$236) {
  $242 = $kc + 462868 | 0;
  HEAP8[$242 >> 0] = 2;
  HEAP8[$242 + 1 >> 0] = 0;
  $243 = $kc + 462870 | 0;
  HEAP8[$243 >> 0] = 2;
  HEAP8[$243 + 1 >> 0] = 0;
  $244 = $state + 168 | 0;
  $245 = HEAPU8[$244 >> 0] | HEAPU8[$244 + 1 >> 0] << 8 | HEAPU8[$244 + 2 >> 0] << 16 | HEAPU8[$244 + 3 >> 0] << 24;
  $246 = $kc + 462848 | 0;
  HEAP32[$246 >> 2] = $245;
  $247 = $state + 172 | 0;
  $248 = HEAP8[$247 >> 0] | 0;
  $249 = $kc + 462868 | 0;
  HEAP8[$249 >> 0] = $248;
  $250 = $state + 173 | 0;
  $251 = HEAP8[$250 >> 0] | 0;
  $252 = $kc + 462869 | 0;
  HEAP8[$252 >> 0] = $251;
  $253 = $state + 174 | 0;
  $254 = HEAP8[$253 >> 0] | 0;
  HEAP8[$243 >> 0] = $254;
  $255 = $state + 175 | 0;
  $256 = HEAP8[$255 >> 0] | 0;
  $257 = $kc + 462871 | 0;
  HEAP8[$257 >> 0] = $256;
  __ZN4yakc13kc85_snapshot15apply_exp_stateERKNS0_7state_tERNS_4kc85E($state, $kc);
  __ZN4yakc13kc85_snapshot18apply_memory_stateERKNS0_7state_tERNS_4kc85E($state, $kc);
  return;
 }
 $238 = $kc + 462864 | 0;
 FUNCTION_TABLE_viiii[$236 & 7](HEAP32[$238 >> 2] | 0, 0, 0, 0);
 FUNCTION_TABLE_viiii[HEAP32[$235 >> 2] & 7](HEAP32[$238 >> 2] | 0, 0, 0, 1);
 $242 = $kc + 462868 | 0;
 HEAP8[$242 >> 0] = 2;
 HEAP8[$242 + 1 >> 0] = 0;
 $243 = $kc + 462870 | 0;
 HEAP8[$243 >> 0] = 2;
 HEAP8[$243 + 1 >> 0] = 0;
 $244 = $state + 168 | 0;
 $245 = HEAPU8[$244 >> 0] | HEAPU8[$244 + 1 >> 0] << 8 | HEAPU8[$244 + 2 >> 0] << 16 | HEAPU8[$244 + 3 >> 0] << 24;
 $246 = $kc + 462848 | 0;
 HEAP32[$246 >> 2] = $245;
 $247 = $state + 172 | 0;
 $248 = HEAP8[$247 >> 0] | 0;
 $249 = $kc + 462868 | 0;
 HEAP8[$249 >> 0] = $248;
 $250 = $state + 173 | 0;
 $251 = HEAP8[$250 >> 0] | 0;
 $252 = $kc + 462869 | 0;
 HEAP8[$252 >> 0] = $251;
 $253 = $state + 174 | 0;
 $254 = HEAP8[$253 >> 0] | 0;
 HEAP8[$243 >> 0] = $254;
 $255 = $state + 175 | 0;
 $256 = HEAP8[$255 >> 0] | 0;
 $257 = $kc + 462871 | 0;
 HEAP8[$257 >> 0] = $256;
 __ZN4yakc13kc85_snapshot15apply_exp_stateERKNS0_7state_tERNS_4kc85E($state, $kc);
 __ZN4yakc13kc85_snapshot18apply_memory_stateERKNS0_7state_tERNS_4kc85E($state, $kc);
 return;
}

function __ZN4yakc4kc85C2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $103 = 0, $108 = 0, $113 = 0, $118 = 0, $123 = 0, $129 = 0, $137 = 0, $170 = 0, $181 = 0, $187 = 0, $2 = 0, $22 = 0, $26 = 0, $35 = 0, $37 = 0, $46 = 0, $48 = 0, $57 = 0, $59 = 0, $68 = 0, $70 = 0, $80 = 0, $88 = 0, $93 = 0, $98 = 0, $val$07$i$i = 0, dest = 0, stop = 0;
 $0 = $this + 65536 | 0;
 $1 = $this + 65908 | 0;
 dest = $0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 + 112 >> 1] = 0;
 HEAP8[$0 + 114 >> 0] = 0;
 __ZN4yakc6memoryC2Ev($1);
 $2 = $this + 69236 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP16[$2 + 16 >> 1] = 0;
 HEAP8[$2 + 18 >> 0] = 0;
 $val$07$i$i = 0;
 do {
  $10 = $val$07$i$i & 128;
  HEAP8[$this + 65651 + $val$07$i$i >> 0] = (($val$07$i$i | 0 ? $10 : 64) | $val$07$i$i & 40 | ($val$07$i$i >>> 5) + ($val$07$i$i & 1) + ($val$07$i$i >>> 6) + ($val$07$i$i >>> 3) + ($val$07$i$i >>> 4) + ($val$07$i$i >>> 1) + ($val$07$i$i >>> 2) + ($10 >>> 7) << 2 & 4) ^ 4;
  $val$07$i$i = $val$07$i$i + 1 | 0;
 } while (($val$07$i$i | 0) != 256);
 $22 = $this + 69256 | 0;
 HEAP8[$22 >> 0] = 0;
 HEAP8[$22 + 1 >> 0] = 0;
 HEAP8[$22 + 2 >> 0] = 0;
 HEAP8[$22 + 3 >> 0] = 0;
 HEAP8[$this + 69260 >> 0] = 0;
 HEAP8[$this + 69261 >> 0] = 0;
 HEAP8[$this + 69264 >> 0] = 1;
 $26 = $this + 69265 | 0;
 HEAP32[$this + 69272 >> 2] = 0;
 HEAP32[$this + 69276 >> 2] = 0;
 HEAP32[$this + 69280 >> 2] = 0;
 HEAP8[$26 >> 0] = 0;
 HEAP8[$26 + 1 >> 0] = 0;
 HEAP8[$26 + 2 >> 0] = 0;
 HEAP8[$26 + 3 >> 0] = 0;
 HEAP8[$this + 69284 >> 0] = 2;
 HEAP8[$this + 69285 >> 0] = 0;
 HEAP32[$this + 69288 >> 2] = 0;
 HEAP8[$this + 69292 >> 0] = 0;
 HEAP8[$this + 69293 >> 0] = 0;
 $35 = $this + 69296 | 0;
 HEAP32[$35 >> 2] = 0;
 HEAP32[$35 + 4 >> 2] = 0;
 HEAP32[$35 + 8 >> 2] = 0;
 HEAP32[$35 + 12 >> 2] = 0;
 HEAP8[$this + 69312 >> 0] = 1;
 $37 = $this + 69313 | 0;
 HEAP32[$this + 69320 >> 2] = 0;
 HEAP32[$this + 69324 >> 2] = 0;
 HEAP32[$this + 69328 >> 2] = 0;
 HEAP8[$37 >> 0] = 0;
 HEAP8[$37 + 1 >> 0] = 0;
 HEAP8[$37 + 2 >> 0] = 0;
 HEAP8[$37 + 3 >> 0] = 0;
 HEAP8[$this + 69332 >> 0] = 2;
 HEAP8[$this + 69333 >> 0] = 0;
 HEAP32[$this + 69336 >> 2] = 0;
 HEAP8[$this + 69340 >> 0] = 0;
 HEAP8[$this + 69341 >> 0] = 0;
 $46 = $this + 69344 | 0;
 HEAP32[$46 >> 2] = 0;
 HEAP32[$46 + 4 >> 2] = 0;
 HEAP32[$46 + 8 >> 2] = 0;
 HEAP32[$46 + 12 >> 2] = 0;
 HEAP8[$this + 69360 >> 0] = 1;
 $48 = $this + 69361 | 0;
 HEAP32[$this + 69368 >> 2] = 0;
 HEAP32[$this + 69372 >> 2] = 0;
 HEAP32[$this + 69376 >> 2] = 0;
 HEAP8[$48 >> 0] = 0;
 HEAP8[$48 + 1 >> 0] = 0;
 HEAP8[$48 + 2 >> 0] = 0;
 HEAP8[$48 + 3 >> 0] = 0;
 HEAP8[$this + 69380 >> 0] = 2;
 HEAP8[$this + 69381 >> 0] = 0;
 HEAP32[$this + 69384 >> 2] = 0;
 HEAP8[$this + 69388 >> 0] = 0;
 HEAP8[$this + 69389 >> 0] = 0;
 $57 = $this + 69392 | 0;
 HEAP32[$57 >> 2] = 0;
 HEAP32[$57 + 4 >> 2] = 0;
 HEAP32[$57 + 8 >> 2] = 0;
 HEAP32[$57 + 12 >> 2] = 0;
 HEAP8[$this + 69408 >> 0] = 1;
 $59 = $this + 69409 | 0;
 HEAP32[$this + 69416 >> 2] = 0;
 HEAP32[$this + 69420 >> 2] = 0;
 HEAP32[$this + 69424 >> 2] = 0;
 HEAP8[$59 >> 0] = 0;
 HEAP8[$59 + 1 >> 0] = 0;
 HEAP8[$59 + 2 >> 0] = 0;
 HEAP8[$59 + 3 >> 0] = 0;
 HEAP8[$this + 69428 >> 0] = 2;
 HEAP8[$this + 69429 >> 0] = 0;
 HEAP32[$this + 69432 >> 2] = 0;
 HEAP8[$this + 69436 >> 0] = 0;
 HEAP8[$this + 69437 >> 0] = 0;
 $68 = $this + 69440 | 0;
 HEAP32[$68 >> 2] = 0;
 HEAP32[$68 + 4 >> 2] = 0;
 HEAP32[$68 + 8 >> 2] = 0;
 HEAP32[$68 + 12 >> 2] = 0;
 HEAP8[$this + 69456 >> 0] = 1;
 $70 = $this + 69457 | 0;
 HEAP32[$this + 69464 >> 2] = 0;
 HEAP32[$this + 69468 >> 2] = 0;
 HEAP32[$this + 69472 >> 2] = 0;
 HEAP8[$70 >> 0] = 0;
 HEAP8[$70 + 1 >> 0] = 0;
 HEAP8[$70 + 2 >> 0] = 0;
 HEAP8[$70 + 3 >> 0] = 0;
 HEAP32[$this + 462692 >> 2] = 2;
 HEAP8[$this + 462696 >> 0] = 0;
 HEAP8[$this + 462697 >> 0] = 1;
 HEAP8[$this + 462698 >> 0] = 1;
 HEAP16[$this + 462700 >> 1] = 0;
 HEAP32[$this + 462832 >> 2] = 0;
 $80 = $this + 462840 | 0;
 HEAP32[$80 >> 2] = 0;
 HEAP32[$80 + 4 >> 2] = 0;
 HEAP32[$80 + 8 >> 2] = 0;
 HEAP32[$80 + 12 >> 2] = 0;
 HEAP32[$80 + 16 >> 2] = 0;
 HEAP32[$80 + 20 >> 2] = 0;
 HEAP32[$80 + 24 >> 2] = 0;
 HEAP8[$this + 462868 >> 0] = 2;
 HEAP8[$this + 462869 >> 0] = 0;
 HEAP8[$this + 462870 >> 0] = 2;
 HEAP8[$this + 462871 >> 0] = 0;
 HEAP8[$this + 462872 >> 0] = 0;
 HEAP32[$this + 462876 >> 2] = 0;
 HEAP8[$this + 462880 >> 0] = -1;
 $88 = $this + 462884 | 0;
 HEAP32[$88 >> 2] = 0;
 HEAP32[$88 + 4 >> 2] = 0;
 HEAP32[$88 + 8 >> 2] = 0;
 HEAP32[$88 + 12 >> 2] = 0;
 HEAP16[$88 + 16 >> 1] = 0;
 HEAP8[$this + 462902 >> 0] = -64;
 HEAP8[$this + 462904 >> 0] = 0;
 HEAP32[$this + 462908 >> 2] = 0;
 HEAP8[$this + 462912 >> 0] = -1;
 $93 = $this + 462916 | 0;
 HEAP32[$93 >> 2] = 0;
 HEAP32[$93 + 4 >> 2] = 0;
 HEAP32[$93 + 8 >> 2] = 0;
 HEAP32[$93 + 12 >> 2] = 0;
 HEAP16[$93 + 16 >> 1] = 0;
 HEAP8[$this + 462934 >> 0] = -64;
 HEAP8[$this + 462936 >> 0] = 0;
 HEAP32[$this + 462940 >> 2] = 0;
 HEAP8[$this + 462944 >> 0] = -1;
 $98 = $this + 462948 | 0;
 HEAP32[$98 >> 2] = 0;
 HEAP32[$98 + 4 >> 2] = 0;
 HEAP32[$98 + 8 >> 2] = 0;
 HEAP32[$98 + 12 >> 2] = 0;
 HEAP16[$98 + 16 >> 1] = 0;
 HEAP8[$this + 462966 >> 0] = -64;
 HEAP8[$this + 462968 >> 0] = 0;
 HEAP32[$this + 462972 >> 2] = 0;
 HEAP8[$this + 462976 >> 0] = -1;
 $103 = $this + 462980 | 0;
 HEAP32[$103 >> 2] = 0;
 HEAP32[$103 + 4 >> 2] = 0;
 HEAP32[$103 + 8 >> 2] = 0;
 HEAP32[$103 + 12 >> 2] = 0;
 HEAP16[$103 + 16 >> 1] = 0;
 HEAP8[$this + 462998 >> 0] = -64;
 HEAP8[$this + 463e3 >> 0] = 0;
 HEAP32[$this + 463004 >> 2] = 0;
 HEAP8[$this + 463008 >> 0] = -1;
 $108 = $this + 463012 | 0;
 HEAP32[$108 >> 2] = 0;
 HEAP32[$108 + 4 >> 2] = 0;
 HEAP32[$108 + 8 >> 2] = 0;
 HEAP32[$108 + 12 >> 2] = 0;
 HEAP16[$108 + 16 >> 1] = 0;
 HEAP8[$this + 463030 >> 0] = -64;
 HEAP8[$this + 463032 >> 0] = 0;
 HEAP32[$this + 463036 >> 2] = 0;
 HEAP8[$this + 463040 >> 0] = -1;
 $113 = $this + 463044 | 0;
 HEAP32[$113 >> 2] = 0;
 HEAP32[$113 + 4 >> 2] = 0;
 HEAP32[$113 + 8 >> 2] = 0;
 HEAP32[$113 + 12 >> 2] = 0;
 HEAP16[$113 + 16 >> 1] = 0;
 HEAP8[$this + 463062 >> 0] = -64;
 HEAP8[$this + 463064 >> 0] = 0;
 HEAP32[$this + 463068 >> 2] = 0;
 HEAP8[$this + 463072 >> 0] = -1;
 $118 = $this + 463076 | 0;
 HEAP32[$118 >> 2] = 0;
 HEAP32[$118 + 4 >> 2] = 0;
 HEAP32[$118 + 8 >> 2] = 0;
 HEAP32[$118 + 12 >> 2] = 0;
 HEAP16[$118 + 16 >> 1] = 0;
 HEAP8[$this + 463094 >> 0] = -64;
 HEAP8[$this + 463096 >> 0] = 0;
 HEAP32[$this + 463100 >> 2] = 0;
 HEAP8[$this + 463104 >> 0] = -1;
 $123 = $this + 463108 | 0;
 HEAP32[$123 >> 2] = 0;
 HEAP32[$123 + 4 >> 2] = 0;
 HEAP32[$123 + 8 >> 2] = 0;
 HEAP32[$123 + 12 >> 2] = 0;
 HEAP16[$123 + 16 >> 1] = 0;
 HEAP8[$this + 463126 >> 0] = -64;
 HEAP8[$this + 463128 >> 0] = 0;
 HEAP8[$this + 463132 >> 0] = 0;
 HEAP32[$this + 463136 >> 2] = 0;
 HEAP8[$this + 463140 >> 0] = -1;
 $129 = $this + 463144 | 0;
 HEAP32[$129 >> 2] = 0;
 HEAP32[$129 + 4 >> 2] = 0;
 HEAP32[$129 + 8 >> 2] = 0;
 HEAP32[$129 + 12 >> 2] = 0;
 HEAP16[$129 + 16 >> 1] = 0;
 HEAP8[$this + 463162 >> 0] = -64;
 HEAP16[$this + 463164 >> 1] = 0;
 HEAP8[$this + 463166 >> 0] = 0;
 HEAP8[$this + 463168 >> 0] = 0;
 HEAP8[$this + 463172 >> 0] = 0;
 HEAP32[$this + 463176 >> 2] = 0;
 HEAP8[$this + 463180 >> 0] = -1;
 $137 = $this + 463184 | 0;
 HEAP32[$137 >> 2] = 0;
 HEAP32[$137 + 4 >> 2] = 0;
 HEAP32[$137 + 8 >> 2] = 0;
 HEAP32[$137 + 12 >> 2] = 0;
 HEAP16[$137 + 16 >> 1] = 0;
 HEAP8[$this + 463202 >> 0] = -64;
 HEAP16[$this + 463204 >> 1] = 0;
 HEAP8[$this + 463206 >> 0] = 0;
 HEAP32[$this + 463208 >> 2] = -1;
 HEAP32[$this + 463212 >> 2] = 0;
 HEAP32[$this + 463216 >> 2] = -1;
 HEAP32[$this + 463220 >> 2] = 0;
 HEAP32[$this + 463224 >> 2] = -1;
 HEAP32[$this + 463228 >> 2] = 0;
 HEAP32[$this + 463232 >> 2] = -1;
 HEAP32[$this + 463236 >> 2] = 0;
 HEAP32[$this + 463240 >> 2] = -1;
 HEAP32[$this + 463244 >> 2] = 0;
 HEAP32[$this + 463248 >> 2] = -1;
 HEAP32[$this + 463252 >> 2] = 0;
 HEAP32[$this + 463256 >> 2] = -1;
 HEAP32[$this + 463260 >> 2] = 0;
 HEAP32[$this + 463264 >> 2] = -1;
 HEAP32[$this + 463268 >> 2] = 0;
 HEAP32[$this + 463272 >> 2] = -1;
 HEAP32[$this + 463276 >> 2] = 0;
 HEAP32[$this + 463280 >> 2] = -1;
 HEAP32[$this + 463284 >> 2] = 0;
 HEAP32[$this + 463288 >> 2] = -1;
 HEAP32[$this + 463292 >> 2] = 0;
 HEAP32[$this + 463296 >> 2] = -1;
 HEAP32[$this + 463300 >> 2] = 0;
 HEAP32[$this + 463304 >> 2] = -1;
 HEAP32[$this + 463308 >> 2] = 0;
 HEAP32[$this + 463312 >> 2] = 0;
 HEAP8[$this + 725460 >> 0] = 0;
 HEAP8[$this + 725461 >> 0] = 0;
 $170 = $this + 725464 | 0;
 HEAP16[$this + 725486 >> 1] = 0;
 HEAP8[$this + 725488 >> 0] = 0;
 HEAP16[$this + 725490 >> 1] = 0;
 HEAP8[$this + 725492 >> 0] = 0;
 HEAP32[$170 >> 2] = 0;
 HEAP32[$170 + 4 >> 2] = 0;
 HEAP32[$170 + 8 >> 2] = 0;
 HEAP32[$170 + 12 >> 2] = 0;
 HEAP32[$170 + 16 >> 2] = 0;
 HEAP8[$170 + 20 >> 0] = 0;
 HEAP32[$this + 725496 >> 2] = 2;
 HEAP32[$this + 725500 >> 2] = 2;
 HEAP8[$this + 725504 >> 0] = 0;
 HEAP8[$this + 725505 >> 0] = 0;
 HEAP8[$this + 725506 >> 0] = 0;
 $181 = $this + 725512 | 0;
 HEAP32[$181 >> 2] = 0;
 HEAP32[$181 + 4 >> 2] = 0;
 HEAP32[$this + 725520 >> 2] = 0;
 HEAP8[$this + 725524 >> 0] = 0;
 $187 = $this + 725528 | 0;
 HEAP32[$187 >> 2] = 0;
 HEAP32[$187 + 4 >> 2] = 0;
 HEAP32[$187 + 8 >> 2] = 0;
 HEAP32[$187 + 12 >> 2] = 0;
 return;
}

function __ZN4yakc4kc857poweronENS_10kc85_modelENS_9kc85_caosE($this, $m, $os) {
 $this = $this | 0;
 $m = $m | 0;
 $os = $os | 0;
 var $1 = 0, $10 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $133 = 0, $137 = 0, $138 = 0, $14 = 0, $15 = 0, $152 = 0, $16 = 0, $165 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $56 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $71 = 0, $83 = 0, $86 = 0, $87 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $i$01$i = 0, $i$01$i$i = 0, $uptr$02$i = 0, $uptr$02$i$i = 0, $val$07$i$i = 0;
 if (!$m) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(14947, 0, 34024, 137, 14969);
  _abort();
 }
 $1 = $this + 725504 | 0;
 if (HEAP8[$1 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15029, 0, 34024, 138, 14969);
  _abort();
 }
 HEAP32[$this + 725496 >> 2] = $m;
 HEAP32[$this + 725500 >> 2] = $os;
 HEAP8[$1 >> 0] = 1;
 HEAP32[$this + 725520 >> 2] = 0;
 HEAP8[$this + 725524 >> 0] = 0;
 HEAP8[$this + 725460 >> 0] = 0;
 HEAP8[$this + 725461 >> 0] = 0;
 __ZN4yakc4kc8519update_rom_pointersEv($this);
 $10 = ($m | 0) == 4;
 $12 = $this + 65536 | 0;
 HEAP32[$12 >> 2] = $10 ? 1770 : 1750;
 $13 = $this + 65540 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP32[$13 + 12 >> 2] = 0;
 HEAP32[$13 + 16 >> 2] = 0;
 $14 = $this + 65560 | 0;
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 HEAP32[$14 + 12 >> 2] = 0;
 HEAP32[$14 + 16 >> 2] = 0;
 $15 = $this + 65580 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 HEAP32[$15 + 16 >> 2] = 0;
 $16 = $this + 65600 | 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = 0;
 HEAP32[$16 + 12 >> 2] = 0;
 HEAP32[$16 + 16 >> 2] = 0;
 $18 = $this + 69256 | 0;
 $19 = $18;
 HEAP8[$19 >> 0] = 0;
 HEAP8[$19 + 1 >> 0] = 0;
 HEAP8[$19 + 2 >> 0] = 0;
 HEAP8[$19 + 3 >> 0] = 0;
 $21 = $18 + 4 | 0;
 HEAP8[$21 >> 0] = 0;
 HEAP8[$21 + 1 >> 0] = 0;
 HEAP8[$21 + 2 >> 0] = 0;
 HEAP8[$21 + 3 >> 0] = 0;
 $22 = $this + 69284 | 0;
 HEAP8[$22 >> 0] = 2;
 HEAP8[$this + 69285 >> 0] = 0;
 HEAP16[$22 + 2 >> 1] = 0;
 $25 = $this + 69288 | 0;
 HEAP32[$25 >> 2] = 0;
 HEAP32[$25 + 4 >> 2] = 0;
 HEAP32[$25 + 8 >> 2] = 0;
 HEAP32[$25 + 12 >> 2] = 0;
 HEAP32[$25 + 16 >> 2] = 0;
 HEAP32[$25 + 20 >> 2] = 0;
 HEAP8[$this + 69312 >> 0] = 1;
 $27 = $this + 69313 | 0;
 HEAP8[$27 >> 0] = 0;
 HEAP8[$27 + 1 >> 0] = 0;
 HEAP8[$27 + 2 >> 0] = 0;
 HEAP8[$27 + 3 >> 0] = 0;
 $28 = $22 + 33 | 0;
 HEAP8[$28 >> 0] = 0;
 HEAP8[$28 + 1 >> 0] = 0;
 HEAP8[$28 + 2 >> 0] = 0;
 $29 = $this + 69320 | 0;
 HEAP32[$29 >> 2] = 0;
 $30 = $this + 69324 | 0;
 HEAP32[$30 >> 2] = 0;
 $31 = $this + 69328 | 0;
 HEAP32[$31 >> 2] = 0;
 $32 = $this + 69332 | 0;
 HEAP8[$32 >> 0] = 2;
 HEAP8[$this + 69333 >> 0] = 0;
 HEAP16[$32 + 2 >> 1] = 0;
 $35 = $this + 69336 | 0;
 HEAP32[$35 >> 2] = 0;
 HEAP32[$35 + 4 >> 2] = 0;
 HEAP32[$35 + 8 >> 2] = 0;
 HEAP32[$35 + 12 >> 2] = 0;
 HEAP32[$35 + 16 >> 2] = 0;
 HEAP32[$35 + 20 >> 2] = 0;
 HEAP8[$this + 69360 >> 0] = 1;
 $37 = $this + 69361 | 0;
 HEAP8[$37 >> 0] = 0;
 HEAP8[$37 + 1 >> 0] = 0;
 HEAP8[$37 + 2 >> 0] = 0;
 HEAP8[$37 + 3 >> 0] = 0;
 $38 = $32 + 33 | 0;
 HEAP8[$38 >> 0] = 0;
 HEAP8[$38 + 1 >> 0] = 0;
 HEAP8[$38 + 2 >> 0] = 0;
 $39 = $this + 69368 | 0;
 HEAP32[$39 >> 2] = 0;
 $40 = $this + 69372 | 0;
 HEAP32[$40 >> 2] = 0;
 $41 = $this + 69376 | 0;
 HEAP32[$41 >> 2] = 0;
 $42 = $this + 69380 | 0;
 HEAP8[$42 >> 0] = 2;
 HEAP8[$this + 69381 >> 0] = 0;
 HEAP16[$42 + 2 >> 1] = 0;
 $45 = $this + 69384 | 0;
 $46 = $this + 69392 | 0;
 HEAP32[$45 >> 2] = 0;
 HEAP32[$45 + 4 >> 2] = 0;
 HEAP32[$45 + 8 >> 2] = 0;
 HEAP32[$45 + 12 >> 2] = 0;
 HEAP32[$45 + 16 >> 2] = 0;
 HEAP32[$45 + 20 >> 2] = 0;
 HEAP8[$this + 69408 >> 0] = 1;
 $48 = $this + 69409 | 0;
 HEAP8[$48 >> 0] = 0;
 HEAP8[$48 + 1 >> 0] = 0;
 HEAP8[$48 + 2 >> 0] = 0;
 HEAP8[$48 + 3 >> 0] = 0;
 $49 = $42 + 33 | 0;
 HEAP8[$49 >> 0] = 0;
 HEAP8[$49 + 1 >> 0] = 0;
 HEAP8[$49 + 2 >> 0] = 0;
 $50 = $this + 69416 | 0;
 HEAP32[$50 >> 2] = 0;
 $51 = $this + 69420 | 0;
 HEAP32[$51 >> 2] = 0;
 $52 = $this + 69424 | 0;
 HEAP32[$52 >> 2] = 0;
 $53 = $this + 69428 | 0;
 HEAP8[$53 >> 0] = 2;
 HEAP8[$this + 69429 >> 0] = 0;
 HEAP16[$53 + 2 >> 1] = 0;
 $56 = $this + 69432 | 0;
 HEAP32[$56 >> 2] = 0;
 HEAP32[$56 + 4 >> 2] = 0;
 HEAP32[$56 + 8 >> 2] = 0;
 HEAP32[$56 + 12 >> 2] = 0;
 HEAP32[$56 + 16 >> 2] = 0;
 HEAP32[$56 + 20 >> 2] = 0;
 HEAP8[$this + 69456 >> 0] = 1;
 $58 = $this + 69457 | 0;
 HEAP8[$58 >> 0] = 0;
 HEAP8[$58 + 1 >> 0] = 0;
 HEAP8[$58 + 2 >> 0] = 0;
 HEAP8[$58 + 3 >> 0] = 0;
 $59 = $53 + 33 | 0;
 HEAP8[$59 >> 0] = 0;
 HEAP8[$59 + 1 >> 0] = 0;
 HEAP8[$59 + 2 >> 0] = 0;
 $60 = $this + 69464 | 0;
 HEAP32[$60 >> 2] = 0;
 $61 = $this + 69468 | 0;
 HEAP32[$61 >> 2] = 0;
 $62 = $this + 69472 | 0;
 HEAP32[$62 >> 2] = 0;
 $63 = $this + 65620 | 0;
 $val$07$i$i = 0;
 do {
  $71 = $val$07$i$i & 128;
  HEAP8[$this + 65651 + $val$07$i$i >> 0] = (($val$07$i$i | 0 ? $71 : 64) | $val$07$i$i & 40 | ($val$07$i$i >>> 5) + ($val$07$i$i & 1) + ($val$07$i$i >>> 6) + ($val$07$i$i >>> 3) + ($val$07$i$i >>> 4) + ($val$07$i$i >>> 1) + ($val$07$i$i >>> 2) + ($71 >>> 7) << 2 & 4) ^ 4;
  $val$07$i$i = $val$07$i$i + 1 | 0;
 } while (($val$07$i$i | 0) != 256);
 $83 = $this + 65642 | 0;
 HEAP8[$this + 69252 >> 0] = 0;
 HEAP8[$this + 69253 >> 0] = 0;
 $86 = $83;
 $87 = $86;
 HEAP16[$87 >> 1] = 0;
 HEAP16[$87 + 2 >> 1] = 0 >>> 16;
 $89 = $86 + 4 | 0;
 HEAP16[$89 >> 1] = 0;
 HEAP16[$89 + 2 >> 1] = 0 >>> 16;
 HEAP32[$this + 69236 >> 2] = 18;
 $91 = $this + 69240 | 0;
 HEAP32[$91 >> 2] = 4;
 $92 = $this + 69244 | 0;
 HEAP32[$92 >> 2] = $this;
 HEAP8[$this + 463128 >> 0] = 8;
 HEAP8[$this + 463168 >> 0] = 12;
 $95 = $this + 69476 | 0;
 HEAP32[$this + 462692 >> 2] = $m;
 HEAP8[$this + 462696 >> 0] = 0;
 if ($10) _memset($95 | 0, 0, 65536) | 0; else {
  $i$01$i$i = 0;
  $uptr$02$i$i = $95;
  while (1) {
   HEAP32[$uptr$02$i$i >> 2] = _rand() | 0;
   $i$01$i$i = $i$01$i$i + 1 | 0;
   if (($i$01$i$i | 0) == 16384) break; else $uptr$02$i$i = $uptr$02$i$i + 4 | 0;
  }
 }
 HEAP32[$this + 462704 >> 2] = -16777216;
 HEAP32[$this + 462708 >> 2] = -65536;
 HEAP32[$this + 462712 >> 2] = -16776961;
 HEAP32[$this + 462716 >> 2] = -65281;
 HEAP32[$this + 462720 >> 2] = -16711936;
 HEAP32[$this + 462724 >> 2] = -256;
 HEAP32[$this + 462728 >> 2] = -16711681;
 HEAP32[$this + 462732 >> 2] = -1;
 HEAP32[$this + 462736 >> 2] = -16777216;
 HEAP32[$this + 462740 >> 2] = -65376;
 HEAP32[$this + 462744 >> 2] = -16736001;
 HEAP32[$this + 462748 >> 2] = -6291201;
 HEAP32[$this + 462752 >> 2] = -6226176;
 HEAP32[$this + 462756 >> 2] = -24576;
 HEAP32[$this + 462760 >> 2] = -16711776;
 HEAP32[$this + 462764 >> 2] = -1;
 HEAP32[$this + 462768 >> 2] = -16777216;
 HEAP32[$this + 462772 >> 2] = -6291456;
 HEAP32[$this + 462776 >> 2] = -16777056;
 HEAP32[$this + 462780 >> 2] = -6291296;
 HEAP32[$this + 462784 >> 2] = -16736256;
 HEAP32[$this + 462788 >> 2] = -6250496;
 HEAP32[$this + 462792 >> 2] = -16736096;
 HEAP32[$this + 462796 >> 2] = -6250336;
 $125 = $this + 462832 | 0;
 HEAP32[$125 >> 2] = $22;
 HEAP32[$this + 69304 >> 2] = 123;
 HEAP32[$this + 69308 >> 2] = $125;
 HEAP32[$this + 69352 >> 2] = 124;
 HEAP32[$this + 69356 >> 2] = $125;
 $130 = $this + 462860 | 0;
 $131 = HEAP32[$130 >> 2] | 0;
 if ($131 | 0) {
  $133 = $this + 462864 | 0;
  FUNCTION_TABLE_viiii[$131 & 7](HEAP32[$133 >> 2] | 0, 0, 0, 0);
  FUNCTION_TABLE_viiii[HEAP32[$130 >> 2] & 7](HEAP32[$133 >> 2] | 0, 0, 0, 1);
 }
 $137 = $this + 462868 | 0;
 HEAP8[$137 >> 0] = 2;
 HEAP8[$137 + 1 >> 0] = 0;
 $138 = $this + 462870 | 0;
 HEAP8[$138 >> 0] = 2;
 HEAP8[$138 + 1 >> 0] = 0;
 HEAP32[$this + 69272 >> 2] = 125;
 HEAP32[$this + 69276 >> 2] = $63;
 HEAP32[$29 >> 2] = 125;
 HEAP32[$30 >> 2] = $63;
 HEAP32[$39 >> 2] = 125;
 HEAP32[$40 >> 2] = $63;
 HEAP32[$50 >> 2] = 125;
 HEAP32[$51 >> 2] = $63;
 HEAP32[$60 >> 2] = 125;
 HEAP32[$61 >> 2] = $63;
 HEAP32[$this + 69248 >> 2] = $this + 69312;
 HEAP32[$31 >> 2] = $this + 69360;
 HEAP32[$41 >> 2] = $this + 69408;
 HEAP32[$52 >> 2] = $this + 69456;
 HEAP32[$62 >> 2] = $this + 69264;
 if ($10) _memset($this | 0, 0, 65536) | 0; else {
  $i$01$i = 0;
  $uptr$02$i = $this;
  while (1) {
   HEAP32[$uptr$02$i >> 2] = _rand() | 0;
   $i$01$i = $i$01$i + 1 | 0;
   if (($i$01$i | 0) == 16384) break; else $uptr$02$i = $uptr$02$i + 4 | 0;
  }
 }
 HEAP32[$this + 65540 >> 2] = 50;
 HEAP32[$this + 65544 >> 2] = 0;
 $152 = HEAP32[$12 >> 2] | 0;
 HEAP32[$this + 65548 >> 2] = $152 * 20;
 HEAP32[$this + 65552 >> 2] = 126;
 HEAP32[$this + 65556 >> 2] = $22;
 HEAP32[$this + 65560 >> 2] = 15642;
 HEAP32[$this + 65564 >> 2] = 0;
 HEAP32[$this + 65568 >> 2] = ($152 * 1e3 | 0) / 15642 | 0;
 HEAP32[$this + 65572 >> 2] = 127;
 HEAP32[$this + 65576 >> 2] = $95;
 HEAP32[$46 >> 2] = 128;
 HEAP32[$this + 69396 >> 2] = $95;
 $165 = HEAP32[$91 >> 2] | 0;
 if (!$165) {
  HEAP16[$83 >> 1] = -4096;
  return;
 }
 FUNCTION_TABLE_viii[$165 & 7](HEAP32[$92 >> 2] | 0, 136, -97);
 HEAP16[$83 >> 1] = -4096;
 return;
}

function __ZN5ImGui6RenderEv() {
 var $$phi$trans$insert = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $106 = 0, $108 = 0, $113 = 0, $115 = 0, $125 = 0, $128 = 0, $129 = 0.0, $130 = 0.0, $131 = 0, $133 = 0.0, $135 = 0.0, $139 = 0, $14 = 0, $140 = 0, $141 = 0.0, $142 = 0.0, $145 = 0.0, $147 = 0, $148 = 0, $149 = 0, $150 = 0.0, $154 = 0, $158 = 0, $160 = 0.0, $168 = 0, $169 = 0, $170 = 0, $179 = 0, $18 = 0, $19 = 0, $193 = 0, $195 = 0, $198 = 0, $2 = 0, $20 = 0, $203 = 0, $204 = 0, $208 = 0, $21 = 0, $210 = 0, $215 = 0, $216 = 0, $219 = 0, $22 = 0, $221 = 0, $224 = 0, $229 = 0, $23 = 0, $230 = 0, $234 = 0, $236 = 0, $241 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $37 = 0, $38 = 0, $4 = 0, $42 = 0, $44 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $60 = 0, $63 = 0, $66 = 0, $74 = 0, $83 = 0, $86 = 0, $9 = 0, $92 = 0, $93 = 0, $96 = 0, $i1$055 = 0, $n$1 = 0, $pos = 0, $tex_id = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $pos = sp + 56 | 0;
 $tex_id = sp + 48 | 0;
 $0 = sp + 40 | 0;
 $1 = sp + 32 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 if (!(HEAP8[146892] | 0)) ___assert_fail(124692, 124187, 2426, 126316);
 $9 = HEAP32[38193] | 0;
 $10 = 152768;
 if (($9 | 0) == (HEAP32[$10 >> 2] | 0)) $14 = $9; else {
  __ZN5ImGui8EndFrameEv();
  $14 = HEAP32[$10 >> 2] | 0;
 }
 HEAP32[38194] = $14;
 if (!(+HEAPF32[37984] > 0.0)) {
  STACKTOP = sp;
  return;
 }
 $18 = 147676;
 HEAP32[$18 >> 2] = 0;
 $19 = 147672;
 HEAP32[$19 >> 2] = 0;
 $20 = 147668;
 HEAP32[$20 >> 2] = 0;
 $21 = 153012;
 $22 = 153016;
 $23 = HEAP32[$22 >> 2] | 0;
 if (($23 | 0) < 0) {
  $27 = (($23 | 0) / 2 | 0) + $23 | 0;
  $29 = ($27 | 0) > 0 ? $27 : 0;
  if (($23 | 0) < ($29 | 0)) {
   $32 = 147664;
   HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
   $37 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($29 << 2) | 0;
   $38 = 153020;
   _memcpy($37 | 0, HEAP32[$38 >> 2] | 0, HEAP32[$21 >> 2] << 2 | 0) | 0;
   $42 = HEAP32[$38 >> 2] | 0;
   if ($42 | 0) {
    $44 = 147664;
    HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($42);
   HEAP32[$38 >> 2] = $37;
   HEAP32[$22 >> 2] = $29;
  }
 }
 HEAP32[$21 >> 2] = 0;
 $49 = 153024;
 $50 = 153028;
 $51 = HEAP32[$50 >> 2] | 0;
 if (($51 | 0) < 0) {
  $193 = (($51 | 0) / 2 | 0) + $51 | 0;
  $195 = ($193 | 0) > 0 ? $193 : 0;
  if (($51 | 0) < ($195 | 0)) {
   $198 = 147664;
   HEAP32[$198 >> 2] = (HEAP32[$198 >> 2] | 0) + 1;
   $203 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($195 << 2) | 0;
   $204 = 153032;
   _memcpy($203 | 0, HEAP32[$204 >> 2] | 0, HEAP32[$49 >> 2] << 2 | 0) | 0;
   $208 = HEAP32[$204 >> 2] | 0;
   if ($208 | 0) {
    $210 = 147664;
    HEAP32[$210 >> 2] = (HEAP32[$210 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($208);
   HEAP32[$204 >> 2] = $203;
   HEAP32[$50 >> 2] = $195;
  }
 }
 HEAP32[$49 >> 2] = 0;
 $83 = 153036;
 $215 = 153040;
 $216 = HEAP32[$215 >> 2] | 0;
 if (($216 | 0) < 0) {
  $219 = (($216 | 0) / 2 | 0) + $216 | 0;
  $221 = ($219 | 0) > 0 ? $219 : 0;
  if (($216 | 0) < ($221 | 0)) {
   $224 = 147664;
   HEAP32[$224 >> 2] = (HEAP32[$224 >> 2] | 0) + 1;
   $229 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($221 << 2) | 0;
   $230 = 153044;
   _memcpy($229 | 0, HEAP32[$230 >> 2] | 0, HEAP32[$83 >> 2] << 2 | 0) | 0;
   $234 = HEAP32[$230 >> 2] | 0;
   if ($234 | 0) {
    $236 = 147664;
    HEAP32[$236 >> 2] = (HEAP32[$236 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($234);
   HEAP32[$230 >> 2] = $229;
   HEAP32[$215 >> 2] = $221;
  }
 }
 HEAP32[$83 >> 2] = 0;
 $86 = 152780;
 $241 = HEAP32[$86 >> 2] | 0;
 do if (!$241) {
  $$pre$phiZ2D = 153036;
  $59 = 0;
 } else {
  $25 = 152788;
  $63 = $241;
  $i1$055 = 0;
  while (1) {
   if (($63 | 0) <= ($i1$055 | 0)) {
    label = 16;
    break;
   }
   $66 = HEAP32[(HEAP32[$25 >> 2] | 0) + ($i1$055 << 2) >> 2] | 0;
   do if (HEAP8[$66 + 112 >> 0] | 0) if ((HEAP32[$66 + 144 >> 2] | 0) < 1) {
    $74 = HEAP32[$66 + 8 >> 2] | 0;
    if (!($74 & 1048576)) {
     HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
     if ($74 & 33554432 | 0) {
      __ZL21AddWindowToRenderListR8ImVectorIP10ImDrawListEP11ImGuiWindow($49, $66);
      break;
     }
     if (!($74 & 16777216)) {
      __ZL21AddWindowToRenderListR8ImVectorIP10ImDrawListEP11ImGuiWindow($21, $66);
      break;
     } else {
      __ZL21AddWindowToRenderListR8ImVectorIP10ImDrawListEP11ImGuiWindow($83, $66);
      break;
     }
    }
   } while (0);
   $i1$055 = $i1$055 + 1 | 0;
   $63 = HEAP32[$86 >> 2] | 0;
   if (($i1$055 | 0) == ($63 | 0)) {
    label = 13;
    break;
   }
  }
  if ((label | 0) == 13) {
   $$phi$trans$insert = 153036;
   $$pre$phiZ2D = $$phi$trans$insert;
   $59 = HEAP32[$$phi$trans$insert >> 2] | 0;
   break;
  } else if ((label | 0) == 16) ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 $53 = 153012;
 $54 = HEAP32[$53 >> 2] | 0;
 $55 = 153024;
 $56 = HEAP32[$55 >> 2] | 0;
 $58 = $59 + ($56 + $54) | 0;
 $60 = HEAP32[$22 >> 2] | 0;
 if (($60 | 0) < ($58 | 0)) {
  if (!$60) $92 = 8; else $92 = (($60 | 0) / 2 | 0) + $60 | 0;
  $93 = ($92 | 0) > ($58 | 0) ? $92 : $58;
  if (($60 | 0) < ($93 | 0)) {
   $96 = 147664;
   HEAP32[$96 >> 2] = (HEAP32[$96 >> 2] | 0) + 1;
   $101 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($93 << 2) | 0;
   $102 = 153020;
   _memcpy($101 | 0, HEAP32[$102 >> 2] | 0, HEAP32[$53 >> 2] << 2 | 0) | 0;
   $106 = HEAP32[$102 >> 2] | 0;
   if ($106 | 0) {
    $108 = 147664;
    HEAP32[$108 >> 2] = (HEAP32[$108 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($106);
   HEAP32[$102 >> 2] = $101;
   HEAP32[$22 >> 2] = $93;
   $115 = HEAP32[$55 >> 2] | 0;
  } else $115 = $56;
 } else $115 = $56;
 HEAP32[$53 >> 2] = $58;
 $113 = 153020;
 do if (!$115) $n$1 = $54; else {
  if (($58 | 0) <= ($54 | 0)) ___assert_fail(127217, 127226, 805, 127272);
  if (($115 | 0) > 0) {
   _memcpy((HEAP32[$113 >> 2] | 0) + ($54 << 2) | 0, HEAP32[38258] | 0, $115 << 2 | 0) | 0;
   $n$1 = (HEAP32[$55 >> 2] | 0) + $54 | 0;
   break;
  } else ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 $125 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 do if ($125 | 0) {
  if ((HEAP32[$53 >> 2] | 0) <= ($n$1 | 0)) ___assert_fail(127217, 127226, 805, 127272);
  if (($125 | 0) > 0) {
   _memcpy((HEAP32[$113 >> 2] | 0) + ($n$1 << 2) | 0, HEAP32[38261] | 0, $125 << 2 | 0) | 0;
   break;
  } else ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 if (HEAP8[147104] | 0) {
  $128 = HEAP32[38290] | 0;
  $129 = +HEAPF32[36771] - +HEAPF32[153164 + ($128 * 52 | 0) + 4 >> 2];
  $130 = +HEAPF32[36772] - +HEAPF32[153164 + ($128 * 52 | 0) + 8 >> 2];
  HEAPF32[$pos >> 2] = $129;
  $131 = $pos + 4 | 0;
  HEAPF32[$131 >> 2] = $130;
  $133 = +HEAPF32[153164 + ($128 * 52 | 0) + 12 >> 2];
  $135 = +HEAPF32[153164 + ($128 * 52 | 0) + 16 >> 2];
  HEAP32[$tex_id >> 2] = HEAP32[HEAP32[36755] >> 2];
  $139 = 153052;
  __ZN10ImDrawList13PushTextureIDERKPv($139, $tex_id);
  $140 = HEAP32[$tex_id >> 2] | 0;
  $141 = $129 + 1.0;
  $142 = $130 + 0.0;
  HEAPF32[$0 >> 2] = $141;
  HEAPF32[$0 + 4 >> 2] = $142;
  $145 = $135 + $142;
  HEAPF32[$1 >> 2] = $133 + $141;
  HEAPF32[$1 + 4 >> 2] = $145;
  $147 = 153164 + ($128 * 52 | 0) + 28 | 0;
  $148 = 153164 + ($128 * 52 | 0) + 44 | 0;
  __ZN10ImDrawList8AddImageEPvRK6ImVec2S3_S3_S3_j($139, $140, $0, $1, $147, $148, 805306368);
  $149 = HEAP32[$tex_id >> 2] | 0;
  $150 = $129 + 2.0;
  HEAPF32[$2 >> 2] = $150;
  HEAPF32[$2 + 4 >> 2] = $142;
  HEAPF32[$3 >> 2] = $133 + $150;
  HEAPF32[$3 + 4 >> 2] = $145;
  __ZN10ImDrawList8AddImageEPvRK6ImVec2S3_S3_S3_j($139, $149, $2, $3, $147, $148, 805306368);
  $154 = HEAP32[$tex_id >> 2] | 0;
  HEAPF32[$4 >> 2] = $133 + $129;
  HEAPF32[$4 + 4 >> 2] = $135 + $130;
  __ZN10ImDrawList8AddImageEPvRK6ImVec2S3_S3_S3_j($139, $154, $pos, $4, $147, $148, -16777216);
  $158 = HEAP32[$tex_id >> 2] | 0;
  $160 = $135 + +HEAPF32[$131 >> 2];
  HEAPF32[$5 >> 2] = $133 + +HEAPF32[$pos >> 2];
  HEAPF32[$5 + 4 >> 2] = $160;
  __ZN10ImDrawList8AddImageEPvRK6ImVec2S3_S3_S3_j($139, $158, $pos, $5, 153164 + ($128 * 52 | 0) + 20 | 0, 153164 + ($128 * 52 | 0) + 36 | 0, -1);
  __ZN10ImDrawList12PopTextureIDEv($139);
 }
 if (HEAP32[38269] | 0) __ZL23AddDrawListToRenderListR8ImVectorIP10ImDrawListES1_($53, 153052);
 $168 = 152992;
 HEAP8[$168 >> 0] = 1;
 $169 = HEAP32[$53 >> 2] | 0;
 $170 = ($169 | 0) > 0;
 HEAP32[38249] = $170 ? HEAP32[$113 >> 2] | 0 : 0;
 HEAP32[38250] = $169;
 HEAP32[38251] = HEAP32[$20 >> 2];
 HEAP32[38252] = HEAP32[$19 >> 2];
 if (!($170 ? $170 : 0)) {
  STACKTOP = sp;
  return;
 }
 $179 = HEAP32[36764] | 0;
 if (!$179) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[$179 & 255]($168);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv12imguiWrapper21setupMeshAndDrawStateEv($this) {
 $this = $this | 0;
 var $$lo19 = 0, $$lo8 = 0, $0 = 0, $1 = 0, $10 = 0, $15 = 0, $2 = 0, $20 = 0, $203 = 0, $207 = 0, $21 = 0, $210 = 0, $215 = 0, $216 = 0, $217 = 0, $228 = 0, $229 = 0, $237 = 0, $244 = 0, $250 = 0, $255 = 0, $26 = 0, $260 = 0, $261 = 0, $3 = 0, $4 = 0, $meshSetup = 0, $ps = 0, $shd = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 3600 | 0;
 $meshSetup = sp + 3400 | 0;
 $0 = sp + 3392 | 0;
 $1 = sp + 3592 | 0;
 $shd = sp + 3384 | 0;
 $2 = sp + 8 | 0;
 $ps = sp + 3056 | 0;
 $3 = sp;
 __ZN5Oryol9MeshSetup5EmptyEiNS_5Usage4CodeENS_9IndexType4CodeEiS2_($meshSetup, 65536, 2, 1, 131072, 2);
 $4 = $meshSetup + 8 | 0;
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE(__ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE(__ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($4, 0, 1) | 0, 2, 1) | 0, 10, 7) | 0;
 if ((HEAP8[$meshSetup + 75 >> 0] | 0) != 20) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80328, 0, 80002, 109, 80378);
  _abort();
 }
 $10 = $this + 16 | 0;
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 157, 80435);
  _abort();
 }
 __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_9MeshSetupEEENS_2IdERKT_($0, (HEAP32[36694] | 0) + 1168 | 0, $meshSetup);
 if (($10 | 0) == ($0 | 0)) $26 = HEAP32[$0 + 4 >> 2] | 0; else {
  $15 = $0;
  $20 = HEAP32[$15 + 4 >> 2] | 0;
  $21 = $10;
  HEAP32[$21 >> 2] = HEAP32[$15 >> 2];
  HEAP32[$21 + 4 >> 2] = $20;
  $26 = $20;
 }
 if (($26 | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80521, 0, 80002, 111, 80378);
  _abort();
 }
 __ZN5Oryol3Gfx17QueryResourceInfoERKNS_2IdE($1, $10);
 if ((HEAP32[$1 >> 2] | 0) != 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80555, 0, 80002, 112, 80378);
  _abort();
 }
 __ZN5Oryol10IMUIShader5SetupEv($2);
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 157, 80633);
  _abort();
 }
 __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_11ShaderSetupEEENS_2IdERKT_($shd, (HEAP32[36694] | 0) + 1168 | 0, $2);
 HEAP32[$2 + 3028 >> 2] = 0;
 HEAP32[$2 + 3016 >> 2] = 0;
 HEAP32[$2 + 3004 >> 2] = 0;
 HEAP32[$2 + 2992 >> 2] = 0;
 HEAP32[$2 + 2980 >> 2] = 0;
 HEAP32[$2 + 2968 >> 2] = 0;
 HEAP32[$2 + 2956 >> 2] = 0;
 HEAP32[$2 + 2944 >> 2] = 0;
 HEAP32[$2 + 2932 >> 2] = 0;
 HEAP32[$2 + 2920 >> 2] = 0;
 HEAP32[$2 + 2908 >> 2] = 0;
 HEAP32[$2 + 2896 >> 2] = 0;
 HEAP32[$2 + 2884 >> 2] = 0;
 HEAP32[$2 + 2872 >> 2] = 0;
 HEAP32[$2 + 2860 >> 2] = 0;
 HEAP32[$2 + 2848 >> 2] = 0;
 HEAP32[$2 + 2840 >> 2] = 0;
 HEAP32[$2 + 2824 >> 2] = 0;
 HEAP32[$2 + 2812 >> 2] = 0;
 HEAP32[$2 + 2800 >> 2] = 0;
 HEAP32[$2 + 2788 >> 2] = 0;
 HEAP32[$2 + 2776 >> 2] = 0;
 HEAP32[$2 + 2764 >> 2] = 0;
 HEAP32[$2 + 2752 >> 2] = 0;
 HEAP32[$2 + 2740 >> 2] = 0;
 HEAP32[$2 + 2728 >> 2] = 0;
 HEAP32[$2 + 2716 >> 2] = 0;
 HEAP32[$2 + 2704 >> 2] = 0;
 HEAP32[$2 + 2692 >> 2] = 0;
 HEAP32[$2 + 2680 >> 2] = 0;
 HEAP32[$2 + 2668 >> 2] = 0;
 HEAP32[$2 + 2656 >> 2] = 0;
 HEAP32[$2 + 2644 >> 2] = 0;
 HEAP32[$2 + 2636 >> 2] = 0;
 HEAP32[$2 + 2548 >> 2] = 0;
 HEAP32[$2 + 2536 >> 2] = 0;
 HEAP32[$2 + 2524 >> 2] = 0;
 HEAP32[$2 + 2512 >> 2] = 0;
 HEAP32[$2 + 2500 >> 2] = 0;
 HEAP32[$2 + 2488 >> 2] = 0;
 HEAP32[$2 + 2476 >> 2] = 0;
 HEAP32[$2 + 2464 >> 2] = 0;
 HEAP32[$2 + 2452 >> 2] = 0;
 HEAP32[$2 + 2440 >> 2] = 0;
 HEAP32[$2 + 2428 >> 2] = 0;
 HEAP32[$2 + 2416 >> 2] = 0;
 HEAP32[$2 + 2404 >> 2] = 0;
 HEAP32[$2 + 2392 >> 2] = 0;
 HEAP32[$2 + 2380 >> 2] = 0;
 HEAP32[$2 + 2368 >> 2] = 0;
 HEAP32[$2 + 2344 >> 2] = 0;
 HEAP32[$2 + 2260 >> 2] = 0;
 HEAP32[$2 + 2248 >> 2] = 0;
 HEAP32[$2 + 2236 >> 2] = 0;
 HEAP32[$2 + 2224 >> 2] = 0;
 HEAP32[$2 + 2212 >> 2] = 0;
 HEAP32[$2 + 2200 >> 2] = 0;
 HEAP32[$2 + 2188 >> 2] = 0;
 HEAP32[$2 + 2176 >> 2] = 0;
 HEAP32[$2 + 2164 >> 2] = 0;
 HEAP32[$2 + 2152 >> 2] = 0;
 HEAP32[$2 + 2140 >> 2] = 0;
 HEAP32[$2 + 2128 >> 2] = 0;
 HEAP32[$2 + 2116 >> 2] = 0;
 HEAP32[$2 + 2104 >> 2] = 0;
 HEAP32[$2 + 2092 >> 2] = 0;
 HEAP32[$2 + 2080 >> 2] = 0;
 HEAP32[$2 + 2056 >> 2] = 0;
 HEAP32[$2 + 1972 >> 2] = 0;
 HEAP32[$2 + 1960 >> 2] = 0;
 HEAP32[$2 + 1948 >> 2] = 0;
 HEAP32[$2 + 1936 >> 2] = 0;
 HEAP32[$2 + 1924 >> 2] = 0;
 HEAP32[$2 + 1912 >> 2] = 0;
 HEAP32[$2 + 1900 >> 2] = 0;
 HEAP32[$2 + 1888 >> 2] = 0;
 HEAP32[$2 + 1876 >> 2] = 0;
 HEAP32[$2 + 1864 >> 2] = 0;
 HEAP32[$2 + 1852 >> 2] = 0;
 HEAP32[$2 + 1840 >> 2] = 0;
 HEAP32[$2 + 1828 >> 2] = 0;
 HEAP32[$2 + 1816 >> 2] = 0;
 HEAP32[$2 + 1804 >> 2] = 0;
 HEAP32[$2 + 1792 >> 2] = 0;
 HEAP32[$2 + 1768 >> 2] = 0;
 HEAP32[$2 + 1684 >> 2] = 0;
 HEAP32[$2 + 1672 >> 2] = 0;
 HEAP32[$2 + 1660 >> 2] = 0;
 HEAP32[$2 + 1648 >> 2] = 0;
 HEAP32[$2 + 1636 >> 2] = 0;
 HEAP32[$2 + 1624 >> 2] = 0;
 HEAP32[$2 + 1612 >> 2] = 0;
 HEAP32[$2 + 1600 >> 2] = 0;
 HEAP32[$2 + 1588 >> 2] = 0;
 HEAP32[$2 + 1576 >> 2] = 0;
 HEAP32[$2 + 1564 >> 2] = 0;
 HEAP32[$2 + 1552 >> 2] = 0;
 HEAP32[$2 + 1540 >> 2] = 0;
 HEAP32[$2 + 1528 >> 2] = 0;
 HEAP32[$2 + 1516 >> 2] = 0;
 HEAP32[$2 + 1504 >> 2] = 0;
 HEAP32[$2 + 1480 >> 2] = 0;
 HEAP32[$2 + 1396 >> 2] = 0;
 HEAP32[$2 + 1384 >> 2] = 0;
 HEAP32[$2 + 1372 >> 2] = 0;
 HEAP32[$2 + 1360 >> 2] = 0;
 HEAP32[$2 + 1348 >> 2] = 0;
 HEAP32[$2 + 1336 >> 2] = 0;
 HEAP32[$2 + 1324 >> 2] = 0;
 HEAP32[$2 + 1312 >> 2] = 0;
 HEAP32[$2 + 1300 >> 2] = 0;
 HEAP32[$2 + 1288 >> 2] = 0;
 HEAP32[$2 + 1276 >> 2] = 0;
 HEAP32[$2 + 1264 >> 2] = 0;
 HEAP32[$2 + 1252 >> 2] = 0;
 HEAP32[$2 + 1240 >> 2] = 0;
 HEAP32[$2 + 1228 >> 2] = 0;
 HEAP32[$2 + 1216 >> 2] = 0;
 HEAP32[$2 + 1192 >> 2] = 0;
 HEAP32[$2 + 1108 >> 2] = 0;
 HEAP32[$2 + 1096 >> 2] = 0;
 HEAP32[$2 + 1084 >> 2] = 0;
 HEAP32[$2 + 1072 >> 2] = 0;
 HEAP32[$2 + 1060 >> 2] = 0;
 HEAP32[$2 + 1048 >> 2] = 0;
 HEAP32[$2 + 1036 >> 2] = 0;
 HEAP32[$2 + 1024 >> 2] = 0;
 HEAP32[$2 + 1012 >> 2] = 0;
 HEAP32[$2 + 1e3 >> 2] = 0;
 HEAP32[$2 + 988 >> 2] = 0;
 HEAP32[$2 + 976 >> 2] = 0;
 HEAP32[$2 + 964 >> 2] = 0;
 HEAP32[$2 + 952 >> 2] = 0;
 HEAP32[$2 + 940 >> 2] = 0;
 HEAP32[$2 + 928 >> 2] = 0;
 HEAP32[$2 + 904 >> 2] = 0;
 HEAP32[$2 + 820 >> 2] = 0;
 HEAP32[$2 + 808 >> 2] = 0;
 HEAP32[$2 + 796 >> 2] = 0;
 HEAP32[$2 + 784 >> 2] = 0;
 HEAP32[$2 + 772 >> 2] = 0;
 HEAP32[$2 + 760 >> 2] = 0;
 HEAP32[$2 + 748 >> 2] = 0;
 HEAP32[$2 + 736 >> 2] = 0;
 HEAP32[$2 + 724 >> 2] = 0;
 HEAP32[$2 + 712 >> 2] = 0;
 HEAP32[$2 + 700 >> 2] = 0;
 HEAP32[$2 + 688 >> 2] = 0;
 HEAP32[$2 + 676 >> 2] = 0;
 HEAP32[$2 + 664 >> 2] = 0;
 HEAP32[$2 + 652 >> 2] = 0;
 HEAP32[$2 + 640 >> 2] = 0;
 HEAP32[$2 + 616 >> 2] = 0;
 HEAP32[$2 + 532 >> 2] = 0;
 HEAP32[$2 + 520 >> 2] = 0;
 HEAP32[$2 + 508 >> 2] = 0;
 HEAP32[$2 + 496 >> 2] = 0;
 HEAP32[$2 + 484 >> 2] = 0;
 HEAP32[$2 + 472 >> 2] = 0;
 HEAP32[$2 + 460 >> 2] = 0;
 HEAP32[$2 + 448 >> 2] = 0;
 HEAP32[$2 + 436 >> 2] = 0;
 HEAP32[$2 + 424 >> 2] = 0;
 HEAP32[$2 + 412 >> 2] = 0;
 HEAP32[$2 + 400 >> 2] = 0;
 HEAP32[$2 + 388 >> 2] = 0;
 HEAP32[$2 + 376 >> 2] = 0;
 HEAP32[$2 + 364 >> 2] = 0;
 HEAP32[$2 + 352 >> 2] = 0;
 HEAP32[$2 + 328 >> 2] = 0;
 __ZN5Oryol11ShaderSetup12programEntryD2Ev($2 + 16 | 0);
 HEAP32[$2 >> 2] = 0;
 __ZN5Oryol13PipelineSetup19FromLayoutAndShaderERKNS_12VertexLayoutERKNS_2IdE($ps, $4, $shd);
 $203 = $ps + 36 | 0;
 HEAP16[$203 >> 1] = HEAP16[$203 >> 1] & -64 | 7;
 $207 = $ps + 8 | 0;
 $210 = HEAPU16[$207 + 4 >> 1] & 65535;
 HEAP32[$207 >> 2] = HEAP32[$207 >> 2] & -2048 | 329;
 HEAP16[$207 + 4 >> 1] = $210;
 $215 = HEAP32[(__ZN5Oryol3Gfx12DisplayAttrsEv() | 0) + 24 >> 2] | 0;
 $$lo8 = HEAP32[$207 >> 2] | 0;
 $216 = HEAPU16[$207 + 4 >> 1] | 0;
 $217 = _bitshift64Shl($215 | 0, 0, 31) | 0;
 HEAP32[$207 >> 2] = $217 & -2147483648 | $$lo8 & 2147483647;
 HEAP16[$207 + 4 >> 1] = tempRet0 & 15 | $216 & 65520;
 $228 = HEAP32[(__ZN5Oryol3Gfx12DisplayAttrsEv() | 0) + 28 >> 2] | 0;
 $$lo19 = HEAP32[$207 >> 2] | 0;
 $229 = HEAPU16[$207 + 4 >> 1] | 0;
 _bitshift64Shl($228 | 0, 0, 36) | 0;
 HEAP32[$207 >> 2] = $$lo19 & -2013265921 | 1879048192;
 HEAP16[$207 + 4 >> 1] = $229 & 65039 | tempRet0 & 496;
 $237 = $ps + 40 | 0;
 HEAP16[$237 >> 1] = HEAP16[$237 >> 1] & -6 | 4;
 $244 = HEAP32[(__ZN5Oryol3Gfx12DisplayAttrsEv() | 0) + 32 >> 2] & 65535;
 HEAP16[$237 >> 1] = $244 << 8 & 3840 | HEAP16[$237 >> 1] & -3841;
 $250 = $this + 8 | 0;
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 157, 80721);
  _abort();
 }
 __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_13PipelineSetupEEENS_2IdERKT_($3, (HEAP32[36694] | 0) + 1168 | 0, $ps);
 if (($250 | 0) == ($3 | 0)) {
  STACKTOP = sp;
  return;
 }
 $255 = $3;
 $260 = HEAP32[$255 + 4 >> 2] | 0;
 $261 = $250;
 HEAP32[$261 >> 2] = HEAP32[$255 >> 2];
 HEAP32[$261 + 4 >> 2] = $260;
 STACKTOP = sp;
 return;
}

function __ZN5ImGui8ButtonExEPKcRK6ImVec2i($label, $size_arg, $flags) {
 $label = $label | 0;
 $size_arg = $size_arg | 0;
 $flags = $flags | 0;
 var $$0 = 0, $$1 = 0, $$phi$trans$insert = 0, $$pre$phi$i$iZ2D = 0, $$pre13 = 0.0, $0 = 0, $1 = 0, $103 = 0.0, $110 = 0.0, $115 = 0.0, $116 = 0.0, $117 = 0.0, $118 = 0.0, $120 = 0.0, $121 = 0.0, $123 = 0, $125 = 0.0, $126 = 0.0, $128 = 0, $134 = 0, $135 = 0.0, $137 = 0.0, $138 = 0, $139 = 0.0, $142 = 0, $144 = 0.0, $145 = 0, $146 = 0, $16 = 0, $165 = 0.0, $166 = 0, $167 = 0.0, $170 = 0, $171 = 0.0, $181 = 0, $182 = 0, $188 = 0, $190 = 0.0, $192 = 0.0, $194 = 0.0, $199 = 0.0, $223 = 0, $228 = 0, $229 = 0, $233 = 0, $238 = 0, $239 = 0, $244 = 0.0, $25 = 0, $3 = 0, $30 = 0, $32 = 0.0, $35 = 0.0, $36 = 0.0, $40 = 0.0, $42 = 0.0, $45 = 0, $47 = 0, $50 = 0, $51 = 0, $55 = 0.0, $58 = 0, $60 = 0, $64 = 0.0, $70 = 0, $72 = 0, $75 = 0, $79 = 0.0, $80 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $86 = 0.0, $89 = 0, $9 = 0, $98 = 0.0, $bb = 0, $content_max$sroa$0$0$i = 0.0, $content_max$sroa$5$0$i = 0.0, $held = 0, $hovered = 0, $id = 0, $label_size = 0, $pos$sroa$5$0 = 0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, $tmpcast28$sroa$0$0 = 0, $tmpcast28$sroa$6$0 = 0, $tmpcast3$byval_copy = 0, $tmpcast4$byval_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $tmpcast4$byval_copy = sp + 40 | 0;
 $tmpcast3$byval_copy = sp + 56 | 0;
 $id = sp + 48 | 0;
 $label_size = sp + 32 | 0;
 $bb = sp + 16 | 0;
 $hovered = sp + 65 | 0;
 $held = sp + 64 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $3 = HEAP32[38201] | 0;
 HEAP8[$3 + 114 >> 0] = 1;
 if (HEAP8[$3 + 116 >> 0] | 0) {
  $$1 = 0;
  STACKTOP = sp;
  return $$1 | 0;
 }
 $9 = HEAP32[$3 + 424 >> 2] | 0;
 if (($9 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $16 = __Z6ImHashPKvij($label, 0, HEAP32[(HEAP32[$3 + 432 >> 2] | 0) + ($9 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($16 | 0)) HEAP8[152852] = 1;
 HEAP32[$id >> 2] = $16;
 if (($label | 0) == (-1 | 0)) {
  $35 = +HEAPF32[38187];
  label = 13;
 } else {
  $text_display_end$03$i$i = $label;
  L12 : while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     break L12;
     break;
    }
   case 35:
    {
     $25 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$25 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      break L12;
     } else $$pre$phi$i$iZ2D = $25;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    break;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
  $30 = HEAP32[38186] | 0;
  $32 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($label | 0)) {
   $35 = $32;
   label = 13;
  } else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($tmpcast4$byval_copy, $30, $32, 3402823466385288598117041.0e14, -1.0, $label, $text_display_end$0$i, 0);
   $36 = +HEAPF32[$tmpcast4$byval_copy >> 2];
   if ($36 > 0.0) {
    $40 = $36 - $32 / +HEAPF32[$30 >> 2];
    HEAPF32[$tmpcast4$byval_copy >> 2] = $40;
    $42 = $40;
   } else $42 = $36;
   HEAPF32[$tmpcast4$byval_copy >> 2] = +(~~($42 + .949999988079071) | 0);
   $45 = $tmpcast4$byval_copy;
   $47 = HEAP32[$45 >> 2] | 0;
   $50 = HEAP32[$45 + 4 >> 2] | 0;
   $51 = $label_size;
   HEAP32[$51 >> 2] = $47;
   HEAP32[$51 + 4 >> 2] = $50;
   $55 = (HEAP32[tempDoublePtr >> 2] = $47, +HEAPF32[tempDoublePtr >> 2]);
   $80 = $55;
   $83 = (HEAP32[tempDoublePtr >> 2] = $50, +HEAPF32[tempDoublePtr >> 2]);
  }
 }
 if ((label | 0) == 13) {
  HEAPF32[$label_size >> 2] = 0.0;
  HEAPF32[$label_size + 4 >> 2] = $35;
  $80 = 0.0;
  $83 = $35;
 }
 $58 = HEAP32[$3 + 164 >> 2] | 0;
 $60 = HEAP32[$3 + 168 >> 2] | 0;
 $$phi$trans$insert = 151972;
 $$pre13 = +HEAPF32[$$phi$trans$insert >> 2];
 if (!($flags & 64)) $pos$sroa$5$0 = $60; else {
  $64 = +HEAPF32[$3 + 200 >> 2];
  if ($$pre13 < $64) $pos$sroa$5$0 = (HEAPF32[tempDoublePtr >> 2] = (HEAP32[tempDoublePtr >> 2] = $60, +HEAPF32[tempDoublePtr >> 2]) + ($64 - $$pre13), HEAP32[tempDoublePtr >> 2] | 0); else $pos$sroa$5$0 = $60;
 }
 $70 = $size_arg;
 $72 = HEAP32[$70 >> 2] | 0;
 $75 = HEAP32[$70 + 4 >> 2] | 0;
 $79 = $80 + +HEAPF32[37992] * 2.0;
 $82 = $83 + $$pre13 * 2.0;
 $84 = (HEAP32[tempDoublePtr >> 2] = $72, +HEAPF32[tempDoublePtr >> 2]);
 $86 = (HEAP32[tempDoublePtr >> 2] = $75, +HEAPF32[tempDoublePtr >> 2]);
 if ($84 < 0.0 | $86 < 0.0) {
  $89 = HEAP32[38201] | 0;
  __ZN5ImGui19GetContentRegionMaxEv($tmpcast4$byval_copy);
  $content_max$sroa$0$0$i = +HEAPF32[$89 + 20 >> 2] + +HEAPF32[$tmpcast4$byval_copy >> 2];
  $content_max$sroa$5$0$i = +HEAPF32[$89 + 24 >> 2] + +HEAPF32[$tmpcast4$byval_copy + 4 >> 2];
 } else {
  $content_max$sroa$0$0$i = 0.0;
  $content_max$sroa$5$0$i = 0.0;
 }
 if (!($84 <= 0.0)) $tmpcast28$sroa$0$0 = $72; else {
  if ($84 == 0.0) $103 = $79; else {
   $98 = $content_max$sroa$0$0$i - +HEAPF32[(HEAP32[38201] | 0) + 164 >> 2];
   $103 = $84 + ($98 >= 4.0 ? $98 : 4.0);
  }
  $tmpcast28$sroa$0$0 = (HEAPF32[tempDoublePtr >> 2] = $103, HEAP32[tempDoublePtr >> 2] | 0);
 }
 if (!($86 <= 0.0)) $tmpcast28$sroa$6$0 = $75; else {
  if ($86 == 0.0) $115 = $82; else {
   $110 = $content_max$sroa$5$0$i - +HEAPF32[(HEAP32[38201] | 0) + 168 >> 2];
   $115 = $86 + ($110 >= 4.0 ? $110 : 4.0);
  }
  $tmpcast28$sroa$6$0 = (HEAPF32[tempDoublePtr >> 2] = $115, HEAP32[tempDoublePtr >> 2] | 0);
 }
 $116 = (HEAP32[tempDoublePtr >> 2] = $58, +HEAPF32[tempDoublePtr >> 2]);
 $117 = (HEAP32[tempDoublePtr >> 2] = $pos$sroa$5$0, +HEAPF32[tempDoublePtr >> 2]);
 $118 = (HEAP32[tempDoublePtr >> 2] = $tmpcast28$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]);
 $120 = $116 + $118;
 $121 = $117 + (HEAP32[tempDoublePtr >> 2] = $tmpcast28$sroa$6$0, +HEAPF32[tempDoublePtr >> 2]);
 HEAP32[$bb >> 2] = $58;
 HEAP32[$bb + 4 >> 2] = $pos$sroa$5$0;
 $123 = $bb + 8 | 0;
 HEAPF32[$123 >> 2] = $120;
 HEAPF32[$bb + 12 >> 2] = $121;
 $125 = +HEAPF32[$$phi$trans$insert >> 2];
 $126 = $121 - $117;
 $128 = HEAP32[38201] | 0;
 HEAP8[$128 + 114 >> 0] = 1;
 if (!(HEAP8[$128 + 116 >> 0] | 0)) {
  $134 = $128 + 196 | 0;
  $135 = +HEAPF32[$134 >> 2];
  $137 = $135 >= $126 ? $135 : $126;
  $138 = $128 + 200 | 0;
  $139 = +HEAPF32[$138 >> 2];
  $142 = $128 + 164 | 0;
  $144 = $120 - $116 + +HEAPF32[$142 >> 2];
  $145 = $128 + 168 | 0;
  $146 = HEAP32[$145 >> 2] | 0;
  HEAPF32[$128 + 172 >> 2] = $144;
  HEAP32[$128 + 176 >> 2] = $146;
  $165 = +(~~($137 + (HEAP32[tempDoublePtr >> 2] = $146, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
  HEAPF32[$142 >> 2] = +(~~(+HEAPF32[$128 + 20 >> 2] + +HEAPF32[$128 + 368 >> 2] + +HEAPF32[$128 + 372 >> 2]) | 0);
  HEAPF32[$145 >> 2] = $165;
  $166 = $128 + 188 | 0;
  $167 = +HEAPF32[$166 >> 2];
  HEAPF32[$166 >> 2] = $167 >= $144 ? $167 : $144;
  $170 = $128 + 192 | 0;
  $171 = +HEAPF32[$170 >> 2];
  HEAPF32[$170 >> 2] = $171 >= $165 ? $171 : $165;
  HEAPF32[$128 + 204 >> 2] = $137;
  HEAPF32[$128 + 208 >> 2] = $139 >= $125 ? $139 : $125;
  HEAPF32[$138 >> 2] = 0.0;
  HEAPF32[$134 >> 2] = 0.0;
 }
 if (__ZN5ImGui7ItemAddERK6ImRectPKj($bb, $id) | 0) {
  $181 = __ZN5ImGui14ButtonBehaviorERK6ImRectjPbS3_i($bb, HEAP32[$id >> 2] | 0, $hovered, $held, HEAPU8[$3 + 277 >> 0] | $flags) | 0;
  $182 = HEAP8[$hovered >> 0] | 0;
  $188 = $182 << 24 >> 24 == 0 | (HEAP8[$held >> 0] | 0) == 0 ? ($182 << 24 >> 24 ? 22 : 21) : 23;
  $190 = +HEAPF32[152056 + ($188 << 4) >> 2];
  $192 = +HEAPF32[152056 + ($188 << 4) + 4 >> 2];
  $194 = +HEAPF32[152056 + ($188 << 4) + 8 >> 2];
  $199 = +HEAPF32[152056 + ($188 << 4) + 12 >> 2] * +HEAPF32[37984];
  $223 = $bb;
  $228 = HEAP32[$223 + 4 >> 2] | 0;
  $229 = $0;
  HEAP32[$229 >> 2] = HEAP32[$223 >> 2];
  HEAP32[$229 + 4 >> 2] = $228;
  $233 = $123;
  $238 = HEAP32[$233 + 4 >> 2] | 0;
  $239 = $1;
  HEAP32[$239 >> 2] = HEAP32[$233 >> 2];
  HEAP32[$239 + 4 >> 2] = $238;
  $244 = +HEAPF32[37994];
  HEAP32[$tmpcast3$byval_copy >> 2] = HEAP32[$0 >> 2];
  HEAP32[$tmpcast3$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$tmpcast4$byval_copy >> 2] = HEAP32[$1 >> 2];
  HEAP32[$tmpcast4$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  __ZN5ImGui11RenderFrameE6ImVec2S0_jbf($tmpcast3$byval_copy, $tmpcast4$byval_copy, ($192 < 0.0 ? 0 : ~~(($192 > 1.0 ? 1.0 : $192) * 255.0 + .5) << 8) | ($190 < 0.0 ? 0 : ~~(($190 > 1.0 ? 1.0 : $190) * 255.0 + .5)) | ($194 < 0.0 ? 0 : ~~(($194 > 1.0 ? 1.0 : $194) * 255.0 + .5) << 16) | ($199 < 0.0 ? 0 : ~~(($199 > 1.0 ? 1.0 : $199) * 255.0 + .5) << 24), 1, $244);
  __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($bb, $123, $label, 0, $label_size, 18, 0, 0);
  $$0 = $181;
 } else $$0 = 0;
 $$1 = $$0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($agg$result, $this, $size, $max_width, $wrap_width, $text_begin, $text_end, $remaining) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $size = +$size;
 $max_width = +$max_width;
 $wrap_width = +$wrap_width;
 $text_begin = $text_begin | 0;
 $text_end = $text_end | 0;
 $remaining = $remaining | 0;
 var $$0 = 0, $$in = 0, $$in$us = 0, $$lcssa = 0, $10 = 0, $13 = 0, $18 = 0.0, $19 = 0.0, $20 = 0.0, $22 = 0, $23 = 0, $24 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0.0, $4 = 0.0, $40 = 0.0, $47 = 0.0, $5 = 0, $50 = 0, $51 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $71 = 0.0, $75 = 0.0, $78 = 0.0, $8 = 0, $80 = 0.0, $82 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $c1 = 0, $line_width$0$be$us = 0.0, $line_width$0$lcssa11 = 0.0, $line_width$012 = 0.0, $line_width$018 = 0.0, $line_width$018$us = 0.0, $line_width$2$ph = 0.0, $line_width$2$ph$us = 0.0, $s$0$be$us = 0, $s$015 = 0, $s$015$us = 0, $s$114$us = 0, $s$114$us$lcssa = 0, $s$3 = 0, $s$3$us = 0, $s$5 = 0, $s$6 = 0, $s$63133 = 0, $s$63134 = 0, $word_wrap_eol$0$be$us = 0, $word_wrap_eol$017$us = 0, $word_wrap_eol$1$us = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c1 = sp;
 if (!$text_end) $$0 = $text_begin + (_strlen($text_begin) | 0) | 0; else $$0 = $text_end;
 $4 = $size / +HEAPF32[$this >> 2];
 HEAPF32[$agg$result >> 2] = 0.0;
 $5 = $agg$result + 4 | 0;
 HEAPF32[$5 >> 2] = 0.0;
 if ($$0 >>> 0 > $text_begin >>> 0) {
  $8 = $this + 60 | 0;
  $9 = $this + 68 | 0;
  $10 = $this + 56 | 0;
  L6 : do if ($wrap_width > 0.0) {
   $18 = 0.0;
   $20 = 0.0;
   $line_width$018$us = 0.0;
   $s$015$us = $text_begin;
   $word_wrap_eol$017$us = 0;
   while (1) {
    if (!$word_wrap_eol$017$us) {
     $13 = __ZNK6ImFont21CalcWordWrapPositionAEfPKcS1_f($this, $4, $s$015$us, $$0, $wrap_width - $line_width$018$us) | 0;
     $word_wrap_eol$1$us = ($13 | 0) == ($s$015$us | 0) ? $13 + 1 | 0 : $13;
    } else $word_wrap_eol$1$us = $word_wrap_eol$017$us;
    L12 : do if ($s$015$us >>> 0 < $word_wrap_eol$1$us >>> 0) {
     $28 = HEAP8[$s$015$us >> 0] | 0;
     $29 = $28 << 24 >> 24;
     HEAP32[$c1 >> 2] = $29;
     if ($28 << 24 >> 24 > -1) {
      $37 = $29;
      $s$3$us = $s$015$us + 1 | 0;
     } else {
      $32 = $s$015$us + (__Z18ImTextCharFromUtf8PjPKcS1_($c1, $s$015$us, $$0) | 0) | 0;
      $33 = HEAP32[$c1 >> 2] | 0;
      if (!$33) {
       $85 = $20;
       $86 = $18;
       $line_width$0$lcssa11 = $line_width$018$us;
       $s$5 = $32;
       label = 35;
       break L6;
      } else {
       $37 = $33;
       $s$3$us = $32;
      }
     }
     L18 : do if ($37 >>> 0 < 32) {
      switch ($37 | 0) {
      case 13:
       {
        $87 = $20;
        $88 = $18;
        $line_width$2$ph$us = $line_width$018$us;
        break L18;
        break;
       }
      case 10:
       break;
      default:
       {
        label = 20;
        break L18;
       }
      }
      $39 = $18 >= $line_width$018$us ? $18 : $line_width$018$us;
      HEAPF32[$agg$result >> 2] = $39;
      $40 = $20 + $size;
      HEAPF32[$5 >> 2] = $40;
      $87 = $40;
      $88 = $39;
      $line_width$2$ph$us = 0.0;
     } else label = 20; while (0);
     if ((label | 0) == 20) {
      label = 0;
      if (($37 | 0) < (HEAP32[$8 >> 2] | 0)) $$in$us = (HEAP32[$9 >> 2] | 0) + ($37 << 2) | 0; else $$in$us = $10;
      $47 = $line_width$018$us + $4 * +HEAPF32[$$in$us >> 2];
      if (!($47 >= $max_width)) {
       $87 = $20;
       $88 = $18;
       $line_width$2$ph$us = $47;
      } else {
       $85 = $20;
       $86 = $18;
       $line_width$0$lcssa11 = $line_width$018$us;
       $s$5 = $s$015$us;
       label = 35;
       break L6;
      }
     }
     $83 = $87;
     $84 = $88;
     $line_width$0$be$us = $line_width$2$ph$us;
     $s$0$be$us = $s$3$us;
     $word_wrap_eol$0$be$us = $word_wrap_eol$1$us;
    } else {
     if ($18 < $line_width$018$us) {
      HEAPF32[$agg$result >> 2] = $line_width$018$us;
      $82 = $line_width$018$us;
     } else $82 = $18;
     $19 = $20 + $size;
     HEAPF32[$5 >> 2] = $19;
     if ($s$015$us >>> 0 < $$0 >>> 0) {
      $s$114$us = $s$015$us;
      L31 : while (1) {
       $22 = HEAP8[$s$114$us >> 0] | 0;
       $23 = $22 << 24 >> 24;
       L33 : do if (($23 | 0) < 32) switch ($23 | 0) {
       case 9:
        break;
       default:
        {
         $$lcssa = $22;
         $s$114$us$lcssa = $s$114$us;
         break L31;
        }
       } else if (($23 | 0) < 12288) switch ($23 | 0) {
       case 32:
        {
         break L33;
         break;
        }
       default:
        {
         $$lcssa = $22;
         $s$114$us$lcssa = $s$114$us;
         break L31;
        }
       } else switch ($23 | 0) {
       case 12288:
        {
         break L33;
         break;
        }
       default:
        {
         $$lcssa = $22;
         $s$114$us$lcssa = $s$114$us;
         break L31;
        }
       } while (0);
       $24 = $s$114$us + 1 | 0;
       if ($24 >>> 0 < $$0 >>> 0) $s$114$us = $24; else {
        $83 = $19;
        $84 = $82;
        $line_width$0$be$us = 0.0;
        $s$0$be$us = $24;
        $word_wrap_eol$0$be$us = 0;
        break L12;
       }
      }
      $83 = $19;
      $84 = $82;
      $line_width$0$be$us = 0.0;
      $s$0$be$us = $$lcssa << 24 >> 24 == 10 ? $s$114$us$lcssa + 1 | 0 : $s$114$us$lcssa;
      $word_wrap_eol$0$be$us = 0;
     } else {
      $83 = $19;
      $84 = $82;
      $line_width$0$be$us = 0.0;
      $s$0$be$us = $s$015$us;
      $word_wrap_eol$0$be$us = 0;
     }
    } while (0);
    if ($s$0$be$us >>> 0 < $$0 >>> 0) {
     $18 = $84;
     $20 = $83;
     $line_width$018$us = $line_width$0$be$us;
     $s$015$us = $s$0$be$us;
     $word_wrap_eol$017$us = $word_wrap_eol$0$be$us;
    } else {
     $75 = $84;
     $78 = $83;
     $line_width$012 = $line_width$0$be$us;
     $s$6 = $s$0$be$us;
     break;
    }
   }
  } else {
   $61 = 0.0;
   $64 = 0.0;
   $line_width$018 = 0.0;
   $s$015 = $text_begin;
   while (1) {
    $50 = HEAP8[$s$015 >> 0] | 0;
    $51 = $50 << 24 >> 24;
    HEAP32[$c1 >> 2] = $51;
    if ($50 << 24 >> 24 > -1) {
     $59 = $51;
     $s$3 = $s$015 + 1 | 0;
    } else {
     $55 = $s$015 + (__Z18ImTextCharFromUtf8PjPKcS1_($c1, $s$015, $$0) | 0) | 0;
     $56 = HEAP32[$c1 >> 2] | 0;
     if (!$56) {
      $85 = $64;
      $86 = $61;
      $line_width$0$lcssa11 = $line_width$018;
      $s$5 = $55;
      label = 35;
      break L6;
     } else {
      $59 = $56;
      $s$3 = $55;
     }
    }
    L48 : do if ($59 >>> 0 < 32) {
     switch ($59 | 0) {
     case 13:
      {
       $89 = $64;
       $90 = $61;
       $line_width$2$ph = $line_width$018;
       break L48;
       break;
      }
     case 10:
      break;
     default:
      {
       label = 31;
       break L48;
      }
     }
     $62 = $61 >= $line_width$018 ? $61 : $line_width$018;
     HEAPF32[$agg$result >> 2] = $62;
     $63 = $64 + $size;
     HEAPF32[$5 >> 2] = $63;
     $89 = $63;
     $90 = $62;
     $line_width$2$ph = 0.0;
    } else label = 31; while (0);
    if ((label | 0) == 31) {
     label = 0;
     if (($59 | 0) < (HEAP32[$8 >> 2] | 0)) $$in = (HEAP32[$9 >> 2] | 0) + ($59 << 2) | 0; else $$in = $10;
     $71 = $line_width$018 + $4 * +HEAPF32[$$in >> 2];
     if (!($71 >= $max_width)) {
      $89 = $64;
      $90 = $61;
      $line_width$2$ph = $71;
     } else {
      $85 = $64;
      $86 = $61;
      $line_width$0$lcssa11 = $line_width$018;
      $s$5 = $s$015;
      label = 35;
      break L6;
     }
    }
    if ($s$3 >>> 0 < $$0 >>> 0) {
     $61 = $90;
     $64 = $89;
     $line_width$018 = $line_width$2$ph;
     $s$015 = $s$3;
    } else {
     $75 = $90;
     $78 = $89;
     $line_width$012 = $line_width$2$ph;
     $s$6 = $s$3;
     break;
    }
   }
  } while (0);
  if ((label | 0) == 35) {
   $75 = $86;
   $78 = $85;
   $line_width$012 = $line_width$0$lcssa11;
   $s$6 = $s$5;
  }
  if ($75 < $line_width$012) HEAPF32[$agg$result >> 2] = $line_width$012;
  if ($line_width$012 > 0.0 | $78 == 0.0) {
   $80 = $78;
   $s$63134 = $s$6;
   label = 39;
  } else $s$63133 = $s$6;
 } else {
  $80 = 0.0;
  $s$63134 = $text_begin;
  label = 39;
 }
 if ((label | 0) == 39) {
  HEAPF32[$5 >> 2] = $80 + $size;
  $s$63133 = $s$63134;
 }
 if (!$remaining) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$remaining >> 2] = $s$63133;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glPipelineC2EOS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $13 = 0, $18 = 0, $19 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $43 = 0, $48 = 0, $49 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 $1 = $0;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $this;
 HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 + 4 >> 2] = $6;
 $13 = $0 + 8 | 0;
 $18 = HEAP32[$13 + 4 >> 2] | 0;
 $19 = $this + 8 | 0;
 HEAP32[$19 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$19 + 4 >> 2] = $18;
 __ZN5Oryol10StringAtom4copyERKS0_($this + 16 | 0, $0 + 16 | 0);
 HEAP32[$this + 20 >> 2] = HEAP32[$0 + 20 >> 2];
 $28 = $this + 24 | 0;
 $29 = $0 + 24 | 0;
 HEAP32[$28 >> 2] = HEAP32[$29 >> 2];
 HEAP32[$28 + 4 >> 2] = HEAP32[$29 + 4 >> 2];
 HEAP32[$28 + 8 >> 2] = HEAP32[$29 + 8 >> 2];
 HEAP32[$28 + 12 >> 2] = HEAP32[$29 + 12 >> 2];
 HEAP32[$28 + 16 >> 2] = HEAP32[$29 + 16 >> 2];
 HEAP32[$28 + 20 >> 2] = HEAP32[$29 + 20 >> 2];
 HEAP32[$28 + 24 >> 2] = HEAP32[$29 + 24 >> 2];
 HEAP32[$28 + 28 >> 2] = HEAP32[$29 + 28 >> 2];
 HEAP16[$28 + 32 >> 1] = HEAP16[$29 + 32 >> 1] | 0;
 $30 = $this + 58 | 0;
 __ZN5Oryol12VertexLayoutC2Ev($30);
 $31 = $this + 126 | 0;
 __ZN5Oryol12VertexLayoutC2Ev($31);
 $32 = $this + 194 | 0;
 __ZN5Oryol12VertexLayoutC2Ev($32);
 $33 = $this + 262 | 0;
 __ZN5Oryol12VertexLayoutC2Ev($33);
 __ZN5Oryol12VertexLayoutaSERKS0_($30, $0 + 58 | 0) | 0;
 __ZN5Oryol12VertexLayoutaSERKS0_($31, $0 + 126 | 0) | 0;
 __ZN5Oryol12VertexLayoutaSERKS0_($32, $0 + 194 | 0) | 0;
 __ZN5Oryol12VertexLayoutaSERKS0_($33, $0 + 262 | 0) | 0;
 HEAP32[$this + 332 >> 2] = HEAP32[$0 + 332 >> 2];
 $43 = $0 + 336 | 0;
 $48 = HEAP32[$43 + 4 >> 2] | 0;
 $49 = $this + 336 | 0;
 HEAP32[$49 >> 2] = HEAP32[$43 >> 2];
 HEAP32[$49 + 4 >> 2] = $48;
 HEAP32[$this + 344 >> 2] = HEAP32[$0 + 344 >> 2];
 $56 = $this + 348 | 0;
 $57 = $this + 356 | 0;
 HEAP32[$56 >> 2] = 0;
 HEAP16[$56 + 4 >> 1] = 0;
 HEAP8[$56 + 6 >> 0] = 0;
 $58 = $this + 364 | 0;
 $59 = $this + 372 | 0;
 $60 = $this + 380 | 0;
 $61 = $this + 388 | 0;
 $62 = $this + 396 | 0;
 $63 = $this + 404 | 0;
 $64 = $this + 412 | 0;
 $65 = $this + 420 | 0;
 $66 = $this + 428 | 0;
 $67 = $this + 436 | 0;
 $68 = $this + 444 | 0;
 $69 = $this + 452 | 0;
 $70 = $this + 460 | 0;
 $71 = $this + 468 | 0;
 $72 = $this + 476 | 0;
 $73 = $this + 484 | 0;
 $74 = $this + 492 | 0;
 $75 = $this + 500 | 0;
 $76 = $this + 508 | 0;
 $77 = $this + 516 | 0;
 $78 = $this + 524 | 0;
 $79 = $this + 532 | 0;
 $80 = $this + 540 | 0;
 $81 = $this + 548 | 0;
 $82 = $this + 556 | 0;
 $83 = $this + 564 | 0;
 $84 = $this + 572 | 0;
 $85 = $this + 580 | 0;
 $86 = $this + 588 | 0;
 HEAP32[$this + 596 >> 2] = 0;
 HEAP32[$this + 600 >> 2] = 0;
 $89 = $0 + 348 | 0;
 HEAP32[$57 >> 2] = 0;
 HEAP32[$57 + 4 >> 2] = 0;
 HEAP32[$57 + 8 >> 2] = 0;
 HEAP16[$57 + 12 >> 1] = 0;
 HEAP8[$57 + 14 >> 0] = 0;
 HEAP32[$59 >> 2] = 0;
 HEAP32[$59 + 4 >> 2] = 0;
 HEAP32[$59 + 8 >> 2] = 0;
 HEAP16[$59 + 12 >> 1] = 0;
 HEAP8[$59 + 14 >> 0] = 0;
 HEAP32[$61 >> 2] = 0;
 HEAP32[$61 + 4 >> 2] = 0;
 HEAP32[$61 + 8 >> 2] = 0;
 HEAP16[$61 + 12 >> 1] = 0;
 HEAP8[$61 + 14 >> 0] = 0;
 HEAP32[$63 >> 2] = 0;
 HEAP32[$63 + 4 >> 2] = 0;
 HEAP32[$63 + 8 >> 2] = 0;
 HEAP16[$63 + 12 >> 1] = 0;
 HEAP8[$63 + 14 >> 0] = 0;
 HEAP32[$65 >> 2] = 0;
 HEAP32[$65 + 4 >> 2] = 0;
 HEAP32[$65 + 8 >> 2] = 0;
 HEAP16[$65 + 12 >> 1] = 0;
 HEAP8[$65 + 14 >> 0] = 0;
 HEAP32[$67 >> 2] = 0;
 HEAP32[$67 + 4 >> 2] = 0;
 HEAP32[$67 + 8 >> 2] = 0;
 HEAP16[$67 + 12 >> 1] = 0;
 HEAP8[$67 + 14 >> 0] = 0;
 HEAP32[$69 >> 2] = 0;
 HEAP32[$69 + 4 >> 2] = 0;
 HEAP32[$69 + 8 >> 2] = 0;
 HEAP16[$69 + 12 >> 1] = 0;
 HEAP8[$69 + 14 >> 0] = 0;
 HEAP32[$71 >> 2] = 0;
 HEAP32[$71 + 4 >> 2] = 0;
 HEAP32[$71 + 8 >> 2] = 0;
 HEAP16[$71 + 12 >> 1] = 0;
 HEAP8[$71 + 14 >> 0] = 0;
 HEAP32[$73 >> 2] = 0;
 HEAP32[$73 + 4 >> 2] = 0;
 HEAP32[$73 + 8 >> 2] = 0;
 HEAP16[$73 + 12 >> 1] = 0;
 HEAP8[$73 + 14 >> 0] = 0;
 HEAP32[$75 >> 2] = 0;
 HEAP32[$75 + 4 >> 2] = 0;
 HEAP32[$75 + 8 >> 2] = 0;
 HEAP16[$75 + 12 >> 1] = 0;
 HEAP8[$75 + 14 >> 0] = 0;
 HEAP32[$77 >> 2] = 0;
 HEAP32[$77 + 4 >> 2] = 0;
 HEAP32[$77 + 8 >> 2] = 0;
 HEAP16[$77 + 12 >> 1] = 0;
 HEAP8[$77 + 14 >> 0] = 0;
 HEAP32[$79 >> 2] = 0;
 HEAP32[$79 + 4 >> 2] = 0;
 HEAP32[$79 + 8 >> 2] = 0;
 HEAP16[$79 + 12 >> 1] = 0;
 HEAP8[$79 + 14 >> 0] = 0;
 HEAP32[$81 >> 2] = 0;
 HEAP32[$81 + 4 >> 2] = 0;
 HEAP32[$81 + 8 >> 2] = 0;
 HEAP16[$81 + 12 >> 1] = 0;
 HEAP8[$81 + 14 >> 0] = 0;
 HEAP32[$83 >> 2] = 0;
 HEAP32[$83 + 4 >> 2] = 0;
 HEAP32[$83 + 8 >> 2] = 0;
 HEAP16[$83 + 12 >> 1] = 0;
 HEAP8[$83 + 14 >> 0] = 0;
 HEAP32[$85 >> 2] = 0;
 HEAP32[$85 + 4 >> 2] = 0;
 HEAP32[$85 + 8 >> 2] = 0;
 HEAP16[$85 + 12 >> 1] = 0;
 HEAP8[$85 + 14 >> 0] = 0;
 HEAP32[$56 >> 2] = HEAP32[$89 >> 2];
 HEAP32[$56 + 4 >> 2] = HEAP32[$89 + 4 >> 2];
 HEAP32[$56 + 8 >> 2] = HEAP32[$89 + 8 >> 2];
 HEAP32[$56 + 12 >> 2] = HEAP32[$89 + 12 >> 2];
 $90 = $0 + 364 | 0;
 HEAP32[$58 >> 2] = HEAP32[$90 >> 2];
 HEAP32[$58 + 4 >> 2] = HEAP32[$90 + 4 >> 2];
 HEAP32[$58 + 8 >> 2] = HEAP32[$90 + 8 >> 2];
 HEAP32[$58 + 12 >> 2] = HEAP32[$90 + 12 >> 2];
 $91 = $0 + 380 | 0;
 HEAP32[$60 >> 2] = HEAP32[$91 >> 2];
 HEAP32[$60 + 4 >> 2] = HEAP32[$91 + 4 >> 2];
 HEAP32[$60 + 8 >> 2] = HEAP32[$91 + 8 >> 2];
 HEAP32[$60 + 12 >> 2] = HEAP32[$91 + 12 >> 2];
 $92 = $0 + 396 | 0;
 HEAP32[$62 >> 2] = HEAP32[$92 >> 2];
 HEAP32[$62 + 4 >> 2] = HEAP32[$92 + 4 >> 2];
 HEAP32[$62 + 8 >> 2] = HEAP32[$92 + 8 >> 2];
 HEAP32[$62 + 12 >> 2] = HEAP32[$92 + 12 >> 2];
 $93 = $0 + 412 | 0;
 HEAP32[$64 >> 2] = HEAP32[$93 >> 2];
 HEAP32[$64 + 4 >> 2] = HEAP32[$93 + 4 >> 2];
 HEAP32[$64 + 8 >> 2] = HEAP32[$93 + 8 >> 2];
 HEAP32[$64 + 12 >> 2] = HEAP32[$93 + 12 >> 2];
 $94 = $0 + 428 | 0;
 HEAP32[$66 >> 2] = HEAP32[$94 >> 2];
 HEAP32[$66 + 4 >> 2] = HEAP32[$94 + 4 >> 2];
 HEAP32[$66 + 8 >> 2] = HEAP32[$94 + 8 >> 2];
 HEAP32[$66 + 12 >> 2] = HEAP32[$94 + 12 >> 2];
 $95 = $0 + 444 | 0;
 HEAP32[$68 >> 2] = HEAP32[$95 >> 2];
 HEAP32[$68 + 4 >> 2] = HEAP32[$95 + 4 >> 2];
 HEAP32[$68 + 8 >> 2] = HEAP32[$95 + 8 >> 2];
 HEAP32[$68 + 12 >> 2] = HEAP32[$95 + 12 >> 2];
 $96 = $0 + 460 | 0;
 HEAP32[$70 >> 2] = HEAP32[$96 >> 2];
 HEAP32[$70 + 4 >> 2] = HEAP32[$96 + 4 >> 2];
 HEAP32[$70 + 8 >> 2] = HEAP32[$96 + 8 >> 2];
 HEAP32[$70 + 12 >> 2] = HEAP32[$96 + 12 >> 2];
 $97 = $0 + 476 | 0;
 HEAP32[$72 >> 2] = HEAP32[$97 >> 2];
 HEAP32[$72 + 4 >> 2] = HEAP32[$97 + 4 >> 2];
 HEAP32[$72 + 8 >> 2] = HEAP32[$97 + 8 >> 2];
 HEAP32[$72 + 12 >> 2] = HEAP32[$97 + 12 >> 2];
 $98 = $0 + 492 | 0;
 HEAP32[$74 >> 2] = HEAP32[$98 >> 2];
 HEAP32[$74 + 4 >> 2] = HEAP32[$98 + 4 >> 2];
 HEAP32[$74 + 8 >> 2] = HEAP32[$98 + 8 >> 2];
 HEAP32[$74 + 12 >> 2] = HEAP32[$98 + 12 >> 2];
 $99 = $0 + 508 | 0;
 HEAP32[$76 >> 2] = HEAP32[$99 >> 2];
 HEAP32[$76 + 4 >> 2] = HEAP32[$99 + 4 >> 2];
 HEAP32[$76 + 8 >> 2] = HEAP32[$99 + 8 >> 2];
 HEAP32[$76 + 12 >> 2] = HEAP32[$99 + 12 >> 2];
 $100 = $0 + 524 | 0;
 HEAP32[$78 >> 2] = HEAP32[$100 >> 2];
 HEAP32[$78 + 4 >> 2] = HEAP32[$100 + 4 >> 2];
 HEAP32[$78 + 8 >> 2] = HEAP32[$100 + 8 >> 2];
 HEAP32[$78 + 12 >> 2] = HEAP32[$100 + 12 >> 2];
 $101 = $0 + 540 | 0;
 HEAP32[$80 >> 2] = HEAP32[$101 >> 2];
 HEAP32[$80 + 4 >> 2] = HEAP32[$101 + 4 >> 2];
 HEAP32[$80 + 8 >> 2] = HEAP32[$101 + 8 >> 2];
 HEAP32[$80 + 12 >> 2] = HEAP32[$101 + 12 >> 2];
 $102 = $0 + 556 | 0;
 HEAP32[$82 >> 2] = HEAP32[$102 >> 2];
 HEAP32[$82 + 4 >> 2] = HEAP32[$102 + 4 >> 2];
 HEAP32[$82 + 8 >> 2] = HEAP32[$102 + 8 >> 2];
 HEAP32[$82 + 12 >> 2] = HEAP32[$102 + 12 >> 2];
 $103 = $0 + 572 | 0;
 HEAP32[$84 >> 2] = HEAP32[$103 >> 2];
 HEAP32[$84 + 4 >> 2] = HEAP32[$103 + 4 >> 2];
 HEAP32[$84 + 8 >> 2] = HEAP32[$103 + 8 >> 2];
 HEAP32[$84 + 12 >> 2] = HEAP32[$103 + 12 >> 2];
 $104 = $0 + 588 | 0;
 HEAP32[$86 >> 2] = HEAP32[$104 >> 2];
 HEAP32[$86 + 4 >> 2] = HEAP32[$104 + 4 >> 2];
 HEAP32[$86 + 8 >> 2] = HEAP32[$104 + 8 >> 2];
 HEAP32[$86 + 12 >> 2] = HEAP32[$104 + 12 >> 2];
 HEAP32[$this + 604 >> 2] = HEAP32[$0 + 604 >> 2];
 return;
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (tempRet0 = $_0$1, $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc | 0) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem | 0) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (tempRet0 = $_0$1, $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
  $137$1 = tempRet0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
   $150$1 = tempRet0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
   $r_sroa_1_1200 = tempRet0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem | 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (tempRet0 = $_0$1, $_0$0) | 0;
}

function __ZL9ScrollbarP11ImGuiWindowb($window, $horizontal) {
 $window = $window | 0;
 $horizontal = $horizontal | 0;
 var $$ = 0, $0 = 0, $1 = 0, $101 = 0, $103 = 0.0, $105 = 0.0, $107 = 0.0, $112 = 0.0, $12 = 0, $136 = 0.0, $137 = 0.0, $138 = 0.0, $142 = 0, $143 = 0.0, $147 = 0.0, $148 = 0, $149 = 0.0, $150 = 0, $151 = 0.0, $155 = 0, $156 = 0.0, $160 = 0.0, $161 = 0.0, $162 = 0.0, $164 = 0.0, $165 = 0.0, $168 = 0.0, $169 = 0, $170 = 0, $171 = 0.0, $173 = 0.0, $176 = 0.0, $179 = 0.0, $184 = 0.0, $186 = 0.0, $188 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $194 = 0, $196 = 0, $198 = 0, $2 = 0, $218 = 0.0, $22 = 0.0, $220 = 0.0, $221 = 0.0, $226 = 0.0, $228 = 0.0, $239 = 0, $24 = 0.0, $241 = 0.0, $245 = 0.0, $253 = 0.0, $255 = 0.0, $256 = 0.0, $259 = 0.0, $26 = 0.0, $267 = 0.0, $268 = 0.0, $27 = 0, $274 = 0.0, $280 = 0, $281 = 0.0, $283 = 0.0, $285 = 0.0, $29 = 0.0, $290 = 0.0, $3 = 0, $30 = 0, $313 = 0, $314 = 0, $315 = 0.0, $317 = 0.0, $32 = 0.0, $321 = 0.0, $322 = 0, $325 = 0, $327 = 0.0, $331 = 0.0, $336 = 0.0, $34 = 0.0, $38 = 0.0, $5 = 0, $53 = 0.0, $57 = 0, $61 = 0, $86 = 0.0, $87 = 0.0, $93 = 0.0, $99 = 0, $bb = 0, $grab_v_norm$0 = 0.0, $held$0$off0$i = 0, $seek_absolute$0$off0 = 0, $window_rounding_corners$0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $bb = sp + 32 | 0;
 $0 = sp + 24 | 0;
 $1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 $5 = HEAP32[$window + 424 >> 2] | 0;
 if (($5 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $12 = __Z6ImHashPKvij($horizontal ? 124952 : 124961, 0, HEAP32[(HEAP32[$window + 432 >> 2] | 0) + ($5 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($12 | 0)) HEAP8[152852] = 1;
 $19 = (HEAP8[($horizontal ? $window + 97 | 0 : $window + 96 | 0) >> 0] | 0) != 0;
 $22 = $19 ? +HEAPF32[38004] : 0.0;
 $24 = +HEAPF32[$window + 20 >> 2];
 $26 = +HEAPF32[$window + 24 >> 2];
 $27 = $window + 28 | 0;
 $29 = $24 + +HEAPF32[$27 >> 2];
 $30 = $window + 32 | 0;
 $32 = $26 + +HEAPF32[$30 >> 2];
 $34 = +HEAPF32[$window + 108 >> 2];
 if ($horizontal) {
  $38 = $32 - +HEAPF32[38004];
  HEAPF32[$bb >> 2] = $34 + $24;
  HEAPF32[$bb + 4 >> 2] = $38;
  HEAPF32[$bb + 8 >> 2] = $29 - $22 - $34;
  HEAPF32[$bb + 12 >> 2] = $32 - $34;
  $336 = +HEAPF32[((HEAP32[$window + 8 >> 2] & 1048576 | 0) == 0 ? 151956 : 151964) >> 2];
  label = 12;
 } else {
  $53 = $34 + $26;
  HEAPF32[$bb >> 2] = $29 - +HEAPF32[38004];
  $57 = $bb + 4 | 0;
  HEAPF32[$57 >> 2] = $53;
  HEAPF32[$bb + 8 >> 2] = $29 - $34;
  HEAPF32[$bb + 12 >> 2] = $32 - $22 - $34;
  $61 = HEAP32[$window + 8 >> 2] | 0;
  if (!($61 & 1)) $86 = +HEAPF32[38188] * +HEAPF32[$window + 568 >> 2] + +HEAPF32[37993] * 2.0; else $86 = 0.0;
  if (!($61 & 1024)) $87 = 0.0; else $87 = +HEAPF32[38188] * +HEAPF32[$window + 568 >> 2] + +HEAPF32[37993] * 2.0 - $34;
  HEAPF32[$57 >> 2] = $53 + ($86 + $87);
  $93 = +HEAPF32[(($61 & 1048576 | 0) == 0 ? 151956 : 151964) >> 2];
  if ($horizontal) {
   $336 = $93;
   label = 12;
  } else {
   $136 = $93;
   $window_rounding_corners$0 = $61 << 1 & 2 | ($19 ? 0 : 4);
  }
 }
 if ((label | 0) == 12) {
  $136 = $336;
  $window_rounding_corners$0 = $19 ? 8 : 12;
 }
 $99 = $window + 572 | 0;
 $101 = $bb + 8 | 0;
 $103 = +HEAPF32[38066];
 $105 = +HEAPF32[38067];
 $107 = +HEAPF32[38068];
 $112 = +HEAPF32[38069] * +HEAPF32[37984];
 __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi(HEAP32[$99 >> 2] | 0, $bb, $101, ($105 < 0.0 ? 0 : ~~(($105 > 1.0 ? 1.0 : $105) * 255.0 + .5) << 8) | ($103 < 0.0 ? 0 : ~~(($103 > 1.0 ? 1.0 : $103) * 255.0 + .5)) | ($107 < 0.0 ? 0 : ~~(($107 > 1.0 ? 1.0 : $107) * 255.0 + .5) << 16) | ($112 < 0.0 ? 0 : ~~(($112 > 1.0 ? 1.0 : $112) * 255.0 + .5) << 24), $136, $window_rounding_corners$0);
 $137 = +HEAPF32[$101 >> 2];
 $138 = +HEAPF32[$bb >> 2];
 $142 = ~~(($137 - $138 + -2.0) * .5);
 $143 = +($142 | 0);
 $147 = ($142 | 0) < 0 ? 0.0 : $143 > 3.0 ? 3.0 : $143;
 $148 = $bb + 12 | 0;
 $149 = +HEAPF32[$148 >> 2];
 $150 = $bb + 4 | 0;
 $151 = +HEAPF32[$150 >> 2];
 $155 = ~~(($149 - $151 + -2.0) * .5);
 $156 = +($155 | 0);
 $160 = ($155 | 0) < 0 ? 0.0 : $156 > 3.0 ? 3.0 : $156;
 $161 = $138 + $147;
 HEAPF32[$bb >> 2] = $161;
 $162 = $151 + $160;
 HEAPF32[$150 >> 2] = $162;
 $164 = $137 - $147;
 HEAPF32[$bb + 8 >> 2] = $164;
 $165 = $149 - $160;
 HEAPF32[$148 >> 2] = $165;
 $168 = $horizontal ? $164 - $161 : $165 - $162;
 $169 = $window + 72 | 0;
 $170 = $window + 76 | 0;
 $171 = +HEAPF32[($horizontal ? $169 : $170) >> 2];
 $173 = +HEAPF32[($horizontal ? $27 : $30) >> 2] - $22;
 $176 = +HEAPF32[($horizontal ? $window + 44 | 0 : $window + 48 | 0) >> 2];
 $179 = $173 / ($176 >= $173 ? $176 : $173);
 $184 = $168 * ($179 < 0.0 ? 0.0 : $179 > 1.0 ? 1.0 : $179);
 $186 = +HEAPF32[38006];
 $188 = $184 >= $186 ? $184 : $186;
 $190 = $188 < $168 ? $188 : $168;
 $191 = $190 / $168;
 $194 = (HEAP32[38211] | 0) == ($12 | 0);
 $196 = HEAP32[38201] | 0;
 HEAP8[$196 + 114 >> 0] = 1;
 $198 = __ZN5ImGui9IsHoveredERK6ImRectjb($bb, $12, 0) | 0;
 if ($198) {
  HEAP32[38208] = $12;
  HEAP8[152836] = 0;
  if (HEAP8[147696] | 0) {
   HEAP32[38211] = $12;
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = $196;
   __ZN5ImGui11FocusWindowEP11ImGuiWindow($196);
  }
 }
 if ((HEAP32[38211] | 0) == ($12 | 0)) if (!(HEAP8[147092] | 0)) {
  HEAP32[38211] = 0;
  HEAP8[152854] = 0;
  HEAP8[152853] = 1;
  HEAP32[38214] = 0;
  $held$0$off0$i = 0;
 } else $held$0$off0$i = 1; else $held$0$off0$i = 0;
 $218 = $176 - $173;
 $220 = $218 <= 1.0 ? 1.0 : $218;
 $221 = $171 / $220;
 $226 = $168 - $190;
 $228 = ($221 < 0.0 ? 0.0 : $221 > 1.0 ? 1.0 : $221) * $226 / $168;
 if ($191 < 1.0 & $held$0$off0$i << 24 >> 24 != 0) {
  $239 = $horizontal ? 156944 : 156948;
  $241 = (+HEAPF32[($horizontal ? 147084 : 147088) >> 2] - ($horizontal ? +HEAPF32[$bb >> 2] : +HEAPF32[$150 >> 2])) / $168;
  $245 = $241 < 0.0 ? 0.0 : $241 > 1.0 ? 1.0 : $241;
  HEAP32[38208] = $12;
  HEAP8[152836] = 0;
  do if ($194) {
   $255 = +HEAPF32[$239 >> 2];
   $seek_absolute$0$off0 = 0;
  } else if (!($245 >= $228) | !($245 <= $191 + $228)) {
   HEAPF32[$239 >> 2] = 0.0;
   $255 = 0.0;
   $seek_absolute$0$off0 = 1;
   break;
  } else {
   $253 = $245 - $228 - $191 * .5;
   HEAPF32[$239 >> 2] = $253;
   $255 = $253;
   $seek_absolute$0$off0 = 0;
   break;
  } while (0);
  $256 = $191 * .5;
  $259 = ($245 - $255 - $256) / (1.0 - $191);
  $267 = +(~~($220 * ($259 < 0.0 ? 0.0 : $259 > 1.0 ? 1.0 : $259) + .5) | 0);
  if ($horizontal) HEAPF32[$169 >> 2] = $267; else HEAPF32[$170 >> 2] = $267;
  $268 = $267 / $220;
  $274 = $226 * ($268 < 0.0 ? 0.0 : $268 > 1.0 ? 1.0 : $268) / $168;
  if ($seek_absolute$0$off0) {
   HEAPF32[$239 >> 2] = $245 - $274 - $256;
   $280 = 146892;
   $grab_v_norm$0 = $274;
  } else {
   $280 = 146892;
   $grab_v_norm$0 = $274;
  }
 } else {
  $280 = 146892;
  $grab_v_norm$0 = $228;
 }
 $$ = $held$0$off0$i << 24 >> 24 == 0 ? ($198 ? 15 : 14) : 16;
 $281 = +HEAPF32[$280 + 5164 + ($$ << 4) >> 2];
 $283 = +HEAPF32[$280 + 5164 + ($$ << 4) + 4 >> 2];
 $285 = +HEAPF32[$280 + 5164 + ($$ << 4) + 8 >> 2];
 $290 = +HEAPF32[$280 + 5164 + ($$ << 4) + 12 >> 2] * +HEAPF32[$280 + 5044 >> 2];
 $313 = ($283 < 0.0 ? 0 : ~~(($283 > 1.0 ? 1.0 : $283) * 255.0 + .5) << 8) | ($281 < 0.0 ? 0 : ~~(($281 > 1.0 ? 1.0 : $281) * 255.0 + .5)) | ($285 < 0.0 ? 0 : ~~(($285 > 1.0 ? 1.0 : $285) * 255.0 + .5) << 16) | ($290 < 0.0 ? 0 : ~~(($290 > 1.0 ? 1.0 : $290) * 255.0 + .5) << 24);
 $314 = HEAP32[$99 >> 2] | 0;
 $315 = +HEAPF32[$bb >> 2];
 $317 = +HEAPF32[38005];
 if ($horizontal) {
  $321 = $315 + $grab_v_norm$0 * (+HEAPF32[$101 >> 2] - $315);
  $322 = HEAP32[$150 >> 2] | 0;
  HEAPF32[$0 >> 2] = $321;
  HEAP32[$0 + 4 >> 2] = $322;
  $325 = HEAP32[$148 >> 2] | 0;
  HEAPF32[$1 >> 2] = $190 + $321;
  HEAP32[$1 + 4 >> 2] = $325;
  __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi($314, $0, $1, $313, $317, 15);
  STACKTOP = sp;
  return;
 } else {
  $327 = +HEAPF32[$150 >> 2];
  $331 = $327 + $grab_v_norm$0 * (+HEAPF32[$148 >> 2] - $327);
  HEAPF32[$2 >> 2] = $315;
  HEAPF32[$2 + 4 >> 2] = $331;
  HEAP32[$3 >> 2] = HEAP32[$101 >> 2];
  HEAPF32[$3 + 4 >> 2] = $190 + $331;
  __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi($314, $2, $3, $313, $317, 15);
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol5_priv15glShaderFactory13SetupResourceERNS0_6shaderE($this, $shd) {
 $this = $this | 0;
 $shd = $shd | 0;
 var $$0 = 0, $$0$i$ph = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $31 = 0, $33 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $50 = 0, $56 = 0, $63 = 0, $64 = 0, $65 = 0, $70 = 0, $71 = 0, $74 = 0, $77 = 0, $9 = 0, $glTextureLocation$011 = 0, $glTextureLocation$1$lcssa = 0, $glTextureLocation$19 = 0, $glTextureLocation$2 = 0, $i$024 = 0, $i$024$lcssa29 = 0, $linkStatus = 0, $logLength = 0, $tbIndex$012 = 0, $texIndex$010 = 0, $ubIndex$020 = 0, $uniformIndex$016 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $linkStatus = sp + 32 | 0;
 $logLength = sp + 28 | 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 65202, 46, 65441);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer21invalidateShaderStateEv(HEAP32[$this >> 2] | 0);
 $4 = $shd + 16 | 0;
 if (!(__ZNK5Oryol6String7IsValidEv(__ZNK5Oryol11ShaderSetup18VertexShaderSourceENS_10ShaderLang4CodeE($4, 0) | 0) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(65530, 0, 65202, 58, 65441);
  _abort();
 }
 if (!(__ZNK5Oryol6String7IsValidEv(__ZNK5Oryol11ShaderSetup20FragmentShaderSourceENS_10ShaderLang4CodeE($4, 0) | 0) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(65572, 0, 65202, 59, 65441);
  _abort();
 }
 $9 = __ZNK5Oryol11ShaderSetup18VertexShaderSourceENS_10ShaderLang4CodeE($4, 0) | 0;
 $10 = __ZNK5Oryol6String6AsCStrEv($9) | 0;
 $12 = __ZNK5Oryol5_priv15glShaderFactory13compileShaderENS_11ShaderStage4CodeEPKci(0, 0, $10, __ZNK5Oryol6String6LengthEv($9) | 0) | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(65795, 0, 65202, 64, 65441);
  _abort();
 }
 $14 = __ZNK5Oryol11ShaderSetup20FragmentShaderSourceENS_10ShaderLang4CodeE($4, 0) | 0;
 $15 = __ZNK5Oryol6String6AsCStrEv($14) | 0;
 $17 = __ZNK5Oryol5_priv15glShaderFactory13compileShaderENS_11ShaderStage4CodeEPKci(0, 1, $15, __ZNK5Oryol6String6LengthEv($14) | 0) | 0;
 if (!$17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(65815, 0, 65202, 69, 65441);
  _abort();
 }
 $19 = _glCreateProgram() | 0;
 _glAttachShader($19 | 0, $12 | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 74, 65441);
  _abort();
 }
 _glAttachShader($19 | 0, $17 | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 76, 65441);
  _abort();
 }
 if ((__ZN5Oryol5_priv6glInfo3IntENS1_4CodeE(4) | 0) > 15) $i$024 = 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(65837, 0, 65202, 82, 65441);
  _abort();
 }
 L24 : while (1) {
  do switch ($i$024 | 0) {
  case 15:
   {
    $i$024$lcssa29 = $i$024;
    break L24;
    break;
   }
  case 0:
   {
    $$0$i$ph = 65955;
    break;
   }
  case 1:
   {
    $$0$i$ph = 65964;
    break;
   }
  case 2:
   {
    $$0$i$ph = 65971;
    break;
   }
  case 3:
   {
    $$0$i$ph = 65981;
    break;
   }
  case 4:
   {
    $$0$i$ph = 65991;
    break;
   }
  case 5:
   {
    $$0$i$ph = 66001;
    break;
   }
  case 6:
   {
    $$0$i$ph = 66011;
    break;
   }
  case 7:
   {
    $$0$i$ph = 66019;
    break;
   }
  case 8:
   {
    $$0$i$ph = 66028;
    break;
   }
  case 9:
   {
    $$0$i$ph = 66036;
    break;
   }
  case 10:
   {
    $$0$i$ph = 66044;
    break;
   }
  case 11:
   {
    $$0$i$ph = 66051;
    break;
   }
  case 12:
   {
    $$0$i$ph = 66058;
    break;
   }
  case 13:
   {
    $$0$i$ph = 66068;
    break;
   }
  case 14:
   {
    $$0$i$ph = 66078;
    break;
   }
  default:
   {
    label = 33;
    break L24;
   }
  } while (0);
  _glBindAttribLocation($19 | 0, $i$024 | 0, $$0$i$ph | 0);
  $i$024 = $i$024 + 1 | 0;
 }
 if ((label | 0) == 33) {
  __ZN5Oryol3Log5ErrorEPKcz(65915, $vararg_buffer);
  _abort();
 }
 _glBindAttribLocation($19 | 0, $i$024$lcssa29 | 0, 65905);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 86, 65441);
  _abort();
 }
 _glLinkProgram($19 | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 91, 65441);
  _abort();
 }
 _glDeleteShader($12 | 0);
 _glDeleteShader($17 | 0);
 _glGetProgramiv($19 | 0, 35714, $linkStatus | 0);
 _glGetProgramiv($19 | 0, 35716, $logLength | 0);
 $31 = HEAP32[$logLength >> 2] | 0;
 if (($31 | 0) > 0) {
  $33 = __ZN5Oryol6Memory5AllocEi($31) | 0;
  _glGetProgramInfoLog($19 | 0, HEAP32[$logLength >> 2] | 0, $logLength | 0, $33 | 0);
  HEAP32[$vararg_buffer1 >> 2] = $33;
  __ZN5Oryol3Log4InfoEPKcz(66088, $vararg_buffer1);
  __ZN5Oryol6Memory4FreeEPv($33);
 }
 if (!(HEAP32[$linkStatus >> 2] | 0)) {
  $37 = HEAP32[$4 >> 2] | 0;
  HEAP32[$vararg_buffer3 >> 2] = HEAP32[(($37 | 0) == 0 ? 13684 : $37 + 12 | 0) >> 2];
  __ZN5Oryol3Log4WarnEPKcz(66092, $vararg_buffer3);
  $$0 = 4;
  STACKTOP = sp;
  return $$0 | 0;
 }
 HEAP32[$shd + 3064 >> 2] = $19;
 __ZN5Oryol5_priv10glRenderer10useProgramEj(HEAP32[$this >> 2] | 0, $19);
 $42 = __ZNK5Oryol11ShaderSetup16NumUniformBlocksEv($4) | 0;
 L58 : do if (($42 | 0) > 0) {
  $ubIndex$020 = 0;
  L59 : while (1) {
   $46 = __ZNK5Oryol11ShaderSetup18UniformBlockLayoutEi($4, $ubIndex$020) | 0;
   $47 = __ZNK5Oryol11ShaderSetup21UniformBlockBindStageEi($4, $ubIndex$020) | 0;
   $48 = __ZNK5Oryol11ShaderSetup20UniformBlockBindSlotEi($4, $ubIndex$020) | 0;
   $50 = HEAP32[$46 + 8 >> 2] | 0;
   if (($50 | 0) > 0) {
    $uniformIndex$016 = 0;
    do {
     if ($uniformIndex$016 >>> 0 >= 16) break L59;
     $56 = HEAP32[$46 + 16 + ($uniformIndex$016 * 12 | 0) >> 2] | 0;
     __ZN5Oryol5_priv8glShader11bindUniformENS_11ShaderStage4CodeEiii($shd, $47, $48, $uniformIndex$016, _glGetUniformLocation($19 | 0, HEAP32[(($56 | 0) == 0 ? 13684 : $56 + 12 | 0) >> 2] | 0) | 0);
     $uniformIndex$016 = $uniformIndex$016 + 1 | 0;
    } while (($uniformIndex$016 | 0) < ($50 | 0));
   }
   $ubIndex$020 = $ubIndex$020 + 1 | 0;
   if (($ubIndex$020 | 0) >= ($42 | 0)) break L58;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 71225);
  _abort();
 } while (0);
 $44 = __ZNK5Oryol11ShaderSetup16NumTextureBlocksEv($4) | 0;
 L68 : do if (($44 | 0) > 0) {
  $glTextureLocation$011 = 0;
  $tbIndex$012 = 0;
  L69 : while (1) {
   $63 = __ZNK5Oryol11ShaderSetup18TextureBlockLayoutEi($4, $tbIndex$012) | 0;
   $64 = __ZNK5Oryol11ShaderSetup21TextureBlockBindStageEi($4, $tbIndex$012) | 0;
   $65 = HEAP32[$63 >> 2] | 0;
   if (($65 | 0) > 0) {
    $glTextureLocation$19 = $glTextureLocation$011;
    $texIndex$010 = 0;
    while (1) {
     if ($texIndex$010 >>> 0 >= 16) break L69;
     $70 = $63 + 4 + ($texIndex$010 * 12 | 0) | 0;
     $71 = HEAP32[$70 >> 2] | 0;
     $74 = _glGetUniformLocation($19 | 0, HEAP32[(($71 | 0) == 0 ? 13684 : $71 + 12 | 0) >> 2] | 0) | 0;
     if (($74 | 0) == -1) {
      $77 = HEAP32[$70 >> 2] | 0;
      HEAP32[$vararg_buffer6 >> 2] = HEAP32[(($77 | 0) == 0 ? 13684 : $77 + 12 | 0) >> 2];
      __ZN5Oryol3Log4WarnEPKcz(66274, $vararg_buffer6);
      $glTextureLocation$2 = $glTextureLocation$19;
     } else {
      __ZN5Oryol5_priv8glShader11bindSamplerENS_11ShaderStage4CodeEii($shd, $64, $texIndex$010, $glTextureLocation$19);
      _glUniform1i($74 | 0, $glTextureLocation$19 | 0);
      $glTextureLocation$2 = $glTextureLocation$19 + 1 | 0;
     }
     $texIndex$010 = $texIndex$010 + 1 | 0;
     if (($texIndex$010 | 0) >= ($65 | 0)) {
      $glTextureLocation$1$lcssa = $glTextureLocation$2;
      break;
     } else $glTextureLocation$19 = $glTextureLocation$2;
    }
   } else $glTextureLocation$1$lcssa = $glTextureLocation$011;
   $tbIndex$012 = $tbIndex$012 + 1 | 0;
   if (($tbIndex$012 | 0) >= ($44 | 0)) break L68; else $glTextureLocation$011 = $glTextureLocation$1$lcssa;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 66121);
  _abort();
 } while (0);
 __ZN5Oryol5_priv10glRenderer21invalidateShaderStateEv(HEAP32[$this >> 2] | 0);
 $$0 = 3;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN8ImGuiStbL25stb_textedit_find_charposEPNS_12StbFindStateEP18ImGuiTextEditStateii($find, $str, $n, $single_line) {
 $find = $find | 0;
 $str = $str | 0;
 $n = $n | 0;
 $single_line = $single_line | 0;
 var $$0$i = 0.0, $$in$i$i = 0, $$in$i$us$i$i = 0, $$in$i$us$i$i12 = 0, $$lcssa110 = 0, $$lcssa112 = 0, $$lcssa115 = 0, $$lcssa116 = 0, $$lcssa117 = 0, $$pre = 0.0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $105 = 0, $107 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $124 = 0.0, $13 = 0, $15 = 0.0, $16 = 0, $17 = 0.0, $19 = 0, $2 = 0, $29 = 0.0, $33 = 0.0, $4 = 0, $43 = 0, $44 = 0, $46 = 0, $53 = 0, $58 = 0, $59 = 0, $6 = 0.0, $61 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0.0, $67 = 0.0, $68 = 0, $69 = 0.0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0.0, $84 = 0.0, $9 = 0, $90 = 0, $91 = 0, $i$0$lcssa = 0, $i$055 = 0, $i$1 = 0, $i$1$lcssa = 0, $i$259 = 0, $line_width$0$ph$us$i$i = 0.0, $line_width$0$ph$us$i$i$lcssa114 = 0.0, $line_width$0$ph$us$i$i8 = 0.0, $line_width$2$i$i = 0.0, $line_width$2$i$i19 = 0.0, $prev_start$0$lcssa = 0, $prev_start$1 = 0, $prev_start$1$lcssa = 0, $prev_start$1$phi = 0, $s$0$ph$us$i$i = 0, $s$0$ph$us$i$i7 = 0, $s$0$us$i$i = 0, $s$0$us$i$i14 = 0, $s$0$us$i$i3153 = 0, $s$1$i$i18 = 0, $s$1$i$i35 = 0, $size$sroa$0$0$i = 0, $size$sroa$0$1$i = 0, $size$sroa$6$0$i = 0, $size$sroa$6$0$i16 = 0, $size$sroa$6$1$i = 0, $size$sroa$6$1$i22 = 0, $size$sroa$6$1$i22$lcssa = 0, $str$idx = 0, $str$idx$val = 0, $str$idx1$val = 0, $str$idx3$val = 0, $str$idx4$val = 0, $str$idx5$val = 0, label = 0;
 $str$idx = $str + 44 | 0;
 $str$idx$val = HEAP32[$str$idx >> 2] | 0;
 if (($str$idx$val | 0) == ($n | 0)) {
  if (!$single_line) {
   HEAPF32[$find + 4 >> 2] = 0.0;
   HEAPF32[$find >> 2] = 0.0;
   HEAPF32[$find + 8 >> 2] = 1.0;
   if (($n | 0) > 0) {
    $str$idx3$val = HEAP32[$str + 12 >> 2] | 0;
    $str$idx4$val = HEAP32[$str$idx >> 2] | 0;
    $43 = $str$idx3$val + ($str$idx4$val << 1) | 0;
    $i$055 = 0;
    while (1) {
     $44 = $str$idx3$val + ($i$055 << 1) | 0;
     if (($i$055 | 0) < ($str$idx4$val | 0)) {
      $s$0$us$i$i3153 = $44;
      while (1) {
       $46 = $s$0$us$i$i3153 + 2 | 0;
       if ((HEAP16[$s$0$us$i$i3153 >> 1] | 0) != 10 & $46 >>> 0 < $43 >>> 0) $s$0$us$i$i3153 = $46; else {
        $s$1$i$i35 = $46;
        break;
       }
      }
     } else $s$1$i$i35 = $44;
     $53 = ($s$1$i$i35 - $44 >> 1) + $i$055 | 0;
     if (($53 | 0) < ($n | 0)) $i$055 = $53; else {
      $i$0$lcssa = $53;
      $prev_start$0$lcssa = $i$055;
      break;
     }
    }
   } else {
    $i$0$lcssa = 0;
    $prev_start$0$lcssa = 0;
   }
   HEAP32[$find + 12 >> 2] = $i$0$lcssa;
   HEAP32[$find + 16 >> 2] = 0;
   HEAP32[$find + 20 >> 2] = $prev_start$0$lcssa;
   return;
  }
  $str$idx5$val = HEAP32[$str + 12 >> 2] | 0;
  $2 = $str$idx5$val + ($n << 1) | 0;
  $4 = HEAP32[38186] | 0;
  $6 = +HEAPF32[38187];
  $8 = $6 / +HEAPF32[$4 >> 2];
  $9 = $4 + 60 | 0;
  $10 = $4 + 68 | 0;
  $11 = $4 + 56 | 0;
  $line_width$0$ph$us$i$i = 0.0;
  $s$0$ph$us$i$i = $str$idx5$val;
  L16 : while (1) {
   $s$0$us$i$i = $s$0$ph$us$i$i;
   L18 : while (1) {
    if ($s$0$us$i$i >>> 0 >= $2 >>> 0) {
     $29 = 0.0;
     $33 = 0.0;
     $line_width$2$i$i = $line_width$0$ph$us$i$i;
     $size$sroa$0$0$i = 0;
     $size$sroa$6$0$i = 0;
     break L16;
    }
    $12 = $s$0$us$i$i + 2 | 0;
    $13 = HEAP16[$s$0$us$i$i >> 1] | 0;
    switch ($13 << 16 >> 16) {
    case 10:
     {
      $line_width$0$ph$us$i$i$lcssa114 = $line_width$0$ph$us$i$i;
      label = 6;
      break L16;
      break;
     }
    case 13:
     {
      $s$0$us$i$i = $12;
      break;
     }
    default:
     {
      $$lcssa110 = $12;
      $$lcssa112 = $13;
      break L18;
     }
    }
   }
   $19 = $$lcssa112 & 65535;
   if (($19 | 0) < (HEAP32[$9 >> 2] | 0)) $$in$i$us$i$i = (HEAP32[$10 >> 2] | 0) + ($19 << 2) | 0; else $$in$i$us$i$i = $11;
   $line_width$0$ph$us$i$i = $line_width$0$ph$us$i$i + $8 * +HEAPF32[$$in$i$us$i$i >> 2];
   $s$0$ph$us$i$i = $$lcssa110;
  }
  if ((label | 0) == 6) {
   $15 = $line_width$0$ph$us$i$i$lcssa114 <= 0.0 ? 0.0 : $line_width$0$ph$us$i$i$lcssa114;
   $16 = (HEAPF32[tempDoublePtr >> 2] = $15, HEAP32[tempDoublePtr >> 2] | 0);
   $17 = $6 + 0.0;
   $29 = $15;
   $33 = $17;
   $line_width$2$i$i = 0.0;
   $size$sroa$0$0$i = $16;
   $size$sroa$6$0$i = (HEAPF32[tempDoublePtr >> 2] = $17, HEAP32[tempDoublePtr >> 2] | 0);
  }
  $size$sroa$0$1$i = $29 < $line_width$2$i$i ? (HEAPF32[tempDoublePtr >> 2] = $line_width$2$i$i, HEAP32[tempDoublePtr >> 2] | 0) : $size$sroa$0$0$i;
  $size$sroa$6$1$i = $33 == 0.0 | $line_width$2$i$i > 0.0 ? (HEAPF32[tempDoublePtr >> 2] = $6 + $33, HEAP32[tempDoublePtr >> 2] | 0) : $size$sroa$6$0$i;
  HEAPF32[$find + 4 >> 2] = 0.0;
  HEAP32[$find + 12 >> 2] = 0;
  HEAP32[$find + 16 >> 2] = $n;
  HEAP32[$find + 8 >> 2] = $size$sroa$6$1$i;
  HEAP32[$find >> 2] = $size$sroa$0$1$i;
  return;
 }
 $58 = $find + 4 | 0;
 $str$idx1$val = HEAP32[$str + 12 >> 2] | 0;
 $59 = $str$idx1$val + ($str$idx$val << 1) | 0;
 $61 = HEAP32[38186] | 0;
 $63 = $61 + 60 | 0;
 $64 = $61 + 68 | 0;
 $65 = $61 + 56 | 0;
 $$pre = +HEAPF32[38187];
 $66 = $$pre / +HEAPF32[$61 >> 2];
 $67 = $$pre + 0.0;
 $68 = (HEAPF32[tempDoublePtr >> 2] = $67, HEAP32[tempDoublePtr >> 2] | 0);
 $69 = 0.0;
 $i$1 = 0;
 $prev_start$1 = 0;
 while (1) {
  HEAPF32[$58 >> 2] = $69;
  $70 = $str$idx1$val + ($i$1 << 1) | 0;
  $line_width$0$ph$us$i$i8 = 0.0;
  $s$0$ph$us$i$i7 = $70;
  L32 : while (1) {
   $s$0$us$i$i14 = $s$0$ph$us$i$i7;
   L34 : while (1) {
    if ($s$0$us$i$i14 >>> 0 >= $59 >>> 0) {
     $84 = 0.0;
     $line_width$2$i$i19 = $line_width$0$ph$us$i$i8;
     $s$1$i$i18 = $s$0$us$i$i14;
     $size$sroa$6$0$i16 = 0;
     break L32;
    }
    $71 = $s$0$us$i$i14 + 2 | 0;
    $72 = HEAP16[$s$0$us$i$i14 >> 1] | 0;
    switch ($72 << 16 >> 16) {
    case 10:
     {
      $84 = $67;
      $line_width$2$i$i19 = 0.0;
      $s$1$i$i18 = $71;
      $size$sroa$6$0$i16 = $68;
      break L32;
      break;
     }
    case 13:
     {
      $s$0$us$i$i14 = $71;
      break;
     }
    default:
     {
      $$lcssa115 = $71;
      $$lcssa116 = $72;
      break L34;
     }
    }
   }
   $73 = $$lcssa116 & 65535;
   if (($73 | 0) < (HEAP32[$63 >> 2] | 0)) $$in$i$us$i$i12 = (HEAP32[$64 >> 2] | 0) + ($73 << 2) | 0; else $$in$i$us$i$i12 = $65;
   $line_width$0$ph$us$i$i8 = $line_width$0$ph$us$i$i8 + $66 * +HEAPF32[$$in$i$us$i$i12 >> 2];
   $s$0$ph$us$i$i7 = $$lcssa115;
  }
  $size$sroa$6$1$i22 = $84 == 0.0 | $line_width$2$i$i19 > 0.0 ? (HEAPF32[tempDoublePtr >> 2] = $$pre + $84, HEAP32[tempDoublePtr >> 2] | 0) : $size$sroa$6$0$i16;
  $90 = $s$1$i$i18 - $70 >> 1;
  $91 = $90 + $i$1 | 0;
  if (($91 | 0) > ($n | 0)) {
   $$lcssa117 = $90;
   $i$1$lcssa = $i$1;
   $prev_start$1$lcssa = $prev_start$1;
   $size$sroa$6$1$i22$lcssa = $size$sroa$6$1$i22;
   break;
  }
  $prev_start$1$phi = $i$1;
  $69 = (HEAP32[tempDoublePtr >> 2] = $size$sroa$6$1$i22, +HEAPF32[tempDoublePtr >> 2]) + $69;
  $i$1 = $91;
  $prev_start$1 = $prev_start$1$phi;
 }
 HEAP32[$find + 12 >> 2] = $i$1$lcssa;
 HEAP32[$find + 16 >> 2] = $$lcssa117;
 HEAP32[$find + 8 >> 2] = $size$sroa$6$1$i22$lcssa;
 HEAP32[$find + 20 >> 2] = $prev_start$1$lcssa;
 HEAP32[$find >> 2] = 0;
 if (($i$1$lcssa | 0) >= ($n | 0)) return;
 $101 = HEAP32[$str + 4 >> 2] | 0;
 $102 = 152744;
 $103 = 152748;
 $105 = $i$1$lcssa;
 $124 = 0.0;
 $i$259 = 0;
 while (1) {
  if (($101 | 0) <= ($105 | 0)) {
   label = 31;
   break;
  }
  $107 = HEAP16[$str$idx1$val + ($105 << 1) >> 1] | 0;
  if ($107 << 16 >> 16 == 10) $$0$i = -1.0; else {
   $109 = HEAP32[$102 >> 2] | 0;
   $110 = $107 & 65535;
   if (($110 | 0) < (HEAP32[$109 + 60 >> 2] | 0)) $$in$i$i = (HEAP32[$109 + 68 >> 2] | 0) + ($110 << 2) | 0; else $$in$i$i = $109 + 56 | 0;
   $$0$i = +HEAPF32[$$in$i$i >> 2] * (+HEAPF32[$103 >> 2] / +HEAPF32[$109 >> 2]);
  }
  $124 = $$0$i + $124;
  HEAPF32[$find >> 2] = $124;
  $i$259 = $i$259 + 1 | 0;
  $105 = $i$259 + $i$1$lcssa | 0;
  if (($105 | 0) >= ($n | 0)) {
   label = 38;
   break;
  }
 }
 if ((label | 0) == 31) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 38) return;
}

function __ZN6ImFont16BuildLookupTableEv($this) {
 $this = $this | 0;
 var $$1$i = 0, $$1$i8 = 0, $$pr = 0, $$pre$phi33Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $112 = 0, $113 = 0, $116 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $130 = 0, $136 = 0, $138 = 0.0, $147 = 0, $149 = 0, $152 = 0, $154 = 0, $156 = 0, $157 = 0, $16 = 0, $162 = 0, $163 = 0, $167 = 0, $168 = 0.0, $169 = 0, $17 = 0, $172 = 0, $178 = 0, $20 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $45 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $58 = 0, $6 = 0, $66 = 0, $69 = 0, $70 = 0, $73 = 0, $8 = 0, $84 = 0, $9 = 0, $95 = 0, $99 = 0, $i$025 = 0, $i1$023 = 0, $i2$021 = 0, $i3$020 = 0, $max_codepoint$0$lcssa = 0, $max_codepoint$026 = 0, dest = 0, label = 0, src = 0, stop = 0;
 $0 = $this + 40 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 L1 : do if (!$1) $max_codepoint$0$lcssa = 0; else {
  $3 = $this + 48 | 0;
  $i$025 = 0;
  $max_codepoint$026 = 0;
  while (1) {
   if (($1 | 0) <= ($i$025 | 0)) break;
   $50 = HEAPU16[(HEAP32[$3 >> 2] | 0) + ($i$025 * 40 | 0) >> 1] | 0;
   $52 = ($max_codepoint$026 | 0) >= ($50 | 0) ? $max_codepoint$026 : $50;
   $i$025 = $i$025 + 1 | 0;
   if (($i$025 | 0) == ($1 | 0)) {
    $max_codepoint$0$lcssa = $52;
    break L1;
   } else $max_codepoint$026 = $52;
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 $4 = $this + 60 | 0;
 $5 = $this + 68 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) $$pre$phiZ2D = $this + 64 | 0; else {
  $8 = $this + 64 | 0;
  HEAP32[$8 >> 2] = 0;
  HEAP32[$4 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($6);
  HEAP32[$5 >> 2] = 0;
  $$pre$phiZ2D = $8;
 }
 $9 = $max_codepoint$0$lcssa + 1 | 0;
 $10 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if (($10 | 0) <= ($max_codepoint$0$lcssa | 0)) {
  if (!$10) $16 = 8; else $16 = (($10 | 0) / 2 | 0) + $10 | 0;
  $17 = ($16 | 0) > ($9 | 0) ? $16 : $9;
  if (($10 | 0) < ($17 | 0)) {
   $20 = __ZN5ImGui8MemAllocEj($17 << 2) | 0;
   _memcpy($20 | 0, HEAP32[$5 >> 2] | 0, HEAP32[$4 >> 2] << 2 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$5 >> 2] | 0);
   HEAP32[$5 >> 2] = $20;
   HEAP32[$$pre$phiZ2D >> 2] = $17;
  }
 }
 HEAP32[$4 >> 2] = $9;
 $25 = $this + 72 | 0;
 $26 = $this + 80 | 0;
 $27 = HEAP32[$26 >> 2] | 0;
 if (!$27) $$pre$phi33Z2D = $this + 76 | 0; else {
  $29 = $this + 76 | 0;
  HEAP32[$29 >> 2] = 0;
  HEAP32[$25 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($27);
  HEAP32[$26 >> 2] = 0;
  $$pre$phi33Z2D = $29;
 }
 $30 = HEAP32[$$pre$phi33Z2D >> 2] | 0;
 if (($30 | 0) > ($max_codepoint$0$lcssa | 0)) $66 = 0; else {
  if (!$30) $36 = 8; else $36 = (($30 | 0) / 2 | 0) + $30 | 0;
  $37 = ($36 | 0) > ($9 | 0) ? $36 : $9;
  if (($30 | 0) < ($37 | 0)) {
   $40 = __ZN5ImGui8MemAllocEj($37 << 2) | 0;
   _memcpy($40 | 0, HEAP32[$26 >> 2] | 0, HEAP32[$25 >> 2] << 2 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$26 >> 2] | 0);
   HEAP32[$26 >> 2] = $40;
   HEAP32[$$pre$phi33Z2D >> 2] = $37;
   $66 = $40;
  } else $66 = 0;
 }
 HEAP32[$25 >> 2] = $9;
 $45 = ($max_codepoint$0$lcssa | 0) < 0;
 L30 : do if (!$45) {
  $i1$023 = 0;
  while (1) {
   if ((HEAP32[$4 >> 2] | 0) <= ($i1$023 | 0)) {
    label = 26;
    break;
   }
   HEAPF32[(HEAP32[$5 >> 2] | 0) + ($i1$023 << 2) >> 2] = -1.0;
   if ((HEAP32[$25 >> 2] | 0) <= ($i1$023 | 0)) {
    label = 28;
    break;
   }
   HEAP32[$66 + ($i1$023 << 2) >> 2] = -1;
   if (($i1$023 | 0) < ($max_codepoint$0$lcssa | 0)) $i1$023 = $i1$023 + 1 | 0; else break L30;
  }
  if ((label | 0) == 26) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 28) ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 $55 = HEAP32[$0 >> 2] | 0;
 L39 : do if (($55 | 0) > 0) {
  $58 = HEAP32[$this + 48 >> 2] | 0;
  $i2$021 = 0;
  while (1) {
   $84 = HEAPU16[$58 + ($i2$021 * 40 | 0) >> 1] | 0;
   if ((HEAP32[$4 >> 2] | 0) <= ($84 | 0)) {
    label = 38;
    break;
   }
   HEAP32[(HEAP32[$5 >> 2] | 0) + ($84 << 2) >> 2] = HEAP32[$58 + ($i2$021 * 40 | 0) + 4 >> 2];
   if ((HEAP32[$25 >> 2] | 0) <= ($84 | 0)) {
    label = 40;
    break;
   }
   HEAP32[$66 + ($84 << 2) >> 2] = $i2$021;
   $i2$021 = $i2$021 + 1 | 0;
   $95 = HEAP32[$0 >> 2] | 0;
   if (($i2$021 | 0) >= ($95 | 0)) {
    $$pr = $95;
    break L39;
   }
  }
  if ((label | 0) == 38) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 40) ___assert_fail(127217, 127226, 805, 127272);
 } else $$pr = $55; while (0);
 $69 = $this + 72 | 0;
 $70 = HEAP32[$69 >> 2] | 0;
 do if (($70 | 0) > 32) {
  $73 = HEAP32[$66 + 128 >> 2] | 0;
  if (($73 | 0) == -1) label = 35; else if (($$pr | 0) > ($73 | 0)) {
   $$1$i = (HEAP32[$this + 48 >> 2] | 0) + ($73 * 40 | 0) | 0;
   break;
  } else ___assert_fail(127217, 127226, 806, 127272);
 } else label = 35; while (0);
 if ((label | 0) == 35) $$1$i = HEAP32[$this + 52 >> 2] | 0;
 do if (!$$1$i) {
  $154 = $70;
  $156 = $66;
 } else {
  if (($$pr | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
  $99 = $this + 48 | 0;
  $100 = HEAP32[$99 >> 2] | 0;
  if ((HEAP16[$100 + (($$pr + -1 | 0) * 40 | 0) >> 1] | 0) == 9) {
   $123 = $$pr;
   $125 = $100;
  } else {
   $104 = $$pr + 1 | 0;
   $105 = $this + 44 | 0;
   $106 = HEAP32[$105 >> 2] | 0;
   if (($106 | 0) > ($$pr | 0)) $178 = $100; else {
    if (!$106) $112 = 8; else $112 = (($106 | 0) / 2 | 0) + $106 | 0;
    $113 = ($112 | 0) > ($104 | 0) ? $112 : $104;
    if (($106 | 0) < ($113 | 0)) {
     $116 = __ZN5ImGui8MemAllocEj($113 * 40 | 0) | 0;
     _memcpy($116 | 0, HEAP32[$99 >> 2] | 0, (HEAP32[$0 >> 2] | 0) * 40 | 0) | 0;
     __ZN5ImGui7MemFreeEPv(HEAP32[$99 >> 2] | 0);
     HEAP32[$99 >> 2] = $116;
     HEAP32[$105 >> 2] = $113;
     $178 = $116;
    } else $178 = $100;
   }
   HEAP32[$0 >> 2] = $104;
   if (($$pr | 0) > -1) {
    $123 = $104;
    $125 = $178;
   } else ___assert_fail(127436, 127226, 815, 127445);
  }
  $122 = $123 + -1 | 0;
  $124 = $125 + ($122 * 40 | 0) | 0;
  do if ((HEAP32[$69 >> 2] | 0) > 32) {
   $130 = HEAP32[(HEAP32[$26 >> 2] | 0) + 128 >> 2] | 0;
   if (($130 | 0) == -1) label = 57; else if (($123 | 0) > ($130 | 0)) {
    $$1$i8 = $125 + ($130 * 40 | 0) | 0;
    break;
   } else ___assert_fail(127217, 127226, 806, 127272);
  } else label = 57; while (0);
  if ((label | 0) == 57) $$1$i8 = HEAP32[$this + 52 >> 2] | 0;
  dest = $124;
  src = $$1$i8;
  stop = dest + 40 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP16[$124 >> 1] = 9;
  $136 = $125 + ($122 * 40 | 0) + 4 | 0;
  $138 = +HEAPF32[$136 >> 2] * 4.0;
  HEAPF32[$136 >> 2] = $138;
  if ((HEAP32[$4 >> 2] | 0) <= 9) ___assert_fail(127217, 127226, 805, 127272);
  HEAPF32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] = $138;
  if ((HEAP32[$25 >> 2] | 0) > 9) {
   $147 = HEAP32[$26 >> 2] | 0;
   HEAP32[$147 + 36 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
   $154 = HEAP32[$69 >> 2] | 0;
   $156 = $147;
   break;
  } else ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 $149 = $this + 52 | 0;
 HEAP32[$149 >> 2] = 0;
 $152 = HEAPU16[$this + 16 >> 1] | 0;
 if (($152 | 0) < ($154 | 0)) {
  $157 = HEAP32[$156 + ($152 << 2) >> 2] | 0;
  if (($157 | 0) == -1) label = 67; else {
   if ((HEAP32[$0 >> 2] | 0) <= ($157 | 0)) ___assert_fail(127217, 127226, 806, 127272);
   $162 = HEAP32[$this + 48 >> 2] | 0;
   $163 = $162 + ($157 * 40 | 0) | 0;
   HEAP32[$149 >> 2] = $163;
   if (!$163) $168 = 0.0; else $168 = +HEAPF32[$162 + ($157 * 40 | 0) + 4 >> 2];
  }
 } else label = 67;
 if ((label | 0) == 67) {
  HEAP32[$149 >> 2] = 0;
  $168 = 0.0;
 }
 $167 = $this + 56 | 0;
 HEAPF32[$167 >> 2] = $168;
 if ($45) return;
 $169 = HEAP32[$4 >> 2] | 0;
 $i3$020 = 0;
 while (1) {
  if (($169 | 0) <= ($i3$020 | 0)) {
   label = 74;
   break;
  }
  $172 = (HEAP32[$5 >> 2] | 0) + ($i3$020 << 2) | 0;
  if (+HEAPF32[$172 >> 2] < 0.0) HEAP32[$172 >> 2] = HEAP32[$167 >> 2];
  if (($i3$020 | 0) < ($max_codepoint$0$lcssa | 0)) $i3$020 = $i3$020 + 1 | 0; else {
   label = 72;
   break;
  }
 }
 if ((label | 0) == 72) return; else if ((label | 0) == 74) ___assert_fail(127217, 127226, 805, 127272);
}

function __ZN5Oryol5_priv24gfxResourceContainerBaseD2Ev($this) {
 $this = $this | 0;
 var $$pre4$i$i$i = 0, $$pre4$i$i$i18 = 0, $$pre4$i$i$i29 = 0, $$pre4$i$i$i7 = 0, $$pre5$i$i$i = 0, $$pre5$i$i2$pre$phi$i17ZZZZ2D = 0, $$pre5$i$i2$pre$phi$i28ZZZZ2D = 0, $$pre5$i$i2$pre$phi$i39ZZZZ2D = 0, $$pre5$i$i2$pre$phi$iZZZZ2D = 0, $$pre6$i$i2$pre$phi$iZZZZ2D = 0, $0 = 0, $10 = 0, $11 = 0, $110 = 0, $112 = 0, $113 = 0, $114 = 0, $116 = 0, $117 = 0, $12 = 0, $121 = 0, $124 = 0, $126 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $14 = 0, $15 = 0, $19 = 0, $21 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $40 = 0, $43 = 0, $45 = 0, $5 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $83 = 0, $85 = 0, $86 = 0, $87 = 0, $89 = 0, $9 = 0, $90 = 0, $94 = 0, $97 = 0, $99 = 0, $i$01$i$i$i = 0;
 $0 = $this + 532 | 0;
 HEAP32[$this + 548 >> 2] = 0;
 HEAP32[$this + 552 >> 2] = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $$pre5$i$i$i = $this + 540 | 0;
 if (!$3) $$pre6$i$i2$pre$phi$iZZZZ2D = $this + 544 | 0; else {
  $5 = HEAP32[$$pre5$i$i$i >> 2] | 0;
  $6 = $this + 544 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) {
   $11 = $3;
   $135 = $7;
   $i$01$i$i$i = $5;
   while (1) {
    $10 = $11 + ($i$01$i$i$i << 2) | 0;
    $12 = HEAP32[$10 >> 2] | 0;
    if (!$12) $21 = $135; else {
     $14 = $12 + 4 | 0;
     $15 = HEAP32[$14 >> 2] | 0;
     HEAP32[$14 >> 2] = $15 - 1;
     if (($15 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$12 >> 2] >> 2] & 255]($12);
     HEAP32[$10 >> 2] = 0;
     $21 = HEAP32[$6 >> 2] | 0;
    }
    $19 = $i$01$i$i$i + 1 | 0;
    if (($19 | 0) >= ($21 | 0)) break;
    $11 = HEAP32[$0 >> 2] | 0;
    $135 = $21;
    $i$01$i$i$i = $19;
   }
   $9 = HEAP32[$0 >> 2] | 0;
  } else $9 = $3;
  __ZN5Oryol6Memory4FreeEPv($9);
  $$pre6$i$i2$pre$phi$iZZZZ2D = $6;
 }
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 536 >> 2] = 0;
 HEAP32[$$pre5$i$i$i >> 2] = 0;
 HEAP32[$$pre6$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
 if (HEAP8[$this + 464 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48917, 92, 43053);
  _abort();
 }
 HEAP32[$this + 520 >> 2] = 0;
 HEAP32[$this + 524 >> 2] = 0;
 $29 = HEAP32[$this + 504 >> 2] | 0;
 if ($29 | 0) __ZN5Oryol6Memory4FreeEPv($29);
 $31 = $this + 480 | 0;
 $32 = $this + 496 | 0;
 HEAP32[$32 >> 2] = 0;
 HEAP32[$32 + 4 >> 2] = 0;
 HEAP32[$32 + 8 >> 2] = 0;
 HEAP32[$32 + 12 >> 2] = 0;
 HEAP32[$32 + 16 >> 2] = 0;
 HEAP32[$32 + 20 >> 2] = 0;
 $33 = HEAP32[$31 >> 2] | 0;
 $$pre4$i$i$i = $this + 488 | 0;
 if (!$33) $$pre5$i$i2$pre$phi$iZZZZ2D = $this + 492 | 0; else {
  $35 = HEAP32[$$pre4$i$i$i >> 2] | 0;
  $36 = $this + 492 | 0;
  if (($35 | 0) < (HEAP32[$36 >> 2] | 0)) {
   __ZN5Oryol5_priv12pipelineBaseD2Ev($33 + ($35 * 608 | 0) | 0);
   $40 = $35 + 1 | 0;
   if (($40 | 0) < (HEAP32[$36 >> 2] | 0)) {
    $45 = $40;
    do {
     __ZN5Oryol5_priv12pipelineBaseD2Ev((HEAP32[$31 >> 2] | 0) + ($45 * 608 | 0) | 0);
     $45 = $45 + 1 | 0;
    } while (($45 | 0) < (HEAP32[$36 >> 2] | 0));
   }
   $43 = HEAP32[$31 >> 2] | 0;
  } else $43 = $33;
  __ZN5Oryol6Memory4FreeEPv($43);
  $$pre5$i$i2$pre$phi$iZZZZ2D = $36;
 }
 HEAP32[$31 >> 2] = 0;
 HEAP32[$this + 484 >> 2] = 0;
 HEAP32[$$pre4$i$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
 if (HEAP8[$this + 400 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48917, 92, 43202);
  _abort();
 }
 HEAP32[$this + 456 >> 2] = 0;
 HEAP32[$this + 460 >> 2] = 0;
 $56 = HEAP32[$this + 440 >> 2] | 0;
 if ($56 | 0) __ZN5Oryol6Memory4FreeEPv($56);
 $58 = $this + 416 | 0;
 $59 = $this + 432 | 0;
 HEAP32[$59 >> 2] = 0;
 HEAP32[$59 + 4 >> 2] = 0;
 HEAP32[$59 + 8 >> 2] = 0;
 HEAP32[$59 + 12 >> 2] = 0;
 HEAP32[$59 + 16 >> 2] = 0;
 HEAP32[$59 + 20 >> 2] = 0;
 $60 = HEAP32[$58 >> 2] | 0;
 $$pre4$i$i$i7 = $this + 424 | 0;
 if (!$60) $$pre5$i$i2$pre$phi$i17ZZZZ2D = $this + 428 | 0; else {
  $62 = HEAP32[$$pre4$i$i$i7 >> 2] | 0;
  $63 = $this + 428 | 0;
  if (($62 | 0) < (HEAP32[$63 >> 2] | 0)) {
   __ZN5Oryol5_priv9glTextureD2Ev($60 + ($62 * 776 | 0) | 0);
   $67 = $62 + 1 | 0;
   if (($67 | 0) < (HEAP32[$63 >> 2] | 0)) {
    $72 = $67;
    do {
     __ZN5Oryol5_priv9glTextureD2Ev((HEAP32[$58 >> 2] | 0) + ($72 * 776 | 0) | 0);
     $72 = $72 + 1 | 0;
    } while (($72 | 0) < (HEAP32[$63 >> 2] | 0));
   }
   $70 = HEAP32[$58 >> 2] | 0;
  } else $70 = $60;
  __ZN5Oryol6Memory4FreeEPv($70);
  $$pre5$i$i2$pre$phi$i17ZZZZ2D = $63;
 }
 HEAP32[$58 >> 2] = 0;
 HEAP32[$this + 420 >> 2] = 0;
 HEAP32[$$pre4$i$i$i7 >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i17ZZZZ2D >> 2] = 0;
 if (HEAP8[$this + 336 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48917, 92, 43347);
  _abort();
 }
 HEAP32[$this + 392 >> 2] = 0;
 HEAP32[$this + 396 >> 2] = 0;
 $83 = HEAP32[$this + 376 >> 2] | 0;
 if ($83 | 0) __ZN5Oryol6Memory4FreeEPv($83);
 $85 = $this + 352 | 0;
 $86 = $this + 368 | 0;
 HEAP32[$86 >> 2] = 0;
 HEAP32[$86 + 4 >> 2] = 0;
 HEAP32[$86 + 8 >> 2] = 0;
 HEAP32[$86 + 12 >> 2] = 0;
 HEAP32[$86 + 16 >> 2] = 0;
 HEAP32[$86 + 20 >> 2] = 0;
 $87 = HEAP32[$85 >> 2] | 0;
 $$pre4$i$i$i18 = $this + 360 | 0;
 if (!$87) $$pre5$i$i2$pre$phi$i28ZZZZ2D = $this + 364 | 0; else {
  $89 = HEAP32[$$pre4$i$i$i18 >> 2] | 0;
  $90 = $this + 364 | 0;
  if (($89 | 0) < (HEAP32[$90 >> 2] | 0)) {
   __ZN5Oryol5_priv8glShaderD2Ev($87 + ($89 * 3712 | 0) | 0);
   $94 = $89 + 1 | 0;
   if (($94 | 0) < (HEAP32[$90 >> 2] | 0)) {
    $99 = $94;
    do {
     __ZN5Oryol5_priv8glShaderD2Ev((HEAP32[$85 >> 2] | 0) + ($99 * 3712 | 0) | 0);
     $99 = $99 + 1 | 0;
    } while (($99 | 0) < (HEAP32[$90 >> 2] | 0));
   }
   $97 = HEAP32[$85 >> 2] | 0;
  } else $97 = $87;
  __ZN5Oryol6Memory4FreeEPv($97);
  $$pre5$i$i2$pre$phi$i28ZZZZ2D = $90;
 }
 HEAP32[$85 >> 2] = 0;
 HEAP32[$this + 356 >> 2] = 0;
 HEAP32[$$pre4$i$i$i18 >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i28ZZZZ2D >> 2] = 0;
 if (HEAP8[$this + 272 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48917, 92, 43488);
  _abort();
 }
 HEAP32[$this + 328 >> 2] = 0;
 HEAP32[$this + 332 >> 2] = 0;
 $110 = HEAP32[$this + 312 >> 2] | 0;
 if ($110 | 0) __ZN5Oryol6Memory4FreeEPv($110);
 $112 = $this + 288 | 0;
 $113 = $this + 304 | 0;
 HEAP32[$113 >> 2] = 0;
 HEAP32[$113 + 4 >> 2] = 0;
 HEAP32[$113 + 8 >> 2] = 0;
 HEAP32[$113 + 12 >> 2] = 0;
 HEAP32[$113 + 16 >> 2] = 0;
 HEAP32[$113 + 20 >> 2] = 0;
 $114 = HEAP32[$112 >> 2] | 0;
 $$pre4$i$i$i29 = $this + 296 | 0;
 if (!$114) {
  $$pre5$i$i2$pre$phi$i39ZZZZ2D = $this + 300 | 0;
  $130 = $this + 292 | 0;
  HEAP32[$112 >> 2] = 0;
  HEAP32[$130 >> 2] = 0;
  HEAP32[$$pre4$i$i$i29 >> 2] = 0;
  HEAP32[$$pre5$i$i2$pre$phi$i39ZZZZ2D >> 2] = 0;
  $131 = $this + 240 | 0;
  __ZN5Oryol5_priv19pipelineFactoryBaseD2Ev($131);
  $132 = $this + 208 | 0;
  __ZN5Oryol5_priv16glTextureFactoryD2Ev($132);
  $133 = $this + 176 | 0;
  __ZN5Oryol5_priv15glShaderFactoryD2Ev($133);
  $134 = $this + 144 | 0;
  __ZN5Oryol5_priv13glMeshFactoryD2Ev($134);
  __ZN5Oryol21resourceContainerBaseD2Ev($this);
  return;
 }
 $116 = HEAP32[$$pre4$i$i$i29 >> 2] | 0;
 $117 = $this + 300 | 0;
 if (($116 | 0) < (HEAP32[$117 >> 2] | 0)) {
  __ZN5Oryol5_priv6glMeshD2Ev($114 + ($116 * 400 | 0) | 0);
  $121 = $116 + 1 | 0;
  if (($121 | 0) < (HEAP32[$117 >> 2] | 0)) {
   $126 = $121;
   do {
    __ZN5Oryol5_priv6glMeshD2Ev((HEAP32[$112 >> 2] | 0) + ($126 * 400 | 0) | 0);
    $126 = $126 + 1 | 0;
   } while (($126 | 0) < (HEAP32[$117 >> 2] | 0));
  }
  $124 = HEAP32[$112 >> 2] | 0;
 } else $124 = $114;
 __ZN5Oryol6Memory4FreeEPv($124);
 $$pre5$i$i2$pre$phi$i39ZZZZ2D = $117;
 $130 = $this + 292 | 0;
 HEAP32[$112 >> 2] = 0;
 HEAP32[$130 >> 2] = 0;
 HEAP32[$$pre4$i$i$i29 >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i39ZZZZ2D >> 2] = 0;
 $131 = $this + 240 | 0;
 __ZN5Oryol5_priv19pipelineFactoryBaseD2Ev($131);
 $132 = $this + 208 | 0;
 __ZN5Oryol5_priv16glTextureFactoryD2Ev($132);
 $133 = $this + 176 | 0;
 __ZN5Oryol5_priv15glShaderFactoryD2Ev($133);
 $134 = $this + 144 | 0;
 __ZN5Oryol5_priv13glMeshFactoryD2Ev($134);
 __ZN5Oryol21resourceContainerBaseD2Ev($this);
 return;
}

function __ZN7z80dasm9z80disasmEPFhtiPvEtPcS0_($fetch, $pc, $buffer, $userdata) {
 $fetch = $fetch | 0;
 $pc = $pc | 0;
 $buffer = $buffer | 0;
 $userdata = $userdata | 0;
 var $0 = 0, $1 = 0, $10 = 0, $101 = 0, $11 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $25 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $43 = 0, $5 = 0, $72 = 0, $8 = 0, $d$0 = 0, $dst$0$lcssa = 0, $dst$04 = 0, $dst$1 = 0, $ixy$0 = 0, $offset$0 = 0, $offset$15 = 0, $offset$2 = 0, $offset$3 = 0, $op$0 = 0, $op1$0 = 0, $pos$0 = 0, $pos$1$lcssa = 0, $pos$16 = 0, $pos$2 = 0, $pos$3 = 0, $pos$4 = 0, $src$03 = 0, $strlen1 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer17 = 0, $vararg_buffer20 = 0, $vararg_buffer23 = 0, $vararg_buffer26 = 0, $vararg_buffer5 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $vararg_buffer26 = sp + 72 | 0;
 $vararg_buffer23 = sp + 64 | 0;
 $vararg_buffer20 = sp + 56 | 0;
 $vararg_buffer17 = sp + 48 | 0;
 $vararg_buffer14 = sp + 40 | 0;
 $vararg_buffer11 = sp + 32 | 0;
 $vararg_buffer8 = sp + 24 | 0;
 $vararg_buffer5 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, 0, $userdata) | 0;
 $1 = $0 & 255;
 L1 : do switch ($1 | 0) {
 case 203:
  {
   $2 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, 1, $userdata) | 0;
   $d$0 = 2008 + (($2 & 255) << 3) | 0;
   $ixy$0 = 40894;
   $offset$0 = 0;
   $op$0 = $2;
   $op1$0 = 0;
   $pos$0 = 2;
   break;
  }
 case 237:
  {
   $5 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, 1, $userdata) | 0;
   $d$0 = 4056 + (($5 & 255) << 3) | 0;
   $ixy$0 = 40894;
   $offset$0 = 0;
   $op$0 = $0;
   $op1$0 = $5;
   $pos$0 = 2;
   break;
  }
 case 221:
  {
   $8 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, 1, $userdata) | 0;
   if ($8 << 24 >> 24 == -53) {
    $10 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, 2, $userdata) | 0;
    $11 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, 3, $userdata) | 0;
    $d$0 = 6104 + (($11 & 255) << 3) | 0;
    $ixy$0 = 41398;
    $offset$0 = $10;
    $op$0 = $0;
    $op1$0 = $11;
    $pos$0 = 4;
    break L1;
   } else {
    $d$0 = 8152 + (($8 & 255) << 3) | 0;
    $ixy$0 = 41398;
    $offset$0 = 0;
    $op$0 = $0;
    $op1$0 = $8;
    $pos$0 = 2;
    break L1;
   }
   break;
  }
 case 253:
  {
   $16 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, 1, $userdata) | 0;
   if ($16 << 24 >> 24 == -53) {
    $18 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, 2, $userdata) | 0;
    $19 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, 3, $userdata) | 0;
    $d$0 = 6104 + (($19 & 255) << 3) | 0;
    $ixy$0 = 42057;
    $offset$0 = $18;
    $op$0 = $0;
    $op1$0 = $19;
    $pos$0 = 4;
    break L1;
   } else {
    $d$0 = 8152 + (($16 & 255) << 3) | 0;
    $ixy$0 = 42057;
    $offset$0 = 0;
    $op$0 = $0;
    $op1$0 = $16;
    $pos$0 = 2;
    break L1;
   }
   break;
  }
 default:
  {
   $d$0 = 10200 + ($1 << 3) | 0;
   $ixy$0 = 40894;
   $offset$0 = 0;
   $op$0 = $0;
   $op1$0 = 0;
   $pos$0 = 1;
  }
 } while (0);
 $25 = $d$0 + 4 | 0;
 $31 = HEAP32[12248 + ((HEAPU8[$d$0 >> 0] | 0) << 2) >> 2] | 0;
 if (!(HEAP32[$25 >> 2] | 0)) {
  _memcpy($buffer | 0, $31 | 0, (_strlen($31) | 0) + 1 | 0) | 0;
  $pos$4 = $pos$0;
  $111 = HEAP8[$d$0 >> 0] | 0;
  $112 = $111 & 255;
  $113 = 12524 + ($112 << 2) | 0;
  $114 = HEAP32[$113 >> 2] | 0;
  $115 = $pos$4 | $114;
  $116 = $115 | -2147483648;
  STACKTOP = sp;
  return $116 | 0;
 }
 HEAP32[$vararg_buffer >> 2] = $31;
 $33 = $buffer + (_sprintf($buffer, 42872, $vararg_buffer) | 0) | 0;
 $34 = HEAP32[$25 >> 2] | 0;
 $35 = HEAP8[$34 >> 0] | 0;
 L18 : do if (!($35 << 24 >> 24)) {
  $dst$0$lcssa = $33;
  $pos$1$lcssa = $pos$0;
 } else {
  $37 = $op$0 & 255;
  $38 = $op1$0 & 255;
  $40 = ($pc & 65535) + 2 | 0;
  $41 = $37 & 56;
  $43 = $35;
  $dst$04 = $33;
  $offset$15 = $offset$0;
  $pos$16 = $pos$0;
  $src$03 = $34;
  while (1) {
   do switch ($43 << 24 >> 24 | 0) {
   case 63:
    {
     HEAP32[$vararg_buffer1 >> 2] = $37;
     HEAP32[$vararg_buffer1 + 4 >> 2] = $38;
     $dst$1 = $dst$04 + (_sprintf($dst$04, 42878, $vararg_buffer1) | 0) | 0;
     $offset$3 = $offset$15;
     $pos$3 = $pos$16;
     break;
    }
   case 65:
    {
     HEAP32[$vararg_buffer5 >> 2] = (FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16, $userdata) | 0) & 255 | ((FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16 + 1 | 0, $userdata) | 0) & 255) << 8;
     $dst$1 = $dst$04 + (_sprintf($dst$04, 42890, $vararg_buffer5) | 0) | 0;
     $offset$3 = $offset$15;
     $pos$3 = $pos$16 + 2 | 0;
     break;
    }
   case 66:
    {
     HEAP32[$vararg_buffer8 >> 2] = (FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16, $userdata) | 0) & 255;
     $dst$1 = $dst$04 + (_sprintf($dst$04, 42896, $vararg_buffer8) | 0) | 0;
     $offset$3 = $offset$15;
     $pos$3 = $pos$16 + 1 | 0;
     break;
    }
   case 78:
    {
     HEAP32[$vararg_buffer11 >> 2] = (FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16, $userdata) | 0) & 255 | ((FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16 + 1 | 0, $userdata) | 0) & 255) << 8;
     $dst$1 = $dst$04 + (_sprintf($dst$04, 42890, $vararg_buffer11) | 0) | 0;
     $offset$3 = $offset$15;
     $pos$3 = $pos$16 + 2 | 0;
     break;
    }
   case 79:
    {
     $72 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16, $userdata) | 0;
     HEAP32[$vararg_buffer14 >> 2] = $40 + ($72 << 24 >> 24) & 65535;
     $dst$1 = $dst$04 + (_sprintf($dst$04, 42890, $vararg_buffer14) | 0) | 0;
     $offset$3 = $72;
     $pos$3 = $pos$16 + 1 | 0;
     break;
    }
   case 80:
    {
     HEAP32[$vararg_buffer17 >> 2] = (FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16, $userdata) | 0) & 255;
     $dst$1 = $dst$04 + (_sprintf($dst$04, 42896, $vararg_buffer17) | 0) | 0;
     $offset$3 = $offset$15;
     $pos$3 = $pos$16 + 1 | 0;
     break;
    }
   case 86:
    {
     HEAP32[$vararg_buffer20 >> 2] = $41;
     $dst$1 = $dst$04 + (_sprintf($dst$04, 42896, $vararg_buffer20) | 0) | 0;
     $offset$3 = $offset$15;
     $pos$3 = $pos$16;
     break;
    }
   case 87:
    {
     HEAP32[$vararg_buffer23 >> 2] = (FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16, $userdata) | 0) & 255 | ((FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16 + 1 | 0, $userdata) | 0) & 255) << 8;
     $dst$1 = $dst$04 + (_sprintf($dst$04, 42890, $vararg_buffer23) | 0) | 0;
     $offset$3 = $offset$15;
     $pos$3 = $pos$16 + 2 | 0;
     break;
    }
   case 88:
    {
     $offset$2 = FUNCTION_TABLE_iiii[$fetch & 31]($pc, $pos$16, $userdata) | 0;
     $pos$2 = $pos$16 + 1 | 0;
     label = 24;
     break;
    }
   case 89:
    {
     $offset$2 = $offset$15;
     $pos$2 = $pos$16;
     label = 24;
     break;
    }
   case 73:
    {
     $strlen1 = _strlen($ixy$0) | 0;
     _memcpy($dst$04 | 0, $ixy$0 | 0, $strlen1 + 1 | 0) | 0;
     $dst$1 = $dst$04 + $strlen1 | 0;
     $offset$3 = $offset$15;
     $pos$3 = $pos$16;
     break;
    }
   default:
    {
     HEAP8[$dst$04 >> 0] = $43;
     $dst$1 = $dst$04 + 1 | 0;
     $offset$3 = $offset$15;
     $pos$3 = $pos$16;
    }
   } while (0);
   if ((label | 0) == 24) {
    label = 0;
    $101 = $offset$2 << 24 >> 24;
    HEAP32[$vararg_buffer26 >> 2] = $ixy$0;
    HEAP32[$vararg_buffer26 + 4 >> 2] = ($offset$2 << 24 >> 24 >> 7 & 2) + 43 & 255;
    HEAP32[$vararg_buffer26 + 8 >> 2] = $offset$2 << 24 >> 24 < 0 ? 0 - $101 | 0 : $101;
    $dst$1 = $dst$04 + (_sprintf($dst$04, 42902, $vararg_buffer26) | 0) | 0;
    $offset$3 = $offset$2;
    $pos$3 = $pos$2;
   }
   $src$03 = $src$03 + 1 | 0;
   $43 = HEAP8[$src$03 >> 0] | 0;
   if (!($43 << 24 >> 24)) {
    $dst$0$lcssa = $dst$1;
    $pos$1$lcssa = $pos$3;
    break L18;
   } else {
    $dst$04 = $dst$1;
    $offset$15 = $offset$3;
    $pos$16 = $pos$3;
   }
  }
 } while (0);
 HEAP8[$dst$0$lcssa >> 0] = 0;
 $pos$4 = $pos$1$lcssa;
 $111 = HEAP8[$d$0 >> 0] | 0;
 $112 = $111 & 255;
 $113 = 12524 + ($112 << 2) | 0;
 $114 = HEAP32[$113 >> 2] | 0;
 $115 = $pos$4 | $114;
 $116 = $115 | -2147483648;
 STACKTOP = sp;
 return $116 | 0;
}

function __ZN5ImGui8MenuItemEPKcS1_bb($label, $shortcut, $selected, $enabled) {
 $label = $label | 0;
 $shortcut = $shortcut | 0;
 $selected = $selected | 0;
 $enabled = $enabled | 0;
 var $$0 = 0, $$byval_copy1 = 0, $$pre$i = 0, $$pre$phi$i$iZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $104 = 0, $105 = 0, $108 = 0, $113 = 0, $114 = 0, $118 = 0, $12 = 0, $120 = 0, $126 = 0, $128 = 0, $130 = 0, $134 = 0.0, $137 = 0.0, $139 = 0, $142 = 0, $143 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $157 = 0.0, $160 = 0.0, $163 = 0.0, $165 = 0.0, $167 = 0.0, $172 = 0.0, $2 = 0, $20 = 0, $22 = 0.0, $24 = 0.0, $28 = 0.0, $30 = 0.0, $35 = 0, $37 = 0.0, $38 = 0.0, $4 = 0, $42 = 0.0, $44 = 0.0, $47 = 0, $51 = 0.0, $52 = 0, $53 = 0, $54 = 0.0, $56 = 0.0, $57 = 0, $58 = 0.0, $60 = 0.0, $61 = 0, $62 = 0.0, $64 = 0.0, $65 = 0, $66 = 0.0, $70 = 0.0, $71 = 0.0, $75 = 0.0, $76 = 0.0, $78 = 0.0, $80 = 0.0, $82 = 0, $85 = 0.0, $87 = 0.0, $90 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $99 = 0, $label_size$sroa$0$0 = 0.0, $shortcut_size$sroa$0$1 = 0.0, $text_display_end$0$i = 0, $text_display_end$03$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $$byval_copy1 = sp;
 $0 = sp + 32 | 0;
 $1 = sp + 24 | 0;
 $2 = sp + 16 | 0;
 $4 = HEAP32[38201] | 0;
 HEAP8[$4 + 114 >> 0] = 1;
 if (HEAP8[$4 + 116 >> 0] | 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $10 = HEAP32[$4 + 164 >> 2] | 0;
 $12 = HEAP32[$4 + 168 >> 2] | 0;
 if (($label | 0) == (-1 | 0)) $label_size$sroa$0$0 = 0.0; else {
  $text_display_end$03$i$i = $label;
  L5 : while (1) {
   switch (HEAP8[$text_display_end$03$i$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0$i = $text_display_end$03$i$i;
     break L5;
     break;
    }
   case 35:
    {
     $15 = $text_display_end$03$i$i + 1 | 0;
     if ((HEAP8[$15 >> 0] | 0) == 35) {
      $text_display_end$0$i = $text_display_end$03$i$i;
      break L5;
     } else $$pre$phi$i$iZ2D = $15;
     break;
    }
   default:
    $$pre$phi$i$iZ2D = $text_display_end$03$i$i + 1 | 0;
   }
   if (($$pre$phi$i$iZ2D | 0) == (-1 | 0)) {
    $text_display_end$0$i = -1;
    break;
   } else $text_display_end$03$i$i = $$pre$phi$i$iZ2D;
  }
  $20 = HEAP32[38186] | 0;
  $22 = +HEAPF32[38187];
  if (($text_display_end$0$i | 0) == ($label | 0)) $label_size$sroa$0$0 = 0.0; else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($$byval_copy1, $20, $22, 3402823466385288598117041.0e14, -1.0, $label, $text_display_end$0$i, 0);
   $24 = +HEAPF32[$$byval_copy1 >> 2];
   if ($24 > 0.0) {
    $28 = $24 - $22 / +HEAPF32[$20 >> 2];
    HEAPF32[$$byval_copy1 >> 2] = $28;
    $30 = $28;
   } else $30 = $24;
   $label_size$sroa$0$0 = +(~~($30 + .949999988079071) | 0);
  }
 }
 if (!$shortcut) $shortcut_size$sroa$0$1 = 0.0; else {
  $35 = HEAP32[38186] | 0;
  $37 = +HEAPF32[38187];
  __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($$byval_copy1, $35, $37, 3402823466385288598117041.0e14, -1.0, $shortcut, 0, 0);
  $38 = +HEAPF32[$$byval_copy1 >> 2];
  if ($38 > 0.0) {
   $42 = $38 - $37 / +HEAPF32[$35 >> 2];
   HEAPF32[$$byval_copy1 >> 2] = $42;
   $44 = $42;
  } else $44 = $38;
  $shortcut_size$sroa$0$1 = +(~~($44 + .949999988079071) | 0);
 }
 $47 = 152748;
 $51 = +(~~(+HEAPF32[$47 >> 2] * 1.2000000476837158) | 0);
 $52 = $4 + 488 | 0;
 $53 = $4 + 524 | 0;
 $54 = +HEAPF32[$53 >> 2];
 $56 = $54 >= $label_size$sroa$0$0 ? $54 : $label_size$sroa$0$0;
 HEAPF32[$53 >> 2] = $56;
 $57 = $4 + 528 | 0;
 $58 = +HEAPF32[$57 >> 2];
 $60 = $58 >= $shortcut_size$sroa$0$1 ? $58 : $shortcut_size$sroa$0$1;
 HEAPF32[$57 >> 2] = $60;
 $61 = $4 + 532 | 0;
 $62 = +HEAPF32[$61 >> 2];
 $64 = $62 >= $51 ? $62 : $51;
 HEAPF32[$61 >> 2] = $64;
 $65 = $4 + 480 | 0;
 $66 = $56 + 0.0;
 HEAPF32[$52 >> 2] = $66;
 if ($60 > 0.0) $70 = +HEAPF32[$65 >> 2]; else $70 = 0.0;
 $71 = $66 + ($60 + $70);
 HEAPF32[$52 >> 2] = $71;
 if ($64 > 0.0) $75 = +HEAPF32[$65 >> 2]; else $75 = 0.0;
 $76 = $71 + ($64 + $75);
 HEAPF32[$52 >> 2] = $76;
 $78 = +HEAPF32[$4 + 484 >> 2];
 $80 = $78 >= $76 ? $78 : $76;
 $82 = HEAP32[38201] | 0;
 __ZN5ImGui19GetContentRegionMaxEv($$byval_copy1);
 $85 = +HEAPF32[$$byval_copy1 >> 2] - (+HEAPF32[$82 + 164 >> 2] - +HEAPF32[$82 + 20 >> 2]) - $80;
 $87 = $85 <= 0.0 ? 0.0 : $85;
 HEAPF32[$0 >> 2] = $80;
 HEAPF32[$0 + 4 >> 2] = 0.0;
 $90 = __ZN5ImGui10SelectableEPKcbiRK6ImVec2($label, 0, $enabled ? 40 : 56, $0) | 0;
 do if ($shortcut_size$sroa$0$1 > 0.0) {
  $92 = 152072;
  $93 = 152056;
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$93 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$93 + 4 >> 2];
  HEAP32[$$byval_copy1 + 8 >> 2] = HEAP32[$93 + 8 >> 2];
  HEAP32[$$byval_copy1 + 12 >> 2] = HEAP32[$93 + 12 >> 2];
  $94 = 152880;
  $95 = HEAP32[$94 >> 2] | 0;
  $96 = 152884;
  if (($95 | 0) == (HEAP32[$96 >> 2] | 0)) {
   $99 = $95 + 1 | 0;
   if (!$95) $104 = 8; else $104 = (($95 | 0) / 2 | 0) + $95 | 0;
   $105 = ($104 | 0) > ($99 | 0) ? $104 : $99;
   if (($95 | 0) < ($105 | 0)) {
    $108 = 147664;
    HEAP32[$108 >> 2] = (HEAP32[$108 >> 2] | 0) + 1;
    $113 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($105 * 20 | 0) | 0;
    $114 = 152888;
    _memcpy($113 | 0, HEAP32[$114 >> 2] | 0, (HEAP32[$94 >> 2] | 0) * 20 | 0) | 0;
    $118 = HEAP32[$114 >> 2] | 0;
    if ($118 | 0) {
     $120 = 147664;
     HEAP32[$120 >> 2] = (HEAP32[$120 >> 2] | 0) + -1;
    }
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($118);
    HEAP32[$114 >> 2] = $113;
    HEAP32[$96 >> 2] = $105;
    $126 = HEAP32[$94 >> 2] | 0;
   } else $126 = $95;
  } else $126 = $95;
  HEAP32[$94 >> 2] = $126 + 1;
  $128 = HEAP32[38222] | 0;
  HEAP32[$128 + ($126 * 20 | 0) >> 2] = 0;
  $130 = $128 + ($126 * 20 | 0) + 4 | 0;
  HEAP32[$130 >> 2] = HEAP32[$$byval_copy1 >> 2];
  HEAP32[$130 + 4 >> 2] = HEAP32[$$byval_copy1 + 4 >> 2];
  HEAP32[$130 + 8 >> 2] = HEAP32[$$byval_copy1 + 8 >> 2];
  HEAP32[$130 + 12 >> 2] = HEAP32[$$byval_copy1 + 12 >> 2];
  HEAP32[$93 >> 2] = HEAP32[$92 >> 2];
  HEAP32[$93 + 4 >> 2] = HEAP32[$92 + 4 >> 2];
  HEAP32[$93 + 8 >> 2] = HEAP32[$92 + 8 >> 2];
  HEAP32[$93 + 12 >> 2] = HEAP32[$92 + 12 >> 2];
  $134 = (HEAP32[tempDoublePtr >> 2] = $10, +HEAPF32[tempDoublePtr >> 2]);
  $137 = (HEAP32[tempDoublePtr >> 2] = $12, +HEAPF32[tempDoublePtr >> 2]) + 0.0;
  HEAPF32[$1 >> 2] = $134 + ($87 + +HEAPF32[$4 + 496 >> 2]);
  HEAPF32[$1 + 4 >> 2] = $137;
  HEAP32[$$byval_copy1 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  __ZN5ImGui10RenderTextE6ImVec2PKcS2_b($$byval_copy1, $shortcut, 0, 0);
  $139 = 152880;
  $$pre$i = HEAP32[$139 >> 2] | 0;
  if (($$pre$i | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
  $142 = $$pre$i + -1 | 0;
  $143 = HEAP32[38222] | 0;
  $146 = 152056 + (HEAP32[$143 + ($142 * 20 | 0) >> 2] << 4) | 0;
  $147 = $143 + ($142 * 20 | 0) + 4 | 0;
  HEAP32[$146 >> 2] = HEAP32[$147 >> 2];
  HEAP32[$146 + 4 >> 2] = HEAP32[$147 + 4 >> 2];
  HEAP32[$146 + 8 >> 2] = HEAP32[$147 + 8 >> 2];
  HEAP32[$146 + 12 >> 2] = HEAP32[$147 + 12 >> 2];
  $148 = HEAP32[$139 >> 2] | 0;
  if (($148 | 0) > 0) {
   HEAP32[$139 >> 2] = $148 + -1;
   break;
  } else ___assert_fail(127436, 127226, 833, 125180);
 } while (0);
 if (!$selected) {
  $$0 = $90;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $157 = (HEAP32[tempDoublePtr >> 2] = $10, +HEAPF32[tempDoublePtr >> 2]);
 $160 = (HEAP32[tempDoublePtr >> 2] = $12, +HEAPF32[tempDoublePtr >> 2]) + 0.0;
 HEAPF32[$2 >> 2] = $157 + ($87 + +HEAPF32[$4 + 500 >> 2] + +HEAPF32[$47 >> 2] * .20000000298023224);
 HEAPF32[$2 + 4 >> 2] = $160;
 $163 = +HEAPF32[38014];
 $165 = +HEAPF32[38015];
 $167 = +HEAPF32[38016];
 $172 = +HEAPF32[38017] * +HEAPF32[37984];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy1 + 4 >> 2] = HEAP32[$2 + 4 >> 2];
 __ZN5ImGui15RenderCheckMarkE6ImVec2j($$byval_copy1, ($165 < 0.0 ? 0 : ~~(($165 > 1.0 ? 1.0 : $165) * 255.0 + .5) << 8) | ($163 < 0.0 ? 0 : ~~(($163 > 1.0 ? 1.0 : $163) * 255.0 + .5)) | ($167 < 0.0 ? 0 : ~~(($167 > 1.0 ? 1.0 : $167) * 255.0 + .5) << 16) | ($172 < 0.0 ? 0 : ~~(($172 > 1.0 ? 1.0 : $172) * 255.0 + .5) << 24));
 $$0 = $90;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN9PIOWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $1 = 0, $103 = 0, $11 = 0, $111 = 0, $112 = 0, $19 = 0, $36 = 0, $38 = 0, $41 = 0, $44 = 0, $47 = 0, $5 = 0, $50 = 0, $53 = 0, $56 = 0, $61 = 0, $69 = 0, $85 = 0, $86 = 0, $89 = 0, $93 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer16 = 0, $vararg_buffer19 = 0, $vararg_buffer22 = 0, $vararg_buffer25 = 0, $vararg_buffer28 = 0, $vararg_buffer31 = 0, $vararg_buffer34 = 0, $vararg_buffer37 = 0, $vararg_buffer4 = 0, $vararg_buffer40 = 0, $vararg_buffer42 = 0, $vararg_buffer45 = 0, $vararg_buffer48 = 0, $vararg_buffer51 = 0, $vararg_buffer53 = 0, $vararg_buffer55 = 0, $vararg_buffer57 = 0, $vararg_buffer59 = 0, $vararg_buffer62 = 0, $vararg_buffer64 = 0, $vararg_buffer67 = 0, $vararg_buffer69 = 0, $vararg_buffer7 = 0, $vararg_buffer71 = 0, $vararg_buffer73 = 0, $vararg_buffer75 = 0, $vararg_buffer78 = 0, $vararg_buffer80 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $vararg_buffer80 = sp + 248 | 0;
 $vararg_buffer78 = sp + 240 | 0;
 $vararg_buffer75 = sp + 232 | 0;
 $vararg_buffer73 = sp + 224 | 0;
 $vararg_buffer71 = sp + 216 | 0;
 $vararg_buffer69 = sp + 208 | 0;
 $vararg_buffer67 = sp + 200 | 0;
 $vararg_buffer64 = sp + 192 | 0;
 $vararg_buffer62 = sp + 184 | 0;
 $vararg_buffer59 = sp + 176 | 0;
 $vararg_buffer57 = sp + 168 | 0;
 $vararg_buffer55 = sp + 160 | 0;
 $vararg_buffer53 = sp + 152 | 0;
 $vararg_buffer51 = sp + 144 | 0;
 $vararg_buffer48 = sp + 136 | 0;
 $vararg_buffer45 = sp + 128 | 0;
 $vararg_buffer42 = sp + 120 | 0;
 $vararg_buffer40 = sp + 112 | 0;
 $vararg_buffer37 = sp + 104 | 0;
 $vararg_buffer34 = sp + 96 | 0;
 $vararg_buffer31 = sp + 88 | 0;
 $vararg_buffer28 = sp + 80 | 0;
 $vararg_buffer25 = sp + 72 | 0;
 $vararg_buffer22 = sp + 64 | 0;
 $vararg_buffer19 = sp + 56 | 0;
 $vararg_buffer16 = sp + 48 | 0;
 $vararg_buffer13 = sp + 40 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 264 | 0;
 $1 = sp + 256 | 0;
 HEAPF32[$0 >> 2] = 220.0;
 HEAPF32[$0 + 4 >> 2] = 384.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 2);
 $5 = $this + 8 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $5, 128) | 0)) {
  __ZN5ImGui3EndEv();
  $111 = HEAP8[$5 >> 0] | 0;
  $112 = $111 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $112 | 0;
 }
 HEAPF32[$1 >> 2] = 0.0;
 HEAPF32[$1 + 4 >> 2] = 0.0;
 __ZN5ImGui10BeginChildEPKcRK6ImVec2bi(35808, $1, 0, 0) | 0;
 if (__ZN14HexInputWidget4DrawEv($this + 20 | 0) | 0) {
  $11 = HEAP32[$kc + 69240 >> 2] | 0;
  if ($11 | 0) FUNCTION_TABLE_viii[$11 & 7](HEAP32[$kc + 69244 >> 2] | 0, 136, HEAP16[$this + 30 >> 1] & 255);
 } else {
  $19 = HEAP8[$kc + 69262 >> 0] | 0;
  HEAP8[$this + 32 >> 0] = 0;
  HEAP16[$this + 30 >> 1] = $19 & 255;
  HEAP8[$this + 24 >> 0] = HEAP8[35768 + (($19 & 255) >>> 4 & 255) >> 0] | 0;
  HEAP8[$this + 25 >> 0] = HEAP8[35768 + ($19 & 15) >> 0] | 0;
  HEAP8[$this + 26 >> 0] = 0;
 }
 $36 = HEAPU8[$kc + 69262 >> 0] | 0;
 $38 = ($36 & 1 | 0) != 0;
 HEAP32[$vararg_buffer >> 2] = 35816;
 __ZN5ImGui4TextEPKcz(124291, $vararg_buffer);
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 HEAP32[$vararg_buffer1 >> 2] = $38 ? 35826 : 35829;
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($38 ? 146544 : 146560, 124291, $vararg_buffer1);
 $41 = ($36 & 2 | 0) != 0;
 HEAP32[$vararg_buffer4 >> 2] = 35833;
 __ZN5ImGui4TextEPKcz(124291, $vararg_buffer4);
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 HEAP32[$vararg_buffer7 >> 2] = $41 ? 35826 : 35829;
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($41 ? 146544 : 146560, 124291, $vararg_buffer7);
 $44 = ($36 & 4 | 0) != 0;
 HEAP32[$vararg_buffer10 >> 2] = 35838;
 __ZN5ImGui4TextEPKcz(124291, $vararg_buffer10);
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 HEAP32[$vararg_buffer13 >> 2] = $44 ? 35826 : 35829;
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($44 ? 146544 : 146560, 124291, $vararg_buffer13);
 $47 = ($36 & 8 | 0) != 0;
 HEAP32[$vararg_buffer16 >> 2] = 35843;
 __ZN5ImGui4TextEPKcz(124291, $vararg_buffer16);
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 HEAP32[$vararg_buffer19 >> 2] = $47 ? 35826 : 35829;
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($47 ? 146544 : 146560, 124291, $vararg_buffer19);
 $50 = ($36 & 32 | 0) != 0;
 HEAP32[$vararg_buffer22 >> 2] = 35852;
 __ZN5ImGui4TextEPKcz(124291, $vararg_buffer22);
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 HEAP32[$vararg_buffer25 >> 2] = $50 ? 35826 : 35829;
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($50 ? 146544 : 146560, 124291, $vararg_buffer25);
 $53 = ($36 & 64 | 0) != 0;
 HEAP32[$vararg_buffer28 >> 2] = 35862;
 __ZN5ImGui4TextEPKcz(124291, $vararg_buffer28);
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 HEAP32[$vararg_buffer31 >> 2] = $53 ? 35826 : 35829;
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($53 ? 146544 : 146560, 124291, $vararg_buffer31);
 $56 = ($36 & 128 | 0) != 0;
 HEAP32[$vararg_buffer34 >> 2] = 35874;
 __ZN5ImGui4TextEPKcz(124291, $vararg_buffer34);
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 HEAP32[$vararg_buffer37 >> 2] = $56 ? 35826 : 35829;
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($56 ? 146544 : 146560, 124291, $vararg_buffer37);
 __ZN5ImGui9SeparatorEv();
 if (__ZN14HexInputWidget4DrawEv($this + 36 | 0) | 0) {
  $61 = HEAP32[$kc + 69240 >> 2] | 0;
  if ($61 | 0) FUNCTION_TABLE_viii[$61 & 7](HEAP32[$kc + 69244 >> 2] | 0, 137, HEAP16[$this + 46 >> 1] & 255);
 } else {
  $69 = HEAP8[$kc + 69263 >> 0] | 0;
  HEAP8[$this + 48 >> 0] = 0;
  HEAP16[$this + 46 >> 1] = $69 & 255;
  HEAP8[$this + 40 >> 0] = HEAP8[35768 + (($69 & 255) >>> 4 & 255) >> 0] | 0;
  HEAP8[$this + 41 >> 0] = HEAP8[35768 + ($69 & 15) >> 0] | 0;
  HEAP8[$this + 42 >> 0] = 0;
 }
 $85 = HEAP8[$kc + 69263 >> 0] | 0;
 __ZN5ImGui4TextEPKcz(35885, $vararg_buffer40);
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 $86 = $85 & 255;
 HEAP32[$vararg_buffer42 >> 2] = $86 & 31;
 __ZN5ImGui4TextEPKcz(35893, $vararg_buffer42);
 $89 = ($86 & 128 | 0) != 0;
 HEAP32[$vararg_buffer45 >> 2] = 35898;
 __ZN5ImGui4TextEPKcz(124291, $vararg_buffer45);
 __ZN5ImGui8SameLineEff(96.0, -1.0);
 HEAP32[$vararg_buffer48 >> 2] = $89 ? 35826 : 35829;
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($89 ? 146544 : 146560, 124291, $vararg_buffer48);
 __ZN5ImGui9SeparatorEv();
 __ZN5ImGui4TextEPKcz(35907, $vararg_buffer51);
 $93 = (HEAP8[$kc + 69257 >> 0] | 0) != 0;
 __ZN5ImGui4TextEPKcz(35934, $vararg_buffer53);
 __ZN5ImGui8SameLineEff(128.0, -1.0);
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($93 ? 146544 : 146560, $93 ? 35945 : 35953, $vararg_buffer55);
 __ZN5ImGui4TextEPKcz(35962, $vararg_buffer57);
 __ZN5ImGui8SameLineEff(128.0, -1.0);
 HEAP32[$vararg_buffer59 >> 2] = HEAPU8[$kc + 69256 >> 0];
 __ZN5ImGui4TextEPKcz(35893, $vararg_buffer59);
 __ZN5ImGui4TextEPKcz(35980, $vararg_buffer62);
 __ZN5ImGui8SameLineEff(128.0, -1.0);
 HEAP32[$vararg_buffer64 >> 2] = HEAPU8[$kc + 69258 >> 0];
 __ZN5ImGui4TextEPKcz(35893, $vararg_buffer64);
 __ZN5ImGui9SeparatorEv();
 __ZN5ImGui4TextEPKcz(35986, $vararg_buffer67);
 $103 = (HEAP8[$kc + 69260 >> 0] | 0) != 0;
 __ZN5ImGui4TextEPKcz(35934, $vararg_buffer69);
 __ZN5ImGui8SameLineEff(128.0, -1.0);
 __ZN5ImGui11TextColoredERK6ImVec4PKcz($103 ? 146544 : 146560, $103 ? 35945 : 35953, $vararg_buffer71);
 __ZN5ImGui4TextEPKcz(35962, $vararg_buffer73);
 __ZN5ImGui8SameLineEff(128.0, -1.0);
 HEAP32[$vararg_buffer75 >> 2] = HEAPU8[$kc + 69259 >> 0];
 __ZN5ImGui4TextEPKcz(35893, $vararg_buffer75);
 __ZN5ImGui4TextEPKcz(35980, $vararg_buffer78);
 __ZN5ImGui8SameLineEff(128.0, -1.0);
 HEAP32[$vararg_buffer80 >> 2] = HEAPU8[$kc + 69261 >> 0];
 __ZN5ImGui4TextEPKcz(35893, $vararg_buffer80);
 __ZN5ImGui8EndChildEv();
 __ZN5ImGui3EndEv();
 $111 = HEAP8[$5 >> 0] | 0;
 $112 = $111 << 24 >> 24 != 0;
 STACKTOP = sp;
 return $112 | 0;
}

function __ZN5ImGui8ShutdownEv() {
 var $$lcssa40 = 0, $$lcssa45 = 0, $$pre = 0, $$pre$i3759 = 0, $$pre$i3760 = 0, $1 = 0, $100 = 0, $101 = 0, $105 = 0, $110 = 0, $111 = 0, $115 = 0, $12 = 0, $120 = 0, $121 = 0, $124 = 0, $125 = 0, $127 = 0, $135 = 0, $138 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $150 = 0, $155 = 0, $156 = 0, $158 = 0, $163 = 0, $164 = 0, $168 = 0, $17 = 0, $173 = 0, $174 = 0, $178 = 0, $18 = 0, $183 = 0, $184 = 0, $188 = 0, $193 = 0, $194 = 0, $198 = 0, $199 = 0, $202 = 0, $204 = 0, $210 = 0, $215 = 0, $218 = 0, $22 = 0, $223 = 0, $224 = 0, $228 = 0, $235 = 0, $27 = 0, $28 = 0, $32 = 0, $40 = 0, $43 = 0, $44 = 0, $46 = 0, $5 = 0, $52 = 0, $54 = 0, $62 = 0, $65 = 0, $70 = 0, $71 = 0, $75 = 0, $8 = 0, $80 = 0, $81 = 0, $85 = 0, $9 = 0, $90 = 0, $91 = 0, $95 = 0, $i$051 = 0, $i1$048 = 0, label = 0;
 $1 = HEAP32[36755] | 0;
 if ($1 | 0) __ZN11ImFontAtlas5ClearEv($1);
 if (!(HEAP8[146892] | 0)) return;
 __ZL12SaveSettingsv();
 $5 = 152780;
 $8 = 152788;
 $9 = HEAP32[$8 >> 2] | 0;
 L7 : do if ((HEAP32[$5 >> 2] | 0) > 0) {
  $46 = $9;
  $i$051 = 0;
  while (1) {
   __ZN11ImGuiWindowD2Ev(HEAP32[$46 + ($i$051 << 2) >> 2] | 0);
   if ((HEAP32[$5 >> 2] | 0) <= ($i$051 | 0)) break;
   $52 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($i$051 << 2) >> 2] | 0;
   if ($52 | 0) {
    $54 = 147664;
    HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($52);
   $i$051 = $i$051 + 1 | 0;
   $62 = HEAP32[$8 >> 2] | 0;
   if (($i$051 | 0) >= (HEAP32[$5 >> 2] | 0)) {
    $$lcssa45 = $62;
    break L7;
   } else $46 = $62;
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } else $$lcssa45 = $9; while (0);
 if ($$lcssa45 | 0) {
  HEAP32[38196] = 0;
  HEAP32[$5 >> 2] = 0;
  $12 = 147664;
  HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($$lcssa45);
  HEAP32[$8 >> 2] = 0;
 }
 $17 = 152800;
 $18 = HEAP32[$17 >> 2] | 0;
 if ($18 | 0) {
  HEAP32[38199] = 0;
  HEAP32[38198] = 0;
  $22 = 147664;
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($18);
  HEAP32[$17 >> 2] = 0;
 }
 $27 = 152816;
 $28 = HEAP32[$27 >> 2] | 0;
 if ($28 | 0) {
  HEAP32[38203] = 0;
  HEAP32[38202] = 0;
  $32 = 147664;
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($28);
  HEAP32[$27 >> 2] = 0;
 }
 HEAP32[38205] = 0;
 HEAP32[38206] = 0;
 HEAP32[38207] = 0;
 $40 = 152864;
 $43 = 152872;
 $44 = HEAP32[$43 >> 2] | 0;
 if ((HEAP32[$40 >> 2] | 0) > 0) {
  $124 = $44;
  $i1$048 = 0;
  while (1) {
   $125 = HEAP32[$124 + ($i1$048 * 28 | 0) >> 2] | 0;
   if ($125 | 0) {
    $127 = 147664;
    HEAP32[$127 >> 2] = (HEAP32[$127 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($125);
   $i1$048 = $i1$048 + 1 | 0;
   $135 = HEAP32[$43 >> 2] | 0;
   if (($i1$048 | 0) >= (HEAP32[$40 >> 2] | 0)) {
    $$lcssa40 = $135;
    break;
   } else $124 = $135;
  }
 } else $$lcssa40 = $44;
 if ($$lcssa40 | 0) {
  HEAP32[38217] = 0;
  HEAP32[$40 >> 2] = 0;
  $65 = 147664;
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($$lcssa40);
  HEAP32[$43 >> 2] = 0;
 }
 $70 = 152888;
 $71 = HEAP32[$70 >> 2] | 0;
 if ($71 | 0) {
  HEAP32[38221] = 0;
  HEAP32[38220] = 0;
  $75 = 147664;
  HEAP32[$75 >> 2] = (HEAP32[$75 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($71);
  HEAP32[$70 >> 2] = 0;
 }
 $80 = 152900;
 $81 = HEAP32[$80 >> 2] | 0;
 if ($81 | 0) {
  HEAP32[38224] = 0;
  HEAP32[38223] = 0;
  $85 = 147664;
  HEAP32[$85 >> 2] = (HEAP32[$85 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($81);
  HEAP32[$80 >> 2] = 0;
 }
 $90 = 152912;
 $91 = HEAP32[$90 >> 2] | 0;
 if ($91 | 0) {
  HEAP32[38227] = 0;
  HEAP32[38226] = 0;
  $95 = 147664;
  HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($91);
  HEAP32[$90 >> 2] = 0;
 }
 $100 = 152924;
 $101 = HEAP32[$100 >> 2] | 0;
 if ($101 | 0) {
  HEAP32[38230] = 0;
  HEAP32[38229] = 0;
  $105 = 147664;
  HEAP32[$105 >> 2] = (HEAP32[$105 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($101);
  HEAP32[$100 >> 2] = 0;
 }
 $110 = 152936;
 $111 = HEAP32[$110 >> 2] | 0;
 if ($111 | 0) {
  HEAP32[38233] = 0;
  HEAP32[38232] = 0;
  $115 = 147664;
  HEAP32[$115 >> 2] = (HEAP32[$115 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($111);
  HEAP32[$110 >> 2] = 0;
 }
 $120 = 153020;
 $121 = HEAP32[$120 >> 2] | 0;
 if ($121 | 0) {
  HEAP32[38254] = 0;
  HEAP32[38253] = 0;
  $150 = 147664;
  HEAP32[$150 >> 2] = (HEAP32[$150 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($121);
  HEAP32[$120 >> 2] = 0;
 }
 $155 = 153032;
 $156 = HEAP32[$155 >> 2] | 0;
 if ($156 | 0) {
  HEAP32[38257] = 0;
  HEAP32[38256] = 0;
  $218 = 147664;
  HEAP32[$218 >> 2] = (HEAP32[$218 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($156);
  HEAP32[$155 >> 2] = 0;
 }
 $223 = 153044;
 $224 = HEAP32[$223 >> 2] | 0;
 if ($224 | 0) {
  HEAP32[38260] = 0;
  HEAP32[38259] = 0;
  $228 = 147664;
  HEAP32[$228 >> 2] = (HEAP32[$228 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($224);
  HEAP32[$223 >> 2] = 0;
 }
 __ZN10ImDrawList15ClearFreeMemoryEv(153052);
 $144 = 156908;
 $143 = HEAP32[$144 >> 2] | 0;
 if ($143 | 0) {
  HEAP32[39226] = 0;
  HEAP32[39225] = 0;
  $138 = 147664;
  HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($143);
  HEAP32[$144 >> 2] = 0;
 }
 $145 = 157976;
 $146 = HEAP32[$145 >> 2] | 0;
 if ($146 | 0) {
  $158 = 147664;
  HEAP32[$158 >> 2] = (HEAP32[$158 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($146);
  HEAP32[$145 >> 2] = 0;
 }
 $163 = 153540;
 $164 = HEAP32[$163 >> 2] | 0;
 if ($164 | 0) {
  HEAP32[38384] = 0;
  HEAP32[38383] = 0;
  $168 = 147664;
  HEAP32[$168 >> 2] = (HEAP32[$168 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($164);
  HEAP32[$163 >> 2] = 0;
 }
 $173 = 153552;
 $174 = HEAP32[$173 >> 2] | 0;
 if ($174 | 0) {
  HEAP32[38387] = 0;
  HEAP32[38386] = 0;
  $178 = 147664;
  HEAP32[$178 >> 2] = (HEAP32[$178 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($174);
  HEAP32[$173 >> 2] = 0;
 }
 $183 = 153564;
 $184 = HEAP32[$183 >> 2] | 0;
 if ($184 | 0) {
  HEAP32[38390] = 0;
  HEAP32[38389] = 0;
  $188 = 147664;
  HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($184);
  HEAP32[$183 >> 2] = 0;
 }
 $193 = 158e3;
 $194 = HEAP32[$193 >> 2] | 0;
 if (!(($194 | 0) == 0 | ($194 | 0) == (HEAP32[3487] | 0))) {
  _fclose($194) | 0;
  HEAP32[$193 >> 2] = 0;
 }
 $198 = 158004;
 $199 = HEAP32[$198 >> 2] | 0;
 if ($199 | 0) {
  $202 = HEAP32[$199 + 8 >> 2] | 0;
  if (!$202) {
   $$pre$i3759 = 146892;
   $235 = $199;
   label = 49;
  } else {
   $204 = 147664;
   HEAP32[$204 >> 2] = (HEAP32[$204 >> 2] | 0) + -1;
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($202);
   $$pre = HEAP32[$198 >> 2] | 0;
   if (!$$pre) {
    $$pre$i3760 = 146892;
    $215 = 0;
   } else {
    $$pre$i3759 = 146892;
    $235 = $$pre;
    label = 49;
   }
  }
  if ((label | 0) == 49) {
   $210 = $$pre$i3759 + 772 | 0;
   HEAP32[$210 >> 2] = (HEAP32[$210 >> 2] | 0) + -1;
   $$pre$i3760 = $$pre$i3759;
   $215 = $235;
  }
  FUNCTION_TABLE_vi[HEAP32[$$pre$i3760 + 180 >> 2] & 255]($215);
 }
 HEAP8[146892] = 0;
 return;
}

function __ZN11DebugWindow15drawMainContentERN4yakc4kc85Eti($this, $kc, $start_addr, $num_lines) {
 $this = $this | 0;
 $kc = $kc | 0;
 $start_addr = $start_addr | 0;
 $num_lines = $num_lines | 0;
 var $$lcssa = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $114 = 0, $12 = 0.0, $122 = 0.0, $124 = 0, $13 = 0, $135 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0, $45 = 0, $47 = 0, $51 = 0.0, $6 = 0.0, $66 = 0, $67 = 0, $68 = 0, $74 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $91 = 0, $clipper = 0, $cur_addr$0$lcssa = 0, $cur_addr$012 = 0, $cur_addr$15 = 0, $cur_addr$2 = 0, $disasm = 0, $display_addr$0 = 0, $display_addr$12 = 0, $line_i$011 = 0, $line_i1$04 = 0, $n$03 = 0, $num_bytes$0 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 144 | 0;
 $1 = sp + 48 | 0;
 $2 = sp + 40 | 0;
 $3 = sp + 32 | 0;
 $clipper = sp + 128 | 0;
 $disasm = sp + 56 | 0;
 $4 = sp + 24 | 0;
 $6 = +__ZN5ImGui29GetItemsLineHeightWithSpacingEv() * -2.0;
 HEAPF32[$0 >> 2] = 0.0;
 HEAPF32[$0 + 4 >> 2] = $6;
 __ZN5ImGui10BeginChildEPKcRK6ImVec2bi(35651, $0, 0, 0) | 0;
 HEAPF32[$1 >> 2] = 0.0;
 HEAPF32[$1 + 4 >> 2] = 0.0;
 __ZN5ImGui12PushStyleVarEiRK6ImVec2(5, $1);
 HEAPF32[$2 >> 2] = 1.0;
 HEAPF32[$2 + 4 >> 2] = 1.0;
 __ZN5ImGui12PushStyleVarEiRK6ImVec2(7, $2);
 $10 = +__ZN5ImGui17GetTextLineHeightEv();
 __ZN5ImGui12CalcTextSizeEPKcS1_bf($3, 36702, 0, 0, -1.0);
 $11 = +HEAPF32[$3 >> 2];
 $12 = $11 * 3.0;
 $13 = $clipper + 4 | 0;
 HEAP32[$13 >> 2] = $num_lines;
 HEAPF32[$clipper >> 2] = $10;
 $14 = $clipper + 8 | 0;
 $15 = $clipper + 12 | 0;
 __ZN5ImGui16CalcListClippingEifPiS0_($num_lines, $10, $14, $15);
 $16 = +__ZN5ImGui13GetCursorPosYEv();
 __ZN5ImGui13SetCursorPosYEf($16 + +(HEAP32[$14 >> 2] | 0) * +HEAPF32[$clipper >> 2]);
 __ZN6DisasmC2Ev($disasm);
 $22 = HEAP32[$14 >> 2] | 0;
 if (($22 | 0) > 8) {
  $cur_addr$012 = $start_addr;
  $line_i$011 = 8;
  while (1) {
   $45 = ((__ZN6Disasm11DisassembleERKN4yakc4kc85Et($disasm, $kc, $cur_addr$012) | 0) & 65535) + ($cur_addr$012 & 65535) & 65535;
   $line_i$011 = $line_i$011 + 1 | 0;
   $47 = HEAP32[$14 >> 2] | 0;
   if (($line_i$011 | 0) >= ($47 | 0)) {
    $$lcssa = $47;
    $cur_addr$0$lcssa = $45;
    break;
   } else $cur_addr$012 = $45;
  }
 } else {
  $$lcssa = $22;
  $cur_addr$0$lcssa = $start_addr;
 }
 if (($$lcssa | 0) < (HEAP32[$15 >> 2] | 0)) {
  $26 = $kc + 725464 | 0;
  $27 = $kc + 725484 | 0;
  $28 = $kc + 725488 | 0;
  $29 = $4 + 4 | 0;
  $30 = $kc + 725486 | 0;
  $31 = $this + 400 | 0;
  $32 = $this + 398 | 0;
  $33 = $this + 392 | 0;
  $34 = $this + 393 | 0;
  $35 = $this + 394 | 0;
  $36 = $this + 395 | 0;
  $37 = $this + 396 | 0;
  $38 = $12 * 4.0;
  $39 = $11 * 2.0;
  $40 = $kc + 65650 | 0;
  $cur_addr$15 = $cur_addr$0$lcssa;
  $line_i1$04 = $$lcssa;
  while (1) {
   L9 : do if (($line_i1$04 | 0) < 8) {
    $66 = HEAP16[$kc + 725468 + (((HEAP32[$26 >> 2] | 0) + $line_i1$04 & 7) << 1) >> 1] | 0;
    $67 = __ZN6Disasm11DisassembleERKN4yakc4kc85Et($disasm, $kc, $66) | 0;
    $68 = HEAP32[$27 >> 2] | 0;
    if (!(($68 & 255) << 24 >> 24)) label = 13; else if (($68 >>> 16 & 65535) << 16 >> 16 != $66 << 16 >> 16) label = 13;
    do if ((label | 0) == 13) {
     label = 0;
     $74 = HEAP32[$28 >> 2] | 0;
     if (($74 & 255) << 24 >> 24) if (($74 >>> 16 & 65535) << 16 >> 16 == $66 << 16 >> 16) break;
     __ZN5ImGui14PushStyleColorEiRK6ImVec4(0, 146624);
     $cur_addr$2 = $cur_addr$15;
     $display_addr$0 = $66;
     $num_bytes$0 = $67;
     break L9;
    } while (0);
    __ZN5ImGui14PushStyleColorEiRK6ImVec4(0, 146608);
    $cur_addr$2 = $cur_addr$15;
    $display_addr$0 = $66;
    $num_bytes$0 = $67;
   } else {
    $80 = __ZN6Disasm11DisassembleERKN4yakc4kc85Et($disasm, $kc, $cur_addr$15) | 0;
    $81 = $cur_addr$15 & 65535;
    $82 = $cur_addr$15 << 16 >> 16 == $start_addr << 16 >> 16;
    L20 : do if ((HEAP8[$40 >> 0] | 0) == 0 | $82 ^ 1) {
     $85 = HEAP32[$27 >> 2] | 0;
     if (!(($85 & 255) << 24 >> 24)) label = 21; else if (($85 >>> 16 & 65535) << 16 >> 16 != $cur_addr$15 << 16 >> 16) label = 21;
     do if ((label | 0) == 21) {
      label = 0;
      $91 = HEAP32[$28 >> 2] | 0;
      if (($91 & 255) << 24 >> 24) if (($91 >>> 16 & 65535) << 16 >> 16 == $cur_addr$15 << 16 >> 16) break;
      if ($82) {
       __ZN5ImGui14PushStyleColorEiRK6ImVec4(0, 146544);
       break L20;
      } else {
       __ZN5ImGui14PushStyleColorEiRK6ImVec4(0, 146528);
       break L20;
      }
     } while (0);
     __ZN5ImGui14PushStyleColorEiRK6ImVec4(0, 146608);
    } else __ZN5ImGui14PushStyleColorEiRK6ImVec4(0, 146640); while (0);
    $cur_addr$2 = ($80 & 65535) + $81 & 65535;
    $display_addr$0 = $cur_addr$15;
    $num_bytes$0 = $80;
   } while (0);
   __ZN5ImGui6PushIDEi($line_i1$04);
   HEAPF32[$4 >> 2] = 0.0;
   HEAPF32[$29 >> 2] = 0.0;
   if (__ZN5ImGui6ButtonEPKcRK6ImVec2(37610, $4) | 0) {
    if ((HEAP16[$30 >> 1] | 0) == $display_addr$0 << 16 >> 16) HEAP8[$27 >> 0] = HEAP8[$27 >> 0] ^ 1; else {
     HEAP8[$27 >> 0] = 1;
     HEAP16[$30 >> 1] = $display_addr$0;
    }
    HEAP8[$31 >> 0] = 1;
    HEAP16[$32 >> 1] = $display_addr$0;
    HEAP8[$33 >> 0] = HEAP8[35768 + (($display_addr$0 & 65535) >>> 12 & 65535) >> 0] | 0;
    HEAP8[$34 >> 0] = HEAP8[35768 + (($display_addr$0 & 65535) >>> 8 & 15) >> 0] | 0;
    $114 = $display_addr$0 & 65535;
    HEAP8[$35 >> 0] = HEAP8[35768 + ($114 >>> 4 & 15) >> 0] | 0;
    HEAP8[$36 >> 0] = HEAP8[35768 + ($114 & 15) >> 0] | 0;
    HEAP8[$37 >> 0] = 0;
    $$pre$phiZ2D = $114;
   } else $$pre$phiZ2D = $display_addr$0 & 65535;
   __ZN5ImGui5PopIDEv();
   __ZN5ImGui8SameLineEff(32.0, -1.0);
   HEAP32[$vararg_buffer >> 2] = $$pre$phiZ2D;
   __ZN5ImGui4TextEPKcz(35718, $vararg_buffer);
   __ZN5ImGui8SameLineEff(0.0, -1.0);
   $122 = +__ZN5ImGui13GetCursorPosXEv();
   if ($num_bytes$0 << 16 >> 16) {
    $124 = $num_bytes$0 & 65535;
    $display_addr$12 = $display_addr$0;
    $n$03 = 0;
    while (1) {
     __ZN5ImGui8SameLineEff($122 + $12 * +($n$03 | 0), -1.0);
     $135 = $display_addr$12 & 65535;
     HEAP32[$vararg_buffer4 >> 2] = HEAPU8[(HEAP32[$kc + 66932 + ($135 >>> 11 << 3) >> 2] | 0) + ($135 & 2047) >> 0];
     __ZN5ImGui4TextEPKcz(35725, $vararg_buffer4);
     $n$03 = $n$03 + 1 | 0;
     if (($n$03 | 0) == ($124 | 0)) break; else $display_addr$12 = $display_addr$12 + 1 << 16 >> 16;
    }
   }
   __ZN5ImGui8SameLineEff($39 + ($38 + $122), -1.0);
   HEAP32[$vararg_buffer1 >> 2] = __ZNK6Disasm6ResultEv($disasm) | 0;
   __ZN5ImGui4TextEPKcz(124291, $vararg_buffer1);
   __ZN5ImGui13PopStyleColorEi(1);
   $line_i1$04 = $line_i1$04 + 1 | 0;
   if (($line_i1$04 | 0) >= (HEAP32[$15 >> 2] | 0)) break; else $cur_addr$15 = $cur_addr$2;
  }
 }
 if ((HEAP32[$13 >> 2] | 0) <= -1) ___assert_fail(35663, 127226, 1019, 35679);
 $51 = +__ZN5ImGui13GetCursorPosYEv();
 __ZN5ImGui13SetCursorPosYEf($51 + +HEAPF32[$clipper >> 2] * +((HEAP32[$13 >> 2] | 0) - (HEAP32[$15 >> 2] | 0) | 0));
 HEAP32[$13 >> 2] = -1;
 __ZN5ImGui11PopStyleVarEi(2);
 __ZN5ImGui8EndChildEv();
 if ((HEAP32[$13 >> 2] | 0) == -1) {
  STACKTOP = sp;
  return;
 } else ___assert_fail(35683, 127226, 1007, 35700);
}

function __ZN5Oryol5_priv16glTextureFactory19createFromPixelDataERNS0_7textureEPKvi($this, $tex, $data, $size) {
 $this = $this | 0;
 $tex = $tex | 0;
 $data = $data | 0;
 $size = $size | 0;
 var $$0 = 0, $101 = 0, $12 = 0, $16 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $45 = 0, $48 = 0, $5 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $67 = 0, $69 = 0, $7 = 0, $71 = 0, $8 = 0, $86 = 0, $88 = 0, $9 = 0, $91 = 0, $93 = 0, $attrs$i = 0, $faceIndex$09 = 0, $glImgTarget$0 = 0, $mipIndex$08 = 0, $mipIndex$08$us = 0, $switch$tableidx$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer = sp;
 $attrs$i = sp + 4 | 0;
 if (!$data) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80919, 0, 72053, 310, 73740);
  _abort();
 }
 if (($size | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80935, 0, 72053, 311, 73740);
  _abort();
 }
 $2 = $tex + 768 | 0;
 if (HEAP32[$2 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72607, 0, 72053, 312, 73740);
  _abort();
 }
 $5 = $tex + 16 | 0;
 $6 = $tex + 24 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $tex + 28 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 if (HEAP32[$5 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72664, 0, 72053, 317, 73740);
  _abort();
 }
 $12 = $tex + 44 | 0;
 if (!(__ZN5Oryol5_priv5glExt24IsTextureFormatSupportedENS_11PixelFormat4CodeE(HEAP32[$12 >> 2] | 0) | 0)) {
  $16 = HEAP32[$tex + 92 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[(($16 | 0) == 0 ? 13684 : $16 + 12 | 0) >> 2];
  __ZN5Oryol3Log4WarnEPKcz(73276, $vararg_buffer);
  $$0 = 4;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $19 = $tex + 20 | 0;
 $21 = __ZN5Oryol5_priv7glTypes17asGLTextureTargetENS_11TextureType4CodeE(HEAP32[$19 >> 2] | 0) | 0;
 $22 = __ZN5Oryol5_priv16glTextureFactory19glGenAndBindTextureEj($this, $21) | 0;
 __ZN5Oryol5_priv16glTextureFactory18setupTextureParamsERKNS_12TextureSetupEj(0, $5, 0);
 $25 = (HEAP32[$19 >> 2] | 0) == 2 ? 6 : 1;
 $26 = $tex + 40 | 0;
 $27 = HEAP32[$26 >> 2] | 0;
 $28 = HEAP32[$12 >> 2] | 0;
 $switch$tableidx$i = $28 + -8 | 0;
 if ($switch$tableidx$i >>> 0 < 11) $101 = (2023 >>> ($switch$tableidx$i & 2047) & 1) != 0; else $101 = 0;
 $31 = __ZN5Oryol5_priv7glTypes26asGLTexImageInternalFormatENS_11PixelFormat4CodeE($28) | 0;
 $32 = ($27 | 0) > 0;
 $faceIndex$09 = 0;
 L20 : while (1) {
  L22 : do if ((HEAP32[$19 >> 2] | 0) == 2) switch ($faceIndex$09 | 0) {
  case 0:
   {
    $glImgTarget$0 = 34069;
    break L22;
    break;
   }
  case 1:
   {
    $glImgTarget$0 = 34070;
    break L22;
    break;
   }
  case 2:
   {
    $glImgTarget$0 = 34071;
    break L22;
    break;
   }
  case 3:
   {
    $glImgTarget$0 = 34072;
    break L22;
    break;
   }
  case 4:
   {
    $glImgTarget$0 = 34073;
    break L22;
    break;
   }
  default:
   {
    $glImgTarget$0 = 34074;
    break L22;
   }
  } else $glImgTarget$0 = $21; while (0);
  if ($32) {
   if ($faceIndex$09 >>> 0 >= 6) {
    label = 34;
    break;
   }
   if ($101) {
    $mipIndex$08$us = 0;
    do {
     if ($mipIndex$08$us >>> 0 >= 12) {
      label = 36;
      break L20;
     }
     $67 = HEAP32[$tex + 408 + ($faceIndex$09 * 48 | 0) + ($mipIndex$08$us << 2) >> 2] | 0;
     if (($67 | 0) <= 0) {
      label = 38;
      break L20;
     }
     $69 = $7 >> $mipIndex$08$us;
     $71 = $9 >> $mipIndex$08$us;
     _glCompressedTexImage2D($glImgTarget$0 | 0, $mipIndex$08$us | 0, $31 | 0, (($69 | 0) == 0 ? 1 : $69) | 0, (($71 | 0) == 0 ? 1 : $71) | 0, 0, $67 | 0, $data + (HEAP32[$tex + 120 + ($faceIndex$09 * 48 | 0) + ($mipIndex$08$us << 2) >> 2] | 0) | 0);
     if (_glGetError() | 0) {
      label = 40;
      break L20;
     }
     $mipIndex$08$us = $mipIndex$08$us + 1 | 0;
    } while (($mipIndex$08$us | 0) < ($27 | 0));
   } else {
    $mipIndex$08 = 0;
    do {
     if ($mipIndex$08 >>> 0 >= 12) {
      label = 36;
      break L20;
     }
     if ((HEAP32[$tex + 408 + ($faceIndex$09 * 48 | 0) + ($mipIndex$08 << 2) >> 2] | 0) <= 0) {
      label = 38;
      break L20;
     }
     $86 = $7 >> $mipIndex$08;
     $88 = $9 >> $mipIndex$08;
     $91 = __ZN5Oryol5_priv7glTypes18asGLTexImageFormatENS_11PixelFormat4CodeE(HEAP32[$12 >> 2] | 0) | 0;
     $93 = __ZN5Oryol5_priv7glTypes16asGLTexImageTypeENS_11PixelFormat4CodeE(HEAP32[$12 >> 2] | 0) | 0;
     _glTexImage2D($glImgTarget$0 | 0, $mipIndex$08 | 0, $31 | 0, (($86 | 0) == 0 ? 1 : $86) | 0, (($88 | 0) == 0 ? 1 : $88) | 0, 0, $91 | 0, $93 | 0, $data + (HEAP32[$tex + 120 + ($faceIndex$09 * 48 | 0) + ($mipIndex$08 << 2) >> 2] | 0) | 0);
     if (_glGetError() | 0) {
      label = 41;
      break L20;
     }
     $mipIndex$08 = $mipIndex$08 + 1 | 0;
    } while (($mipIndex$08 | 0) < ($27 | 0));
   }
  }
  $faceIndex$09 = $faceIndex$09 + 1 | 0;
  if (($faceIndex$09 | 0) >= ($25 | 0)) {
   label = 14;
   break;
  }
 }
 if ((label | 0) == 14) {
  HEAP32[$attrs$i >> 2] = 0;
  $33 = $attrs$i + 4 | 0;
  HEAP32[$33 >> 2] = -2;
  $34 = $attrs$i + 8 | 0;
  HEAP32[$34 >> 2] = -1;
  $35 = $attrs$i + 12 | 0;
  HEAP32[$35 >> 2] = 20;
  HEAP32[$attrs$i + 16 >> 2] = 20;
  $37 = $attrs$i + 20 | 0;
  HEAP32[$37 >> 2] = -1;
  $38 = $attrs$i + 24 | 0;
  HEAP32[$38 >> 2] = 0;
  $39 = $attrs$i + 28 | 0;
  HEAP32[$39 >> 2] = 0;
  HEAP32[$attrs$i + 32 >> 2] = 0;
  $41 = $attrs$i + 36 | 0;
  HEAP32[$41 >> 2] = 1;
  HEAP8[$attrs$i + 40 >> 0] = 0;
  HEAP8[$attrs$i + 41 >> 0] = 0;
  HEAP8[$attrs$i + 42 >> 0] = 0;
  $45 = $tex + 92 | 0;
  if (($45 | 0) != ($attrs$i | 0)) {
   HEAP32[$attrs$i >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($attrs$i, $45);
  }
  $48 = HEAP32[$tex + 96 >> 2] | 0;
  HEAP32[$33 >> 2] = $48;
  HEAP32[$34 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$35 >> 2] = HEAP32[$12 >> 2];
  HEAP32[$37 >> 2] = HEAP32[$tex + 16 >> 2];
  HEAP32[$38 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$39 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$41 >> 2] = HEAP32[$26 >> 2];
  $56 = $tex + 704 | 0;
  if (($attrs$i | 0) == ($56 | 0)) $59 = $48; else {
   HEAP32[$56 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($56, $attrs$i);
   $59 = HEAP32[$33 >> 2] | 0;
  }
  HEAP32[$tex + 708 >> 2] = $59;
  $60 = $tex + 712 | 0;
  HEAP32[$60 >> 2] = HEAP32[$34 >> 2];
  HEAP32[$60 + 4 >> 2] = HEAP32[$34 + 4 >> 2];
  HEAP32[$60 + 8 >> 2] = HEAP32[$34 + 8 >> 2];
  HEAP32[$60 + 12 >> 2] = HEAP32[$34 + 12 >> 2];
  HEAP32[$60 + 16 >> 2] = HEAP32[$34 + 16 >> 2];
  HEAP32[$60 + 20 >> 2] = HEAP32[$34 + 20 >> 2];
  HEAP32[$60 + 24 >> 2] = HEAP32[$34 + 24 >> 2];
  HEAP32[$60 + 28 >> 2] = HEAP32[$34 + 28 >> 2];
  HEAP16[$60 + 32 >> 1] = HEAP16[$34 + 32 >> 1] | 0;
  HEAP8[$60 + 34 >> 0] = HEAP8[$34 + 34 >> 0] | 0;
  HEAP32[$2 >> 2] = $22;
  HEAP32[$tex + 748 >> 2] = $21;
  $$0 = 3;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 34) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 73856);
  _abort();
 } else if ((label | 0) == 36) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 73989);
  _abort();
 } else if ((label | 0) == 38) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(74076, 0, 72053, 356, 73740);
  _abort();
 } else if ((label | 0) == 40) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 375, 73740);
  _abort();
 } else if ((label | 0) == 41) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 390, 73740);
  _abort();
 }
 return 0;
}

function __ZN4yakc4kc856out_cbEPvth($userdata, $port, $val) {
 $userdata = $userdata | 0;
 $port = $port | 0;
 $val = $val | 0;
 var $$$i$i = 0, $$$i$i1 = 0, $$$i$i12 = 0, $$$i$i8 = 0, $101 = 0, $113 = 0, $114 = 0, $120 = 0, $137 = 0, $141 = 0, $147 = 0, $15 = 0, $151 = 0, $152 = 0, $158 = 0, $175 = 0, $179 = 0, $185 = 0, $189 = 0, $190 = 0, $196 = 0, $2 = 0, $213 = 0, $217 = 0, $223 = 0, $29 = 0, $30 = 0, $34 = 0, $39 = 0, $4 = 0, $45 = 0, $54 = 0, $63 = 0, $64 = 0, $70 = 0, $87 = 0, $91 = 0, $97 = 0, label = 0;
 do switch ($port & 255 | 0) {
 case 128:
  {
   $2 = $userdata + 462872 | 0;
   $4 = ($port & 65535) >>> 8 & 255;
   do if ((HEAP8[$userdata + 463128 >> 0] | 0) == $4 << 24 >> 24) {
    $15 = 0;
    label = 5;
   } else if ((HEAP8[$userdata + 463168 >> 0] | 0) == $4 << 24 >> 24) if ((HEAP8[$userdata + 463168 >> 0] | 0) == $4 << 24 >> 24) {
    $15 = 1;
    label = 5;
    break;
   } else break; else return; while (0);
   if ((label | 0) == 5) HEAP8[$2 + 256 + ($15 * 40 | 0) + 38 >> 0] = $val;
   __ZN4yakc4kc8521update_bank_switchingEv($userdata);
   return;
  }
 case 132:
  {
   if ((HEAP32[$userdata + 725496 >> 2] | 0) != 4) return;
   HEAP8[$userdata + 725460 >> 0] = $val;
   HEAP8[$userdata + 462696 >> 0] = $val;
   __ZN4yakc4kc8521update_bank_switchingEv($userdata);
   return;
  }
 case 134:
  {
   if ((HEAP32[$userdata + 725496 >> 2] | 0) != 4) return;
   HEAP8[$userdata + 725461 >> 0] = $val;
   __ZN4yakc4kc8521update_bank_switchingEv($userdata);
   return;
  }
 case 136:
  {
   HEAP8[$userdata + 69262 >> 0] = $val;
   __ZN4yakc4kc8521update_bank_switchingEv($userdata);
   return;
  }
 case 137:
  {
   HEAP8[$userdata + 69263 >> 0] = $val;
   HEAP8[$userdata + 462697 >> 0] = ($val & 255) >>> 7;
   $29 = $val & 31;
   $30 = $userdata + 462848 | 0;
   if ((HEAP32[$30 >> 2] | 0) != ($29 | 0)) {
    $34 = HEAP32[$userdata + 462856 >> 2] | 0;
    if ($34 | 0) {
     $39 = $userdata + 462840 | 0;
     FUNCTION_TABLE_viiii[$34 & 7](HEAP32[$userdata + 462864 >> 2] | 0, HEAP32[$39 >> 2] | 0, HEAP32[$39 + 4 >> 2] | 0, $29);
    }
   }
   HEAP32[$30 >> 2] = $29;
   return;
  }
 case 138:
  {
   $45 = $val & 255;
   if (!($45 & 1)) {
    HEAP8[$userdata + 69256 >> 0] = $val;
    return;
   }
   switch ($45 & 15 | 0) {
   case 3:
    {
     HEAP8[$userdata + 69257 >> 0] = ($val & 255) >>> 7;
     return;
    }
   case 15:
    {
     HEAP8[$userdata + 69258 >> 0] = ($val & 255) >>> 6;
     if ($val << 24 >> 24 > -1) return; else {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15612, 0, 15244, 87, 15555);
      _abort();
     }
     break;
    }
   default:
    {
     __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 15244, 91, 15555);
     _abort();
    }
   }
   break;
  }
 case 139:
  {
   $54 = $val & 255;
   if (!($54 & 1)) {
    HEAP8[$userdata + 69259 >> 0] = $val;
    return;
   }
   switch ($54 & 15 | 0) {
   case 3:
    {
     HEAP8[$userdata + 69260 >> 0] = ($val & 255) >>> 7;
     return;
    }
   case 15:
    {
     HEAP8[$userdata + 69261 >> 0] = ($val & 255) >>> 6;
     if ($val << 24 >> 24 > -1) return; else {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15612, 0, 15244, 87, 15555);
      _abort();
     }
     break;
    }
   default:
    {
     __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 15244, 91, 15555);
     _abort();
    }
   }
   break;
  }
 case 140:
  {
   $63 = $userdata + 69284 | 0;
   $64 = HEAP8[$63 >> 0] | 0;
   if ($64 & 4) {
    HEAP8[$userdata + 69285 >> 0] = $val;
    $$$i$i8 = $val << 24 >> 24 == 0 ? 256 : $val & 255;
    $70 = $64 & 255;
    if (!($70 & 64)) {
     HEAP32[$userdata + 69288 >> 2] = Math_imul($70 & 32 | 0 ? 256 : 16, $$$i$i8) | 0;
     HEAP8[$63 >> 0] = $70 & 249;
     HEAP8[$userdata + 69292 >> 0] = $70 >>> 3 & 1;
    } else {
     HEAP32[$userdata + 69288 >> 2] = $$$i$i8;
     HEAP8[$63 >> 0] = $70 & 249;
    }
    $87 = HEAP32[$userdata + 69304 >> 2] | 0;
    if (!$87) return;
    FUNCTION_TABLE_vi[$87 & 255](HEAP32[$userdata + 69308 >> 2] | 0);
    return;
   }
   $91 = $val & 255;
   if (!($91 & 1)) {
    $101 = $91 & 248;
    HEAP8[$userdata + 69293 >> 0] = $101;
    HEAP8[$userdata + 69341 >> 0] = $101 | 2;
    HEAP8[$userdata + 69389 >> 0] = $101 | 4;
    HEAP8[$userdata + 69437 >> 0] = $101 | 6;
    return;
   }
   HEAP8[$63 >> 0] = $val;
   if ($91 & 4 | 0) return;
   $97 = HEAP32[$userdata + 69304 >> 2] | 0;
   if (!$97) return;
   FUNCTION_TABLE_vi[$97 & 255](HEAP32[$userdata + 69308 >> 2] | 0);
   return;
  }
 case 141:
  {
   $113 = $userdata + 69332 | 0;
   $114 = HEAP8[$113 >> 0] | 0;
   if ($114 & 4) {
    HEAP8[$userdata + 69333 >> 0] = $val;
    $$$i$i12 = $val << 24 >> 24 == 0 ? 256 : $val & 255;
    $120 = $114 & 255;
    if (!($120 & 64)) {
     HEAP32[$userdata + 69336 >> 2] = Math_imul($120 & 32 | 0 ? 256 : 16, $$$i$i12) | 0;
     HEAP8[$113 >> 0] = $120 & 249;
     HEAP8[$userdata + 69340 >> 0] = $120 >>> 3 & 1;
    } else {
     HEAP32[$userdata + 69336 >> 2] = $$$i$i12;
     HEAP8[$113 >> 0] = $120 & 249;
    }
    $137 = HEAP32[$userdata + 69352 >> 2] | 0;
    if (!$137) return;
    FUNCTION_TABLE_vi[$137 & 255](HEAP32[$userdata + 69356 >> 2] | 0);
    return;
   }
   $141 = $val & 255;
   if (!($141 & 1)) return;
   HEAP8[$113 >> 0] = $val;
   if ($141 & 4 | 0) return;
   $147 = HEAP32[$userdata + 69352 >> 2] | 0;
   if (!$147) return;
   FUNCTION_TABLE_vi[$147 & 255](HEAP32[$userdata + 69356 >> 2] | 0);
   return;
  }
 case 142:
  {
   $151 = $userdata + 69380 | 0;
   $152 = HEAP8[$151 >> 0] | 0;
   if ($152 & 4) {
    HEAP8[$userdata + 69381 >> 0] = $val;
    $$$i$i1 = $val << 24 >> 24 == 0 ? 256 : $val & 255;
    $158 = $152 & 255;
    if (!($158 & 64)) {
     HEAP32[$userdata + 69384 >> 2] = Math_imul($158 & 32 | 0 ? 256 : 16, $$$i$i1) | 0;
     HEAP8[$151 >> 0] = $158 & 249;
     HEAP8[$userdata + 69388 >> 0] = $158 >>> 3 & 1;
    } else {
     HEAP32[$userdata + 69384 >> 2] = $$$i$i1;
     HEAP8[$151 >> 0] = $158 & 249;
    }
    $175 = HEAP32[$userdata + 69400 >> 2] | 0;
    if (!$175) return;
    FUNCTION_TABLE_vi[$175 & 255](HEAP32[$userdata + 69404 >> 2] | 0);
    return;
   }
   $179 = $val & 255;
   if (!($179 & 1)) return;
   HEAP8[$151 >> 0] = $val;
   if ($179 & 4 | 0) return;
   $185 = HEAP32[$userdata + 69400 >> 2] | 0;
   if (!$185) return;
   FUNCTION_TABLE_vi[$185 & 255](HEAP32[$userdata + 69404 >> 2] | 0);
   return;
  }
 case 143:
  {
   $189 = $userdata + 69428 | 0;
   $190 = HEAP8[$189 >> 0] | 0;
   if ($190 & 4) {
    HEAP8[$userdata + 69429 >> 0] = $val;
    $$$i$i = $val << 24 >> 24 == 0 ? 256 : $val & 255;
    $196 = $190 & 255;
    if (!($196 & 64)) {
     HEAP32[$userdata + 69432 >> 2] = Math_imul($196 & 32 | 0 ? 256 : 16, $$$i$i) | 0;
     HEAP8[$189 >> 0] = $196 & 249;
     HEAP8[$userdata + 69436 >> 0] = $196 >>> 3 & 1;
    } else {
     HEAP32[$userdata + 69432 >> 2] = $$$i$i;
     HEAP8[$189 >> 0] = $196 & 249;
    }
    $213 = HEAP32[$userdata + 69448 >> 2] | 0;
    if (!$213) return;
    FUNCTION_TABLE_vi[$213 & 255](HEAP32[$userdata + 69452 >> 2] | 0);
    return;
   }
   $217 = $val & 255;
   if (!($217 & 1)) return;
   HEAP8[$189 >> 0] = $val;
   if ($217 & 4 | 0) return;
   $223 = HEAP32[$userdata + 69448 >> 2] | 0;
   if (!$223) return;
   FUNCTION_TABLE_vi[$223 & 255](HEAP32[$userdata + 69452 >> 2] | 0);
   return;
  }
 default:
  return;
 } while (0);
}

function __ZN5Oryol3Gfx14ApplyDrawStateERKNS_9DrawStateE($drawState) {
 $drawState = $drawState | 0;
 var $$pre$phi29Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $102 = 0, $109 = 0, $113 = 0, $12 = 0, $14 = 0, $18 = 0, $24 = 0, $28 = 0, $34 = 0, $38 = 0, $45 = 0, $5 = 0, $52 = 0, $56 = 0, $63 = 0, $67 = 0, $74 = 0, $78 = 0, $87 = 0, $91 = 0, $98 = 0, $fsTextures = 0, $meshes = 0, $numFSTextures$010 = 0, $numFSTextures$017 = 0, $numFSTextures$017$lcssa = 0, $numMeshes$0$lcssa = 0, $numVSTextures$014 = 0, $numVSTextures$018$lcssa23$ph = 0, $vsTextures = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $meshes = sp + 64 | 0;
 $vsTextures = sp + 48 | 0;
 $fsTextures = sp;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 133, 44211);
  _abort();
 }
 if ((HEAP16[$drawState + 2 >> 1] | 0) != 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(44276, 0, 42914, 134, 44211);
  _abort();
 }
 $5 = $0 + 128 | 0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
 if (!(HEAP8[$0 + 1280 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 112, 44329);
  _abort();
 }
 $12 = __ZNK5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE6LookupERKNS_2IdE($0 + 1632 | 0, $drawState) | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67766, 0, 42914, 139, 44211);
  _abort();
 };
 HEAP32[$meshes >> 2] = 0;
 HEAP32[$meshes + 4 >> 2] = 0;
 HEAP32[$meshes + 8 >> 2] = 0;
 HEAP32[$meshes + 12 >> 2] = 0;
 $14 = $drawState + 8 | 0;
 do if ((HEAP32[$14 + 4 >> 2] | 0) == -1) {
  $$pre$phiZ2D = $meshes;
  $numMeshes$0$lcssa = 0;
 } else {
  $18 = HEAP32[36694] | 0;
  if (!(HEAP8[$18 + 1280 >> 0] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 91, 44602);
   _abort();
  }
  HEAP32[$meshes >> 2] = __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6LookupERKNS_2IdE($18 + 1440 | 0, $14) | 0;
  $87 = $drawState + 16 | 0;
  if ((HEAP32[$87 + 4 >> 2] | 0) == -1) {
   $$pre$phiZ2D = $meshes;
   $numMeshes$0$lcssa = 1;
  } else {
   $91 = HEAP32[36694] | 0;
   if (!(HEAP8[$91 + 1280 >> 0] | 0)) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 91, 44602);
    _abort();
   }
   HEAP32[$meshes + 4 >> 2] = __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6LookupERKNS_2IdE($91 + 1440 | 0, $87) | 0;
   $98 = $drawState + 24 | 0;
   if ((HEAP32[$98 + 4 >> 2] | 0) == -1) {
    $$pre$phiZ2D = $meshes;
    $numMeshes$0$lcssa = 2;
   } else {
    $102 = HEAP32[36694] | 0;
    if (!(HEAP8[$102 + 1280 >> 0] | 0)) {
     __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 91, 44602);
     _abort();
    }
    HEAP32[$meshes + 8 >> 2] = __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6LookupERKNS_2IdE($102 + 1440 | 0, $98) | 0;
    $109 = $drawState + 32 | 0;
    if ((HEAP32[$109 + 4 >> 2] | 0) == -1) {
     $$pre$phiZ2D = $meshes;
     $numMeshes$0$lcssa = 3;
    } else {
     $113 = HEAP32[36694] | 0;
     if (!(HEAP8[$113 + 1280 >> 0] | 0)) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 91, 44602);
      _abort();
     } else {
      HEAP32[$meshes + 12 >> 2] = __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6LookupERKNS_2IdE($113 + 1440 | 0, $109) | 0;
      $$pre$phiZ2D = $meshes;
      $numMeshes$0$lcssa = 4;
      break;
     }
    }
   }
  }
 } while (0);
 __ZN5Oryol3Gfx14validateMeshesEPNS_5_priv8pipelineEPPNS1_4meshEi(0, $$pre$phiZ2D, $numMeshes$0$lcssa);
 __ZN5Oryol5_priv10glRenderer14applyDrawStateEPNS0_8pipelineEPPNS0_4meshEi((HEAP32[36694] | 0) + 416 | 0, $12, $$pre$phiZ2D, $numMeshes$0$lcssa);
 HEAP32[$vsTextures >> 2] = 0;
 HEAP32[$vsTextures + 4 >> 2] = 0;
 HEAP32[$vsTextures + 8 >> 2] = 0;
 HEAP32[$vsTextures + 12 >> 2] = 0;
 $24 = $drawState + 40 | 0;
 if ((HEAP32[$24 + 4 >> 2] | 0) != -1) {
  $28 = HEAP32[36694] | 0;
  if (!(HEAP8[$28 + 1280 >> 0] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 105, 43944);
   _abort();
  }
  HEAP32[$vsTextures >> 2] = __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6LookupERKNS_2IdE($28 + 1568 | 0, $24) | 0;
  $52 = $drawState + 48 | 0;
  do if ((HEAP32[$52 + 4 >> 2] | 0) == -1) {
   $numVSTextures$018$lcssa23$ph = 1;
   label = 16;
  } else {
   $56 = HEAP32[36694] | 0;
   if (!(HEAP8[$56 + 1280 >> 0] | 0)) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 105, 43944);
    _abort();
   }
   HEAP32[$vsTextures + 4 >> 2] = __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6LookupERKNS_2IdE($56 + 1568 | 0, $52) | 0;
   $63 = $drawState + 56 | 0;
   if ((HEAP32[$63 + 4 >> 2] | 0) == -1) {
    $numVSTextures$018$lcssa23$ph = 2;
    label = 16;
   } else {
    $67 = HEAP32[36694] | 0;
    if (!(HEAP8[$67 + 1280 >> 0] | 0)) {
     __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 105, 43944);
     _abort();
    }
    HEAP32[$vsTextures + 8 >> 2] = __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6LookupERKNS_2IdE($67 + 1568 | 0, $63) | 0;
    $74 = $drawState + 64 | 0;
    if ((HEAP32[$74 + 4 >> 2] | 0) == -1) {
     $numVSTextures$018$lcssa23$ph = 3;
     label = 16;
    } else {
     $78 = HEAP32[36694] | 0;
     if (!(HEAP8[$78 + 1280 >> 0] | 0)) {
      __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 105, 43944);
      _abort();
     } else {
      HEAP32[$vsTextures + 12 >> 2] = __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6LookupERKNS_2IdE($78 + 1568 | 0, $74) | 0;
      $$pre$phi29Z2D = $vsTextures;
      $numVSTextures$014 = 4;
      break;
     }
    }
   }
  } while (0);
  if ((label | 0) == 16) {
   $$pre$phi29Z2D = $vsTextures;
   $numVSTextures$014 = $numVSTextures$018$lcssa23$ph;
  }
  __ZN5Oryol3Gfx16validateTexturesENS_11ShaderStage4CodeEPNS_5_priv8pipelineEPPNS3_7textureEi(0, $12, $$pre$phi29Z2D, $numVSTextures$014);
  __ZN5Oryol5_priv10glRenderer13applyTexturesENS_11ShaderStage4CodeEPPNS0_7textureEi((HEAP32[36694] | 0) + 416 | 0, 0, $$pre$phi29Z2D, $numVSTextures$014);
 }
 dest = $fsTextures;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $numFSTextures$017 = 0;
 while (1) {
  $34 = $drawState + 72 + ($numFSTextures$017 << 3) | 0;
  if ((HEAP32[$34 + 4 >> 2] | 0) == -1) {
   $numFSTextures$017$lcssa = $numFSTextures$017;
   label = 23;
   break;
  }
  $38 = HEAP32[36694] | 0;
  if (!(HEAP8[$38 + 1280 >> 0] | 0)) {
   label = 21;
   break;
  }
  HEAP32[$fsTextures + ($numFSTextures$017 << 2) >> 2] = __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6LookupERKNS_2IdE($38 + 1568 | 0, $34) | 0;
  $45 = $numFSTextures$017 + 1 | 0;
  if (($45 | 0) < 12) $numFSTextures$017 = $45; else {
   $numFSTextures$010 = $45;
   break;
  }
 }
 if ((label | 0) == 21) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 105, 43944);
  _abort();
 }
 if ((label | 0) == 23) if (($numFSTextures$017$lcssa | 0) > 0) $numFSTextures$010 = $numFSTextures$017$lcssa; else {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol3Gfx16validateTexturesENS_11ShaderStage4CodeEPNS_5_priv8pipelineEPPNS3_7textureEi(1, $12, $fsTextures, $numFSTextures$010);
 __ZN5Oryol5_priv10glRenderer13applyTexturesENS_11ShaderStage4CodeEPPNS0_7textureEi((HEAP32[36694] | 0) + 416 | 0, 1, $fsTextures, $numFSTextures$010);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol2IO5SetupERKNS_7IOSetupE($setup) {
 $setup = $setup | 0;
 var $0 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $107 = 0, $108 = 0, $109 = 0, $112 = 0, $121 = 0, $122 = 0, $126 = 0, $134 = 0, $14 = 0, $17 = 0, $20 = 0, $26 = 0, $30 = 0, $33 = 0, $36 = 0, $4 = 0, $42 = 0, $46 = 0, $49 = 0, $52 = 0, $58 = 0, $62 = 0, $65 = 0, $68 = 0, $74 = 0, $77 = 0, $8 = 0, $82 = 0, $85 = 0, $87 = 0, $88 = 0, $92 = 0, $95 = 0, $97 = 0, $98 = 0, $__begin$08 = 0, $__begin2$07 = 0, $ptrs = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $ptrs = sp + 48 | 0;
 $0 = sp + 24 | 0;
 $1 = sp;
 if (HEAP32[36715] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117531, 0, 100720, 19, 100769);
  _abort();
 }
 $4 = __ZN5Oryol6Memory5AllocEi(576) | 0;
 _memset($4 | 0, 0, 576) | 0;
 HEAP32[$4 + 24 >> 2] = 16;
 HEAP32[$4 + 28 >> 2] = 65536;
 HEAP8[$4 + 32 >> 0] = 0;
 $8 = $4 + 36 | 0;
 __ZN5Oryol5_priv14schemeRegistryC2Ev($8);
 HEAP32[$4 + 72 >> 2] = 0;
 $10 = $4 + 84 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$4 + 100 >> 2] = 16;
 HEAP32[$4 + 104 >> 2] = 65536;
 HEAP8[$4 + 108 >> 0] = 0;
 $14 = $4 + 112 | 0;
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 HEAP32[$14 + 12 >> 2] = 0;
 HEAP32[$4 + 128 >> 2] = 16;
 HEAP32[$4 + 132 >> 2] = 65536;
 $17 = $4 + 136 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$4 + 152 >> 2] = 16;
 HEAP32[$4 + 156 >> 2] = 65536;
 $20 = $4 + 160 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 HEAP32[$20 + 12 >> 2] = 0;
 HEAP32[$4 + 176 >> 2] = 16;
 HEAP32[$4 + 180 >> 2] = 65536;
 HEAP8[$4 + 184 >> 0] = 0;
 HEAP8[$4 + 185 >> 0] = 0;
 HEAP8[$4 + 186 >> 0] = 0;
 $26 = $4 + 196 | 0;
 HEAP32[$26 >> 2] = 0;
 HEAP32[$26 + 4 >> 2] = 0;
 HEAP32[$26 + 8 >> 2] = 0;
 HEAP32[$26 + 12 >> 2] = 0;
 HEAP32[$4 + 212 >> 2] = 16;
 HEAP32[$4 + 216 >> 2] = 65536;
 HEAP8[$4 + 220 >> 0] = 0;
 $30 = $4 + 224 | 0;
 HEAP32[$30 >> 2] = 0;
 HEAP32[$30 + 4 >> 2] = 0;
 HEAP32[$30 + 8 >> 2] = 0;
 HEAP32[$30 + 12 >> 2] = 0;
 HEAP32[$4 + 240 >> 2] = 16;
 HEAP32[$4 + 244 >> 2] = 65536;
 $33 = $4 + 248 | 0;
 HEAP32[$33 >> 2] = 0;
 HEAP32[$33 + 4 >> 2] = 0;
 HEAP32[$33 + 8 >> 2] = 0;
 HEAP32[$33 + 12 >> 2] = 0;
 HEAP32[$4 + 264 >> 2] = 16;
 HEAP32[$4 + 268 >> 2] = 65536;
 $36 = $4 + 272 | 0;
 HEAP32[$36 >> 2] = 0;
 HEAP32[$36 + 4 >> 2] = 0;
 HEAP32[$36 + 8 >> 2] = 0;
 HEAP32[$36 + 12 >> 2] = 0;
 HEAP32[$4 + 288 >> 2] = 16;
 HEAP32[$4 + 292 >> 2] = 65536;
 HEAP8[$4 + 296 >> 0] = 0;
 HEAP8[$4 + 297 >> 0] = 0;
 HEAP8[$4 + 298 >> 0] = 0;
 $42 = $4 + 308 | 0;
 HEAP32[$42 >> 2] = 0;
 HEAP32[$42 + 4 >> 2] = 0;
 HEAP32[$42 + 8 >> 2] = 0;
 HEAP32[$42 + 12 >> 2] = 0;
 HEAP32[$4 + 324 >> 2] = 16;
 HEAP32[$4 + 328 >> 2] = 65536;
 HEAP8[$4 + 332 >> 0] = 0;
 $46 = $4 + 336 | 0;
 HEAP32[$46 >> 2] = 0;
 HEAP32[$46 + 4 >> 2] = 0;
 HEAP32[$46 + 8 >> 2] = 0;
 HEAP32[$46 + 12 >> 2] = 0;
 HEAP32[$4 + 352 >> 2] = 16;
 HEAP32[$4 + 356 >> 2] = 65536;
 $49 = $4 + 360 | 0;
 HEAP32[$49 >> 2] = 0;
 HEAP32[$49 + 4 >> 2] = 0;
 HEAP32[$49 + 8 >> 2] = 0;
 HEAP32[$49 + 12 >> 2] = 0;
 HEAP32[$4 + 376 >> 2] = 16;
 HEAP32[$4 + 380 >> 2] = 65536;
 $52 = $4 + 384 | 0;
 HEAP32[$52 >> 2] = 0;
 HEAP32[$52 + 4 >> 2] = 0;
 HEAP32[$52 + 8 >> 2] = 0;
 HEAP32[$52 + 12 >> 2] = 0;
 HEAP32[$4 + 400 >> 2] = 16;
 HEAP32[$4 + 404 >> 2] = 65536;
 HEAP8[$4 + 408 >> 0] = 0;
 HEAP8[$4 + 409 >> 0] = 0;
 HEAP8[$4 + 410 >> 0] = 0;
 $58 = $4 + 420 | 0;
 HEAP32[$58 >> 2] = 0;
 HEAP32[$58 + 4 >> 2] = 0;
 HEAP32[$58 + 8 >> 2] = 0;
 HEAP32[$58 + 12 >> 2] = 0;
 HEAP32[$4 + 436 >> 2] = 16;
 HEAP32[$4 + 440 >> 2] = 65536;
 HEAP8[$4 + 444 >> 0] = 0;
 $62 = $4 + 448 | 0;
 HEAP32[$62 >> 2] = 0;
 HEAP32[$62 + 4 >> 2] = 0;
 HEAP32[$62 + 8 >> 2] = 0;
 HEAP32[$62 + 12 >> 2] = 0;
 HEAP32[$4 + 464 >> 2] = 16;
 HEAP32[$4 + 468 >> 2] = 65536;
 $65 = $4 + 472 | 0;
 HEAP32[$65 >> 2] = 0;
 HEAP32[$65 + 4 >> 2] = 0;
 HEAP32[$65 + 8 >> 2] = 0;
 HEAP32[$65 + 12 >> 2] = 0;
 HEAP32[$4 + 488 >> 2] = 16;
 HEAP32[$4 + 492 >> 2] = 65536;
 $68 = $4 + 496 | 0;
 HEAP32[$68 >> 2] = 0;
 HEAP32[$68 + 4 >> 2] = 0;
 HEAP32[$68 + 8 >> 2] = 0;
 HEAP32[$68 + 12 >> 2] = 0;
 HEAP32[$4 + 512 >> 2] = 16;
 HEAP32[$4 + 516 >> 2] = 65536;
 HEAP8[$4 + 520 >> 0] = 0;
 HEAP8[$4 + 521 >> 0] = 0;
 HEAP8[$4 + 522 >> 0] = 0;
 $74 = $4 + 524 | 0;
 HEAP32[$74 >> 2] = 0;
 HEAP32[$74 + 4 >> 2] = 0;
 HEAP32[$74 + 8 >> 2] = 0;
 HEAP32[$74 + 12 >> 2] = 0;
 HEAP32[$74 + 16 >> 2] = 0;
 HEAP32[$4 + 544 >> 2] = 16;
 HEAP32[$4 + 548 >> 2] = 65536;
 $77 = $4 + 552 | 0;
 HEAP32[$77 >> 2] = 0;
 HEAP32[$77 + 4 >> 2] = 0;
 HEAP32[$77 + 8 >> 2] = 0;
 HEAP32[$77 + 12 >> 2] = 0;
 HEAP32[$4 + 568 >> 2] = 16;
 HEAP32[$4 + 572 >> 2] = 65536;
 HEAP32[36715] = $4;
 HEAP32[$ptrs + 4 >> 2] = $8;
 HEAP32[$ptrs >> 2] = $4;
 __ZN5Oryol5_priv8ioRouter5setupERKNS0_10ioPointersE($4 + 72 | 0, $ptrs);
 $82 = HEAP32[$setup >> 2] | 0;
 L4 : do if ($82 | 0) {
  $85 = HEAP32[$setup + 8 >> 2] | 0;
  $87 = HEAP32[$setup + 12 >> 2] | 0;
  $88 = $82 + ($87 << 4) | 0;
  if (($85 | 0) != ($87 | 0)) {
   $__begin$08 = $82 + ($85 << 4) | 0;
   while (1) {
    $102 = HEAP32[36715] | 0;
    if (!$102) break;
    __ZN5Oryol5_priv14assignRegistry9SetAssignERKNS_6StringES4_($102, $__begin$08, $__begin$08 + 8 | 0);
    $__begin$08 = $__begin$08 + 16 | 0;
    if (($__begin$08 | 0) == ($88 | 0)) break L4;
   }
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 100720, 68, 100822);
   _abort();
  }
 } while (0);
 $92 = HEAP32[$setup + 28 >> 2] | 0;
 if ($92 | 0) {
  $95 = HEAP32[$setup + 36 >> 2] | 0;
  $97 = HEAP32[$setup + 40 >> 2] | 0;
  $98 = $92 + ($97 << 5) | 0;
  if (($95 | 0) != ($97 | 0)) {
   $101 = $0 + 16 | 0;
   $__begin2$07 = $92 + ($95 << 5) | 0;
   do {
    $121 = $__begin2$07 + 24 | 0;
    $122 = HEAP32[$121 >> 2] | 0;
    do if (!$122) HEAP32[$101 >> 2] = 0; else if (($122 | 0) == ($__begin2$07 + 8 | 0)) {
     HEAP32[$101 >> 2] = $0;
     $126 = HEAP32[$121 >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$126 >> 2] | 0) + 12 >> 2] & 63]($126, $0);
     break;
    } else {
     HEAP32[$101 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$122 >> 2] | 0) + 8 >> 2] & 63]($122) | 0;
     break;
    } while (0);
    __ZN5Oryol2IO18RegisterFileSystemERKNS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEE($__begin2$07, $0);
    $134 = HEAP32[$101 >> 2] | 0;
    if (($134 | 0) == ($0 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 255]($0); else if ($134 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$134 >> 2] | 0) + 20 >> 2] & 255]($134);
    $__begin2$07 = $__begin2$07 + 32 | 0;
   } while (($__begin2$07 | 0) != ($98 | 0));
  }
 }
 $107 = __ZN5Oryol4Core10PreRunLoopEv() | 0;
 $108 = $1 + 16 | 0;
 HEAP32[$108 >> 2] = $1;
 HEAP32[$1 >> 2] = 13504;
 $109 = __ZN5Oryol7RunLoop3AddENSt3__18functionIFvvEEE($107, $1) | 0;
 HEAP32[(HEAP32[36715] | 0) + 524 >> 2] = $109;
 $112 = HEAP32[$108 >> 2] | 0;
 if (($112 | 0) == ($1 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$112 >> 2] | 0) + 16 >> 2] & 255]($112);
  STACKTOP = sp;
  return;
 }
 if (!$112) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$112 >> 2] | 0) + 20 >> 2] & 255]($112);
 STACKTOP = sp;
 return;
}

function __ZN10ImDrawList19AddConvexPolyFilledEPK6ImVec2ijb($this, $points, $points_count, $col, $anti_aliased) {
 $this = $this | 0;
 $points = $points | 0;
 $points_count = $points_count | 0;
 $col = $col | 0;
 $anti_aliased = $anti_aliased | 0;
 var $$0$i = 0.0, $$idx = 0, $$idx15$val = 0.0, $$idx16$val = 0.0, $$idx2 = 0, $$idx6$val = 0.0, $$idx7$val = 0.0, $$phi$trans$insert = 0, $$pre$phiZ2D = 0, $$promoted = 0, $$promoted41 = 0, $1 = 0, $100 = 0, $101 = 0, $106 = 0, $114 = 0, $116 = 0, $118 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $138 = 0, $142 = 0, $148 = 0, $149 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $39 = 0, $40 = 0, $41 = 0.0, $42 = 0.0, $45 = 0.0, $54 = 0, $57 = 0, $6 = 0, $60 = 0.0, $61 = 0.0, $64 = 0.0, $66 = 0.0, $70 = 0.0, $71 = 0.0, $72 = 0, $74 = 0.0, $78 = 0, $82 = 0, $85 = 0.0, $90 = 0, $94 = 0, $97 = 0, $99 = 0, $dm$sroa$0$0 = 0.0, $dm$sroa$10$0 = 0.0, $i$037 = 0, $i0$034 = 0, $i0$034$phi = 0, $i01$030 = 0, $i01$030$phi = 0, $i1$033 = 0, $i12$029 = 0, $i5$026 = 0, $i6$025 = 0, $scale$0 = 0.0, label = 0, sp = 0, $$idx6$val$looptemp = 0.0, $$idx7$val$looptemp = 0.0, $$idx15$val$looptemp = 0.0, $$idx16$val$looptemp = 0.0;
 sp = STACKTOP;
 $1 = 152756;
 $3 = HEAP32[$1 >> 2] | 0;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 if (!((HEAPU8[152049] | 0) & ($anti_aliased & 1))) {
  $116 = ($points_count * 3 | 0) + -6 | 0;
  __ZN10ImDrawList11PrimReserveEii($this, $116, $points_count);
  if (($points_count | 0) > 0) {
   $118 = $this + 44 | 0;
   $132 = HEAP32[$118 >> 2] | 0;
   $i5$026 = 0;
   do {
    $125 = $points + ($i5$026 << 3) | 0;
    $130 = HEAP32[$125 + 4 >> 2] | 0;
    $131 = $132;
    HEAP32[$131 >> 2] = HEAP32[$125 >> 2];
    HEAP32[$131 + 4 >> 2] = $130;
    $138 = (HEAP32[$118 >> 2] | 0) + 8 | 0;
    HEAP32[$138 >> 2] = $3;
    HEAP32[$138 + 4 >> 2] = $6;
    $142 = HEAP32[$118 >> 2] | 0;
    HEAP32[$142 + 16 >> 2] = $col;
    $132 = $142 + 20 | 0;
    HEAP32[$118 >> 2] = $132;
    $i5$026 = $i5$026 + 1 | 0;
   } while (($i5$026 | 0) != ($points_count | 0));
   if (($points_count | 0) > 2) {
    $120 = $this + 40 | 0;
    $121 = HEAP32[$120 >> 2] | 0;
    $122 = $121 & 65535;
    $123 = $this + 48 | 0;
    $$promoted = HEAP32[$123 >> 2] | 0;
    $149 = $$promoted;
    $i6$025 = 2;
    while (1) {
     HEAP16[$149 >> 1] = $122;
     HEAP16[$149 + 2 >> 1] = $i6$025 + 65535 + $121;
     HEAP16[$149 + 4 >> 1] = $121 + $i6$025;
     $i6$025 = $i6$025 + 1 | 0;
     if (($i6$025 | 0) == ($points_count | 0)) break; else $149 = $149 + 6 | 0;
    }
    HEAP32[$123 >> 2] = $$promoted + ($116 << 1);
    $$pre$phiZ2D = $120;
    $148 = $121;
   } else label = 21;
  } else label = 21;
  if ((label | 0) == 21) {
   $$phi$trans$insert = $this + 40 | 0;
   $$pre$phiZ2D = $$phi$trans$insert;
   $148 = HEAP32[$$phi$trans$insert >> 2] | 0;
  }
  HEAP32[$$pre$phiZ2D >> 2] = $148 + ($points_count & 65535);
  STACKTOP = sp;
  return;
 }
 $13 = $col & 16777215;
 $15 = $points_count << 1;
 __ZN10ImDrawList11PrimReserveEii($this, ($points_count * 9 | 0) + -6 | 0, $15);
 $16 = $this + 40 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $17 + 1 | 0;
 if (($points_count | 0) > 2) {
  $20 = $17 & 65535;
  $21 = $this + 48 | 0;
  $22 = $17 + 65534 | 0;
  $$promoted41 = HEAP32[$21 >> 2] | 0;
  $24 = ($points_count * 3 | 0) + -6 | 0;
  $29 = $$promoted41;
  $i$037 = 2;
  while (1) {
   HEAP16[$29 >> 1] = $20;
   $30 = $i$037 << 1;
   HEAP16[$29 + 2 >> 1] = $22 + $30;
   HEAP16[$29 + 4 >> 1] = $30 + $17;
   $i$037 = $i$037 + 1 | 0;
   if (($i$037 | 0) == ($points_count | 0)) break; else $29 = $29 + 6 | 0;
  }
  HEAP32[$21 >> 2] = $$promoted41 + ($24 << 1);
 }
 $26 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * ($points_count << 3) | 0) + 15 & -16) | 0;
 $27 = $points_count + -1 | 0;
 $28 = ($points_count | 0) > 0;
 if ($28) {
  $$idx6$val = +HEAPF32[$points + ($27 << 3) >> 2];
  $$idx7$val = +HEAPF32[$points + ($27 << 3) + 4 >> 2];
  $i0$034 = $27;
  $i1$033 = 0;
  while (1) {
   $$idx6$val$looptemp = $$idx6$val;
   $$idx6$val = +HEAPF32[$points + ($i1$033 << 3) >> 2];
   $$idx7$val$looptemp = $$idx7$val;
   $$idx7$val = +HEAPF32[$points + ($i1$033 << 3) + 4 >> 2];
   $41 = $$idx6$val - $$idx6$val$looptemp;
   $42 = $$idx7$val - $$idx7$val$looptemp;
   $45 = $41 * $41 + $42 * $42;
   if ($45 > 0.0) $$0$i = 1.0 / +Math_sqrt(+$45); else $$0$i = 1.0;
   HEAPF32[$26 + ($i0$034 << 3) >> 2] = $42 * $$0$i;
   HEAPF32[$26 + ($i0$034 << 3) + 4 >> 2] = -($41 * $$0$i);
   $54 = $i1$033 + 1 | 0;
   if (($54 | 0) == ($points_count | 0)) break; else {
    $i0$034$phi = $i1$033;
    $i1$033 = $54;
    $i0$034 = $i0$034$phi;
   }
  }
  if ($28) {
   $39 = $this + 44 | 0;
   $40 = $this + 48 | 0;
   $$idx15$val = +HEAPF32[$26 + ($27 << 3) >> 2];
   $$idx16$val = +HEAPF32[$26 + ($27 << 3) + 4 >> 2];
   $i01$030 = $27;
   $i12$029 = 0;
   while (1) {
    $$idx15$val$looptemp = $$idx15$val;
    $$idx15$val = +HEAPF32[$26 + ($i12$029 << 3) >> 2];
    $$idx16$val$looptemp = $$idx16$val;
    $$idx16$val = +HEAPF32[$26 + ($i12$029 << 3) + 4 >> 2];
    $60 = ($$idx15$val$looptemp + $$idx15$val) * .5;
    $61 = ($$idx16$val$looptemp + $$idx16$val) * .5;
    $64 = $60 * $60 + $61 * $61;
    if ($64 > 9.999999974752427e-07) {
     $66 = 1.0 / $64;
     $scale$0 = $66 > 100.0 ? 100.0 : $66;
     $dm$sroa$0$0 = $60 * $scale$0;
     $dm$sroa$10$0 = $61 * $scale$0;
    } else {
     $dm$sroa$0$0 = $60;
     $dm$sroa$10$0 = $61;
    }
    $70 = $dm$sroa$0$0 * .5;
    $71 = $dm$sroa$10$0 * .5;
    $72 = HEAP32[$39 >> 2] | 0;
    $$idx = $points + ($i12$029 << 3) | 0;
    $$idx2 = $points + ($i12$029 << 3) + 4 | 0;
    $74 = +HEAPF32[$$idx2 >> 2] - $71;
    HEAPF32[$72 >> 2] = +HEAPF32[$$idx >> 2] - $70;
    HEAPF32[$72 + 4 >> 2] = $74;
    $78 = (HEAP32[$39 >> 2] | 0) + 8 | 0;
    HEAP32[$78 >> 2] = $3;
    HEAP32[$78 + 4 >> 2] = $6;
    $82 = HEAP32[$39 >> 2] | 0;
    HEAP32[$82 + 16 >> 2] = $col;
    $85 = $71 + +HEAPF32[$$idx2 >> 2];
    HEAPF32[$82 + 20 >> 2] = $70 + +HEAPF32[$$idx >> 2];
    HEAPF32[$82 + 24 >> 2] = $85;
    $90 = (HEAP32[$39 >> 2] | 0) + 28 | 0;
    HEAP32[$90 >> 2] = $3;
    HEAP32[$90 + 4 >> 2] = $6;
    $94 = HEAP32[$39 >> 2] | 0;
    HEAP32[$94 + 36 >> 2] = $13;
    HEAP32[$39 >> 2] = $94 + 40;
    $97 = $i12$029 << 1;
    $99 = $97 + $17 & 65535;
    $100 = HEAP32[$40 >> 2] | 0;
    HEAP16[$100 >> 1] = $99;
    $101 = $i01$030 << 1;
    HEAP16[$100 + 2 >> 1] = $101 + $17;
    $106 = $101 + $18 & 65535;
    HEAP16[$100 + 4 >> 1] = $106;
    HEAP16[$100 + 6 >> 1] = $106;
    HEAP16[$100 + 8 >> 1] = $97 + $18;
    HEAP16[$100 + 10 >> 1] = $99;
    HEAP32[$40 >> 2] = $100 + 12;
    $114 = $i12$029 + 1 | 0;
    if (($114 | 0) == ($points_count | 0)) break; else {
     $i01$030$phi = $i12$029;
     $i12$029 = $114;
     $i01$030 = $i01$030$phi;
    }
   }
   $57 = HEAP32[$16 >> 2] | 0;
  } else $57 = $17;
 } else $57 = $17;
 HEAP32[$16 >> 2] = $57 + ($15 & 65534);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol7RunLoop6RemoveEi($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $$0$i$i1$i = 0, $$0$i$i1$i2 = 0, $$0$i$i2$i = 0, $$0$i$i2$i1 = 0, $$0$i1$i = 0, $$0$i1$i10 = 0, $$0$i2$i = 0, $$0$i2$i9 = 0, $$0$ph$i$i$i$i = 0, $$0$ph$i$i$i$i$i = 0, $$0$ph$i$i$i$i$i$lcssa = 0, $$0$ph$i$i$i$i$i13 = 0, $$0$ph$i$i$i$i$i13$lcssa = 0, $$0$ph$i$i$i$i$i4 = 0, $$0$ph$i$i$i$i$i4$lcssa = 0, $$0$ph$i$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa78 = 0, $$lcssa80 = 0, $$lcssa81 = 0, $$lcssa83 = 0, $$lcssa84 = 0, $$lcssa86 = 0, $$lcssa87 = 0, $0 = 0, $1 = 0, $107 = 0, $109 = 0, $112 = 0, $116 = 0, $14 = 0, $15 = 0, $2 = 0, $27 = 0, $40 = 0, $41 = 0, $53 = 0, $66 = 0, $67 = 0, $82 = 0, $86 = 0, $87 = 0, $97 = 0, $99 = 0, $__len$0$i$i$i$i = 0, $__len$0$i$i$i$i$i = 0, $__len$0$i$i$i$i$i$lcssa85 = 0, $__len$0$i$i$i$i$i15 = 0, $__len$0$i$i$i$i$i15$lcssa79 = 0, $__len$0$i$i$i$i$i6 = 0, $__len$0$i$i$i$i$i6$lcssa82 = 0, $__len$0$i$i$i$i$lcssa77 = 0, $__len$0$ph$i$i$i$i = 0, $__len$0$ph$i$i$i$i$i = 0, $__len$0$ph$i$i$i$i$i12 = 0, $__len$0$ph$i$i$i$i$i3 = 0, $growBy$0$i$i = 0, $slotConstructed$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $slotConstructed$i$i = sp + 4 | 0;
 $0 = $this + 60 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = ($1 | 0) == 0;
 if ($2) {
  $$0$i$i1$i = 0;
  $$0$i$i2$i = 0;
 } else {
  $$0$i$i1$i = $1 + (HEAP32[$this + 72 >> 2] << 2) | 0;
  $$0$i$i2$i = $1 + (HEAP32[$this + 68 >> 2] << 2) | 0;
 }
 $$0$ph$i$i$i$i$i = $$0$i$i2$i;
 $__len$0$ph$i$i$i$i$i = $$0$i$i1$i - $$0$i$i2$i >> 2;
 L4 : while (1) {
  $__len$0$i$i$i$i$i = $__len$0$ph$i$i$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i$i$i) {
    $$0$ph$i$i$i$i$i$lcssa = $$0$ph$i$i$i$i$i;
    break L4;
   }
   $14 = ($__len$0$i$i$i$i$i | 0) / 2 | 0;
   $15 = $$0$ph$i$i$i$i$i + ($14 << 2) | 0;
   if ((HEAP32[$15 >> 2] | 0) < ($id | 0)) {
    $$lcssa86 = $14;
    $$lcssa87 = $15;
    $__len$0$i$i$i$i$i$lcssa85 = $__len$0$i$i$i$i$i;
    break;
   } else $__len$0$i$i$i$i$i = $14;
  }
  $$0$ph$i$i$i$i$i = $$lcssa87 + 4 | 0;
  $__len$0$ph$i$i$i$i$i = $__len$0$i$i$i$i$i$lcssa85 + -1 - $$lcssa86 | 0;
 }
 if (($$0$ph$i$i$i$i$i$lcssa | 0) != ($$0$i$i1$i | 0)) if ((HEAP32[$$0$ph$i$i$i$i$i$lcssa >> 2] | 0) <= ($id | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(119974, 0, 120003, 60, 120059);
  _abort();
 }
 if (HEAP8[$this + 28 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 118164);
  _abort();
 }
 $27 = HEAP32[$this + 4 >> 2] | 0;
 if (!$27) {
  $$0$i1$i = 0;
  $$0$i2$i = 0;
 } else {
  $$0$i1$i = $27 + ((HEAP32[$this + 16 >> 2] | 0) * 40 | 0) | 0;
  $$0$i2$i = $27 + ((HEAP32[$this + 12 >> 2] | 0) * 40 | 0) | 0;
 }
 $$0$ph$i$i$i$i$i4 = $$0$i2$i;
 $__len$0$ph$i$i$i$i$i3 = ($$0$i1$i - $$0$i2$i | 0) / 40 | 0;
 L21 : while (1) {
  $__len$0$i$i$i$i$i6 = $__len$0$ph$i$i$i$i$i3;
  while (1) {
   if (!$__len$0$i$i$i$i$i6) {
    $$0$ph$i$i$i$i$i4$lcssa = $$0$ph$i$i$i$i$i4;
    break L21;
   }
   $40 = ($__len$0$i$i$i$i$i6 | 0) / 2 | 0;
   $41 = $$0$ph$i$i$i$i$i4 + ($40 * 40 | 0) | 0;
   if ((HEAP32[$41 >> 2] | 0) < ($id | 0)) {
    $$lcssa83 = $40;
    $$lcssa84 = $41;
    $__len$0$i$i$i$i$i6$lcssa82 = $__len$0$i$i$i$i$i6;
    break;
   } else $__len$0$i$i$i$i$i6 = $40;
  }
  $$0$ph$i$i$i$i$i4 = $$lcssa84 + 40 | 0;
  $__len$0$ph$i$i$i$i$i3 = $__len$0$i$i$i$i$i6$lcssa82 + -1 - $$lcssa83 | 0;
 }
 if (($$0$ph$i$i$i$i$i4$lcssa | 0) == ($$0$i1$i | 0)) label = 22; else if ((HEAP32[$$0$ph$i$i$i$i$i4$lcssa >> 2] | 0) > ($id | 0)) label = 22;
 if ((label | 0) == 22) {
  if (HEAP8[$this + 56 >> 0] | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 118164);
   _abort();
  }
  $53 = HEAP32[$this + 32 >> 2] | 0;
  if (!$53) {
   $$0$i1$i10 = 0;
   $$0$i2$i9 = 0;
  } else {
   $$0$i1$i10 = $53 + ((HEAP32[$this + 44 >> 2] | 0) * 40 | 0) | 0;
   $$0$i2$i9 = $53 + ((HEAP32[$this + 40 >> 2] | 0) * 40 | 0) | 0;
  }
  $$0$ph$i$i$i$i$i13 = $$0$i2$i9;
  $__len$0$ph$i$i$i$i$i12 = ($$0$i1$i10 - $$0$i2$i9 | 0) / 40 | 0;
  L38 : while (1) {
   $__len$0$i$i$i$i$i15 = $__len$0$ph$i$i$i$i$i12;
   while (1) {
    if (!$__len$0$i$i$i$i$i15) {
     $$0$ph$i$i$i$i$i13$lcssa = $$0$ph$i$i$i$i$i13;
     break L38;
    }
    $66 = ($__len$0$i$i$i$i$i15 | 0) / 2 | 0;
    $67 = $$0$ph$i$i$i$i$i13 + ($66 * 40 | 0) | 0;
    if ((HEAP32[$67 >> 2] | 0) < ($id | 0)) {
     $$lcssa80 = $66;
     $$lcssa81 = $67;
     $__len$0$i$i$i$i$i15$lcssa79 = $__len$0$i$i$i$i$i15;
     break;
    } else $__len$0$i$i$i$i$i15 = $66;
   }
   $$0$ph$i$i$i$i$i13 = $$lcssa81 + 40 | 0;
   $__len$0$ph$i$i$i$i$i12 = $__len$0$i$i$i$i$i15$lcssa79 + -1 - $$lcssa80 | 0;
  }
  if (($$0$ph$i$i$i$i$i13$lcssa | 0) == ($$0$i1$i10 | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120091, 0, 120003, 61, 120059);
   _abort();
  }
  if ((HEAP32[$$0$ph$i$i$i$i$i13$lcssa >> 2] | 0) > ($id | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120091, 0, 120003, 61, 120059);
   _abort();
  }
 }
 if ($2) {
  $$0$i$i1$i2 = 0;
  $$0$i$i2$i1 = 0;
 } else {
  $$0$i$i1$i2 = $1 + (HEAP32[$this + 72 >> 2] << 2) | 0;
  $$0$i$i2$i1 = $1 + (HEAP32[$this + 68 >> 2] << 2) | 0;
 }
 $82 = $$0$i$i2$i1;
 $$0$ph$i$i$i$i = $$0$i$i2$i1;
 $__len$0$ph$i$i$i$i = $$0$i$i1$i2 - $82 >> 2;
 L53 : while (1) {
  $__len$0$i$i$i$i = $__len$0$ph$i$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i$i) {
    $$0$ph$i$i$i$i$lcssa = $$0$ph$i$i$i$i;
    break L53;
   }
   $86 = ($__len$0$i$i$i$i | 0) / 2 | 0;
   $87 = $$0$ph$i$i$i$i + ($86 << 2) | 0;
   if ((HEAP32[$87 >> 2] | 0) < ($id | 0)) {
    $$lcssa = $86;
    $$lcssa78 = $87;
    $__len$0$i$i$i$i$lcssa77 = $__len$0$i$i$i$i;
    break;
   } else $__len$0$i$i$i$i = $86;
  }
  $$0$ph$i$i$i$i = $$lcssa78 + 4 | 0;
  $__len$0$ph$i$i$i$i = $__len$0$i$i$i$i$lcssa77 + -1 - $$lcssa | 0;
 }
 if (($$0$ph$i$i$i$i$lcssa | 0) != ($$0$i$i1$i2 | 0)) if ((HEAP32[$$0$ph$i$i$i$i$lcssa >> 2] | 0) == ($id | 0)) {
  __ZN5Oryol3Log5ErrorEPKcz(122390, $vararg_buffer);
  _abort();
 }
 $97 = $$0$ph$i$i$i$i$lcssa - $82 >> 2;
 $99 = HEAP32[$this + 64 >> 2] | 0;
 if (($99 - (HEAP32[$this + 72 >> 2] | 0) | 0) != (0 - (HEAP32[$this + 68 >> 2] | 0) | 0)) {
  HEAP8[$slotConstructed$i$i >> 0] = 1;
  $116 = __ZN5Oryol5_priv13elementBufferIiE13prepareInsertEiRb($0, $97, $slotConstructed$i$i) | 0;
  HEAP32[$116 >> 2] = $id;
  STACKTOP = sp;
  return;
 }
 $107 = $99 >> 1;
 $109 = HEAP32[$this + 76 >> 2] | 0;
 if (($107 | 0) < ($109 | 0)) $growBy$0$i$i = $109; else {
  $112 = HEAP32[$this + 80 >> 2] | 0;
  $growBy$0$i$i = ($107 | 0) > ($112 | 0) ? $112 : $107;
 }
 if (($growBy$0$i$i | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 120148);
  _abort();
 }
 __ZN5Oryol5_priv13elementBufferIiE5allocEii($0, $growBy$0$i$i + $99 | 0, 0);
 HEAP8[$slotConstructed$i$i >> 0] = 1;
 $116 = __ZN5Oryol5_priv13elementBufferIiE13prepareInsertEiRb($0, $97, $slotConstructed$i$i) | 0;
 HEAP32[$116 >> 2] = $id;
 STACKTOP = sp;
 return;
}

function __ZN5ImGui14SliderBehaviorERK6ImRectjPffffii($frame_bb, $id, $v, $v_min, $v_max, $power, $decimal_precision, $flags) {
 $frame_bb = $frame_bb | 0;
 $id = $id | 0;
 $v = $v | 0;
 $v_min = +$v_min;
 $v_max = +$v_max;
 $power = +$power;
 $decimal_precision = $decimal_precision | 0;
 $flags = $flags | 0;
 var $$ = 0.0, $$0$i = 0.0, $$sink = 0.0, $$sink27 = 0.0, $0 = 0, $1 = 0, $10 = 0, $103 = 0.0, $104 = 0.0, $11 = 0, $111 = 0, $121 = 0.0, $125 = 0.0, $130 = 0.0, $132 = 0.0, $143 = 0.0, $145 = 0.0, $15 = 0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $165 = 0.0, $172 = 0.0, $176 = 0.0, $189 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0, $21 = 0, $22 = 0, $225 = 0, $227 = 0.0, $229 = 0.0, $231 = 0.0, $236 = 0.0, $27 = 0.0, $29 = 0.0, $3 = 0, $31 = 0.0, $36 = 0.0, $5 = 0, $61 = 0.0, $64 = 0, $66 = 0, $76 = 0.0, $79 = 0.0, $84 = 0.0, $86 = 0.0, $89 = 0.0, $90 = 0, $93 = 0.0, $94 = 0.0, $95 = 0, $98 = 0.0, $a1$0 = 0.0, $grab_sz$0 = 0.0, $grab_t$1 = 0.0, $linear_zero_pos$0 = 0.0, $new_value$0 = 0.0, $storemerge = 0.0, $storemerge28 = 0.0, $storemerge29 = 0.0, $tmpcast$byval_copy = 0, $tmpcast1$byval_copy = 0, $value_changed$1$off0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $tmpcast1$byval_copy = sp + 24 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $3 = HEAP32[38201] | 0;
 HEAP8[$3 + 114 >> 0] = 1;
 $5 = $frame_bb;
 $10 = HEAP32[$5 + 4 >> 2] | 0;
 $11 = $0;
 HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$11 + 4 >> 2] = $10;
 $15 = $frame_bb + 8 | 0;
 $16 = $15;
 $21 = HEAP32[$16 + 4 >> 2] | 0;
 $22 = $1;
 HEAP32[$22 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$22 + 4 >> 2] = $21;
 $27 = +HEAPF32[38038];
 $29 = +HEAPF32[38039];
 $31 = +HEAPF32[38040];
 $36 = +HEAPF32[38041] * +HEAPF32[37984];
 $61 = +HEAPF32[37994];
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$tmpcast1$byval_copy >> 2] = HEAP32[$1 >> 2];
 HEAP32[$tmpcast1$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 __ZN5ImGui11RenderFrameE6ImVec2S0_jbf($tmpcast$byval_copy, $tmpcast1$byval_copy, ($29 < 0.0 ? 0 : ~~(($29 > 1.0 ? 1.0 : $29) * 255.0 + .5) << 8) | ($27 < 0.0 ? 0 : ~~(($27 > 1.0 ? 1.0 : $27) * 255.0 + .5)) | ($31 < 0.0 ? 0 : ~~(($31 > 1.0 ? 1.0 : $31) * 255.0 + .5) << 16) | ($36 < 0.0 ? 0 : ~~(($36 > 1.0 ? 1.0 : $36) * 255.0 + .5) << 24), 1, $61);
 $64 = +Math_abs(+($power + -1.0)) > 9.999999747378752e-05;
 $66 = ($flags & 1 | 0) == 0;
 if ($66) $$sink = +HEAPF32[$frame_bb + 8 >> 2] - +HEAPF32[$frame_bb >> 2]; else $$sink = +HEAPF32[$frame_bb + 12 >> 2] - +HEAPF32[$frame_bb + 4 >> 2];
 $76 = $$sink + -4.0;
 $79 = +HEAPF32[38006];
 if (($decimal_precision | 0) > 0) $grab_sz$0 = $79 < $76 ? $79 : $76; else {
  $84 = $76 / ($v_max - $v_min + 1.0);
  $86 = $84 >= $79 ? $84 : $79;
  $grab_sz$0 = $86 < $76 ? $86 : $76;
 }
 $89 = $76 - $grab_sz$0;
 $90 = $frame_bb + 4 | 0;
 $93 = $grab_sz$0 * .5;
 $94 = $93 + (+HEAPF32[($66 ? $frame_bb : $90) >> 2] + 2.0);
 $95 = $frame_bb + 12 | 0;
 $98 = +HEAPF32[($66 ? $15 : $95) >> 2] + -2.0 - $93;
 if ($v_min * $v_max < 0.0) {
  $103 = 1.0 / $power;
  $104 = +Math_pow(+(+Math_abs(+(0.0 - $v_min))), +$103);
  $linear_zero_pos$0 = $104 / ($104 + +Math_pow(+(+Math_abs(+$v_max)), +$103));
 } else $linear_zero_pos$0 = $v_min < 0.0 ? 1.0 : 0.0;
 $111 = 152844;
 do if ((HEAP32[$111 >> 2] | 0) == ($id | 0)) {
  if (!(HEAP8[147092] | 0)) {
   HEAP32[38211] = 0;
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = 0;
   $value_changed$1$off0 = 0;
   break;
  }
  $121 = (+HEAPF32[($66 ? 147084 : 147088) >> 2] - $94) / $89;
  $125 = $121 < 0.0 ? 0.0 : $121 > 1.0 ? 1.0 : $121;
  $$ = $66 ? $125 : 1.0 - $125;
  do if ($64) {
   if ($$ < $linear_zero_pos$0) {
    $130 = +Math_pow(+(1.0 - $$ / $linear_zero_pos$0), +$power);
    $132 = $v_max < 0.0 ? $v_max : 0.0;
    $new_value$0 = $132 + ($v_min - $132) * $130;
    break;
   }
   if (+Math_abs(+($linear_zero_pos$0 + -1.0)) > 1.0e-06) $a1$0 = ($$ - $linear_zero_pos$0) / (1.0 - $linear_zero_pos$0); else $a1$0 = $$;
   $143 = +Math_pow(+$a1$0, +$power);
   $145 = $v_min >= 0.0 ? $v_min : 0.0;
   $new_value$0 = $145 + ($v_max - $145) * $143;
  } else $new_value$0 = ($v_max - $v_min) * $$ + $v_min; while (0);
  if ($decimal_precision >>> 0 < 10) $160 = +HEAPF32[13688 + ($decimal_precision << 2) >> 2]; else $160 = +Math_pow(10.0, +(+(0 - $decimal_precision | 0)));
  $159 = +Math_abs(+$new_value$0);
  $161 = +_fmodf($159, $160);
  $$0$i = $159 + ((!($161 <= $160 * .5) ? $160 : -0.0) - $161);
  $165 = $new_value$0 < 0.0 ? -$$0$i : $$0$i;
  if (+HEAPF32[$v >> 2] != $165) {
   HEAPF32[$v >> 2] = $165;
   $value_changed$1$off0 = 1;
  } else $value_changed$1$off0 = 0;
 } else $value_changed$1$off0 = 0; while (0);
 $172 = +HEAPF32[$v >> 2];
 $176 = $172 < $v_min ? $v_min : $172 > $v_max ? $v_max : $172;
 do if ($64) if ($176 < 0.0) {
  $grab_t$1 = $linear_zero_pos$0 * (1.0 - +Math_pow(+(1.0 - ($176 - $v_min) / (($v_max > 0.0 ? 0.0 : $v_max) - $v_min)), +(1.0 / $power)));
  break;
 } else {
  $189 = $v_min <= 0.0 ? 0.0 : $v_min;
  $grab_t$1 = $linear_zero_pos$0 + (1.0 - $linear_zero_pos$0) * +Math_pow(+(($176 - $189) / ($v_max - $189)), +(1.0 / $power));
  break;
 } else $grab_t$1 = ($176 - $v_min) / ($v_max - $v_min); while (0);
 $204 = $94 + ($98 - $94) * ($66 ? $grab_t$1 : 1.0 - $grab_t$1);
 HEAPF32[$tmpcast1$byval_copy >> 2] = 3402823466385288598117041.0e14;
 $205 = $tmpcast1$byval_copy + 4 | 0;
 HEAPF32[$205 >> 2] = 3402823466385288598117041.0e14;
 $206 = $tmpcast1$byval_copy + 8 | 0;
 HEAPF32[$206 >> 2] = -3402823466385288598117041.0e14;
 $207 = $tmpcast1$byval_copy + 12 | 0;
 HEAPF32[$207 >> 2] = -3402823466385288598117041.0e14;
 if ($66) {
  $$sink27 = $93 + $204;
  $storemerge = +HEAPF32[$95 >> 2] + -2.0;
  $storemerge28 = +HEAPF32[$90 >> 2] + 2.0;
  $storemerge29 = $204 - $93;
 } else {
  $$sink27 = +HEAPF32[$15 >> 2] + -2.0;
  $storemerge = $93 + $204;
  $storemerge28 = $204 - $93;
  $storemerge29 = +HEAPF32[$frame_bb >> 2] + 2.0;
 }
 HEAPF32[$tmpcast1$byval_copy >> 2] = $storemerge29;
 HEAPF32[$205 >> 2] = $storemerge28;
 HEAPF32[$206 >> 2] = $$sink27;
 HEAPF32[$207 >> 2] = $storemerge;
 $225 = (HEAP32[$111 >> 2] | 0) == ($id | 0) ? 20 : 19;
 $227 = +HEAPF32[152056 + ($225 << 4) >> 2];
 $229 = +HEAPF32[152056 + ($225 << 4) + 4 >> 2];
 $231 = +HEAPF32[152056 + ($225 << 4) + 8 >> 2];
 $236 = +HEAPF32[152056 + ($225 << 4) + 12 >> 2] * +HEAPF32[37984];
 __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi(HEAP32[$3 + 572 >> 2] | 0, $tmpcast1$byval_copy, $tmpcast1$byval_copy + 8 | 0, ($229 < 0.0 ? 0 : ~~(($229 > 1.0 ? 1.0 : $229) * 255.0 + .5) << 8) | ($227 < 0.0 ? 0 : ~~(($227 > 1.0 ? 1.0 : $227) * 255.0 + .5)) | ($231 < 0.0 ? 0 : ~~(($231 > 1.0 ? 1.0 : $231) * 255.0 + .5) << 16) | ($236 < 0.0 ? 0 : ~~(($236 > 1.0 ? 1.0 : $236) * 255.0 + .5) << 24), +HEAPF32[38007], 15);
 STACKTOP = sp;
 return $value_changed$1$off0 | 0;
}

function __ZN5Oryol5_priv12imguiWrapper20imguiRenderDrawListsEP10ImDrawData($draw_data) {
 $draw_data = $draw_data | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $100 = 0, $101 = 0, $105 = 0, $108 = 0.0, $11 = 0, $111 = 0.0, $122 = 0, $124 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $29 = 0, $31 = 0, $4 = 0, $40 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $50 = 0.0, $53 = 0.0, $55 = 0.0, $63 = 0, $64 = 0, $71 = 0, $74 = 0, $8 = 0, $80 = 0, $81 = 0, $86 = 0, $87 = 0, $90 = 0, $97 = 0, $99 = 0, $cmdListIndex$013 = 0, $elmOffset$012 = 0, $elmOffset$1$lcssa = 0, $elmOffset$110 = 0, $i$016 = 0, $numCmdLists$0$lcssa = 0, $numCmdLists$021 = 0, $numIndices$0$lcssa = 0, $numIndices$022 = 0, $numIndices$1$lcssa = 0, $numIndices$117 = 0, $numVertices$0$lcssa = 0, $numVertices$023 = 0, $pcmd$011 = 0, $vsParams = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vsParams = sp + 8 | 0;
 $0 = sp;
 if (!(HEAP32[36708] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80101, 0, 80002, 185, 80106);
  _abort();
 }
 if (!$draw_data) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80181, 0, 80002, 186, 80106);
  _abort();
 }
 $4 = $draw_data + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) {
  STACKTOP = sp;
  return;
 }
 L10 : do if (($5 | 0) > 0) {
  $8 = $draw_data + 4 | 0;
  $numCmdLists$021 = 0;
  $numIndices$022 = 0;
  $numVertices$023 = 0;
  while (1) {
   $11 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($numCmdLists$021 << 2) >> 2] | 0;
   $13 = HEAP32[$11 + 24 >> 2] | 0;
   $14 = $11 + 12 | 0;
   $15 = HEAP32[$14 >> 2] | 0;
   $16 = $13 + $numVertices$023 | 0;
   $18 = $15 + $numIndices$022 | 0;
   if (($16 | 0) > 65536 | ($18 | 0) > 131072) {
    $numCmdLists$0$lcssa = $numCmdLists$021;
    $numIndices$0$lcssa = $numIndices$022;
    $numVertices$0$lcssa = $numVertices$023;
    break L10;
   }
   if (($13 | 0) <= 0) {
    label = 10;
    break;
   }
   __ZN5Oryol6Memory4CopyEPKvPvi(HEAP32[$11 + 32 >> 2] | 0, (HEAP32[36708] | 0) + 176 + ($numVertices$023 * 20 | 0) | 0, $13 * 20 | 0);
   if ((HEAP32[$14 >> 2] | 0) <= 0) {
    label = 12;
    break;
   }
   $29 = HEAP32[$11 + 20 >> 2] | 0;
   if (($15 | 0) > 0) {
    $31 = HEAP32[36708] | 0;
    $i$016 = 0;
    $numIndices$117 = $numIndices$022;
    while (1) {
     HEAP16[$31 + 1310896 + ($numIndices$117 << 1) >> 1] = (HEAPU16[$29 + ($i$016 << 1) >> 1] | 0) + $numVertices$023;
     $i$016 = $i$016 + 1 | 0;
     if (($i$016 | 0) == ($15 | 0)) {
      $numIndices$1$lcssa = $18;
      break;
     } else $numIndices$117 = $numIndices$117 + 1 | 0;
    }
   } else $numIndices$1$lcssa = $numIndices$022;
   $40 = $numCmdLists$021 + 1 | 0;
   if (($40 | 0) < (HEAP32[$4 >> 2] | 0)) {
    $numCmdLists$021 = $40;
    $numIndices$022 = $numIndices$1$lcssa;
    $numVertices$023 = $16;
   } else {
    $numCmdLists$0$lcssa = $40;
    $numIndices$0$lcssa = $numIndices$1$lcssa;
    $numVertices$0$lcssa = $16;
    break L10;
   }
  }
  if ((label | 0) == 10) ___assert_fail(127436, 127226, 814, 125215); else if ((label | 0) == 12) ___assert_fail(127436, 127226, 814, 125215);
 } else {
  $numCmdLists$0$lcssa = 0;
  $numIndices$0$lcssa = 0;
  $numVertices$0$lcssa = 0;
 } while (0);
 HEAP32[$vsParams >> 2] = 0;
 HEAPF32[$vsParams >> 2] = 1.0;
 $43 = $vsParams + 4 | 0;
 $44 = $vsParams + 20 | 0;
 HEAP32[$43 >> 2] = 0;
 HEAP32[$43 + 4 >> 2] = 0;
 HEAP32[$43 + 8 >> 2] = 0;
 HEAP32[$43 + 12 >> 2] = 0;
 HEAPF32[$44 >> 2] = 1.0;
 $45 = $vsParams + 24 | 0;
 $46 = $vsParams + 40 | 0;
 HEAP32[$45 >> 2] = 0;
 HEAP32[$45 + 4 >> 2] = 0;
 HEAP32[$45 + 8 >> 2] = 0;
 HEAP32[$45 + 12 >> 2] = 0;
 HEAPF32[$46 >> 2] = 1.0;
 $47 = $vsParams + 44 | 0;
 HEAP32[$47 >> 2] = 0;
 HEAP32[$47 + 4 >> 2] = 0;
 HEAP32[$47 + 8 >> 2] = 0;
 HEAP32[$47 + 12 >> 2] = 0;
 HEAPF32[$vsParams + 60 >> 2] = 1.0;
 $50 = +HEAPF32[(__ZN5ImGui5GetIOEv() | 0) >> 2];
 $53 = +HEAPF32[(__ZN5ImGui5GetIOEv() | 0) + 4 >> 2];
 $55 = 0.0 - $53;
 HEAPF32[$vsParams >> 2] = 2.0 / $50;
 $63 = $vsParams + 4 | 0;
 HEAP32[$63 >> 2] = 0;
 HEAP32[$63 + 4 >> 2] = 0;
 HEAP32[$63 + 8 >> 2] = 0;
 HEAP32[$63 + 12 >> 2] = 0;
 HEAPF32[$44 >> 2] = 2.0 / $55;
 $64 = $vsParams + 24 | 0;
 HEAP32[$64 >> 2] = 0;
 HEAP32[$64 + 4 >> 2] = 0;
 HEAP32[$64 + 8 >> 2] = 0;
 HEAP32[$64 + 12 >> 2] = 0;
 HEAPF32[$46 >> 2] = -1.0;
 HEAPF32[$47 >> 2] = 0.0;
 HEAPF32[$vsParams + 48 >> 2] = -($50 + 0.0) / $50;
 HEAPF32[$vsParams + 52 >> 2] = -($53 + 0.0) / $55;
 HEAPF32[$vsParams + 56 >> 2] = -0.0;
 HEAP32[$vsParams + 60 >> 2] = 1065353216;
 $71 = HEAP32[36708] | 0;
 __ZN5Oryol3Gfx14UpdateVerticesERKNS_2IdEPKvi($71 + 16 | 0, $71 + 176 | 0, $numVertices$0$lcssa * 20 | 0);
 $74 = HEAP32[36708] | 0;
 __ZN5Oryol3Gfx13UpdateIndicesERKNS_2IdEPKvi($74 + 16 | 0, $74 + 1310896 | 0, $numIndices$0$lcssa << 1);
 __ZN5Oryol3Gfx14ApplyDrawStateERKNS_9DrawStateE((HEAP32[36708] | 0) + 8 | 0);
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 149, 80241);
  _abort();
 }
 $80 = HEAP32[36694] | 0;
 $81 = $80 + 132 | 0;
 HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 1;
 __ZN5Oryol5_priv10glRenderer17applyUniformBlockENS_11ShaderStage4CodeEixPKhi($80 + 416 | 0, 0, 0, 1254626822, 1855796075, $vsParams, 64);
 if (($numCmdLists$0$lcssa | 0) > 0) {
  $86 = $draw_data + 4 | 0;
  $87 = $0 + 4 | 0;
  $cmdListIndex$013 = 0;
  $elmOffset$012 = 0;
  while (1) {
   $97 = HEAP32[(HEAP32[$86 >> 2] | 0) + ($cmdListIndex$013 << 2) >> 2] | 0;
   $99 = HEAP32[$97 + 8 >> 2] | 0;
   $100 = HEAP32[$97 >> 2] | 0;
   $101 = $99 + ($100 << 5) | 0;
   if (!$100) $elmOffset$1$lcssa = $elmOffset$012; else {
    $elmOffset$110 = $elmOffset$012;
    $pcmd$011 = $99;
    while (1) {
     $105 = HEAP32[$pcmd$011 + 24 >> 2] | 0;
     if (!$105) {
      $108 = +HEAPF32[$pcmd$011 + 4 >> 2];
      $111 = +HEAPF32[$pcmd$011 + 16 >> 2];
      __ZN5Oryol3Gfx16ApplyScissorRectEiiiib(~~$108, ~~($53 - $111), ~~(+HEAPF32[$pcmd$011 + 12 >> 2] - $108), ~~($111 - +HEAPF32[$pcmd$011 + 8 >> 2]), 0);
      $122 = HEAP32[$pcmd$011 >> 2] | 0;
      HEAP32[$0 >> 2] = $elmOffset$110;
      HEAP32[$87 >> 2] = $122;
      __ZN5Oryol3Gfx4DrawERKNS_14PrimitiveGroupE($0);
      $$pre$phiZ2D = $pcmd$011;
     } else {
      FUNCTION_TABLE_vii[$105 & 63]($97, $pcmd$011);
      $$pre$phiZ2D = $pcmd$011;
     }
     $124 = (HEAP32[$$pre$phiZ2D >> 2] | 0) + $elmOffset$110 | 0;
     $pcmd$011 = $pcmd$011 + 32 | 0;
     if (($pcmd$011 | 0) == ($101 | 0)) {
      $elmOffset$1$lcssa = $124;
      break;
     } else $elmOffset$110 = $124;
    }
   }
   $cmdListIndex$013 = $cmdListIndex$013 + 1 | 0;
   if (($cmdListIndex$013 | 0) == ($numCmdLists$0$lcssa | 0)) break; else $elmOffset$012 = $elmOffset$1$lcssa;
  }
 }
 $90 = ~~+HEAPF32[(__ZN5ImGui5GetIOEv() | 0) >> 2];
 __ZN5Oryol3Gfx16ApplyScissorRectEiiiib(0, 0, $90, ~~+HEAPF32[(__ZN5ImGui5GetIOEv() | 0) + 4 >> 2], 0);
 STACKTOP = sp;
 return;
}

function __ZN10ImGuiStateC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $42 = 0, $50 = 0, $52 = 0, $53 = 0, $62 = 0, $63 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $76 = 0, $77 = 0, $79 = 0, $83 = 0, $87 = 0, $88 = 0, $93 = 0, $i1$012$i = 0, dest = 0, stop = 0;
 $0 = $this + 4 | 0;
 _memset($0 | 0, 0, 5040) | 0;
 HEAP32[$0 >> 2] = -1082130432;
 HEAP32[$this + 8 >> 2] = -1082130432;
 HEAPF32[$this + 12 >> 2] = .01666666753590107;
 HEAPF32[$this + 16 >> 2] = 5.0;
 HEAP32[$this + 20 >> 2] = 124126;
 HEAP32[$this + 24 >> 2] = 124136;
 HEAP32[$this + 128 >> 2] = 161580;
 HEAPF32[$this + 132 >> 2] = 1.0;
 HEAP32[$this + 140 >> 2] = 1065353216;
 HEAP32[$this + 144 >> 2] = 1065353216;
 HEAP32[$this + 192 >> 2] = -1082130432;
 HEAP32[$this + 196 >> 2] = -1082130432;
 HEAP32[$this + 788 >> 2] = -1082130432;
 HEAP32[$this + 792 >> 2] = -1082130432;
 HEAPF32[$this + 28 >> 2] = .30000001192092896;
 HEAPF32[$this + 32 >> 2] = 6.0;
 HEAPF32[$this + 36 >> 2] = 6.0;
 HEAPF32[$this + 908 >> 2] = -1.0;
 HEAPF32[$this + 888 >> 2] = -1.0;
 HEAPF32[$this + 912 >> 2] = -1.0;
 HEAPF32[$this + 892 >> 2] = -1.0;
 HEAPF32[$this + 916 >> 2] = -1.0;
 HEAPF32[$this + 896 >> 2] = -1.0;
 HEAPF32[$this + 920 >> 2] = -1.0;
 HEAPF32[$this + 900 >> 2] = -1.0;
 HEAPF32[$this + 924 >> 2] = -1.0;
 HEAPF32[$this + 904 >> 2] = -1.0;
 $i1$012$i = 0;
 do {
  HEAPF32[$this + 2996 + ($i1$012$i << 2) >> 2] = -1.0;
  HEAPF32[$this + 948 + ($i1$012$i << 2) >> 2] = -1.0;
  $i1$012$i = $i1$012$i + 1 | 0;
 } while (($i1$012$i | 0) != 512);
 dest = $this + 40 | 0;
 stop = dest + 76 | 0;
 do {
  HEAP32[dest >> 2] = -1;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF32[$this + 116 >> 2] = .25;
 HEAPF32[$this + 120 >> 2] = .05000000074505806;
 HEAP32[$this + 124 >> 2] = 0;
 HEAP32[$this + 164 >> 2] = 0;
 HEAP32[$this + 176 >> 2] = 37;
 HEAP32[$this + 180 >> 2] = 132;
 HEAP32[$this + 168 >> 2] = 1;
 HEAP32[$this + 172 >> 2] = 133;
 HEAP32[$this + 184 >> 2] = 42;
 __ZN10ImGuiStyleC2Ev($this + 5044 | 0);
 HEAPF32[$this + 5868 >> 2] = 0.0;
 HEAPF32[$this + 5864 >> 2] = 0.0;
 $42 = $this + 5888 | 0;
 HEAP32[$this + 5920 >> 2] = 0;
 HEAP32[$this + 5916 >> 2] = 0;
 HEAP32[$this + 5924 >> 2] = 0;
 HEAP32[$this + 5976 >> 2] = 0;
 HEAP32[$this + 5972 >> 2] = 0;
 HEAP32[$this + 5980 >> 2] = 0;
 $50 = $this + 6048 | 0;
 HEAP8[$this + 6100 >> 0] = 0;
 $52 = $this + 6104 | 0;
 HEAP32[$52 >> 2] = 0;
 HEAP32[$52 + 4 >> 2] = 0;
 HEAP32[$52 + 8 >> 2] = 0;
 HEAP32[$52 + 12 >> 2] = 0;
 $53 = $this + 6124 | 0;
 HEAP32[$42 >> 2] = 0;
 HEAP32[$42 + 4 >> 2] = 0;
 HEAP32[$42 + 8 >> 2] = 0;
 HEAP32[$42 + 12 >> 2] = 0;
 HEAP32[$42 + 16 >> 2] = 0;
 HEAP32[$42 + 20 >> 2] = 0;
 dest = $this + 5988 | 0;
 stop = dest + 84 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$53 >> 2] = 0;
 HEAP32[$this + 6120 >> 2] = 0;
 HEAP32[$this + 6128 >> 2] = 0;
 HEAP32[$this + 6136 >> 2] = 0;
 HEAP32[$this + 6132 >> 2] = 0;
 HEAP32[$this + 6140 >> 2] = 0;
 HEAP32[$this + 6148 >> 2] = 0;
 HEAP32[$this + 6144 >> 2] = 0;
 HEAP32[$this + 6152 >> 2] = 0;
 $62 = $this + 6160 | 0;
 $63 = $this + 6212 | 0;
 HEAP32[$this + 6260 >> 2] = 0;
 HEAP32[$this + 6256 >> 2] = 0;
 HEAP32[$this + 6264 >> 2] = 0;
 dest = $62;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $63;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN10ImDrawList5ClearEv($62);
 $68 = $this + 6328 | 0;
 dest = $this + 6276 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $69 = $this + 6380 | 0;
 dest = $68;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $70 = $this + 6432 | 0;
 dest = $69;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $71 = $this + 6484 | 0;
 dest = $70;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $72 = $this + 6536 | 0;
 dest = $71;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $73 = $this + 6588 | 0;
 dest = $72;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $74 = $this + 6636 | 0;
 dest = $73;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 _memset($74 | 0, 0, 3284) | 0;
 __ZN6ImFontC2Ev($this + 9920 | 0);
 $76 = $this + 10008 | 0;
 $77 = $this + 10020 | 0;
 $79 = $this + 11088 | 0;
 HEAP8[$this >> 0] = 0;
 $83 = $this + 5852 | 0;
 HEAP32[$83 >> 2] = 0;
 HEAP32[$83 + 4 >> 2] = 0;
 HEAP32[$83 + 8 >> 2] = 0;
 HEAP32[$83 + 12 >> 2] = 0;
 HEAP32[$83 + 16 >> 2] = 0;
 HEAP32[$83 + 20 >> 2] = 0;
 HEAP32[$83 + 24 >> 2] = 0;
 HEAP32[$76 >> 2] = 0;
 HEAP32[$76 + 4 >> 2] = 0;
 HEAP32[$76 + 8 >> 2] = 0;
 HEAP32[$79 >> 2] = 0;
 HEAP32[$79 + 4 >> 2] = 0;
 HEAP32[$79 + 8 >> 2] = 0;
 HEAP32[$this + 5884 >> 2] = -1;
 HEAP32[$this + 5880 >> 2] = -1;
 HEAP32[$this + 5912 >> 2] = 0;
 $87 = $this + 5928 | 0;
 $88 = $this + 5948 | 0;
 HEAP32[$this + 5964 >> 2] = 0;
 HEAP32[$this + 5968 >> 2] = 0;
 HEAPF32[$this + 5984 >> 2] = 0.0;
 HEAP8[$this + 6072 >> 0] = 0;
 $93 = $this + 6076 | 0;
 HEAP32[$this + 6096 >> 2] = 0;
 HEAP32[$this + 10004 >> 2] = 0;
 HEAP32[$87 >> 2] = 0;
 HEAP32[$87 + 4 >> 2] = 0;
 HEAP32[$87 + 8 >> 2] = 0;
 HEAP32[$87 + 12 >> 2] = 0;
 HEAP8[$87 + 16 >> 0] = 0;
 HEAP32[$88 >> 2] = 0;
 HEAP32[$88 + 4 >> 2] = 0;
 HEAP32[$88 + 8 >> 2] = 0;
 HEAP16[$88 + 12 >> 1] = 0;
 HEAP8[$88 + 14 >> 0] = 0;
 HEAP32[$50 >> 2] = 0;
 HEAP32[$50 + 4 >> 2] = 0;
 HEAP32[$50 + 8 >> 2] = 0;
 HEAP32[$50 + 12 >> 2] = 0;
 HEAP32[$93 >> 2] = 0;
 HEAP32[$93 + 4 >> 2] = 0;
 HEAP32[$93 + 8 >> 2] = 0;
 HEAP32[$93 + 12 >> 2] = 0;
 HEAP16[$93 + 16 >> 1] = 0;
 HEAP32[$77 >> 2] = 0;
 HEAP32[$77 + 4 >> 2] = 0;
 HEAP32[$77 + 8 >> 2] = 0;
 HEAP32[$77 + 12 >> 2] = 0;
 HEAP32[$77 + 16 >> 2] = 0;
 HEAPF32[$this + 10040 >> 2] = .009999999776482582;
 HEAPF32[$this + 10044 >> 2] = .009999999776482582;
 HEAPF32[$this + 10048 >> 2] = 10.0;
 _memset($this + 10052 | 0, 0, 1036) | 0;
 HEAP32[$this + 11096 >> 2] = -1082130432;
 HEAP32[$this + 11100 >> 2] = -1082130432;
 HEAP32[$79 >> 2] = -1082130432;
 HEAP32[$this + 11092 >> 2] = -1082130432;
 HEAPF32[$this + 6156 >> 2] = 0.0;
 HEAP32[$this + 6196 >> 2] = 124150;
 HEAP8[$this + 11104 >> 0] = 0;
 HEAP32[$this + 11108 >> 2] = 0;
 HEAP32[$this + 11112 >> 2] = 0;
 HEAP32[$this + 11116 >> 2] = 0;
 _memset($this + 6268 | 0, 0, 368) | 0;
 HEAP32[$this + 11120 >> 2] = 2;
 _memset($this + 11124 | 0, 0, 3563) | 0;
 return;
}

function __ZN5Oryol5_priv10glRenderer11applyMeshesEPNS0_8pipelineEPPNS0_4meshEi($this, $pip, $meshes, $numMeshes) {
 $this = $this | 0;
 $pip = $pip | 0;
 $meshes = $meshes | 0;
 $numMeshes = $numMeshes | 0;
 var $$pre$phi10Z2D = 0, $$pre$phiZ2D = 0, $107 = 0, $12 = 0, $138 = 0, $15 = 0, $19 = 0, $22 = 0, $27 = 0, $30 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $70 = 0, $73 = 0, $attrIndex$05 = 0, label = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 355, 67252);
  _abort();
 }
 if (!$pip) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67349, 0, 66399, 356, 67252);
  _abort();
 }
 if (!(HEAP32[$pip + 344 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67364, 0, 66399, 357, 67252);
  _abort();
 }
 if (!$meshes) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67384, 0, 66399, 358, 67252);
  _abort();
 }
 if (!(($numMeshes | 0) > 0 & (HEAP32[$meshes >> 2] | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67384, 0, 66399, 358, 67252);
  _abort();
 }
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 359, 67252);
  _abort();
 }
 $12 = HEAP32[$meshes >> 2] | 0;
 HEAP32[$this + 216 >> 2] = $12;
 $15 = HEAP8[$12 + 385 >> 0] | 0;
 if (($15 & 255) >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 67423);
  _abort();
 }
 $19 = HEAP32[$12 + 388 + (($15 & 255) << 2) >> 2] | 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 746, 67526);
  _abort();
 }
 $22 = $this + 296 | 0;
 if ((HEAP32[$22 >> 2] | 0) != ($19 | 0)) {
  HEAP32[$22 >> 2] = $19;
  _glBindBuffer(34963, $19 | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 751, 67526);
   _abort();
  }
 }
 $27 = $this + 292 | 0;
 $attrIndex$05 = 0;
 L29 : while (1) {
  $30 = $pip + 348 + ($attrIndex$05 << 4) | 0;
  $33 = HEAPU8[$pip + 348 + ($attrIndex$05 << 4) + 2 >> 0] | 0;
  if (($33 | 0) >= ($numMeshes | 0)) {
   label = 22;
   break;
  }
  $35 = $this + 432 + ($attrIndex$05 << 4) | 0;
  $37 = HEAP32[$meshes + ($33 << 2) >> 2] | 0;
  if (!$37) {
   label = 24;
   break;
  }
  $40 = HEAP8[$37 + 369 >> 0] | 0;
  if (($40 & 255) >= 2) {
   label = 26;
   break;
  }
  $44 = HEAP32[$37 + 372 + (($40 & 255) << 2) >> 2] | 0;
  $45 = $this + 688 + ($attrIndex$05 << 2) | 0;
  $46 = HEAP32[$45 >> 2] | 0;
  $47 = HEAP32[$30 >> 2] | 0;
  $48 = $47 & 255;
  $49 = HEAP32[$35 >> 2] | 0;
  if ($48 << 24 >> 24 == ($49 & 255) << 24 >> 24) if (($47 >>> 24 & 255) << 24 >> 24 == ($49 >>> 24 & 255) << 24 >> 24 & (($47 >>> 16 & 255) << 24 >> 24 == ($49 >>> 16 & 255) << 24 >> 24 ? (($47 & 65535) >>> 8 & 255) << 24 >> 24 == (($49 & 65535) >>> 8 & 255) << 24 >> 24 : 0)) {
   $70 = HEAP32[$pip + 348 + ($attrIndex$05 << 4) + 4 >> 2] | 0;
   $73 = HEAP32[$this + 432 + ($attrIndex$05 << 4) + 4 >> 2] | 0;
   if (($70 & 255) << 24 >> 24 == ($73 & 255) << 24 >> 24) if (($70 >>> 16 & 255) << 24 >> 24 == ($73 >>> 16 & 255) << 24 >> 24 ? (($70 & 65535) >>> 8 & 255) << 24 >> 24 == (($73 & 65535) >>> 8 & 255) << 24 >> 24 : 0) if ((HEAP32[$pip + 348 + ($attrIndex$05 << 4) + 8 >> 2] | 0) == (HEAP32[$this + 432 + ($attrIndex$05 << 4) + 8 >> 2] | 0)) {
    if (($44 | 0) != ($46 | 0) ? 1 : (HEAP32[$pip + 348 + ($attrIndex$05 << 4) + 12 >> 2] | 0) != (HEAP32[$this + 432 + ($attrIndex$05 << 4) + 12 >> 2] | 0)) label = 33;
   } else label = 33; else label = 33; else label = 33;
  } else label = 33; else label = 33;
  if ((label | 0) == 33) {
   label = 0;
   do if (!(HEAP8[$pip + 348 + ($attrIndex$05 << 4) + 1 >> 0] | 0)) {
    if (HEAP8[$this + 432 + ($attrIndex$05 << 4) + 1 >> 0] | 0) {
     _glDisableVertexAttribArray($47 & 255 | 0);
     if (_glGetError() | 0) {
      label = 48;
      break L29;
     }
    }
   } else {
    HEAP32[$45 >> 2] = $44;
    if (!(HEAP8[$this >> 0] | 0)) {
     label = 35;
     break L29;
    }
    if ((HEAP32[$27 >> 2] | 0) == ($44 | 0)) {
     $$pre$phi10Z2D = $30;
     $107 = $48;
    } else {
     HEAP32[$27 >> 2] = $44;
     _glBindBuffer(34962, $44 | 0);
     if (_glGetError() | 0) {
      label = 40;
      break L29;
     }
     $$pre$phi10Z2D = $30;
     $107 = HEAP8[$30 >> 0] | 0;
    }
    _glVertexAttribPointer($107 & 255 | 0, HEAPU8[$pip + 348 + ($attrIndex$05 << 4) + 5 >> 0] | 0, HEAP32[$pip + 348 + ($attrIndex$05 << 4) + 12 >> 2] | 0, HEAP8[$pip + 348 + ($attrIndex$05 << 4) + 6 >> 0] | 0, HEAPU8[$pip + 348 + ($attrIndex$05 << 4) + 4 >> 0] | 0, HEAP32[$pip + 348 + ($attrIndex$05 << 4) + 8 >> 2] | 0);
    if (_glGetError() | 0) {
     label = 42;
     break L29;
    }
    if (HEAP8[$this + 432 + ($attrIndex$05 << 4) + 1 >> 0] | 0) break;
    _glEnableVertexAttribArray(HEAPU8[$$pre$phi10Z2D >> 0] | 0);
    if (_glGetError() | 0) {
     label = 45;
     break L29;
    }
   } while (0);
   $138 = HEAP8[$pip + 348 + ($attrIndex$05 << 4) + 3 >> 0] | 0;
   if ((HEAP8[$this + 432 + ($attrIndex$05 << 4) + 3 >> 0] | 0) == $138 << 24 >> 24) $$pre$phiZ2D = $30; else {
    __ZN5Oryol5_priv5glExt19VertexAttribDivisorEjj(HEAPU8[$30 >> 0] | 0, $138 & 255);
    if (!(_glGetError() | 0)) $$pre$phiZ2D = $30; else {
     label = 52;
     break;
    }
   };
   HEAP32[$35 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
   HEAP32[$35 + 4 >> 2] = HEAP32[$$pre$phiZ2D + 4 >> 2];
   HEAP32[$35 + 8 >> 2] = HEAP32[$$pre$phiZ2D + 8 >> 2];
   HEAP32[$35 + 12 >> 2] = HEAP32[$$pre$phiZ2D + 12 >> 2];
  }
  $attrIndex$05 = $attrIndex$05 + 1 | 0;
  if (($attrIndex$05 | 0) >= 16) {
   label = 20;
   break;
  }
 }
 switch (label | 0) {
 case 20:
  {
   if (!(_glGetError() | 0)) return; else {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 437, 67252);
    _abort();
   }
   break;
  }
 case 22:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67581, 0, 66399, 370, 67252);
   _abort();
   break;
  }
 case 24:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67606, 0, 66399, 373, 67252);
   _abort();
   break;
  }
 case 26:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 67423);
   _abort();
   break;
  }
 case 35:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 734, 67610);
   _abort();
   break;
  }
 case 40:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 739, 67610);
   _abort();
   break;
  }
 case 42:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 384, 67252);
   _abort();
   break;
  }
 case 45:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 387, 67252);
   _abort();
   break;
  }
 case 48:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 393, 67252);
   _abort();
   break;
  }
 case 52:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 398, 67252);
   _abort();
   break;
  }
 }
}

function __ZNK6ImFont21CalcWordWrapPositionAEfPKcS1_f($this, $scale, $text, $text_end, $wrap_width) {
 $this = $this | 0;
 $scale = +$scale;
 $text = $text | 0;
 $text_end = $text_end | 0;
 $wrap_width = +$wrap_width;
 var $$lcssa132 = 0, $1 = 0, $11 = 0, $2 = 0, $22 = 0.0, $23 = 0.0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, $blank_width$0$ph36 = 0.0, $blank_width$030 = 0.0, $blank_width$030$lcssa128 = 0.0, $blank_width$2 = 0.0, $blank_width$3 = 0.0, $blank_width$4$ph = 0.0, $c = 0, $inside_word$0$off0$ph39 = 0, $inside_word$0$off031 = 0, $inside_word$0$off031$lcssa126 = 0, $inside_word$1 = 0, $inside_word$2$off0$ph = 0, $line_width$0$ph41 = 0.0, $line_width$033 = 0.0, $line_width$033$lcssa121 = 0.0, $line_width$2 = 0.0, $line_width$3 = 0.0, $line_width$4$ph = 0.0, $next_s$0 = 0, $next_s$0$lcssa134 = 0, $prev_word_end$0$ph38 = 0, $prev_word_end$1 = 0, $prev_word_end$2 = 0, $prev_word_end$2$lcssa = 0, $s$0$ph40 = 0, $s$032 = 0, $s$032$lcssa = 0, $s$032$lcssa123 = 0, $s$032$lcssa123$lcssa = 0, $s$4 = 0, $word_end$0$ph37 = 0, $word_end$1 = 0, $word_end$2 = 0, $word_end$2$lcssa = 0, $word_width$0$ph35 = 0.0, $word_width$029 = 0.0, $word_width$029$lcssa130 = 0.0, $word_width$1 = 0.0, $word_width$2 = 0.0, $word_width$2$lcssa = 0.0, $word_width$3$ph = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp;
 if ($text >>> 0 >= $text_end >>> 0) {
  $s$4 = $text;
  STACKTOP = sp;
  return $s$4 | 0;
 }
 $1 = $this + 60 | 0;
 $2 = $this + 68 | 0;
 $3 = $this + 56 | 0;
 $blank_width$0$ph36 = 0.0;
 $inside_word$0$off0$ph39 = 1;
 $line_width$0$ph41 = 0.0;
 $prev_word_end$0$ph38 = 0;
 $s$0$ph40 = $text;
 $word_end$0$ph37 = $text;
 $word_width$0$ph35 = 0.0;
 L4 : while (1) {
  $blank_width$030 = $blank_width$0$ph36;
  $inside_word$0$off031 = $inside_word$0$off0$ph39;
  $line_width$033 = $line_width$0$ph41;
  $s$032 = $s$0$ph40;
  $word_width$029 = $word_width$0$ph35;
  L6 : while (1) {
   $4 = HEAP8[$s$032 >> 0] | 0;
   $5 = $4 << 24 >> 24;
   HEAP32[$c >> 2] = $5;
   if ($4 << 24 >> 24 > -1) {
    $11 = $5;
    $next_s$0 = $s$032 + 1 | 0;
   } else {
    $9 = $s$032 + (__Z18ImTextCharFromUtf8PjPKcS1_($c, $s$032, $text_end) | 0) | 0;
    $11 = HEAP32[$c >> 2] | 0;
    $next_s$0 = $9;
   }
   if (!$11) {
    $s$032$lcssa = $s$032;
    label = 8;
    break L4;
   }
   if ($11 >>> 0 >= 32) {
    $$lcssa132 = $11;
    $blank_width$030$lcssa128 = $blank_width$030;
    $inside_word$0$off031$lcssa126 = $inside_word$0$off031;
    $line_width$033$lcssa121 = $line_width$033;
    $next_s$0$lcssa134 = $next_s$0;
    $s$032$lcssa123 = $s$032;
    $word_width$029$lcssa130 = $word_width$029;
    break;
   }
   switch ($11 | 0) {
   case 10:
    {
     $blank_width$4$ph = 0.0;
     $inside_word$2$off0$ph = 1;
     $line_width$4$ph = 0.0;
     $word_width$3$ph = 0.0;
     break;
    }
   case 13:
    {
     $blank_width$4$ph = $blank_width$030;
     $inside_word$2$off0$ph = $inside_word$0$off031;
     $line_width$4$ph = $line_width$033;
     $word_width$3$ph = $word_width$029;
     break;
    }
   default:
    {
     $$lcssa132 = $11;
     $blank_width$030$lcssa128 = $blank_width$030;
     $inside_word$0$off031$lcssa126 = $inside_word$0$off031;
     $line_width$033$lcssa121 = $line_width$033;
     $next_s$0$lcssa134 = $next_s$0;
     $s$032$lcssa123 = $s$032;
     $word_width$029$lcssa130 = $word_width$029;
     break L6;
    }
   }
   if ($next_s$0 >>> 0 < $text_end >>> 0) {
    $blank_width$030 = $blank_width$4$ph;
    $inside_word$0$off031 = $inside_word$2$off0$ph;
    $line_width$033 = $line_width$4$ph;
    $s$032 = $next_s$0;
    $word_width$029 = $word_width$3$ph;
   } else {
    $s$4 = $next_s$0;
    label = 24;
    break L4;
   }
  }
  if (($$lcssa132 | 0) < (HEAP32[$1 >> 2] | 0)) $22 = +HEAPF32[(HEAP32[$2 >> 2] | 0) + ($$lcssa132 << 2) >> 2] * $scale; else $22 = +HEAPF32[$3 >> 2];
  L22 : do if (($$lcssa132 | 0) < 32) switch ($$lcssa132 | 0) {
  case 9:
   {
    label = 16;
    break;
   }
  default:
   label = 17;
  } else if (($$lcssa132 | 0) < 12288) switch ($$lcssa132 | 0) {
  case 32:
   {
    label = 16;
    break L22;
    break;
   }
  default:
   {
    label = 17;
    break L22;
   }
  } else switch ($$lcssa132 | 0) {
  case 12288:
   {
    label = 16;
    break L22;
    break;
   }
  default:
   {
    label = 17;
    break L22;
   }
  } while (0);
  if ((label | 0) == 16) {
   label = 0;
   $blank_width$3 = ($inside_word$0$off031$lcssa126 ? 0.0 : $blank_width$030$lcssa128) + $22;
   $inside_word$1 = 0;
   $line_width$3 = $inside_word$0$off031$lcssa126 ? $blank_width$030$lcssa128 + $line_width$033$lcssa121 : $line_width$033$lcssa121;
   $prev_word_end$2 = $prev_word_end$0$ph38;
   $word_end$2 = $word_end$0$ph37;
   $word_width$2 = $word_width$029$lcssa130;
  } else if ((label | 0) == 17) {
   label = 0;
   $23 = $word_width$029$lcssa130 + $22;
   if ($inside_word$0$off031$lcssa126) {
    $blank_width$2 = $blank_width$030$lcssa128;
    $line_width$2 = $line_width$033$lcssa121;
    $prev_word_end$1 = $prev_word_end$0$ph38;
    $word_end$1 = $next_s$0$lcssa134;
    $word_width$1 = $23;
   } else {
    $blank_width$2 = 0.0;
    $line_width$2 = $line_width$033$lcssa121 + ($blank_width$030$lcssa128 + $23);
    $prev_word_end$1 = $word_end$0$ph37;
    $word_end$1 = $word_end$0$ph37;
    $word_width$1 = 0.0;
   }
   $blank_width$3 = $blank_width$2;
   $inside_word$1 = (($$lcssa132 | 0) == 34 | (($$lcssa132 | 0) == 63 | (($$lcssa132 | 0) == 33 | (($$lcssa132 | 0) == 59 | ($$lcssa132 | 2 | 0) == 46)))) & 1 ^ 1;
   $line_width$3 = $line_width$2;
   $prev_word_end$2 = $prev_word_end$1;
   $word_end$2 = $word_end$1;
   $word_width$2 = $word_width$1;
  }
  if ($word_width$2 + $line_width$3 >= $wrap_width) {
   $prev_word_end$2$lcssa = $prev_word_end$2;
   $s$032$lcssa123$lcssa = $s$032$lcssa123;
   $word_end$2$lcssa = $word_end$2;
   $word_width$2$lcssa = $word_width$2;
   label = 21;
   break;
  }
  if ($next_s$0$lcssa134 >>> 0 < $text_end >>> 0) {
   $blank_width$0$ph36 = $blank_width$3;
   $inside_word$0$off0$ph39 = $inside_word$1 << 24 >> 24 != 0;
   $line_width$0$ph41 = $line_width$3;
   $prev_word_end$0$ph38 = $prev_word_end$2;
   $s$0$ph40 = $next_s$0$lcssa134;
   $word_end$0$ph37 = $word_end$2;
   $word_width$0$ph35 = $word_width$2;
  } else {
   $s$4 = $next_s$0$lcssa134;
   label = 24;
   break;
  }
 }
 if ((label | 0) == 8) {
  $s$4 = $s$032$lcssa;
  STACKTOP = sp;
  return $s$4 | 0;
 } else if ((label | 0) == 21) {
  $s$4 = $word_width$2$lcssa < $wrap_width ? ($prev_word_end$2$lcssa | 0 ? $prev_word_end$2$lcssa : $word_end$2$lcssa) : $s$032$lcssa123$lcssa;
  STACKTOP = sp;
  return $s$4 | 0;
 } else if ((label | 0) == 24) {
  STACKTOP = sp;
  return $s$4 | 0;
 }
 return 0;
}

function __ZN5Oryol5_priv10glRenderer19invalidateMeshStateEv($this) {
 $this = $this | 0;
 var $$sroa$0 = 0, $10 = 0, $102 = 0, $103 = 0, $108 = 0, $109 = 0, $11 = 0, $116 = 0, $117 = 0, $122 = 0, $123 = 0, $130 = 0, $131 = 0, $136 = 0, $137 = 0, $144 = 0, $145 = 0, $150 = 0, $151 = 0, $158 = 0, $159 = 0, $164 = 0, $165 = 0, $172 = 0, $173 = 0, $178 = 0, $179 = 0, $18 = 0, $186 = 0, $187 = 0, $19 = 0, $192 = 0, $193 = 0, $200 = 0, $201 = 0, $206 = 0, $207 = 0, $214 = 0, $215 = 0, $220 = 0, $221 = 0, $24 = 0, $25 = 0, $32 = 0, $33 = 0, $38 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $52 = 0, $53 = 0, $60 = 0, $61 = 0, $66 = 0, $67 = 0, $74 = 0, $75 = 0, $80 = 0, $81 = 0, $88 = 0, $89 = 0, $94 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$sroa$0 = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 719, 66756);
  _abort();
 } else {
  _glBindBuffer(34962, 0);
  _glBindBuffer(34963, 0);
  HEAP32[$this + 292 >> 2] = 0;
  HEAP32[$this + 296 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $4 = $this + 432 | 0;
  $5 = $$sroa$0;
  $10 = HEAP32[$5 + 4 >> 2] | 0;
  $11 = $4;
  HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$11 + 4 >> 2] = $10;
  HEAP32[$4 + 8 >> 2] = 0;
  HEAP32[$4 + 12 >> 2] = 0;
  HEAP32[$this + 688 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $18 = $this + 448 | 0;
  $19 = $$sroa$0;
  $24 = HEAP32[$19 + 4 >> 2] | 0;
  $25 = $18;
  HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$25 + 4 >> 2] = $24;
  HEAP32[$18 + 8 >> 2] = 0;
  HEAP32[$18 + 12 >> 2] = 0;
  HEAP32[$this + 692 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $32 = $this + 464 | 0;
  $33 = $$sroa$0;
  $38 = HEAP32[$33 + 4 >> 2] | 0;
  $39 = $32;
  HEAP32[$39 >> 2] = HEAP32[$33 >> 2];
  HEAP32[$39 + 4 >> 2] = $38;
  HEAP32[$32 + 8 >> 2] = 0;
  HEAP32[$32 + 12 >> 2] = 0;
  HEAP32[$this + 696 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $46 = $this + 480 | 0;
  $47 = $$sroa$0;
  $52 = HEAP32[$47 + 4 >> 2] | 0;
  $53 = $46;
  HEAP32[$53 >> 2] = HEAP32[$47 >> 2];
  HEAP32[$53 + 4 >> 2] = $52;
  HEAP32[$46 + 8 >> 2] = 0;
  HEAP32[$46 + 12 >> 2] = 0;
  HEAP32[$this + 700 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $60 = $this + 496 | 0;
  $61 = $$sroa$0;
  $66 = HEAP32[$61 + 4 >> 2] | 0;
  $67 = $60;
  HEAP32[$67 >> 2] = HEAP32[$61 >> 2];
  HEAP32[$67 + 4 >> 2] = $66;
  HEAP32[$60 + 8 >> 2] = 0;
  HEAP32[$60 + 12 >> 2] = 0;
  HEAP32[$this + 704 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $74 = $this + 512 | 0;
  $75 = $$sroa$0;
  $80 = HEAP32[$75 + 4 >> 2] | 0;
  $81 = $74;
  HEAP32[$81 >> 2] = HEAP32[$75 >> 2];
  HEAP32[$81 + 4 >> 2] = $80;
  HEAP32[$74 + 8 >> 2] = 0;
  HEAP32[$74 + 12 >> 2] = 0;
  HEAP32[$this + 708 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $88 = $this + 528 | 0;
  $89 = $$sroa$0;
  $94 = HEAP32[$89 + 4 >> 2] | 0;
  $95 = $88;
  HEAP32[$95 >> 2] = HEAP32[$89 >> 2];
  HEAP32[$95 + 4 >> 2] = $94;
  HEAP32[$88 + 8 >> 2] = 0;
  HEAP32[$88 + 12 >> 2] = 0;
  HEAP32[$this + 712 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $102 = $this + 544 | 0;
  $103 = $$sroa$0;
  $108 = HEAP32[$103 + 4 >> 2] | 0;
  $109 = $102;
  HEAP32[$109 >> 2] = HEAP32[$103 >> 2];
  HEAP32[$109 + 4 >> 2] = $108;
  HEAP32[$102 + 8 >> 2] = 0;
  HEAP32[$102 + 12 >> 2] = 0;
  HEAP32[$this + 716 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $116 = $this + 560 | 0;
  $117 = $$sroa$0;
  $122 = HEAP32[$117 + 4 >> 2] | 0;
  $123 = $116;
  HEAP32[$123 >> 2] = HEAP32[$117 >> 2];
  HEAP32[$123 + 4 >> 2] = $122;
  HEAP32[$116 + 8 >> 2] = 0;
  HEAP32[$116 + 12 >> 2] = 0;
  HEAP32[$this + 720 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $130 = $this + 576 | 0;
  $131 = $$sroa$0;
  $136 = HEAP32[$131 + 4 >> 2] | 0;
  $137 = $130;
  HEAP32[$137 >> 2] = HEAP32[$131 >> 2];
  HEAP32[$137 + 4 >> 2] = $136;
  HEAP32[$130 + 8 >> 2] = 0;
  HEAP32[$130 + 12 >> 2] = 0;
  HEAP32[$this + 724 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $144 = $this + 592 | 0;
  $145 = $$sroa$0;
  $150 = HEAP32[$145 + 4 >> 2] | 0;
  $151 = $144;
  HEAP32[$151 >> 2] = HEAP32[$145 >> 2];
  HEAP32[$151 + 4 >> 2] = $150;
  HEAP32[$144 + 8 >> 2] = 0;
  HEAP32[$144 + 12 >> 2] = 0;
  HEAP32[$this + 728 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $158 = $this + 608 | 0;
  $159 = $$sroa$0;
  $164 = HEAP32[$159 + 4 >> 2] | 0;
  $165 = $158;
  HEAP32[$165 >> 2] = HEAP32[$159 >> 2];
  HEAP32[$165 + 4 >> 2] = $164;
  HEAP32[$158 + 8 >> 2] = 0;
  HEAP32[$158 + 12 >> 2] = 0;
  HEAP32[$this + 732 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $172 = $this + 624 | 0;
  $173 = $$sroa$0;
  $178 = HEAP32[$173 + 4 >> 2] | 0;
  $179 = $172;
  HEAP32[$179 >> 2] = HEAP32[$173 >> 2];
  HEAP32[$179 + 4 >> 2] = $178;
  HEAP32[$172 + 8 >> 2] = 0;
  HEAP32[$172 + 12 >> 2] = 0;
  HEAP32[$this + 736 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $186 = $this + 640 | 0;
  $187 = $$sroa$0;
  $192 = HEAP32[$187 + 4 >> 2] | 0;
  $193 = $186;
  HEAP32[$193 >> 2] = HEAP32[$187 >> 2];
  HEAP32[$193 + 4 >> 2] = $192;
  HEAP32[$186 + 8 >> 2] = 0;
  HEAP32[$186 + 12 >> 2] = 0;
  HEAP32[$this + 740 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $200 = $this + 656 | 0;
  $201 = $$sroa$0;
  $206 = HEAP32[$201 + 4 >> 2] | 0;
  $207 = $200;
  HEAP32[$207 >> 2] = HEAP32[$201 >> 2];
  HEAP32[$207 + 4 >> 2] = $206;
  HEAP32[$200 + 8 >> 2] = 0;
  HEAP32[$200 + 12 >> 2] = 0;
  HEAP32[$this + 744 >> 2] = 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $214 = $this + 672 | 0;
  $215 = $$sroa$0;
  $220 = HEAP32[$215 + 4 >> 2] | 0;
  $221 = $214;
  HEAP32[$221 >> 2] = HEAP32[$215 >> 2];
  HEAP32[$221 + 4 >> 2] = $220;
  HEAP32[$214 + 8 >> 2] = 0;
  HEAP32[$214 + 12 >> 2] = 0;
  HEAP32[$this + 748 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
}

function __ZN7YakcApp6OnInitEv($this) {
 $this = $this | 0;
 var $$pre$i$i = 0, $$pre4$i$i$i$i = 0, $$pre5$i$i2$pre$phi$i$iZZZZ2D = 0, $$pre5$i$i2$pre$phiZZZZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $25 = 0, $26 = 0, $3 = 0, $35 = 0, $4 = 0, $40 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $56 = 0, $59 = 0, $6 = 0, $64 = 0, $66 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $8 = 0, $84 = 0, $88 = 0, $9 = 0, $90 = 0, $91 = 0, $96 = 0, $99 = 0, $baseUrl = 0, $i$01$i$i$i$i = 0, $ioSetup = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $0 = sp + 48 | 0;
 $baseUrl = sp + 256 | 0;
 $ioSetup = sp + 192 | 0;
 $1 = sp + 248 | 0;
 $3 = sp;
 $4 = sp + 184 | 0;
 $5 = sp + 176 | 0;
 $6 = sp + 168 | 0;
 $7 = sp + 264 | 0;
 __ZN5Oryol6StringC2EPKc($baseUrl, 14330);
 HEAP32[$ioSetup >> 2] = 0;
 HEAP32[$ioSetup + 4 >> 2] = 0;
 HEAP32[$ioSetup + 8 >> 2] = 0;
 HEAP32[$ioSetup + 12 >> 2] = 0;
 $8 = $ioSetup + 16 | 0;
 HEAP32[$8 >> 2] = 16;
 $9 = $ioSetup + 20 | 0;
 HEAP32[$9 >> 2] = 65536;
 HEAP8[$ioSetup + 24 >> 0] = 0;
 $11 = $ioSetup + 28 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 $12 = $ioSetup + 44 | 0;
 HEAP32[$12 >> 2] = 16;
 $13 = $ioSetup + 48 | 0;
 HEAP32[$13 >> 2] = 65536;
 HEAP8[$ioSetup + 52 >> 0] = 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 14353);
 $15 = $3 + 16 | 0;
 HEAP32[$15 >> 2] = $3;
 HEAP32[$3 >> 2] = 312;
 $16 = sp + 24 + 16 | 0;
 $17 = __Znwj(32) | 0;
 HEAP32[$17 >> 2] = 348;
 $18 = $17 + 8 | 0;
 HEAP32[$17 + 24 >> 2] = $18;
 HEAP32[$18 >> 2] = 312;
 HEAP32[$16 >> 2] = $17;
 __ZN5Oryol10StringAtom4copyERKS0_($0, $1);
 $20 = $0 + 8 | 0;
 $25 = $0 + 24 | 0;
 HEAP32[$25 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 8 >> 2] & 63]($17) | 0;
 __ZN5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEE3AddEONS_12KeyValuePairIS1_S8_EE($11, $0);
 $26 = HEAP32[$25 >> 2] | 0;
 if (($26 | 0) == ($20 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$20 >> 2] | 0) + 16 >> 2] & 255]($26); else if ($26 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 255]($26);
 $35 = HEAP32[$16 >> 2] | 0;
 if ($35 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35 >> 2] | 0) + 20 >> 2] & 255]($35);
 $40 = HEAP32[$15 >> 2] | 0;
 if (($40 | 0) == ($3 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 16 >> 2] & 255]($3); else if ($40 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$40 >> 2] | 0) + 20 >> 2] & 255]($40);
 HEAP32[$1 >> 2] = 0;
 __ZN5Oryol6StringC2EPKc($4, 14358);
 __ZN5Oryol6StringC2ERKS0_($0, $4);
 $49 = $0 + 8 | 0;
 __ZN5Oryol6StringC2ERKS0_($49, $baseUrl);
 __ZN5Oryol3MapINS_6StringES1_E3AddEONS_12KeyValuePairIS1_S1_EE($ioSetup, $0);
 __ZN5Oryol6StringD2Ev($49);
 __ZN5Oryol6StringD2Ev($0);
 __ZN5Oryol6StringD2Ev($4);
 __ZN5Oryol6StringC2EPKc($5, 14363);
 __ZN5Oryol6StringC2ERKS0_($0, $5);
 $50 = $0 + 8 | 0;
 __ZN5Oryol6StringC2ERKS0_($50, $baseUrl);
 __ZN5Oryol3MapINS_6StringES1_E3AddEONS_12KeyValuePairIS1_S1_EE($ioSetup, $0);
 __ZN5Oryol6StringD2Ev($50);
 __ZN5Oryol6StringD2Ev($0);
 __ZN5Oryol6StringD2Ev($5);
 __ZN5Oryol2IO5SetupERKNS_7IOSetupE($ioSetup);
 __ZN5Oryol6StringC2EPKc($6, 14368);
 __ZN5Oryol8GfxSetup6WindowEiiNS_6StringE($0, 660, 532, $6);
 __ZN5Oryol6StringD2Ev($6);
 __ZN5Oryol8GfxSetup11SetPoolSizeENS_15GfxResourceType4CodeEi($0, 1, 4);
 __ZN5Oryol8GfxSetup11SetPoolSizeENS_15GfxResourceType4CodeEi($0, 0, 4);
 __ZN5Oryol8GfxSetup11SetPoolSizeENS_15GfxResourceType4CodeEi($0, 3, 4);
 __ZN5Oryol8GfxSetup11SetPoolSizeENS_15GfxResourceType4CodeEi($0, 2, 4);
 __ZN5Oryol3Gfx5SetupERKNS_8GfxSetupE($0);
 HEAP8[$7 >> 0] = 1;
 HEAP8[$7 + 1 >> 0] = 1;
 HEAP8[$7 + 2 >> 0] = 1;
 HEAP8[$7 + 3 >> 0] = 1;
 HEAP8[$7 + 4 >> 0] = 1;
 HEAP8[$7 + 5 >> 0] = 1;
 __ZN5Oryol5Input5SetupERKNS_10InputSetupE($7);
 __ZN5Oryol5Input16BeginCaptureTextEv();
 __ZN7YakcApp8initRomsEv($this);
 $51 = $this + 40 | 0;
 __ZN4yakc4kc857poweronENS_10kc85_modelENS_9kc85_caosE($51, 2, 2);
 __ZN4Draw5SetupERKN5Oryol8GfxSetupEi($this + 725584 | 0, $0, 10);
 $53 = $this + 726552 | 0;
 __ZN5Audio5SetupERN4yakc4kc85E($53, $51);
 __ZN7YakcApp11initModulesEv($this);
 __ZN2UI5SetupERN4yakc4kc85EP5Audio($this + 853056 | 0, $51, $53);
 __ZN4yakc8kc85_exp13insert_moduleEhNS0_11module_typeE($this + 462912 | 0, 8, 4);
 $56 = __ZN5Oryol5Clock3NowEv() | 0;
 $59 = $this + 1904152 | 0;
 HEAP32[$59 >> 2] = $56;
 HEAP32[$59 + 4 >> 2] = tempRet0;
 __ZN5Oryol6StringD2Ev($0 + 28 | 0);
 HEAP32[$12 >> 2] = 0;
 HEAP32[$13 >> 2] = 0;
 $64 = HEAP32[$11 >> 2] | 0;
 $$pre4$i$i$i$i = $ioSetup + 36 | 0;
 if (!$64) $$pre5$i$i2$pre$phi$i$iZZZZ2D = $ioSetup + 40 | 0; else {
  $66 = HEAP32[$$pre4$i$i$i$i >> 2] | 0;
  $67 = $ioSetup + 40 | 0;
  if (($66 | 0) < (HEAP32[$67 >> 2] | 0)) {
   $72 = $64;
   $i$01$i$i$i$i = $66;
   while (1) {
    $74 = HEAP32[$72 + ($i$01$i$i$i$i << 5) + 24 >> 2] | 0;
    if (($74 | 0) == ($72 + ($i$01$i$i$i$i << 5) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$74 >> 2] | 0) + 16 >> 2] & 255]($74); else if ($74 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$74 >> 2] | 0) + 20 >> 2] & 255]($74);
    HEAP32[$72 + ($i$01$i$i$i$i << 5) >> 2] = 0;
    $84 = $i$01$i$i$i$i + 1 | 0;
    if (($84 | 0) >= (HEAP32[$67 >> 2] | 0)) break;
    $72 = HEAP32[$11 >> 2] | 0;
    $i$01$i$i$i$i = $84;
   }
   $70 = HEAP32[$11 >> 2] | 0;
  } else $70 = $64;
  __ZN5Oryol6Memory4FreeEPv($70);
  $$pre5$i$i2$pre$phi$i$iZZZZ2D = $67;
 }
 HEAP32[$11 >> 2] = 0;
 HEAP32[$ioSetup + 32 >> 2] = 0;
 HEAP32[$$pre4$i$i$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$9 >> 2] = 0;
 $88 = HEAP32[$ioSetup >> 2] | 0;
 if (!$88) {
  $$pre5$i$i2$pre$phiZZZZ2D = $ioSetup + 12 | 0;
  HEAP32[$$pre5$i$i2$pre$phiZZZZ2D >> 2] = 0;
  __ZN5Oryol6StringD2Ev($baseUrl);
  STACKTOP = sp;
  return 4;
 }
 $90 = HEAP32[$ioSetup + 8 >> 2] | 0;
 $91 = $ioSetup + 12 | 0;
 if (($90 | 0) < (HEAP32[$91 >> 2] | 0)) {
  __ZN5Oryol6StringD2Ev($88 + ($90 << 4) + 8 | 0);
  __ZN5Oryol6StringD2Ev($88 + ($90 << 4) | 0);
  $96 = $90 + 1 | 0;
  if (($96 | 0) < (HEAP32[$91 >> 2] | 0)) {
   $101 = $96;
   do {
    $$pre$i$i = HEAP32[$ioSetup >> 2] | 0;
    __ZN5Oryol6StringD2Ev($$pre$i$i + ($101 << 4) + 8 | 0);
    __ZN5Oryol6StringD2Ev($$pre$i$i + ($101 << 4) | 0);
    $101 = $101 + 1 | 0;
   } while (($101 | 0) < (HEAP32[$91 >> 2] | 0));
  }
  $99 = HEAP32[$ioSetup >> 2] | 0;
 } else $99 = $88;
 __ZN5Oryol6Memory4FreeEPv($99);
 $$pre5$i$i2$pre$phiZZZZ2D = $91;
 HEAP32[$$pre5$i$i2$pre$phiZZZZ2D >> 2] = 0;
 __ZN5Oryol6StringD2Ev($baseUrl);
 STACKTOP = sp;
 return 4;
}

function __ZN11ImGuiWindowC2EPKc($this, $name) {
 $this = $this | 0;
 $name = $name | 0;
 var $0 = 0, $1 = 0, $114 = 0, $119 = 0, $120 = 0, $121 = 0, $13 = 0, $17 = 0, $18 = 0, $2 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $44 = 0, $45 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $56 = 0, $6 = 0, $61 = 0, $62 = 0, $65 = 0, $7 = 0, $70 = 0, $74 = 0, $76 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $91 = 0, dest = 0, stop = 0;
 $0 = $this + 12 | 0;
 $1 = $this + 72 | 0;
 $2 = $this + 76 | 0;
 $3 = $this + 80 | 0;
 $4 = $this + 84 | 0;
 $5 = $this + 88 | 0;
 $6 = $this + 92 | 0;
 $7 = $this + 100 | 0;
 HEAPF32[$this + 104 >> 2] = 0.0;
 HEAPF32[$7 >> 2] = 0.0;
 HEAP32[$this + 252 >> 2] = 0;
 HEAP32[$this + 248 >> 2] = 0;
 HEAP32[$this + 256 >> 2] = 0;
 $13 = $this + 280 | 0;
 HEAP32[$this + 416 >> 2] = 0;
 HEAP32[$this + 412 >> 2] = 0;
 HEAP32[$this + 420 >> 2] = 0;
 $17 = $this + 212 | 0;
 dest = $this + 164 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $13;
 stop = dest + 60 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $0;
 stop = dest + 56 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 HEAPF32[$17 >> 2] = -1.0;
 $18 = $this + 216 | 0;
 HEAPF32[$this + 244 >> 2] = 0.0;
 HEAP32[$this + 260 >> 2] = 0;
 HEAP32[$this + 264 >> 2] = 0;
 HEAPF32[$this + 268 >> 2] = 0.0;
 HEAP8[$this + 277 >> 0] = 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$18 + 4 >> 2] = 0;
 HEAP32[$18 + 8 >> 2] = 0;
 HEAP32[$18 + 12 >> 2] = 0;
 HEAP32[$18 + 16 >> 2] = 0;
 HEAP32[$18 + 20 >> 2] = 0;
 HEAP16[$18 + 24 >> 1] = 0;
 HEAP8[$18 + 26 >> 0] = 0;
 HEAP8[$this + 276 >> 0] = 1;
 HEAPF32[$this + 272 >> 2] = -1.0;
 $27 = $this + 380 | 0;
 dest = $this + 340 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$27 >> 2] = 1;
 $28 = $this + 384 | 0;
 HEAP32[$28 >> 2] = 0;
 HEAP32[$28 + 4 >> 2] = 0;
 HEAP32[$28 + 8 >> 2] = 0;
 HEAP32[$28 + 12 >> 2] = 0;
 HEAP32[$28 + 16 >> 2] = 0;
 HEAP8[$this + 404 >> 0] = 1;
 HEAP32[$this + 408 >> 2] = 0;
 $31 = $this + 428 | 0;
 HEAP32[$31 >> 2] = 0;
 $32 = $this + 424 | 0;
 HEAP32[$32 >> 2] = 0;
 $33 = $this + 432 | 0;
 HEAP32[$33 >> 2] = 0;
 HEAPF32[$this + 436 >> 2] = 3402823466385288598117041.0e14;
 HEAPF32[$this + 440 >> 2] = 3402823466385288598117041.0e14;
 HEAPF32[$this + 444 >> 2] = -3402823466385288598117041.0e14;
 HEAPF32[$this + 448 >> 2] = -3402823466385288598117041.0e14;
 HEAPF32[$this + 452 >> 2] = 3402823466385288598117041.0e14;
 HEAPF32[$this + 456 >> 2] = 3402823466385288598117041.0e14;
 HEAPF32[$this + 460 >> 2] = -3402823466385288598117041.0e14;
 HEAPF32[$this + 464 >> 2] = -3402823466385288598117041.0e14;
 dest = $this + 476 | 0;
 stop = dest + 92 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $44 = (_strlen($name) | 0) + 1 | 0;
 $45 = 147664;
 HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 1;
 $50 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($44) | 0;
 _memcpy($50 | 0, $name | 0, $44 | 0) | 0;
 HEAP32[$this >> 2] = $50;
 $51 = __Z6ImHashPKvij($name, 0, 0) | 0;
 $52 = $this + 4 | 0;
 HEAP32[$52 >> 2] = $51;
 $53 = HEAP32[$32 >> 2] | 0;
 if (($53 | 0) == (HEAP32[$31 >> 2] | 0)) {
  $56 = $53 + 1 | 0;
  if (!$53) $61 = 8; else $61 = (($53 | 0) / 2 | 0) + $53 | 0;
  $62 = ($61 | 0) > ($56 | 0) ? $61 : $56;
  if (($53 | 0) < ($62 | 0)) {
   $65 = 147664;
   HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 1;
   $70 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($62 << 2) | 0;
   _memcpy($70 | 0, HEAP32[$33 >> 2] | 0, HEAP32[$32 >> 2] << 2 | 0) | 0;
   $74 = HEAP32[$33 >> 2] | 0;
   if ($74 | 0) {
    $76 = 147664;
    HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($74);
   HEAP32[$33 >> 2] = $70;
   HEAP32[$31 >> 2] = $62;
   $82 = HEAP32[$32 >> 2] | 0;
   $85 = HEAP32[$52 >> 2] | 0;
  } else {
   $82 = $53;
   $85 = $51;
  }
 } else {
  $82 = $53;
  $85 = $51;
 }
 HEAP32[$32 >> 2] = $82 + 1;
 $83 = HEAP32[$33 >> 2] | 0;
 HEAP32[$83 + ($82 << 2) >> 2] = $85;
 $86 = HEAP32[$32 >> 2] | 0;
 if (($86 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $91 = __Z6ImHashPKvij(124740, 0, HEAP32[$83 + ($86 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($91 | 0)) HEAP8[152852] = 1;
 HEAP32[$this + 68 >> 2] = $91;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 dest = $this + 8 | 0;
 stop = dest + 60 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 >> 2] = 2139095039;
 HEAP32[$4 >> 2] = 2139095039;
 HEAP32[$5 >> 2] = 1056964608;
 HEAP32[$6 >> 2] = 1056964608;
 HEAP8[$this + 97 >> 0] = 0;
 HEAP8[$this + 96 >> 0] = 0;
 HEAP32[$this + 120 >> 2] = 0;
 HEAP32[$this + 124 >> 2] = 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP8[$7 + 16 >> 0] = 0;
 HEAP32[$this + 132 >> 2] = -1;
 HEAP32[$this + 128 >> 2] = -1;
 HEAP8[$this + 136 >> 0] = 0;
 HEAP32[$this + 140 >> 2] = -1;
 HEAP32[$this + 144 >> 2] = 0;
 HEAP32[$this + 156 >> 2] = 15;
 HEAP32[$this + 152 >> 2] = 15;
 HEAP32[$this + 148 >> 2] = 15;
 HEAP8[$this + 160 >> 0] = 0;
 HEAP32[$this + 468 >> 2] = -1;
 HEAPF32[$this + 472 >> 2] = 0.0;
 HEAPF32[$this + 568 >> 2] = 1.0;
 $114 = 147664;
 HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 1;
 $119 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63](108) | 0;
 $120 = $this + 572 | 0;
 HEAP32[$120 >> 2] = $119;
 $121 = $119 + 52 | 0;
 HEAP32[$119 + 100 >> 2] = 0;
 HEAP32[$119 + 96 >> 2] = 0;
 HEAP32[$119 + 104 >> 2] = 0;
 dest = $119;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $121;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN10ImDrawList5ClearEv($119);
 HEAP32[(HEAP32[$120 >> 2] | 0) + 36 >> 2] = HEAP32[$this >> 2];
 HEAP32[$this + 576 >> 2] = 0;
 HEAP32[$this + 580 >> 2] = 0;
 HEAP32[$this + 588 >> 2] = -1;
 HEAP32[$this + 584 >> 2] = -1;
 HEAP32[$this + 596 >> 2] = 2147483647;
 HEAP32[$this + 592 >> 2] = 2147483647;
 HEAP32[$this + 604 >> 2] = 2147483647;
 HEAP32[$this + 600 >> 2] = 2147483647;
 return;
}

function __ZN5Oryol5_priv8ioWorker5onMsgERKNS_3PtrINS0_5ioMsgEEE($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $103 = 0, $104 = 0, $105 = 0, $108 = 0, $109 = 0, $114 = 0, $117 = 0, $121 = 0, $13 = 0, $17 = 0, $18 = 0, $22 = 0, $27 = 0, $28 = 0, $32 = 0, $34 = 0, $35 = 0, $39 = 0, $45 = 0, $51 = 0, $53 = 0, $54 = 0, $58 = 0, $64 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $75 = 0, $76 = 0, $80 = 0, $81 = 0, $85 = 0, $91 = 0, $93 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP32[$msg >> 2] | 0;
 if (!$1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107078);
  _abort();
 }
 if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 31]($1, 163342) | 0) {
  $7 = HEAP32[$msg >> 2] | 0;
  if (!$7) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107078);
   _abort();
  }
  if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$7 >> 2] | 0) + 4 >> 2] & 31]($7, 163342) | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107159);
   _abort();
  }
  $13 = $7 + 4 | 0;
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 1;
  HEAP32[$0 >> 2] = $7;
  $17 = HEAP32[$0 >> 2] | 0;
  $18 = ($17 | 0) == 0;
  do if (!(HEAP8[$7 + 9 >> 0] & 1)) {
   if ($18) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107159);
    _abort();
   }
   $22 = __ZN5Oryol5_priv8ioWorker16fileSystemForURLERKNS_3URLE($this, $17 + 12 | 0) | 0;
   if ($22 | 0) {
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 20 >> 2] & 63]($22, $0);
    $27 = $22 + 4 | 0;
    $28 = HEAP32[$27 >> 2] | 0;
    HEAP32[$27 >> 2] = $28 - 1;
    if (($28 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$22 >> 2] >> 2] & 255]($22);
   }
  } else if ($18) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107159);
   _abort();
  } else {
   HEAP32[$17 + 72 >> 2] = 1e3;
   HEAP8[$17 + 8 >> 0] = 1;
   break;
  } while (0);
  $32 = HEAP32[$0 >> 2] | 0;
  if ($32 | 0) {
   $34 = $32 + 4 | 0;
   $35 = HEAP32[$34 >> 2] | 0;
   HEAP32[$34 >> 2] = $35 - 1;
   if (($35 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$32 >> 2] >> 2] & 255]($32);
   HEAP32[$0 >> 2] = 0;
  }
  STACKTOP = sp;
  return;
 }
 $39 = HEAP32[$msg >> 2] | 0;
 if (!$39) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107078);
  _abort();
 }
 if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$39 >> 2] | 0) + 4 >> 2] & 31]($39, 163338) | 0)) {
  STACKTOP = sp;
  return;
 }
 $45 = HEAP32[$msg >> 2] | 0;
 if (!$45) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107078);
  _abort();
 }
 if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$45 >> 2] | 0) + 4 >> 2] & 31]($45, 163338) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107677);
  _abort();
 }
 $51 = $45 + 4 | 0;
 HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + 1;
 $53 = $45 + 12 | 0;
 $54 = HEAP32[$51 >> 2] | 0;
 HEAP32[$51 >> 2] = $54 - 1;
 if (($54 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$45 >> 2] >> 2] & 255]($45);
 $58 = HEAP32[$msg >> 2] | 0;
 if (!$58) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107078);
  _abort();
 }
 do if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$58 >> 2] | 0) + 4 >> 2] & 31]($58, 163340) | 0) {
  $64 = $this + 8 | 0;
  if (__ZNK5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE8ContainsERKS1_($64, $53) | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(107760, 0, 105697, 190, 107799);
   _abort();
  }
  $68 = __ZNK5Oryol5_priv14schemeRegistry16CreateFileSystemERKNS_10StringAtomE(HEAP32[$this + 4 >> 2] | 0, $53) | 0;
  __ZN5Oryol10StringAtom4copyERKS0_($0, $53);
  $69 = $0 + 4 | 0;
  HEAP32[$69 >> 2] = $68;
  $70 = ($68 | 0) == 0;
  if (!$70) {
   $71 = $68 + 4 | 0;
   HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 1;
  }
  __ZN5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE3AddEONS_12KeyValuePairIS1_S4_EE($64, $0);
  $73 = HEAP32[$69 >> 2] | 0;
  if ($73 | 0) {
   $75 = $73 + 4 | 0;
   $76 = HEAP32[$75 >> 2] | 0;
   HEAP32[$75 >> 2] = $76 - 1;
   if (($76 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$73 >> 2] >> 2] & 255]($73);
   HEAP32[$69 >> 2] = 0;
  }
  if (!$70) {
   $80 = $68 + 4 | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   HEAP32[$80 >> 2] = $81 - 1;
   if (($81 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$68 >> 2] >> 2] & 255]($68);
  }
 } else {
  $85 = HEAP32[$msg >> 2] | 0;
  if (!$85) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107078);
   _abort();
  }
  if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$85 >> 2] | 0) + 4 >> 2] & 31]($85, 163343) | 0) {
   $91 = $this + 8 | 0;
   if (__ZNK5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE8ContainsERKS1_($91, $53) | 0) {
    __ZN5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE5EraseERKS1_($91, $53);
    break;
   } else {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(109162, 0, 105697, 195, 107799);
    _abort();
   }
  }
  $93 = HEAP32[$msg >> 2] | 0;
  if (!$93) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107078);
   _abort();
  }
  if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$93 >> 2] | 0) + 4 >> 2] & 31]($93, 163341) | 0) {
   $99 = $this + 8 | 0;
   if (!(__ZNK5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE8ContainsERKS1_($99, $53) | 0)) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(109162, 0, 105697, 199, 107799);
    _abort();
   }
   $103 = __ZNK5Oryol5_priv14schemeRegistry16CreateFileSystemERKNS_10StringAtomE(HEAP32[$this + 4 >> 2] | 0, $53) | 0;
   $104 = __ZN5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEEixERKS1_($99, $53) | 0;
   $105 = HEAP32[$104 >> 2] | 0;
   if (($103 | 0) == ($105 | 0)) {
    if (!$103) break;
    $$pre$phiZ2D = $103 + 4 | 0;
   } else {
    if ($105 | 0) {
     $108 = $105 + 4 | 0;
     $109 = HEAP32[$108 >> 2] | 0;
     HEAP32[$108 >> 2] = $109 - 1;
     if (($109 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$105 >> 2] >> 2] & 255]($105);
     HEAP32[$104 >> 2] = 0;
    }
    HEAP32[$104 >> 2] = $103;
    if (!$103) break;
    $114 = $103 + 4 | 0;
    HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 1;
    $$pre$phiZ2D = $114;
   }
   $117 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   HEAP32[$$pre$phiZ2D >> 2] = $117 - 1;
   if (($117 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$103 >> 2] >> 2] & 255]($103);
  }
 } while (0);
 $121 = HEAP32[$msg >> 2] | 0;
 if (!$121) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107078);
  _abort();
 }
 HEAP8[$121 + 8 >> 0] = 1;
 STACKTOP = sp;
 return;
}

function __ZN5ImGui16BeginMainMenuBarEv() {
 var $$0 = 0, $$0$i$ph$i = 0, $$0$i$ph$i$1 = 0, $$0$i1$ph$i = 0, $$0$i1$ph$i$1 = 0, $$pre$i = 0, $0 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0.0, $110 = 0, $111 = 0, $112 = 0, $114 = 0, $115 = 0, $121 = 0, $126 = 0, $127 = 0, $131 = 0, $139 = 0, $142 = 0, $143 = 0, $147 = 0, $15 = 0, $152 = 0, $153 = 0, $159 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $27 = 0, $28 = 0, $31 = 0, $36 = 0, $37 = 0, $41 = 0, $43 = 0, $49 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $64 = 0, $69 = 0, $70 = 0, $73 = 0, $78 = 0, $79 = 0, $83 = 0, $85 = 0, $91 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[38235] = 0;
 HEAP32[38236] = 0;
 HEAP32[38242] = 1;
 $11 = +HEAPF32[38188] + +HEAPF32[37993] * 2.0;
 HEAP32[38237] = HEAP32[36724];
 HEAPF32[38238] = $11;
 HEAP32[38243] = 1;
 $15 = 151956;
 $16 = HEAP32[$15 >> 2] | 0;
 $17 = 152892;
 $18 = HEAP32[$17 >> 2] | 0;
 $19 = 152896;
 if (($18 | 0) == (HEAP32[$19 >> 2] | 0)) {
  $22 = $18 + 1 | 0;
  if (!$18) $27 = 8; else $27 = (($18 | 0) / 2 | 0) + $18 | 0;
  $28 = ($27 | 0) > ($22 | 0) ? $27 : $22;
  if (($18 | 0) < ($28 | 0)) {
   $31 = 147664;
   HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
   $36 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($28 * 12 | 0) | 0;
   $37 = 152900;
   _memcpy($36 | 0, HEAP32[$37 >> 2] | 0, (HEAP32[$17 >> 2] | 0) * 12 | 0) | 0;
   $41 = HEAP32[$37 >> 2] | 0;
   if ($41 | 0) {
    $43 = 147664;
    HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($41);
   HEAP32[$37 >> 2] = $36;
   HEAP32[$19 >> 2] = $28;
   $49 = HEAP32[$17 >> 2] | 0;
  } else $49 = $18;
 } else $49 = $18;
 HEAP32[$17 >> 2] = $49 + 1;
 $51 = HEAP32[38225] | 0;
 HEAP32[$51 + ($49 * 12 | 0) >> 2] = 2;
 HEAP32[$51 + ($49 * 12 | 0) + 4 >> 2] = $16;
 HEAP32[$51 + ($49 * 12 | 0) + 8 >> 2] = 0;
 HEAPF32[$15 >> 2] = 0.0;
 $55 = 151948;
 $56 = HEAP32[$55 >> 2] | 0;
 $57 = 151952;
 $58 = HEAP32[$57 >> 2] | 0;
 $59 = 152892;
 $60 = HEAP32[$59 >> 2] | 0;
 $61 = 152896;
 if (($60 | 0) == (HEAP32[$61 >> 2] | 0)) {
  $64 = $60 + 1 | 0;
  if (!$60) $69 = 8; else $69 = (($60 | 0) / 2 | 0) + $60 | 0;
  $70 = ($69 | 0) > ($64 | 0) ? $69 : $64;
  if (($60 | 0) < ($70 | 0)) {
   $73 = 147664;
   HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 1;
   $78 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($70 * 12 | 0) | 0;
   $79 = 152900;
   _memcpy($78 | 0, HEAP32[$79 >> 2] | 0, (HEAP32[$59 >> 2] | 0) * 12 | 0) | 0;
   $83 = HEAP32[$79 >> 2] | 0;
   if ($83 | 0) {
    $85 = 147664;
    HEAP32[$85 >> 2] = (HEAP32[$85 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($83);
   HEAP32[$79 >> 2] = $78;
   HEAP32[$61 >> 2] = $70;
   $91 = HEAP32[$59 >> 2] | 0;
  } else $91 = $60;
 } else $91 = $60;
 HEAP32[$59 >> 2] = $91 + 1;
 $93 = HEAP32[38225] | 0;
 HEAP32[$93 + ($91 * 12 | 0) >> 2] = 3;
 HEAP32[$93 + ($91 * 12 | 0) + 4 >> 2] = $56;
 HEAP32[$93 + ($91 * 12 | 0) + 8 >> 2] = $58;
 HEAP32[$55 >> 2] = 0;
 HEAP32[$57 >> 2] = 0;
 HEAPF32[$0 >> 2] = 0.0;
 HEAPF32[$0 + 4 >> 2] = 0.0;
 if (__ZN5ImGui5BeginEPKcPbRK6ImVec2fi(127037, 0, $0, -1.0, 1295) | 0) if (__ZN5ImGui12BeginMenuBarEv() | 0) {
  $139 = (HEAP32[38201] | 0) + 244 | 0;
  HEAPF32[$139 >> 2] = +HEAPF32[38010] + +HEAPF32[$139 >> 2];
  $$0 = 1;
  STACKTOP = sp;
  return $$0 | 0;
 }
 __ZN5ImGui3EndEv();
 $100 = 152892;
 $101 = 152900;
 $$pre$i = HEAP32[$100 >> 2] | 0;
 $102 = 151940;
 $103 = 151948;
 $104 = 151968;
 $105 = 151980;
 $106 = 151988;
 $107 = 151936;
 $108 = 151956;
 $109 = 151964;
 $110 = 151976;
 $111 = 152008;
 $112 = 152024;
 if (($$pre$i | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $114 = $$pre$i + -1 | 0;
 $115 = HEAP32[$101 >> 2] | 0;
 switch (HEAP32[$115 + ($114 * 12 | 0) >> 2] | 0) {
 case 0:
  {
   $$0$i$ph$i = $107;
   label = 25;
   break;
  }
 case 2:
  {
   $$0$i$ph$i = $108;
   label = 25;
   break;
  }
 case 4:
  {
   $$0$i$ph$i = $109;
   label = 25;
   break;
  }
 case 6:
  {
   $$0$i$ph$i = $110;
   label = 25;
   break;
  }
 case 9:
  {
   $$0$i$ph$i = $111;
   label = 25;
   break;
  }
 case 10:
  {
   $$0$i$ph$i = $112;
   label = 25;
   break;
  }
 case 1:
  {
   $$0$i1$ph$i = $102;
   label = 30;
   break;
  }
 case 3:
  {
   $$0$i1$ph$i = $103;
   label = 30;
   break;
  }
 case 5:
  {
   $$0$i1$ph$i = $104;
   label = 30;
   break;
  }
 case 7:
  {
   $$0$i1$ph$i = $105;
   label = 30;
   break;
  }
 case 8:
  {
   $$0$i1$ph$i = $106;
   label = 30;
   break;
  }
 default:
  {}
 }
 if ((label | 0) == 25) HEAP32[$$0$i$ph$i >> 2] = HEAP32[$115 + ($114 * 12 | 0) + 4 >> 2]; else if ((label | 0) == 30) {
  $121 = $115 + ($114 * 12 | 0) + 4 | 0;
  $126 = HEAP32[$121 + 4 >> 2] | 0;
  $127 = $$0$i1$ph$i;
  HEAP32[$127 >> 2] = HEAP32[$121 >> 2];
  HEAP32[$127 + 4 >> 2] = $126;
 }
 $131 = HEAP32[$100 >> 2] | 0;
 if (($131 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 HEAP32[$100 >> 2] = $131 + -1;
 if (($131 | 0) <= 1) ___assert_fail(127436, 127226, 815, 127445);
 $142 = $131 + -2 | 0;
 $143 = HEAP32[$101 >> 2] | 0;
 switch (HEAP32[$143 + ($142 * 12 | 0) >> 2] | 0) {
 case 0:
  {
   $$0$i$ph$i$1 = $107;
   label = 47;
   break;
  }
 case 2:
  {
   $$0$i$ph$i$1 = $108;
   label = 47;
   break;
  }
 case 4:
  {
   $$0$i$ph$i$1 = $109;
   label = 47;
   break;
  }
 case 6:
  {
   $$0$i$ph$i$1 = $110;
   label = 47;
   break;
  }
 case 9:
  {
   $$0$i$ph$i$1 = $111;
   label = 47;
   break;
  }
 case 10:
  {
   $$0$i$ph$i$1 = $112;
   label = 47;
   break;
  }
 case 1:
  {
   $$0$i1$ph$i$1 = $102;
   label = 41;
   break;
  }
 case 3:
  {
   $$0$i1$ph$i$1 = $103;
   label = 41;
   break;
  }
 case 5:
  {
   $$0$i1$ph$i$1 = $104;
   label = 41;
   break;
  }
 case 7:
  {
   $$0$i1$ph$i$1 = $105;
   label = 41;
   break;
  }
 case 8:
  {
   $$0$i1$ph$i$1 = $106;
   label = 41;
   break;
  }
 default:
  {}
 }
 if ((label | 0) == 41) {
  $147 = $143 + ($142 * 12 | 0) + 4 | 0;
  $152 = HEAP32[$147 + 4 >> 2] | 0;
  $153 = $$0$i1$ph$i$1;
  HEAP32[$153 >> 2] = HEAP32[$147 >> 2];
  HEAP32[$153 + 4 >> 2] = $152;
 } else if ((label | 0) == 47) HEAP32[$$0$i$ph$i$1 >> 2] = HEAP32[$143 + ($142 * 12 | 0) + 4 >> 2];
 $159 = HEAP32[$100 >> 2] | 0;
 if (($159 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 HEAP32[$100 >> 2] = $159 + -1;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol5_priv12inputMgrBaseC2Ev($this) {
 $this = $this | 0;
 var $10 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $9 = 0;
 __ZN5Oryol8KeyboardC2Ev($this);
 __ZN5Oryol5MouseC2Ev($this + 624 | 0);
 __ZN5Oryol7GamepadC2Ev($this + 712 | 0);
 __ZN5Oryol7GamepadC2Ev($this + 856 | 0);
 __ZN5Oryol7GamepadC2Ev($this + 1e3 | 0);
 __ZN5Oryol7GamepadC2Ev($this + 1144 | 0);
 __ZN5Oryol8TouchpadC2Ev($this + 1288 | 0);
 HEAP8[$this + 1380 >> 0] = 0;
 HEAP32[$this + 1384 >> 2] = 0;
 HEAP32[$this + 1388 >> 2] = -1055070198;
 $9 = $this + 1392 | 0;
 $10 = $this + 1409 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP32[$9 + 12 >> 2] = 0;
 HEAP8[$9 + 16 >> 0] = 0;
 HEAP8[$10 >> 0] = 1;
 HEAP8[$10 + 1 >> 0] = 1;
 HEAP8[$10 + 2 >> 0] = 1;
 HEAP8[$10 + 3 >> 0] = 1;
 HEAP8[$10 + 4 >> 0] = 1;
 HEAP8[$10 + 5 >> 0] = 1;
 HEAP32[$this + 1416 >> 2] = 1;
 HEAPF32[$this + 1420 >> 2] = 0.0;
 HEAPF32[$this + 1424 >> 2] = 0.0;
 HEAP32[$this + 1432 >> 2] = 4;
 $15 = $this + 1440 | 0;
 $16 = $this + 1468 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 HEAP32[$15 + 16 >> 2] = 0;
 HEAP32[$15 + 20 >> 2] = 0;
 HEAP8[$15 + 24 >> 0] = 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = 0;
 HEAP8[$16 + 12 >> 0] = 0;
 $17 = $this + 1484 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP8[$17 + 12 >> 0] = 0;
 $18 = $this + 1500 | 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$18 + 4 >> 2] = 0;
 HEAP32[$18 + 8 >> 2] = 0;
 HEAP8[$18 + 12 >> 0] = 0;
 $19 = $this + 1516 | 0;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 HEAP8[$19 + 12 >> 0] = 0;
 $20 = $this + 1532 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 HEAP8[$20 + 12 >> 0] = 0;
 $21 = $this + 1548 | 0;
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 HEAP8[$21 + 12 >> 0] = 0;
 $22 = $this + 1564 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 HEAP8[$22 + 12 >> 0] = 0;
 HEAP32[$this + 1584 >> 2] = 0;
 HEAP32[$this + 1592 >> 2] = 1;
 HEAPF32[$this + 1596 >> 2] = 0.0;
 HEAPF32[$this + 1600 >> 2] = 0.0;
 HEAP32[$this + 1608 >> 2] = 4;
 $28 = $this + 1616 | 0;
 $29 = $this + 1644 | 0;
 HEAP32[$28 >> 2] = 0;
 HEAP32[$28 + 4 >> 2] = 0;
 HEAP32[$28 + 8 >> 2] = 0;
 HEAP32[$28 + 12 >> 2] = 0;
 HEAP32[$28 + 16 >> 2] = 0;
 HEAP32[$28 + 20 >> 2] = 0;
 HEAP8[$28 + 24 >> 0] = 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$29 + 8 >> 2] = 0;
 HEAP8[$29 + 12 >> 0] = 0;
 $30 = $this + 1660 | 0;
 HEAP32[$30 >> 2] = 0;
 HEAP32[$30 + 4 >> 2] = 0;
 HEAP32[$30 + 8 >> 2] = 0;
 HEAP8[$30 + 12 >> 0] = 0;
 $31 = $this + 1676 | 0;
 HEAP32[$31 >> 2] = 0;
 HEAP32[$31 + 4 >> 2] = 0;
 HEAP32[$31 + 8 >> 2] = 0;
 HEAP8[$31 + 12 >> 0] = 0;
 $32 = $this + 1692 | 0;
 HEAP32[$32 >> 2] = 0;
 HEAP32[$32 + 4 >> 2] = 0;
 HEAP32[$32 + 8 >> 2] = 0;
 HEAP8[$32 + 12 >> 0] = 0;
 $33 = $this + 1708 | 0;
 HEAP32[$33 >> 2] = 0;
 HEAP32[$33 + 4 >> 2] = 0;
 HEAP32[$33 + 8 >> 2] = 0;
 HEAP8[$33 + 12 >> 0] = 0;
 $34 = $this + 1724 | 0;
 HEAP32[$34 >> 2] = 0;
 HEAP32[$34 + 4 >> 2] = 0;
 HEAP32[$34 + 8 >> 2] = 0;
 HEAP8[$34 + 12 >> 0] = 0;
 $35 = $this + 1740 | 0;
 HEAP32[$35 >> 2] = 0;
 HEAP32[$35 + 4 >> 2] = 0;
 HEAP32[$35 + 8 >> 2] = 0;
 HEAP8[$35 + 12 >> 0] = 0;
 HEAP32[$this + 1760 >> 2] = 0;
 $37 = $this + 1768 | 0;
 HEAP32[$37 >> 2] = 0;
 HEAP32[$37 + 4 >> 2] = 0;
 HEAP32[$37 + 8 >> 2] = 0;
 HEAP32[$37 + 12 >> 2] = 0;
 HEAP32[$this + 1784 >> 2] = 4;
 $39 = $this + 1792 | 0;
 $40 = $this + 1820 | 0;
 HEAP32[$39 >> 2] = 0;
 HEAP32[$39 + 4 >> 2] = 0;
 HEAP32[$39 + 8 >> 2] = 0;
 HEAP32[$39 + 12 >> 2] = 0;
 HEAP32[$39 + 16 >> 2] = 0;
 HEAP32[$39 + 20 >> 2] = 0;
 HEAP8[$39 + 24 >> 0] = 0;
 HEAP32[$40 >> 2] = 0;
 HEAP32[$40 + 4 >> 2] = 0;
 HEAP32[$40 + 8 >> 2] = 0;
 HEAP8[$40 + 12 >> 0] = 0;
 $41 = $this + 1836 | 0;
 HEAP32[$41 >> 2] = 0;
 HEAP32[$41 + 4 >> 2] = 0;
 HEAP32[$41 + 8 >> 2] = 0;
 HEAP8[$41 + 12 >> 0] = 0;
 $42 = $this + 1852 | 0;
 HEAP32[$42 >> 2] = 0;
 HEAP32[$42 + 4 >> 2] = 0;
 HEAP32[$42 + 8 >> 2] = 0;
 HEAP8[$42 + 12 >> 0] = 0;
 $43 = $this + 1868 | 0;
 HEAP32[$43 >> 2] = 0;
 HEAP32[$43 + 4 >> 2] = 0;
 HEAP32[$43 + 8 >> 2] = 0;
 HEAP8[$43 + 12 >> 0] = 0;
 $44 = $this + 1884 | 0;
 HEAP32[$44 >> 2] = 0;
 HEAP32[$44 + 4 >> 2] = 0;
 HEAP32[$44 + 8 >> 2] = 0;
 HEAP8[$44 + 12 >> 0] = 0;
 $45 = $this + 1900 | 0;
 HEAP32[$45 >> 2] = 0;
 HEAP32[$45 + 4 >> 2] = 0;
 HEAP32[$45 + 8 >> 2] = 0;
 HEAP8[$45 + 12 >> 0] = 0;
 $46 = $this + 1916 | 0;
 HEAP32[$46 >> 2] = 0;
 HEAP32[$46 + 4 >> 2] = 0;
 HEAP32[$46 + 8 >> 2] = 0;
 HEAP8[$46 + 12 >> 0] = 0;
 HEAP8[$this + 1936 >> 0] = 0;
 $48 = $this + 1944 | 0;
 HEAP32[$48 >> 2] = 0;
 HEAP32[$48 + 4 >> 2] = 0;
 HEAP32[$48 + 8 >> 2] = 0;
 HEAP32[$48 + 12 >> 2] = 0;
 HEAP32[$48 + 16 >> 2] = 0;
 HEAP32[$48 + 20 >> 2] = 0;
 HEAP32[$48 + 24 >> 2] = 0;
 HEAP32[$48 + 28 >> 2] = 0;
 HEAP32[$this + 1976 >> 2] = 4;
 $50 = $this + 1984 | 0;
 $51 = $this + 2012 | 0;
 HEAP32[$50 >> 2] = 0;
 HEAP32[$50 + 4 >> 2] = 0;
 HEAP32[$50 + 8 >> 2] = 0;
 HEAP32[$50 + 12 >> 2] = 0;
 HEAP32[$50 + 16 >> 2] = 0;
 HEAP32[$50 + 20 >> 2] = 0;
 HEAP8[$50 + 24 >> 0] = 0;
 HEAP32[$51 >> 2] = 0;
 HEAP32[$51 + 4 >> 2] = 0;
 HEAP32[$51 + 8 >> 2] = 0;
 HEAP8[$51 + 12 >> 0] = 0;
 $52 = $this + 2028 | 0;
 HEAP32[$52 >> 2] = 0;
 HEAP32[$52 + 4 >> 2] = 0;
 HEAP32[$52 + 8 >> 2] = 0;
 HEAP8[$52 + 12 >> 0] = 0;
 $53 = $this + 2044 | 0;
 HEAP32[$53 >> 2] = 0;
 HEAP32[$53 + 4 >> 2] = 0;
 HEAP32[$53 + 8 >> 2] = 0;
 HEAP8[$53 + 12 >> 0] = 0;
 $54 = $this + 2060 | 0;
 HEAP32[$54 >> 2] = 0;
 HEAP32[$54 + 4 >> 2] = 0;
 HEAP32[$54 + 8 >> 2] = 0;
 HEAP8[$54 + 12 >> 0] = 0;
 $55 = $this + 2076 | 0;
 HEAP32[$55 >> 2] = 0;
 HEAP32[$55 + 4 >> 2] = 0;
 HEAP32[$55 + 8 >> 2] = 0;
 HEAP8[$55 + 12 >> 0] = 0;
 $56 = $this + 2092 | 0;
 HEAP32[$56 >> 2] = 0;
 HEAP32[$56 + 4 >> 2] = 0;
 HEAP32[$56 + 8 >> 2] = 0;
 HEAP8[$56 + 12 >> 0] = 0;
 $57 = $this + 2108 | 0;
 HEAP32[$57 >> 2] = 0;
 HEAP32[$57 + 4 >> 2] = 0;
 HEAP32[$57 + 8 >> 2] = 0;
 HEAP8[$57 + 12 >> 0] = 0;
 return;
}

function __ZN11ImFontAtlas19RenderCustomTexDataEiPv($this, $pass, $p_rects) {
 $this = $this | 0;
 $pass = $pass | 0;
 $p_rects = $p_rects | 0;
 var $$idx$val = 0.0, $$idx12$val = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $107 = 0, $110 = 0, $121 = 0, $127 = 0.0, $128 = 0.0, $13 = 0, $130 = 0, $132 = 0, $138 = 0, $14 = 0, $143 = 0, $144 = 0, $149 = 0.0, $152 = 0.0, $157 = 0.0, $160 = 0.0, $168 = 0, $20 = 0, $22 = 0, $27 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0.0, $44 = 0.0, $45 = 0, $9 = 0, $cursor_datas = 0, $n$047 = 0, $n$146 = 0, $type$044 = 0, $x$045 = 0, $y$048 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 $cursor_datas = sp;
 switch ($pass | 0) {
 case 0:
  {
   $0 = HEAP32[$p_rects >> 2] | 0;
   $1 = $p_rects + 4 | 0;
   if (($0 | 0) == (HEAP32[$1 >> 2] | 0)) {
    $4 = $0 + 1 | 0;
    if (!$0) $9 = 8; else $9 = (($0 | 0) / 2 | 0) + $0 | 0;
    $10 = ($9 | 0) > ($4 | 0) ? $9 : $4;
    if (($0 | 0) < ($10 | 0)) {
     $13 = __ZN5ImGui8MemAllocEj($10 << 4) | 0;
     $14 = $p_rects + 8 | 0;
     _memcpy($13 | 0, HEAP32[$14 >> 2] | 0, HEAP32[$p_rects >> 2] << 4 | 0) | 0;
     __ZN5ImGui7MemFreeEPv(HEAP32[$14 >> 2] | 0);
     HEAP32[$14 >> 2] = $13;
     HEAP32[$1 >> 2] = $10;
     $20 = HEAP32[$p_rects >> 2] | 0;
    } else $20 = $0;
   } else $20 = $0;
   HEAP32[$p_rects >> 2] = $20 + 1;
   $22 = HEAP32[$p_rects + 8 >> 2] | 0;
   HEAP32[$22 + ($20 << 4) >> 2] = 0;
   HEAP16[$22 + ($20 << 4) + 4 >> 1] = 181;
   HEAP16[$22 + ($20 << 4) + 6 >> 1] = 28;
   $27 = $22 + ($20 << 4) + 8 | 0;
   HEAP32[$27 >> 2] = 0;
   HEAP32[$27 + 4 >> 2] = 0;
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   if ((HEAP32[$p_rects >> 2] | 0) <= 0) ___assert_fail(127217, 127226, 805, 127272);
   $35 = (HEAP32[$p_rects + 8 >> 2] | 0) + 8 | 0;
   $36 = $this + 12 | 0;
   $37 = $this + 4 | 0;
   $n$047 = 0;
   $y$048 = 0;
   while (1) {
    $n$146 = $n$047;
    $x$045 = 0;
    while (1) {
     $100 = HEAP32[$35 >> 2] | 0;
     $107 = ($100 & 65535) + $x$045 + (Math_imul(($100 >>> 16) + $y$048 | 0, HEAP32[$36 >> 2] | 0) | 0) | 0;
     $110 = HEAP8[141161 + $n$146 >> 0] | 0;
     HEAP8[(HEAP32[$37 >> 2] | 0) + $107 >> 0] = ($110 << 24 >> 24 == 46) << 31 >> 31;
     HEAP8[(HEAP32[$37 >> 2] | 0) + ($107 + 91) >> 0] = ($110 << 24 >> 24 == 88) << 31 >> 31;
     $x$045 = $x$045 + 1 | 0;
     if (($x$045 | 0) == 90) break; else $n$146 = $n$146 + 1 | 0;
    }
    $y$048 = $y$048 + 1 | 0;
    if (($y$048 | 0) == 27) break; else $n$047 = $n$047 + 90 | 0;
   }
   $40 = 1.0 / +(HEAP32[$36 >> 2] | 0);
   $44 = 1.0 / +(HEAP32[$this + 16 >> 2] | 0);
   $45 = HEAP32[$35 >> 2] | 0;
   HEAPF32[$this + 24 >> 2] = $40 * (+($45 & 65535) + .5);
   HEAPF32[$this + 28 >> 2] = $44 * (+($45 >>> 16 & 65535) + .5);
   HEAPF32[$cursor_datas >> 2] = 0.0;
   HEAPF32[$cursor_datas + 4 >> 2] = 3.0;
   HEAPF32[$cursor_datas + 8 >> 2] = 12.0;
   HEAPF32[$cursor_datas + 12 >> 2] = 19.0;
   HEAPF32[$cursor_datas + 16 >> 2] = 0.0;
   HEAPF32[$cursor_datas + 20 >> 2] = 0.0;
   HEAPF32[$cursor_datas + 24 >> 2] = 13.0;
   HEAPF32[$cursor_datas + 28 >> 2] = 0.0;
   HEAPF32[$cursor_datas + 32 >> 2] = 7.0;
   HEAPF32[$cursor_datas + 36 >> 2] = 16.0;
   HEAPF32[$cursor_datas + 40 >> 2] = 4.0;
   HEAPF32[$cursor_datas + 44 >> 2] = 8.0;
   HEAPF32[$cursor_datas + 48 >> 2] = 31.0;
   HEAPF32[$cursor_datas + 52 >> 2] = 0.0;
   HEAPF32[$cursor_datas + 56 >> 2] = 23.0;
   HEAPF32[$cursor_datas + 60 >> 2] = 23.0;
   HEAPF32[$cursor_datas + 64 >> 2] = 11.0;
   HEAPF32[$cursor_datas + 68 >> 2] = 11.0;
   HEAPF32[$cursor_datas + 72 >> 2] = 21.0;
   HEAPF32[$cursor_datas + 76 >> 2] = 0.0;
   HEAPF32[$cursor_datas + 80 >> 2] = 9.0;
   HEAPF32[$cursor_datas + 84 >> 2] = 23.0;
   HEAPF32[$cursor_datas + 88 >> 2] = 5.0;
   HEAPF32[$cursor_datas + 92 >> 2] = 11.0;
   HEAPF32[$cursor_datas + 96 >> 2] = 55.0;
   HEAPF32[$cursor_datas + 100 >> 2] = 18.0;
   HEAPF32[$cursor_datas + 104 >> 2] = 23.0;
   HEAPF32[$cursor_datas + 108 >> 2] = 9.0;
   HEAPF32[$cursor_datas + 112 >> 2] = 11.0;
   HEAPF32[$cursor_datas + 116 >> 2] = 5.0;
   HEAPF32[$cursor_datas + 120 >> 2] = 73.0;
   HEAPF32[$cursor_datas + 124 >> 2] = 0.0;
   HEAPF32[$cursor_datas + 128 >> 2] = 17.0;
   HEAPF32[$cursor_datas + 132 >> 2] = 17.0;
   HEAPF32[$cursor_datas + 136 >> 2] = 9.0;
   HEAPF32[$cursor_datas + 140 >> 2] = 9.0;
   HEAPF32[$cursor_datas + 144 >> 2] = 55.0;
   HEAPF32[$cursor_datas + 148 >> 2] = 0.0;
   HEAPF32[$cursor_datas + 152 >> 2] = 17.0;
   HEAPF32[$cursor_datas + 156 >> 2] = 17.0;
   HEAPF32[$cursor_datas + 160 >> 2] = 9.0;
   HEAPF32[$cursor_datas + 164 >> 2] = 9.0;
   $$idx$val = 0.0;
   $$idx12$val = 3.0;
   $type$044 = 0;
   while (1) {
    $121 = HEAP32[$35 >> 2] | 0;
    $127 = +($121 & 65535) + $$idx$val;
    $128 = +($121 >>> 16 & 65535) + $$idx12$val;
    $130 = HEAP32[$cursor_datas + ($type$044 * 24 | 0) + 8 >> 2] | 0;
    $132 = HEAP32[$cursor_datas + ($type$044 * 24 | 0) + 12 >> 2] | 0;
    HEAP32[153164 + ($type$044 * 52 | 0) >> 2] = $type$044;
    HEAP32[153164 + ($type$044 * 52 | 0) + 12 >> 2] = $130;
    HEAP32[153164 + ($type$044 * 52 | 0) + 16 >> 2] = $132;
    $138 = $cursor_datas + ($type$044 * 24 | 0) + 16 | 0;
    $143 = HEAP32[$138 + 4 >> 2] | 0;
    $144 = 153164 + ($type$044 * 52 | 0) + 4 | 0;
    HEAP32[$144 >> 2] = HEAP32[$138 >> 2];
    HEAP32[$144 + 4 >> 2] = $143;
    $149 = $44 * $128;
    HEAPF32[153164 + ($type$044 * 52 | 0) + 20 >> 2] = $40 * $127;
    HEAPF32[153164 + ($type$044 * 52 | 0) + 24 >> 2] = $149;
    $152 = (HEAP32[tempDoublePtr >> 2] = $130, +HEAPF32[tempDoublePtr >> 2]);
    $157 = $44 * ($128 + (HEAP32[tempDoublePtr >> 2] = $132, +HEAPF32[tempDoublePtr >> 2]));
    HEAPF32[153164 + ($type$044 * 52 | 0) + 36 >> 2] = $40 * ($127 + $152);
    HEAPF32[153164 + ($type$044 * 52 | 0) + 40 >> 2] = $157;
    $160 = $127 + 91.0;
    HEAPF32[153164 + ($type$044 * 52 | 0) + 28 >> 2] = $40 * $160;
    HEAPF32[153164 + ($type$044 * 52 | 0) + 32 >> 2] = $149;
    HEAPF32[153164 + ($type$044 * 52 | 0) + 44 >> 2] = $40 * ($160 + $152);
    HEAPF32[153164 + ($type$044 * 52 | 0) + 48 >> 2] = $157;
    $168 = $type$044 + 1 | 0;
    if (($168 | 0) == 7) break;
    $$idx$val = +HEAPF32[$cursor_datas + ($168 * 24 | 0) >> 2];
    $$idx12$val = +HEAPF32[$cursor_datas + ($168 * 24 | 0) + 4 >> 2];
    $type$044 = $168;
   }
   STACKTOP = sp;
   return;
  }
 default:
  {
   STACKTOP = sp;
   return;
  }
 }
}

function __ZN18kc85_audioinstance8getAudioEPfj($this, $aBuffer, $aSamples) {
 $this = $this | 0;
 $aBuffer = $aBuffer | 0;
 $aSamples = $aSamples | 0;
 var $$19$us = 0, $$19$us$1 = 0, $$lcssa = 0, $0 = 0, $10 = 0, $100 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $110 = 0, $111 = 0, $112 = 0, $115 = 0, $117 = 0, $122 = 0, $13 = 0, $137 = 0, $14 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $4 = 0, $40 = 0, $45 = 0, $6 = 0, $60 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $91 = 0, $93 = 0, $94 = 0, $97 = 0, $99 = 0, $cur_op$sroa$5$06$us = 0, $cur_op$sroa$5$06$us$1 = 0, $cur_op$sroa$5$1$us = 0, $cur_op$sroa$5$1$us$1 = 0, $cur_op$sroa$7$05$us = 0, $cur_op$sroa$7$05$us$1 = 0, $cur_op$sroa$7$1$us = 0, $cur_op$sroa$7$1$us$1 = 0, $i$08$us = 0, $i$08$us$1 = 0, $scevgep = 0, $storemerge$us = 0.0, $storemerge$us$1 = 0.0;
 $0 = $this + 408 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = HEAP32[$4 + 104 >> 2] | 0;
 $7 = _bitshift64Shl(HEAP32[(HEAP32[$0 >> 2] | 0) + 92 >> 2] | 0, 0, 6) | 0;
 $9 = ___udivdi3($7 | 0, tempRet0 | 0, $6 | 0, 0) | 0;
 $10 = tempRet0;
 $13 = ___atomic_load_8($4 + 96 | 0, 5) | 0;
 $14 = tempRet0;
 $15 = $4 + 112 | 0;
 if (!$aSamples) {
  do {
   $78 = HEAP8[$15 >> 0] | 0;
   HEAP8[$15 >> 0] = 1;
  } while (($78 & 1) != 0);
  $79 = $4 + 116 | 0;
  do {} while ((HEAP32[$79 >> 2] | 0) > 0);
  HEAP8[$15 >> 0] = 0;
  $84 = ___atomic_load_8((HEAP32[$0 >> 2] | 0) + 96 | 0, 5) | 0;
  $85 = tempRet0;
  $86 = $4 + 8328 | 0;
  do {
   $87 = HEAP8[$86 >> 0] | 0;
   HEAP8[$86 >> 0] = 1;
  } while (($87 & 1) != 0);
  $88 = $4 + 8332 | 0;
  do {} while ((HEAP32[$88 >> 2] | 0) > 0);
  $91 = _bitshift64Shl($84 | 0, $85 | 0, 6) | 0;
  HEAP8[$86 >> 0] = 0;
  $74 = $91;
  $75 = tempRet0;
  $$lcssa = HEAP32[$0 >> 2] | 0;
  $73 = $$lcssa + 96 | 0;
  $76 = _bitshift64Lshr($74 | 0, $75 | 0, 6) | 0;
  $77 = tempRet0;
  ___atomic_store_8($73 | 0, $76 | 0, $77 | 0, 5);
  return;
 }
 do {
  $16 = HEAP8[$15 >> 0] | 0;
  HEAP8[$15 >> 0] = 1;
 } while (($16 & 1) != 0);
 $17 = $4 + 116 | 0;
 do {} while ((HEAP32[$17 >> 2] | 0) > 0);
 $20 = _bitshift64Shl($13 | 0, $14 | 0, 6) | 0;
 $22 = $4 + 124 | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 $25 = HEAP32[$4 + 136 + ($23 << 4) + 8 >> 2] | 0;
 $27 = HEAP32[$4 + 136 + ($23 << 4) + 12 >> 2] | 0;
 HEAP8[$15 >> 0] = 0;
 $28 = $4 + 128 | 0;
 $$19$us = $aBuffer;
 $32 = $20;
 $33 = tempRet0;
 $cur_op$sroa$5$06$us = $25;
 $cur_op$sroa$7$05$us = $27;
 $i$08$us = 0;
 while (1) {
  do {
   $29 = HEAP8[$15 >> 0] | 0;
   HEAP8[$15 >> 0] = 1;
  } while (($29 & 1) != 0);
  do {} while ((HEAP32[$17 >> 2] | 0) > 0);
  $34 = _bitshift64Lshr($32 | 0, $33 | 0, 6) | 0;
  $35 = tempRet0;
  $38 = (HEAP32[$22 >> 2] | 0) + 1 & 511;
  $40 = $4 + 136 + ($38 << 4) | 0;
  $45 = HEAP32[$40 + 4 >> 2] | 0;
  if ($45 >>> 0 > $35 >>> 0 | (($45 | 0) == ($35 | 0) ? (HEAP32[$40 >> 2] | 0) >>> 0 > $34 >>> 0 : 0)) {
   $cur_op$sroa$5$1$us = $cur_op$sroa$5$06$us;
   $cur_op$sroa$7$1$us = $cur_op$sroa$7$05$us;
  } else {
   HEAP32[$22 >> 2] = $38;
   $cur_op$sroa$5$1$us = HEAP32[$4 + 136 + ($38 << 4) + 8 >> 2] | 0;
   $cur_op$sroa$7$1$us = HEAP32[$4 + 136 + ($38 << 4) + 12 >> 2] | 0;
  }
  HEAP8[$15 >> 0] = 0;
  if (($cur_op$sroa$7$1$us | 0) == 0 | ($cur_op$sroa$5$1$us | 0) == 0) $storemerge$us = 0.0; else {
   $60 = (HEAPU16[$28 >> 1] | 0) + (($cur_op$sroa$5$1$us << 16 >>> 0) / ($6 >>> 0) | 0) | 0;
   HEAP16[$28 >> 1] = $60;
   $storemerge$us = ($60 & 32768) >>> 0 < 32768 ? .5 : -.5;
  }
  HEAPF32[$$19$us >> 2] = $storemerge$us;
  $32 = _i64Add($32 | 0, $33 | 0, $9 | 0, $10 | 0) | 0;
  $i$08$us = $i$08$us + 1 | 0;
  if (($i$08$us | 0) == ($aSamples | 0)) break; else {
   $$19$us = $$19$us + 4 | 0;
   $33 = tempRet0;
   $cur_op$sroa$5$06$us = $cur_op$sroa$5$1$us;
   $cur_op$sroa$7$05$us = $cur_op$sroa$7$1$us;
  }
 }
 $scevgep = $aBuffer + ($aSamples << 2) | 0;
 $70 = ___atomic_load_8((HEAP32[$0 >> 2] | 0) + 96 | 0, 5) | 0;
 $71 = tempRet0;
 $72 = $4 + 8328 | 0;
 do {
  $93 = HEAP8[$72 >> 0] | 0;
  HEAP8[$72 >> 0] = 1;
 } while (($93 & 1) != 0);
 $94 = $4 + 8332 | 0;
 do {} while ((HEAP32[$94 >> 2] | 0) > 0);
 $97 = _bitshift64Shl($70 | 0, $71 | 0, 6) | 0;
 $99 = $4 + 8340 | 0;
 $100 = HEAP32[$99 >> 2] | 0;
 $102 = HEAP32[$4 + 8352 + ($100 << 4) + 8 >> 2] | 0;
 $104 = HEAP32[$4 + 8352 + ($100 << 4) + 12 >> 2] | 0;
 HEAP8[$72 >> 0] = 0;
 $105 = $4 + 8344 | 0;
 $$19$us$1 = $scevgep;
 $109 = $97;
 $110 = tempRet0;
 $cur_op$sroa$5$06$us$1 = $102;
 $cur_op$sroa$7$05$us$1 = $104;
 $i$08$us$1 = 0;
 while (1) {
  do {
   $106 = HEAP8[$72 >> 0] | 0;
   HEAP8[$72 >> 0] = 1;
  } while (($106 & 1) != 0);
  do {} while ((HEAP32[$94 >> 2] | 0) > 0);
  $111 = _bitshift64Lshr($109 | 0, $110 | 0, 6) | 0;
  $112 = tempRet0;
  $115 = (HEAP32[$99 >> 2] | 0) + 1 & 511;
  $117 = $4 + 8352 + ($115 << 4) | 0;
  $122 = HEAP32[$117 + 4 >> 2] | 0;
  if ($122 >>> 0 > $112 >>> 0 | (($122 | 0) == ($112 | 0) ? (HEAP32[$117 >> 2] | 0) >>> 0 > $111 >>> 0 : 0)) {
   $cur_op$sroa$5$1$us$1 = $cur_op$sroa$5$06$us$1;
   $cur_op$sroa$7$1$us$1 = $cur_op$sroa$7$05$us$1;
  } else {
   HEAP32[$99 >> 2] = $115;
   $cur_op$sroa$5$1$us$1 = HEAP32[$4 + 8352 + ($115 << 4) + 8 >> 2] | 0;
   $cur_op$sroa$7$1$us$1 = HEAP32[$4 + 8352 + ($115 << 4) + 12 >> 2] | 0;
  }
  HEAP8[$72 >> 0] = 0;
  if (($cur_op$sroa$7$1$us$1 | 0) == 0 | ($cur_op$sroa$5$1$us$1 | 0) == 0) $storemerge$us$1 = 0.0; else {
   $137 = (HEAPU16[$105 >> 1] | 0) + (($cur_op$sroa$5$1$us$1 << 16 >>> 0) / ($6 >>> 0) | 0) | 0;
   HEAP16[$105 >> 1] = $137;
   $storemerge$us$1 = ($137 & 32768) >>> 0 < 32768 ? .5 : -.5;
  }
  HEAPF32[$$19$us$1 >> 2] = $storemerge$us$1;
  $142 = _i64Add($109 | 0, $110 | 0, $9 | 0, $10 | 0) | 0;
  $143 = tempRet0;
  $i$08$us$1 = $i$08$us$1 + 1 | 0;
  if (($i$08$us$1 | 0) == ($aSamples | 0)) {
   $74 = $142;
   $75 = $143;
   break;
  } else {
   $$19$us$1 = $$19$us$1 + 4 | 0;
   $109 = $142;
   $110 = $143;
   $cur_op$sroa$5$06$us$1 = $cur_op$sroa$5$1$us$1;
   $cur_op$sroa$7$05$us$1 = $cur_op$sroa$7$1$us$1;
  }
 }
 $$lcssa = HEAP32[$0 >> 2] | 0;
 $73 = $$lcssa + 96 | 0;
 $76 = _bitshift64Lshr($74 | 0, $75 | 0, 6) | 0;
 $77 = tempRet0;
 ___atomic_store_8($73 | 0, $76 | 0, $77 | 0, 5);
 return;
}

function __ZN5Oryol5_priv13elementBufferINS0_4meshEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $101 = 0, $106 = 0, $107 = 0, $113 = 0, $118 = 0, $119 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $137 = 0, $142 = 0, $143 = 0, $149 = 0, $15 = 0, $154 = 0, $155 = 0, $161 = 0, $166 = 0, $167 = 0, $173 = 0, $178 = 0, $179 = 0, $183 = 0, $184 = 0, $187 = 0, $188 = 0, $192 = 0, $193 = 0, $198 = 0, $199 = 0, $20 = 0, $206 = 0, $25 = 0, $26 = 0, $32 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $49 = 0, $50 = 0, $56 = 0, $57 = 0, $6 = 0, $65 = 0, $70 = 0, $71 = 0, $75 = 0, $76 = 0, $8 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $95 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0, dest = 0, src = 0, stop = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 49170);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 49170);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 400 | 0) | 0;
 $13 = $12 + ($newStart * 400 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 49170);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 400 | 0) | 0;
  while (1) {
   $20 = $src$01;
   $25 = HEAP32[$20 + 4 >> 2] | 0;
   $26 = $dst$02;
   HEAP32[$26 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$26 + 4 >> 2] = $25;
   $32 = $src$01 + 8 | 0;
   $37 = HEAP32[$32 + 4 >> 2] | 0;
   $38 = $dst$02 + 8 | 0;
   HEAP32[$38 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$38 + 4 >> 2] = $37;
   $44 = $src$01 + 16 | 0;
   $49 = HEAP32[$44 + 4 >> 2] | 0;
   $50 = $dst$02 + 16 | 0;
   HEAP32[$50 >> 2] = HEAP32[$44 >> 2];
   HEAP32[$50 + 4 >> 2] = $49;
   __ZN5Oryol12VertexLayoutC2ERKS0_($dst$02 + 24 | 0, $src$01 + 24 | 0);
   $56 = $dst$02 + 92 | 0;
   $57 = $src$01 + 92 | 0;
   HEAP32[$56 >> 2] = HEAP32[$57 >> 2];
   HEAP32[$56 + 4 >> 2] = HEAP32[$57 + 4 >> 2];
   HEAP32[$56 + 8 >> 2] = HEAP32[$57 + 8 >> 2];
   HEAP8[$56 + 12 >> 0] = HEAP8[$57 + 12 >> 0] | 0;
   __ZN5Oryol10StringAtom4copyERKS0_($dst$02 + 108 | 0, $src$01 + 108 | 0);
   HEAP32[$dst$02 + 112 >> 2] = HEAP32[$src$01 + 112 >> 2];
   $65 = $src$01 + 120 | 0;
   $70 = HEAP32[$65 + 4 >> 2] | 0;
   $71 = $dst$02 + 120 | 0;
   HEAP32[$71 >> 2] = HEAP32[$65 >> 2];
   HEAP32[$71 + 4 >> 2] = $70;
   $75 = $dst$02 + 128 | 0;
   $76 = $src$01 + 128 | 0;
   dest = $75;
   src = $76;
   stop = dest + 76 | 0;
   do {
    HEAP32[dest >> 2] = HEAP32[src >> 2];
    dest = dest + 4 | 0;
    src = src + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP8[$75 + 76 >> 0] = HEAP8[$76 + 76 >> 0] | 0;
   HEAP32[$dst$02 + 208 >> 2] = HEAP32[$src$01 + 208 >> 2];
   __ZN5Oryol12VertexLayoutC2ERKS0_($dst$02 + 212 | 0, $src$01 + 212 | 0);
   HEAP32[$dst$02 + 280 >> 2] = HEAP32[$src$01 + 280 >> 2];
   $85 = $dst$02 + 284 | 0;
   $86 = $src$01 + 284 | 0;
   HEAP32[$85 >> 2] = HEAP32[$86 >> 2];
   HEAP32[$85 + 4 >> 2] = HEAP32[$86 + 4 >> 2];
   HEAP32[$85 + 8 >> 2] = HEAP32[$86 + 8 >> 2];
   HEAP32[$85 + 12 >> 2] = HEAP32[$86 + 12 >> 2];
   $87 = $dst$02 + 300 | 0;
   $88 = $src$01 + 300 | 0;
   dest = $87;
   stop = dest + 64 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   $89 = $88;
   $94 = HEAP32[$89 + 4 >> 2] | 0;
   $95 = $87;
   HEAP32[$95 >> 2] = HEAP32[$89 >> 2];
   HEAP32[$95 + 4 >> 2] = $94;
   $101 = $src$01 + 308 | 0;
   $106 = HEAP32[$101 + 4 >> 2] | 0;
   $107 = $dst$02 + 308 | 0;
   HEAP32[$107 >> 2] = HEAP32[$101 >> 2];
   HEAP32[$107 + 4 >> 2] = $106;
   $113 = $src$01 + 316 | 0;
   $118 = HEAP32[$113 + 4 >> 2] | 0;
   $119 = $dst$02 + 316 | 0;
   HEAP32[$119 >> 2] = HEAP32[$113 >> 2];
   HEAP32[$119 + 4 >> 2] = $118;
   $125 = $src$01 + 324 | 0;
   $130 = HEAP32[$125 + 4 >> 2] | 0;
   $131 = $dst$02 + 324 | 0;
   HEAP32[$131 >> 2] = HEAP32[$125 >> 2];
   HEAP32[$131 + 4 >> 2] = $130;
   $137 = $src$01 + 332 | 0;
   $142 = HEAP32[$137 + 4 >> 2] | 0;
   $143 = $dst$02 + 332 | 0;
   HEAP32[$143 >> 2] = HEAP32[$137 >> 2];
   HEAP32[$143 + 4 >> 2] = $142;
   $149 = $src$01 + 340 | 0;
   $154 = HEAP32[$149 + 4 >> 2] | 0;
   $155 = $dst$02 + 340 | 0;
   HEAP32[$155 >> 2] = HEAP32[$149 >> 2];
   HEAP32[$155 + 4 >> 2] = $154;
   $161 = $src$01 + 348 | 0;
   $166 = HEAP32[$161 + 4 >> 2] | 0;
   $167 = $dst$02 + 348 | 0;
   HEAP32[$167 >> 2] = HEAP32[$161 >> 2];
   HEAP32[$167 + 4 >> 2] = $166;
   $173 = $src$01 + 356 | 0;
   $178 = HEAP32[$173 + 4 >> 2] | 0;
   $179 = $dst$02 + 356 | 0;
   HEAP32[$179 >> 2] = HEAP32[$173 >> 2];
   HEAP32[$179 + 4 >> 2] = $178;
   $183 = $dst$02 + 364 | 0;
   $184 = $src$01 + 364 | 0;
   HEAP32[$183 >> 2] = -1;
   HEAP8[$dst$02 + 368 >> 0] = 1;
   HEAP8[$dst$02 + 369 >> 0] = 0;
   $187 = $dst$02 + 372 | 0;
   HEAP32[$187 >> 2] = 0;
   $188 = $dst$02 + 376 | 0;
   HEAP32[$188 >> 2] = 0;
   HEAP32[$dst$02 + 380 >> 2] = -1;
   HEAP8[$dst$02 + 384 >> 0] = 1;
   HEAP8[$dst$02 + 385 >> 0] = 0;
   $192 = $dst$02 + 388 | 0;
   HEAP32[$192 >> 2] = 0;
   $193 = $dst$02 + 392 | 0;
   HEAP32[$193 >> 2] = 0;
   HEAP32[$183 >> 2] = HEAP32[$184 >> 2];
   HEAP16[$183 + 4 >> 1] = HEAP16[$184 + 4 >> 1] | 0;
   HEAP32[$187 >> 2] = HEAP32[$src$01 + 372 >> 2];
   HEAP32[$188 >> 2] = HEAP32[$src$01 + 376 >> 2];
   $198 = $dst$02 + 380 | 0;
   $dst$02 = $dst$02 + 400 | 0;
   $199 = $src$01 + 380 | 0;
   HEAP32[$198 >> 2] = HEAP32[$199 >> 2];
   HEAP16[$198 + 4 >> 1] = HEAP16[$199 + 4 >> 1] | 0;
   HEAP32[$192 >> 2] = HEAP32[$src$01 + 388 >> 2];
   HEAP32[$193 >> 2] = HEAP32[$src$01 + 392 >> 2];
   __ZN5Oryol5_priv6glMeshD2Ev($src$01);
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else $src$01 = $src$01 + 400 | 0;
  }
 }
 $206 = HEAP32[$this >> 2] | 0;
 if ($206 | 0) __ZN5Oryol6Memory4FreeEPv($206);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN10ImDrawList8AddImageEPvRK6ImVec2S3_S3_S3_j($this, $user_texture_id, $a, $b, $uv0, $uv1, $col) {
 $this = $this | 0;
 $user_texture_id = $user_texture_id | 0;
 $a = $a | 0;
 $b = $b | 0;
 $uv0 = $uv0 | 0;
 $uv1 = $uv1 | 0;
 $col = $col | 0;
 var $0 = 0, $101 = 0, $102 = 0, $108 = 0, $113 = 0, $114 = 0, $118 = 0, $12 = 0, $122 = 0, $125 = 0, $132 = 0, $135 = 0, $137 = 0, $138 = 0, $140 = 0, $141 = 0, $143 = 0, $144 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $156 = 0, $163 = 0, $165 = 0, $170 = 0, $171 = 0, $177 = 0, $182 = 0, $183 = 0, $187 = 0, $19 = 0, $191 = 0, $194 = 0, $197 = 0, $2 = 0, $20 = 0, $202 = 0, $203 = 0, $209 = 0, $214 = 0, $215 = 0, $219 = 0, $223 = 0, $226 = 0, $23 = 0, $24 = 0, $3 = 0, $30 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $55 = 0, $62 = 0, $64 = 0, $69 = 0, $70 = 0, $76 = 0, $81 = 0, $82 = 0, $86 = 0, $90 = 0, $93 = 0, $96 = 0;
 $0 = $user_texture_id;
 if ($col >>> 0 < 16777216) return;
 $2 = $this + 64 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = ($3 | 0) == 0;
 if (!$4) {
  if (($3 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
  if ((HEAP32[(HEAP32[$this + 72 >> 2] | 0) + ($3 + -1 << 2) >> 2] | 0) == ($user_texture_id | 0)) {
   __ZN10ImDrawList11PrimReserveEii($this, 6, 4);
   $135 = HEAP32[$b >> 2] | 0;
   $137 = HEAP32[$a + 4 >> 2] | 0;
   $138 = HEAP32[$a >> 2] | 0;
   $140 = HEAP32[$b + 4 >> 2] | 0;
   $141 = HEAP32[$uv1 >> 2] | 0;
   $143 = HEAP32[$uv0 + 4 >> 2] | 0;
   $144 = HEAP32[$uv0 >> 2] | 0;
   $146 = HEAP32[$uv1 + 4 >> 2] | 0;
   $147 = $this + 40 | 0;
   $148 = HEAP32[$147 >> 2] | 0;
   $149 = $148 & 65535;
   $150 = $this + 48 | 0;
   $151 = HEAP32[$150 >> 2] | 0;
   HEAP16[$151 >> 1] = $149;
   HEAP16[$151 + 2 >> 1] = $148 + 1;
   $156 = $148 + 2 & 65535;
   HEAP16[$151 + 4 >> 1] = $156;
   HEAP16[$151 + 6 >> 1] = $149;
   HEAP16[$151 + 8 >> 1] = $156;
   HEAP16[$151 + 10 >> 1] = $148 + 3;
   $163 = $this + 44 | 0;
   $165 = $a;
   $170 = HEAP32[$165 + 4 >> 2] | 0;
   $171 = HEAP32[$163 >> 2] | 0;
   HEAP32[$171 >> 2] = HEAP32[$165 >> 2];
   HEAP32[$171 + 4 >> 2] = $170;
   $177 = $uv0;
   $182 = HEAP32[$177 + 4 >> 2] | 0;
   $183 = (HEAP32[$163 >> 2] | 0) + 8 | 0;
   HEAP32[$183 >> 2] = HEAP32[$177 >> 2];
   HEAP32[$183 + 4 >> 2] = $182;
   $187 = HEAP32[$163 >> 2] | 0;
   HEAP32[$187 + 16 >> 2] = $col;
   HEAP32[$187 + 20 >> 2] = $135;
   HEAP32[$187 + 24 >> 2] = $137;
   $191 = HEAP32[$163 >> 2] | 0;
   HEAP32[$191 + 28 >> 2] = $141;
   HEAP32[$191 + 32 >> 2] = $143;
   $194 = HEAP32[$163 >> 2] | 0;
   HEAP32[$194 + 36 >> 2] = $col;
   $197 = $b;
   $202 = HEAP32[$197 + 4 >> 2] | 0;
   $203 = $194 + 40 | 0;
   HEAP32[$203 >> 2] = HEAP32[$197 >> 2];
   HEAP32[$203 + 4 >> 2] = $202;
   $209 = $uv1;
   $214 = HEAP32[$209 + 4 >> 2] | 0;
   $215 = (HEAP32[$163 >> 2] | 0) + 48 | 0;
   HEAP32[$215 >> 2] = HEAP32[$209 >> 2];
   HEAP32[$215 + 4 >> 2] = $214;
   $219 = HEAP32[$163 >> 2] | 0;
   HEAP32[$219 + 56 >> 2] = $col;
   HEAP32[$219 + 60 >> 2] = $138;
   HEAP32[$219 + 64 >> 2] = $140;
   $223 = HEAP32[$163 >> 2] | 0;
   HEAP32[$223 + 68 >> 2] = $144;
   HEAP32[$223 + 72 >> 2] = $146;
   $226 = HEAP32[$163 >> 2] | 0;
   HEAP32[$226 + 76 >> 2] = $col;
   HEAP32[$163 >> 2] = $226 + 80;
   HEAP32[$147 >> 2] = (HEAP32[$147 >> 2] | 0) + 4;
   HEAP32[$150 >> 2] = (HEAP32[$150 >> 2] | 0) + 12;
   return;
  }
 }
 $12 = $this + 68 | 0;
 if (($3 | 0) == (HEAP32[$12 >> 2] | 0)) {
  $15 = $3 + 1 | 0;
  if ($4) $19 = 8; else $19 = (($3 | 0) / 2 | 0) + $3 | 0;
  $20 = ($19 | 0) > ($15 | 0) ? $19 : $15;
  if (($3 | 0) < ($20 | 0)) {
   $23 = __ZN5ImGui8MemAllocEj($20 << 2) | 0;
   $24 = $this + 72 | 0;
   _memcpy($23 | 0, HEAP32[$24 >> 2] | 0, HEAP32[$2 >> 2] << 2 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$24 >> 2] | 0);
   HEAP32[$24 >> 2] = $23;
   HEAP32[$12 >> 2] = $20;
   $30 = HEAP32[$2 >> 2] | 0;
  } else $30 = $3;
 } else $30 = $3;
 HEAP32[$2 >> 2] = $30 + 1;
 HEAP32[(HEAP32[$this + 72 >> 2] | 0) + ($30 << 2) >> 2] = $0;
 __ZN10ImDrawList15UpdateTextureIDEv($this);
 __ZN10ImDrawList11PrimReserveEii($this, 6, 4);
 $34 = HEAP32[$b >> 2] | 0;
 $36 = HEAP32[$a + 4 >> 2] | 0;
 $37 = HEAP32[$a >> 2] | 0;
 $39 = HEAP32[$b + 4 >> 2] | 0;
 $40 = HEAP32[$uv1 >> 2] | 0;
 $42 = HEAP32[$uv0 + 4 >> 2] | 0;
 $43 = HEAP32[$uv0 >> 2] | 0;
 $45 = HEAP32[$uv1 + 4 >> 2] | 0;
 $46 = $this + 40 | 0;
 $47 = HEAP32[$46 >> 2] | 0;
 $48 = $47 & 65535;
 $49 = $this + 48 | 0;
 $50 = HEAP32[$49 >> 2] | 0;
 HEAP16[$50 >> 1] = $48;
 HEAP16[$50 + 2 >> 1] = $47 + 1;
 $55 = $47 + 2 & 65535;
 HEAP16[$50 + 4 >> 1] = $55;
 HEAP16[$50 + 6 >> 1] = $48;
 HEAP16[$50 + 8 >> 1] = $55;
 HEAP16[$50 + 10 >> 1] = $47 + 3;
 $62 = $this + 44 | 0;
 $64 = $a;
 $69 = HEAP32[$64 + 4 >> 2] | 0;
 $70 = HEAP32[$62 >> 2] | 0;
 HEAP32[$70 >> 2] = HEAP32[$64 >> 2];
 HEAP32[$70 + 4 >> 2] = $69;
 $76 = $uv0;
 $81 = HEAP32[$76 + 4 >> 2] | 0;
 $82 = (HEAP32[$62 >> 2] | 0) + 8 | 0;
 HEAP32[$82 >> 2] = HEAP32[$76 >> 2];
 HEAP32[$82 + 4 >> 2] = $81;
 $86 = HEAP32[$62 >> 2] | 0;
 HEAP32[$86 + 16 >> 2] = $col;
 HEAP32[$86 + 20 >> 2] = $34;
 HEAP32[$86 + 24 >> 2] = $36;
 $90 = HEAP32[$62 >> 2] | 0;
 HEAP32[$90 + 28 >> 2] = $40;
 HEAP32[$90 + 32 >> 2] = $42;
 $93 = HEAP32[$62 >> 2] | 0;
 HEAP32[$93 + 36 >> 2] = $col;
 $96 = $b;
 $101 = HEAP32[$96 + 4 >> 2] | 0;
 $102 = $93 + 40 | 0;
 HEAP32[$102 >> 2] = HEAP32[$96 >> 2];
 HEAP32[$102 + 4 >> 2] = $101;
 $108 = $uv1;
 $113 = HEAP32[$108 + 4 >> 2] | 0;
 $114 = (HEAP32[$62 >> 2] | 0) + 48 | 0;
 HEAP32[$114 >> 2] = HEAP32[$108 >> 2];
 HEAP32[$114 + 4 >> 2] = $113;
 $118 = HEAP32[$62 >> 2] | 0;
 HEAP32[$118 + 56 >> 2] = $col;
 HEAP32[$118 + 60 >> 2] = $37;
 HEAP32[$118 + 64 >> 2] = $39;
 $122 = HEAP32[$62 >> 2] | 0;
 HEAP32[$122 + 68 >> 2] = $43;
 HEAP32[$122 + 72 >> 2] = $45;
 $125 = HEAP32[$62 >> 2] | 0;
 HEAP32[$125 + 76 >> 2] = $col;
 HEAP32[$62 >> 2] = $125 + 80;
 HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + 4;
 HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 12;
 $132 = HEAP32[$2 >> 2] | 0;
 if (($132 | 0) <= 0) ___assert_fail(127486, 127372, 248, 127511);
 HEAP32[$2 >> 2] = $132 + -1;
 __ZN10ImDrawList15UpdateTextureIDEv($this);
 return;
}

function __ZN9CTCWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $15 = 0, $4 = 0, $42 = 0, $43 = 0, $i$08 = 0, $strBuilder = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer17 = 0, $vararg_buffer2 = 0, $vararg_buffer20 = 0, $vararg_buffer23 = 0, $vararg_buffer26 = 0, $vararg_buffer29 = 0, $vararg_buffer32 = 0, $vararg_buffer35 = 0, $vararg_buffer38 = 0, $vararg_buffer41 = 0, $vararg_buffer44 = 0, $vararg_buffer47 = 0, $vararg_buffer5 = 0, $vararg_buffer50 = 0, $vararg_buffer53 = 0, $vararg_buffer56 = 0, $vararg_buffer59 = 0, $vararg_buffer62 = 0, $vararg_buffer65 = 0, $vararg_buffer68 = 0, $vararg_buffer71 = 0, $vararg_buffer74 = 0, $vararg_buffer77 = 0, $vararg_buffer8 = 0, $vararg_buffer80 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $vararg_buffer80 = sp + 216 | 0;
 $vararg_buffer77 = sp + 208 | 0;
 $vararg_buffer74 = sp + 200 | 0;
 $vararg_buffer71 = sp + 192 | 0;
 $vararg_buffer68 = sp + 184 | 0;
 $vararg_buffer65 = sp + 176 | 0;
 $vararg_buffer62 = sp + 168 | 0;
 $vararg_buffer59 = sp + 160 | 0;
 $vararg_buffer56 = sp + 152 | 0;
 $vararg_buffer53 = sp + 144 | 0;
 $vararg_buffer50 = sp + 136 | 0;
 $vararg_buffer47 = sp + 128 | 0;
 $vararg_buffer44 = sp + 120 | 0;
 $vararg_buffer41 = sp + 112 | 0;
 $vararg_buffer38 = sp + 104 | 0;
 $vararg_buffer35 = sp + 96 | 0;
 $vararg_buffer32 = sp + 88 | 0;
 $vararg_buffer29 = sp + 80 | 0;
 $vararg_buffer26 = sp + 72 | 0;
 $vararg_buffer23 = sp + 64 | 0;
 $vararg_buffer20 = sp + 56 | 0;
 $vararg_buffer17 = sp + 48 | 0;
 $vararg_buffer14 = sp + 40 | 0;
 $vararg_buffer11 = sp + 32 | 0;
 $vararg_buffer8 = sp + 24 | 0;
 $vararg_buffer5 = sp + 16 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 224 | 0;
 $strBuilder = sp + 232 | 0;
 HEAPF32[$0 >> 2] = 200.0;
 HEAPF32[$0 + 4 >> 2] = 200.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 2);
 $4 = $this + 8 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $4, 128) | 0)) {
  __ZN5ImGui3EndEv();
  $42 = HEAP8[$4 >> 0] | 0;
  $43 = $42 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $43 | 0;
 }
 __ZN5Oryol13StringBuilderC2Ev($strBuilder);
 $i$08 = 0;
 do {
  HEAP32[$vararg_buffer >> 2] = $i$08;
  HEAP32[$vararg_buffer + 4 >> 2] = $i$08 + 140;
  __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 36027, $vararg_buffer) | 0;
  do if (__ZN5ImGui16CollapsingHeaderEPKcS1_bb(__ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0, 1, 0) | 0) {
   HEAP32[$vararg_buffer2 >> 2] = HEAPU8[$kc + 69284 + ($i$08 * 48 | 0) + 1 >> 0];
   __ZN5ImGui4TextEPKcz(36052, $vararg_buffer2);
   HEAP32[$vararg_buffer5 >> 2] = HEAPU8[$kc + 69284 + ($i$08 * 48 | 0) + 9 >> 0];
   __ZN5ImGui4TextEPKcz(36072, $vararg_buffer5);
   $15 = $kc + 69284 + ($i$08 * 48 | 0) | 0;
   HEAP32[$vararg_buffer8 >> 2] = HEAPU8[$15 >> 0];
   __ZN5ImGui4TextEPKcz(36095, $vararg_buffer8);
   HEAP32[$vararg_buffer11 >> 2] = 36111;
   __ZN5ImGui4TextEPKcz(36138, $vararg_buffer11);
   __ZN5ImGui8SameLineEff(128.0, -1.0);
   if ((HEAP8[$15 >> 0] | 0) > -1) {
    HEAP32[$vararg_buffer17 >> 2] = 36129;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer17);
   } else {
    HEAP32[$vararg_buffer14 >> 2] = 36121;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer14);
   }
   HEAP32[$vararg_buffer20 >> 2] = 36144;
   __ZN5ImGui4TextEPKcz(36138, $vararg_buffer20);
   __ZN5ImGui8SameLineEff(128.0, -1.0);
   if (!(HEAP8[$15 >> 0] & 64)) {
    HEAP32[$vararg_buffer26 >> 2] = 36157;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer26);
   } else {
    HEAP32[$vararg_buffer23 >> 2] = 36149;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer23);
   }
   HEAP32[$vararg_buffer29 >> 2] = 36163;
   __ZN5ImGui4TextEPKcz(36138, $vararg_buffer29);
   __ZN5ImGui8SameLineEff(128.0, -1.0);
   if (!(HEAP8[$15 >> 0] & 32)) {
    HEAP32[$vararg_buffer35 >> 2] = 36177;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer35);
   } else {
    HEAP32[$vararg_buffer32 >> 2] = 36173;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer32);
   }
   HEAP32[$vararg_buffer38 >> 2] = 36180;
   __ZN5ImGui4TextEPKcz(36138, $vararg_buffer38);
   __ZN5ImGui8SameLineEff(128.0, -1.0);
   if (!(HEAP8[$15 >> 0] & 16)) {
    HEAP32[$vararg_buffer44 >> 2] = 36192;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer44);
   } else {
    HEAP32[$vararg_buffer41 >> 2] = 36185;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer41);
   }
   HEAP32[$vararg_buffer47 >> 2] = 36200;
   __ZN5ImGui4TextEPKcz(36138, $vararg_buffer47);
   __ZN5ImGui8SameLineEff(128.0, -1.0);
   if (!(HEAP8[$15 >> 0] & 8)) {
    HEAP32[$vararg_buffer53 >> 2] = 36214;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer53);
   } else {
    HEAP32[$vararg_buffer50 >> 2] = 36208;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer50);
   }
   HEAP32[$vararg_buffer56 >> 2] = 36224;
   __ZN5ImGui4TextEPKcz(36138, $vararg_buffer56);
   __ZN5ImGui8SameLineEff(128.0, -1.0);
   if (!(HEAP8[$15 >> 0] & 4)) {
    HEAP32[$vararg_buffer62 >> 2] = 36241;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer62);
   } else {
    HEAP32[$vararg_buffer59 >> 2] = 36233;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer59);
   }
   HEAP32[$vararg_buffer65 >> 2] = 36246;
   __ZN5ImGui4TextEPKcz(36138, $vararg_buffer65);
   __ZN5ImGui8SameLineEff(128.0, -1.0);
   if (!(HEAP8[$15 >> 0] & 2)) {
    HEAP32[$vararg_buffer71 >> 2] = 36259;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer71);
   } else {
    HEAP32[$vararg_buffer68 >> 2] = 36252;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer68);
   }
   HEAP32[$vararg_buffer74 >> 2] = 36268;
   __ZN5ImGui4TextEPKcz(36138, $vararg_buffer74);
   __ZN5ImGui8SameLineEff(128.0, -1.0);
   if (!(HEAP8[$15 >> 0] & 1)) {
    HEAP32[$vararg_buffer80 >> 2] = 36289;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer80);
    break;
   } else {
    HEAP32[$vararg_buffer77 >> 2] = 36276;
    __ZN5ImGui4TextEPKcz(124291, $vararg_buffer77);
    break;
   }
  } while (0);
  $i$08 = $i$08 + 1 | 0;
 } while (($i$08 | 0) != 4);
 __ZN5Oryol13StringBuilderD2Ev($strBuilder);
 __ZN5ImGui3EndEv();
 $42 = HEAP8[$4 >> 0] | 0;
 $43 = $42 << 24 >> 24 != 0;
 STACKTOP = sp;
 return $43 | 0;
}

function _qsort($base, $nel, $width, $cmp) {
 $base = $base | 0;
 $nel = $nel | 0;
 $width = $width | 0;
 $cmp = $cmp | 0;
 var $$0$i = 0, $$0$i29 = 0, $$01$i5$i$ph = 0, $$02$i$i = 0, $$02$i3$i = 0, $$phi$trans$insert$i = 0, $$pre1$i = 0, $$pre1$i5 = 0, $$pre1$i8 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $110 = 0, $116 = 0, $16 = 0, $18 = 0, $20 = 0, $24 = 0, $27 = 0, $37 = 0, $40 = 0, $42 = 0, $45 = 0, $47 = 0, $49 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $64 = 0, $69 = 0, $71 = 0, $77 = 0, $79 = 0, $81 = 0, $84 = 0, $88 = 0, $9 = 0, $9$phi = 0, $90 = 0, $92 = 0, $head$0$lcssa = 0, $head$033 = 0, $head$1$be = 0, $head$149 = 0, $i$0 = 0, $lp = 0, $nTrailingZeros$03$i$i = 0, $nTrailingZeros$03$i2$i = 0, $p = 0, $pshift$0$lcssa = 0, $pshift$034 = 0, $pshift$1 = 0, $pshift$2$be = 0, $pshift$250 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 $lp = sp + 8 | 0;
 $p = sp;
 $0 = Math_imul($width, $nel) | 0;
 $1 = $p;
 HEAP32[$1 >> 2] = 1;
 HEAP32[$1 + 4 >> 2] = 0;
 if ($0 | 0) {
  $6 = 0 - $width | 0;
  HEAP32[$lp + 4 >> 2] = $width;
  HEAP32[$lp >> 2] = $width;
  $11 = $width;
  $9 = $width;
  $i$0 = 2;
  while (1) {
   $10 = $9 + $width + $11 | 0;
   HEAP32[$lp + ($i$0 << 2) >> 2] = $10;
   if ($10 >>> 0 < $0 >>> 0) {
    $9$phi = $11;
    $11 = $10;
    $i$0 = $i$0 + 1 | 0;
    $9 = $9$phi;
   } else break;
  }
  $16 = $base + $0 + $6 | 0;
  $$phi$trans$insert$i = $p + 4 | 0;
  if ($16 >>> 0 > $base >>> 0) {
   $18 = $16;
   $20 = 1;
   $head$033 = $base;
   $pshift$034 = 1;
   while (1) {
    do if (($20 & 3 | 0) == 3) {
     _sift($head$033, $width, $cmp, $pshift$034, $lp);
     $$pre1$i = HEAP32[$$phi$trans$insert$i >> 2] | 0;
     $24 = $$pre1$i << 30 | (HEAP32[$p >> 2] | 0) >>> 2;
     HEAP32[$p >> 2] = $24;
     HEAP32[$$phi$trans$insert$i >> 2] = $$pre1$i >>> 2;
     $49 = $24;
     $pshift$1 = $pshift$034 + 2 | 0;
    } else {
     $27 = $pshift$034 + -1 | 0;
     if ((HEAP32[$lp + ($27 << 2) >> 2] | 0) >>> 0 < ($18 - $head$033 | 0) >>> 0) _sift($head$033, $width, $cmp, $pshift$034, $lp); else _trinkle($head$033, $width, $cmp, $p, $pshift$034, 0, $lp);
     if (($pshift$034 | 0) == 1) {
      $$pre1$i5 = HEAP32[$p >> 2] | 0;
      HEAP32[$$phi$trans$insert$i >> 2] = $$pre1$i5 >>> 31 | HEAP32[$$phi$trans$insert$i >> 2] << 1;
      $37 = $$pre1$i5 << 1;
      HEAP32[$p >> 2] = $37;
      $49 = $37;
      $pshift$1 = 0;
      break;
     }
     if ($27 >>> 0 > 31) {
      $40 = HEAP32[$p >> 2] | 0;
      HEAP32[$$phi$trans$insert$i >> 2] = $40;
      HEAP32[$p >> 2] = 0;
      $$0$i = $pshift$034 + -33 | 0;
      $42 = $40;
      $45 = 0;
     } else {
      $$0$i = $27;
      $42 = HEAP32[$$phi$trans$insert$i >> 2] | 0;
      $45 = HEAP32[$p >> 2] | 0;
     }
     HEAP32[$$phi$trans$insert$i >> 2] = $45 >>> (32 - $$0$i | 0) | $42 << $$0$i;
     $47 = $45 << $$0$i;
     HEAP32[$p >> 2] = $47;
     $49 = $47;
     $pshift$1 = 1;
    } while (0);
    $20 = $49 | 1;
    HEAP32[$p >> 2] = $20;
    $50 = $head$033 + $width | 0;
    if ($50 >>> 0 >= $16 >>> 0) {
     $head$0$lcssa = $50;
     $pshift$0$lcssa = $pshift$1;
     break;
    } else {
     $head$033 = $50;
     $pshift$034 = $pshift$1;
    }
   }
  } else {
   $head$0$lcssa = $base;
   $pshift$0$lcssa = 1;
  }
  _trinkle($head$0$lcssa, $width, $cmp, $p, $pshift$0$lcssa, 0, $lp);
  $52 = $p + 4 | 0;
  $54 = HEAP32[$p >> 2] | 0;
  $56 = HEAP32[$52 >> 2] | 0;
  $57 = ($56 | 0) == 0;
  if (!(($pshift$0$lcssa | 0) == 1 & ($54 | 0) == 1 & $57)) {
   $116 = $57;
   $60 = $54;
   $69 = $56;
   $head$149 = $head$0$lcssa;
   $pshift$250 = $pshift$0$lcssa;
   while (1) {
    if (($pshift$250 | 0) < 2) {
     $59 = $60 + -1 | 0;
     do if (!$59) {
      $79 = 32;
      label = 28;
     } else {
      if (!($59 & 1)) {
       $$02$i$i = $59;
       $nTrailingZeros$03$i$i = 0;
       while (1) {
        $64 = $nTrailingZeros$03$i$i + 1 | 0;
        $$02$i$i = $$02$i$i >>> 1;
        if ($$02$i$i & 1 | 0) {
         $77 = $64;
         break;
        } else $nTrailingZeros$03$i$i = $64;
       }
      } else {
       if ($116) $$01$i5$i$ph = 32; else {
        if (!($69 & 1)) {
         $$02$i3$i = $69;
         $nTrailingZeros$03$i2$i = 0;
        } else {
         $$0$i29 = 0;
         $81 = $60;
         $84 = $69;
         $88 = 0;
         break;
        }
        while (1) {
         $71 = $nTrailingZeros$03$i2$i + 1 | 0;
         $$02$i3$i = $$02$i3$i >>> 1;
         if ($$02$i3$i & 1 | 0) {
          $$01$i5$i$ph = $71;
          break;
         } else $nTrailingZeros$03$i2$i = $71;
        }
       }
       $77 = $$01$i5$i$ph + 32 | 0;
      }
      if ($77 >>> 0 > 31) {
       $79 = $77;
       label = 28;
      } else {
       $$0$i29 = $77;
       $81 = $60;
       $84 = $69;
       $88 = $77;
      }
     } while (0);
     if ((label | 0) == 28) {
      label = 0;
      HEAP32[$p >> 2] = $69;
      HEAP32[$$phi$trans$insert$i >> 2] = 0;
      $$0$i29 = $79 + -32 | 0;
      $81 = $69;
      $84 = 0;
      $88 = $79;
     }
     HEAP32[$p >> 2] = $84 << 32 - $$0$i29 | $81 >>> $$0$i29;
     HEAP32[$$phi$trans$insert$i >> 2] = $84 >>> $$0$i29;
     $head$1$be = $head$149 + $6 | 0;
     $pshift$2$be = $88 + $pshift$250 | 0;
    } else {
     $90 = $60 >>> 30;
     $92 = $pshift$250 + -2 | 0;
     HEAP32[$p >> 2] = ($60 << 1 & 2147483646 | $90 << 31) ^ 3;
     HEAP32[$$phi$trans$insert$i >> 2] = ($90 | $69 << 2) >>> 1;
     _trinkle($head$149 + (0 - (HEAP32[$lp + ($92 << 2) >> 2] | 0)) + $6 | 0, $width, $cmp, $p, $pshift$250 + -1 | 0, 1, $lp);
     $$pre1$i8 = HEAP32[$p >> 2] | 0;
     HEAP32[$$phi$trans$insert$i >> 2] = $$pre1$i8 >>> 31 | HEAP32[$$phi$trans$insert$i >> 2] << 1;
     HEAP32[$p >> 2] = $$pre1$i8 << 1 | 1;
     $110 = $head$149 + $6 | 0;
     _trinkle($110, $width, $cmp, $p, $92, 1, $lp);
     $head$1$be = $110;
     $pshift$2$be = $92;
    }
    $60 = HEAP32[$p >> 2] | 0;
    $69 = HEAP32[$52 >> 2] | 0;
    $116 = ($69 | 0) == 0;
    if (($pshift$2$be | 0) == 1 & ($60 | 0) == 1 & $116) break; else {
     $head$149 = $head$1$be;
     $pshift$250 = $pshift$2$be;
    }
   }
  }
 }
 STACKTOP = sp;
 return;
}

function _try_realloc_chunk($p, $nb) {
 $p = $p | 0;
 $nb = $nb | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $101 = 0, $104 = 0, $106 = 0, $109 = 0, $112 = 0, $113 = 0, $114 = 0, $116 = 0, $118 = 0, $119 = 0, $121 = 0, $122 = 0, $127 = 0, $128 = 0, $137 = 0, $142 = 0, $145 = 0, $146 = 0, $152 = 0, $163 = 0, $166 = 0, $173 = 0, $2 = 0, $20 = 0, $22 = 0, $29 = 0, $3 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $47 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $58 = 0, $65 = 0, $71 = 0, $73 = 0, $74 = 0, $77 = 0, $79 = 0, $8 = 0, $81 = 0, $94 = 0, $99 = 0, $R$1 = 0, $R$1$lcssa = 0, $R$3 = 0, $RP$1 = 0, $RP$1$lcssa = 0, $newp$2 = 0, $storemerge = 0, $storemerge1 = 0;
 $0 = $p + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $1 & -8;
 $3 = $p + $2 | 0;
 $4 = HEAP32[40711] | 0;
 $5 = $1 & 3;
 if (!(($5 | 0) != 1 & $p >>> 0 >= $4 >>> 0 & $p >>> 0 < $3 >>> 0)) _abort();
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 if (!($8 & 1)) _abort();
 if (!$5) {
  if ($nb >>> 0 < 256) {
   $newp$2 = 0;
   return $newp$2 | 0;
  }
  if ($2 >>> 0 >= ($nb + 4 | 0) >>> 0) if (($2 - $nb | 0) >>> 0 <= HEAP32[40827] << 1 >>> 0) {
   $newp$2 = $p;
   return $newp$2 | 0;
  }
  $newp$2 = 0;
  return $newp$2 | 0;
 }
 if ($2 >>> 0 >= $nb >>> 0) {
  $20 = $2 - $nb | 0;
  if ($20 >>> 0 <= 15) {
   $newp$2 = $p;
   return $newp$2 | 0;
  }
  $22 = $p + $nb | 0;
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$22 + 4 >> 2] = $20 | 3;
  $29 = $22 + $20 + 4 | 0;
  HEAP32[$29 >> 2] = HEAP32[$29 >> 2] | 1;
  _dispose_chunk($22, $20);
  $newp$2 = $p;
  return $newp$2 | 0;
 }
 if (($3 | 0) == (HEAP32[40713] | 0)) {
  $35 = (HEAP32[40710] | 0) + $2 | 0;
  if ($35 >>> 0 <= $nb >>> 0) {
   $newp$2 = 0;
   return $newp$2 | 0;
  }
  $37 = $35 - $nb | 0;
  $38 = $p + $nb | 0;
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$38 + 4 >> 2] = $37 | 1;
  HEAP32[40713] = $38;
  HEAP32[40710] = $37;
  $newp$2 = $p;
  return $newp$2 | 0;
 }
 if (($3 | 0) == (HEAP32[40712] | 0)) {
  $47 = (HEAP32[40709] | 0) + $2 | 0;
  if ($47 >>> 0 < $nb >>> 0) {
   $newp$2 = 0;
   return $newp$2 | 0;
  }
  $49 = $47 - $nb | 0;
  if ($49 >>> 0 > 15) {
   $51 = $p + $nb | 0;
   $52 = $51 + $49 | 0;
   HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
   HEAP32[$51 + 4 >> 2] = $49 | 1;
   HEAP32[$52 >> 2] = $49;
   $58 = $52 + 4 | 0;
   HEAP32[$58 >> 2] = HEAP32[$58 >> 2] & -2;
   $storemerge = $51;
   $storemerge1 = $49;
  } else {
   HEAP32[$0 >> 2] = $1 & 1 | $47 | 2;
   $65 = $p + $47 + 4 | 0;
   HEAP32[$65 >> 2] = HEAP32[$65 >> 2] | 1;
   $storemerge = 0;
   $storemerge1 = 0;
  }
  HEAP32[40709] = $storemerge1;
  HEAP32[40712] = $storemerge;
  $newp$2 = $p;
  return $newp$2 | 0;
 }
 if ($8 & 2 | 0) {
  $newp$2 = 0;
  return $newp$2 | 0;
 }
 $71 = ($8 & -8) + $2 | 0;
 if ($71 >>> 0 < $nb >>> 0) {
  $newp$2 = 0;
  return $newp$2 | 0;
 }
 $73 = $71 - $nb | 0;
 $74 = $8 >>> 3;
 do if ($8 >>> 0 < 256) {
  $77 = HEAP32[$3 + 8 >> 2] | 0;
  $79 = HEAP32[$3 + 12 >> 2] | 0;
  $81 = 162868 + ($74 << 1 << 2) | 0;
  if (($77 | 0) != ($81 | 0)) {
   if ($77 >>> 0 < $4 >>> 0) _abort();
   if ((HEAP32[$77 + 12 >> 2] | 0) != ($3 | 0)) _abort();
  }
  if (($79 | 0) == ($77 | 0)) {
   HEAP32[40707] = HEAP32[40707] & ~(1 << $74);
   break;
  }
  if (($79 | 0) == ($81 | 0)) $$pre$phiZ2D = $79 + 8 | 0; else {
   if ($79 >>> 0 < $4 >>> 0) _abort();
   $94 = $79 + 8 | 0;
   if ((HEAP32[$94 >> 2] | 0) == ($3 | 0)) $$pre$phiZ2D = $94; else _abort();
  }
  HEAP32[$77 + 12 >> 2] = $79;
  HEAP32[$$pre$phiZ2D >> 2] = $77;
 } else {
  $99 = HEAP32[$3 + 24 >> 2] | 0;
  $101 = HEAP32[$3 + 12 >> 2] | 0;
  do if (($101 | 0) == ($3 | 0)) {
   $112 = $3 + 16 | 0;
   $113 = $112 + 4 | 0;
   $114 = HEAP32[$113 >> 2] | 0;
   if (!$114) {
    $116 = HEAP32[$112 >> 2] | 0;
    if (!$116) {
     $R$3 = 0;
     break;
    } else {
     $R$1 = $116;
     $RP$1 = $112;
    }
   } else {
    $R$1 = $114;
    $RP$1 = $113;
   }
   while (1) {
    $118 = $R$1 + 20 | 0;
    $119 = HEAP32[$118 >> 2] | 0;
    if ($119 | 0) {
     $R$1 = $119;
     $RP$1 = $118;
     continue;
    }
    $121 = $R$1 + 16 | 0;
    $122 = HEAP32[$121 >> 2] | 0;
    if (!$122) {
     $R$1$lcssa = $R$1;
     $RP$1$lcssa = $RP$1;
     break;
    } else {
     $R$1 = $122;
     $RP$1 = $121;
    }
   }
   if ($RP$1$lcssa >>> 0 < $4 >>> 0) _abort(); else {
    HEAP32[$RP$1$lcssa >> 2] = 0;
    $R$3 = $R$1$lcssa;
    break;
   }
  } else {
   $104 = HEAP32[$3 + 8 >> 2] | 0;
   if ($104 >>> 0 < $4 >>> 0) _abort();
   $106 = $104 + 12 | 0;
   if ((HEAP32[$106 >> 2] | 0) != ($3 | 0)) _abort();
   $109 = $101 + 8 | 0;
   if ((HEAP32[$109 >> 2] | 0) == ($3 | 0)) {
    HEAP32[$106 >> 2] = $101;
    HEAP32[$109 >> 2] = $104;
    $R$3 = $101;
    break;
   } else _abort();
  } while (0);
  if ($99 | 0) {
   $127 = HEAP32[$3 + 28 >> 2] | 0;
   $128 = 163132 + ($127 << 2) | 0;
   if (($3 | 0) == (HEAP32[$128 >> 2] | 0)) {
    HEAP32[$128 >> 2] = $R$3;
    if (!$R$3) {
     HEAP32[40708] = HEAP32[40708] & ~(1 << $127);
     break;
    }
   } else {
    if ($99 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort();
    $137 = $99 + 16 | 0;
    if ((HEAP32[$137 >> 2] | 0) == ($3 | 0)) HEAP32[$137 >> 2] = $R$3; else HEAP32[$99 + 20 >> 2] = $R$3;
    if (!$R$3) break;
   }
   $142 = HEAP32[40711] | 0;
   if ($R$3 >>> 0 < $142 >>> 0) _abort();
   HEAP32[$R$3 + 24 >> 2] = $99;
   $145 = $3 + 16 | 0;
   $146 = HEAP32[$145 >> 2] | 0;
   do if ($146 | 0) if ($146 >>> 0 < $142 >>> 0) _abort(); else {
    HEAP32[$R$3 + 16 >> 2] = $146;
    HEAP32[$146 + 24 >> 2] = $R$3;
    break;
   } while (0);
   $152 = HEAP32[$145 + 4 >> 2] | 0;
   if ($152 | 0) if ($152 >>> 0 < (HEAP32[40711] | 0) >>> 0) _abort(); else {
    HEAP32[$R$3 + 20 >> 2] = $152;
    HEAP32[$152 + 24 >> 2] = $R$3;
    break;
   }
  }
 } while (0);
 if ($73 >>> 0 < 16) {
  HEAP32[$0 >> 2] = $71 | $1 & 1 | 2;
  $163 = $p + $71 + 4 | 0;
  HEAP32[$163 >> 2] = HEAP32[$163 >> 2] | 1;
  $newp$2 = $p;
  return $newp$2 | 0;
 } else {
  $166 = $p + $nb | 0;
  HEAP32[$0 >> 2] = $1 & 1 | $nb | 2;
  HEAP32[$166 + 4 >> 2] = $73 | 3;
  $173 = $166 + $73 + 4 | 0;
  HEAP32[$173 >> 2] = HEAP32[$173 >> 2] | 1;
  _dispose_chunk($166, $73);
  $newp$2 = $p;
  return $newp$2 | 0;
 }
 return 0;
}

function __ZN5ImGui17RenderTextClippedERK6ImVec2S2_PKcS4_PS1_iS5_S5_($pos_min, $pos_max, $text, $text_end, $text_size_if_known, $align, $clip_min, $clip_max) {
 $pos_min = $pos_min | 0;
 $pos_max = $pos_max | 0;
 $text = $text | 0;
 $text_end = $text_end | 0;
 $text_size_if_known = $text_size_if_known | 0;
 $align = $align | 0;
 $clip_min = $clip_min | 0;
 $clip_max = $clip_max | 0;
 var $$0 = 0, $$off0 = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$text_end$i = 0, $108 = 0.0, $11 = 0, $110 = 0.0, $112 = 0.0, $117 = 0.0, $13 = 0, $148 = 0.0, $150 = 0.0, $152 = 0.0, $157 = 0.0, $16 = 0, $17 = 0, $27 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $34 = 0.0, $36 = 0.0, $38 = 0.0, $42 = 0.0, $44 = 0.0, $45 = 0.0, $64 = 0, $67 = 0.0, $71 = 0.0, $76 = 0.0, $78 = 0.0, $83 = 0, $84 = 0.0, $9 = 0, $90 = 0.0, $95 = 0, $97 = 0, $need_clipping$0$off0 = 0, $pos = 0, $pos_max$clip_max = 0, $text_display_end$0$lcssa$i = 0, $text_display_end$03$i = 0, $text_size$i = 0, $text_size$sroa$0$1 = 0, $text_size$sroa$8$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $text_size$i = sp + 8 | 0;
 $pos = sp;
 $$text_end$i = ($text_end | 0) == 0 ? -1 : $text_end;
 if ($$text_end$i >>> 0 > $text >>> 0) $text_display_end$03$i = $text; else {
  STACKTOP = sp;
  return;
 }
 L3 : while (1) {
  switch (HEAP8[$text_display_end$03$i >> 0] | 0) {
  case 0:
   {
    $text_display_end$0$lcssa$i = $text_display_end$03$i;
    break L3;
    break;
   }
  case 35:
   {
    $3 = $text_display_end$03$i + 1 | 0;
    if ((HEAP8[$3 >> 0] | 0) == 35) {
     $text_display_end$0$lcssa$i = $text_display_end$03$i;
     break L3;
    } else $$pre$phi$iZ2D = $3;
    break;
   }
  default:
   $$pre$phi$iZ2D = $text_display_end$03$i + 1 | 0;
  }
  if ($$pre$phi$iZ2D >>> 0 < $$text_end$i >>> 0) $text_display_end$03$i = $$pre$phi$iZ2D; else {
   $text_display_end$0$lcssa$i = $$pre$phi$iZ2D;
   break;
  }
 }
 if (($text_display_end$0$lcssa$i | 0) == ($text | 0)) {
  STACKTOP = sp;
  return;
 }
 $9 = HEAP32[38201] | 0;
 HEAP8[$9 + 114 >> 0] = 1;
 $11 = $pos_min;
 $13 = HEAP32[$11 >> 2] | 0;
 $16 = HEAP32[$11 + 4 >> 2] | 0;
 $17 = $pos;
 HEAP32[$17 >> 2] = $13;
 HEAP32[$17 + 4 >> 2] = $16;
 if (!$text_size_if_known) {
  $27 = HEAP32[38186] | 0;
  $29 = +HEAPF32[38187];
  __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($text_size$i, $27, $29, 3402823466385288598117041.0e14, 0.0, $text, $text_display_end$0$lcssa$i, 0);
  $30 = +HEAPF32[$text_size$i >> 2];
  if ($30 > 0.0) {
   $34 = $30 - $29 / +HEAPF32[$27 >> 2];
   HEAPF32[$text_size$i >> 2] = $34;
   $36 = $34;
  } else $36 = $30;
  $38 = +(~~($36 + .949999988079071) | 0);
  HEAPF32[$text_size$i >> 2] = $38;
  $$pre$phiZ2D = $pos;
  $44 = +HEAPF32[$pos >> 2];
  $text_size$sroa$0$1 = (HEAPF32[tempDoublePtr >> 2] = $38, HEAP32[tempDoublePtr >> 2] | 0);
  $text_size$sroa$8$1 = HEAP32[$text_size$i + 4 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $pos;
  $44 = (HEAP32[tempDoublePtr >> 2] = $13, +HEAPF32[tempDoublePtr >> 2]);
  $text_size$sroa$0$1 = HEAP32[$text_size_if_known >> 2] | 0;
  $text_size$sroa$8$1 = HEAP32[$text_size_if_known + 4 >> 2] | 0;
 }
 $pos_max$clip_max = ($clip_max | 0) == 0 ? $pos_max : $clip_max;
 $42 = (HEAP32[tempDoublePtr >> 2] = $text_size$sroa$0$1, +HEAPF32[tempDoublePtr >> 2]);
 $45 = +HEAPF32[$pos_max$clip_max >> 2];
 if (!($44 + $42 >= $45)) $$off0 = (HEAP32[tempDoublePtr >> 2] = $text_size$sroa$8$1, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[$pos + 4 >> 2] >= +HEAPF32[$pos_max$clip_max + 4 >> 2]; else $$off0 = 1;
 if (!$clip_min) {
  $$0 = $pos_min;
  $need_clipping$0$off0 = $$off0;
 } else {
  if (+HEAPF32[$$pre$phiZ2D >> 2] < +HEAPF32[$clip_min >> 2]) $64 = 1; else $64 = +HEAPF32[$pos + 4 >> 2] < +HEAPF32[$clip_min + 4 >> 2];
  $$0 = $clip_min;
  $need_clipping$0$off0 = $$off0 | $64;
 }
 if (!($align & 2)) {
  if ($align & 4 | 0) {
   $76 = +HEAPF32[$$pre$phiZ2D >> 2];
   $78 = +HEAPF32[$pos_max >> 2] - $42;
   HEAPF32[$$pre$phiZ2D >> 2] = $76 >= $78 ? $76 : $78;
  }
 } else {
  $67 = +HEAPF32[$$pre$phiZ2D >> 2];
  $71 = ($67 + +HEAPF32[$pos_max >> 2] - $42) * .5;
  HEAPF32[$$pre$phiZ2D >> 2] = $67 >= $71 ? $67 : $71;
 }
 if ($align & 16 | 0) {
  $83 = $pos + 4 | 0;
  $84 = +HEAPF32[$83 >> 2];
  $90 = ($84 + +HEAPF32[$pos_max + 4 >> 2] - (HEAP32[tempDoublePtr >> 2] = $text_size$sroa$8$1, +HEAPF32[tempDoublePtr >> 2])) * .5;
  HEAPF32[$83 >> 2] = $84 >= $90 ? $84 : $90;
 }
 if ($need_clipping$0$off0) {
  $95 = HEAP32[$$0 + 4 >> 2] | 0;
  $97 = HEAP32[$pos_max$clip_max + 4 >> 2] | 0;
  HEAP32[$text_size$i >> 2] = HEAP32[$$0 >> 2];
  HEAP32[$text_size$i + 4 >> 2] = $95;
  HEAPF32[$text_size$i + 8 >> 2] = $45;
  HEAP32[$text_size$i + 12 >> 2] = $97;
  $108 = +HEAPF32[38014];
  $110 = +HEAPF32[38015];
  $112 = +HEAPF32[38016];
  $117 = +HEAPF32[38017] * +HEAPF32[37984];
  __ZN10ImDrawList7AddTextEPK6ImFontfRK6ImVec2jPKcS7_fPK6ImVec4(HEAP32[$9 + 572 >> 2] | 0, HEAP32[38186] | 0, +HEAPF32[38187], $pos, ($110 < 0.0 ? 0 : ~~(($110 > 1.0 ? 1.0 : $110) * 255.0 + .5) << 8) | ($108 < 0.0 ? 0 : ~~(($108 > 1.0 ? 1.0 : $108) * 255.0 + .5)) | ($112 < 0.0 ? 0 : ~~(($112 > 1.0 ? 1.0 : $112) * 255.0 + .5) << 16) | ($117 < 0.0 ? 0 : ~~(($117 > 1.0 ? 1.0 : $117) * 255.0 + .5) << 24), $text, $text_display_end$0$lcssa$i, 0.0, $text_size$i);
 } else {
  $148 = +HEAPF32[38014];
  $150 = +HEAPF32[38015];
  $152 = +HEAPF32[38016];
  $157 = +HEAPF32[38017] * +HEAPF32[37984];
  __ZN10ImDrawList7AddTextEPK6ImFontfRK6ImVec2jPKcS7_fPK6ImVec4(HEAP32[$9 + 572 >> 2] | 0, HEAP32[38186] | 0, +HEAPF32[38187], $pos, ($150 < 0.0 ? 0 : ~~(($150 > 1.0 ? 1.0 : $150) * 255.0 + .5) << 8) | ($148 < 0.0 ? 0 : ~~(($148 > 1.0 ? 1.0 : $148) * 255.0 + .5)) | ($152 < 0.0 ? 0 : ~~(($152 > 1.0 ? 1.0 : $152) * 255.0 + .5) << 16) | ($157 < 0.0 ? 0 : ~~(($157 > 1.0 ? 1.0 : $157) * 255.0 + .5) << 24), $text, $text_display_end$0$lcssa$i, 0.0, 0);
 }
 if (HEAP8[157996] | 0) __ZL15LogRenderedTextRK6ImVec2PKcS3_(+HEAPF32[$pos + 4 >> 2], $text, $text_display_end$0$lcssa$i);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol12resourceBaseINS_11ShaderSetupEE5ClearEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $13 = 0, $14 = 0, $19 = 0, $24 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 3056 | 0;
 $0 = sp;
 $1 = $this + 16 | 0;
 __ZN5Oryol11ShaderSetupC2Ev($0);
 if (($0 | 0) != ($1 | 0)) {
  HEAP32[$1 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($1, $0);
 }
 HEAP32[$this + 20 >> 2] = HEAP32[$0 + 4 >> 2];
 $8 = $0 + 8 | 0;
 $13 = HEAP32[$8 + 4 >> 2] | 0;
 $14 = $this + 24 | 0;
 HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$14 + 4 >> 2] = $13;
 $19 = $0 + 16 | 0;
 __ZN5Oryol11ShaderSetup12programEntryaSEOS1_($this + 32 | 0, $19) | 0;
 HEAP32[$this + 340 >> 2] = HEAP32[$0 + 324 >> 2];
 $24 = $0 + 328 | 0;
 __ZN5Oryol11StaticArrayINS_11ShaderSetup17uniformBlockEntryELi8EEaSEOS3_($this + 344 | 0, $24);
 HEAP32[$this + 2648 >> 2] = HEAP32[$0 + 2632 >> 2];
 __ZN5Oryol11StaticArrayINS_11ShaderSetup17textureBlockEntryELi2EEaSEOS3_($this + 2652 | 0, $0 + 2636 | 0);
 HEAP32[$0 + 3028 >> 2] = 0;
 HEAP32[$0 + 3016 >> 2] = 0;
 HEAP32[$0 + 3004 >> 2] = 0;
 HEAP32[$0 + 2992 >> 2] = 0;
 HEAP32[$0 + 2980 >> 2] = 0;
 HEAP32[$0 + 2968 >> 2] = 0;
 HEAP32[$0 + 2956 >> 2] = 0;
 HEAP32[$0 + 2944 >> 2] = 0;
 HEAP32[$0 + 2932 >> 2] = 0;
 HEAP32[$0 + 2920 >> 2] = 0;
 HEAP32[$0 + 2908 >> 2] = 0;
 HEAP32[$0 + 2896 >> 2] = 0;
 HEAP32[$0 + 2884 >> 2] = 0;
 HEAP32[$0 + 2872 >> 2] = 0;
 HEAP32[$0 + 2860 >> 2] = 0;
 HEAP32[$0 + 2848 >> 2] = 0;
 HEAP32[$0 + 2840 >> 2] = 0;
 HEAP32[$0 + 2824 >> 2] = 0;
 HEAP32[$0 + 2812 >> 2] = 0;
 HEAP32[$0 + 2800 >> 2] = 0;
 HEAP32[$0 + 2788 >> 2] = 0;
 HEAP32[$0 + 2776 >> 2] = 0;
 HEAP32[$0 + 2764 >> 2] = 0;
 HEAP32[$0 + 2752 >> 2] = 0;
 HEAP32[$0 + 2740 >> 2] = 0;
 HEAP32[$0 + 2728 >> 2] = 0;
 HEAP32[$0 + 2716 >> 2] = 0;
 HEAP32[$0 + 2704 >> 2] = 0;
 HEAP32[$0 + 2692 >> 2] = 0;
 HEAP32[$0 + 2680 >> 2] = 0;
 HEAP32[$0 + 2668 >> 2] = 0;
 HEAP32[$0 + 2656 >> 2] = 0;
 HEAP32[$0 + 2644 >> 2] = 0;
 HEAP32[$0 + 2636 >> 2] = 0;
 HEAP32[$0 + 2548 >> 2] = 0;
 HEAP32[$0 + 2536 >> 2] = 0;
 HEAP32[$0 + 2524 >> 2] = 0;
 HEAP32[$0 + 2512 >> 2] = 0;
 HEAP32[$0 + 2500 >> 2] = 0;
 HEAP32[$0 + 2488 >> 2] = 0;
 HEAP32[$0 + 2476 >> 2] = 0;
 HEAP32[$0 + 2464 >> 2] = 0;
 HEAP32[$0 + 2452 >> 2] = 0;
 HEAP32[$0 + 2440 >> 2] = 0;
 HEAP32[$0 + 2428 >> 2] = 0;
 HEAP32[$0 + 2416 >> 2] = 0;
 HEAP32[$0 + 2404 >> 2] = 0;
 HEAP32[$0 + 2392 >> 2] = 0;
 HEAP32[$0 + 2380 >> 2] = 0;
 HEAP32[$0 + 2368 >> 2] = 0;
 HEAP32[$0 + 2344 >> 2] = 0;
 HEAP32[$0 + 2260 >> 2] = 0;
 HEAP32[$0 + 2248 >> 2] = 0;
 HEAP32[$0 + 2236 >> 2] = 0;
 HEAP32[$0 + 2224 >> 2] = 0;
 HEAP32[$0 + 2212 >> 2] = 0;
 HEAP32[$0 + 2200 >> 2] = 0;
 HEAP32[$0 + 2188 >> 2] = 0;
 HEAP32[$0 + 2176 >> 2] = 0;
 HEAP32[$0 + 2164 >> 2] = 0;
 HEAP32[$0 + 2152 >> 2] = 0;
 HEAP32[$0 + 2140 >> 2] = 0;
 HEAP32[$0 + 2128 >> 2] = 0;
 HEAP32[$0 + 2116 >> 2] = 0;
 HEAP32[$0 + 2104 >> 2] = 0;
 HEAP32[$0 + 2092 >> 2] = 0;
 HEAP32[$0 + 2080 >> 2] = 0;
 HEAP32[$0 + 2056 >> 2] = 0;
 HEAP32[$0 + 1972 >> 2] = 0;
 HEAP32[$0 + 1960 >> 2] = 0;
 HEAP32[$0 + 1948 >> 2] = 0;
 HEAP32[$0 + 1936 >> 2] = 0;
 HEAP32[$0 + 1924 >> 2] = 0;
 HEAP32[$0 + 1912 >> 2] = 0;
 HEAP32[$0 + 1900 >> 2] = 0;
 HEAP32[$0 + 1888 >> 2] = 0;
 HEAP32[$0 + 1876 >> 2] = 0;
 HEAP32[$0 + 1864 >> 2] = 0;
 HEAP32[$0 + 1852 >> 2] = 0;
 HEAP32[$0 + 1840 >> 2] = 0;
 HEAP32[$0 + 1828 >> 2] = 0;
 HEAP32[$0 + 1816 >> 2] = 0;
 HEAP32[$0 + 1804 >> 2] = 0;
 HEAP32[$0 + 1792 >> 2] = 0;
 HEAP32[$0 + 1768 >> 2] = 0;
 HEAP32[$0 + 1684 >> 2] = 0;
 HEAP32[$0 + 1672 >> 2] = 0;
 HEAP32[$0 + 1660 >> 2] = 0;
 HEAP32[$0 + 1648 >> 2] = 0;
 HEAP32[$0 + 1636 >> 2] = 0;
 HEAP32[$0 + 1624 >> 2] = 0;
 HEAP32[$0 + 1612 >> 2] = 0;
 HEAP32[$0 + 1600 >> 2] = 0;
 HEAP32[$0 + 1588 >> 2] = 0;
 HEAP32[$0 + 1576 >> 2] = 0;
 HEAP32[$0 + 1564 >> 2] = 0;
 HEAP32[$0 + 1552 >> 2] = 0;
 HEAP32[$0 + 1540 >> 2] = 0;
 HEAP32[$0 + 1528 >> 2] = 0;
 HEAP32[$0 + 1516 >> 2] = 0;
 HEAP32[$0 + 1504 >> 2] = 0;
 HEAP32[$0 + 1480 >> 2] = 0;
 HEAP32[$0 + 1396 >> 2] = 0;
 HEAP32[$0 + 1384 >> 2] = 0;
 HEAP32[$0 + 1372 >> 2] = 0;
 HEAP32[$0 + 1360 >> 2] = 0;
 HEAP32[$0 + 1348 >> 2] = 0;
 HEAP32[$0 + 1336 >> 2] = 0;
 HEAP32[$0 + 1324 >> 2] = 0;
 HEAP32[$0 + 1312 >> 2] = 0;
 HEAP32[$0 + 1300 >> 2] = 0;
 HEAP32[$0 + 1288 >> 2] = 0;
 HEAP32[$0 + 1276 >> 2] = 0;
 HEAP32[$0 + 1264 >> 2] = 0;
 HEAP32[$0 + 1252 >> 2] = 0;
 HEAP32[$0 + 1240 >> 2] = 0;
 HEAP32[$0 + 1228 >> 2] = 0;
 HEAP32[$0 + 1216 >> 2] = 0;
 HEAP32[$0 + 1192 >> 2] = 0;
 HEAP32[$0 + 1108 >> 2] = 0;
 HEAP32[$0 + 1096 >> 2] = 0;
 HEAP32[$0 + 1084 >> 2] = 0;
 HEAP32[$0 + 1072 >> 2] = 0;
 HEAP32[$0 + 1060 >> 2] = 0;
 HEAP32[$0 + 1048 >> 2] = 0;
 HEAP32[$0 + 1036 >> 2] = 0;
 HEAP32[$0 + 1024 >> 2] = 0;
 HEAP32[$0 + 1012 >> 2] = 0;
 HEAP32[$0 + 1e3 >> 2] = 0;
 HEAP32[$0 + 988 >> 2] = 0;
 HEAP32[$0 + 976 >> 2] = 0;
 HEAP32[$0 + 964 >> 2] = 0;
 HEAP32[$0 + 952 >> 2] = 0;
 HEAP32[$0 + 940 >> 2] = 0;
 HEAP32[$0 + 928 >> 2] = 0;
 HEAP32[$0 + 904 >> 2] = 0;
 HEAP32[$0 + 820 >> 2] = 0;
 HEAP32[$0 + 808 >> 2] = 0;
 HEAP32[$0 + 796 >> 2] = 0;
 HEAP32[$0 + 784 >> 2] = 0;
 HEAP32[$0 + 772 >> 2] = 0;
 HEAP32[$0 + 760 >> 2] = 0;
 HEAP32[$0 + 748 >> 2] = 0;
 HEAP32[$0 + 736 >> 2] = 0;
 HEAP32[$0 + 724 >> 2] = 0;
 HEAP32[$0 + 712 >> 2] = 0;
 HEAP32[$0 + 700 >> 2] = 0;
 HEAP32[$0 + 688 >> 2] = 0;
 HEAP32[$0 + 676 >> 2] = 0;
 HEAP32[$0 + 664 >> 2] = 0;
 HEAP32[$0 + 652 >> 2] = 0;
 HEAP32[$0 + 640 >> 2] = 0;
 HEAP32[$0 + 616 >> 2] = 0;
 HEAP32[$0 + 532 >> 2] = 0;
 HEAP32[$0 + 520 >> 2] = 0;
 HEAP32[$0 + 508 >> 2] = 0;
 HEAP32[$0 + 496 >> 2] = 0;
 HEAP32[$0 + 484 >> 2] = 0;
 HEAP32[$0 + 472 >> 2] = 0;
 HEAP32[$0 + 460 >> 2] = 0;
 HEAP32[$0 + 448 >> 2] = 0;
 HEAP32[$0 + 436 >> 2] = 0;
 HEAP32[$0 + 424 >> 2] = 0;
 HEAP32[$0 + 412 >> 2] = 0;
 HEAP32[$0 + 400 >> 2] = 0;
 HEAP32[$0 + 388 >> 2] = 0;
 HEAP32[$0 + 376 >> 2] = 0;
 HEAP32[$0 + 364 >> 2] = 0;
 HEAP32[$0 + 352 >> 2] = 0;
 HEAP32[$24 >> 2] = 0;
 __ZN5Oryol11ShaderSetup12programEntryD2Ev($19);
 STACKTOP = sp;
 return;
}

function __ZN10ImDrawList13ChannelsMergeEv($this) {
 $this = $this | 0;
 var $$lcssa = 0, $$lcssa21 = 0, $0 = 0, $101 = 0, $102 = 0, $105 = 0, $11 = 0, $110 = 0, $112 = 0, $119 = 0, $12 = 0, $13 = 0, $130 = 0, $14 = 0, $20 = 0, $23 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $63 = 0, $64 = 0, $67 = 0, $68 = 0, $74 = 0, $8 = 0, $80 = 0, $84 = 0, $87 = 0, $88 = 0, $90 = 0, $91 = 0, $92 = 0, $95 = 0, $cmd_write$08 = 0, $cmd_write$1 = 0, $i$010 = 0, $i1$09 = 0, $new_cmd_buffer_count$0$lcssa = 0, $new_cmd_buffer_count$012 = 0, $new_idx_buffer_count$0$lcssa = 0, $new_idx_buffer_count$011 = 0, label = 0;
 $0 = $this + 92 | 0;
 if ((HEAP32[$0 >> 2] | 0) < 2) return;
 $3 = $this + 88 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) {
  $6 = $this + 104 | 0;
  $8 = (HEAP32[$6 >> 2] | 0) + ($4 * 24 | 0) | 0;
  HEAP32[$8 >> 2] = HEAP32[$this >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$this + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$this + 8 >> 2];
  $11 = (HEAP32[$6 >> 2] | 0) + ((HEAP32[$3 >> 2] | 0) * 24 | 0) + 12 | 0;
  $12 = $this + 12 | 0;
  HEAP32[$11 >> 2] = HEAP32[$12 >> 2];
  HEAP32[$11 + 4 >> 2] = HEAP32[$12 + 4 >> 2];
  HEAP32[$11 + 8 >> 2] = HEAP32[$12 + 8 >> 2];
  HEAP32[$3 >> 2] = 0;
  $13 = HEAP32[$6 >> 2] | 0;
  HEAP32[$this >> 2] = HEAP32[$13 >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$13 + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$13 + 8 >> 2];
  $14 = $13 + 12 | 0;
  HEAP32[$12 >> 2] = HEAP32[$14 >> 2];
  HEAP32[$12 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
  HEAP32[$12 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
  HEAP32[$this + 48 >> 2] = (HEAP32[$this + 20 >> 2] | 0) + (HEAP32[$12 >> 2] << 1);
 }
 $20 = HEAP32[$this >> 2] | 0;
 if (!$20) $130 = 0; else {
  if (($20 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
  $23 = $20 + -1 | 0;
  if (!(HEAP32[(HEAP32[$this + 8 >> 2] | 0) + ($23 << 5) >> 2] | 0)) {
   HEAP32[$this >> 2] = $23;
   $130 = $23;
  } else $130 = $20;
 }
 $29 = HEAP32[$0 >> 2] | 0;
 do if (($29 | 0) > 1) {
  $32 = HEAP32[$this + 96 >> 2] | 0;
  $33 = $this + 104 | 0;
  $i$010 = 1;
  $new_cmd_buffer_count$012 = 0;
  $new_idx_buffer_count$011 = 0;
  while (1) {
   if (($32 | 0) <= ($i$010 | 0)) {
    label = 25;
    break;
   }
   $90 = HEAP32[$33 >> 2] | 0;
   $91 = $90 + ($i$010 * 24 | 0) | 0;
   $92 = HEAP32[$91 >> 2] | 0;
   if (!$92) $102 = 0; else {
    if (($92 | 0) <= 0) {
     label = 28;
     break;
    }
    $95 = $92 + -1 | 0;
    if (!(HEAP32[(HEAP32[$90 + ($i$010 * 24 | 0) + 8 >> 2] | 0) + ($95 << 5) >> 2] | 0)) {
     HEAP32[$91 >> 2] = $95;
     $102 = $95;
    } else $102 = $92;
   }
   $101 = $102 + $new_cmd_buffer_count$012 | 0;
   $105 = (HEAP32[$90 + ($i$010 * 24 | 0) + 12 >> 2] | 0) + $new_idx_buffer_count$011 | 0;
   $i$010 = $i$010 + 1 | 0;
   if (($i$010 | 0) >= ($29 | 0)) {
    $$lcssa = $101;
    $$lcssa21 = $105;
    label = 11;
    break;
   } else {
    $new_cmd_buffer_count$012 = $101;
    $new_idx_buffer_count$011 = $105;
   }
  }
  if ((label | 0) == 11) {
   $35 = HEAP32[$this >> 2] | 0;
   $new_cmd_buffer_count$0$lcssa = $$lcssa;
   $new_idx_buffer_count$0$lcssa = $$lcssa21;
   break;
  } else if ((label | 0) == 25) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 28) ___assert_fail(127436, 127226, 815, 127445);
 } else {
  $35 = $130;
  $new_cmd_buffer_count$0$lcssa = 0;
  $new_idx_buffer_count$0$lcssa = 0;
 } while (0);
 $34 = $35 + $new_cmd_buffer_count$0$lcssa | 0;
 $36 = $this + 4 | 0;
 $37 = HEAP32[$36 >> 2] | 0;
 if (($37 | 0) < ($34 | 0)) {
  if (!$37) $43 = 8; else $43 = (($37 | 0) / 2 | 0) + $37 | 0;
  $44 = ($43 | 0) > ($34 | 0) ? $43 : $34;
  if (($37 | 0) < ($44 | 0)) {
   $47 = __ZN5ImGui8MemAllocEj($44 << 5) | 0;
   $48 = $this + 8 | 0;
   _memcpy($47 | 0, HEAP32[$48 >> 2] | 0, HEAP32[$this >> 2] << 5 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$48 >> 2] | 0);
   HEAP32[$48 >> 2] = $47;
   HEAP32[$36 >> 2] = $44;
  }
 }
 HEAP32[$this >> 2] = $34;
 $53 = $this + 12 | 0;
 $55 = (HEAP32[$53 >> 2] | 0) + $new_idx_buffer_count$0$lcssa | 0;
 $56 = $this + 16 | 0;
 $57 = HEAP32[$56 >> 2] | 0;
 if (($57 | 0) < ($55 | 0)) {
  if (!$57) $63 = 8; else $63 = (($57 | 0) / 2 | 0) + $57 | 0;
  $64 = ($63 | 0) > ($55 | 0) ? $63 : $55;
  if (($57 | 0) < ($64 | 0)) {
   $67 = __ZN5ImGui8MemAllocEj($64 << 1) | 0;
   $68 = $this + 20 | 0;
   _memcpy($67 | 0, HEAP32[$68 >> 2] | 0, HEAP32[$53 >> 2] << 1 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$68 >> 2] | 0);
   HEAP32[$68 >> 2] = $67;
   HEAP32[$56 >> 2] = $64;
   $84 = HEAP32[$this >> 2] | 0;
  } else $84 = $34;
 } else $84 = $34;
 HEAP32[$53 >> 2] = $55;
 $74 = HEAP32[$this + 8 >> 2] | 0;
 $80 = $this + 48 | 0;
 HEAP32[$80 >> 2] = (HEAP32[$this + 20 >> 2] | 0) + ($55 << 1) + (0 - $new_idx_buffer_count$0$lcssa << 1);
 L43 : do if ((HEAP32[$0 >> 2] | 0) > 1) {
  $87 = $this + 96 | 0;
  $88 = $this + 104 | 0;
  $cmd_write$08 = $74 + ($84 << 5) + (0 - $new_cmd_buffer_count$0$lcssa << 5) | 0;
  $i1$09 = 1;
  while (1) {
   if ((HEAP32[$87 >> 2] | 0) <= ($i1$09 | 0)) break;
   $110 = HEAP32[$88 >> 2] | 0;
   $112 = HEAP32[$110 + ($i1$09 * 24 | 0) >> 2] | 0;
   if (!$112) $cmd_write$1 = $cmd_write$08; else {
    _memcpy($cmd_write$08 | 0, HEAP32[$110 + ($i1$09 * 24 | 0) + 8 >> 2] | 0, $112 << 5 | 0) | 0;
    $cmd_write$1 = $cmd_write$08 + ($112 << 5) | 0;
   }
   $119 = HEAP32[$110 + ($i1$09 * 24 | 0) + 12 >> 2] | 0;
   if ($119 | 0) {
    _memcpy(HEAP32[$80 >> 2] | 0, HEAP32[$110 + ($i1$09 * 24 | 0) + 20 >> 2] | 0, $119 << 1 | 0) | 0;
    HEAP32[$80 >> 2] = (HEAP32[$80 >> 2] | 0) + ($119 << 1);
   }
   $i1$09 = $i1$09 + 1 | 0;
   if (($i1$09 | 0) >= (HEAP32[$0 >> 2] | 0)) break L43; else $cmd_write$08 = $cmd_write$1;
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 __ZN10ImDrawList10AddDrawCmdEv($this);
 HEAP32[$0 >> 2] = 1;
 return;
}

function _fmod($x, $y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa7 = 0, $0 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $107 = 0, $108 = 0, $11 = 0, $113 = 0, $115 = 0, $117 = 0, $12 = 0, $120 = 0, $122 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $138 = 0, $139 = 0, $140 = 0, $141 = 0, $142 = 0, $147 = 0, $150 = 0, $151 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $17 = 0, $2 = 0, $24 = 0.0, $26 = 0, $27 = 0, $3 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $47 = 0, $56 = 0, $6 = 0, $61 = 0, $62 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $79 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $94 = 0, $96 = 0, $98 = 0, $ex$0$lcssa = 0, $ex$026 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$212 = 0, $ex$3$lcssa = 0, $ex$39 = 0, $ey$0$lcssa = 0, $ey$020 = 0, $ey$1$ph = 0, $fabs = 0.0, label = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $6 = $4 & 2047;
 $7 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 $9 = $7 & 2047;
 $10 = $1 & -2147483648;
 $11 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
 $12 = tempRet0;
 L1 : do if (($11 | 0) == 0 & ($12 | 0) == 0) label = 3; else {
  $fabs = +Math_abs(+$y);
  HEAPF64[tempDoublePtr >> 3] = $fabs;
  $17 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
  if ($17 >>> 0 > 2146435072 | ($17 | 0) == 2146435072 & (HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 0 | ($6 | 0) == 2047) label = 3; else {
   $26 = _bitshift64Shl($0 | 0, $1 | 0, 1) | 0;
   $27 = tempRet0;
   if (!($27 >>> 0 > $12 >>> 0 | ($27 | 0) == ($12 | 0) & $26 >>> 0 > $11 >>> 0)) return +(($26 | 0) == ($11 | 0) & ($27 | 0) == ($12 | 0) ? $x * 0.0 : $x);
   if (!$6) {
    $38 = _bitshift64Shl($0 | 0, $1 | 0, 12) | 0;
    $39 = tempRet0;
    if (($39 | 0) > -1 | ($39 | 0) == -1 & $38 >>> 0 > 4294967295) {
     $46 = $38;
     $47 = $39;
     $ex$026 = 0;
     while (1) {
      $45 = $ex$026 + -1 | 0;
      $46 = _bitshift64Shl($46 | 0, $47 | 0, 1) | 0;
      $47 = tempRet0;
      if (!(($47 | 0) > -1 | ($47 | 0) == -1 & $46 >>> 0 > 4294967295)) {
       $ex$0$lcssa = $45;
       break;
      } else $ex$026 = $45;
     }
    } else $ex$0$lcssa = 0;
    $56 = _bitshift64Shl($0 | 0, $1 | 0, 1 - $ex$0$lcssa | 0) | 0;
    $84 = $56;
    $85 = tempRet0;
    $ex$1 = $ex$0$lcssa;
   } else {
    $84 = $0;
    $85 = $1 & 1048575 | 1048576;
    $ex$1 = $6;
   }
   if (!$9) {
    $61 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
    $62 = tempRet0;
    if (($62 | 0) > -1 | ($62 | 0) == -1 & $61 >>> 0 > 4294967295) {
     $69 = $61;
     $70 = $62;
     $ey$020 = 0;
     while (1) {
      $68 = $ey$020 + -1 | 0;
      $69 = _bitshift64Shl($69 | 0, $70 | 0, 1) | 0;
      $70 = tempRet0;
      if (!(($70 | 0) > -1 | ($70 | 0) == -1 & $69 >>> 0 > 4294967295)) {
       $ey$0$lcssa = $68;
       break;
      } else $ey$020 = $68;
     }
    } else $ey$0$lcssa = 0;
    $79 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $ey$0$lcssa | 0) | 0;
    $86 = $79;
    $87 = tempRet0;
    $ey$1$ph = $ey$0$lcssa;
   } else {
    $86 = $2;
    $87 = $3 & 1048575 | 1048576;
    $ey$1$ph = $9;
   }
   $88 = _i64Subtract($84 | 0, $85 | 0, $86 | 0, $87 | 0) | 0;
   $89 = tempRet0;
   $94 = ($89 | 0) > -1 | ($89 | 0) == -1 & $88 >>> 0 > 4294967295;
   L23 : do if (($ex$1 | 0) > ($ey$1$ph | 0)) {
    $153 = $94;
    $154 = $88;
    $155 = $89;
    $96 = $84;
    $98 = $85;
    $ex$212 = $ex$1;
    while (1) {
     if ($153) if (($96 | 0) == ($86 | 0) & ($98 | 0) == ($87 | 0)) break; else {
      $101 = $154;
      $102 = $155;
     } else {
      $101 = $96;
      $102 = $98;
     }
     $103 = _bitshift64Shl($101 | 0, $102 | 0, 1) | 0;
     $104 = tempRet0;
     $105 = $ex$212 + -1 | 0;
     $107 = _i64Subtract($103 | 0, $104 | 0, $86 | 0, $87 | 0) | 0;
     $108 = tempRet0;
     $113 = ($108 | 0) > -1 | ($108 | 0) == -1 & $107 >>> 0 > 4294967295;
     if (($105 | 0) > ($ey$1$ph | 0)) {
      $153 = $113;
      $154 = $107;
      $155 = $108;
      $96 = $103;
      $98 = $104;
      $ex$212 = $105;
     } else {
      $$lcssa7 = $113;
      $115 = $103;
      $117 = $104;
      $156 = $107;
      $157 = $108;
      $ex$2$lcssa = $105;
      break L23;
     }
    }
    $$0 = $x * 0.0;
    break L1;
   } else {
    $$lcssa7 = $94;
    $115 = $84;
    $117 = $85;
    $156 = $88;
    $157 = $89;
    $ex$2$lcssa = $ex$1;
   } while (0);
   if ($$lcssa7) if (($115 | 0) == ($86 | 0) & ($117 | 0) == ($87 | 0)) {
    $$0 = $x * 0.0;
    break;
   } else {
    $120 = $157;
    $122 = $156;
   } else {
    $120 = $117;
    $122 = $115;
   }
   if ($120 >>> 0 < 1048576 | ($120 | 0) == 1048576 & $122 >>> 0 < 0) {
    $127 = $122;
    $128 = $120;
    $ex$39 = $ex$2$lcssa;
    while (1) {
     $129 = _bitshift64Shl($127 | 0, $128 | 0, 1) | 0;
     $130 = tempRet0;
     $131 = $ex$39 + -1 | 0;
     if ($130 >>> 0 < 1048576 | ($130 | 0) == 1048576 & $129 >>> 0 < 0) {
      $127 = $129;
      $128 = $130;
      $ex$39 = $131;
     } else {
      $138 = $129;
      $139 = $130;
      $ex$3$lcssa = $131;
      break;
     }
    }
   } else {
    $138 = $122;
    $139 = $120;
    $ex$3$lcssa = $ex$2$lcssa;
   }
   if (($ex$3$lcssa | 0) > 0) {
    $140 = _i64Add($138 | 0, $139 | 0, 0, -1048576) | 0;
    $141 = tempRet0;
    $142 = _bitshift64Shl($ex$3$lcssa | 0, 0, 52) | 0;
    $150 = $141 | tempRet0;
    $151 = $140 | $142;
   } else {
    $147 = _bitshift64Lshr($138 | 0, $139 | 0, 1 - $ex$3$lcssa | 0) | 0;
    $150 = tempRet0;
    $151 = $147;
   }
   HEAP32[tempDoublePtr >> 2] = $151;
   HEAP32[tempDoublePtr + 4 >> 2] = $150 | $10;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
  }
 } while (0);
 if ((label | 0) == 3) {
  $24 = $x * $y;
  $$0 = $24 / $24;
 }
 return +$$0;
}

function __ZL20stbtt_FindGlyphIndexPK14stbtt_fontinfoi($info$0$1$val, $info$0$10$val, $unicode_codepoint) {
 $info$0$1$val = $info$0$1$val | 0;
 $info$0$10$val = $info$0$10$val | 0;
 $unicode_codepoint = $unicode_codepoint | 0;
 var $$2$shrunk = 0, $$8 = 0, $$lcssa = 0, $$lcssa23 = 0, $$lcssa23$lcssa = 0, $$lcssa24 = 0, $$lcssa24$lcssa = 0, $$search$1 = 0, $0 = 0, $100 = 0, $104 = 0, $106 = 0, $109 = 0, $113 = 0, $118 = 0, $132 = 0, $137 = 0, $139 = 0, $157 = 0, $161 = 0, $163 = 0, $17 = 0, $180 = 0, $182 = 0, $202 = 0, $21 = 0, $22 = 0, $33 = 0, $38 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $66 = 0, $77 = 0, $78 = 0, $89 = 0, $90 = 0, $96 = 0, $entrySelector$07 = 0, $high$0 = 0, $high$0$lcssa22 = 0, $high$0$ph = 0, $low$0$ph = 0, $search$1$lcssa = 0, $search$16 = 0, $searchRange$08 = 0, label = 0;
 $0 = $info$0$1$val + $info$0$10$val | 0;
 $5 = ((HEAPU8[$0 >> 0] | 0) << 8 | (HEAPU8[$0 + 1 >> 0] | 0)) & 65535;
 switch ($5 << 16 >> 16) {
 case 0:
  {
   $6 = $0 + 2 | 0;
   if ((((HEAPU8[$6 >> 0] | 0) << 8 | (HEAPU8[$6 + 1 >> 0] | 0)) + -6 | 0) <= ($unicode_codepoint | 0)) {
    $$8 = 0;
    return $$8 | 0;
   }
   $$8 = HEAPU8[$0 + 6 + $unicode_codepoint >> 0] | 0;
   return $$8 | 0;
  }
 case 6:
  {
   $17 = $0 + 6 | 0;
   $21 = (HEAPU8[$17 >> 0] | 0) << 8 | (HEAPU8[$17 + 1 >> 0] | 0);
   $22 = $0 + 8 | 0;
   if ($21 >>> 0 > $unicode_codepoint >>> 0) {
    $$8 = 0;
    return $$8 | 0;
   }
   if ((((HEAPU8[$22 >> 0] | 0) << 8 | (HEAPU8[$22 + 1 >> 0] | 0)) + $21 | 0) >>> 0 <= $unicode_codepoint >>> 0) {
    $$8 = 0;
    return $$8 | 0;
   }
   $33 = $0 + 10 + ($unicode_codepoint - $21 << 1) | 0;
   $$8 = (HEAPU8[$33 >> 0] | 0) << 8 | (HEAPU8[$33 + 1 >> 0] | 0);
   return $$8 | 0;
  }
 case 2:
  {
   ___assert_fail(139733, 140438, 1091, 140535);
   break;
  }
 case 4:
  {
   $38 = $0 + 6 | 0;
   $43 = ((HEAPU8[$38 >> 0] | 0) << 8 | (HEAPU8[$38 + 1 >> 0] | 0)) >>> 1;
   $44 = $0 + 8 | 0;
   $45 = $0 + 10 | 0;
   $46 = $0 + 12 | 0;
   if (($unicode_codepoint | 0) > 65535) {
    $$8 = 0;
    return $$8 | 0;
   }
   $56 = ((HEAPU8[$45 >> 0] | 0) << 8 | (HEAPU8[$45 + 1 >> 0] | 0)) & 65535;
   $57 = (HEAPU8[$46 + 1 >> 0] | 0) & 254 | (HEAPU8[$46 >> 0] | 0) << 8;
   $58 = $info$0$1$val + ($info$0$10$val + 14) | 0;
   $59 = $58 + $57 | 0;
   $66 = $info$0$10$val + 12 + (((HEAPU8[$59 >> 0] | 0) << 8 | (HEAPU8[$59 + 1 >> 0] | 0) | 0) > ($unicode_codepoint | 0) ? 0 : $57) | 0;
   if (!($56 << 16 >> 16)) $search$1$lcssa = $66; else {
    $entrySelector$07 = $56;
    $search$16 = $66;
    $searchRange$08 = (((HEAPU8[$44 >> 0] | 0) << 8 | (HEAPU8[$44 + 1 >> 0] | 0)) & 65535) >>> 1;
    while (1) {
     $searchRange$08 = ($searchRange$08 & 65535) >>> 1;
     $77 = ($searchRange$08 & 65535) << 1;
     $78 = $info$0$1$val + $search$16 + $77 | 0;
     $$search$1 = (((HEAPU8[$78 >> 0] | 0) << 8 | (HEAPU8[$78 + 1 >> 0] | 0) | 0) < ($unicode_codepoint | 0) ? $77 : 0) + $search$16 | 0;
     $entrySelector$07 = $entrySelector$07 + -1 << 16 >> 16;
     if (!($entrySelector$07 << 16 >> 16)) {
      $search$1$lcssa = $$search$1;
      break;
     } else $search$16 = $$search$1;
    }
   }
   $89 = -14 - $info$0$10$val + 2 + $search$1$lcssa & 131070;
   $90 = $58 + $89 | 0;
   if (((HEAPU8[$90 >> 0] | 0) << 8 | (HEAPU8[$90 + 1 >> 0] | 0) | 0) < ($unicode_codepoint | 0)) ___assert_fail(140556, 140438, 1127, 140535);
   $96 = $0 + 14 | 0;
   $100 = $96 + ($43 << 1) + 2 + $89 | 0;
   $104 = (HEAPU8[$100 >> 0] | 0) << 8 | (HEAPU8[$100 + 1 >> 0] | 0);
   do if (($104 | 0) > ($unicode_codepoint | 0)) $$2$shrunk = 0; else {
    $106 = $43 * 6 | 0;
    $109 = $96 + $106 + 2 + $89 | 0;
    $113 = (HEAPU8[$109 >> 0] | 0) << 8 | (HEAPU8[$109 + 1 >> 0] | 0);
    if (!$113) {
     $118 = $96 + ($43 << 2) + 2 + $89 | 0;
     $$2$shrunk = ((HEAPU8[$118 >> 0] | 0) << 8 | (HEAPU8[$118 + 1 >> 0] | 0)) + $unicode_codepoint | 0;
     break;
    } else {
     $132 = $info$0$1$val + $113 + ($unicode_codepoint - $104 << 1) + $info$0$10$val + 14 + $106 + 2 + $89 | 0;
     $$2$shrunk = (HEAPU8[$132 >> 0] | 0) << 8 | (HEAPU8[$132 + 1 >> 0] | 0);
     break;
    }
   } while (0);
   $$8 = $$2$shrunk & 65535;
   return $$8 | 0;
  }
 default:
  {
   $137 = $5 << 16 >> 16 == 12;
   if (($5 & -2) << 16 >> 16 != 12) ___assert_fail(139733, 140438, 1162, 140535);
   $139 = $0 + 12 | 0;
   $157 = $0 + 16 | 0;
   $high$0$ph = (HEAPU8[$139 + 1 >> 0] | 0) << 16 | (HEAPU8[$139 >> 0] | 0) << 24 | (HEAPU8[$139 + 2 >> 0] | 0) << 8 | (HEAPU8[$139 + 3 >> 0] | 0);
   $low$0$ph = 0;
   L6 : while (1) {
    $high$0 = $high$0$ph;
    while (1) {
     if (($high$0 | 0) <= ($low$0$ph | 0)) {
      $$8 = 0;
      label = 27;
      break L6;
     }
     $161 = ($high$0 - $low$0$ph >> 1) + $low$0$ph | 0;
     $163 = $157 + ($161 * 12 | 0) | 0;
     $180 = (HEAPU8[$163 + 1 >> 0] | 0) << 16 | (HEAPU8[$163 >> 0] | 0) << 24 | (HEAPU8[$163 + 2 >> 0] | 0) << 8 | (HEAPU8[$163 + 3 >> 0] | 0);
     if ($180 >>> 0 > $unicode_codepoint >>> 0) $high$0 = $161; else {
      $$lcssa = $161;
      $$lcssa23 = $163;
      $$lcssa24 = $180;
      $high$0$lcssa22 = $high$0;
      break;
     }
    }
    $182 = $$lcssa23 + 4 | 0;
    if (((HEAPU8[$182 >> 0] | 0) << 24 | (HEAPU8[$182 + 1 >> 0] | 0) << 16 | (HEAPU8[$182 + 2 >> 0] | 0) << 8 | (HEAPU8[$182 + 3 >> 0] | 0)) >>> 0 < $unicode_codepoint >>> 0) {
     $high$0$ph = $high$0$lcssa22;
     $low$0$ph = $$lcssa + 1 | 0;
    } else {
     $$lcssa23$lcssa = $$lcssa23;
     $$lcssa24$lcssa = $$lcssa24;
     break;
    }
   }
   if ((label | 0) == 27) return $$8 | 0;
   $202 = $$lcssa23$lcssa + 8 | 0;
   $$8 = ((HEAPU8[$202 + 1 >> 0] | 0) << 16 | (HEAPU8[$202 >> 0] | 0) << 24 | (HEAPU8[$202 + 2 >> 0] | 0) << 8 | (HEAPU8[$202 + 3 >> 0] | 0)) + ($137 ? $unicode_codepoint - $$lcssa24$lcssa | 0 : 0) | 0;
   return $$8 | 0;
  }
 }
 return 0;
}

function __ZN6SoLoud6Soloud12mix_internalEj($this, $aSamples) {
 $this = $this | 0;
 $aSamples = $aSamples | 0;
 var $$phi$trans$insert = 0, $$pre$phi27Z2D = 0, $$pre$phiZ2D = 0, $$pre25 = 0, $1 = 0, $10 = 0, $101 = 0, $105 = 0, $106 = 0, $11 = 0.0, $110 = 0, $112 = 0, $114 = 0, $12 = 0, $125 = 0, $127 = 0.0, $133 = 0, $137 = 0, $142 = 0.0, $147 = 0, $150 = 0, $152 = 0, $157 = 0.0, $16 = 0.0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $31 = 0, $34 = 0, $36 = 0.0, $43 = 0, $49 = 0.0, $5 = 0.0, $50 = 0, $54 = 0, $6 = 0, $61 = 0, $64 = 0, $70 = 0, $71 = 0, $75 = 0, $8 = 0.0, $82 = 0, $90 = 0, $93 = 0, $95 = 0, $96 = 0, $i$012 = 0, $i$111 = 0, $i$24 = 0, $i$310 = 0, $j$03 = 0, $j1$06 = 0;
 $1 = $this + 4140 | 0;
 $5 = +($aSamples >>> 0) / +((HEAP32[$1 >> 2] | 0) >>> 0);
 $6 = $this + 4232 | 0;
 $8 = +HEAPF64[$6 >> 3] + $5;
 HEAPF64[$6 >> 3] = $8;
 HEAPF64[$this + 4240 >> 3] = 0.0;
 $10 = $this + 4164 | 0;
 $11 = +HEAPF32[$10 >> 2];
 $12 = $this + 4228 | 0;
 if (!(HEAP32[$12 >> 2] | 0)) $127 = $11; else {
  $16 = +__ZN6SoLoud5Fader3getEd($this + 4184 | 0, $8);
  HEAPF32[$10 >> 2] = $16;
  $127 = $16;
 }
 $17 = $this + 4 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if ($18 | 0) __ZN6SoLoud6Thread9lockMutexEPv($18);
 $20 = $this + 16 | 0;
 $23 = $this + 109920 | 0;
 if ((HEAP32[$20 >> 2] | 0) > 0) {
  $i$012 = 0;
  do {
   $24 = $this + 44 + ($i$012 << 2) | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   if ($25 | 0) if (!(HEAP32[$25 + 12 >> 2] & 4)) {
    $31 = $25 + 320 | 0;
    HEAP32[$31 >> 2] = 0;
    HEAP32[$31 >> 2] = (HEAP32[$12 >> 2] | 0) > 0 & 1;
    $34 = $25 + 72 | 0;
    $36 = $5 + +HEAPF64[$34 >> 3];
    HEAPF64[$34 >> 3] = $36;
    if ((HEAP32[$25 + 220 >> 2] | 0) > 0) {
     __ZN6SoLoud6Soloud25setVoiceRelativePlaySpeedEjf($this, $i$012, +__ZN6SoLoud5Fader3getEd($25 + 176 | 0, $36)) | 0;
     $43 = HEAP32[$24 >> 2] | 0;
    } else $43 = $25;
    if ((HEAP32[$43 + 172 >> 2] | 0) > 0) {
     $49 = +__ZN6SoLoud5Fader3getEd($43 + 128 | 0, +HEAPF64[$43 + 72 >> 3]);
     $50 = HEAP32[$24 >> 2] | 0;
     HEAPF32[$50 + 44 >> 2] = $49;
     HEAP32[$50 + 320 >> 2] = 1;
     __ZN6SoLoud6Soloud17updateVoiceVolumeEj($this, $i$012);
     HEAP8[$23 >> 0] = 1;
     $54 = HEAP32[$24 >> 2] | 0;
    } else $54 = $43;
    if ((HEAP32[$54 + 124 >> 2] | 0) > 0) {
     __ZN6SoLoud6Soloud11setVoicePanEjf($this, $i$012, +__ZN6SoLoud5Fader3getEd($54 + 80 | 0, +HEAPF64[$54 + 72 >> 3]));
     $61 = HEAP32[$24 >> 2] | 0;
     HEAP32[$61 + 320 >> 2] = 1;
     $64 = $61;
    } else $64 = $54;
    if (!(HEAP32[$64 + 268 >> 2] | 0)) $75 = $64; else {
     +__ZN6SoLoud5Fader3getEd($64 + 224 | 0, +HEAPF64[$64 + 72 >> 3]);
     $70 = HEAP32[$24 >> 2] | 0;
     $71 = $70 + 268 | 0;
     if ((HEAP32[$71 >> 2] | 0) == -1) {
      HEAP32[$71 >> 2] = 0;
      __ZN6SoLoud6Soloud13setVoicePauseEji($this, $i$012, 1);
      $75 = HEAP32[$24 >> 2] | 0;
     } else $75 = $70;
    }
    if (HEAP32[$75 + 316 >> 2] | 0) {
     +__ZN6SoLoud5Fader3getEd($75 + 272 | 0, +HEAPF64[$75 + 72 >> 3]);
     $82 = (HEAP32[$24 >> 2] | 0) + 316 | 0;
     if ((HEAP32[$82 >> 2] | 0) == -1) {
      HEAP32[$82 >> 2] = 0;
      __ZN6SoLoud6Soloud9stopVoiceEj($this, $i$012);
     }
    }
   }
   $i$012 = $i$012 + 1 | 0;
  } while (($i$012 | 0) < (HEAP32[$20 >> 2] | 0));
 }
 if (HEAP8[$23 >> 0] | 0) __ZN6SoLoud6Soloud16calcActiveVoicesEv($this);
 $90 = $this + 28 | 0;
 $93 = HEAP32[$this + 32 >> 2] | 0;
 if ((HEAP32[$90 >> 2] | 0) >>> 0 < $93 >>> 0) {
  HEAP32[$90 >> 2] = $93;
  $95 = $this + 24 | 0;
  $96 = HEAP32[$95 >> 2] | 0;
  if ($96 | 0) __ZdaPv($96);
  $101 = __Znaj(($93 * 24 | 0) + 16 | 0) | 0;
  HEAP32[$95 >> 2] = $101;
  $105 = $101 + 15 & -16;
  HEAP32[$this + 20 >> 2] = $105;
  $$pre25 = $this + 20 | 0;
  $$pre$phi27Z2D = $$pre25;
  $$pre$phiZ2D = $$pre25;
  $112 = $105;
 } else {
  $$phi$trans$insert = $this + 20 | 0;
  $$pre$phi27Z2D = $$phi$trans$insert;
  $$pre$phiZ2D = $$phi$trans$insert;
  $112 = HEAP32[$$phi$trans$insert >> 2] | 0;
 }
 $106 = $this + 36 | 0;
 $110 = $this + 4144 | 0;
 __ZN6SoLoud6Soloud6mixBusEPfjS1_jfj($this, HEAP32[$106 >> 2] | 0, $aSamples, $112, 0, +((HEAP32[$1 >> 2] | 0) >>> 0), HEAP32[$110 >> 2] | 0);
 $i$111 = 0;
 do {
  $114 = HEAP32[$this + 4280 + ($i$111 << 2) >> 2] | 0;
  if ($114 | 0) FUNCTION_TABLE_viiiidd[HEAP32[(HEAP32[$114 >> 2] | 0) + 8 >> 2] & 1]($114, HEAP32[$106 >> 2] | 0, $aSamples, HEAP32[$110 >> 2] | 0, +((HEAP32[$1 >> 2] | 0) >>> 0), +HEAPF64[$6 >> 3]);
  $i$111 = $i$111 + 1 | 0;
 } while (($i$111 | 0) != 8);
 $125 = HEAP32[$17 >> 2] | 0;
 if ($125 | 0) __ZN6SoLoud6Thread11unlockMutexEPv($125);
 __ZN6SoLoud6Soloud4clipERNS_18AlignedFloatBufferES2_jff($this, $106, $$pre$phiZ2D, $aSamples, $11, $127);
 if (!(HEAP32[$this + 4160 >> 2] & 2)) return;
 if ($aSamples >>> 0 > 255) {
  $i$24 = 0;
  do {
   $133 = $this + 4312 + ($i$24 << 2) | 0;
   HEAPF32[$133 >> 2] = 0.0;
   if ((HEAP32[$110 >> 2] | 0) > 0) {
    $142 = 0.0;
    $j$03 = 0;
    do {
     $137 = (Math_imul($j$03, $aSamples) | 0) + $i$24 | 0;
     $142 = +HEAPF32[(HEAP32[$$pre$phi27Z2D >> 2] | 0) + ($137 << 2) >> 2] + $142;
     HEAPF32[$133 >> 2] = $142;
     $j$03 = $j$03 + 1 | 0;
    } while (($j$03 | 0) < (HEAP32[$110 >> 2] | 0));
   }
   $i$24 = $i$24 + 1 | 0;
  } while (($i$24 | 0) != 256);
  return;
 } else $i$310 = 0;
 do {
  $147 = $this + 4312 + ($i$310 << 2) | 0;
  HEAPF32[$147 >> 2] = 0.0;
  if ((HEAP32[$110 >> 2] | 0) > 0) {
   $150 = ($i$310 >>> 0) % ($aSamples >>> 0) | 0;
   $157 = 0.0;
   $j1$06 = 0;
   do {
    $152 = $150 + (Math_imul($j1$06, $aSamples) | 0) | 0;
    $157 = +HEAPF32[(HEAP32[$$pre$phi27Z2D >> 2] | 0) + ($152 << 2) >> 2] + $157;
    HEAPF32[$147 >> 2] = $157;
    $j1$06 = $j1$06 + 1 | 0;
   } while (($j1$06 | 0) < (HEAP32[$110 >> 2] | 0));
  }
  $i$310 = $i$310 + 1 | 0;
 } while (($i$310 | 0) != 256);
 return;
}

function __ZN5ImGui8EndFrameEv() {
 var $$idx$val = 0.0, $$idx1$val = 0.0, $$lcssa = 0, $0 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $111 = 0, $114 = 0, $119 = 0, $120 = 0, $124 = 0, $126 = 0, $131 = 0, $132 = 0, $134 = 0, $136 = 0, $141 = 0, $142 = 0, $146 = 0, $148 = 0, $154 = 0, $155 = 0, $159 = 0, $162 = 0, $172 = 0, $173 = 0, $174 = 0, $176 = 0, $177 = 0, $178 = 0, $181 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0.0, $26 = 0.0, $3 = 0, $33 = 0, $38 = 0, $39 = 0, $47 = 0, $5 = 0, $56 = 0, $64 = 0, $65 = 0, $72 = 0, $75 = 0, $77 = 0, $8 = 0, $82 = 0, $90 = 0, $97 = 0, $i$07 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (!(HEAP8[146892] | 0)) ___assert_fail(124692, 124187, 2354, 126128);
 $3 = 152772;
 $5 = 152768;
 if ((HEAP32[$3 >> 2] | 0) == (HEAP32[$5 >> 2] | 0)) ___assert_fail(124706, 124187, 2355, 126128);
 $8 = 156952;
 do if (HEAP8[$8 >> 0] | 0) {
  HEAPF32[$0 >> 2] = 0.0;
  HEAPF32[$0 + 4 >> 2] = 0.0;
  __ZN5ImGui5BeginEPKcPbRK6ImVec2fi(126137, 0, $0, +HEAPF32[38181], 16777543) | 0;
  __ZN5ImGui15TextUnformattedEPKcS1_($8, 0);
  if (!(HEAP32[(HEAP32[38201] | 0) + 8 >> 2] & 16777216)) ___assert_fail(126174, 124187, 3111, 126231); else {
   __ZN5ImGui3EndEv();
   break;
  }
 } while (0);
 $21 = HEAP32[36769] | 0;
 if ($21 | 0) {
  $23 = 157980;
  $24 = 157988;
  $$idx$val = +HEAPF32[$23 >> 2];
  $$idx1$val = +HEAPF32[39496];
  $25 = $$idx$val - +HEAPF32[$24 >> 2];
  $26 = $$idx1$val - +HEAPF32[39498];
  if ($25 * $25 + $26 * $26 > 9.999999747378752e-05) {
   FUNCTION_TABLE_vii[$21 & 63](~~$$idx$val, ~~$$idx1$val);
   $33 = $23;
   $38 = HEAP32[$33 + 4 >> 2] | 0;
   $39 = $24;
   HEAP32[$39 >> 2] = HEAP32[$33 >> 2];
   HEAP32[$39 + 4 >> 2] = $38;
  }
 }
 if ((HEAP32[38202] | 0) != 1) ___assert_fail(126242, 124187, 2373, 126128);
 $47 = HEAP32[38201] | 0;
 if ($47 | 0) if (!(HEAP8[$47 + 114 >> 0] | 0)) HEAP8[$47 + 112 >> 0] = 0;
 __ZN5ImGui3EndEv();
 do if (!(HEAP32[38211] | 0)) {
  $56 = 152860;
  HEAP32[$56 >> 2] = 0;
  if (!(HEAP32[38208] | 0)) if (HEAP8[147696] | 0) {
   $64 = HEAP32[38205] | 0;
   $65 = ($64 | 0) == 0;
   if (!$65) if (!(HEAP8[$64 + 113 >> 0] | 0)) if (HEAP8[$64 + 112 >> 0] | 0) break;
   $72 = 152828;
   if (HEAP32[$72 >> 2] | 0) {
    $75 = 152824;
    __ZN5ImGui11FocusWindowEP11ImGuiWindow(HEAP32[$75 >> 2] | 0);
    $77 = HEAP32[$75 >> 2] | 0;
    if (HEAP32[$77 + 8 >> 2] & 4 | 0) break;
    HEAP32[$56 >> 2] = $77;
    $82 = HEAP32[$72 >> 2] | 0;
    HEAP32[38211] = HEAP32[$82 + 68 >> 2];
    HEAP8[152854] = 0;
    HEAP8[152853] = 1;
    HEAP32[38214] = $82;
    break;
   }
   if (!$65) {
    $90 = HEAP32[38229] | 0;
    if ($90 | 0) {
     if (($90 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
     $97 = HEAP32[(HEAP32[38231] | 0) + (($90 + -1 | 0) * 24 | 0) + 4 >> 2] | 0;
     if ($97 | 0) if (HEAP32[$97 + 8 >> 2] & 67108864 | 0) break;
    }
    HEAP32[38205] = 0;
   }
  }
 } while (0);
 $104 = 152792;
 $105 = 152796;
 $106 = HEAP32[$105 >> 2] | 0;
 if (($106 | 0) < 0) {
  $109 = (($106 | 0) / 2 | 0) + $106 | 0;
  $111 = ($109 | 0) > 0 ? $109 : 0;
  if (($106 | 0) < ($111 | 0)) {
   $114 = 147664;
   HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 1;
   $119 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($111 << 2) | 0;
   $120 = 152800;
   _memcpy($119 | 0, HEAP32[$120 >> 2] | 0, HEAP32[$104 >> 2] << 2 | 0) | 0;
   $124 = HEAP32[$120 >> 2] | 0;
   if ($124 | 0) {
    $126 = 147664;
    HEAP32[$126 >> 2] = (HEAP32[$126 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($124);
   HEAP32[$120 >> 2] = $119;
   HEAP32[$105 >> 2] = $111;
   $134 = $111;
  } else $134 = $106;
 } else $134 = $106;
 HEAP32[$104 >> 2] = 0;
 $131 = 152780;
 $132 = HEAP32[$131 >> 2] | 0;
 if (($134 | 0) < ($132 | 0)) {
  $136 = 147664;
  HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + 1;
  $141 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($132 << 2) | 0;
  $142 = 152800;
  _memcpy($141 | 0, HEAP32[$142 >> 2] | 0, HEAP32[$104 >> 2] << 2 | 0) | 0;
  $146 = HEAP32[$142 >> 2] | 0;
  if ($146 | 0) {
   $148 = 147664;
   HEAP32[$148 >> 2] = (HEAP32[$148 >> 2] | 0) + -1;
  }
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($146);
  HEAP32[$142 >> 2] = $141;
  HEAP32[$105 >> 2] = $132;
  $154 = HEAP32[$131 >> 2] | 0;
 } else $154 = $132;
 L58 : do if (!$154) $$lcssa = 0; else {
  $155 = 152788;
  $159 = $154;
  $i$07 = 0;
  while (1) {
   if (($159 | 0) <= ($i$07 | 0)) break;
   $162 = HEAP32[(HEAP32[$155 >> 2] | 0) + ($i$07 << 2) >> 2] | 0;
   if (!(HEAP8[$162 + 112 >> 0] | 0)) label = 49; else if (!(HEAP32[$162 + 8 >> 2] & 1048576)) label = 49; else $172 = $159;
   if ((label | 0) == 49) {
    label = 0;
    __ZL23AddWindowToSortedBufferR8ImVectorIP11ImGuiWindowES1_($104, $162);
    $172 = HEAP32[$131 >> 2] | 0;
   }
   $i$07 = $i$07 + 1 | 0;
   if (($i$07 | 0) == ($172 | 0)) {
    $$lcssa = $172;
    break L58;
   } else $159 = $172;
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 if (($$lcssa | 0) == (HEAP32[$104 >> 2] | 0)) {
  HEAP32[$104 >> 2] = $$lcssa;
  HEAP32[$131 >> 2] = $$lcssa;
  $173 = HEAP32[$105 >> 2] | 0;
  $174 = 152784;
  HEAP32[$105 >> 2] = HEAP32[$174 >> 2];
  HEAP32[$174 >> 2] = $173;
  $176 = 152800;
  $177 = HEAP32[$176 >> 2] | 0;
  $178 = 152788;
  HEAP32[$176 >> 2] = HEAP32[$178 >> 2];
  HEAP32[$178 >> 2] = $177;
  HEAPF32[36775] = 0.0;
  $181 = 147620;
  HEAP32[$181 >> 2] = 0;
  HEAP32[$181 + 4 >> 2] = 0;
  HEAP32[$181 + 8 >> 2] = 0;
  HEAP32[$181 + 12 >> 2] = 0;
  HEAP32[$181 + 16 >> 2] = 0;
  HEAP32[$181 + 20 >> 2] = 0;
  HEAP32[$181 + 24 >> 2] = 0;
  HEAP32[$181 + 28 >> 2] = 0;
  HEAP16[$181 + 32 >> 1] = 0;
  HEAP32[$3 >> 2] = HEAP32[$5 >> 2];
  STACKTOP = sp;
  return;
 } else ___assert_fail(126273, 124187, 2413, 126128);
}

function __ZN5Oryol12VertexLayoutC2ERKS0_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $11 = 0, $13 = 0, $15 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $9 = 0;
 $1 = HEAPU8[$0 >> 0] | HEAPU8[$0 + 1 >> 0] << 8;
 HEAP8[$this >> 0] = $1;
 HEAP8[$this + 1 >> 0] = $1 >> 8;
 $2 = $this + 2 | 0;
 $3 = $0 + 2 | 0;
 HEAP8[$2 >> 0] = 17;
 HEAP8[$this + 3 >> 0] = 13;
 $5 = $this + 4 | 0;
 HEAP8[$5 >> 0] = 17;
 HEAP8[$this + 5 >> 0] = 13;
 $7 = $this + 6 | 0;
 HEAP8[$7 >> 0] = 17;
 HEAP8[$this + 7 >> 0] = 13;
 $9 = $this + 8 | 0;
 HEAP8[$9 >> 0] = 17;
 HEAP8[$this + 9 >> 0] = 13;
 $11 = $this + 10 | 0;
 HEAP8[$11 >> 0] = 17;
 HEAP8[$this + 11 >> 0] = 13;
 $13 = $this + 12 | 0;
 HEAP8[$13 >> 0] = 17;
 HEAP8[$this + 13 >> 0] = 13;
 $15 = $this + 14 | 0;
 HEAP8[$15 >> 0] = 17;
 HEAP8[$this + 15 >> 0] = 13;
 $17 = $this + 16 | 0;
 HEAP8[$17 >> 0] = 17;
 HEAP8[$this + 17 >> 0] = 13;
 $19 = $this + 18 | 0;
 HEAP8[$19 >> 0] = 17;
 HEAP8[$this + 19 >> 0] = 13;
 $21 = $this + 20 | 0;
 HEAP8[$21 >> 0] = 17;
 HEAP8[$this + 21 >> 0] = 13;
 $23 = $this + 22 | 0;
 HEAP8[$23 >> 0] = 17;
 HEAP8[$this + 23 >> 0] = 13;
 $25 = $this + 24 | 0;
 HEAP8[$25 >> 0] = 17;
 HEAP8[$this + 25 >> 0] = 13;
 $27 = $this + 26 | 0;
 HEAP8[$27 >> 0] = 17;
 HEAP8[$this + 27 >> 0] = 13;
 $29 = $this + 28 | 0;
 HEAP8[$29 >> 0] = 17;
 HEAP8[$this + 29 >> 0] = 13;
 $31 = $this + 30 | 0;
 HEAP8[$31 >> 0] = 17;
 HEAP8[$this + 31 >> 0] = 13;
 $33 = $this + 32 | 0;
 HEAP8[$33 >> 0] = 17;
 HEAP8[$this + 33 >> 0] = 13;
 $35 = HEAPU8[$3 >> 0] | HEAPU8[$3 + 1 >> 0] << 8;
 HEAP8[$2 >> 0] = $35;
 HEAP8[$2 + 1 >> 0] = $35 >> 8;
 $36 = $0 + 4 | 0;
 $37 = HEAPU8[$36 >> 0] | HEAPU8[$36 + 1 >> 0] << 8;
 HEAP8[$5 >> 0] = $37;
 HEAP8[$5 + 1 >> 0] = $37 >> 8;
 $38 = $0 + 6 | 0;
 $39 = HEAPU8[$38 >> 0] | HEAPU8[$38 + 1 >> 0] << 8;
 HEAP8[$7 >> 0] = $39;
 HEAP8[$7 + 1 >> 0] = $39 >> 8;
 $40 = $0 + 8 | 0;
 $41 = HEAPU8[$40 >> 0] | HEAPU8[$40 + 1 >> 0] << 8;
 HEAP8[$9 >> 0] = $41;
 HEAP8[$9 + 1 >> 0] = $41 >> 8;
 $42 = $0 + 10 | 0;
 $43 = HEAPU8[$42 >> 0] | HEAPU8[$42 + 1 >> 0] << 8;
 HEAP8[$11 >> 0] = $43;
 HEAP8[$11 + 1 >> 0] = $43 >> 8;
 $44 = $0 + 12 | 0;
 $45 = HEAPU8[$44 >> 0] | HEAPU8[$44 + 1 >> 0] << 8;
 HEAP8[$13 >> 0] = $45;
 HEAP8[$13 + 1 >> 0] = $45 >> 8;
 $46 = $0 + 14 | 0;
 $47 = HEAPU8[$46 >> 0] | HEAPU8[$46 + 1 >> 0] << 8;
 HEAP8[$15 >> 0] = $47;
 HEAP8[$15 + 1 >> 0] = $47 >> 8;
 $48 = $0 + 16 | 0;
 $49 = HEAPU8[$48 >> 0] | HEAPU8[$48 + 1 >> 0] << 8;
 HEAP8[$17 >> 0] = $49;
 HEAP8[$17 + 1 >> 0] = $49 >> 8;
 $50 = $0 + 18 | 0;
 $51 = HEAPU8[$50 >> 0] | HEAPU8[$50 + 1 >> 0] << 8;
 HEAP8[$19 >> 0] = $51;
 HEAP8[$19 + 1 >> 0] = $51 >> 8;
 $52 = $0 + 20 | 0;
 $53 = HEAPU8[$52 >> 0] | HEAPU8[$52 + 1 >> 0] << 8;
 HEAP8[$21 >> 0] = $53;
 HEAP8[$21 + 1 >> 0] = $53 >> 8;
 $54 = $0 + 22 | 0;
 $55 = HEAPU8[$54 >> 0] | HEAPU8[$54 + 1 >> 0] << 8;
 HEAP8[$23 >> 0] = $55;
 HEAP8[$23 + 1 >> 0] = $55 >> 8;
 $56 = $0 + 24 | 0;
 $57 = HEAPU8[$56 >> 0] | HEAPU8[$56 + 1 >> 0] << 8;
 HEAP8[$25 >> 0] = $57;
 HEAP8[$25 + 1 >> 0] = $57 >> 8;
 $58 = $0 + 26 | 0;
 $59 = HEAPU8[$58 >> 0] | HEAPU8[$58 + 1 >> 0] << 8;
 HEAP8[$27 >> 0] = $59;
 HEAP8[$27 + 1 >> 0] = $59 >> 8;
 $60 = $0 + 28 | 0;
 $61 = HEAPU8[$60 >> 0] | HEAPU8[$60 + 1 >> 0] << 8;
 HEAP8[$29 >> 0] = $61;
 HEAP8[$29 + 1 >> 0] = $61 >> 8;
 $62 = $0 + 30 | 0;
 $63 = HEAPU8[$62 >> 0] | HEAPU8[$62 + 1 >> 0] << 8;
 HEAP8[$31 >> 0] = $63;
 HEAP8[$31 + 1 >> 0] = $63 >> 8;
 $64 = $0 + 32 | 0;
 $65 = HEAPU8[$64 >> 0] | HEAPU8[$64 + 1 >> 0] << 8;
 HEAP8[$33 >> 0] = $65;
 HEAP8[$33 + 1 >> 0] = $65 >> 8;
 HEAP8[$this + 34 >> 0] = HEAP8[$0 + 34 >> 0] | 0;
 HEAP8[$this + 35 >> 0] = HEAP8[$0 + 35 >> 0] | 0;
 HEAP8[$this + 36 >> 0] = HEAP8[$0 + 36 >> 0] | 0;
 HEAP8[$this + 37 >> 0] = HEAP8[$0 + 37 >> 0] | 0;
 HEAP8[$this + 38 >> 0] = HEAP8[$0 + 38 >> 0] | 0;
 HEAP8[$this + 39 >> 0] = HEAP8[$0 + 39 >> 0] | 0;
 HEAP8[$this + 40 >> 0] = HEAP8[$0 + 40 >> 0] | 0;
 HEAP8[$this + 41 >> 0] = HEAP8[$0 + 41 >> 0] | 0;
 HEAP8[$this + 42 >> 0] = HEAP8[$0 + 42 >> 0] | 0;
 HEAP8[$this + 43 >> 0] = HEAP8[$0 + 43 >> 0] | 0;
 HEAP8[$this + 44 >> 0] = HEAP8[$0 + 44 >> 0] | 0;
 HEAP8[$this + 45 >> 0] = HEAP8[$0 + 45 >> 0] | 0;
 HEAP8[$this + 46 >> 0] = HEAP8[$0 + 46 >> 0] | 0;
 HEAP8[$this + 47 >> 0] = HEAP8[$0 + 47 >> 0] | 0;
 HEAP8[$this + 48 >> 0] = HEAP8[$0 + 48 >> 0] | 0;
 HEAP8[$this + 49 >> 0] = HEAP8[$0 + 49 >> 0] | 0;
 HEAP8[$this + 50 >> 0] = HEAP8[$0 + 50 >> 0] | 0;
 HEAP8[$this + 51 >> 0] = HEAP8[$0 + 51 >> 0] | 0;
 HEAP8[$this + 52 >> 0] = HEAP8[$0 + 52 >> 0] | 0;
 HEAP8[$this + 53 >> 0] = HEAP8[$0 + 53 >> 0] | 0;
 HEAP8[$this + 54 >> 0] = HEAP8[$0 + 54 >> 0] | 0;
 HEAP8[$this + 55 >> 0] = HEAP8[$0 + 55 >> 0] | 0;
 HEAP8[$this + 56 >> 0] = HEAP8[$0 + 56 >> 0] | 0;
 HEAP8[$this + 57 >> 0] = HEAP8[$0 + 57 >> 0] | 0;
 HEAP8[$this + 58 >> 0] = HEAP8[$0 + 58 >> 0] | 0;
 HEAP8[$this + 59 >> 0] = HEAP8[$0 + 59 >> 0] | 0;
 HEAP8[$this + 60 >> 0] = HEAP8[$0 + 60 >> 0] | 0;
 HEAP8[$this + 61 >> 0] = HEAP8[$0 + 61 >> 0] | 0;
 HEAP8[$this + 62 >> 0] = HEAP8[$0 + 62 >> 0] | 0;
 HEAP8[$this + 63 >> 0] = HEAP8[$0 + 63 >> 0] | 0;
 HEAP8[$this + 64 >> 0] = HEAP8[$0 + 64 >> 0] | 0;
 HEAP8[$this + 65 >> 0] = HEAP8[$0 + 65 >> 0] | 0;
 $162 = $this + 66 | 0;
 $163 = $0 + 66 | 0;
 $164 = HEAPU8[$163 >> 0] | HEAPU8[$163 + 1 >> 0] << 8;
 HEAP8[$162 >> 0] = $164;
 HEAP8[$162 + 1 >> 0] = $164 >> 8;
 return;
}

function __ZN5Oryol5_priv8ioWorkerD2Ev($this) {
 $this = $this | 0;
 var $$pre5$i$i$i = 0, $$pre5$i$i$i1 = 0, $$pre5$i$i$i17 = 0, $$pre5$i$i$i33 = 0, $$pre6$i$i2$pre$phi$i15ZZZZ2D = 0, $$pre6$i$i2$pre$phi$i31ZZZZ2D = 0, $$pre6$i$i2$pre$phi$i44ZZZZ2D = 0, $$pre6$i$i2$pre$phi$iZZZZ2D = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $19 = 0, $21 = 0, $23 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $42 = 0, $44 = 0, $46 = 0, $49 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $61 = 0, $65 = 0, $67 = 0, $69 = 0, $7 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $83 = 0, $84 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $i$01$i$i$i = 0, $i$01$i$i$i24 = 0, $i$01$i$i$i40 = 0, $i$01$i$i$i8 = 0;
 $0 = $this + 84 | 0;
 HEAP32[$this + 100 >> 2] = 0;
 HEAP32[$this + 104 >> 2] = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $$pre5$i$i$i = $this + 92 | 0;
 if (!$3) $$pre6$i$i2$pre$phi$iZZZZ2D = $this + 96 | 0; else {
  $5 = HEAP32[$$pre5$i$i$i >> 2] | 0;
  $6 = $this + 96 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) {
   $11 = $3;
   $93 = $7;
   $i$01$i$i$i = $5;
   while (1) {
    $10 = $11 + ($i$01$i$i$i << 2) | 0;
    $12 = HEAP32[$10 >> 2] | 0;
    if (!$12) $21 = $93; else {
     $14 = $12 + 4 | 0;
     $15 = HEAP32[$14 >> 2] | 0;
     HEAP32[$14 >> 2] = $15 - 1;
     if (($15 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$12 >> 2] >> 2] & 255]($12);
     HEAP32[$10 >> 2] = 0;
     $21 = HEAP32[$6 >> 2] | 0;
    }
    $19 = $i$01$i$i$i + 1 | 0;
    if (($19 | 0) >= ($21 | 0)) break;
    $11 = HEAP32[$0 >> 2] | 0;
    $93 = $21;
    $i$01$i$i$i = $19;
   }
   $9 = HEAP32[$0 >> 2] | 0;
  } else $9 = $3;
  __ZN5Oryol6Memory4FreeEPv($9);
  $$pre6$i$i2$pre$phi$iZZZZ2D = $6;
 }
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 88 >> 2] = 0;
 HEAP32[$$pre5$i$i$i >> 2] = 0;
 HEAP32[$$pre6$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
 $23 = $this + 60 | 0;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP32[$this + 80 >> 2] = 0;
 $26 = HEAP32[$23 >> 2] | 0;
 $$pre5$i$i$i1 = $this + 68 | 0;
 if (!$26) $$pre6$i$i2$pre$phi$i15ZZZZ2D = $this + 72 | 0; else {
  $28 = HEAP32[$$pre5$i$i$i1 >> 2] | 0;
  $29 = $this + 72 | 0;
  $30 = HEAP32[$29 >> 2] | 0;
  if (($28 | 0) < ($30 | 0)) {
   $34 = $26;
   $94 = $30;
   $i$01$i$i$i8 = $28;
   while (1) {
    $33 = $34 + ($i$01$i$i$i8 << 2) | 0;
    $35 = HEAP32[$33 >> 2] | 0;
    if (!$35) $44 = $94; else {
     $37 = $35 + 4 | 0;
     $38 = HEAP32[$37 >> 2] | 0;
     HEAP32[$37 >> 2] = $38 - 1;
     if (($38 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$35 >> 2] >> 2] & 255]($35);
     HEAP32[$33 >> 2] = 0;
     $44 = HEAP32[$29 >> 2] | 0;
    }
    $42 = $i$01$i$i$i8 + 1 | 0;
    if (($42 | 0) >= ($44 | 0)) break;
    $34 = HEAP32[$23 >> 2] | 0;
    $94 = $44;
    $i$01$i$i$i8 = $42;
   }
   $32 = HEAP32[$23 >> 2] | 0;
  } else $32 = $26;
  __ZN5Oryol6Memory4FreeEPv($32);
  $$pre6$i$i2$pre$phi$i15ZZZZ2D = $29;
 }
 HEAP32[$23 >> 2] = 0;
 HEAP32[$this + 64 >> 2] = 0;
 HEAP32[$$pre5$i$i$i1 >> 2] = 0;
 HEAP32[$$pre6$i$i2$pre$phi$i15ZZZZ2D >> 2] = 0;
 $46 = $this + 36 | 0;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP32[$this + 56 >> 2] = 0;
 $49 = HEAP32[$46 >> 2] | 0;
 $$pre5$i$i$i17 = $this + 44 | 0;
 if (!$49) $$pre6$i$i2$pre$phi$i31ZZZZ2D = $this + 48 | 0; else {
  $51 = HEAP32[$$pre5$i$i$i17 >> 2] | 0;
  $52 = $this + 48 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  if (($51 | 0) < ($53 | 0)) {
   $57 = $49;
   $95 = $53;
   $i$01$i$i$i24 = $51;
   while (1) {
    $56 = $57 + ($i$01$i$i$i24 << 2) | 0;
    $58 = HEAP32[$56 >> 2] | 0;
    if (!$58) $67 = $95; else {
     $60 = $58 + 4 | 0;
     $61 = HEAP32[$60 >> 2] | 0;
     HEAP32[$60 >> 2] = $61 - 1;
     if (($61 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$58 >> 2] >> 2] & 255]($58);
     HEAP32[$56 >> 2] = 0;
     $67 = HEAP32[$52 >> 2] | 0;
    }
    $65 = $i$01$i$i$i24 + 1 | 0;
    if (($65 | 0) >= ($67 | 0)) break;
    $57 = HEAP32[$46 >> 2] | 0;
    $95 = $67;
    $i$01$i$i$i24 = $65;
   }
   $55 = HEAP32[$46 >> 2] | 0;
  } else $55 = $49;
  __ZN5Oryol6Memory4FreeEPv($55);
  $$pre6$i$i2$pre$phi$i31ZZZZ2D = $52;
 }
 HEAP32[$46 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 HEAP32[$$pre5$i$i$i17 >> 2] = 0;
 HEAP32[$$pre6$i$i2$pre$phi$i31ZZZZ2D >> 2] = 0;
 $69 = $this + 8 | 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP32[$this + 28 >> 2] = 0;
 $72 = HEAP32[$69 >> 2] | 0;
 $$pre5$i$i$i33 = $this + 16 | 0;
 if (!$72) {
  $$pre6$i$i2$pre$phi$i44ZZZZ2D = $this + 20 | 0;
  $92 = $this + 12 | 0;
  HEAP32[$69 >> 2] = 0;
  HEAP32[$92 >> 2] = 0;
  HEAP32[$$pre5$i$i$i33 >> 2] = 0;
  HEAP32[$$pre6$i$i2$pre$phi$i44ZZZZ2D >> 2] = 0;
  return;
 }
 $74 = HEAP32[$$pre5$i$i$i33 >> 2] | 0;
 $75 = $this + 20 | 0;
 $76 = HEAP32[$75 >> 2] | 0;
 if (($74 | 0) < ($76 | 0)) {
  $80 = $72;
  $96 = $76;
  $i$01$i$i$i40 = $74;
  while (1) {
   $79 = $80 + ($i$01$i$i$i40 << 3) + 4 | 0;
   $81 = HEAP32[$79 >> 2] | 0;
   if (!$81) $91 = $96; else {
    $83 = $81 + 4 | 0;
    $84 = HEAP32[$83 >> 2] | 0;
    HEAP32[$83 >> 2] = $84 - 1;
    if (($84 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$81 >> 2] >> 2] & 255]($81);
    HEAP32[$79 >> 2] = 0;
    $91 = HEAP32[$75 >> 2] | 0;
   }
   HEAP32[$80 + ($i$01$i$i$i40 << 3) >> 2] = 0;
   $89 = $i$01$i$i$i40 + 1 | 0;
   if (($89 | 0) >= ($91 | 0)) break;
   $80 = HEAP32[$69 >> 2] | 0;
   $96 = $91;
   $i$01$i$i$i40 = $89;
  }
  $78 = HEAP32[$69 >> 2] | 0;
 } else $78 = $72;
 __ZN5Oryol6Memory4FreeEPv($78);
 $$pre6$i$i2$pre$phi$i44ZZZZ2D = $75;
 $92 = $this + 12 | 0;
 HEAP32[$69 >> 2] = 0;
 HEAP32[$92 >> 2] = 0;
 HEAP32[$$pre5$i$i$i33 >> 2] = 0;
 HEAP32[$$pre6$i$i2$pre$phi$i44ZZZZ2D >> 2] = 0;
 return;
}

function __ZN7YakcApp11initModulesEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $102 = 0, $104 = 0, $105 = 0, $11 = 0, $114 = 0, $12 = 0, $123 = 0, $125 = 0, $126 = 0, $135 = 0, $16 = 0, $17 = 0, $2 = 0, $23 = 0, $27 = 0, $3 = 0, $32 = 0, $35 = 0, $4 = 0, $47 = 0, $5 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $7 = 0, $72 = 0, $8 = 0, $81 = 0, $83 = 0, $84 = 0, $9 = 0, $93 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 $0 = sp + 312 | 0;
 $1 = sp + 168 | 0;
 $2 = sp + 144 | 0;
 $3 = sp + 272 | 0;
 $4 = sp + 120 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 232 | 0;
 $7 = sp + 72 | 0;
 $8 = sp + 48 | 0;
 $9 = sp + 192 | 0;
 $10 = sp + 24 | 0;
 $11 = sp;
 $12 = $this + 462912 | 0;
 HEAP8[$12 >> 0] = 1;
 HEAP32[$this + 462916 >> 2] = 0;
 HEAP32[$this + 462924 >> 2] = 14449;
 HEAP32[$this + 462928 >> 2] = 14459;
 $16 = $this + 463168 | 0;
 $17 = HEAP8[$16 >> 0] | 0;
 if ($17 << 24 >> 24 == 8) $23 = 0; else if ((HEAP8[$this + 463208 >> 0] | 0) == 8) $23 = 1; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 if ((HEAP8[$this + 463168 + ($23 * 40 | 0) + 12 >> 0] | 0) == -1) {
  __ZN4yakc8kc85_exp13insert_moduleEhNS0_11module_typeE($12, 8, 0);
  $27 = HEAP8[$16 >> 0] | 0;
 } else $27 = $17;
 if ($27 << 24 >> 24 == 12) $32 = 0; else if ((HEAP8[$this + 463208 >> 0] | 0) == 12) $32 = 1; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 if ((HEAP8[$this + 463168 + ($32 * 40 | 0) + 12 >> 0] | 0) == -1) __ZN4yakc8kc85_exp13insert_moduleEhNS0_11module_typeE($12, 12, 0);
 $35 = $this + 463040 | 0;
 if (HEAP8[$35 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16514, 0, 40519, 156, 16548);
  _abort();
 }
 HEAP8[$35 >> 0] = 1;
 HEAP32[$this + 463044 >> 2] = 4;
 HEAP8[$this + 463048 >> 0] = -12;
 HEAP32[$this + 463052 >> 2] = 16693;
 HEAP32[$this + 463056 >> 2] = 14483;
 HEAP32[$this + 463060 >> 2] = 0;
 HEAP32[$this + 463064 >> 2] = 16384;
 HEAP8[$this + 463068 >> 0] = 1;
 HEAP8[$this + 463069 >> 0] = 1;
 HEAP8[$this + 463070 >> 0] = -64;
 $47 = $this + 462976 | 0;
 if (HEAP8[$47 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16514, 0, 40519, 156, 16548);
  _abort();
 }
 HEAP8[$47 >> 0] = 1;
 HEAP32[$this + 462980 >> 2] = 2;
 HEAP8[$this + 462984 >> 0] = -10;
 HEAP32[$this + 462988 >> 2] = 16664;
 HEAP32[$this + 462992 >> 2] = 14660;
 HEAP32[$this + 462996 >> 2] = 0;
 HEAP32[$this + 463e3 >> 2] = 65536;
 HEAP8[$this + 463004 >> 0] = 1;
 HEAP8[$this + 463005 >> 0] = 1;
 HEAP8[$this + 463006 >> 0] = -64;
 __ZN5Oryol3URLC2EPKc($0, 14890);
 $59 = $this;
 $60 = $1 + 16 | 0;
 HEAP32[$60 >> 2] = $1;
 HEAP32[$1 >> 2] = 564;
 HEAP32[$1 + 4 >> 2] = $59;
 $62 = $2 + 16 | 0;
 HEAP32[$62 >> 2] = 0;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($0, $1, $2);
 $63 = HEAP32[$62 >> 2] | 0;
 if (($63 | 0) == ($2 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$63 >> 2] | 0) + 16 >> 2] & 255]($63); else if ($63 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$63 >> 2] | 0) + 20 >> 2] & 255]($63);
 $72 = HEAP32[$60 >> 2] | 0;
 if (($72 | 0) == ($1 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$72 >> 2] | 0) + 16 >> 2] & 255]($72); else if ($72 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$72 >> 2] | 0) + 20 >> 2] & 255]($72);
 HEAP32[$0 >> 2] = 0;
 __ZN5Oryol3URLC2EPKc($3, 14904);
 $81 = $4 + 16 | 0;
 HEAP32[$81 >> 2] = $4;
 HEAP32[$4 >> 2] = 600;
 HEAP32[$4 + 4 >> 2] = $59;
 $83 = $5 + 16 | 0;
 HEAP32[$83 >> 2] = 0;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($3, $4, $5);
 $84 = HEAP32[$83 >> 2] | 0;
 if (($84 | 0) == ($5 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$84 >> 2] | 0) + 16 >> 2] & 255]($84); else if ($84 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$84 >> 2] | 0) + 20 >> 2] & 255]($84);
 $93 = HEAP32[$81 >> 2] | 0;
 if (($93 | 0) == ($4 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$93 >> 2] | 0) + 16 >> 2] & 255]($93); else if ($93 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$93 >> 2] | 0) + 20 >> 2] & 255]($93);
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLC2EPKc($6, 14920);
 $102 = $7 + 16 | 0;
 HEAP32[$102 >> 2] = $7;
 HEAP32[$7 >> 2] = 636;
 HEAP32[$7 + 4 >> 2] = $59;
 $104 = $8 + 16 | 0;
 HEAP32[$104 >> 2] = 0;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($6, $7, $8);
 $105 = HEAP32[$104 >> 2] | 0;
 if (($105 | 0) == ($8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$105 >> 2] | 0) + 16 >> 2] & 255]($105); else if ($105 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$105 >> 2] | 0) + 20 >> 2] & 255]($105);
 $114 = HEAP32[$102 >> 2] | 0;
 if (($114 | 0) == ($7 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$114 >> 2] | 0) + 16 >> 2] & 255]($114); else if ($114 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$114 >> 2] | 0) + 20 >> 2] & 255]($114);
 HEAP32[$6 >> 2] = 0;
 __ZN5Oryol3URLC2EPKc($9, 14933);
 $123 = $10 + 16 | 0;
 HEAP32[$123 >> 2] = $10;
 HEAP32[$10 >> 2] = 672;
 HEAP32[$10 + 4 >> 2] = $59;
 $125 = $11 + 16 | 0;
 HEAP32[$125 >> 2] = 0;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($9, $10, $11);
 $126 = HEAP32[$125 >> 2] | 0;
 if (($126 | 0) == ($11 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$126 >> 2] | 0) + 16 >> 2] & 255]($126); else if ($126 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$126 >> 2] | 0) + 20 >> 2] & 255]($126);
 $135 = HEAP32[$123 >> 2] | 0;
 if (($135 | 0) == ($10 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$135 >> 2] | 0) + 16 >> 2] & 255]($135);
  STACKTOP = sp;
  return;
 }
 if (!$135) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$135 >> 2] | 0) + 20 >> 2] & 255]($135);
 STACKTOP = sp;
 return;
}

function __ZN7YakcApp8initRomsEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $101 = 0, $102 = 0, $11 = 0, $111 = 0, $12 = 0, $120 = 0, $122 = 0, $123 = 0, $13 = 0, $132 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $48 = 0, $5 = 0, $57 = 0, $59 = 0, $6 = 0, $60 = 0, $69 = 0, $7 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $90 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 448 | 0;
 $0 = sp + 400 | 0;
 $1 = sp + 216 | 0;
 $2 = sp + 192 | 0;
 $3 = sp + 360 | 0;
 $4 = sp + 168 | 0;
 $5 = sp + 144 | 0;
 $6 = sp + 320 | 0;
 $7 = sp + 120 | 0;
 $8 = sp + 96 | 0;
 $9 = sp + 280 | 0;
 $10 = sp + 72 | 0;
 $11 = sp + 48 | 0;
 $12 = sp + 240 | 0;
 $13 = sp + 24 | 0;
 $14 = sp;
 $15 = $this + 463264 | 0;
 if ((HEAP32[$15 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $18 = $this + 463352 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if (($19 + 8192 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($this + 463356 + $19 | 0, 92528, 8192) | 0;
 $23 = HEAP32[$18 >> 2] | 0;
 HEAP32[$15 >> 2] = $23;
 HEAP32[$this + 463268 >> 2] = 8192;
 $25 = $23 + 8192 | 0;
 HEAP32[$18 >> 2] = $25;
 $26 = $this + 463312 | 0;
 if ((HEAP32[$26 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 if (($23 + 16384 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($this + 463356 + $25 | 0, 84336, 8192) | 0;
 $32 = HEAP32[$18 >> 2] | 0;
 HEAP32[$26 >> 2] = $32;
 HEAP32[$this + 463316 >> 2] = 8192;
 HEAP32[$18 >> 2] = $32 + 8192;
 __ZN5Oryol3URLC2EPKc($0, 14373);
 $35 = $this;
 $36 = $1 + 16 | 0;
 HEAP32[$36 >> 2] = $1;
 HEAP32[$1 >> 2] = 384;
 HEAP32[$1 + 4 >> 2] = $35;
 $38 = $2 + 16 | 0;
 HEAP32[$38 >> 2] = 0;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($0, $1, $2);
 $39 = HEAP32[$38 >> 2] | 0;
 if (($39 | 0) == ($2 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$39 >> 2] | 0) + 16 >> 2] & 255]($39); else if ($39 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$39 >> 2] | 0) + 20 >> 2] & 255]($39);
 $48 = HEAP32[$36 >> 2] | 0;
 if (($48 | 0) == ($1 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$48 >> 2] | 0) + 16 >> 2] & 255]($48); else if ($48 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$48 >> 2] | 0) + 20 >> 2] & 255]($48);
 HEAP32[$0 >> 2] = 0;
 __ZN5Oryol3URLC2EPKc($3, 14387);
 $57 = $4 + 16 | 0;
 HEAP32[$57 >> 2] = $4;
 HEAP32[$4 >> 2] = 420;
 HEAP32[$4 + 4 >> 2] = $35;
 $59 = $5 + 16 | 0;
 HEAP32[$59 >> 2] = 0;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($3, $4, $5);
 $60 = HEAP32[$59 >> 2] | 0;
 if (($60 | 0) == ($5 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$60 >> 2] | 0) + 16 >> 2] & 255]($60); else if ($60 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$60 >> 2] | 0) + 20 >> 2] & 255]($60);
 $69 = HEAP32[$57 >> 2] | 0;
 if (($69 | 0) == ($4 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$69 >> 2] | 0) + 16 >> 2] & 255]($69); else if ($69 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$69 >> 2] | 0) + 20 >> 2] & 255]($69);
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLC2EPKc($6, 14402);
 $78 = $7 + 16 | 0;
 HEAP32[$78 >> 2] = $7;
 HEAP32[$7 >> 2] = 456;
 HEAP32[$7 + 4 >> 2] = $35;
 $80 = $8 + 16 | 0;
 HEAP32[$80 >> 2] = 0;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($6, $7, $8);
 $81 = HEAP32[$80 >> 2] | 0;
 if (($81 | 0) == ($8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$81 >> 2] | 0) + 16 >> 2] & 255]($81); else if ($81 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$81 >> 2] | 0) + 20 >> 2] & 255]($81);
 $90 = HEAP32[$78 >> 2] | 0;
 if (($90 | 0) == ($7 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$90 >> 2] | 0) + 16 >> 2] & 255]($90); else if ($90 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$90 >> 2] | 0) + 20 >> 2] & 255]($90);
 HEAP32[$6 >> 2] = 0;
 __ZN5Oryol3URLC2EPKc($9, 14417);
 $99 = $10 + 16 | 0;
 HEAP32[$99 >> 2] = $10;
 HEAP32[$10 >> 2] = 492;
 HEAP32[$10 + 4 >> 2] = $35;
 $101 = $11 + 16 | 0;
 HEAP32[$101 >> 2] = 0;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($9, $10, $11);
 $102 = HEAP32[$101 >> 2] | 0;
 if (($102 | 0) == ($11 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$102 >> 2] | 0) + 16 >> 2] & 255]($102); else if ($102 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$102 >> 2] | 0) + 20 >> 2] & 255]($102);
 $111 = HEAP32[$99 >> 2] | 0;
 if (($111 | 0) == ($10 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$111 >> 2] | 0) + 16 >> 2] & 255]($111); else if ($111 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$111 >> 2] | 0) + 20 >> 2] & 255]($111);
 HEAP32[$9 >> 2] = 0;
 __ZN5Oryol3URLC2EPKc($12, 14433);
 $120 = $13 + 16 | 0;
 HEAP32[$120 >> 2] = $13;
 HEAP32[$13 >> 2] = 528;
 HEAP32[$13 + 4 >> 2] = $35;
 $122 = $14 + 16 | 0;
 HEAP32[$122 >> 2] = 0;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($12, $13, $14);
 $123 = HEAP32[$122 >> 2] | 0;
 if (($123 | 0) == ($14 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$123 >> 2] | 0) + 16 >> 2] & 255]($123); else if ($123 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$123 >> 2] | 0) + 20 >> 2] & 255]($123);
 $132 = HEAP32[$120 >> 2] | 0;
 if (($132 | 0) == ($13 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$132 >> 2] | 0) + 16 >> 2] & 255]($132);
  STACKTOP = sp;
  return;
 }
 if (!$132) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$132 >> 2] | 0) + 20 >> 2] & 255]($132);
 STACKTOP = sp;
 return;
}

function __ZN10ImDrawList13ChannelsSplitEi($this, $channels_count) {
 $this = $this | 0;
 $channels_count = $channels_count | 0;
 var $10 = 0, $101 = 0, $102 = 0, $108 = 0, $110 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $49 = 0, $50 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $63 = 0, $65 = 0, $68 = 0, $69 = 0, $7 = 0, $76 = 0, $77 = 0, $80 = 0, $82 = 0, $83 = 0, $85 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $97 = 0, $98 = 0, $i$06 = 0, label = 0;
 if (HEAP32[$this + 88 >> 2] | 0) ___assert_fail(127524, 127372, 255, 127569);
 $3 = $this + 92 | 0;
 if ((HEAP32[$3 >> 2] | 0) != 1) ___assert_fail(127524, 127372, 255, 127569);
 $6 = $this + 96 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($7 | 0) < ($channels_count | 0)) {
  $9 = $this + 100 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if (($10 | 0) < ($channels_count | 0)) {
   if (!$10) $16 = 8; else $16 = (($10 | 0) / 2 | 0) + $10 | 0;
   $17 = ($16 | 0) > ($channels_count | 0) ? $16 : $channels_count;
   if (($10 | 0) < ($17 | 0)) {
    $20 = __ZN5ImGui8MemAllocEj($17 * 24 | 0) | 0;
    $21 = $this + 104 | 0;
    _memcpy($20 | 0, HEAP32[$21 >> 2] | 0, (HEAP32[$6 >> 2] | 0) * 24 | 0) | 0;
    __ZN5ImGui7MemFreeEPv(HEAP32[$21 >> 2] | 0);
    HEAP32[$21 >> 2] = $20;
    HEAP32[$9 >> 2] = $17;
   }
  }
  HEAP32[$6 >> 2] = $channels_count;
  $27 = $channels_count;
 } else $27 = $7;
 HEAP32[$3 >> 2] = $channels_count;
 if (($27 | 0) <= 0) ___assert_fail(127217, 127226, 805, 127272);
 $28 = $this + 104 | 0;
 $29 = HEAP32[$28 >> 2] | 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$29 + 8 >> 2] = 0;
 HEAP32[$29 + 12 >> 2] = 0;
 HEAP32[$29 + 16 >> 2] = 0;
 HEAP32[$29 + 20 >> 2] = 0;
 if (($channels_count | 0) <= 1) return;
 $31 = $this + 52 | 0;
 $32 = $this + 60 | 0;
 $33 = $this + 64 | 0;
 $34 = $this + 72 | 0;
 $i$06 = 1;
 while (1) {
  $35 = HEAP32[$6 >> 2] | 0;
  if (($35 | 0) <= ($i$06 | 0)) {
   label = 17;
   break;
  }
  $38 = HEAP32[$28 >> 2] | 0;
  $39 = $38 + ($i$06 * 24 | 0) | 0;
  if (($i$06 | 0) < ($7 | 0)) {
   $40 = $38 + ($i$06 * 24 | 0) + 4 | 0;
   $41 = HEAP32[$40 >> 2] | 0;
   if (($41 | 0) < 0) {
    $44 = (($41 | 0) / 2 | 0) + $41 | 0;
    $46 = ($44 | 0) > 0 ? $44 : 0;
    if (($41 | 0) < ($46 | 0)) {
     $49 = __ZN5ImGui8MemAllocEj($46 << 5) | 0;
     $50 = $38 + ($i$06 * 24 | 0) + 8 | 0;
     _memcpy($49 | 0, HEAP32[$50 >> 2] | 0, HEAP32[$39 >> 2] << 5 | 0) | 0;
     __ZN5ImGui7MemFreeEPv(HEAP32[$50 >> 2] | 0);
     HEAP32[$50 >> 2] = $49;
     HEAP32[$40 >> 2] = $46;
     $56 = HEAP32[$6 >> 2] | 0;
    } else $56 = $35;
   } else $56 = $35;
   HEAP32[$39 >> 2] = 0;
   if (($56 | 0) <= ($i$06 | 0)) {
    label = 24;
    break;
   }
   $57 = HEAP32[$28 >> 2] | 0;
   $58 = $57 + ($i$06 * 24 | 0) + 12 | 0;
   $59 = $57 + ($i$06 * 24 | 0) + 16 | 0;
   $60 = HEAP32[$59 >> 2] | 0;
   if (($60 | 0) < 0) {
    $63 = (($60 | 0) / 2 | 0) + $60 | 0;
    $65 = ($63 | 0) > 0 ? $63 : 0;
    if (($60 | 0) < ($65 | 0)) {
     $68 = __ZN5ImGui8MemAllocEj($65 << 1) | 0;
     $69 = $57 + ($i$06 * 24 | 0) + 20 | 0;
     _memcpy($68 | 0, HEAP32[$69 >> 2] | 0, HEAP32[$58 >> 2] << 1 | 0) | 0;
     __ZN5ImGui7MemFreeEPv(HEAP32[$69 >> 2] | 0);
     HEAP32[$69 >> 2] = $68;
     HEAP32[$59 >> 2] = $65;
    }
   }
   HEAP32[$58 >> 2] = 0;
  } else {
   HEAP32[$39 >> 2] = 0;
   HEAP32[$39 + 4 >> 2] = 0;
   HEAP32[$39 + 8 >> 2] = 0;
   HEAP32[$39 + 12 >> 2] = 0;
   HEAP32[$39 + 16 >> 2] = 0;
   HEAP32[$39 + 20 >> 2] = 0;
  }
  if ((HEAP32[$6 >> 2] | 0) <= ($i$06 | 0)) {
   label = 30;
   break;
  }
  $76 = HEAP32[$28 >> 2] | 0;
  $77 = $76 + ($i$06 * 24 | 0) | 0;
  if (!(HEAP32[$77 >> 2] | 0)) {
   $80 = HEAP32[$31 >> 2] | 0;
   if (($80 | 0) <= 0) {
    label = 33;
    break;
   }
   $82 = $80 + -1 | 0;
   $83 = HEAP32[$32 >> 2] | 0;
   $85 = HEAP32[$83 + ($82 << 4) >> 2] | 0;
   $87 = HEAP32[$83 + ($82 << 4) + 4 >> 2] | 0;
   $89 = HEAP32[$83 + ($82 << 4) + 8 >> 2] | 0;
   $91 = HEAP32[$83 + ($82 << 4) + 12 >> 2] | 0;
   $92 = HEAP32[$33 >> 2] | 0;
   if (($92 | 0) <= 0) {
    label = 35;
    break;
   }
   $97 = HEAP32[(HEAP32[$34 >> 2] | 0) + ($92 + -1 << 2) >> 2] | 0;
   $98 = $76 + ($i$06 * 24 | 0) + 4 | 0;
   if (!(HEAP32[$98 >> 2] | 0)) {
    $101 = __ZN5ImGui8MemAllocEj(256) | 0;
    $102 = $76 + ($i$06 * 24 | 0) + 8 | 0;
    _memcpy($101 | 0, HEAP32[$102 >> 2] | 0, HEAP32[$77 >> 2] << 5 | 0) | 0;
    __ZN5ImGui7MemFreeEPv(HEAP32[$102 >> 2] | 0);
    HEAP32[$102 >> 2] = $101;
    HEAP32[$98 >> 2] = 8;
    $108 = HEAP32[$77 >> 2] | 0;
   } else $108 = 0;
   HEAP32[$77 >> 2] = $108 + 1;
   $110 = HEAP32[$76 + ($i$06 * 24 | 0) + 8 >> 2] | 0;
   HEAP32[$110 + ($108 << 5) >> 2] = 0;
   HEAP32[$110 + ($108 << 5) + 4 >> 2] = $85;
   HEAP32[$110 + ($108 << 5) + 8 >> 2] = $87;
   HEAP32[$110 + ($108 << 5) + 12 >> 2] = $89;
   HEAP32[$110 + ($108 << 5) + 16 >> 2] = $91;
   HEAP32[$110 + ($108 << 5) + 20 >> 2] = $97;
   HEAP32[$110 + ($108 << 5) + 24 >> 2] = 0;
   HEAP32[$110 + ($108 << 5) + 28 >> 2] = 0;
  }
  $i$06 = $i$06 + 1 | 0;
  if (($i$06 | 0) >= ($channels_count | 0)) {
   label = 15;
   break;
  }
 }
 if ((label | 0) == 15) return; else if ((label | 0) == 17) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 24) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 30) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 33) ___assert_fail(127436, 127226, 815, 127445); else if ((label | 0) == 35) ___assert_fail(127436, 127226, 815, 127445);
}

function __ZL23DataTypeApplyOpFromTextPKcS0_13ImGuiDataTypePvS0_($buf, $initial_value_buf, $data_type, $data_ptr, $scalar_format) {
 $buf = $buf | 0;
 $initial_value_buf = $initial_value_buf | 0;
 $data_type = $data_type | 0;
 $data_ptr = $data_ptr | 0;
 $scalar_format = $scalar_format | 0;
 var $$0 = 0, $$0$lcssa = 0, $$0$pn = 0, $$1 = 0, $$2 = 0, $$lcssa11 = 0, $$scalar_format = 0, $0 = 0, $1 = 0, $27 = 0, $28 = 0.0, $3 = 0, $4 = 0, $50 = 0.0, $54 = 0, $55 = 0, $6 = 0, $op$0 = 0, $op_v = 0, $ref_v = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer13 = 0, $vararg_buffer16 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer16 = sp + 48 | 0;
 $vararg_buffer13 = sp + 40 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $ref_v = sp + 56 | 0;
 $op_v = sp + 52 | 0;
 $$0 = $buf;
 L1 : while (1) {
  $0 = HEAP8[$$0 >> 0] | 0;
  $1 = $0 << 24 >> 24;
  L3 : do if (($1 | 0) < 32) switch ($1 | 0) {
  case 9:
   break;
  default:
   {
    $$0$lcssa = $$0;
    $$lcssa11 = $0;
    break L1;
   }
  } else if (($1 | 0) < 12288) switch ($1 | 0) {
  case 32:
   {
    break L3;
    break;
   }
  default:
   {
    $$0$lcssa = $$0;
    $$lcssa11 = $0;
    break L1;
   }
  } else switch ($1 | 0) {
  case 12288:
   {
    break L3;
    break;
   }
  default:
   {
    $$0$lcssa = $$0;
    $$lcssa11 = $0;
    break L1;
   }
  } while (0);
  $$0 = $$0 + 1 | 0;
 }
 L11 : do switch ($$lcssa11 << 24 >> 24) {
 case 47:
 case 42:
 case 43:
  {
   $$0$pn = $$0$lcssa;
   L12 : while (1) {
    $$1 = $$0$pn + 1 | 0;
    $3 = HEAP8[$$1 >> 0] | 0;
    $4 = $3 << 24 >> 24;
    if (($4 | 0) < 32) switch ($4 | 0) {
    case 9:
     {
      $$0$pn = $$1;
      continue L12;
      break;
     }
    default:
     {
      $$2 = $$1;
      $6 = $3;
      $op$0 = $$lcssa11;
      break L11;
     }
    }
    if (($4 | 0) < 12288) switch ($4 | 0) {
    case 32:
     {
      $$0$pn = $$1;
      continue L12;
      break;
     }
    default:
     {
      $$2 = $$1;
      $6 = $3;
      $op$0 = $$lcssa11;
      break L11;
     }
    } else switch ($4 | 0) {
    case 12288:
     {
      $$0$pn = $$1;
      continue L12;
      break;
     }
    default:
     {
      $$2 = $$1;
      $6 = $3;
      $op$0 = $$lcssa11;
      break L11;
     }
    }
   }
   break;
  }
 default:
  {
   $$2 = $$0$lcssa;
   $6 = $$lcssa11;
   $op$0 = 0;
  }
 } while (0);
 if (!($6 << 24 >> 24)) {
  STACKTOP = sp;
  return;
 }
 switch ($data_type | 0) {
 case 0:
  {
   $$scalar_format = ($scalar_format | 0) == 0 ? 126802 : $scalar_format;
   HEAP32[$ref_v >> 2] = HEAP32[$data_ptr >> 2];
   L26 : do if (!($op$0 << 24 >> 24)) {
    HEAPF32[$op_v >> 2] = 0.0;
    $54 = $op_v;
    label = 18;
   } else {
    HEAP32[$vararg_buffer >> 2] = $ref_v;
    if ((_sscanf($initial_value_buf, $$scalar_format, $vararg_buffer) | 0) < 1) {
     STACKTOP = sp;
     return;
    }
    HEAPF32[$op_v >> 2] = 0.0;
    switch ($op$0 << 24 >> 24) {
    case 43:
     {
      HEAP32[$vararg_buffer1 >> 2] = $op_v;
      if ((_sscanf($$2, 126810, $vararg_buffer1) | 0) != 1) {
       $55 = $op_v;
       break L26;
      }
      HEAP32[$data_ptr >> 2] = ~~(+(HEAP32[$ref_v >> 2] | 0) + +HEAPF32[$op_v >> 2]);
      $55 = $op_v;
      break L26;
      break;
     }
    case 42:
     {
      HEAP32[$vararg_buffer4 >> 2] = $op_v;
      if ((_sscanf($$2, 126810, $vararg_buffer4) | 0) != 1) {
       $55 = $op_v;
       break L26;
      }
      HEAP32[$data_ptr >> 2] = ~~(+(HEAP32[$ref_v >> 2] | 0) * +HEAPF32[$op_v >> 2]);
      $55 = $op_v;
      break L26;
      break;
     }
    case 47:
     {
      HEAP32[$vararg_buffer7 >> 2] = $op_v;
      $27 = (_sscanf($$2, 126810, $vararg_buffer7) | 0) == 1;
      $28 = +HEAPF32[$op_v >> 2];
      if (!($27 & $28 != 0.0)) {
       $55 = $op_v;
       break L26;
      }
      HEAP32[$data_ptr >> 2] = ~~(+(HEAP32[$ref_v >> 2] | 0) / $28);
      $55 = $op_v;
      break L26;
      break;
     }
    default:
     {
      $54 = $op_v;
      label = 18;
      break L26;
     }
    }
   } while (0);
   if ((label | 0) == 18) {
    HEAP32[$vararg_buffer10 >> 2] = $ref_v;
    if ((_sscanf($$2, $$scalar_format, $vararg_buffer10) | 0) == 1) {
     HEAP32[$data_ptr >> 2] = HEAP32[$ref_v >> 2];
     $55 = $54;
    } else $55 = $54;
   }
   STACKTOP = sp;
   return;
  }
 case 1:
  {
   HEAP32[$ref_v >> 2] = HEAP32[$data_ptr >> 2];
   if ($op$0 << 24 >> 24) {
    HEAP32[$vararg_buffer13 >> 2] = $ref_v;
    if ((_sscanf($initial_value_buf, 126810, $vararg_buffer13) | 0) < 1) {
     STACKTOP = sp;
     return;
    }
   }
   HEAPF32[$op_v >> 2] = 0.0;
   HEAP32[$vararg_buffer16 >> 2] = $op_v;
   L50 : do if ((_sscanf($$2, 126810, $vararg_buffer16) | 0) >= 1) switch ($op$0 << 24 >> 24) {
   case 43:
    {
     HEAPF32[$data_ptr >> 2] = +HEAPF32[$ref_v >> 2] + +HEAPF32[$op_v >> 2];
     break L50;
     break;
    }
   case 42:
    {
     HEAPF32[$data_ptr >> 2] = +HEAPF32[$ref_v >> 2] * +HEAPF32[$op_v >> 2];
     break L50;
     break;
    }
   default:
    {
     $50 = +HEAPF32[$op_v >> 2];
     if ($op$0 << 24 >> 24 != 47) {
      HEAPF32[$data_ptr >> 2] = $50;
      break L50;
     }
     if (!($50 != 0.0)) break L50;
     HEAPF32[$data_ptr >> 2] = +HEAPF32[$ref_v >> 2] / $50;
     break L50;
    }
   } while (0);
   STACKTOP = sp;
   return;
  }
 default:
  {
   STACKTOP = sp;
   return;
  }
 }
}

function __ZN5Oryol5ArrayINS_9loadQueue9groupItemEED2Ev($this) {
 $this = $this | 0;
 var $$pre$i$i = 0, $$pre4$i$i = 0, $$pre5$i$i$i$i13 = 0, $$pre5$i$i$i$i49 = 0, $$pre5$i$i2$pre$phiZZZZ2D = 0, $$pre6$i$i2$pre$phi$i$i28ZZZZ2D = 0, $$pre6$i$i2$pre$phi$i$i64ZZZZ2D = 0, $101 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $2 = 0, $22 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $61 = 0, $72 = 0, $8 = 0, $83 = 0, $85 = 0, $86 = 0, $87 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $94 = 0, $95 = 0, $99 = 0, $i$01$i$i$i$i21 = 0, $i$01$i$i$i$i57 = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 $2 = HEAP32[$this >> 2] | 0;
 $$pre4$i$i = $this + 8 | 0;
 if (!$2) {
  $$pre5$i$i2$pre$phiZZZZ2D = $this + 12 | 0;
  $106 = $this + 4 | 0;
  HEAP32[$$pre5$i$i2$pre$phiZZZZ2D >> 2] = 0;
  HEAP32[$this >> 2] = 0;
  HEAP32[$106 >> 2] = 0;
  HEAP32[$$pre4$i$i >> 2] = 0;
  HEAP32[$$pre5$i$i2$pre$phiZZZZ2D >> 2] = 0;
  return;
 }
 $4 = HEAP32[$$pre4$i$i >> 2] | 0;
 $5 = $this + 12 | 0;
 if (($4 | 0) < (HEAP32[$5 >> 2] | 0)) {
  $8 = $2 + ($4 * 72 | 0) | 0;
  $11 = HEAP32[$2 + ($4 * 72 | 0) + 64 >> 2] | 0;
  if (($11 | 0) == ($2 + ($4 * 72 | 0) + 48 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11); else if ($11 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$11 >> 2] | 0) + 20 >> 2] & 255]($11);
  $22 = HEAP32[$2 + ($4 * 72 | 0) + 40 >> 2] | 0;
  if (($22 | 0) == ($2 + ($4 * 72 | 0) + 24 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 255]($22); else if ($22 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 20 >> 2] & 255]($22);
  HEAP32[$2 + ($4 * 72 | 0) + 16 >> 2] = 0;
  HEAP32[$2 + ($4 * 72 | 0) + 20 >> 2] = 0;
  $33 = HEAP32[$8 >> 2] | 0;
  $$pre5$i$i$i$i49 = $2 + ($4 * 72 | 0) + 8 | 0;
  if (!$33) $$pre6$i$i2$pre$phi$i$i64ZZZZ2D = $2 + ($4 * 72 | 0) + 12 | 0; else {
   $35 = HEAP32[$$pre5$i$i$i$i49 >> 2] | 0;
   $36 = $2 + ($4 * 72 | 0) + 12 | 0;
   $37 = HEAP32[$36 >> 2] | 0;
   if (($35 | 0) < ($37 | 0)) {
    $107 = $37;
    $41 = $33;
    $i$01$i$i$i$i57 = $35;
    while (1) {
     $40 = $41 + ($i$01$i$i$i$i57 << 2) | 0;
     $42 = HEAP32[$40 >> 2] | 0;
     if (!$42) $51 = $107; else {
      $44 = $42 + 4 | 0;
      $45 = HEAP32[$44 >> 2] | 0;
      HEAP32[$44 >> 2] = $45 - 1;
      if (($45 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$42 >> 2] >> 2] & 255]($42);
      HEAP32[$40 >> 2] = 0;
      $51 = HEAP32[$36 >> 2] | 0;
     }
     $49 = $i$01$i$i$i$i57 + 1 | 0;
     if (($49 | 0) >= ($51 | 0)) break;
     $107 = $51;
     $41 = HEAP32[$8 >> 2] | 0;
     $i$01$i$i$i$i57 = $49;
    }
    $39 = HEAP32[$8 >> 2] | 0;
   } else $39 = $33;
   __ZN5Oryol6Memory4FreeEPv($39);
   $$pre6$i$i2$pre$phi$i$i64ZZZZ2D = $36;
  }
  HEAP32[$8 >> 2] = 0;
  HEAP32[$2 + ($4 * 72 | 0) + 4 >> 2] = 0;
  HEAP32[$$pre5$i$i$i$i49 >> 2] = 0;
  HEAP32[$$pre6$i$i2$pre$phi$i$i64ZZZZ2D >> 2] = 0;
  $53 = $4 + 1 | 0;
  if (($53 | 0) < (HEAP32[$5 >> 2] | 0)) {
   $58 = $53;
   do {
    $$pre$i$i = HEAP32[$this >> 2] | 0;
    $57 = $$pre$i$i + ($58 * 72 | 0) | 0;
    $61 = HEAP32[$$pre$i$i + ($58 * 72 | 0) + 64 >> 2] | 0;
    if (($61 | 0) == ($$pre$i$i + ($58 * 72 | 0) + 48 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$61 >> 2] | 0) + 16 >> 2] & 255]($61); else if ($61 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$61 >> 2] | 0) + 20 >> 2] & 255]($61);
    $72 = HEAP32[$$pre$i$i + ($58 * 72 | 0) + 40 >> 2] | 0;
    if (($72 | 0) == ($$pre$i$i + ($58 * 72 | 0) + 24 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$72 >> 2] | 0) + 16 >> 2] & 255]($72); else if ($72 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$72 >> 2] | 0) + 20 >> 2] & 255]($72);
    HEAP32[$$pre$i$i + ($58 * 72 | 0) + 16 >> 2] = 0;
    HEAP32[$$pre$i$i + ($58 * 72 | 0) + 20 >> 2] = 0;
    $83 = HEAP32[$57 >> 2] | 0;
    $$pre5$i$i$i$i13 = $$pre$i$i + ($58 * 72 | 0) + 8 | 0;
    if (!$83) $$pre6$i$i2$pre$phi$i$i28ZZZZ2D = $$pre$i$i + ($58 * 72 | 0) + 12 | 0; else {
     $85 = HEAP32[$$pre5$i$i$i$i13 >> 2] | 0;
     $86 = $$pre$i$i + ($58 * 72 | 0) + 12 | 0;
     $87 = HEAP32[$86 >> 2] | 0;
     if (($85 | 0) < ($87 | 0)) {
      $108 = $87;
      $91 = $83;
      $i$01$i$i$i$i21 = $85;
      while (1) {
       $90 = $91 + ($i$01$i$i$i$i21 << 2) | 0;
       $92 = HEAP32[$90 >> 2] | 0;
       if (!$92) $101 = $108; else {
        $94 = $92 + 4 | 0;
        $95 = HEAP32[$94 >> 2] | 0;
        HEAP32[$94 >> 2] = $95 - 1;
        if (($95 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$92 >> 2] >> 2] & 255]($92);
        HEAP32[$90 >> 2] = 0;
        $101 = HEAP32[$86 >> 2] | 0;
       }
       $99 = $i$01$i$i$i$i21 + 1 | 0;
       if (($99 | 0) >= ($101 | 0)) break;
       $108 = $101;
       $91 = HEAP32[$57 >> 2] | 0;
       $i$01$i$i$i$i21 = $99;
      }
      $89 = HEAP32[$57 >> 2] | 0;
     } else $89 = $83;
     __ZN5Oryol6Memory4FreeEPv($89);
     $$pre6$i$i2$pre$phi$i$i28ZZZZ2D = $86;
    }
    HEAP32[$57 >> 2] = 0;
    HEAP32[$$pre$i$i + ($58 * 72 | 0) + 4 >> 2] = 0;
    HEAP32[$$pre5$i$i$i$i13 >> 2] = 0;
    HEAP32[$$pre6$i$i2$pre$phi$i$i28ZZZZ2D >> 2] = 0;
    $58 = $58 + 1 | 0;
   } while (($58 | 0) < (HEAP32[$5 >> 2] | 0));
  }
  $56 = HEAP32[$this >> 2] | 0;
 } else $56 = $2;
 __ZN5Oryol6Memory4FreeEPv($56);
 $$pre5$i$i2$pre$phiZZZZ2D = $5;
 $106 = $this + 4 | 0;
 HEAP32[$$pre5$i$i2$pre$phiZZZZ2D >> 2] = 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$106 >> 2] = 0;
 HEAP32[$$pre4$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phiZZZZ2D >> 2] = 0;
 return;
}

function __ZN10ImDrawList8PathRectERK6ImVec2S2_fi($this, $a, $b, $rounding, $rounding_corners) {
 $this = $this | 0;
 $a = $a | 0;
 $b = $b | 0;
 $rounding = +$rounding;
 $rounding_corners = $rounding_corners | 0;
 var $0 = 0, $1 = 0, $101 = 0, $102 = 0, $105 = 0, $111 = 0, $114 = 0, $119 = 0, $120 = 0, $124 = 0, $125 = 0, $126 = 0, $129 = 0, $13 = 0.0, $134 = 0, $135 = 0, $138 = 0, $14 = 0.0, $144 = 0, $145 = 0, $150 = 0.0, $153 = 0.0, $156 = 0.0, $159 = 0.0, $16 = 0.0, $166 = 0.0, $17 = 0, $171 = 0.0, $176 = 0.0, $19 = 0, $2 = 0, $20 = 0.0, $22 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0, $31 = 0.0, $34 = 0, $35 = 0, $36 = 0, $39 = 0, $44 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0.0, $55 = 0, $56 = 0, $59 = 0, $64 = 0, $65 = 0, $69 = 0, $7 = 0.0, $70 = 0, $71 = 0, $74 = 0, $79 = 0, $80 = 0, $83 = 0, $89 = 0, $90 = 0, $93 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 24 | 0;
 $1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 $5 = +HEAPF32[$a >> 2];
 $7 = +Math_abs(+(+HEAPF32[$b >> 2] - $5));
 if (($rounding_corners & 3 | 0) == 3) $13 = .5; else $13 = ($rounding_corners & 12 | 0) == 12 ? .5 : 1.0;
 $14 = $7 * $13 + -1.0;
 $16 = $14 > $rounding ? $rounding : $14;
 $17 = $b + 4 | 0;
 $19 = $a + 4 | 0;
 $20 = +HEAPF32[$19 >> 2];
 $22 = +Math_abs(+(+HEAPF32[$17 >> 2] - $20));
 if (($rounding_corners & 9 | 0) == 9) $28 = .5; else $28 = ($rounding_corners & 6 | 0) == 6 ? .5 : 1.0;
 $29 = $22 * $28 + -1.0;
 $31 = $16 < $29 ? $16 : $29;
 if (!(($rounding_corners | 0) == 0 | $31 <= 0.0)) {
  $150 = $rounding_corners & 1 | 0 ? $31 : 0.0;
  $153 = $rounding_corners & 2 | 0 ? $31 : 0.0;
  $156 = $rounding_corners & 4 | 0 ? $31 : 0.0;
  $159 = $rounding_corners & 8 | 0 ? $31 : 0.0;
  HEAPF32[$0 >> 2] = $150 + $5;
  HEAPF32[$0 + 4 >> 2] = $150 + $20;
  __ZN10ImDrawList13PathArcToFastERK6ImVec2fii($this, $0, $150, 6, 9);
  $166 = $153 + +HEAPF32[$19 >> 2];
  HEAPF32[$1 >> 2] = +HEAPF32[$b >> 2] - $153;
  HEAPF32[$1 + 4 >> 2] = $166;
  __ZN10ImDrawList13PathArcToFastERK6ImVec2fii($this, $1, $153, 9, 12);
  $171 = +HEAPF32[$17 >> 2] - $156;
  HEAPF32[$2 >> 2] = +HEAPF32[$b >> 2] - $156;
  HEAPF32[$2 + 4 >> 2] = $171;
  __ZN10ImDrawList13PathArcToFastERK6ImVec2fii($this, $2, $156, 0, 3);
  $176 = +HEAPF32[$17 >> 2] - $159;
  HEAPF32[$3 >> 2] = $159 + +HEAPF32[$a >> 2];
  HEAPF32[$3 + 4 >> 2] = $176;
  __ZN10ImDrawList13PathArcToFastERK6ImVec2fii($this, $3, $159, 3, 6);
  STACKTOP = sp;
  return;
 }
 $34 = $this + 76 | 0;
 $35 = HEAP32[$34 >> 2] | 0;
 $36 = $this + 80 | 0;
 if (($35 | 0) == (HEAP32[$36 >> 2] | 0)) {
  $39 = $35 + 1 | 0;
  if (!$35) $44 = 8; else $44 = (($35 | 0) / 2 | 0) + $35 | 0;
  $45 = ($44 | 0) > ($39 | 0) ? $44 : $39;
  if (($35 | 0) < ($45 | 0)) {
   $48 = __ZN5ImGui8MemAllocEj($45 << 3) | 0;
   $49 = $this + 84 | 0;
   _memcpy($48 | 0, HEAP32[$49 >> 2] | 0, HEAP32[$34 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$49 >> 2] | 0);
   HEAP32[$49 >> 2] = $48;
   HEAP32[$36 >> 2] = $45;
   $55 = HEAP32[$34 >> 2] | 0;
  } else $55 = $35;
 } else $55 = $35;
 HEAP32[$34 >> 2] = $55 + 1;
 $56 = $this + 84 | 0;
 $59 = $a;
 $64 = HEAP32[$59 + 4 >> 2] | 0;
 $65 = (HEAP32[$56 >> 2] | 0) + ($55 << 3) | 0;
 HEAP32[$65 >> 2] = HEAP32[$59 >> 2];
 HEAP32[$65 + 4 >> 2] = $64;
 $69 = HEAP32[$b >> 2] | 0;
 $70 = HEAP32[$19 >> 2] | 0;
 $71 = HEAP32[$34 >> 2] | 0;
 if (($71 | 0) == (HEAP32[$36 >> 2] | 0)) {
  $74 = $71 + 1 | 0;
  if (!$71) $79 = 8; else $79 = (($71 | 0) / 2 | 0) + $71 | 0;
  $80 = ($79 | 0) > ($74 | 0) ? $79 : $74;
  if (($71 | 0) < ($80 | 0)) {
   $83 = __ZN5ImGui8MemAllocEj($80 << 3) | 0;
   _memcpy($83 | 0, HEAP32[$56 >> 2] | 0, HEAP32[$34 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$56 >> 2] | 0);
   HEAP32[$56 >> 2] = $83;
   HEAP32[$36 >> 2] = $80;
   $89 = HEAP32[$34 >> 2] | 0;
  } else $89 = $71;
 } else $89 = $71;
 HEAP32[$34 >> 2] = $89 + 1;
 $90 = HEAP32[$56 >> 2] | 0;
 HEAP32[$90 + ($89 << 3) >> 2] = $69;
 HEAP32[$90 + ($89 << 3) + 4 >> 2] = $70;
 $93 = HEAP32[$34 >> 2] | 0;
 if (($93 | 0) == (HEAP32[$36 >> 2] | 0)) {
  $96 = $93 + 1 | 0;
  if (!$93) $101 = 8; else $101 = (($93 | 0) / 2 | 0) + $93 | 0;
  $102 = ($101 | 0) > ($96 | 0) ? $101 : $96;
  if (($93 | 0) < ($102 | 0)) {
   $105 = __ZN5ImGui8MemAllocEj($102 << 3) | 0;
   _memcpy($105 | 0, HEAP32[$56 >> 2] | 0, HEAP32[$34 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$56 >> 2] | 0);
   HEAP32[$56 >> 2] = $105;
   HEAP32[$36 >> 2] = $102;
   $111 = HEAP32[$34 >> 2] | 0;
  } else $111 = $93;
 } else $111 = $93;
 HEAP32[$34 >> 2] = $111 + 1;
 $114 = $b;
 $119 = HEAP32[$114 + 4 >> 2] | 0;
 $120 = (HEAP32[$56 >> 2] | 0) + ($111 << 3) | 0;
 HEAP32[$120 >> 2] = HEAP32[$114 >> 2];
 HEAP32[$120 + 4 >> 2] = $119;
 $124 = HEAP32[$a >> 2] | 0;
 $125 = HEAP32[$17 >> 2] | 0;
 $126 = HEAP32[$34 >> 2] | 0;
 if (($126 | 0) == (HEAP32[$36 >> 2] | 0)) {
  $129 = $126 + 1 | 0;
  if (!$126) $134 = 8; else $134 = (($126 | 0) / 2 | 0) + $126 | 0;
  $135 = ($134 | 0) > ($129 | 0) ? $134 : $129;
  if (($126 | 0) < ($135 | 0)) {
   $138 = __ZN5ImGui8MemAllocEj($135 << 3) | 0;
   _memcpy($138 | 0, HEAP32[$56 >> 2] | 0, HEAP32[$34 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$56 >> 2] | 0);
   HEAP32[$56 >> 2] = $138;
   HEAP32[$36 >> 2] = $135;
   $144 = HEAP32[$34 >> 2] | 0;
  } else $144 = $126;
 } else $144 = $126;
 HEAP32[$34 >> 2] = $144 + 1;
 $145 = HEAP32[$56 >> 2] | 0;
 HEAP32[$145 + ($144 << 3) >> 2] = $124;
 HEAP32[$145 + ($144 << 3) + 4 >> 2] = $125;
 STACKTOP = sp;
 return;
}

function __ZN8ImGuiStbL21stb_text_locate_coordEP18ImGuiTextEditStateff($str, $x, $y) {
 $str = $str | 0;
 $x = +$x;
 $y = +$y;
 var $$0$i = 0.0, $$0$i$lcssa = 0.0, $$2 = 0, $$in$i$i = 0, $$in$i$us$i$i = 0, $$lcssa113 = 0, $$lcssa118 = 0, $$lcssa119 = 0, $$lcssa120 = 0, $$lcssa126 = 0.0, $$lcssa129 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0.0, $2 = 0, $20 = 0, $31 = 0, $32 = 0, $35 = 0.0, $4 = 0, $50 = 0, $51 = 0, $54 = 0, $56 = 0, $6 = 0.0, $69 = 0, $71 = 0, $72 = 0, $79 = 0.0, $8 = 0.0, $9 = 0, $base_y$025 = 0.0, $i$024 = 0, $i$024$lcssa123 = 0, $i$123 = 0, $i$2 = 0, $line_width$0$ph$us$i$i = 0.0, $line_width$0$ph$us$i$i$lcssa122 = 0.0, $line_width$2$i$i = 0.0, $line_width$2$i$i$lcssa127 = 0.0, $prev_x$022 = 0.0, $prev_x$022$lcssa111 = 0.0, $s$0$ph$us$i$i = 0, $s$0$us$i$i = 0, $s$1$i$i = 0, $size$sroa$0$0$i = 0, $size$sroa$0$0$i$lcssa124 = 0, $size$sroa$6$0$i = 0, $str$idx$val = 0, $str$idx2$val = 0, label = 0, $prev_x$022$looptemp = 0.0;
 $str$idx$val = HEAP32[$str + 44 >> 2] | 0;
 if ($y < 0.0) {
  $$2 = 0;
  return $$2 | 0;
 }
 if (($str$idx$val | 0) <= 0) {
  $$2 = $str$idx$val;
  return $$2 | 0;
 }
 $str$idx2$val = HEAP32[$str + 12 >> 2] | 0;
 $2 = $str$idx2$val + ($str$idx$val << 1) | 0;
 $4 = HEAP32[38186] | 0;
 $6 = +HEAPF32[38187];
 $8 = $6 / +HEAPF32[$4 >> 2];
 $9 = $4 + 60 | 0;
 $10 = $4 + 68 | 0;
 $11 = $4 + 56 | 0;
 $12 = $6 + 0.0;
 $13 = (HEAPF32[tempDoublePtr >> 2] = $12, HEAP32[tempDoublePtr >> 2] | 0);
 $base_y$025 = 0.0;
 $i$024 = 0;
 while (1) {
  $14 = $str$idx2$val + ($i$024 << 1) | 0;
  $line_width$0$ph$us$i$i = 0.0;
  $s$0$ph$us$i$i = $14;
  L9 : while (1) {
   $s$0$us$i$i = $s$0$ph$us$i$i;
   L11 : while (1) {
    if ($s$0$us$i$i >>> 0 >= $2 >>> 0) {
     $35 = 0.0;
     $79 = 0.0;
     $line_width$2$i$i = $line_width$0$ph$us$i$i;
     $s$1$i$i = $s$0$us$i$i;
     $size$sroa$0$0$i = 0;
     $size$sroa$6$0$i = 0;
     break L9;
    }
    $15 = $s$0$us$i$i + 2 | 0;
    $16 = HEAP16[$s$0$us$i$i >> 1] | 0;
    switch ($16 << 16 >> 16) {
    case 10:
     {
      $$lcssa119 = $15;
      $line_width$0$ph$us$i$i$lcssa122 = $line_width$0$ph$us$i$i;
      label = 7;
      break L9;
      break;
     }
    case 13:
     {
      $s$0$us$i$i = $15;
      break;
     }
    default:
     {
      $$lcssa118 = $15;
      $$lcssa120 = $16;
      break L11;
     }
    }
   }
   $20 = $$lcssa120 & 65535;
   if (($20 | 0) < (HEAP32[$9 >> 2] | 0)) $$in$i$us$i$i = (HEAP32[$10 >> 2] | 0) + ($20 << 2) | 0; else $$in$i$us$i$i = $11;
   $line_width$0$ph$us$i$i = $line_width$0$ph$us$i$i + $8 * +HEAPF32[$$in$i$us$i$i >> 2];
   $s$0$ph$us$i$i = $$lcssa118;
  }
  if ((label | 0) == 7) {
   label = 0;
   $18 = $line_width$0$ph$us$i$i$lcssa122 <= 0.0 ? 0.0 : $line_width$0$ph$us$i$i$lcssa122;
   $35 = $12;
   $79 = $18;
   $line_width$2$i$i = 0.0;
   $s$1$i$i = $$lcssa119;
   $size$sroa$0$0$i = (HEAPF32[tempDoublePtr >> 2] = $18, HEAP32[tempDoublePtr >> 2] | 0);
   $size$sroa$6$0$i = $13;
  }
  $31 = $s$1$i$i - $14 | 0;
  $32 = $31 >> 1;
  if (($31 | 0) < 2) {
   $$2 = $str$idx$val;
   label = 31;
   break;
  }
  $base_y$025 = $base_y$025 + (HEAP32[tempDoublePtr >> 2] = $35 == 0.0 | $line_width$2$i$i > 0.0 ? (HEAPF32[tempDoublePtr >> 2] = $6 + $35, HEAP32[tempDoublePtr >> 2] | 0) : $size$sroa$6$0$i, +HEAPF32[tempDoublePtr >> 2]);
  if ($base_y$025 > $y) {
   $$lcssa126 = $79;
   $$lcssa129 = $32;
   $i$024$lcssa123 = $i$024;
   $line_width$2$i$i$lcssa127 = $line_width$2$i$i;
   $size$sroa$0$0$i$lcssa124 = $size$sroa$0$0$i;
   label = 15;
   break;
  }
  $i$024 = $32 + $i$024 | 0;
  if (($i$024 | 0) >= ($str$idx$val | 0)) {
   $$2 = $str$idx$val;
   label = 31;
   break;
  }
 }
 if ((label | 0) == 15) {
  if ($x < 0.0) {
   $$2 = $i$024$lcssa123;
   return $$2 | 0;
  }
  L29 : do if ((HEAP32[tempDoublePtr >> 2] = $$lcssa126 < $line_width$2$i$i$lcssa127 ? (HEAPF32[tempDoublePtr >> 2] = $line_width$2$i$i$lcssa127, HEAP32[tempDoublePtr >> 2] | 0) : $size$sroa$0$0$i$lcssa124, +HEAPF32[tempDoublePtr >> 2]) > $x) {
   $50 = HEAP32[$str + 4 >> 2] | 0;
   $i$123 = 0;
   $prev_x$022 = 0.0;
   while (1) {
    $51 = $i$123 + $i$024$lcssa123 | 0;
    if (($50 | 0) <= ($51 | 0)) {
     label = 19;
     break;
    }
    $54 = HEAP16[$str$idx2$val + ($51 << 1) >> 1] | 0;
    if ($54 << 16 >> 16 == 10) $$0$i = -1.0; else {
     $56 = $54 & 65535;
     if (($56 | 0) < (HEAP32[$9 >> 2] | 0)) $$in$i$i = (HEAP32[$10 >> 2] | 0) + ($56 << 2) | 0; else $$in$i$i = $11;
     $$0$i = +HEAPF32[$$in$i$i >> 2] * $8;
    }
    $prev_x$022$looptemp = $prev_x$022;
    $prev_x$022 = $prev_x$022 + $$0$i;
    if ($prev_x$022 > $x) {
     $$0$i$lcssa = $$0$i;
     $$lcssa113 = $51;
     $prev_x$022$lcssa111 = $prev_x$022$looptemp;
     break;
    }
    $69 = $i$123 + 1 | 0;
    if (($69 | 0) >= ($$lcssa129 | 0)) {
     $i$2 = $69;
     break L29;
    } else $i$123 = $69;
   }
   if ((label | 0) == 19) ___assert_fail(127217, 127226, 805, 127272);
   if ($prev_x$022$lcssa111 + $$0$i$lcssa * .5 > $x) {
    $$2 = $$lcssa113;
    return $$2 | 0;
   }
   $$2 = $$lcssa113 + 1 | 0;
   return $$2 | 0;
  } else $i$2 = $i$024$lcssa123; while (0);
  $71 = $i$2 + $$lcssa129 | 0;
  $72 = $71 + -1 | 0;
  if ((HEAP32[$str + 4 >> 2] | 0) < ($71 | 0)) ___assert_fail(127217, 127226, 806, 127272);
  $$2 = (HEAP16[$str$idx2$val + ($72 << 1) >> 1] | 0) == 10 ? $72 : $71;
  return $$2 | 0;
 } else if ((label | 0) == 31) return $$2 | 0;
 return 0;
}

function __ZN5Oryol5_priv16resourceRegistry6RemoveENS_13ResourceLabelE($agg$result, $this, $label) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $label = $label | 0;
 var $$ = 0, $$lcssa = 0, $$lcssa37 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $31 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $5 = 0, $52 = 0, $53 = 0, $6 = 0, $64 = 0, $66 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $75 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $87 = 0, $9 = 0, $__begin$013 = 0, $__begin2$014 = 0, $entryIndex$018$in = 0, $id = 0, $loc = 0, label = 0, sp = 0, $entryIndex$018$in$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $id = sp;
 $loc = sp + 8 | 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 111306, 113, 114737);
  _abort();
 };
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 HEAP32[$agg$result + 12 >> 2] = 0;
 HEAP32[$agg$result + 16 >> 2] = 16;
 HEAP32[$agg$result + 20 >> 2] = 65536;
 $4 = $this + 4 | 0;
 $5 = $this + 16 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $this + 12 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $6 - $8 | 0;
 $$ = ($9 | 0) < 256 ? $9 : 256;
 if (($$ | 0) > 0) {
  __ZN5Oryol5_priv13elementBufferINS_2IdEE5allocEii($agg$result, $$, 0);
  $13 = HEAP32[$5 >> 2] | 0;
  $14 = HEAP32[$7 >> 2] | 0;
 } else {
  $13 = $6;
  $14 = $8;
 }
 $12 = $13 - $14 | 0;
 if (($12 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $16 = $loc + 4 | 0;
 $17 = $this + 56 | 0;
 $18 = $this + 28 | 0;
 $19 = $this + 36 | 0;
 $20 = $this + 40 | 0;
 $21 = $this + 64 | 0;
 $22 = $this + 68 | 0;
 $23 = $this + 28 | 0;
 $entryIndex$018$in = $12;
 while (1) {
  $entryIndex$018$in$looptemp = $entryIndex$018$in;
  $entryIndex$018$in = $entryIndex$018$in + -1 | 0;
  $24 = HEAP32[$label >> 2] | 0;
  if (($24 | 0) == -2) {
   if (($entryIndex$018$in$looptemp | 0) <= 0) {
    label = 19;
    break;
   }
   $40 = HEAP32[$5 >> 2] | 0;
   $41 = HEAP32[$7 >> 2] | 0;
   label = 18;
  } else {
   if (($entryIndex$018$in$looptemp | 0) <= 0) {
    label = 10;
    break;
   }
   $27 = HEAP32[$5 >> 2] | 0;
   $28 = HEAP32[$7 >> 2] | 0;
   if (($27 - $28 | 0) < ($entryIndex$018$in$looptemp | 0)) {
    label = 10;
    break;
   }
   $31 = HEAP32[$4 >> 2] | 0;
   if (!$31) {
    label = 12;
    break;
   }
   if ((HEAP32[$31 + (($28 + $entryIndex$018$in | 0) * 24 | 0) + 16 >> 2] | 0) == ($24 | 0)) {
    $40 = $27;
    $41 = $28;
    label = 18;
   }
  }
  if ((label | 0) == 18) {
   label = 0;
   if (($40 - $41 | 0) < ($entryIndex$018$in$looptemp | 0)) {
    label = 19;
    break;
   }
   $43 = HEAP32[$4 >> 2] | 0;
   if (!$43) {
    label = 21;
    break;
   }
   $45 = $41 + $entryIndex$018$in | 0;
   $47 = $43 + ($45 * 24 | 0) + 8 | 0;
   $52 = HEAP32[$47 + 4 >> 2] | 0;
   $53 = $id;
   HEAP32[$53 >> 2] = HEAP32[$47 >> 2];
   HEAP32[$53 + 4 >> 2] = $52;
   __ZN5Oryol10StringAtom4copyERKS0_($loc, $43 + ($45 * 24 | 0) | 0);
   HEAP32[$16 >> 2] = HEAP32[$43 + ($45 * 24 | 0) + 4 >> 2];
   __ZN5Oryol5ArrayINS_2IdEE3AddIJRS1_EEEvDpOT_($agg$result, $id);
   __ZN5Oryol5_priv13elementBufferINS0_16resourceRegistry5EntryEE13eraseSwapBackEi($4, $entryIndex$018$in);
   __ZN5Oryol3MapINS_2IdEiE5EraseERKS1_($17, $id);
   if ((HEAP32[$16 >> 2] | 0) != -1) __ZN5Oryol3MapINS_7LocatorEiE5EraseERKS1_($23, $loc);
   $64 = (HEAP32[$5 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) | 0;
   L27 : do if (($entryIndex$018$in | 0) != ($64 | 0)) {
    $66 = HEAP32[$17 >> 2] | 0;
    L29 : do if ($66 | 0) {
     $68 = HEAP32[$21 >> 2] | 0;
     $69 = HEAP32[$22 >> 2] | 0;
     $70 = $66 + ($69 << 4) | 0;
     if (($68 | 0) != ($69 | 0)) {
      $__begin$013 = $66 + ($68 << 4) | 0;
      while (1) {
       $75 = $__begin$013 + 8 | 0;
       $__begin$013 = $__begin$013 + 16 | 0;
       if (($64 | 0) == (HEAP32[$75 >> 2] | 0)) {
        $$lcssa = $75;
        break;
       }
       if (($__begin$013 | 0) == ($70 | 0)) break L29;
      }
      HEAP32[$$lcssa >> 2] = $entryIndex$018$in;
     }
    } while (0);
    $78 = HEAP32[$18 >> 2] | 0;
    if ($78 | 0) {
     $80 = HEAP32[$19 >> 2] | 0;
     $81 = HEAP32[$20 >> 2] | 0;
     $82 = $78 + ($81 * 12 | 0) | 0;
     if (($80 | 0) != ($81 | 0)) {
      $__begin2$014 = $78 + ($80 * 12 | 0) | 0;
      while (1) {
       $87 = $__begin2$014 + 8 | 0;
       $__begin2$014 = $__begin2$014 + 12 | 0;
       if (($64 | 0) == (HEAP32[$87 >> 2] | 0)) {
        $$lcssa37 = $87;
        break;
       }
       if (($__begin2$014 | 0) == ($82 | 0)) break L27;
      }
      HEAP32[$$lcssa37 >> 2] = $entryIndex$018$in;
     }
    }
   } while (0);
   __ZNK5Oryol5_priv16resourceRegistry14checkIntegrityEv($this) | 0;
  }
  if (($entryIndex$018$in$looptemp | 0) <= 1) {
   label = 38;
   break;
  }
 }
 if ((label | 0) == 10) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 114895);
  _abort();
 } else if ((label | 0) == 12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 114895);
  _abort();
 } else if ((label | 0) == 19) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 114895);
  _abort();
 } else if ((label | 0) == 21) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 114895);
  _abort();
 } else if ((label | 0) == 38) {
  STACKTOP = sp;
  return;
 }
}

function __ZN10LoadWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $1 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0.0, $3 = 0, $31 = 0, $39 = 0, $4 = 0, $41 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $6 = 0, $69 = 0, $7 = 0, $93 = 0, $94 = 0, $__begin$03 = 0, $curr$04 = 0, $curr$1 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer17 = 0, $vararg_buffer20 = 0, $vararg_buffer23 = 0, $vararg_buffer25 = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $vararg_buffer25 = sp + 80 | 0;
 $vararg_buffer23 = sp + 72 | 0;
 $vararg_buffer20 = sp + 64 | 0;
 $vararg_buffer17 = sp + 56 | 0;
 $vararg_buffer14 = sp + 48 | 0;
 $vararg_buffer11 = sp + 40 | 0;
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 144 | 0;
 $1 = sp + 136 | 0;
 $2 = sp + 128 | 0;
 $3 = sp + 120 | 0;
 $4 = sp + 104 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 88 | 0;
 $7 = $this + 20 | 0;
 if (!(HEAP32[$7 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(36752, 0, 36765, 28, 36867);
  _abort();
 }
 HEAPF32[$0 >> 2] = 512.0;
 HEAPF32[$0 + 4 >> 2] = 256.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 2);
 $13 = $this + 8 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $13, 128) | 0)) {
  __ZN5ImGui3EndEv();
  $93 = HEAP8[$13 >> 0] | 0;
  $94 = $93 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $94 | 0;
 }
 HEAPF32[$1 >> 2] = 250.0;
 HEAPF32[$1 + 4 >> 2] = 0.0;
 __ZN5ImGui10BeginChildEPKcRK6ImVec2bi(36911, $1, 1, 0) | 0;
 $16 = HEAP32[$7 >> 2] | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if ($17 | 0) {
  $20 = HEAP32[$16 + 8 >> 2] | 0;
  $22 = HEAP32[$16 + 12 >> 2] | 0;
  $23 = $17 + ($22 * 20 | 0) | 0;
  if (($20 | 0) != ($22 | 0)) {
   $26 = $kc + 725496 | 0;
   $27 = $2 + 4 | 0;
   $__begin$03 = $17 + ($20 * 20 | 0) | 0;
   $curr$04 = 0;
   while (1) {
    if (!(HEAP32[$26 >> 2] & HEAP32[$__begin$03 + 16 >> 2])) $curr$1 = $curr$04; else {
     $39 = __ZNK5Oryol6String6AsCStrEv($__begin$03) | 0;
     $41 = (HEAP32[36693] | 0) == ($curr$04 | 0);
     HEAPF32[$2 >> 2] = 0.0;
     HEAPF32[$27 >> 2] = 0.0;
     if (__ZN5ImGui10SelectableEPKcbiRK6ImVec2($39, $41, 0, $2) | 0) {
      HEAP32[36693] = $curr$04;
      __ZN10FileLoader4LoadERN4yakc4kc85ERKNS_4ItemE(HEAP32[$7 >> 2] | 0, $kc, $__begin$03);
     }
     $curr$1 = $curr$04 + 1 | 0;
    }
    $__begin$03 = $__begin$03 + 20 | 0;
    if (($__begin$03 | 0) == ($23 | 0)) break; else $curr$04 = $curr$1;
   }
  }
 }
 __ZN5ImGui8EndChildEv();
 __ZN5ImGui8SameLineEff(0.0, -1.0);
 __ZN5ImGui10BeginGroupEv();
 $29 = -+__ZN5ImGui29GetItemsLineHeightWithSpacingEv();
 HEAPF32[$3 >> 2] = 0.0;
 HEAPF32[$3 + 4 >> 2] = $29;
 __ZN5ImGui10BeginChildEPKcRK6ImVec2bi(36919, $3, 0, 0) | 0;
 $31 = HEAP32[$7 >> 2] | 0;
 switch (HEAP32[$31 + 24 >> 2] | 0) {
 case 0:
  {
   __ZN5ImGui4TextEPKcz(36926, $vararg_buffer);
   break;
  }
 case 1:
  {
   HEAP32[$vararg_buffer1 >> 2] = __ZNK5Oryol3URL6AsCStrEv($31 + 52 | 0) | 0;
   __ZN5ImGui4TextEPKcz(36951, $vararg_buffer1);
   break;
  }
 case 3:
  {
   $50 = __ZNK5Oryol3URL6AsCStrEv($31 + 52 | 0) | 0;
   $53 = HEAP32[(HEAP32[$7 >> 2] | 0) + 92 >> 2] | 0;
   $54 = __ZN5Oryol8IOStatus8ToStringENS0_4CodeE($53) | 0;
   HEAP32[$vararg_buffer3 >> 2] = $50;
   HEAP32[$vararg_buffer3 + 4 >> 2] = $53;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $54;
   __ZN5ImGui4TextEPKcz(36964, $vararg_buffer3);
   break;
  }
 case 2:
  {
   HEAP32[$vararg_buffer8 >> 2] = __ZNK5Oryol6String6AsCStrEv($31 + 28 | 0) | 0;
   __ZN5ImGui4TextEPKcz(37001, $vararg_buffer8);
   HEAP32[$vararg_buffer11 >> 2] = (HEAP32[(HEAP32[$7 >> 2] | 0) + 44 >> 2] | 0) == 1 ? 37010 : 37014;
   __ZN5ImGui4TextEPKcz(37018, $vararg_buffer11);
   HEAP32[$vararg_buffer14 >> 2] = HEAPU16[(HEAP32[$7 >> 2] | 0) + 36 >> 1];
   __ZN5ImGui4TextEPKcz(37027, $vararg_buffer14);
   HEAP32[$vararg_buffer17 >> 2] = HEAPU16[(HEAP32[$7 >> 2] | 0) + 38 >> 1];
   __ZN5ImGui4TextEPKcz(37049, $vararg_buffer17);
   $69 = HEAP32[$7 >> 2] | 0;
   if (!(HEAP8[$69 + 42 >> 0] | 0)) __ZN5ImGui4TextEPKcz(37093, $vararg_buffer23); else {
    HEAP32[$vararg_buffer20 >> 2] = HEAPU16[$69 + 40 >> 1];
    __ZN5ImGui4TextEPKcz(37071, $vararg_buffer20);
   }
   if (HEAP8[(HEAP32[$7 >> 2] | 0) + 43 >> 0] | 0) {
    HEAPF32[$4 >> 2] = 1.0;
    HEAPF32[$4 + 4 >> 2] = 0.0;
    HEAPF32[$4 + 8 >> 2] = 0.0;
    HEAPF32[$4 + 12 >> 2] = 1.0;
    __ZN5ImGui11TextColoredERK6ImVec4PKcz($4, 37124, $vararg_buffer25);
   }
   HEAPF32[$5 >> 2] = 0.0;
   HEAPF32[$5 + 4 >> 2] = 0.0;
   if (__ZN5ImGui6ButtonEPKcRK6ImVec2(37141, $5) | 0) {
    __ZN10FileLoader4CopyERN4yakc4kc85E(HEAP32[$7 >> 2] | 0, $kc) | 0;
    HEAP8[$13 >> 0] = 0;
   }
   __ZN5ImGui8SameLineEff(0.0, -1.0);
   if (HEAP8[(HEAP32[$7 >> 2] | 0) + 42 >> 0] | 0) {
    HEAPF32[$6 >> 2] = 0.0;
    HEAPF32[$6 + 4 >> 2] = 0.0;
    if (__ZN5ImGui6ButtonEPKcRK6ImVec2(37146, $6) | 0) {
     __ZN10FileLoader5StartERN4yakc4kc85E(HEAP32[$7 >> 2] | 0, $kc) | 0;
     HEAP8[$13 >> 0] = 0;
    }
   }
   break;
  }
 default:
  {}
 }
 __ZN5ImGui8EndChildEv();
 __ZN5ImGui8EndGroupEv();
 __ZN5ImGui3EndEv();
 $93 = HEAP8[$13 >> 0] | 0;
 $94 = $93 << 24 >> 24 != 0;
 STACKTOP = sp;
 return $94 | 0;
}

function __ZN5Oryol5_priv16glTextureFactory18createEmptyTextureERNS0_7textureE($this, $tex) {
 $this = $this | 0;
 $tex = $tex | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $30 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $50 = 0, $53 = 0, $6 = 0, $62 = 0, $65 = 0, $66 = 0, $68 = 0, $71 = 0, $79 = 0, $81 = 0, $9 = 0, $attrs$i = 0, $mipIndex$03 = 0, $slotIndex$04 = 0, $switch$tableidx$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer = sp;
 $attrs$i = sp + 4 | 0;
 if (HEAP32[$tex + 768 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72607, 0, 72053, 406, 73066);
  _abort();
 }
 if (HEAP32[$tex + 772 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(73162, 0, 72053, 407, 73066);
  _abort();
 }
 $6 = $tex + 16 | 0;
 if (!(HEAP32[$6 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(73185, 0, 72053, 410, 73066);
  _abort();
 }
 $9 = $tex + 20 | 0;
 if (HEAP32[$9 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72725, 0, 72053, 411, 73066);
  _abort();
 }
 $12 = $tex + 44 | 0;
 $switch$tableidx$i = (HEAP32[$12 >> 2] | 0) + -8 | 0;
 if ($switch$tableidx$i >>> 0 < 11) if (2023 >>> ($switch$tableidx$i & 2047) & 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(73224, 0, 72053, 412, 73066);
  _abort();
 }
 $16 = $tex + 24 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 $18 = $tex + 28 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = __ZN5Oryol5_priv7glTypes17asGLTextureTargetENS_11TextureType4CodeE(0) | 0;
 $22 = __ZN5Oryol5_priv7glTypes18asGLTexImageFormatENS_11PixelFormat4CodeE(HEAP32[$12 >> 2] | 0) | 0;
 $24 = __ZN5Oryol5_priv7glTypes16asGLTexImageTypeENS_11PixelFormat4CodeE(HEAP32[$12 >> 2] | 0) | 0;
 $26 = __ZN5Oryol5_priv7glTypes26asGLTexImageInternalFormatENS_11PixelFormat4CodeE(HEAP32[$12 >> 2] | 0) | 0;
 if (!(__ZN5Oryol5_priv5glExt24IsTextureFormatSupportedENS_11PixelFormat4CodeE(HEAP32[$12 >> 2] | 0) | 0)) {
  $30 = HEAP32[$tex + 92 >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[(($30 | 0) == 0 ? 13684 : $30 + 12 | 0) >> 2];
  __ZN5Oryol3Log4WarnEPKcz(73276, $vararg_buffer);
  $$0 = 4;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $36 = $tex + 764 | 0;
 HEAP8[$36 >> 0] = (HEAP32[$6 >> 2] | 0) == 2 ? 2 : 1;
 $37 = $tex + 40 | 0;
 $slotIndex$04 = 0;
 L21 : while (1) {
  $68 = __ZN5Oryol5_priv16glTextureFactory19glGenAndBindTextureEj($this, $20) | 0;
  if ($slotIndex$04 >>> 0 >= 2) {
   label = 21;
   break;
  }
  HEAP32[$tex + 768 + ($slotIndex$04 << 2) >> 2] = $68;
  __ZN5Oryol5_priv16glTextureFactory18setupTextureParamsERKNS_12TextureSetupEj(0, $6, 0);
  $71 = HEAP32[$37 >> 2] | 0;
  if (($71 | 0) > 0) {
   $mipIndex$03 = 0;
   do {
    $79 = $17 >> $mipIndex$03;
    $81 = $19 >> $mipIndex$03;
    _glTexImage2D($20 | 0, $mipIndex$03 | 0, $26 | 0, (($79 | 0) == 0 ? 1 : $79) | 0, (($81 | 0) == 0 ? 1 : $81) | 0, 0, $22 | 0, $24 | 0, 0);
    $mipIndex$03 = $mipIndex$03 + 1 | 0;
    if (_glGetError() | 0) {
     label = 26;
     break L21;
    }
   } while (($mipIndex$03 | 0) < ($71 | 0));
  }
  $slotIndex$04 = $slotIndex$04 + 1 | 0;
  if (($slotIndex$04 | 0) >= (HEAPU8[$36 >> 0] | 0 | 0)) {
   label = 15;
   break;
  }
 }
 if ((label | 0) == 15) {
  HEAP32[$attrs$i >> 2] = 0;
  $38 = $attrs$i + 4 | 0;
  HEAP32[$38 >> 2] = -2;
  $39 = $attrs$i + 8 | 0;
  HEAP32[$39 >> 2] = -1;
  $40 = $attrs$i + 12 | 0;
  HEAP32[$40 >> 2] = 20;
  HEAP32[$attrs$i + 16 >> 2] = 20;
  $42 = $attrs$i + 20 | 0;
  HEAP32[$42 >> 2] = -1;
  $43 = $attrs$i + 24 | 0;
  HEAP32[$43 >> 2] = 0;
  $44 = $attrs$i + 28 | 0;
  HEAP32[$44 >> 2] = 0;
  HEAP32[$attrs$i + 32 >> 2] = 0;
  $46 = $attrs$i + 36 | 0;
  HEAP32[$46 >> 2] = 1;
  HEAP8[$attrs$i + 40 >> 0] = 0;
  HEAP8[$attrs$i + 41 >> 0] = 0;
  HEAP8[$attrs$i + 42 >> 0] = 0;
  $50 = $tex + 92 | 0;
  if (($50 | 0) != ($attrs$i | 0)) {
   HEAP32[$attrs$i >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($attrs$i, $50);
  }
  $53 = HEAP32[$tex + 96 >> 2] | 0;
  HEAP32[$38 >> 2] = $53;
  HEAP32[$39 >> 2] = HEAP32[$9 >> 2];
  HEAP32[$40 >> 2] = HEAP32[$12 >> 2];
  HEAP32[$42 >> 2] = HEAP32[$tex + 16 >> 2];
  HEAP32[$43 >> 2] = HEAP32[$16 >> 2];
  HEAP32[$44 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$46 >> 2] = HEAP32[$tex + 40 >> 2];
  $62 = $tex + 704 | 0;
  if (($attrs$i | 0) == ($62 | 0)) $65 = $53; else {
   HEAP32[$62 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($62, $attrs$i);
   $65 = HEAP32[$38 >> 2] | 0;
  }
  HEAP32[$tex + 708 >> 2] = $65;
  $66 = $tex + 712 | 0;
  HEAP32[$66 >> 2] = HEAP32[$39 >> 2];
  HEAP32[$66 + 4 >> 2] = HEAP32[$39 + 4 >> 2];
  HEAP32[$66 + 8 >> 2] = HEAP32[$39 + 8 >> 2];
  HEAP32[$66 + 12 >> 2] = HEAP32[$39 + 12 >> 2];
  HEAP32[$66 + 16 >> 2] = HEAP32[$39 + 16 >> 2];
  HEAP32[$66 + 20 >> 2] = HEAP32[$39 + 20 >> 2];
  HEAP32[$66 + 24 >> 2] = HEAP32[$39 + 24 >> 2];
  HEAP32[$66 + 28 >> 2] = HEAP32[$39 + 28 >> 2];
  HEAP16[$66 + 32 >> 1] = HEAP16[$39 + 32 >> 1] | 0;
  HEAP8[$66 + 34 >> 0] = HEAP8[$39 + 34 >> 0] | 0;
  HEAP32[$tex + 748 >> 2] = $20;
  $$0 = 3;
  STACKTOP = sp;
  return $$0 | 0;
 } else if ((label | 0) == 21) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 73407);
  _abort();
 } else if ((label | 0) == 26) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 453, 73066);
  _abort();
 }
 return 0;
}

function __ZN4yakc4kc857onframeEiiyy($this, $speed_multiplier, $micro_secs, $0, $1, $2, $3) {
 $this = $this | 0;
 $speed_multiplier = $speed_multiplier | 0;
 $micro_secs = $micro_secs | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$$i$i = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $110 = 0, $112 = 0, $114 = 0, $115 = 0, $119 = 0, $12 = 0, $127 = 0, $130 = 0, $132 = 0, $135 = 0, $136 = 0, $142 = 0, $143 = 0, $144 = 0, $153 = 0, $154 = 0, $155 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $31 = 0, $32 = 0, $33 = 0, $45 = 0, $47 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $70 = 0, $75 = 0, $77 = 0, $80 = 0, $90 = 0, $92 = 0, $99 = 0, $c$0$i$i = 0, $i$02$i = 0;
 if (($speed_multiplier | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16094, 0, 34024, 277, 16115);
  _abort();
 }
 $5 = $this + 725505 | 0;
 HEAP8[$5 >> 0] = 0;
 $6 = $this + 725506 | 0;
 HEAP8[$6 >> 0] = 0;
 __ZN4yakc4kc8521handle_keyboard_inputEv($this);
 $7 = $this + 725492 | 0;
 if (HEAP8[$7 >> 0] | 0) return;
 $10 = $this + 65536 | 0;
 $11 = Math_imul($micro_secs, $speed_multiplier) | 0;
 $12 = HEAP32[$10 >> 2] | 0;
 $17 = ___muldi3($12 | 0, (($12 | 0) < 0) << 31 >> 31 | 0, $11 | 0, (($11 | 0) < 0) << 31 >> 31 | 0) | 0;
 $19 = ___divdi3($17 | 0, tempRet0 | 0, 1e3, 0) | 0;
 $21 = $this + 725520 | 0;
 $23 = _i64Subtract($19 | 0, tempRet0 | 0, HEAP32[$21 >> 2] | 0, 0) | 0;
 $25 = $this + 725512 | 0;
 $26 = $25;
 $28 = HEAP32[$26 >> 2] | 0;
 $31 = HEAP32[$26 + 4 >> 2] | 0;
 $32 = _i64Add($23 | 0, tempRet0 | 0, $28 | 0, $31 | 0) | 0;
 $33 = tempRet0;
 if ($33 >>> 0 > $3 >>> 0 | ($33 | 0) == ($3 | 0) & $32 >>> 0 > $2 >>> 0) {
  HEAP8[$5 >> 0] = 1;
  $45 = $3;
  $47 = $2;
 } else if ($33 >>> 0 < $1 >>> 0 | ($33 | 0) == ($1 | 0) & $32 >>> 0 < $0 >>> 0) {
  HEAP8[$6 >> 0] = 1;
  $45 = $1;
  $47 = $0;
 } else {
  $45 = $33;
  $47 = $32;
 }
 L12 : do if ($31 >>> 0 < $45 >>> 0 | ($31 | 0) == ($45 | 0) & $28 >>> 0 < $47 >>> 0) {
  $51 = $this + 65620 | 0;
  $52 = $this + 65642 | 0;
  $53 = $this + 725484 | 0;
  $54 = $this + 725488 | 0;
  $55 = $this + 725464 | 0;
  $56 = $this + 65650 | 0;
  $57 = $this + 69253 | 0;
  $58 = $this + 65645 | 0;
  $59 = $this + 69284 | 0;
  $60 = $this + 462840 | 0;
  $61 = $this + 65649 | 0;
  $62 = $this + 65648 | 0;
  $157 = $28;
  $158 = $31;
  while (1) {
   $63 = HEAP32[$53 >> 2] | 0;
   if (($63 & 255) << 24 >> 24) if ((HEAP16[$52 >> 1] | 0) == ($63 >>> 16 & 65535) << 16 >> 16) {
    $159 = $157;
    $160 = $158;
    break;
   }
   $70 = HEAP32[$54 >> 2] | 0;
   if (!(($70 & 255) << 24 >> 24)) $80 = HEAP16[$52 >> 1] | 0; else {
    $75 = HEAP16[$52 >> 1] | 0;
    if ($75 << 16 >> 16 == ($70 >>> 16 & 65535) << 16 >> 16) {
     $159 = $157;
     $160 = $158;
     break;
    } else $80 = $75;
   }
   $77 = HEAP32[$55 >> 2] | 0;
   HEAP32[$55 >> 2] = $77 + 1;
   HEAP16[$this + 725468 + ($77 << 1) >> 1] = $80;
   HEAP32[$55 >> 2] = HEAP32[$55 >> 2] & 7;
   HEAP8[$56 >> 0] = 0;
   if (HEAP8[$57 >> 0] | 0) {
    HEAP8[$61 >> 0] = 1;
    HEAP8[$62 >> 0] = 1;
    HEAP8[$57 >> 0] = 0;
   }
   HEAP8[$58 >> 0] = (HEAPU8[$58 >> 0] | 0) + 1 & 127;
   $90 = HEAP16[$52 >> 1] | 0;
   HEAP16[$52 >> 1] = $90 + 1 << 16 >> 16;
   $92 = $90 & 65535;
   $99 = __ZN4yakc3z805do_opEh($51, HEAP8[(HEAP32[$this + 66932 + ($92 >>> 11 << 3) >> 2] | 0) + ($92 & 2047) >> 0] | 0) | 0;
   $101 = (__ZN4yakc3z8010handle_irqEv($51) | 0) + $99 | 0;
   __ZN4yakc5clock6updateEi($10, $101);
   $102 = $101 << 1;
   $i$02$i = 0;
   do {
    $103 = $this + 69284 + ($i$02$i * 48 | 0) | 0;
    if (!(HEAP8[$103 >> 0] & 70)) if (!(HEAP8[$this + 69284 + ($i$02$i * 48 | 0) + 8 >> 0] | 0)) {
     $110 = $this + 69284 + ($i$02$i * 48 | 0) + 4 | 0;
     $112 = (HEAP32[$110 >> 2] | 0) - $102 | 0;
     HEAP32[$110 >> 2] = $112;
     if (($112 | 0) < 1) {
      $114 = $this + 69284 + ($i$02$i * 48 | 0) + 1 | 0;
      do {
       __ZN4yakc6z80ctc21down_counter_callbackERNS0_13channel_stateE($59, $103);
       $115 = HEAP8[$114 >> 0] | 0;
       $$$i$i = $115 << 24 >> 24 == 0 ? 256 : $115 & 255;
       $119 = HEAPU8[$103 >> 0] | 0;
       if (!($119 & 64)) $c$0$i$i = Math_imul($119 & 32 | 0 ? 256 : 16, $$$i$i) | 0; else $c$0$i$i = $$$i$i;
       $127 = (HEAP32[$110 >> 2] | 0) + $c$0$i$i | 0;
       HEAP32[$110 >> 2] = $127;
      } while (($127 | 0) < 1);
     }
    }
    $i$02$i = $i$02$i + 1 | 0;
   } while (($i$02$i | 0) != 4);
   $130 = $25;
   $132 = HEAP32[$130 >> 2] | 0;
   $135 = HEAP32[$130 + 4 >> 2] | 0;
   $136 = $60;
   HEAP32[$136 >> 2] = $132;
   HEAP32[$136 + 4 >> 2] = $135;
   $142 = _i64Add($132 | 0, $135 | 0, $101 | 0, (($101 | 0) < 0) << 31 >> 31 | 0) | 0;
   $143 = tempRet0;
   $144 = $25;
   HEAP32[$144 >> 2] = $142;
   HEAP32[$144 + 4 >> 2] = $143;
   if ($143 >>> 0 < $45 >>> 0 | ($143 | 0) == ($45 | 0) & $142 >>> 0 < $47 >>> 0) {
    $157 = $142;
    $158 = $143;
   } else {
    $153 = $142;
    $154 = $143;
    break L12;
   }
  }
  HEAP8[$7 >> 0] = 1;
  HEAP32[$21 >> 2] = 0;
  $153 = $159;
  $154 = $160;
 } else {
  $153 = $28;
  $154 = $31;
 } while (0);
 $155 = _i64Subtract($153 | 0, $154 | 0, $47 | 0, $45 | 0) | 0;
 HEAP32[$21 >> 2] = $155;
 return;
}

function __ZN5ImGui15RenderCheckMarkE6ImVec2j($pos, $col) {
 $pos = $pos | 0;
 $col = $col | 0;
 var $1 = 0, $100 = 0, $101 = 0, $105 = 0, $107 = 0, $113 = 0, $115 = 0, $118 = 0, $119 = 0, $12 = 0.0, $120 = 0, $121 = 0, $124 = 0, $129 = 0, $130 = 0, $133 = 0, $138 = 0, $139 = 0, $143 = 0, $145 = 0, $15 = 0.0, $151 = 0, $153 = 0, $156 = 0, $157 = 0, $16 = 0.0, $161 = 0, $162 = 0, $163 = 0, $166 = 0, $168 = 0, $171 = 0, $176 = 0, $18 = 0.0, $180 = 0, $182 = 0, $23 = 0, $37 = 0.0, $38 = 0.0, $4 = 0.0, $40 = 0.0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $48 = 0, $53 = 0, $54 = 0, $57 = 0, $62 = 0, $63 = 0, $67 = 0, $69 = 0, $75 = 0, $77 = 0, $8 = 0.0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $86 = 0, $91 = 0, $92 = 0, $95 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $4 = +HEAPF32[38187];
 $8 = +(~~($4 * .3070000112056732 + .5) | 0);
 $12 = +(~~(($4 - $8) / 3.0) | 0);
 $15 = +HEAPF32[$pos >> 2] + .5 + $8;
 $16 = $15 + $12;
 $18 = $15 + $12 * 3.0;
 $23 = HEAP32[38186] | 0;
 $37 = +(~~+HEAPF32[$23 + 12 >> 2] | 0) + (+HEAPF32[$pos + 4 >> 2] + -1.0 + +(~~(+HEAPF32[$23 + 28 >> 2] * ($4 / +HEAPF32[$23 >> 2]) + .5) | 0));
 $38 = $37 - $12;
 $40 = $37 - $12 * 2.0;
 $41 = $1 + 572 | 0;
 $42 = HEAP32[$41 >> 2] | 0;
 $43 = $42 + 76 | 0;
 $44 = HEAP32[$43 >> 2] | 0;
 $45 = $42 + 80 | 0;
 if (($44 | 0) == (HEAP32[$45 >> 2] | 0)) {
  $48 = $44 + 1 | 0;
  if (!$44) $53 = 8; else $53 = (($44 | 0) / 2 | 0) + $44 | 0;
  $54 = ($53 | 0) > ($48 | 0) ? $53 : $48;
  if (($44 | 0) < ($54 | 0)) {
   $57 = 147664;
   HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 1;
   $62 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($54 << 3) | 0;
   $63 = $42 + 84 | 0;
   _memcpy($62 | 0, HEAP32[$63 >> 2] | 0, HEAP32[$43 >> 2] << 3 | 0) | 0;
   $67 = HEAP32[$63 >> 2] | 0;
   if ($67 | 0) {
    $69 = 147664;
    HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($67);
   HEAP32[$63 >> 2] = $62;
   HEAP32[$45 >> 2] = $54;
   $75 = HEAP32[$43 >> 2] | 0;
  } else $75 = $44;
 } else $75 = $44;
 HEAP32[$43 >> 2] = $75 + 1;
 $77 = HEAP32[$42 + 84 >> 2] | 0;
 HEAPF32[$77 + ($75 << 3) >> 2] = $15;
 HEAPF32[$77 + ($75 << 3) + 4 >> 2] = $38;
 $80 = HEAP32[$41 >> 2] | 0;
 $81 = $80 + 76 | 0;
 $82 = HEAP32[$81 >> 2] | 0;
 $83 = $80 + 80 | 0;
 if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) {
  $86 = $82 + 1 | 0;
  if (!$82) $91 = 8; else $91 = (($82 | 0) / 2 | 0) + $82 | 0;
  $92 = ($91 | 0) > ($86 | 0) ? $91 : $86;
  if (($82 | 0) < ($92 | 0)) {
   $95 = 147664;
   HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + 1;
   $100 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($92 << 3) | 0;
   $101 = $80 + 84 | 0;
   _memcpy($100 | 0, HEAP32[$101 >> 2] | 0, HEAP32[$81 >> 2] << 3 | 0) | 0;
   $105 = HEAP32[$101 >> 2] | 0;
   if ($105 | 0) {
    $107 = 147664;
    HEAP32[$107 >> 2] = (HEAP32[$107 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($105);
   HEAP32[$101 >> 2] = $100;
   HEAP32[$83 >> 2] = $92;
   $113 = HEAP32[$81 >> 2] | 0;
  } else $113 = $82;
 } else $113 = $82;
 HEAP32[$81 >> 2] = $113 + 1;
 $115 = HEAP32[$80 + 84 >> 2] | 0;
 HEAPF32[$115 + ($113 << 3) >> 2] = $16;
 HEAPF32[$115 + ($113 << 3) + 4 >> 2] = $37;
 $118 = HEAP32[$41 >> 2] | 0;
 $119 = $118 + 76 | 0;
 $120 = HEAP32[$119 >> 2] | 0;
 $121 = $118 + 80 | 0;
 if (($120 | 0) == (HEAP32[$121 >> 2] | 0)) {
  $124 = $120 + 1 | 0;
  if (!$120) $129 = 8; else $129 = (($120 | 0) / 2 | 0) + $120 | 0;
  $130 = ($129 | 0) > ($124 | 0) ? $129 : $124;
  if (($120 | 0) < ($130 | 0)) {
   $133 = 147664;
   HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + 1;
   $138 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($130 << 3) | 0;
   $139 = $118 + 84 | 0;
   _memcpy($138 | 0, HEAP32[$139 >> 2] | 0, HEAP32[$119 >> 2] << 3 | 0) | 0;
   $143 = HEAP32[$139 >> 2] | 0;
   if ($143 | 0) {
    $145 = 147664;
    HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($143);
   HEAP32[$139 >> 2] = $138;
   HEAP32[$121 >> 2] = $130;
   $151 = HEAP32[$119 >> 2] | 0;
  } else $151 = $120;
 } else $151 = $120;
 HEAP32[$119 >> 2] = $151 + 1;
 $153 = HEAP32[$118 + 84 >> 2] | 0;
 HEAPF32[$153 + ($151 << 3) >> 2] = $18;
 HEAPF32[$153 + ($151 << 3) + 4 >> 2] = $40;
 $156 = HEAP32[$41 >> 2] | 0;
 $157 = $156 + 84 | 0;
 __ZN10ImDrawList11AddPolylineEPK6ImVec2ijbfb($156, HEAP32[$157 >> 2] | 0, HEAP32[$156 + 76 >> 2] | 0, $col, 0, 1.0, 1);
 $161 = $156 + 76 | 0;
 $162 = $156 + 80 | 0;
 $163 = HEAP32[$162 >> 2] | 0;
 if (($163 | 0) >= 0) {
  HEAP32[$161 >> 2] = 0;
  return;
 }
 $166 = (($163 | 0) / 2 | 0) + $163 | 0;
 $168 = ($166 | 0) > 0 ? $166 : 0;
 if (($163 | 0) >= ($168 | 0)) {
  HEAP32[$161 >> 2] = 0;
  return;
 }
 $171 = 147664;
 HEAP32[$171 >> 2] = (HEAP32[$171 >> 2] | 0) + 1;
 $176 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($168 << 3) | 0;
 _memcpy($176 | 0, HEAP32[$157 >> 2] | 0, HEAP32[$161 >> 2] << 3 | 0) | 0;
 $180 = HEAP32[$157 >> 2] | 0;
 if ($180 | 0) {
  $182 = 147664;
  HEAP32[$182 >> 2] = (HEAP32[$182 >> 2] | 0) + -1;
 }
 FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($180);
 HEAP32[$157 >> 2] = $176;
 HEAP32[$162 >> 2] = $168;
 HEAP32[$161 >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv10glRenderer17applyUniformBlockENS_11ShaderStage4CodeEixPKhi($this, $bindStage, $bindSlot, $0, $1, $ptr, $byteSize) {
 $this = $this | 0;
 $bindStage = $bindStage | 0;
 $bindSlot = $bindSlot | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $ptr = $ptr | 0;
 $byteSize = $byteSize | 0;
 var $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $30 = 0, $34 = 0, $38 = 0, $39 = 0, $42 = 0, $66 = 0, $8 = 0, $uniformIndex$01 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 1055, 70988);
  _abort();
 }
 if (($0 | 0) == 0 & ($1 | 0) == 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71092, 0, 66399, 1056, 70988);
  _abort();
 }
 $8 = HEAP32[$this + 212 >> 2] | 0;
 if (!$8) {
  STACKTOP = sp;
  return;
 }
 $11 = HEAP32[$8 + 344 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71108, 0, 66399, 1064, 70988);
  _abort();
 }
 $13 = $11 + 16 | 0;
 $14 = __ZNK5Oryol11ShaderSetup31UniformBlockIndexByStageAndSlotENS_11ShaderStage4CodeEi($13, $bindStage, $bindSlot) | 0;
 if (($14 | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71112, 0, 66399, 1066, 70988);
  _abort();
 }
 $16 = __ZNK5Oryol11ShaderSetup18UniformBlockLayoutEi($13, $14) | 0;
 $17 = $16;
 if (!((HEAP32[$17 >> 2] | 0) == ($0 | 0) ? (HEAP32[$17 + 4 >> 2] | 0) == ($1 | 0) : 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71136, 71166, 66399, 1072, 70988);
  _abort();
 }
 if ((HEAP32[$16 + 12 >> 2] | 0) != ($byteSize | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71195, 0, 66399, 1074, 70988);
  _abort();
 }
 $30 = HEAP32[$16 + 8 >> 2] | 0;
 if (($30 | 0) <= 0) {
  STACKTOP = sp;
  return;
 }
 $34 = ($bindSlot << 4) + ($bindStage << 6) | 0;
 $uniformIndex$01 = 0;
 L25 : while (1) {
  if ($uniformIndex$01 >>> 0 >= 16) {
   label = 17;
   break;
  }
  $38 = $ptr + (HEAP32[$16 + 208 + ($uniformIndex$01 << 2) >> 2] | 0) | 0;
  $39 = $34 + $uniformIndex$01 | 0;
  if ($39 >>> 0 >= 128) {
   label = 19;
   break;
  }
  $42 = HEAP32[$11 + 3068 + ($39 << 2) >> 2] | 0;
  L29 : do if (($42 | 0) != -1) switch (HEAPU8[$16 + 16 + ($uniformIndex$01 * 12 | 0) + 4 >> 0] | 0) {
  case 0:
   {
    if ((HEAP32[$16 + 16 + ($uniformIndex$01 * 12 | 0) + 8 >> 2] | 0) != 1) {
     label = 23;
     break L25;
    }
    _glUniform1f($42 | 0, +(+HEAPF32[$38 >> 2]));
    break L29;
    break;
   }
  case 1:
   {
    if ((HEAP32[$16 + 16 + ($uniformIndex$01 * 12 | 0) + 8 >> 2] | 0) != 1) {
     label = 26;
     break L25;
    }
    _glUniform2f($42 | 0, +(+HEAPF32[$38 >> 2]), +(+HEAPF32[$38 + 4 >> 2]));
    break L29;
    break;
   }
  case 2:
   {
    if ((HEAP32[$16 + 16 + ($uniformIndex$01 * 12 | 0) + 8 >> 2] | 0) != 1) {
     label = 29;
     break L25;
    }
    _glUniform3f($42 | 0, +(+HEAPF32[$38 >> 2]), +(+HEAPF32[$38 + 4 >> 2]), +(+HEAPF32[$38 + 8 >> 2]));
    break L29;
    break;
   }
  case 3:
   {
    $66 = HEAP32[$16 + 16 + ($uniformIndex$01 * 12 | 0) + 8 >> 2] | 0;
    if (($66 | 0) > 1) {
     _glUniform4fv($42 | 0, $66 | 0, $38 | 0);
     break L29;
    } else {
     _glUniform4f($42 | 0, +(+HEAPF32[$38 >> 2]), +(+HEAPF32[$38 + 4 >> 2]), +(+HEAPF32[$38 + 8 >> 2]), +(+HEAPF32[$38 + 12 >> 2]));
     break L29;
    }
    break;
   }
  case 4:
   {
    if ((HEAP32[$16 + 16 + ($uniformIndex$01 * 12 | 0) + 8 >> 2] | 0) != 1) {
     label = 35;
     break L25;
    }
    _glUniformMatrix2fv($42 | 0, 1, 0, $38 | 0);
    break L29;
    break;
   }
  case 5:
   {
    if ((HEAP32[$16 + 16 + ($uniformIndex$01 * 12 | 0) + 8 >> 2] | 0) != 1) {
     label = 38;
     break L25;
    }
    _glUniformMatrix3fv($42 | 0, 1, 0, $38 | 0);
    break L29;
    break;
   }
  case 6:
   {
    _glUniformMatrix4fv($42 | 0, HEAP32[$16 + 16 + ($uniformIndex$01 * 12 | 0) + 8 >> 2] | 0, 0, $38 | 0);
    break L29;
    break;
   }
  case 8:
   {
    _glUniform1i($42 | 0, HEAP32[$38 >> 2] | 0);
    break L29;
    break;
   }
  default:
   {
    label = 42;
    break L25;
   }
  } while (0);
  $uniformIndex$01 = $uniformIndex$01 + 1 | 0;
  if (($uniformIndex$01 | 0) >= ($30 | 0)) {
   label = 44;
   break;
  }
 }
 if ((label | 0) == 17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 71225);
  _abort();
 } else if ((label | 0) == 19) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 71378);
  _abort();
 } else if ((label | 0) == 23) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71467, 0, 66399, 1087, 70988);
  _abort();
 } else if ((label | 0) == 26) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71467, 0, 66399, 1095, 70988);
  _abort();
 } else if ((label | 0) == 29) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71467, 0, 66399, 1103, 70988);
  _abort();
 } else if ((label | 0) == 35) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71467, 0, 66399, 1123, 70988);
  _abort();
 } else if ((label | 0) == 38) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71467, 0, 66399, 1131, 70988);
  _abort();
 } else if ((label | 0) == 42) {
  __ZN5Oryol3Log5ErrorEPKcz(71481, $vararg_buffer);
  _abort();
 } else if ((label | 0) == 44) {
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue9groupItemEE5eraseEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$pre5$i$i$i$i = 0, $$pre5$i$i$i$i4 = 0, $$pre6$i$i2$pre$phi$i$i19ZZZZ2D = 0, $$pre6$i$i2$pre$phi$i$iZZZZ2D = 0, $0 = 0, $1 = 0, $100 = 0, $102 = 0, $106 = 0, $107 = 0, $11 = 0, $14 = 0, $2 = 0, $25 = 0, $3 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $52 = 0, $54 = 0, $58 = 0, $59 = 0, $62 = 0, $73 = 0, $84 = 0, $86 = 0, $87 = 0, $88 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $i$01$i$i$i$i = 0, $i$01$i$i$i$i12 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 610, 105050);
  _abort();
 }
 if (!$index) {
  HEAP32[$2 >> 2] = $3 + 1;
  $11 = $5 + ($3 * 72 | 0) | 0;
  $14 = HEAP32[$5 + ($3 * 72 | 0) + 64 >> 2] | 0;
  if (($14 | 0) == ($5 + ($3 * 72 | 0) + 48 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 16 >> 2] & 255]($14); else if ($14 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 20 >> 2] & 255]($14);
  $25 = HEAP32[$5 + ($3 * 72 | 0) + 40 >> 2] | 0;
  if (($25 | 0) == ($5 + ($3 * 72 | 0) + 24 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$25 >> 2] | 0) + 16 >> 2] & 255]($25); else if ($25 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$25 >> 2] | 0) + 20 >> 2] & 255]($25);
  HEAP32[$5 + ($3 * 72 | 0) + 16 >> 2] = 0;
  HEAP32[$5 + ($3 * 72 | 0) + 20 >> 2] = 0;
  $36 = HEAP32[$11 >> 2] | 0;
  $$pre5$i$i$i$i = $5 + ($3 * 72 | 0) + 8 | 0;
  if (!$36) $$pre6$i$i2$pre$phi$i$iZZZZ2D = $5 + ($3 * 72 | 0) + 12 | 0; else {
   $38 = HEAP32[$$pre5$i$i$i$i >> 2] | 0;
   $39 = $5 + ($3 * 72 | 0) + 12 | 0;
   $40 = HEAP32[$39 >> 2] | 0;
   if (($38 | 0) < ($40 | 0)) {
    $106 = $40;
    $44 = $36;
    $i$01$i$i$i$i = $38;
    while (1) {
     $43 = $44 + ($i$01$i$i$i$i << 2) | 0;
     $45 = HEAP32[$43 >> 2] | 0;
     if (!$45) $54 = $106; else {
      $47 = $45 + 4 | 0;
      $48 = HEAP32[$47 >> 2] | 0;
      HEAP32[$47 >> 2] = $48 - 1;
      if (($48 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$45 >> 2] >> 2] & 255]($45);
      HEAP32[$43 >> 2] = 0;
      $54 = HEAP32[$39 >> 2] | 0;
     }
     $52 = $i$01$i$i$i$i + 1 | 0;
     if (($52 | 0) >= ($54 | 0)) break;
     $106 = $54;
     $44 = HEAP32[$11 >> 2] | 0;
     $i$01$i$i$i$i = $52;
    }
    $42 = HEAP32[$11 >> 2] | 0;
   } else $42 = $36;
   __ZN5Oryol6Memory4FreeEPv($42);
   $$pre6$i$i2$pre$phi$i$iZZZZ2D = $39;
  }
  HEAP32[$11 >> 2] = 0;
  HEAP32[$5 + ($3 * 72 | 0) + 4 >> 2] = 0;
  HEAP32[$$pre5$i$i$i$i >> 2] = 0;
  HEAP32[$$pre6$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
  return;
 }
 if (($4 + -1 | 0) != ($index | 0)) if (($4 >> 1 | 0) > ($index | 0)) {
  __ZN5Oryol5_priv13elementBufferINS_9loadQueue9groupItemEE14moveEraseFrontEi($this, $index);
  return;
 } else {
  __ZN5Oryol5_priv13elementBufferINS_9loadQueue9groupItemEE13moveEraseBackEi($this, $index);
  return;
 }
 $58 = $1 + -1 | 0;
 HEAP32[$0 >> 2] = $58;
 $59 = $5 + ($58 * 72 | 0) | 0;
 $62 = HEAP32[$5 + ($58 * 72 | 0) + 64 >> 2] | 0;
 if (($62 | 0) == ($5 + ($58 * 72 | 0) + 48 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$62 >> 2] | 0) + 16 >> 2] & 255]($62); else if ($62 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$62 >> 2] | 0) + 20 >> 2] & 255]($62);
 $73 = HEAP32[$5 + ($58 * 72 | 0) + 40 >> 2] | 0;
 if (($73 | 0) == ($5 + ($58 * 72 | 0) + 24 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$73 >> 2] | 0) + 16 >> 2] & 255]($73); else if ($73 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$73 >> 2] | 0) + 20 >> 2] & 255]($73);
 HEAP32[$5 + ($58 * 72 | 0) + 16 >> 2] = 0;
 HEAP32[$5 + ($58 * 72 | 0) + 20 >> 2] = 0;
 $84 = HEAP32[$59 >> 2] | 0;
 $$pre5$i$i$i$i4 = $5 + ($58 * 72 | 0) + 8 | 0;
 if (!$84) $$pre6$i$i2$pre$phi$i$i19ZZZZ2D = $5 + ($58 * 72 | 0) + 12 | 0; else {
  $86 = HEAP32[$$pre5$i$i$i$i4 >> 2] | 0;
  $87 = $5 + ($58 * 72 | 0) + 12 | 0;
  $88 = HEAP32[$87 >> 2] | 0;
  if (($86 | 0) < ($88 | 0)) {
   $107 = $88;
   $92 = $84;
   $i$01$i$i$i$i12 = $86;
   while (1) {
    $91 = $92 + ($i$01$i$i$i$i12 << 2) | 0;
    $93 = HEAP32[$91 >> 2] | 0;
    if (!$93) $102 = $107; else {
     $95 = $93 + 4 | 0;
     $96 = HEAP32[$95 >> 2] | 0;
     HEAP32[$95 >> 2] = $96 - 1;
     if (($96 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$93 >> 2] >> 2] & 255]($93);
     HEAP32[$91 >> 2] = 0;
     $102 = HEAP32[$87 >> 2] | 0;
    }
    $100 = $i$01$i$i$i$i12 + 1 | 0;
    if (($100 | 0) >= ($102 | 0)) break;
    $107 = $102;
    $92 = HEAP32[$59 >> 2] | 0;
    $i$01$i$i$i$i12 = $100;
   }
   $90 = HEAP32[$59 >> 2] | 0;
  } else $90 = $84;
  __ZN5Oryol6Memory4FreeEPv($90);
  $$pre6$i$i2$pre$phi$i$i19ZZZZ2D = $87;
 }
 HEAP32[$59 >> 2] = 0;
 HEAP32[$5 + ($58 * 72 | 0) + 4 >> 2] = 0;
 HEAP32[$$pre5$i$i$i$i4 >> 2] = 0;
 HEAP32[$$pre6$i$i2$pre$phi$i$i19ZZZZ2D >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv10glRenderer17applyRenderTargetEPNS0_7textureERKNS_10ClearStateE($this, $rt, $clearState) {
 $this = $this | 0;
 $rt = $rt | 0;
 $clearState = $clearState | 0;
 var $$lo = 0, $0 = 0, $10 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $3 = 0, $30 = 0, $4 = 0, $41 = 0, $43 = 0, $46 = 0, $49 = 0, $60 = 0, $61 = 0, $65 = 0, $7 = 0, $76 = 0, $77 = 0, $87 = 0, $90 = 0, $91 = 0, $98 = 0, $glClearMask$0 = 0, $glClearMask$1 = 0, $glClearMask$21 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 280, 67151);
  _abort();
 }
 $3 = ($rt | 0) == 0;
 $4 = $this + 36 | 0;
 if ($3) {
  $7 = __ZNK5Oryol5_priv14displayMgrBase15GetDisplayAttrsEv(HEAP32[$this + 8 >> 2] | 0) | 0;
  dest = $4;
  src = $7;
  stop = dest + 44 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  __ZN5Oryol6StringaSERKS0_($this + 80 | 0, $7 + 44 | 0);
 } else {
  $10 = $0 + 28 | 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$0 + 20 >> 2] = 0;
  HEAP32[$0 + 24 >> 2] = 0;
  HEAP32[$10 >> 2] = 12;
  $11 = $0 + 32 | 0;
  HEAP32[$11 >> 2] = 1;
  $12 = $0 + 36 | 0;
  HEAP8[$12 >> 0] = 1;
  $13 = $0 + 40 | 0;
  HEAP32[$13 >> 2] = 1;
  $14 = $0 + 44 | 0;
  __ZN5Oryol6StringC2Ev($14);
  $16 = HEAP32[$rt + 728 >> 2] | 0;
  HEAP32[$0 >> 2] = $16;
  $18 = HEAP32[$rt + 732 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $18;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = $16;
  HEAP32[$0 + 20 >> 2] = $18;
  HEAP32[$0 + 24 >> 2] = HEAP32[$rt + 716 >> 2];
  HEAP32[$10 >> 2] = HEAP32[$rt + 720 >> 2];
  HEAP32[$11 >> 2] = 1;
  HEAP8[$12 >> 0] = 0;
  HEAP32[$13 >> 2] = 1;
  dest = $4;
  src = $0;
  stop = dest + 44 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  __ZN5Oryol6StringaSEOS0_($this + 80 | 0, $14);
  __ZN5Oryol6StringD2Ev($14);
 }
 $30 = $this + 208 | 0;
 do if ((HEAP32[$30 >> 2] | 0) != ($rt | 0)) {
  if ($3) {
   __ZN5Oryol5_priv14emscDisplayMgr24glBindDefaultFramebufferEv(HEAP32[$this + 8 >> 2] | 0);
   break;
  }
  _glBindFramebuffer(36160, HEAP32[$rt + 752 >> 2] | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 297, 67151);
   _abort();
  }
 } while (0);
 HEAP32[$30 >> 2] = $rt;
 HEAP8[$this + 32 >> 0] = 1;
 $41 = HEAP32[$this + 52 >> 2] | 0;
 $43 = HEAP32[$this + 56 >> 2] | 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 226, 67006);
  _abort();
 }
 $46 = $this + 276 | 0;
 $49 = $this + 280 | 0;
 if (!(HEAP32[$46 >> 2] | 0)) if (!(HEAP32[$49 >> 2] | 0)) if ((HEAP32[$this + 284 >> 2] | 0) == ($41 | 0)) {
  if ((HEAP32[$this + 288 >> 2] | 0) != ($43 | 0)) label = 17;
 } else label = 17; else label = 17; else label = 17;
 if ((label | 0) == 17) {
  HEAP32[$46 >> 2] = 0;
  HEAP32[$49 >> 2] = 0;
  HEAP32[$this + 284 >> 2] = $41;
  HEAP32[$this + 288 >> 2] = $43;
  _glViewport(0, 0, $41 | 0, $43 | 0);
 }
 $60 = $this + 240 | 0;
 $61 = HEAP16[$60 >> 1] | 0;
 if ($61 & 4) {
  HEAP16[$60 >> 1] = $61 & -5;
  _glDisable(3089);
 }
 $65 = $clearState + 21 | 0;
 if (!(HEAP8[$65 >> 0] & 1)) $glClearMask$0 = 0; else {
  _glClearColor(+(+HEAPF32[$clearState >> 2]), +(+HEAPF32[$clearState + 4 >> 2]), +(+HEAPF32[$clearState + 8 >> 2]), +(+HEAPF32[$clearState + 12 >> 2]));
  $76 = $this + 224 | 0;
  $$lo = HEAP32[$76 >> 2] | 0;
  $77 = HEAPU16[$76 + 4 >> 1] | 0;
  if (($$lo & 2013265920 | 0) == 2013265920 & 0 == 0) $glClearMask$0 = 16384; else {
   HEAP32[$76 >> 2] = $$lo | 2013265920;
   HEAP16[$76 + 4 >> 1] = $77;
   _glColorMask(1, 1, 1, 1);
   $glClearMask$0 = 16384;
  }
 }
 if (!(HEAP8[$65 >> 0] & 2)) $glClearMask$1 = $glClearMask$0; else {
  $87 = $glClearMask$0 | 256;
  _glClearDepthf(+(+HEAPF32[$clearState + 16 >> 2]));
  $90 = $this + 236 | 0;
  $91 = HEAP16[$90 >> 1] | 0;
  if (!($91 & 32)) {
   HEAP16[$90 >> 1] = $91 | 32;
   _glDepthMask(1);
   $glClearMask$1 = $87;
  } else $glClearMask$1 = $87;
 }
 if (!(HEAP8[$65 >> 0] & 4)) {
  if ($glClearMask$1 | 0) {
   $glClearMask$21 = $glClearMask$1;
   label = 30;
  }
 } else {
  $98 = $glClearMask$1 | 1024;
  _glClearStencil(HEAPU8[$clearState + 20 >> 0] | 0);
  $103 = $this + 236 + 2 | 0;
  $104 = HEAP16[$103 >> 1] | 0;
  if (($104 & 255) == 255) {
   $glClearMask$21 = $98;
   label = 30;
  } else {
   HEAP16[$103 >> 1] = $104 | 255;
   _glStencilMask(255);
   $glClearMask$21 = $98;
   label = 30;
  }
 }
 if ((label | 0) == 30) _glClear($glClearMask$21 | 0);
 if (!(_glGetError() | 0)) {
  STACKTOP = sp;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 349, 67151);
  _abort();
 }
}

function __ZN4yakc10kc85_video15decode_one_lineEPjib($this, $dst_start, $y, $blink_bg) {
 $this = $this | 0;
 $dst_start = $dst_start | 0;
 $y = $y | 0;
 $blink_bg = $blink_bg | 0;
 var $1 = 0, $10 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $122 = 0, $123 = 0, $126 = 0, $128 = 0, $133 = 0, $135 = 0, $137 = 0, $147 = 0, $148 = 0, $151 = 0, $155 = 0, $156 = 0, $18 = 0, $19 = 0, $192 = 0, $200 = 0, $201 = 0, $204 = 0, $211 = 0, $215 = 0, $22 = 0, $26 = 0, $27 = 0, $61 = 0, $67 = 0, $68 = 0, $71 = 0, $78 = 0, $82 = 0, $9 = 0, $color_offset$0 = 0, $color_offset$0$us = 0, $pixel_offset$0 = 0, $pixel_offset$0$us = 0, $x$05 = 0, $x$05$us = 0, $x3$06 = 0, $x3$06$us = 0;
 $1 = $dst_start + ($y * 320 << 2) | 0;
 if ((HEAP32[$this + 393216 >> 2] | 0) == 4) {
  $9 = (HEAPU8[$this + 393220 >> 0] | 0) << 1 & 2;
  $10 = $9 | 1;
  if ($blink_bg) $x$05 = 0; else {
   $x$05$us = 0;
   do {
    $12 = $x$05$us << 8 | $y;
    $18 = $1 + ($x$05$us << 3 << 2) | 0;
    $19 = HEAPU8[$this + ($10 << 14) + $12 >> 0] | 0;
    $22 = HEAP32[$this + 393292 + (($19 & 7) << 2) >> 2] | 0;
    $26 = HEAP32[$this + 393228 + (($19 >>> 3 & 15) << 2) >> 2] | 0;
    $27 = HEAPU8[$this + ($9 << 14) + $12 >> 0] | 0;
    HEAP32[$18 >> 2] = $27 & 128 | 0 ? $26 : $22;
    HEAP32[$18 + 4 >> 2] = $27 & 64 | 0 ? $26 : $22;
    HEAP32[$18 + 8 >> 2] = $27 & 32 | 0 ? $26 : $22;
    HEAP32[$18 + 12 >> 2] = $27 & 16 | 0 ? $26 : $22;
    HEAP32[$18 + 16 >> 2] = $27 & 8 | 0 ? $26 : $22;
    HEAP32[$18 + 20 >> 2] = $27 & 4 | 0 ? $26 : $22;
    HEAP32[$18 + 24 >> 2] = $27 & 2 | 0 ? $26 : $22;
    HEAP32[$18 + 28 >> 2] = $27 & 1 | 0 ? $26 : $22;
    $x$05$us = $x$05$us + 1 | 0;
   } while (($x$05$us | 0) != 40);
   return;
  }
  do {
   $61 = $x$05 << 8 | $y;
   $67 = $1 + ($x$05 << 3 << 2) | 0;
   $68 = HEAPU8[$this + ($10 << 14) + $61 >> 0] | 0;
   $71 = HEAP32[$this + 393292 + (($68 & 7) << 2) >> 2] | 0;
   if (!($68 & 128)) $82 = HEAP32[$this + 393228 + (($68 >>> 3 & 15) << 2) >> 2] | 0; else $82 = $71;
   $78 = HEAPU8[$this + ($9 << 14) + $61 >> 0] | 0;
   HEAP32[$67 >> 2] = $78 & 128 | 0 ? $82 : $71;
   HEAP32[$67 + 4 >> 2] = $78 & 64 | 0 ? $82 : $71;
   HEAP32[$67 + 8 >> 2] = $78 & 32 | 0 ? $82 : $71;
   HEAP32[$67 + 12 >> 2] = $78 & 16 | 0 ? $82 : $71;
   HEAP32[$67 + 16 >> 2] = $78 & 8 | 0 ? $82 : $71;
   HEAP32[$67 + 20 >> 2] = $78 & 4 | 0 ? $82 : $71;
   HEAP32[$67 + 24 >> 2] = $78 & 2 | 0 ? $82 : $71;
   HEAP32[$67 + 28 >> 2] = $78 & 1 | 0 ? $82 : $71;
   $x$05 = $x$05 + 1 | 0;
  } while (($x$05 | 0) != 40);
  return;
 }
 $112 = $this + 10240 | 0;
 $114 = $y >>> 2 << 5;
 $115 = $114 & 96;
 $117 = $y << 7 & 384;
 $119 = $y >> 4;
 $122 = $115 | $117 | $119 << 9 & 7680;
 $123 = $114 & 2016;
 $126 = $119 << 3 & 24 | $115;
 $128 = $y >>> 6 & 3;
 $133 = $117 | $128 << 9 | $126 | 8192;
 $135 = $128 << 7 | $126 | 2048;
 if ($blink_bg) $x3$06 = 0; else {
  $x3$06$us = 0;
  do {
   if (($x3$06$us | 0) < 32) {
    $color_offset$0$us = $x3$06$us | $123;
    $pixel_offset$0$us = $122 | $x3$06$us;
   } else {
    $137 = $x3$06$us & 7;
    $color_offset$0$us = $135 | $137;
    $pixel_offset$0$us = $133 | $137;
   }
   $147 = $1 + ($x3$06$us << 3 << 2) | 0;
   $148 = HEAPU8[$112 + $color_offset$0$us >> 0] | 0;
   $151 = HEAP32[$this + 393292 + (($148 & 7) << 2) >> 2] | 0;
   $155 = HEAP32[$this + 393228 + (($148 >>> 3 & 15) << 2) >> 2] | 0;
   $156 = HEAPU8[$this + $pixel_offset$0$us >> 0] | 0;
   HEAP32[$147 >> 2] = $156 & 128 | 0 ? $155 : $151;
   HEAP32[$147 + 4 >> 2] = $156 & 64 | 0 ? $155 : $151;
   HEAP32[$147 + 8 >> 2] = $156 & 32 | 0 ? $155 : $151;
   HEAP32[$147 + 12 >> 2] = $156 & 16 | 0 ? $155 : $151;
   HEAP32[$147 + 16 >> 2] = $156 & 8 | 0 ? $155 : $151;
   HEAP32[$147 + 20 >> 2] = $156 & 4 | 0 ? $155 : $151;
   HEAP32[$147 + 24 >> 2] = $156 & 2 | 0 ? $155 : $151;
   HEAP32[$147 + 28 >> 2] = $156 & 1 | 0 ? $155 : $151;
   $x3$06$us = $x3$06$us + 1 | 0;
  } while (($x3$06$us | 0) != 40);
  return;
 }
 do {
  if (($x3$06 | 0) < 32) {
   $color_offset$0 = $x3$06 | $123;
   $pixel_offset$0 = $122 | $x3$06;
  } else {
   $192 = $x3$06 & 7;
   $color_offset$0 = $135 | $192;
   $pixel_offset$0 = $133 | $192;
  }
  $200 = $1 + ($x3$06 << 3 << 2) | 0;
  $201 = HEAPU8[$112 + $color_offset$0 >> 0] | 0;
  $204 = HEAP32[$this + 393292 + (($201 & 7) << 2) >> 2] | 0;
  if (!($201 & 128)) $215 = HEAP32[$this + 393228 + (($201 >>> 3 & 15) << 2) >> 2] | 0; else $215 = $204;
  $211 = HEAPU8[$this + $pixel_offset$0 >> 0] | 0;
  HEAP32[$200 >> 2] = $211 & 128 | 0 ? $215 : $204;
  HEAP32[$200 + 4 >> 2] = $211 & 64 | 0 ? $215 : $204;
  HEAP32[$200 + 8 >> 2] = $211 & 32 | 0 ? $215 : $204;
  HEAP32[$200 + 12 >> 2] = $211 & 16 | 0 ? $215 : $204;
  HEAP32[$200 + 16 >> 2] = $211 & 8 | 0 ? $215 : $204;
  HEAP32[$200 + 20 >> 2] = $211 & 4 | 0 ? $215 : $204;
  HEAP32[$200 + 24 >> 2] = $211 & 2 | 0 ? $215 : $204;
  HEAP32[$200 + 28 >> 2] = $211 & 1 | 0 ? $215 : $204;
  $x3$06 = $x3$06 + 1 | 0;
 } while (($x3$06 | 0) != 40);
 return;
}

function __ZN5Oryol12VertexLayoutaSERKS0_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $1 = HEAPU8[$0 >> 0] | HEAPU8[$0 + 1 >> 0] << 8;
 HEAP8[$this >> 0] = $1;
 HEAP8[$this + 1 >> 0] = $1 >> 8;
 $2 = $this + 2 | 0;
 $3 = $0 + 2 | 0;
 $4 = HEAPU8[$3 >> 0] | HEAPU8[$3 + 1 >> 0] << 8;
 HEAP8[$2 >> 0] = $4;
 HEAP8[$2 + 1 >> 0] = $4 >> 8;
 $5 = $this + 4 | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAPU8[$6 >> 0] | HEAPU8[$6 + 1 >> 0] << 8;
 HEAP8[$5 >> 0] = $7;
 HEAP8[$5 + 1 >> 0] = $7 >> 8;
 $8 = $this + 6 | 0;
 $9 = $0 + 6 | 0;
 $10 = HEAPU8[$9 >> 0] | HEAPU8[$9 + 1 >> 0] << 8;
 HEAP8[$8 >> 0] = $10;
 HEAP8[$8 + 1 >> 0] = $10 >> 8;
 $11 = $this + 8 | 0;
 $12 = $0 + 8 | 0;
 $13 = HEAPU8[$12 >> 0] | HEAPU8[$12 + 1 >> 0] << 8;
 HEAP8[$11 >> 0] = $13;
 HEAP8[$11 + 1 >> 0] = $13 >> 8;
 $14 = $this + 10 | 0;
 $15 = $0 + 10 | 0;
 $16 = HEAPU8[$15 >> 0] | HEAPU8[$15 + 1 >> 0] << 8;
 HEAP8[$14 >> 0] = $16;
 HEAP8[$14 + 1 >> 0] = $16 >> 8;
 $17 = $this + 12 | 0;
 $18 = $0 + 12 | 0;
 $19 = HEAPU8[$18 >> 0] | HEAPU8[$18 + 1 >> 0] << 8;
 HEAP8[$17 >> 0] = $19;
 HEAP8[$17 + 1 >> 0] = $19 >> 8;
 $20 = $this + 14 | 0;
 $21 = $0 + 14 | 0;
 $22 = HEAPU8[$21 >> 0] | HEAPU8[$21 + 1 >> 0] << 8;
 HEAP8[$20 >> 0] = $22;
 HEAP8[$20 + 1 >> 0] = $22 >> 8;
 $23 = $this + 16 | 0;
 $24 = $0 + 16 | 0;
 $25 = HEAPU8[$24 >> 0] | HEAPU8[$24 + 1 >> 0] << 8;
 HEAP8[$23 >> 0] = $25;
 HEAP8[$23 + 1 >> 0] = $25 >> 8;
 $26 = $this + 18 | 0;
 $27 = $0 + 18 | 0;
 $28 = HEAPU8[$27 >> 0] | HEAPU8[$27 + 1 >> 0] << 8;
 HEAP8[$26 >> 0] = $28;
 HEAP8[$26 + 1 >> 0] = $28 >> 8;
 $29 = $this + 20 | 0;
 $30 = $0 + 20 | 0;
 $31 = HEAPU8[$30 >> 0] | HEAPU8[$30 + 1 >> 0] << 8;
 HEAP8[$29 >> 0] = $31;
 HEAP8[$29 + 1 >> 0] = $31 >> 8;
 $32 = $this + 22 | 0;
 $33 = $0 + 22 | 0;
 $34 = HEAPU8[$33 >> 0] | HEAPU8[$33 + 1 >> 0] << 8;
 HEAP8[$32 >> 0] = $34;
 HEAP8[$32 + 1 >> 0] = $34 >> 8;
 $35 = $this + 24 | 0;
 $36 = $0 + 24 | 0;
 $37 = HEAPU8[$36 >> 0] | HEAPU8[$36 + 1 >> 0] << 8;
 HEAP8[$35 >> 0] = $37;
 HEAP8[$35 + 1 >> 0] = $37 >> 8;
 $38 = $this + 26 | 0;
 $39 = $0 + 26 | 0;
 $40 = HEAPU8[$39 >> 0] | HEAPU8[$39 + 1 >> 0] << 8;
 HEAP8[$38 >> 0] = $40;
 HEAP8[$38 + 1 >> 0] = $40 >> 8;
 $41 = $this + 28 | 0;
 $42 = $0 + 28 | 0;
 $43 = HEAPU8[$42 >> 0] | HEAPU8[$42 + 1 >> 0] << 8;
 HEAP8[$41 >> 0] = $43;
 HEAP8[$41 + 1 >> 0] = $43 >> 8;
 $44 = $this + 30 | 0;
 $45 = $0 + 30 | 0;
 $46 = HEAPU8[$45 >> 0] | HEAPU8[$45 + 1 >> 0] << 8;
 HEAP8[$44 >> 0] = $46;
 HEAP8[$44 + 1 >> 0] = $46 >> 8;
 $47 = $this + 32 | 0;
 $48 = $0 + 32 | 0;
 $49 = HEAPU8[$48 >> 0] | HEAPU8[$48 + 1 >> 0] << 8;
 HEAP8[$47 >> 0] = $49;
 HEAP8[$47 + 1 >> 0] = $49 >> 8;
 HEAP8[$this + 34 >> 0] = HEAP8[$0 + 34 >> 0] | 0;
 HEAP8[$this + 35 >> 0] = HEAP8[$0 + 35 >> 0] | 0;
 HEAP8[$this + 36 >> 0] = HEAP8[$0 + 36 >> 0] | 0;
 HEAP8[$this + 37 >> 0] = HEAP8[$0 + 37 >> 0] | 0;
 HEAP8[$this + 38 >> 0] = HEAP8[$0 + 38 >> 0] | 0;
 HEAP8[$this + 39 >> 0] = HEAP8[$0 + 39 >> 0] | 0;
 HEAP8[$this + 40 >> 0] = HEAP8[$0 + 40 >> 0] | 0;
 HEAP8[$this + 41 >> 0] = HEAP8[$0 + 41 >> 0] | 0;
 HEAP8[$this + 42 >> 0] = HEAP8[$0 + 42 >> 0] | 0;
 HEAP8[$this + 43 >> 0] = HEAP8[$0 + 43 >> 0] | 0;
 HEAP8[$this + 44 >> 0] = HEAP8[$0 + 44 >> 0] | 0;
 HEAP8[$this + 45 >> 0] = HEAP8[$0 + 45 >> 0] | 0;
 HEAP8[$this + 46 >> 0] = HEAP8[$0 + 46 >> 0] | 0;
 HEAP8[$this + 47 >> 0] = HEAP8[$0 + 47 >> 0] | 0;
 HEAP8[$this + 48 >> 0] = HEAP8[$0 + 48 >> 0] | 0;
 HEAP8[$this + 49 >> 0] = HEAP8[$0 + 49 >> 0] | 0;
 HEAP8[$this + 50 >> 0] = HEAP8[$0 + 50 >> 0] | 0;
 HEAP8[$this + 51 >> 0] = HEAP8[$0 + 51 >> 0] | 0;
 HEAP8[$this + 52 >> 0] = HEAP8[$0 + 52 >> 0] | 0;
 HEAP8[$this + 53 >> 0] = HEAP8[$0 + 53 >> 0] | 0;
 HEAP8[$this + 54 >> 0] = HEAP8[$0 + 54 >> 0] | 0;
 HEAP8[$this + 55 >> 0] = HEAP8[$0 + 55 >> 0] | 0;
 HEAP8[$this + 56 >> 0] = HEAP8[$0 + 56 >> 0] | 0;
 HEAP8[$this + 57 >> 0] = HEAP8[$0 + 57 >> 0] | 0;
 HEAP8[$this + 58 >> 0] = HEAP8[$0 + 58 >> 0] | 0;
 HEAP8[$this + 59 >> 0] = HEAP8[$0 + 59 >> 0] | 0;
 HEAP8[$this + 60 >> 0] = HEAP8[$0 + 60 >> 0] | 0;
 HEAP8[$this + 61 >> 0] = HEAP8[$0 + 61 >> 0] | 0;
 HEAP8[$this + 62 >> 0] = HEAP8[$0 + 62 >> 0] | 0;
 HEAP8[$this + 63 >> 0] = HEAP8[$0 + 63 >> 0] | 0;
 HEAP8[$this + 64 >> 0] = HEAP8[$0 + 64 >> 0] | 0;
 HEAP8[$this + 65 >> 0] = HEAP8[$0 + 65 >> 0] | 0;
 $146 = $this + 66 | 0;
 $147 = $0 + 66 | 0;
 $148 = HEAPU8[$147 >> 0] | HEAPU8[$147 + 1 >> 0] << 8;
 HEAP8[$146 >> 0] = $148;
 HEAP8[$146 + 1 >> 0] = $148 >> 8;
 return $this | 0;
}

function __ZN5Oryol12VertexLayoutaSEOS0_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 $1 = HEAPU8[$0 >> 0] | HEAPU8[$0 + 1 >> 0] << 8;
 HEAP8[$this >> 0] = $1;
 HEAP8[$this + 1 >> 0] = $1 >> 8;
 $2 = $this + 2 | 0;
 $3 = $0 + 2 | 0;
 $4 = HEAPU8[$3 >> 0] | HEAPU8[$3 + 1 >> 0] << 8;
 HEAP8[$2 >> 0] = $4;
 HEAP8[$2 + 1 >> 0] = $4 >> 8;
 $5 = $0 + 4 | 0;
 $6 = $this + 4 | 0;
 $7 = HEAPU8[$5 >> 0] | HEAPU8[$5 + 1 >> 0] << 8;
 HEAP8[$6 >> 0] = $7;
 HEAP8[$6 + 1 >> 0] = $7 >> 8;
 $8 = $0 + 6 | 0;
 $9 = $this + 6 | 0;
 $10 = HEAPU8[$8 >> 0] | HEAPU8[$8 + 1 >> 0] << 8;
 HEAP8[$9 >> 0] = $10;
 HEAP8[$9 + 1 >> 0] = $10 >> 8;
 $11 = $0 + 8 | 0;
 $12 = $this + 8 | 0;
 $13 = HEAPU8[$11 >> 0] | HEAPU8[$11 + 1 >> 0] << 8;
 HEAP8[$12 >> 0] = $13;
 HEAP8[$12 + 1 >> 0] = $13 >> 8;
 $14 = $0 + 10 | 0;
 $15 = $this + 10 | 0;
 $16 = HEAPU8[$14 >> 0] | HEAPU8[$14 + 1 >> 0] << 8;
 HEAP8[$15 >> 0] = $16;
 HEAP8[$15 + 1 >> 0] = $16 >> 8;
 $17 = $0 + 12 | 0;
 $18 = $this + 12 | 0;
 $19 = HEAPU8[$17 >> 0] | HEAPU8[$17 + 1 >> 0] << 8;
 HEAP8[$18 >> 0] = $19;
 HEAP8[$18 + 1 >> 0] = $19 >> 8;
 $20 = $0 + 14 | 0;
 $21 = $this + 14 | 0;
 $22 = HEAPU8[$20 >> 0] | HEAPU8[$20 + 1 >> 0] << 8;
 HEAP8[$21 >> 0] = $22;
 HEAP8[$21 + 1 >> 0] = $22 >> 8;
 $23 = $0 + 16 | 0;
 $24 = $this + 16 | 0;
 $25 = HEAPU8[$23 >> 0] | HEAPU8[$23 + 1 >> 0] << 8;
 HEAP8[$24 >> 0] = $25;
 HEAP8[$24 + 1 >> 0] = $25 >> 8;
 $26 = $0 + 18 | 0;
 $27 = $this + 18 | 0;
 $28 = HEAPU8[$26 >> 0] | HEAPU8[$26 + 1 >> 0] << 8;
 HEAP8[$27 >> 0] = $28;
 HEAP8[$27 + 1 >> 0] = $28 >> 8;
 $29 = $0 + 20 | 0;
 $30 = $this + 20 | 0;
 $31 = HEAPU8[$29 >> 0] | HEAPU8[$29 + 1 >> 0] << 8;
 HEAP8[$30 >> 0] = $31;
 HEAP8[$30 + 1 >> 0] = $31 >> 8;
 $32 = $0 + 22 | 0;
 $33 = $this + 22 | 0;
 $34 = HEAPU8[$32 >> 0] | HEAPU8[$32 + 1 >> 0] << 8;
 HEAP8[$33 >> 0] = $34;
 HEAP8[$33 + 1 >> 0] = $34 >> 8;
 $35 = $0 + 24 | 0;
 $36 = $this + 24 | 0;
 $37 = HEAPU8[$35 >> 0] | HEAPU8[$35 + 1 >> 0] << 8;
 HEAP8[$36 >> 0] = $37;
 HEAP8[$36 + 1 >> 0] = $37 >> 8;
 $38 = $0 + 26 | 0;
 $39 = $this + 26 | 0;
 $40 = HEAPU8[$38 >> 0] | HEAPU8[$38 + 1 >> 0] << 8;
 HEAP8[$39 >> 0] = $40;
 HEAP8[$39 + 1 >> 0] = $40 >> 8;
 $41 = $0 + 28 | 0;
 $42 = $this + 28 | 0;
 $43 = HEAPU8[$41 >> 0] | HEAPU8[$41 + 1 >> 0] << 8;
 HEAP8[$42 >> 0] = $43;
 HEAP8[$42 + 1 >> 0] = $43 >> 8;
 $44 = $0 + 30 | 0;
 $45 = $this + 30 | 0;
 $46 = HEAPU8[$44 >> 0] | HEAPU8[$44 + 1 >> 0] << 8;
 HEAP8[$45 >> 0] = $46;
 HEAP8[$45 + 1 >> 0] = $46 >> 8;
 $47 = $0 + 32 | 0;
 $48 = $this + 32 | 0;
 $49 = HEAPU8[$47 >> 0] | HEAPU8[$47 + 1 >> 0] << 8;
 HEAP8[$48 >> 0] = $49;
 HEAP8[$48 + 1 >> 0] = $49 >> 8;
 HEAP8[$this + 34 >> 0] = HEAP8[$0 + 34 >> 0] | 0;
 HEAP8[$this + 35 >> 0] = HEAP8[$0 + 35 >> 0] | 0;
 HEAP8[$this + 36 >> 0] = HEAP8[$0 + 36 >> 0] | 0;
 HEAP8[$this + 37 >> 0] = HEAP8[$0 + 37 >> 0] | 0;
 HEAP8[$this + 38 >> 0] = HEAP8[$0 + 38 >> 0] | 0;
 HEAP8[$this + 39 >> 0] = HEAP8[$0 + 39 >> 0] | 0;
 HEAP8[$this + 40 >> 0] = HEAP8[$0 + 40 >> 0] | 0;
 HEAP8[$this + 41 >> 0] = HEAP8[$0 + 41 >> 0] | 0;
 HEAP8[$this + 42 >> 0] = HEAP8[$0 + 42 >> 0] | 0;
 HEAP8[$this + 43 >> 0] = HEAP8[$0 + 43 >> 0] | 0;
 HEAP8[$this + 44 >> 0] = HEAP8[$0 + 44 >> 0] | 0;
 HEAP8[$this + 45 >> 0] = HEAP8[$0 + 45 >> 0] | 0;
 HEAP8[$this + 46 >> 0] = HEAP8[$0 + 46 >> 0] | 0;
 HEAP8[$this + 47 >> 0] = HEAP8[$0 + 47 >> 0] | 0;
 HEAP8[$this + 48 >> 0] = HEAP8[$0 + 48 >> 0] | 0;
 HEAP8[$this + 49 >> 0] = HEAP8[$0 + 49 >> 0] | 0;
 HEAP8[$this + 50 >> 0] = HEAP8[$0 + 50 >> 0] | 0;
 HEAP8[$this + 51 >> 0] = HEAP8[$0 + 51 >> 0] | 0;
 HEAP8[$this + 52 >> 0] = HEAP8[$0 + 52 >> 0] | 0;
 HEAP8[$this + 53 >> 0] = HEAP8[$0 + 53 >> 0] | 0;
 HEAP8[$this + 54 >> 0] = HEAP8[$0 + 54 >> 0] | 0;
 HEAP8[$this + 55 >> 0] = HEAP8[$0 + 55 >> 0] | 0;
 HEAP8[$this + 56 >> 0] = HEAP8[$0 + 56 >> 0] | 0;
 HEAP8[$this + 57 >> 0] = HEAP8[$0 + 57 >> 0] | 0;
 HEAP8[$this + 58 >> 0] = HEAP8[$0 + 58 >> 0] | 0;
 HEAP8[$this + 59 >> 0] = HEAP8[$0 + 59 >> 0] | 0;
 HEAP8[$this + 60 >> 0] = HEAP8[$0 + 60 >> 0] | 0;
 HEAP8[$this + 61 >> 0] = HEAP8[$0 + 61 >> 0] | 0;
 HEAP8[$this + 62 >> 0] = HEAP8[$0 + 62 >> 0] | 0;
 HEAP8[$this + 63 >> 0] = HEAP8[$0 + 63 >> 0] | 0;
 HEAP8[$this + 64 >> 0] = HEAP8[$0 + 64 >> 0] | 0;
 HEAP8[$this + 65 >> 0] = HEAP8[$0 + 65 >> 0] | 0;
 $146 = $this + 66 | 0;
 $147 = $0 + 66 | 0;
 $148 = HEAPU8[$147 >> 0] | HEAPU8[$147 + 1 >> 0] << 8;
 HEAP8[$146 >> 0] = $148;
 HEAP8[$146 + 1 >> 0] = $148 >> 8;
 return $this | 0;
}

function __ZN6SoLoud6Soloud16calcActiveVoicesEv($this) {
 $this = $this | 0;
 var $$lcssa = 0, $$lcssa43 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$lcssa46 = 0, $$lcssa47 = 0, $1 = 0, $14 = 0, $15 = 0, $21 = 0, $28 = 0, $30 = 0, $31 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $47 = 0.0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $68 = 0, $9 = 0, $candidates$0$lcssa24 = 0, $candidates$012 = 0, $candidates$1 = 0, $candidates$1$lcssa = 0, $i$013 = 0, $left$0$ph = 0, $len$0$lcssa = 0, $len$0$ph = 0, $len$09 = 0, $len$1 = 0, $len$2$ph = 0, $len$3 = 0, $len$3$lcssa = 0, $len$3$lcssa$lcssa = 0, $mustlive$011 = 0, $mustlive$1 = 0, $mustlive$1$lcssa = 0, $pos$0$lcssa = 0, $pos$0$ph = 0, $pos$08 = 0, $pos$1 = 0, $right$0 = 0, $right$0$ph = 0, $stack = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $stack = sp;
 HEAP8[$this + 109920 >> 0] = 0;
 $1 = $this + 16 | 0;
 if (!(HEAP32[$1 >> 2] | 0)) {
  $31 = $this + 109916 | 0;
  $candidates$0$lcssa24 = 0;
 } else {
  $candidates$012 = 0;
  $i$013 = 0;
  $mustlive$011 = 0;
  while (1) {
   $5 = $this + 44 + ($i$013 << 2) | 0;
   $6 = HEAP32[$5 >> 2] | 0;
   if (!$6) {
    $candidates$1 = $candidates$012;
    $mustlive$1 = $mustlive$011;
   } else {
    $9 = HEAP32[$6 + 12 >> 2] | 0;
    if (($9 & 36 | 0) != 0 & ($9 & 128 | 0) == 0) {
     $candidates$1 = $candidates$012;
     $mustlive$1 = $mustlive$011;
    } else {
     $14 = $this + 105820 + ($candidates$012 << 2) | 0;
     HEAP32[$14 >> 2] = $i$013;
     $15 = $candidates$012 + 1 | 0;
     if (!(HEAP32[(HEAP32[$5 >> 2] | 0) + 12 >> 2] & 128)) {
      $candidates$1 = $15;
      $mustlive$1 = $mustlive$011;
     } else {
      $21 = $this + 105820 + ($mustlive$011 << 2) | 0;
      HEAP32[$14 >> 2] = HEAP32[$21 >> 2];
      HEAP32[$21 >> 2] = $i$013;
      $candidates$1 = $15;
      $mustlive$1 = $mustlive$011 + 1 | 0;
     }
    }
   }
   $i$013 = $i$013 + 1 | 0;
   if ($i$013 >>> 0 >= (HEAP32[$1 >> 2] | 0) >>> 0) {
    $candidates$1$lcssa = $candidates$1;
    $mustlive$1$lcssa = $mustlive$1;
    break;
   } else {
    $candidates$012 = $candidates$1;
    $mustlive$011 = $mustlive$1;
   }
  }
  $28 = HEAP32[$this + 12 >> 2] | 0;
  $30 = $this + 109916 | 0;
  if ($candidates$1$lcssa >>> 0 > $28 >>> 0) {
   HEAP32[$30 >> 2] = $28;
   if ($mustlive$1$lcssa >>> 0 >= $28 >>> 0) {
    STACKTOP = sp;
    return;
   }
   $34 = $this + 105820 + ($mustlive$1$lcssa << 2) | 0;
   $left$0$ph = 0;
   $len$0$ph = $candidates$1$lcssa - $mustlive$1$lcssa | 0;
   $pos$0$ph = 0;
   while (1) {
    $35 = $left$0$ph + 1 | 0;
    if (($35 | 0) < ($len$0$ph | 0)) {
     $37 = $34 + ($left$0$ph << 2) | 0;
     $38 = $left$0$ph + -1 | 0;
     $len$09 = $len$0$ph;
     $pos$08 = $pos$0$ph;
     while (1) {
      $41 = ($pos$08 | 0) == 24;
      $pos$1 = $41 ? 0 : $pos$08;
      $len$1 = $41 ? HEAP32[$stack >> 2] | 0 : $len$09;
      $47 = +HEAPF32[(HEAP32[$this + 44 + (HEAP32[$37 >> 2] << 2) >> 2] | 0) + 48 >> 2];
      HEAP32[$stack + ($pos$1 << 2) >> 2] = $len$1;
      $len$2$ph = $len$1;
      $right$0$ph = $38;
      while (1) {
       $right$0 = $right$0$ph;
       while (1) {
        $49 = $right$0 + 1 | 0;
        $50 = $34 + ($49 << 2) | 0;
        $51 = HEAP32[$50 >> 2] | 0;
        if (+HEAPF32[(HEAP32[$this + 44 + ($51 << 2) >> 2] | 0) + 48 >> 2] > $47) $right$0 = $49; else {
         $$lcssa = $49;
         $$lcssa43 = $50;
         $$lcssa44 = $51;
         break;
        }
       }
       $len$3 = $len$2$ph;
       while (1) {
        $57 = $len$3 + -1 | 0;
        $58 = $34 + ($57 << 2) | 0;
        $59 = HEAP32[$58 >> 2] | 0;
        if ($47 > +HEAPF32[(HEAP32[$this + 44 + ($59 << 2) >> 2] | 0) + 48 >> 2]) $len$3 = $57; else {
         $$lcssa45 = $57;
         $$lcssa46 = $58;
         $$lcssa47 = $59;
         $len$3$lcssa = $len$3;
         break;
        }
       }
       if (($$lcssa | 0) >= ($$lcssa45 | 0)) {
        $len$3$lcssa$lcssa = $len$3$lcssa;
        break;
       }
       HEAP32[$$lcssa43 >> 2] = $$lcssa47;
       HEAP32[$$lcssa46 >> 2] = $$lcssa44;
       $len$2$ph = $$lcssa45;
       $right$0$ph = $$lcssa;
      }
      $39 = $pos$1 + 1 | 0;
      if (($35 | 0) < ($len$3$lcssa$lcssa | 0)) {
       $len$09 = $len$3$lcssa$lcssa;
       $pos$08 = $39;
      } else {
       $len$0$lcssa = $len$3$lcssa$lcssa;
       $pos$0$lcssa = $39;
       break;
      }
     }
    } else {
     $len$0$lcssa = $len$0$ph;
     $pos$0$lcssa = $pos$0$ph;
    }
    if (!(($pos$0$lcssa | 0) != 0 & ($left$0$ph | 0) < ($28 | 0))) break;
    $68 = $pos$0$lcssa + -1 | 0;
    $left$0$ph = $len$0$lcssa;
    $len$0$ph = HEAP32[$stack + ($68 << 2) >> 2] | 0;
    $pos$0$ph = $68;
   }
   STACKTOP = sp;
   return;
  } else {
   $31 = $30;
   $candidates$0$lcssa24 = $candidates$1$lcssa;
  }
 }
 HEAP32[$31 >> 2] = $candidates$0$lcssa24;
 STACKTOP = sp;
 return;
}

function __ZN5ImGui12DragBehaviorERK6ImRectjPffffif($frame_bb, $id, $v, $v_speed, $v_min, $v_max, $decimal_precision, $power) {
 $frame_bb = $frame_bb | 0;
 $id = $id | 0;
 $v = $v | 0;
 $v_speed = +$v_speed;
 $v_min = +$v_min;
 $v_max = +$v_max;
 $decimal_precision = $decimal_precision | 0;
 $power = +$power;
 var $$0$i = 0.0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $104 = 0.0, $109 = 0.0, $11 = 0.0, $112 = 0, $113 = 0.0, $114 = 0.0, $118 = 0, $121 = 0.0, $125 = 0.0, $126 = 0, $13 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $15 = 0.0, $152 = 0.0, $2 = 0, $20 = 0.0, $44 = 0, $49 = 0, $50 = 0, $55 = 0, $60 = 0, $61 = 0, $66 = 0.0, $88 = 0, $90 = 0.0, $93 = 0.0, $mouse_drag_delta$sroa$0$0 = 0, $speed$0 = 0.0, $speed$1 = 0.0, $speed$2 = 0.0, $tmpcast$byval_copy = 0, $tmpcast1$byval_copy = 0, $v_cur$0 = 0.0, $v_cur$1 = 0.0, $value_changed$2$off0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast1$byval_copy = sp + 24 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $2 = 152844;
 if ((HEAP32[$2 >> 2] | 0) == ($id | 0)) $10 = 8; else $10 = (HEAP32[38208] | 0) == ($id | 0) ? 7 : 6;
 $11 = +HEAPF32[152056 + ($10 << 4) >> 2];
 $13 = +HEAPF32[152056 + ($10 << 4) + 4 >> 2];
 $15 = +HEAPF32[152056 + ($10 << 4) + 8 >> 2];
 $20 = +HEAPF32[152056 + ($10 << 4) + 12 >> 2] * +HEAPF32[37984];
 $44 = $frame_bb;
 $49 = HEAP32[$44 + 4 >> 2] | 0;
 $50 = $0;
 HEAP32[$50 >> 2] = HEAP32[$44 >> 2];
 HEAP32[$50 + 4 >> 2] = $49;
 $55 = $frame_bb + 8 | 0;
 $60 = HEAP32[$55 + 4 >> 2] | 0;
 $61 = $1;
 HEAP32[$61 >> 2] = HEAP32[$55 >> 2];
 HEAP32[$61 + 4 >> 2] = $60;
 $66 = +HEAPF32[37994];
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$tmpcast1$byval_copy >> 2] = HEAP32[$1 >> 2];
 HEAP32[$tmpcast1$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 __ZN5ImGui11RenderFrameE6ImVec2S0_jbf($tmpcast$byval_copy, $tmpcast1$byval_copy, ($13 < 0.0 ? 0 : ~~(($13 > 1.0 ? 1.0 : $13) * 255.0 + .5) << 8) | ($11 < 0.0 ? 0 : ~~(($11 > 1.0 ? 1.0 : $11) * 255.0 + .5)) | ($15 < 0.0 ? 0 : ~~(($15 > 1.0 ? 1.0 : $15) * 255.0 + .5) << 16) | ($20 < 0.0 ? 0 : ~~(($20 > 1.0 ? 1.0 : $20) * 255.0 + .5) << 24), 1, $66);
 if ((HEAP32[$2 >> 2] | 0) != ($id | 0)) {
  $value_changed$2$off0 = 0;
  STACKTOP = sp;
  return $value_changed$2$off0 | 0;
 }
 if (!(HEAP8[147092] | 0)) {
  HEAP32[38211] = 0;
  HEAP8[152854] = 0;
  HEAP8[152853] = 1;
  HEAP32[38214] = 0;
  $value_changed$2$off0 = 0;
  STACKTOP = sp;
  return $value_changed$2$off0 | 0;
 }
 if (HEAP8[152853] | 0) {
  HEAP32[39230] = HEAP32[$v >> 2];
  HEAP32[39231] = 0;
  HEAP32[39232] = 0;
 }
 if (!(HEAP8[147092] | 0)) $mouse_drag_delta$sroa$0$0 = 0; else if (!(+HEAPF32[36955] >= 1.0)) $mouse_drag_delta$sroa$0$0 = 0; else $mouse_drag_delta$sroa$0$0 = (HEAPF32[tempDoublePtr >> 2] = +HEAPF32[36771] - +HEAPF32[36926], HEAP32[tempDoublePtr >> 2] | 0);
 $88 = 156924;
 $90 = (HEAP32[tempDoublePtr >> 2] = $mouse_drag_delta$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]) - +HEAPF32[$88 >> 2];
 if ($90 != $90 | 0.0 != 0.0 | $90 == 0.0) {
  $value_changed$2$off0 = 0;
  STACKTOP = sp;
  return $value_changed$2$off0 | 0;
 }
 if ($v_speed == 0.0) {
  $93 = $v_max - $v_min;
  if ($93 != 0.0 & $93 < 3402823466385288598117041.0e14) $speed$0 = $93 * +HEAPF32[39233]; else $speed$0 = $v_speed;
 } else $speed$0 = $v_speed;
 $100 = HEAP16[73553] | 0;
 if (!(($100 & 255) << 24 >> 24)) $speed$1 = $speed$0; else {
  $104 = +HEAPF32[39235];
  if (!($104 >= 0.0)) $speed$1 = $speed$0; else $speed$1 = $speed$0 * $104;
 }
 if (($100 & 65535) < 256) $speed$2 = $speed$1; else {
  $109 = +HEAPF32[39234];
  if (!($109 >= 0.0)) $speed$2 = $speed$1; else $speed$2 = $speed$1 * $109;
 }
 $112 = 156920;
 $113 = +HEAPF32[$112 >> 2];
 $114 = $speed$2 * $90;
 if (+Math_abs(+($power + -1.0)) > 1.0000000474974513e-03) {
  $118 = $113 >= 0.0;
  $121 = $118 ? 1.0 : -1.0;
  $125 = $121 * $114 + +Math_pow(+($118 ? $113 : -$113), +(1.0 / $power));
  $126 = $125 >= 0.0;
  $v_cur$0 = $121 * +Math_pow(+($126 ? $125 : -$125), +$power) * ($126 ? 1.0 : -1.0);
 } else $v_cur$0 = $113 + $114;
 HEAP32[$88 >> 2] = $mouse_drag_delta$sroa$0$0;
 if ($v_min < $v_max) $v_cur$1 = $v_cur$0 < $v_min ? $v_min : $v_cur$0 > $v_max ? $v_max : $v_cur$0; else $v_cur$1 = $v_cur$0;
 HEAPF32[$112 >> 2] = $v_cur$1;
 if ($decimal_precision >>> 0 < 10) $147 = +HEAPF32[13688 + ($decimal_precision << 2) >> 2]; else $147 = +Math_pow(10.0, +(+(0 - $decimal_precision | 0)));
 $146 = +Math_abs(+$v_cur$1);
 $148 = +_fmodf($146, $147);
 $$0$i = $146 + ((!($148 <= $147 * .5) ? $147 : -0.0) - $148);
 $152 = $v_cur$1 < 0.0 ? -$$0$i : $$0$i;
 if (!(+HEAPF32[$v >> 2] != $152)) {
  $value_changed$2$off0 = 0;
  STACKTOP = sp;
  return $value_changed$2$off0 | 0;
 }
 HEAPF32[$v >> 2] = $152;
 $value_changed$2$off0 = 1;
 STACKTOP = sp;
 return $value_changed$2$off0 | 0;
}

function __ZN5Oryol5_priv10glRendererC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $16 = 0, $19 = 0, $24 = 0, $25 = 0, $28 = 0, $31 = 0, $34 = 0, $37 = 0, $40 = 0, $43 = 0, $46 = 0, $49 = 0, $52 = 0, $55 = 0, $58 = 0, $61 = 0, $64 = 0, $67 = 0, $70 = 0, $73 = 0, $8 = 0, $9 = 0, dest = 0, stop = 0;
 HEAP8[$this >> 0] = 0;
 $0 = $this + 4 | 0;
 $1 = $this + 36 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 HEAP32[$1 + 24 >> 2] = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 HEAP8[$0 + 28 >> 0] = 0;
 HEAP32[$this + 64 >> 2] = 12;
 HEAP32[$this + 68 >> 2] = 1;
 HEAP8[$this + 72 >> 0] = 1;
 HEAP32[$this + 76 >> 2] = 1;
 __ZN5Oryol6StringC2Ev($this + 80 | 0);
 __ZN5Oryol8GfxSetupC2Ev($this + 88 | 0);
 $8 = $this + 204 | 0;
 $9 = $this + 224 | 0;
 $10 = $9;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 HEAP32[$8 + 12 >> 2] = 0;
 HEAP32[$9 >> 2] = 2013282306;
 HEAP16[$9 + 4 >> 1] = 192;
 HEAP16[$this + 232 >> 1] = 28672;
 HEAP16[$this + 234 >> 1] = 28672;
 $16 = $this + 236 | 0;
 HEAP32[$16 >> 2] = 0;
 HEAP16[$16 >> 1] = 32647;
 HEAP16[$16 + 2 >> 1] = 255;
 HEAP16[$this + 240 >> 1] = 296;
 $19 = $this + 244 | 0;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 HEAP32[$19 + 12 >> 2] = 0;
 HEAPF32[$this + 260 >> 2] = 1.0;
 HEAPF32[$this + 264 >> 2] = 1.0;
 HEAPF32[$this + 268 >> 2] = 1.0;
 HEAPF32[$this + 272 >> 2] = 1.0;
 $24 = $this + 276 | 0;
 $25 = $this + 432 | 0;
 HEAP32[$24 >> 2] = 0;
 HEAP32[$24 + 4 >> 2] = 0;
 HEAP32[$24 + 8 >> 2] = 0;
 HEAP32[$24 + 12 >> 2] = 0;
 HEAP32[$24 + 16 >> 2] = 0;
 HEAP32[$24 + 20 >> 2] = 0;
 HEAP32[$24 + 24 >> 2] = 0;
 HEAP32[$this + 440 >> 2] = 0;
 HEAP32[$this + 444 >> 2] = 0;
 HEAP32[$25 >> 2] = 0;
 HEAP16[$25 + 4 >> 1] = 0;
 HEAP8[$25 + 6 >> 0] = 0;
 $28 = $this + 448 | 0;
 HEAP32[$this + 456 >> 2] = 0;
 HEAP32[$this + 460 >> 2] = 0;
 HEAP32[$28 >> 2] = 0;
 HEAP16[$28 + 4 >> 1] = 0;
 HEAP8[$28 + 6 >> 0] = 0;
 $31 = $this + 464 | 0;
 HEAP32[$this + 472 >> 2] = 0;
 HEAP32[$this + 476 >> 2] = 0;
 HEAP32[$31 >> 2] = 0;
 HEAP16[$31 + 4 >> 1] = 0;
 HEAP8[$31 + 6 >> 0] = 0;
 $34 = $this + 480 | 0;
 HEAP32[$this + 488 >> 2] = 0;
 HEAP32[$this + 492 >> 2] = 0;
 HEAP32[$34 >> 2] = 0;
 HEAP16[$34 + 4 >> 1] = 0;
 HEAP8[$34 + 6 >> 0] = 0;
 $37 = $this + 496 | 0;
 HEAP32[$this + 504 >> 2] = 0;
 HEAP32[$this + 508 >> 2] = 0;
 HEAP32[$37 >> 2] = 0;
 HEAP16[$37 + 4 >> 1] = 0;
 HEAP8[$37 + 6 >> 0] = 0;
 $40 = $this + 512 | 0;
 HEAP32[$this + 520 >> 2] = 0;
 HEAP32[$this + 524 >> 2] = 0;
 HEAP32[$40 >> 2] = 0;
 HEAP16[$40 + 4 >> 1] = 0;
 HEAP8[$40 + 6 >> 0] = 0;
 $43 = $this + 528 | 0;
 HEAP32[$this + 536 >> 2] = 0;
 HEAP32[$this + 540 >> 2] = 0;
 HEAP32[$43 >> 2] = 0;
 HEAP16[$43 + 4 >> 1] = 0;
 HEAP8[$43 + 6 >> 0] = 0;
 $46 = $this + 544 | 0;
 HEAP32[$this + 552 >> 2] = 0;
 HEAP32[$this + 556 >> 2] = 0;
 HEAP32[$46 >> 2] = 0;
 HEAP16[$46 + 4 >> 1] = 0;
 HEAP8[$46 + 6 >> 0] = 0;
 $49 = $this + 560 | 0;
 HEAP32[$this + 568 >> 2] = 0;
 HEAP32[$this + 572 >> 2] = 0;
 HEAP32[$49 >> 2] = 0;
 HEAP16[$49 + 4 >> 1] = 0;
 HEAP8[$49 + 6 >> 0] = 0;
 $52 = $this + 576 | 0;
 HEAP32[$this + 584 >> 2] = 0;
 HEAP32[$this + 588 >> 2] = 0;
 HEAP32[$52 >> 2] = 0;
 HEAP16[$52 + 4 >> 1] = 0;
 HEAP8[$52 + 6 >> 0] = 0;
 $55 = $this + 592 | 0;
 HEAP32[$this + 600 >> 2] = 0;
 HEAP32[$this + 604 >> 2] = 0;
 HEAP32[$55 >> 2] = 0;
 HEAP16[$55 + 4 >> 1] = 0;
 HEAP8[$55 + 6 >> 0] = 0;
 $58 = $this + 608 | 0;
 HEAP32[$this + 616 >> 2] = 0;
 HEAP32[$this + 620 >> 2] = 0;
 HEAP32[$58 >> 2] = 0;
 HEAP16[$58 + 4 >> 1] = 0;
 HEAP8[$58 + 6 >> 0] = 0;
 $61 = $this + 624 | 0;
 HEAP32[$this + 632 >> 2] = 0;
 HEAP32[$this + 636 >> 2] = 0;
 HEAP32[$61 >> 2] = 0;
 HEAP16[$61 + 4 >> 1] = 0;
 HEAP8[$61 + 6 >> 0] = 0;
 $64 = $this + 640 | 0;
 HEAP32[$this + 648 >> 2] = 0;
 HEAP32[$this + 652 >> 2] = 0;
 HEAP32[$64 >> 2] = 0;
 HEAP16[$64 + 4 >> 1] = 0;
 HEAP8[$64 + 6 >> 0] = 0;
 $67 = $this + 656 | 0;
 HEAP32[$this + 664 >> 2] = 0;
 HEAP32[$this + 668 >> 2] = 0;
 HEAP32[$67 >> 2] = 0;
 HEAP16[$67 + 4 >> 1] = 0;
 HEAP8[$67 + 6 >> 0] = 0;
 $70 = $this + 672 | 0;
 HEAP32[$this + 680 >> 2] = 0;
 HEAP32[$this + 684 >> 2] = 0;
 HEAP32[$70 >> 2] = 0;
 HEAP16[$70 + 4 >> 1] = 0;
 HEAP8[$70 + 6 >> 0] = 0;
 $73 = $this + 304 | 0;
 dest = $this + 688 | 0;
 stop = dest + 64 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $73;
 stop = dest + 128 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZN10ImDrawList7AddTextEPK6ImFontfRK6ImVec2jPKcS7_fPK6ImVec4($this, $font, $font_size, $pos, $col, $text_begin, $text_end, $wrap_width, $cpu_fine_clip_rect) {
 $this = $this | 0;
 $font = $font | 0;
 $font_size = +$font_size;
 $pos = $pos | 0;
 $col = $col | 0;
 $text_begin = $text_begin | 0;
 $text_end = $text_end | 0;
 $wrap_width = +$wrap_width;
 $cpu_fine_clip_rect = $cpu_fine_clip_rect | 0;
 var $$0 = 0, $0 = 0, $102 = 0, $103 = 0, $106 = 0, $112 = 0, $113 = 0, $115 = 0, $121 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0.0, $39 = 0, $40 = 0.0, $42 = 0.0, $45 = 0, $46 = 0.0, $48 = 0.0, $51 = 0, $52 = 0.0, $54 = 0.0, $57 = 0, $62 = 0, $63 = 0, $67 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $74 = 0, $80 = 0, $81 = 0, $84 = 0, $89 = 0, $91 = 0, $94 = 0, $95 = 0, $96 = 0, $clip_rect = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 24 | 0;
 $clip_rect = sp + 8 | 0;
 $0 = sp;
 if ($col >>> 0 < 16777216) {
  STACKTOP = sp;
  return;
 }
 if (!$text_end) $$0 = $text_begin + (_strlen($text_begin) | 0) | 0; else $$0 = $text_end;
 if (($$0 | 0) == ($text_begin | 0)) {
  STACKTOP = sp;
  return;
 }
 $7 = HEAP32[$this + 64 >> 2] | 0;
 if (($7 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 if ((HEAP32[HEAP32[$font + 36 >> 2] >> 2] | 0) != (HEAP32[(HEAP32[$this + 72 >> 2] | 0) + ($7 + -1 << 2) >> 2] | 0)) ___assert_fail(127583, 127372, 877, 127637);
 $20 = $$0 - $text_begin | 0;
 $21 = $20 << 2;
 $22 = $20 * 6 | 0;
 $23 = $this + 24 | 0;
 $24 = HEAP32[$23 >> 2] | 0;
 $25 = $this + 12 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 __ZN10ImDrawList11PrimReserveEii($this, $22, $21);
 $28 = HEAP32[$this + 52 >> 2] | 0;
 if (($28 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $33 = (HEAP32[$this + 60 >> 2] | 0) + ($28 + -1 << 4) | 0;
 HEAP32[$clip_rect >> 2] = HEAP32[$33 >> 2];
 HEAP32[$clip_rect + 4 >> 2] = HEAP32[$33 + 4 >> 2];
 HEAP32[$clip_rect + 8 >> 2] = HEAP32[$33 + 8 >> 2];
 HEAP32[$clip_rect + 12 >> 2] = HEAP32[$33 + 12 >> 2];
 $34 = ($cpu_fine_clip_rect | 0) != 0;
 if ($34) {
  $35 = +HEAPF32[$clip_rect >> 2];
  $36 = +HEAPF32[$cpu_fine_clip_rect >> 2];
  HEAPF32[$clip_rect >> 2] = $35 >= $36 ? $35 : $36;
  $39 = $clip_rect + 4 | 0;
  $40 = +HEAPF32[$39 >> 2];
  $42 = +HEAPF32[$cpu_fine_clip_rect + 4 >> 2];
  HEAPF32[$39 >> 2] = $40 >= $42 ? $40 : $42;
  $45 = $clip_rect + 8 | 0;
  $46 = +HEAPF32[$45 >> 2];
  $48 = +HEAPF32[$cpu_fine_clip_rect + 8 >> 2];
  HEAPF32[$45 >> 2] = $46 < $48 ? $46 : $48;
  $51 = $clip_rect + 12 | 0;
  $52 = +HEAPF32[$51 >> 2];
  $54 = +HEAPF32[$cpu_fine_clip_rect + 12 >> 2];
  HEAPF32[$51 >> 2] = $52 < $54 ? $52 : $54;
 }
 $57 = $pos;
 $62 = HEAP32[$57 + 4 >> 2] | 0;
 $63 = $0;
 HEAP32[$63 >> 2] = HEAP32[$57 >> 2];
 HEAP32[$63 + 4 >> 2] = $62;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 __ZNK6ImFont10RenderTextEf6ImVec2jRK6ImVec4PKcS5_P10ImDrawListfb($font, $font_size, $tmpcast$byval_copy, $col, $clip_rect, $text_begin, $$0, $this, $wrap_width, $34);
 $67 = $this + 44 | 0;
 $69 = $this + 32 | 0;
 $72 = ((HEAP32[$67 >> 2] | 0) - (HEAP32[$69 >> 2] | 0) | 0) / 20 | 0;
 $73 = $this + 28 | 0;
 $74 = HEAP32[$73 >> 2] | 0;
 if (($74 | 0) < ($72 | 0)) {
  if (!$74) $80 = 8; else $80 = (($74 | 0) / 2 | 0) + $74 | 0;
  $81 = ($80 | 0) > ($72 | 0) ? $80 : $72;
  if (($74 | 0) < ($81 | 0)) {
   $84 = __ZN5ImGui8MemAllocEj($81 * 20 | 0) | 0;
   _memcpy($84 | 0, HEAP32[$69 >> 2] | 0, (HEAP32[$23 >> 2] | 0) * 20 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$69 >> 2] | 0);
   HEAP32[$69 >> 2] = $84;
   HEAP32[$73 >> 2] = $81;
  }
 }
 HEAP32[$23 >> 2] = $72;
 $89 = $this + 48 | 0;
 $91 = $this + 20 | 0;
 $94 = (HEAP32[$89 >> 2] | 0) - (HEAP32[$91 >> 2] | 0) >> 1;
 $95 = $this + 16 | 0;
 $96 = HEAP32[$95 >> 2] | 0;
 if (($96 | 0) < ($94 | 0)) {
  if (!$96) $102 = 8; else $102 = (($96 | 0) / 2 | 0) + $96 | 0;
  $103 = ($102 | 0) > ($94 | 0) ? $102 : $94;
  if (($96 | 0) < ($103 | 0)) {
   $106 = __ZN5ImGui8MemAllocEj($103 << 1) | 0;
   _memcpy($106 | 0, HEAP32[$91 >> 2] | 0, HEAP32[$25 >> 2] << 1 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$91 >> 2] | 0);
   HEAP32[$91 >> 2] = $106;
   HEAP32[$95 >> 2] = $103;
  }
 }
 HEAP32[$25 >> 2] = $94;
 $112 = $26 - $94 + $22 | 0;
 $113 = HEAP32[$this >> 2] | 0;
 if (($113 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $115 = HEAP32[$23 >> 2] | 0;
 $121 = (HEAP32[$this + 8 >> 2] | 0) + ($113 + -1 << 5) | 0;
 HEAP32[$121 >> 2] = (HEAP32[$121 >> 2] | 0) - $112;
 HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + ((0 - ($21 + ($24 - $115)) | 0) * 20 | 0);
 HEAP32[$89 >> 2] = (HEAP32[$89 >> 2] | 0) + (0 - $112 << 1);
 HEAP32[$this + 40 >> 2] = $115;
 STACKTOP = sp;
 return;
}

function __ZNK5Oryol5_priv16resourceRegistry14checkIntegrityEv($this) {
 $this = $this | 0;
 var $$0$i = 0, $$0$i8 = 0, $$lcssa = 0, $$lcssa110 = 0, $$lcssa122 = 0, $$lcssa124 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $20 = 0, $22 = 0, $23 = 0, $30 = 0, $33 = 0, $39 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $48 = 0, $49 = 0, $50 = 0, $52 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0, $68 = 0, $7 = 0, $70 = 0, $78 = 0, $80 = 0, $83 = 0, $85 = 0, $87 = 0, $90 = 0, $__begin$027 = 0, $__begin$027$lcssa118 = 0, $__begin4$026 = 0, $__begin4$026$lcssa107 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $1 = HEAP32[$this + 28 >> 2] | 0;
 L1 : do if ($1 | 0) {
  $4 = HEAP32[$this + 36 >> 2] | 0;
  $6 = HEAP32[$this + 40 >> 2] | 0;
  $7 = $1 + ($6 * 12 | 0) | 0;
  if (($4 | 0) != ($6 | 0)) {
   $10 = $this + 16 | 0;
   $11 = $this + 12 | 0;
   $12 = $this + 4 | 0;
   $__begin$027 = $1 + ($4 * 12 | 0) | 0;
   while (1) {
    $14 = HEAP32[$__begin$027 + 8 >> 2] | 0;
    if (($14 | 0) <= -1) {
     label = 6;
     break;
    }
    $17 = HEAP32[$11 >> 2] | 0;
    if (((HEAP32[$10 >> 2] | 0) - $17 | 0) <= ($14 | 0)) {
     label = 6;
     break;
    }
    $20 = HEAP32[$12 >> 2] | 0;
    if (!$20) {
     label = 8;
     break;
    }
    $22 = $17 + $14 | 0;
    $23 = $20 + ($22 * 24 | 0) | 0;
    if (!(__ZNK5Oryol10StringAtomeqERKS0_($23, $__begin$027) | 0)) {
     $$lcssa122 = $14;
     $$lcssa124 = $23;
     $__begin$027$lcssa118 = $__begin$027;
     label = 11;
     break;
    }
    if ((HEAP32[$20 + ($22 * 24 | 0) + 4 >> 2] | 0) != (HEAP32[$__begin$027 + 4 >> 2] | 0)) {
     $$lcssa122 = $14;
     $$lcssa124 = $23;
     $__begin$027$lcssa118 = $__begin$027;
     label = 11;
     break;
    }
    $__begin$027 = $__begin$027 + 12 | 0;
    if (($__begin$027 | 0) == ($7 | 0)) break L1;
   }
   if ((label | 0) == 6) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 114509);
    _abort();
   } else if ((label | 0) == 8) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 114509);
    _abort();
   } else if ((label | 0) == 11) {
    $30 = HEAP32[$$lcssa124 >> 2] | 0;
    $$0$i = HEAP32[(($30 | 0) == 0 ? 13684 : $30 + 12 | 0) >> 2] | 0;
    $33 = HEAP32[$__begin$027$lcssa118 >> 2] | 0;
    $$0$i8 = HEAP32[(($33 | 0) == 0 ? 13684 : $33 + 12 | 0) >> 2] | 0;
    HEAP32[$vararg_buffer >> 2] = $$lcssa122;
    HEAP32[$vararg_buffer + 4 >> 2] = $$0$i;
    HEAP32[$vararg_buffer + 8 >> 2] = $$0$i8;
    __ZN5Oryol3Log5ErrorEPKcz(116174, $vararg_buffer);
    _abort();
   }
  }
 } while (0);
 $39 = HEAP32[$this + 56 >> 2] | 0;
 if (!$39) {
  STACKTOP = sp;
  return 1;
 }
 $42 = HEAP32[$this + 64 >> 2] | 0;
 $44 = HEAP32[$this + 68 >> 2] | 0;
 $45 = $39 + ($44 << 4) | 0;
 if (($42 | 0) == ($44 | 0)) {
  STACKTOP = sp;
  return 1;
 }
 $48 = $this + 16 | 0;
 $49 = $this + 12 | 0;
 $50 = $this + 4 | 0;
 $__begin4$026 = $39 + ($42 << 4) | 0;
 while (1) {
  $52 = HEAP32[$__begin4$026 + 8 >> 2] | 0;
  if (($52 | 0) <= -1) {
   label = 18;
   break;
  }
  $55 = HEAP32[$49 >> 2] | 0;
  if (((HEAP32[$48 >> 2] | 0) - $55 | 0) <= ($52 | 0)) {
   label = 18;
   break;
  }
  $58 = HEAP32[$50 >> 2] | 0;
  if (!$58) {
   label = 20;
   break;
  }
  $61 = $58 + (($55 + $52 | 0) * 24 | 0) + 8 | 0;
  $62 = $61;
  $64 = HEAP32[$62 >> 2] | 0;
  $68 = $__begin4$026;
  $70 = HEAP32[$68 >> 2] | 0;
  if (!(($64 | 0) == ($70 | 0) ? (HEAP32[$62 + 4 >> 2] | 0) == (HEAP32[$68 + 4 >> 2] | 0) : 0)) {
   $$lcssa = $61;
   $$lcssa110 = $52;
   $80 = $64;
   $87 = $70;
   $__begin4$026$lcssa107 = $__begin4$026;
   label = 22;
   break;
  }
  $__begin4$026 = $__begin4$026 + 16 | 0;
  if (($__begin4$026 | 0) == ($45 | 0)) {
   label = 24;
   break;
  }
 }
 if ((label | 0) == 18) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 114509);
  _abort();
 } else if ((label | 0) == 20) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 114509);
  _abort();
 } else if ((label | 0) == 22) {
  $78 = HEAP32[$$lcssa + 4 >> 2] | 0;
  $83 = HEAPU16[$$lcssa + 2 >> 1] | 0;
  $85 = HEAP32[$__begin4$026$lcssa107 + 4 >> 2] | 0;
  $90 = HEAPU16[$__begin4$026$lcssa107 + 2 >> 1] | 0;
  HEAP32[$vararg_buffer3 >> 2] = $$lcssa110;
  HEAP32[$vararg_buffer3 + 4 >> 2] = $78;
  HEAP32[$vararg_buffer3 + 8 >> 2] = $80 & 65535;
  HEAP32[$vararg_buffer3 + 12 >> 2] = $83;
  HEAP32[$vararg_buffer3 + 16 >> 2] = $85;
  HEAP32[$vararg_buffer3 + 20 >> 2] = $87 & 65535;
  HEAP32[$vararg_buffer3 + 24 >> 2] = $90;
  __ZN5Oryol3Log5ErrorEPKcz(116235, $vararg_buffer3);
  _abort();
 } else if ((label | 0) == 24) {
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZN5Oryol7RunLoop12remCallbacksEv($this) {
 $this = $this | 0;
 var $$0$i1$i = 0, $$0$i1$i4 = 0, $$0$i2$i = 0, $$0$i2$i3 = 0, $$0$ph$i$i$i$i$i = 0, $$0$ph$i$i$i$i$i$lcssa = 0, $$0$ph$i$i$i$i$i7 = 0, $$0$ph$i$i$i$i$i7$lcssa = 0, $$lcssa = 0, $$lcssa42 = 0, $$lcssa44 = 0, $$lcssa45 = 0, $$pre$phi$i$i$iZ2D = 0, $$pre$phi2$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $33 = 0, $34 = 0, $4 = 0, $44 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $__begin$020 = 0, $__len$0$i$i$i$i$i = 0, $__len$0$i$i$i$i$i$lcssa43 = 0, $__len$0$i$i$i$i$i9 = 0, $__len$0$i$i$i$i$i9$lcssa41 = 0, $__len$0$ph$i$i$i$i$i = 0, $__len$0$ph$i$i$i$i$i6 = 0, $id = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $id = sp;
 $1 = HEAP32[$this + 60 >> 2] | 0;
 if (!$1) {
  $$pre$phi$i$i$iZ2D = $this + 68 | 0;
  $$pre$phi2$i$i$iZ2D = $this + 72 | 0;
  $18 = HEAP32[$$pre$phi$i$i$iZ2D >> 2] | 0;
  HEAP32[$$pre$phi2$i$i$iZ2D >> 2] = $18;
  STACKTOP = sp;
  return;
 }
 $4 = HEAP32[$this + 68 >> 2] | 0;
 $6 = HEAP32[$this + 72 >> 2] | 0;
 $7 = $1 + ($6 << 2) | 0;
 if (($4 | 0) == ($6 | 0)) {
  $$pre$phi$i$i$iZ2D = $this + 68 | 0;
  $$pre$phi2$i$i$iZ2D = $this + 72 | 0;
  $18 = HEAP32[$$pre$phi$i$i$iZ2D >> 2] | 0;
  HEAP32[$$pre$phi2$i$i$iZ2D >> 2] = $18;
  STACKTOP = sp;
  return;
 }
 $10 = $this + 4 | 0;
 $11 = $this + 28 | 0;
 $12 = $this + 32 | 0;
 $13 = $this + 56 | 0;
 $14 = $this + 40 | 0;
 $15 = $this + 44 | 0;
 $16 = $this + 12 | 0;
 $17 = $this + 16 | 0;
 $__begin$020 = $1 + ($4 << 2) | 0;
 while (1) {
  $19 = HEAP32[$__begin$020 >> 2] | 0;
  HEAP32[$id >> 2] = $19;
  if (HEAP8[$11 >> 0] | 0) {
   label = 6;
   break;
  }
  $22 = HEAP32[$10 >> 2] | 0;
  if (!$22) {
   $$0$i1$i4 = 0;
   $$0$i2$i3 = 0;
  } else {
   $$0$i1$i4 = $22 + ((HEAP32[$17 >> 2] | 0) * 40 | 0) | 0;
   $$0$i2$i3 = $22 + ((HEAP32[$16 >> 2] | 0) * 40 | 0) | 0;
  }
  $$0$ph$i$i$i$i$i7 = $$0$i2$i3;
  $__len$0$ph$i$i$i$i$i6 = ($$0$i1$i4 - $$0$i2$i3 | 0) / 40 | 0;
  L13 : while (1) {
   $__len$0$i$i$i$i$i9 = $__len$0$ph$i$i$i$i$i6;
   while (1) {
    if (!$__len$0$i$i$i$i$i9) {
     $$0$ph$i$i$i$i$i7$lcssa = $$0$ph$i$i$i$i$i7;
     break L13;
    }
    $33 = ($__len$0$i$i$i$i$i9 | 0) / 2 | 0;
    $34 = $$0$ph$i$i$i$i$i7 + ($33 * 40 | 0) | 0;
    if ((HEAP32[$34 >> 2] | 0) < ($19 | 0)) {
     $$lcssa = $33;
     $$lcssa42 = $34;
     $__len$0$i$i$i$i$i9$lcssa41 = $__len$0$i$i$i$i$i9;
     break;
    } else $__len$0$i$i$i$i$i9 = $33;
   }
   $$0$ph$i$i$i$i$i7 = $$lcssa42 + 40 | 0;
   $__len$0$ph$i$i$i$i$i6 = $__len$0$i$i$i$i$i9$lcssa41 + -1 - $$lcssa | 0;
  }
  if (($$0$ph$i$i$i$i$i7$lcssa | 0) == ($$0$i1$i4 | 0)) label = 17; else if (($19 | 0) < (HEAP32[$$0$ph$i$i$i$i$i7$lcssa >> 2] | 0)) label = 17; else __ZN5Oryol3MapIiNS_7RunLoop4itemEE5EraseERKi($10, $id);
  if ((label | 0) == 17) {
   label = 0;
   if (HEAP8[$13 >> 0] | 0) {
    label = 18;
    break;
   }
   $44 = HEAP32[$12 >> 2] | 0;
   if (!$44) {
    $$0$i1$i = 0;
    $$0$i2$i = 0;
   } else {
    $$0$i1$i = $44 + ((HEAP32[$15 >> 2] | 0) * 40 | 0) | 0;
    $$0$i2$i = $44 + ((HEAP32[$14 >> 2] | 0) * 40 | 0) | 0;
   }
   $$0$ph$i$i$i$i$i = $$0$i2$i;
   $__len$0$ph$i$i$i$i$i = ($$0$i1$i - $$0$i2$i | 0) / 40 | 0;
   L29 : while (1) {
    $__len$0$i$i$i$i$i = $__len$0$ph$i$i$i$i$i;
    while (1) {
     if (!$__len$0$i$i$i$i$i) {
      $$0$ph$i$i$i$i$i$lcssa = $$0$ph$i$i$i$i$i;
      break L29;
     }
     $55 = ($__len$0$i$i$i$i$i | 0) / 2 | 0;
     $56 = $$0$ph$i$i$i$i$i + ($55 * 40 | 0) | 0;
     if ((HEAP32[$56 >> 2] | 0) < ($19 | 0)) {
      $$lcssa44 = $55;
      $$lcssa45 = $56;
      $__len$0$i$i$i$i$i$lcssa43 = $__len$0$i$i$i$i$i;
      break;
     } else $__len$0$i$i$i$i$i = $55;
    }
    $$0$ph$i$i$i$i$i = $$lcssa45 + 40 | 0;
    $__len$0$ph$i$i$i$i$i = $__len$0$i$i$i$i$i$lcssa43 + -1 - $$lcssa44 | 0;
   }
   if (($$0$ph$i$i$i$i$i$lcssa | 0) != ($$0$i1$i | 0)) if (($19 | 0) >= (HEAP32[$$0$ph$i$i$i$i$i$lcssa >> 2] | 0)) __ZN5Oryol3MapIiNS_7RunLoop4itemEE5EraseERKi($12, $id);
  }
  $__begin$020 = $__begin$020 + 4 | 0;
  if (($__begin$020 | 0) == ($7 | 0)) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) {
  $$pre$phi$i$i$iZ2D = $this + 68 | 0;
  $$pre$phi2$i$i$iZ2D = $this + 72 | 0;
  $18 = HEAP32[$$pre$phi$i$i$iZ2D >> 2] | 0;
  HEAP32[$$pre$phi2$i$i$iZ2D >> 2] = $18;
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 6) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 118164);
  _abort();
 } else if ((label | 0) == 18) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 118164);
  _abort();
 }
}

function _trinkle($head, $width, $cmp, $pp, $pshift, $trusty, $lp) {
 $head = $head | 0;
 $width = $width | 0;
 $cmp = $cmp | 0;
 $pp = $pp | 0;
 $pshift = $pshift | 0;
 $trusty = $trusty | 0;
 $lp = $lp | 0;
 var $$0$i = 0, $$0$lcssa = 0, $$0$lcssa32 = 0, $$01$i5$i$ph = 0, $$01245 = 0, $$01245$phi = 0, $$02$i$i = 0, $$02$i3$i = 0, $$02$lcssa = 0, $$02$lcssa34 = 0, $$021047 = 0, $$03$lcssa = 0, $$03948 = 0, $0 = 0, $10 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $25 = 0, $27 = 0, $3 = 0, $31 = 0, $38 = 0, $44 = 0, $46 = 0, $48 = 0, $51 = 0, $54 = 0, $55 = 0, $62 = 0, $ar = 0, $i$0$lcssa = 0, $i$0$lcssa33 = 0, $i$01146 = 0, $nTrailingZeros$03$i$i = 0, $nTrailingZeros$03$i2$i = 0, $p$sroa$0$0849 = 0, $p$sroa$8$0650 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $ar = sp;
 $0 = HEAP32[$pp >> 2] | 0;
 $2 = HEAP32[$pp + 4 >> 2] | 0;
 HEAP32[$ar >> 2] = $head;
 $3 = 0 - $width | 0;
 L1 : do if (($2 | 0) != 0 | ($0 | 0) != 1) {
  $10 = $head + (0 - (HEAP32[$lp + ($pshift << 2) >> 2] | 0)) | 0;
  if ((FUNCTION_TABLE_iii[$cmp & 31]($10, $head) | 0) < 1) {
   $$0$lcssa = $head;
   $$02$lcssa = $pshift;
   $$03$lcssa = $trusty;
   $i$0$lcssa = 1;
   label = 18;
  } else {
   $$01245 = $head;
   $$021047 = $pshift;
   $$03948 = ($trusty | 0) == 0;
   $18 = $10;
   $i$01146 = 1;
   $p$sroa$0$0849 = $0;
   $p$sroa$8$0650 = $2;
   while (1) {
    if ($$03948 & ($$021047 | 0) > 1) {
     $14 = $$01245 + $3 | 0;
     $17 = HEAP32[$lp + ($$021047 + -2 << 2) >> 2] | 0;
     if ((FUNCTION_TABLE_iii[$cmp & 31]($14, $18) | 0) > -1) {
      $$0$lcssa32 = $$01245;
      $$02$lcssa34 = $$021047;
      $i$0$lcssa33 = $i$01146;
      label = 19;
      break L1;
     }
     if ((FUNCTION_TABLE_iii[$cmp & 31]($14 + (0 - $17) | 0, $18) | 0) > -1) {
      $$0$lcssa32 = $$01245;
      $$02$lcssa34 = $$021047;
      $i$0$lcssa33 = $i$01146;
      label = 19;
      break L1;
     }
    }
    $25 = $i$01146 + 1 | 0;
    HEAP32[$ar + ($i$01146 << 2) >> 2] = $18;
    $27 = $p$sroa$0$0849 + -1 | 0;
    do if (!$27) {
     $46 = 32;
     label = 15;
    } else {
     if (!($27 & 1)) {
      $$02$i$i = $27;
      $nTrailingZeros$03$i$i = 0;
      while (1) {
       $31 = $nTrailingZeros$03$i$i + 1 | 0;
       $$02$i$i = $$02$i$i >>> 1;
       if ($$02$i$i & 1 | 0) {
        $44 = $31;
        break;
       } else $nTrailingZeros$03$i$i = $31;
      }
     } else {
      if (!$p$sroa$8$0650) $$01$i5$i$ph = 32; else {
       if (!($p$sroa$8$0650 & 1)) {
        $$02$i3$i = $p$sroa$8$0650;
        $nTrailingZeros$03$i2$i = 0;
       } else {
        $$0$i = 0;
        $48 = $p$sroa$0$0849;
        $51 = $p$sroa$8$0650;
        $55 = 0;
        break;
       }
       while (1) {
        $38 = $nTrailingZeros$03$i2$i + 1 | 0;
        $$02$i3$i = $$02$i3$i >>> 1;
        if ($$02$i3$i & 1 | 0) {
         $$01$i5$i$ph = $38;
         break;
        } else $nTrailingZeros$03$i2$i = $38;
       }
      }
      $44 = $$01$i5$i$ph + 32 | 0;
     }
     if ($44 >>> 0 > 31) {
      $46 = $44;
      label = 15;
     } else {
      $$0$i = $44;
      $48 = $p$sroa$0$0849;
      $51 = $p$sroa$8$0650;
      $55 = $44;
     }
    } while (0);
    if ((label | 0) == 15) {
     label = 0;
     $$0$i = $46 + -32 | 0;
     $48 = $p$sroa$8$0650;
     $51 = 0;
     $55 = $46;
    }
    $p$sroa$0$0849 = $51 << 32 - $$0$i | $48 >>> $$0$i;
    $p$sroa$8$0650 = $51 >>> $$0$i;
    $54 = $55 + $$021047 | 0;
    if (!(($p$sroa$8$0650 | 0) != 0 | ($p$sroa$0$0849 | 0) != 1)) {
     $$0$lcssa32 = $18;
     $$02$lcssa34 = $54;
     $i$0$lcssa33 = $25;
     label = 19;
     break L1;
    }
    $62 = $18 + (0 - (HEAP32[$lp + ($54 << 2) >> 2] | 0)) | 0;
    if ((FUNCTION_TABLE_iii[$cmp & 31]($62, HEAP32[$ar >> 2] | 0) | 0) < 1) {
     $$0$lcssa = $18;
     $$02$lcssa = $54;
     $$03$lcssa = 0;
     $i$0$lcssa = $25;
     label = 18;
     break;
    } else {
     $$01245$phi = $18;
     $$021047 = $54;
     $$03948 = 1;
     $18 = $62;
     $i$01146 = $25;
     $$01245 = $$01245$phi;
    }
   }
  }
 } else {
  $$0$lcssa = $head;
  $$02$lcssa = $pshift;
  $$03$lcssa = $trusty;
  $i$0$lcssa = 1;
  label = 18;
 } while (0);
 if ((label | 0) == 18) if (!$$03$lcssa) {
  $$0$lcssa32 = $$0$lcssa;
  $$02$lcssa34 = $$02$lcssa;
  $i$0$lcssa33 = $i$0$lcssa;
  label = 19;
 }
 if ((label | 0) == 19) {
  _cycle($width, $ar, $i$0$lcssa33);
  _sift($$0$lcssa32, $width, $cmp, $$02$lcssa34, $lp);
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol11ShaderSetup12programEntryC2ERKS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $106 = 0, $107 = 0, $11 = 0, $113 = 0, $118 = 0, $119 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $137 = 0, $142 = 0, $143 = 0, $149 = 0, $154 = 0, $155 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $46 = 0, $47 = 0, $53 = 0, $58 = 0, $59 = 0, $65 = 0, $70 = 0, $71 = 0, $77 = 0, $82 = 0, $83 = 0, $89 = 0, $9 = 0, $94 = 0, $95 = 0, $99 = 0, dest = 0, stop = 0;
 __ZN5Oryol6StringC2Ev($this);
 $1 = $this + 8 | 0;
 __ZN5Oryol6StringC2Ev($1);
 $2 = $this + 16 | 0;
 __ZN5Oryol6StringC2Ev($2);
 $3 = $this + 24 | 0;
 __ZN5Oryol6StringC2Ev($3);
 $4 = $this + 32 | 0;
 __ZN5Oryol6StringC2Ev($4);
 __ZN5Oryol6StringaSERKS0_($this, $0);
 __ZN5Oryol6StringaSERKS0_($1, $0 + 8 | 0);
 __ZN5Oryol6StringaSERKS0_($2, $0 + 16 | 0);
 __ZN5Oryol6StringaSERKS0_($3, $0 + 24 | 0);
 __ZN5Oryol6StringaSERKS0_($4, $0 + 32 | 0);
 $9 = $this + 40 | 0;
 __ZN5Oryol6StringC2Ev($9);
 $10 = $this + 48 | 0;
 __ZN5Oryol6StringC2Ev($10);
 $11 = $this + 56 | 0;
 __ZN5Oryol6StringC2Ev($11);
 $12 = $this + 64 | 0;
 __ZN5Oryol6StringC2Ev($12);
 $13 = $this + 72 | 0;
 __ZN5Oryol6StringC2Ev($13);
 __ZN5Oryol6StringaSERKS0_($9, $0 + 40 | 0);
 __ZN5Oryol6StringaSERKS0_($10, $0 + 48 | 0);
 __ZN5Oryol6StringaSERKS0_($11, $0 + 56 | 0);
 __ZN5Oryol6StringaSERKS0_($12, $0 + 64 | 0);
 __ZN5Oryol6StringaSERKS0_($13, $0 + 72 | 0);
 $19 = $this + 80 | 0;
 __ZN5Oryol6StringC2Ev($19);
 $20 = $this + 88 | 0;
 __ZN5Oryol6StringC2Ev($20);
 $21 = $this + 96 | 0;
 __ZN5Oryol6StringC2Ev($21);
 $22 = $this + 104 | 0;
 __ZN5Oryol6StringC2Ev($22);
 $23 = $this + 112 | 0;
 __ZN5Oryol6StringC2Ev($23);
 __ZN5Oryol6StringaSERKS0_($19, $0 + 80 | 0);
 __ZN5Oryol6StringaSERKS0_($20, $0 + 88 | 0);
 __ZN5Oryol6StringaSERKS0_($21, $0 + 96 | 0);
 __ZN5Oryol6StringaSERKS0_($22, $0 + 104 | 0);
 __ZN5Oryol6StringaSERKS0_($23, $0 + 112 | 0);
 $29 = $this + 120 | 0;
 __ZN5Oryol6StringC2Ev($29);
 $30 = $this + 128 | 0;
 __ZN5Oryol6StringC2Ev($30);
 $31 = $this + 136 | 0;
 __ZN5Oryol6StringC2Ev($31);
 $32 = $this + 144 | 0;
 __ZN5Oryol6StringC2Ev($32);
 $33 = $this + 152 | 0;
 __ZN5Oryol6StringC2Ev($33);
 __ZN5Oryol6StringaSERKS0_($29, $0 + 120 | 0);
 __ZN5Oryol6StringaSERKS0_($30, $0 + 128 | 0);
 __ZN5Oryol6StringaSERKS0_($31, $0 + 136 | 0);
 __ZN5Oryol6StringaSERKS0_($32, $0 + 144 | 0);
 __ZN5Oryol6StringaSERKS0_($33, $0 + 152 | 0);
 $39 = $this + 160 | 0;
 $40 = $0 + 160 | 0;
 dest = $39;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $41 = $40;
 $46 = HEAP32[$41 + 4 >> 2] | 0;
 $47 = $39;
 HEAP32[$47 >> 2] = HEAP32[$41 >> 2];
 HEAP32[$47 + 4 >> 2] = $46;
 $53 = $0 + 168 | 0;
 $58 = HEAP32[$53 + 4 >> 2] | 0;
 $59 = $this + 168 | 0;
 HEAP32[$59 >> 2] = HEAP32[$53 >> 2];
 HEAP32[$59 + 4 >> 2] = $58;
 $65 = $0 + 176 | 0;
 $70 = HEAP32[$65 + 4 >> 2] | 0;
 $71 = $this + 176 | 0;
 HEAP32[$71 >> 2] = HEAP32[$65 >> 2];
 HEAP32[$71 + 4 >> 2] = $70;
 $77 = $0 + 184 | 0;
 $82 = HEAP32[$77 + 4 >> 2] | 0;
 $83 = $this + 184 | 0;
 HEAP32[$83 >> 2] = HEAP32[$77 >> 2];
 HEAP32[$83 + 4 >> 2] = $82;
 $89 = $0 + 192 | 0;
 $94 = HEAP32[$89 + 4 >> 2] | 0;
 $95 = $this + 192 | 0;
 HEAP32[$95 >> 2] = HEAP32[$89 >> 2];
 HEAP32[$95 + 4 >> 2] = $94;
 $99 = $this + 200 | 0;
 $100 = $0 + 200 | 0;
 dest = $99;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $101 = $100;
 $106 = HEAP32[$101 + 4 >> 2] | 0;
 $107 = $99;
 HEAP32[$107 >> 2] = HEAP32[$101 >> 2];
 HEAP32[$107 + 4 >> 2] = $106;
 $113 = $0 + 208 | 0;
 $118 = HEAP32[$113 + 4 >> 2] | 0;
 $119 = $this + 208 | 0;
 HEAP32[$119 >> 2] = HEAP32[$113 >> 2];
 HEAP32[$119 + 4 >> 2] = $118;
 $125 = $0 + 216 | 0;
 $130 = HEAP32[$125 + 4 >> 2] | 0;
 $131 = $this + 216 | 0;
 HEAP32[$131 >> 2] = HEAP32[$125 >> 2];
 HEAP32[$131 + 4 >> 2] = $130;
 $137 = $0 + 224 | 0;
 $142 = HEAP32[$137 + 4 >> 2] | 0;
 $143 = $this + 224 | 0;
 HEAP32[$143 >> 2] = HEAP32[$137 >> 2];
 HEAP32[$143 + 4 >> 2] = $142;
 $149 = $0 + 232 | 0;
 $154 = HEAP32[$149 + 4 >> 2] | 0;
 $155 = $this + 232 | 0;
 HEAP32[$155 >> 2] = HEAP32[$149 >> 2];
 HEAP32[$155 + 4 >> 2] = $154;
 __ZN5Oryol12VertexLayoutC2ERKS0_($this + 240 | 0, $0 + 240 | 0);
 return;
}

function __ZN5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEE3AddEONS_12KeyValuePairIS1_S8_EE($this, $kvp) {
 $this = $this | 0;
 $kvp = $kvp | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$i4 = 0, $$0$ph$i$i$i = 0, $$0$ph$lcssa6$i$i$i = 0, $$lcssa38 = 0, $$lcssa39 = 0, $$pre$i$i$i$i$i$i = 0, $$pre$phi$i$iZ2D = 0, $0 = 0, $13 = 0, $14 = 0, $21 = 0, $22 = 0, $28 = 0, $29 = 0, $35 = 0, $43 = 0, $47 = 0, $49 = 0, $51 = 0, $54 = 0, $6 = 0, $62 = 0, $63 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $80 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa37 = 0, $__len$0$ph$i$i$i = 0, $__len$0$us$us$i7$i$i = 0, $slotConstructed$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $slotConstructed$i = sp + 24 | 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 300, 16739);
  _abort();
 }
 $6 = $this + 12 | 0;
 $8 = $this + 8 | 0;
 if (((HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0) == (0 - (HEAP32[$8 >> 2] | 0) | 0)) __ZN5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEE4growEv($this);
 $13 = HEAP32[$this >> 2] | 0;
 $14 = ($13 | 0) == 0;
 if ($14) {
  $$0$i1 = 0;
  $$0$i4 = 0;
 } else {
  $$0$i1 = $13 + (HEAP32[$6 >> 2] << 5) | 0;
  $$0$i4 = $13 + (HEAP32[$8 >> 2] << 5) | 0;
 }
 $21 = $$0$i1 - $$0$i4 >> 5;
 $22 = HEAP32[$kvp >> 2] | 0;
 L10 : do if (!$22) if (!$21) $$0$ph$lcssa6$i$i$i = $$0$i4; else {
  $__len$0$us$us$i7$i$i = $21;
  while (1) if (($__len$0$us$us$i7$i$i + 1 | 0) >>> 0 < 3) {
   $$0$ph$lcssa6$i$i$i = $$0$i4;
   break;
  } else $__len$0$us$us$i7$i$i = ($__len$0$us$us$i7$i$i | 0) / 2 | 0;
 } else {
  $$0$ph$i$i$i = $$0$i4;
  $__len$0$ph$i$i$i = $21;
  L14 : while (1) {
   $__len$0$i$i$i = $__len$0$ph$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i) {
     $$0$ph$lcssa6$i$i$i = $$0$ph$i$i$i;
     break L10;
    }
    $28 = ($__len$0$i$i$i | 0) / 2 | 0;
    $29 = $$0$ph$i$i$i + ($28 << 5) | 0;
    $$pre$i$i$i$i$i$i = HEAP32[$29 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i) $35 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$22 >> 2] | 0)) $35 = $$pre$i$i$i$i$i$i; else break L14;
    if ($35 >>> 0 < $22 >>> 0) {
     $$lcssa38 = $28;
     $$lcssa39 = $29;
     $__len$0$i$i$i$lcssa37 = $__len$0$i$i$i;
     break;
    } else $__len$0$i$i$i = $28;
   }
   $$0$ph$i$i$i = $$lcssa39 + 32 | 0;
   $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa37 + -1 - $$lcssa38 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if ($14) $$0$i2 = 0; else $$0$i2 = $13 + (HEAP32[$8 >> 2] << 5) | 0;
 HEAP8[$slotConstructed$i >> 0] = 1;
 $43 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE13prepareInsertEiRb($this, $$0$ph$lcssa6$i$i$i - $$0$i2 >> 5, $slotConstructed$i) | 0;
 if (!(HEAP8[$slotConstructed$i >> 0] | 0)) {
  __ZN5Oryol10StringAtom4copyERKS0_($43, $kvp);
  HEAP32[$kvp >> 2] = 0;
  $72 = $43 + 8 | 0;
  $73 = $kvp + 24 | 0;
  $74 = HEAP32[$73 >> 2] | 0;
  if (!$74) {
   HEAP32[$43 + 24 >> 2] = 0;
   STACKTOP = sp;
   return;
  }
  if (($74 | 0) == ($kvp + 8 | 0)) {
   HEAP32[$43 + 24 >> 2] = $72;
   $80 = HEAP32[$73 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$80 >> 2] | 0) + 12 >> 2] & 63]($80, $72);
   STACKTOP = sp;
   return;
  } else {
   HEAP32[$43 + 24 >> 2] = $74;
   HEAP32[$73 >> 2] = 0;
   STACKTOP = sp;
   return;
  }
 }
 if (($43 | 0) == ($kvp | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$43 >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($43, $kvp);
 $47 = $43 + 8 | 0;
 $49 = HEAP32[$kvp + 24 >> 2] | 0;
 do if (!$49) {
  $51 = $0 + 16 | 0;
  HEAP32[$51 >> 2] = 0;
  $$pre$phi$i$iZ2D = $51;
 } else if (($49 | 0) == ($kvp + 8 | 0)) {
  $54 = $0 + 16 | 0;
  HEAP32[$54 >> 2] = $0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$49 >> 2] | 0) + 12 >> 2] & 63]($49, $0);
  $$pre$phi$i$iZ2D = $54;
  break;
 } else {
  $62 = $0 + 16 | 0;
  HEAP32[$62 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$49 >> 2] | 0) + 8 >> 2] & 63]($49) | 0;
  $$pre$phi$i$iZ2D = $62;
  break;
 } while (0);
 __ZNSt3__18functionIFN5Oryol3PtrINS1_10FileSystemEEEvEE4swapERS6_($0, $47);
 $63 = HEAP32[$$pre$phi$i$iZ2D >> 2] | 0;
 if (($63 | 0) == ($0 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 255]($0); else if ($63 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$63 >> 2] | 0) + 20 >> 2] & 255]($63);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol11StaticArrayINS_11ShaderSetup17uniformBlockEntryELi8EED2Ev($this) {
 $this = $this | 0;
 HEAP32[$this + 2220 >> 2] = 0;
 HEAP32[$this + 2208 >> 2] = 0;
 HEAP32[$this + 2196 >> 2] = 0;
 HEAP32[$this + 2184 >> 2] = 0;
 HEAP32[$this + 2172 >> 2] = 0;
 HEAP32[$this + 2160 >> 2] = 0;
 HEAP32[$this + 2148 >> 2] = 0;
 HEAP32[$this + 2136 >> 2] = 0;
 HEAP32[$this + 2124 >> 2] = 0;
 HEAP32[$this + 2112 >> 2] = 0;
 HEAP32[$this + 2100 >> 2] = 0;
 HEAP32[$this + 2088 >> 2] = 0;
 HEAP32[$this + 2076 >> 2] = 0;
 HEAP32[$this + 2064 >> 2] = 0;
 HEAP32[$this + 2052 >> 2] = 0;
 HEAP32[$this + 2040 >> 2] = 0;
 HEAP32[$this + 2016 >> 2] = 0;
 HEAP32[$this + 1932 >> 2] = 0;
 HEAP32[$this + 1920 >> 2] = 0;
 HEAP32[$this + 1908 >> 2] = 0;
 HEAP32[$this + 1896 >> 2] = 0;
 HEAP32[$this + 1884 >> 2] = 0;
 HEAP32[$this + 1872 >> 2] = 0;
 HEAP32[$this + 1860 >> 2] = 0;
 HEAP32[$this + 1848 >> 2] = 0;
 HEAP32[$this + 1836 >> 2] = 0;
 HEAP32[$this + 1824 >> 2] = 0;
 HEAP32[$this + 1812 >> 2] = 0;
 HEAP32[$this + 1800 >> 2] = 0;
 HEAP32[$this + 1788 >> 2] = 0;
 HEAP32[$this + 1776 >> 2] = 0;
 HEAP32[$this + 1764 >> 2] = 0;
 HEAP32[$this + 1752 >> 2] = 0;
 HEAP32[$this + 1728 >> 2] = 0;
 HEAP32[$this + 1644 >> 2] = 0;
 HEAP32[$this + 1632 >> 2] = 0;
 HEAP32[$this + 1620 >> 2] = 0;
 HEAP32[$this + 1608 >> 2] = 0;
 HEAP32[$this + 1596 >> 2] = 0;
 HEAP32[$this + 1584 >> 2] = 0;
 HEAP32[$this + 1572 >> 2] = 0;
 HEAP32[$this + 1560 >> 2] = 0;
 HEAP32[$this + 1548 >> 2] = 0;
 HEAP32[$this + 1536 >> 2] = 0;
 HEAP32[$this + 1524 >> 2] = 0;
 HEAP32[$this + 1512 >> 2] = 0;
 HEAP32[$this + 1500 >> 2] = 0;
 HEAP32[$this + 1488 >> 2] = 0;
 HEAP32[$this + 1476 >> 2] = 0;
 HEAP32[$this + 1464 >> 2] = 0;
 HEAP32[$this + 1440 >> 2] = 0;
 HEAP32[$this + 1356 >> 2] = 0;
 HEAP32[$this + 1344 >> 2] = 0;
 HEAP32[$this + 1332 >> 2] = 0;
 HEAP32[$this + 1320 >> 2] = 0;
 HEAP32[$this + 1308 >> 2] = 0;
 HEAP32[$this + 1296 >> 2] = 0;
 HEAP32[$this + 1284 >> 2] = 0;
 HEAP32[$this + 1272 >> 2] = 0;
 HEAP32[$this + 1260 >> 2] = 0;
 HEAP32[$this + 1248 >> 2] = 0;
 HEAP32[$this + 1236 >> 2] = 0;
 HEAP32[$this + 1224 >> 2] = 0;
 HEAP32[$this + 1212 >> 2] = 0;
 HEAP32[$this + 1200 >> 2] = 0;
 HEAP32[$this + 1188 >> 2] = 0;
 HEAP32[$this + 1176 >> 2] = 0;
 HEAP32[$this + 1152 >> 2] = 0;
 HEAP32[$this + 1068 >> 2] = 0;
 HEAP32[$this + 1056 >> 2] = 0;
 HEAP32[$this + 1044 >> 2] = 0;
 HEAP32[$this + 1032 >> 2] = 0;
 HEAP32[$this + 1020 >> 2] = 0;
 HEAP32[$this + 1008 >> 2] = 0;
 HEAP32[$this + 996 >> 2] = 0;
 HEAP32[$this + 984 >> 2] = 0;
 HEAP32[$this + 972 >> 2] = 0;
 HEAP32[$this + 960 >> 2] = 0;
 HEAP32[$this + 948 >> 2] = 0;
 HEAP32[$this + 936 >> 2] = 0;
 HEAP32[$this + 924 >> 2] = 0;
 HEAP32[$this + 912 >> 2] = 0;
 HEAP32[$this + 900 >> 2] = 0;
 HEAP32[$this + 888 >> 2] = 0;
 HEAP32[$this + 864 >> 2] = 0;
 HEAP32[$this + 780 >> 2] = 0;
 HEAP32[$this + 768 >> 2] = 0;
 HEAP32[$this + 756 >> 2] = 0;
 HEAP32[$this + 744 >> 2] = 0;
 HEAP32[$this + 732 >> 2] = 0;
 HEAP32[$this + 720 >> 2] = 0;
 HEAP32[$this + 708 >> 2] = 0;
 HEAP32[$this + 696 >> 2] = 0;
 HEAP32[$this + 684 >> 2] = 0;
 HEAP32[$this + 672 >> 2] = 0;
 HEAP32[$this + 660 >> 2] = 0;
 HEAP32[$this + 648 >> 2] = 0;
 HEAP32[$this + 636 >> 2] = 0;
 HEAP32[$this + 624 >> 2] = 0;
 HEAP32[$this + 612 >> 2] = 0;
 HEAP32[$this + 600 >> 2] = 0;
 HEAP32[$this + 576 >> 2] = 0;
 HEAP32[$this + 492 >> 2] = 0;
 HEAP32[$this + 480 >> 2] = 0;
 HEAP32[$this + 468 >> 2] = 0;
 HEAP32[$this + 456 >> 2] = 0;
 HEAP32[$this + 444 >> 2] = 0;
 HEAP32[$this + 432 >> 2] = 0;
 HEAP32[$this + 420 >> 2] = 0;
 HEAP32[$this + 408 >> 2] = 0;
 HEAP32[$this + 396 >> 2] = 0;
 HEAP32[$this + 384 >> 2] = 0;
 HEAP32[$this + 372 >> 2] = 0;
 HEAP32[$this + 360 >> 2] = 0;
 HEAP32[$this + 348 >> 2] = 0;
 HEAP32[$this + 336 >> 2] = 0;
 HEAP32[$this + 324 >> 2] = 0;
 HEAP32[$this + 312 >> 2] = 0;
 HEAP32[$this + 288 >> 2] = 0;
 HEAP32[$this + 204 >> 2] = 0;
 HEAP32[$this + 192 >> 2] = 0;
 HEAP32[$this + 180 >> 2] = 0;
 HEAP32[$this + 168 >> 2] = 0;
 HEAP32[$this + 156 >> 2] = 0;
 HEAP32[$this + 144 >> 2] = 0;
 HEAP32[$this + 132 >> 2] = 0;
 HEAP32[$this + 120 >> 2] = 0;
 HEAP32[$this + 108 >> 2] = 0;
 HEAP32[$this + 96 >> 2] = 0;
 HEAP32[$this + 84 >> 2] = 0;
 HEAP32[$this + 72 >> 2] = 0;
 HEAP32[$this + 60 >> 2] = 0;
 HEAP32[$this + 48 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP32[$this >> 2] = 0;
 return;
}

function __ZN11DebugWindowC2Ev($this) {
 $this = $this | 0;
 var $10 = 0, $14 = 0, $18 = 0, $22 = 0, $26 = 0, $30 = 0, $34 = 0, $38 = 0, $42 = 0, $46 = 0, $50 = 0, $54 = 0, $58 = 0, $6 = 0, $62 = 0, $66 = 0, $70 = 0, $74 = 0, $78 = 0, $82 = 0, $86 = 0, $90 = 0, $94 = 0, $98 = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this >> 2] = 824;
 HEAP8[$this + 8 >> 0] = 1;
 __ZN5Oryol6StringC2Ev($this + 12 | 0);
 HEAP32[$this >> 2] = 852;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP16[$this + 30 >> 1] = 0;
 HEAP8[$this + 32 >> 0] = 1;
 $6 = $this + 24 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP8[$6 + 4 >> 0] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP16[$this + 46 >> 1] = 0;
 HEAP8[$this + 48 >> 0] = 1;
 $10 = $this + 40 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP8[$10 + 4 >> 0] = 0;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP16[$this + 62 >> 1] = 0;
 HEAP8[$this + 64 >> 0] = 1;
 $14 = $this + 56 | 0;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$14 + 4 >> 0] = 0;
 HEAP32[$this + 68 >> 2] = 0;
 HEAP16[$this + 78 >> 1] = 0;
 HEAP8[$this + 80 >> 0] = 1;
 $18 = $this + 72 | 0;
 HEAP32[$18 >> 2] = 0;
 HEAP8[$18 + 4 >> 0] = 0;
 HEAP32[$this + 84 >> 2] = 0;
 HEAP16[$this + 94 >> 1] = 0;
 HEAP8[$this + 96 >> 0] = 1;
 $22 = $this + 88 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP8[$22 + 4 >> 0] = 0;
 HEAP32[$this + 100 >> 2] = 0;
 HEAP16[$this + 110 >> 1] = 0;
 HEAP8[$this + 112 >> 0] = 1;
 $26 = $this + 104 | 0;
 HEAP32[$26 >> 2] = 0;
 HEAP8[$26 + 4 >> 0] = 0;
 HEAP32[$this + 116 >> 2] = 0;
 HEAP16[$this + 126 >> 1] = 0;
 HEAP8[$this + 128 >> 0] = 1;
 $30 = $this + 120 | 0;
 HEAP32[$30 >> 2] = 0;
 HEAP8[$30 + 4 >> 0] = 0;
 HEAP32[$this + 132 >> 2] = 0;
 HEAP16[$this + 142 >> 1] = 0;
 HEAP8[$this + 144 >> 0] = 1;
 $34 = $this + 136 | 0;
 HEAP32[$34 >> 2] = 0;
 HEAP8[$34 + 4 >> 0] = 0;
 HEAP32[$this + 148 >> 2] = 0;
 HEAP16[$this + 158 >> 1] = 0;
 HEAP8[$this + 160 >> 0] = 1;
 $38 = $this + 152 | 0;
 HEAP32[$38 >> 2] = 0;
 HEAP8[$38 + 4 >> 0] = 0;
 HEAP32[$this + 164 >> 2] = 0;
 HEAP16[$this + 174 >> 1] = 0;
 HEAP8[$this + 176 >> 0] = 1;
 $42 = $this + 168 | 0;
 HEAP32[$42 >> 2] = 0;
 HEAP8[$42 + 4 >> 0] = 0;
 HEAP32[$this + 180 >> 2] = 0;
 HEAP16[$this + 190 >> 1] = 0;
 HEAP8[$this + 192 >> 0] = 1;
 $46 = $this + 184 | 0;
 HEAP32[$46 >> 2] = 0;
 HEAP8[$46 + 4 >> 0] = 0;
 HEAP32[$this + 196 >> 2] = 0;
 HEAP16[$this + 206 >> 1] = 0;
 HEAP8[$this + 208 >> 0] = 1;
 $50 = $this + 200 | 0;
 HEAP32[$50 >> 2] = 0;
 HEAP8[$50 + 4 >> 0] = 0;
 HEAP32[$this + 212 >> 2] = 0;
 HEAP16[$this + 222 >> 1] = 0;
 HEAP8[$this + 224 >> 0] = 1;
 $54 = $this + 216 | 0;
 HEAP32[$54 >> 2] = 0;
 HEAP8[$54 + 4 >> 0] = 0;
 HEAP32[$this + 228 >> 2] = 0;
 HEAP16[$this + 238 >> 1] = 0;
 HEAP8[$this + 240 >> 0] = 1;
 $58 = $this + 232 | 0;
 HEAP32[$58 >> 2] = 0;
 HEAP8[$58 + 4 >> 0] = 0;
 HEAP32[$this + 244 >> 2] = 0;
 HEAP16[$this + 254 >> 1] = 0;
 HEAP8[$this + 256 >> 0] = 1;
 $62 = $this + 248 | 0;
 HEAP32[$62 >> 2] = 0;
 HEAP8[$62 + 4 >> 0] = 0;
 HEAP32[$this + 260 >> 2] = 0;
 HEAP16[$this + 270 >> 1] = 0;
 HEAP8[$this + 272 >> 0] = 1;
 $66 = $this + 264 | 0;
 HEAP32[$66 >> 2] = 0;
 HEAP8[$66 + 4 >> 0] = 0;
 HEAP32[$this + 276 >> 2] = 0;
 HEAP16[$this + 286 >> 1] = 0;
 HEAP8[$this + 288 >> 0] = 1;
 $70 = $this + 280 | 0;
 HEAP32[$70 >> 2] = 0;
 HEAP8[$70 + 4 >> 0] = 0;
 HEAP32[$this + 292 >> 2] = 0;
 HEAP16[$this + 302 >> 1] = 0;
 HEAP8[$this + 304 >> 0] = 1;
 $74 = $this + 296 | 0;
 HEAP32[$74 >> 2] = 0;
 HEAP8[$74 + 4 >> 0] = 0;
 HEAP32[$this + 308 >> 2] = 0;
 HEAP16[$this + 318 >> 1] = 0;
 HEAP8[$this + 320 >> 0] = 1;
 $78 = $this + 312 | 0;
 HEAP32[$78 >> 2] = 0;
 HEAP8[$78 + 4 >> 0] = 0;
 HEAP32[$this + 324 >> 2] = 0;
 HEAP16[$this + 334 >> 1] = 0;
 HEAP8[$this + 336 >> 0] = 1;
 $82 = $this + 328 | 0;
 HEAP32[$82 >> 2] = 0;
 HEAP8[$82 + 4 >> 0] = 0;
 HEAP32[$this + 340 >> 2] = 0;
 HEAP16[$this + 350 >> 1] = 0;
 HEAP8[$this + 352 >> 0] = 1;
 $86 = $this + 344 | 0;
 HEAP32[$86 >> 2] = 0;
 HEAP8[$86 + 4 >> 0] = 0;
 HEAP32[$this + 356 >> 2] = 0;
 HEAP16[$this + 366 >> 1] = 0;
 HEAP8[$this + 368 >> 0] = 1;
 $90 = $this + 360 | 0;
 HEAP32[$90 >> 2] = 0;
 HEAP8[$90 + 4 >> 0] = 0;
 HEAP32[$this + 372 >> 2] = 0;
 HEAP16[$this + 382 >> 1] = 0;
 HEAP8[$this + 384 >> 0] = 1;
 $94 = $this + 376 | 0;
 HEAP32[$94 >> 2] = 0;
 HEAP8[$94 + 4 >> 0] = 0;
 HEAP32[$this + 388 >> 2] = 0;
 HEAP16[$this + 398 >> 1] = 0;
 HEAP8[$this + 400 >> 0] = 1;
 $98 = $this + 392 | 0;
 HEAP32[$98 >> 2] = 0;
 HEAP8[$98 + 4 >> 0] = 0;
 return;
}

function __ZN6SoLoud6Soloud4clipERNS_18AlignedFloatBufferES2_jff($this, $aBuffer, $aDestBuffer, $aSamples, $aVolume0, $aVolume1) {
 $this = $this | 0;
 $aBuffer = $aBuffer | 0;
 $aDestBuffer = $aDestBuffer | 0;
 $aSamples = $aSamples | 0;
 $aVolume0 = +$aVolume0;
 $aVolume1 = +$aVolume1;
 var $10 = 0, $102 = 0.0, $103 = 0, $104 = 0.0, $107 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $18 = 0.0, $19 = 0, $2 = 0.0, $20 = 0.0, $23 = 0.0, $24 = 0, $25 = 0.0, $28 = 0.0, $29 = 0, $30 = 0.0, $33 = 0.0, $66 = 0.0, $70 = 0.0, $74 = 0.0, $78 = 0.0, $8 = 0, $84 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $92 = 0.0, $93 = 0, $94 = 0.0, $97 = 0.0, $98 = 0, $99 = 0.0, $d$023$us = 0, $d$116$us = 0, $d$212$us = 0, $d$38$us = 0, $i$014$us = 0, $i$16$us = 0, $j$021$us = 0, $j$110$us = 0, $v$013$us = 0.0, $v$15$us = 0.0, $d$116$us$looptemp = 0;
 $2 = ($aVolume1 - $aVolume0) / +($aSamples >>> 0);
 $8 = HEAP32[$this + 4144 >> 2] | 0;
 $9 = ($8 | 0) != 0;
 if (!(HEAP32[$this + 4160 >> 2] & 1)) {
  if (!$9) return;
  $84 = $aSamples >>> 2;
  $86 = HEAP32[$aBuffer >> 2] | 0;
  $87 = $this + 4168 | 0;
  $88 = HEAP32[$aDestBuffer >> 2] | 0;
  if (!$84) return;
  $89 = $84 << 2;
  $d$212$us = 0;
  $j$110$us = 0;
  do {
   $d$38$us = $d$212$us;
   $d$212$us = $89 + $d$212$us | 0;
   $i$16$us = 0;
   $v$15$us = $aVolume0;
   while (1) {
    $92 = $v$15$us * +HEAPF32[$86 + ($d$38$us << 2) >> 2];
    $93 = $d$38$us | 1;
    $94 = $2 + $v$15$us;
    $97 = $94 * +HEAPF32[$86 + ($93 << 2) >> 2];
    $98 = $d$38$us | 2;
    $99 = $2 + $94;
    $102 = $99 * +HEAPF32[$86 + ($98 << 2) >> 2];
    $103 = $d$38$us | 3;
    $104 = $2 + $99;
    $107 = $104 * +HEAPF32[$86 + ($103 << 2) >> 2];
    HEAPF32[$88 + ($d$38$us << 2) >> 2] = (!($92 <= -1.0) ? ($92 >= 1.0 ? 1.0 : $92) : -1.0) * +HEAPF32[$87 >> 2];
    HEAPF32[$88 + ($93 << 2) >> 2] = (!($97 <= -1.0) ? ($97 >= 1.0 ? 1.0 : $97) : -1.0) * +HEAPF32[$87 >> 2];
    HEAPF32[$88 + ($98 << 2) >> 2] = (!($102 <= -1.0) ? ($102 >= 1.0 ? 1.0 : $102) : -1.0) * +HEAPF32[$87 >> 2];
    HEAPF32[$88 + ($103 << 2) >> 2] = (!($107 <= -1.0) ? ($107 >= 1.0 ? 1.0 : $107) : -1.0) * +HEAPF32[$87 >> 2];
    $i$16$us = $i$16$us + 1 | 0;
    if (($i$16$us | 0) == ($84 | 0)) break; else {
     $d$38$us = $d$38$us + 4 | 0;
     $v$15$us = $2 + $104;
    }
   }
   $j$110$us = $j$110$us + 1 | 0;
  } while ($j$110$us >>> 0 < $8 >>> 0);
  return;
 }
 if (!$9) return;
 $10 = $aSamples >>> 2;
 $12 = HEAP32[$aBuffer >> 2] | 0;
 $13 = $this + 4168 | 0;
 $14 = HEAP32[$aDestBuffer >> 2] | 0;
 if (!$10) return;
 $15 = $10 << 2;
 $d$023$us = 0;
 $j$021$us = 0;
 do {
  $d$116$us = $d$023$us;
  $d$023$us = $15 + $d$023$us | 0;
  $i$014$us = 0;
  $v$013$us = $aVolume0;
  do {
   $18 = $v$013$us * +HEAPF32[$12 + ($d$116$us << 2) >> 2];
   $19 = $d$116$us | 1;
   $20 = $2 + $v$013$us;
   $23 = $20 * +HEAPF32[$12 + ($19 << 2) >> 2];
   $24 = $d$116$us | 2;
   $25 = $2 + $20;
   $28 = $25 * +HEAPF32[$12 + ($24 << 2) >> 2];
   $29 = $d$116$us | 3;
   $30 = $2 + $25;
   $33 = $30 * +HEAPF32[$12 + ($29 << 2) >> 2];
   $d$116$us$looptemp = $d$116$us;
   $d$116$us = $d$116$us + 4 | 0;
   $v$013$us = $2 + $30;
   if (!($18 <= -1.649999976158142)) if (!($18 >= 1.649999976158142)) $66 = $18 * .8700000047683716 - $18 * ($18 * ($18 * .10000000149011612)); else $66 = .9862874746322632; else $66 = -.9862874746322632;
   if (!($23 <= -1.649999976158142)) if (!($23 >= 1.649999976158142)) $70 = $23 * .8700000047683716 - $23 * ($23 * ($23 * .10000000149011612)); else $70 = .9862874746322632; else $70 = -.9862874746322632;
   if (!($28 <= -1.649999976158142)) if (!($28 >= 1.649999976158142)) $74 = $28 * .8700000047683716 - $28 * ($28 * ($28 * .10000000149011612)); else $74 = .9862874746322632; else $74 = -.9862874746322632;
   if (!($33 <= -1.649999976158142)) if (!($33 >= 1.649999976158142)) $78 = $33 * .8700000047683716 - $33 * ($33 * ($33 * .10000000149011612)); else $78 = .9862874746322632; else $78 = -.9862874746322632;
   HEAPF32[$14 + ($d$116$us$looptemp << 2) >> 2] = $66 * +HEAPF32[$13 >> 2];
   HEAPF32[$14 + ($19 << 2) >> 2] = $70 * +HEAPF32[$13 >> 2];
   HEAPF32[$14 + ($24 << 2) >> 2] = $74 * +HEAPF32[$13 >> 2];
   HEAPF32[$14 + ($29 << 2) >> 2] = $78 * +HEAPF32[$13 >> 2];
   $i$014$us = $i$014$us + 1 | 0;
  } while (($i$014$us | 0) != ($10 | 0));
  $j$021$us = $j$021$us + 1 | 0;
 } while ($j$021$us >>> 0 < $8 >>> 0);
 return;
}

function __ZL27stbtt__sort_edges_quicksortP11stbtt__edgei($p, $n) {
 $p = $p | 0;
 $n = $n | 0;
 var $$014 = 0, $$05 = 0, $$1 = 0, $$12 = 0, $$lcssa = 0, $$lcssa15 = 0, $$lcssa16 = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0.0, $11 = 0, $15 = 0, $16 = 0.0, $2 = 0, $20 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0.0, $4 = 0, $6 = 0.0, $8 = 0, $i$0 = 0, $i$0$lcssa = 0, $i$0$lcssa$lcssa = 0, $i$0$ph = 0, $j$0$ph = 0, $j$1 = 0, $j$1$lcssa = 0, $j$1$lcssa$lcssa = 0, $t = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $t = sp;
 if (($n | 0) <= 12) {
  STACKTOP = sp;
  return;
 }
 $$014 = $n;
 $$05 = $p;
 while (1) {
  $1 = $$014 >> 1;
  $2 = $$05 + 4 | 0;
  $3 = +HEAPF32[$2 >> 2];
  $4 = $$05 + ($1 * 20 | 0) | 0;
  $6 = +HEAPF32[$$05 + ($1 * 20 | 0) + 4 >> 2];
  $8 = $$014 + -1 | 0;
  $10 = +HEAPF32[$$05 + ($8 * 20 | 0) + 4 >> 2];
  $11 = $6 < $10;
  if ($3 < $6 ^ $11) {
   $15 = $$05 + (($3 < $10 ^ $11 ? $8 : 0) * 20 | 0) | 0;
   HEAP32[$t >> 2] = HEAP32[$15 >> 2];
   HEAP32[$t + 4 >> 2] = HEAP32[$15 + 4 >> 2];
   HEAP32[$t + 8 >> 2] = HEAP32[$15 + 8 >> 2];
   HEAP32[$t + 12 >> 2] = HEAP32[$15 + 12 >> 2];
   HEAP32[$t + 16 >> 2] = HEAP32[$15 + 16 >> 2];
   HEAP32[$15 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$15 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$15 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   HEAP32[$15 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
   HEAP32[$15 + 16 >> 2] = HEAP32[$4 + 16 >> 2];
   HEAP32[$4 >> 2] = HEAP32[$t >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$t + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$t + 8 >> 2];
   HEAP32[$4 + 12 >> 2] = HEAP32[$t + 12 >> 2];
   HEAP32[$4 + 16 >> 2] = HEAP32[$t + 16 >> 2];
   $$pre$phiZ2D = $4;
  } else $$pre$phiZ2D = $4;
  HEAP32[$t >> 2] = HEAP32[$$05 >> 2];
  HEAP32[$t + 4 >> 2] = HEAP32[$$05 + 4 >> 2];
  HEAP32[$t + 8 >> 2] = HEAP32[$$05 + 8 >> 2];
  HEAP32[$t + 12 >> 2] = HEAP32[$$05 + 12 >> 2];
  HEAP32[$t + 16 >> 2] = HEAP32[$$05 + 16 >> 2];
  HEAP32[$$05 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
  HEAP32[$$05 + 4 >> 2] = HEAP32[$$pre$phiZ2D + 4 >> 2];
  HEAP32[$$05 + 8 >> 2] = HEAP32[$$pre$phiZ2D + 8 >> 2];
  HEAP32[$$05 + 12 >> 2] = HEAP32[$$pre$phiZ2D + 12 >> 2];
  HEAP32[$$05 + 16 >> 2] = HEAP32[$$pre$phiZ2D + 16 >> 2];
  HEAP32[$$pre$phiZ2D >> 2] = HEAP32[$t >> 2];
  HEAP32[$$pre$phiZ2D + 4 >> 2] = HEAP32[$t + 4 >> 2];
  HEAP32[$$pre$phiZ2D + 8 >> 2] = HEAP32[$t + 8 >> 2];
  HEAP32[$$pre$phiZ2D + 12 >> 2] = HEAP32[$t + 12 >> 2];
  HEAP32[$$pre$phiZ2D + 16 >> 2] = HEAP32[$t + 16 >> 2];
  $i$0$ph = 1;
  $j$0$ph = $8;
  while (1) {
   $16 = +HEAPF32[$2 >> 2];
   $i$0 = $i$0$ph;
   while (1) {
    $20 = $i$0 + 1 | 0;
    if (+HEAPF32[$$05 + ($i$0 * 20 | 0) + 4 >> 2] < $16) $i$0 = $20; else {
     $$lcssa = $20;
     $i$0$lcssa = $i$0;
     break;
    }
   }
   $j$1 = $j$0$ph;
   while (1) {
    $24 = $j$1 + -1 | 0;
    if ($16 < +HEAPF32[$$05 + ($j$1 * 20 | 0) + 4 >> 2]) $j$1 = $24; else {
     $$lcssa15 = $24;
     $j$1$lcssa = $j$1;
     break;
    }
   }
   $25 = $$05 + ($i$0$lcssa * 20 | 0) | 0;
   if (($i$0$lcssa | 0) >= ($j$1$lcssa | 0)) {
    $$lcssa16 = $25;
    $i$0$lcssa$lcssa = $i$0$lcssa;
    $j$1$lcssa$lcssa = $j$1$lcssa;
    break;
   }
   $27 = $$05 + ($j$1$lcssa * 20 | 0) | 0;
   HEAP32[$t >> 2] = HEAP32[$25 >> 2];
   HEAP32[$t + 4 >> 2] = HEAP32[$25 + 4 >> 2];
   HEAP32[$t + 8 >> 2] = HEAP32[$25 + 8 >> 2];
   HEAP32[$t + 12 >> 2] = HEAP32[$25 + 12 >> 2];
   HEAP32[$t + 16 >> 2] = HEAP32[$25 + 16 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$27 >> 2];
   HEAP32[$25 + 4 >> 2] = HEAP32[$27 + 4 >> 2];
   HEAP32[$25 + 8 >> 2] = HEAP32[$27 + 8 >> 2];
   HEAP32[$25 + 12 >> 2] = HEAP32[$27 + 12 >> 2];
   HEAP32[$25 + 16 >> 2] = HEAP32[$27 + 16 >> 2];
   HEAP32[$27 >> 2] = HEAP32[$t >> 2];
   HEAP32[$27 + 4 >> 2] = HEAP32[$t + 4 >> 2];
   HEAP32[$27 + 8 >> 2] = HEAP32[$t + 8 >> 2];
   HEAP32[$27 + 12 >> 2] = HEAP32[$t + 12 >> 2];
   HEAP32[$27 + 16 >> 2] = HEAP32[$t + 16 >> 2];
   $i$0$ph = $$lcssa;
   $j$0$ph = $$lcssa15;
  }
  $28 = $$014 - $i$0$lcssa$lcssa | 0;
  if (($j$1$lcssa$lcssa | 0) < ($28 | 0)) {
   __ZL27stbtt__sort_edges_quicksortP11stbtt__edgei($$05, $j$1$lcssa$lcssa);
   $$1 = $$lcssa16;
   $$12 = $28;
  } else {
   __ZL27stbtt__sort_edges_quicksortP11stbtt__edgei($$lcssa16, $28);
   $$1 = $$05;
   $$12 = $j$1$lcssa$lcssa;
  }
  if (($$12 | 0) > 12) {
   $$014 = $$12;
   $$05 = $$1;
  } else break;
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol3URL5crackENS_6StringE($this, $urlString) {
 $this = $this | 0;
 $urlString = $urlString | 0;
 var $$ = 0, $$1 = 0, $$2 = 0, $$sink$in = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $17 = 0, $19 = 0, $30 = 0, $4 = 0, $45 = 0, $46 = 0, $47 = 0, $57 = 0, $58 = 0, $68 = 0, $69 = 0, $7 = 0, $9 = 0, $builder = 0, $leftEndIndex$0 = 0, $leftStartIndex$0 = 0, $pathEndIndex$1 = 0, $scevgep$i3 = 0, $vararg_buffer = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $0 = sp + 8 | 0;
 $builder = sp + 16 | 0;
 HEAP32[$this >> 2] = 0;
 $scevgep$i3 = $this + 4 | 0;
 dest = $scevgep$i3;
 stop = dest + 32 | 0;
 do {
  HEAP16[dest >> 1] = 65535;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 $1 = $this + 36 | 0;
 HEAP8[$1 >> 0] = 0;
 if (__ZN5Oryol2IO7IsValidEv() | 0) {
  __ZN5Oryol2IO14ResolveAssignsERKNS_6StringE($0, $urlString);
  __ZN5Oryol6StringaSEOS0_($urlString, $0);
  __ZN5Oryol6StringD2Ev($0);
 }
 if (!(__ZNK5Oryol6String7IsValidEv($urlString) | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol13StringBuilderC2Ev($builder);
 __ZN5Oryol13StringBuilder3SetERKNS_6StringE($builder, $urlString);
 __ZN5Oryol10StringAtomaSERKNS_6StringE($this, $urlString);
 HEAP16[$scevgep$i3 >> 1] = 0;
 $4 = __ZNK5Oryol13StringBuilder13FindSubStringEiiPKc($builder, 0, 8, 102067) | 0;
 HEAP16[$this + 6 >> 1] = $4;
 $7 = $4 << 16 >> 16;
 if (($7 | 0) == -1) {
  $9 = HEAP32[$this >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[(($9 | 0) == 0 ? 13684 : $9 + 12 | 0) >> 2];
  __ZN5Oryol3Log4WarnEPKcz(102071, $vararg_buffer);
  dest = $scevgep$i3;
  stop = dest + 32 | 0;
  do {
   HEAP16[dest >> 1] = 65535;
   dest = dest + 2 | 0;
  } while ((dest | 0) < (stop | 0));
  __ZN5Oryol13StringBuilderD2Ev($builder);
  STACKTOP = sp;
  return;
 }
 $12 = $7 + 3 | 0;
 $13 = __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($builder, $12, -1, 102111) | 0;
 if (($13 | 0) == -1) $leftEndIndex$0 = __ZNK5Oryol13StringBuilder6LengthEv($builder) | 0; else $leftEndIndex$0 = $13;
 do if (($12 | 0) != ($leftEndIndex$0 | 0)) {
  $17 = __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($builder, $12, $leftEndIndex$0, 102113) | 0;
  if (($17 | 0) == -1) $leftStartIndex$0 = $12; else {
   $19 = __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($builder, $12, $17, 102747) | 0;
   HEAP16[$this + 8 >> 1] = $12;
   if (($19 | 0) == -1) $$sink$in = $17; else {
    HEAP16[$this + 12 >> 1] = $19 + 1;
    HEAP16[$this + 14 >> 1] = $17;
    $$sink$in = $19;
   }
   HEAP16[$this + 10 >> 1] = $$sink$in;
   $leftStartIndex$0 = $17 + 1 | 0;
  }
  $30 = __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($builder, $leftStartIndex$0, $leftEndIndex$0, 102747) | 0;
  HEAP16[$this + 16 >> 1] = $leftStartIndex$0;
  if (($30 | 0) == -1) {
   HEAP16[$this + 18 >> 1] = $leftEndIndex$0;
   break;
  } else {
   HEAP16[$this + 18 >> 1] = $30;
   HEAP16[$this + 20 >> 1] = $30 + 1;
   HEAP16[$this + 22 >> 1] = $leftEndIndex$0;
   break;
  }
 } while (0);
 if (($leftEndIndex$0 | 0) != (__ZNK5Oryol13StringBuilder6LengthEv($builder) | 0)) {
  $45 = $leftEndIndex$0 + 1 | 0;
  $46 = __ZNK5Oryol13StringBuilder6LengthEv($builder) | 0;
  $47 = __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($builder, $45, $46, 102115) | 0;
  $$ = ($47 | 0) == -1 ? $46 : $47;
  if (($45 | 0) != ($$ | 0)) {
   HEAP16[$this + 24 >> 1] = $45;
   HEAP16[$this + 26 >> 1] = $$;
  }
  if (($$ | 0) != ($46 | 0)) {
   if ((__ZNK5Oryol13StringBuilder2AtEi($builder, $$) | 0) << 24 >> 24 == 63) {
    $57 = $$ + 1 | 0;
    $58 = __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($builder, $57, $46, 102118) | 0;
    $$1 = ($58 | 0) == -1 ? $46 : $58;
    if (($57 | 0) == ($$1 | 0)) $pathEndIndex$1 = $57; else {
     HEAP16[$this + 32 >> 1] = $57;
     HEAP16[$this + 34 >> 1] = $$1;
     $pathEndIndex$1 = $$1;
    }
   } else $pathEndIndex$1 = $$;
   if (($pathEndIndex$1 | 0) != ($46 | 0)) if ((__ZNK5Oryol13StringBuilder2AtEi($builder, $pathEndIndex$1) | 0) << 24 >> 24 == 35) {
    $68 = $pathEndIndex$1 + 1 | 0;
    $69 = __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($builder, $68, $46, 102120) | 0;
    $$2 = ($69 | 0) == -1 ? $46 : $69;
    if (($68 | 0) != ($$2 | 0)) {
     HEAP16[$this + 28 >> 1] = $68;
     HEAP16[$this + 30 >> 1] = $$2;
    }
   }
  }
 }
 HEAP8[$1 >> 0] = 1;
 __ZN5Oryol13StringBuilderD2Ev($builder);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv12inputMgrBaseD2Ev($this) {
 $this = $this | 0;
 var $$pre4$i$i$i$i = 0, $$pre4$i$i$i$i1 = 0, $$pre4$i$i$i$i12 = 0, $$pre5$i$i2$pre$phi$i$i11ZZZZ2D = 0, $$pre5$i$i2$pre$phi$i$i22ZZZZ2D = 0, $$pre5$i$i2$pre$phi$i$iZZZZ2D = 0, $12 = 0, $14 = 0, $16 = 0, $25 = 0, $3 = 0, $31 = 0, $40 = 0, $43 = 0, $45 = 0, $46 = 0, $49 = 0, $51 = 0, $53 = 0, $6 = 0, $62 = 0, $66 = 0, $69 = 0, $71 = 0, $72 = 0, $75 = 0, $77 = 0, $79 = 0, $8 = 0, $88 = 0, $9 = 0, $91 = 0, $i$01$i$i$i$i = 0, $i$01$i$i$i$i19 = 0, $i$01$i$i$i$i8 = 0;
 if (HEAP8[$this + 1408 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78040, 0, 78057, 18, 78124);
  _abort();
 }
 $3 = $this + 1352 | 0;
 HEAP32[$this + 1368 >> 2] = 0;
 HEAP32[$this + 1372 >> 2] = 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $$pre4$i$i$i$i1 = $this + 1360 | 0;
 if (!$6) $$pre5$i$i2$pre$phi$i$i11ZZZZ2D = $this + 1364 | 0; else {
  $8 = HEAP32[$$pre4$i$i$i$i1 >> 2] | 0;
  $9 = $this + 1364 | 0;
  if (($8 | 0) < (HEAP32[$9 >> 2] | 0)) {
   $14 = $6;
   $i$01$i$i$i$i8 = $8;
   while (1) {
    $16 = HEAP32[$14 + ($i$01$i$i$i$i8 << 5) + 24 >> 2] | 0;
    if (($16 | 0) == ($14 + ($i$01$i$i$i$i8 << 5) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$16 >> 2] | 0) + 16 >> 2] & 255]($16); else if ($16 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$16 >> 2] | 0) + 20 >> 2] & 255]($16);
    $25 = $i$01$i$i$i$i8 + 1 | 0;
    if (($25 | 0) >= (HEAP32[$9 >> 2] | 0)) break;
    $14 = HEAP32[$3 >> 2] | 0;
    $i$01$i$i$i$i8 = $25;
   }
   $12 = HEAP32[$3 >> 2] | 0;
  } else $12 = $6;
  __ZN5Oryol6Memory4FreeEPv($12);
  $$pre5$i$i2$pre$phi$i$i11ZZZZ2D = $9;
 }
 HEAP32[$3 >> 2] = 0;
 HEAP32[$this + 1356 >> 2] = 0;
 HEAP32[$$pre4$i$i$i$i1 >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i$i11ZZZZ2D >> 2] = 0;
 $31 = HEAP32[$this + 704 >> 2] | 0;
 if (($31 | 0) == ($this + 688 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$31 >> 2] | 0) + 16 >> 2] & 255]($31); else if ($31 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$31 >> 2] | 0) + 20 >> 2] & 255]($31);
 $40 = $this + 660 | 0;
 HEAP32[$this + 676 >> 2] = 0;
 HEAP32[$this + 680 >> 2] = 0;
 $43 = HEAP32[$40 >> 2] | 0;
 $$pre4$i$i$i$i12 = $this + 668 | 0;
 if (!$43) $$pre5$i$i2$pre$phi$i$i22ZZZZ2D = $this + 672 | 0; else {
  $45 = HEAP32[$$pre4$i$i$i$i12 >> 2] | 0;
  $46 = $this + 672 | 0;
  if (($45 | 0) < (HEAP32[$46 >> 2] | 0)) {
   $51 = $43;
   $i$01$i$i$i$i19 = $45;
   while (1) {
    $53 = HEAP32[$51 + ($i$01$i$i$i$i19 << 5) + 24 >> 2] | 0;
    if (($53 | 0) == ($51 + ($i$01$i$i$i$i19 << 5) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$53 >> 2] | 0) + 16 >> 2] & 255]($53); else if ($53 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$53 >> 2] | 0) + 20 >> 2] & 255]($53);
    $62 = $i$01$i$i$i$i19 + 1 | 0;
    if (($62 | 0) >= (HEAP32[$46 >> 2] | 0)) break;
    $51 = HEAP32[$40 >> 2] | 0;
    $i$01$i$i$i$i19 = $62;
   }
   $49 = HEAP32[$40 >> 2] | 0;
  } else $49 = $43;
  __ZN5Oryol6Memory4FreeEPv($49);
  $$pre5$i$i2$pre$phi$i$i22ZZZZ2D = $46;
 }
 HEAP32[$40 >> 2] = 0;
 HEAP32[$this + 664 >> 2] = 0;
 HEAP32[$$pre4$i$i$i$i12 >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i$i22ZZZZ2D >> 2] = 0;
 $66 = $this + 596 | 0;
 HEAP32[$this + 612 >> 2] = 0;
 HEAP32[$this + 616 >> 2] = 0;
 $69 = HEAP32[$66 >> 2] | 0;
 $$pre4$i$i$i$i = $this + 604 | 0;
 if (!$69) {
  $$pre5$i$i2$pre$phi$i$iZZZZ2D = $this + 608 | 0;
  $91 = $this + 600 | 0;
  HEAP32[$66 >> 2] = 0;
  HEAP32[$91 >> 2] = 0;
  HEAP32[$$pre4$i$i$i$i >> 2] = 0;
  HEAP32[$$pre5$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
  return;
 }
 $71 = HEAP32[$$pre4$i$i$i$i >> 2] | 0;
 $72 = $this + 608 | 0;
 if (($71 | 0) < (HEAP32[$72 >> 2] | 0)) {
  $77 = $69;
  $i$01$i$i$i$i = $71;
  while (1) {
   $79 = HEAP32[$77 + ($i$01$i$i$i$i << 5) + 24 >> 2] | 0;
   if (($79 | 0) == ($77 + ($i$01$i$i$i$i << 5) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$79 >> 2] | 0) + 16 >> 2] & 255]($79); else if ($79 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$79 >> 2] | 0) + 20 >> 2] & 255]($79);
   $88 = $i$01$i$i$i$i + 1 | 0;
   if (($88 | 0) >= (HEAP32[$72 >> 2] | 0)) break;
   $77 = HEAP32[$66 >> 2] | 0;
   $i$01$i$i$i$i = $88;
  }
  $75 = HEAP32[$66 >> 2] | 0;
 } else $75 = $69;
 __ZN5Oryol6Memory4FreeEPv($75);
 $$pre5$i$i2$pre$phi$i$iZZZZ2D = $72;
 $91 = $this + 600 | 0;
 HEAP32[$66 >> 2] = 0;
 HEAP32[$91 >> 2] = 0;
 HEAP32[$$pre4$i$i$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv16resourceRegistry3AddERKNS_7LocatorENS_2IdENS_13ResourceLabelE($this, $loc, $id, $label) {
 $this = $this | 0;
 $loc = $loc | 0;
 $id = $id | 0;
 $label = $label | 0;
 var $$0$i1$i = 0, $$0$i2$i = 0, $$0$ph$i$i$i$i$i = 0, $$0$ph$i$i$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa16 = 0, $$pre$phi8Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $10 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $30 = 0, $31 = 0, $36 = 0, $45 = 0, $50 = 0, $57 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $67 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $__len$0$i$i$i$i$i = 0, $__len$0$i$i$i$i$i$lcssa15 = 0, $__len$0$ph$i$i$i$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 111306, 53, 112153);
  _abort();
 }
 if ((HEAP32[$id + 4 >> 2] | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112251, 0, 111306, 54, 112153);
  _abort();
 }
 $6 = $this + 56 | 0;
 if (HEAP8[$this + 80 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 112264);
  _abort();
 }
 $10 = HEAP32[$6 >> 2] | 0;
 if (!$10) {
  $$0$i1$i = 0;
  $$0$i2$i = 0;
 } else {
  $$0$i1$i = $10 + (HEAP32[$this + 68 >> 2] << 4) | 0;
  $$0$i2$i = $10 + (HEAP32[$this + 64 >> 2] << 4) | 0;
 }
 $22 = $id;
 $24 = HEAP32[$22 >> 2] | 0;
 $27 = HEAP32[$22 + 4 >> 2] | 0;
 $$0$ph$i$i$i$i$i = $$0$i2$i;
 $__len$0$ph$i$i$i$i$i = $$0$i1$i - $$0$i2$i >> 4;
 L13 : while (1) {
  $__len$0$i$i$i$i$i = $__len$0$ph$i$i$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i$i$i) {
    $$0$ph$i$i$i$i$i$lcssa = $$0$ph$i$i$i$i$i;
    break L13;
   }
   $29 = ($__len$0$i$i$i$i$i | 0) / 2 | 0;
   $30 = $$0$ph$i$i$i$i$i + ($29 << 4) | 0;
   $31 = $30;
   $36 = HEAP32[$31 + 4 >> 2] | 0;
   if ($36 >>> 0 < $27 >>> 0 | (($36 | 0) == ($27 | 0) ? (HEAP32[$31 >> 2] | 0) >>> 0 < $24 >>> 0 : 0)) {
    $$lcssa = $29;
    $$lcssa16 = $30;
    $__len$0$i$i$i$i$i$lcssa15 = $__len$0$i$i$i$i$i;
    break;
   } else $__len$0$i$i$i$i$i = $29;
  }
  $$0$ph$i$i$i$i$i = $$lcssa16 + 16 | 0;
  $__len$0$ph$i$i$i$i$i = $__len$0$i$i$i$i$i$lcssa15 + -1 - $$lcssa | 0;
 }
 if (($$0$ph$i$i$i$i$i$lcssa | 0) != ($$0$i1$i | 0)) {
  $45 = $$0$ph$i$i$i$i$i$lcssa;
  $50 = HEAP32[$45 + 4 >> 2] | 0;
  if (!($27 >>> 0 < $50 >>> 0 | (($27 | 0) == ($50 | 0) ? $24 >>> 0 < (HEAP32[$45 >> 2] | 0) >>> 0 : 0))) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112356, 0, 111306, 55, 112153);
   _abort();
  }
 }
 __ZN5Oryol5ArrayINS_5_priv16resourceRegistry5EntryEE3AddIJRKNS_7LocatorERNS_2IdERNS_13ResourceLabelEEEEvDpOT_($this + 4 | 0, $loc, $id, $label);
 $57 = $loc + 4 | 0;
 if ((HEAP32[$57 >> 2] | 0) == -1) {
  $$pre$phi8Z2D = $this + 12 | 0;
  $$pre$phiZ2D = $this + 16 | 0;
  $71 = HEAP32[$$pre$phiZ2D >> 2] | 0;
  $72 = HEAP32[$$pre$phi8Z2D >> 2] | 0;
  $73 = $71 + -1 | 0;
  $74 = $73 - $72 | 0;
  $75 = $id;
  $76 = $75;
  $77 = HEAP32[$76 >> 2] | 0;
  $78 = $75 + 4 | 0;
  $79 = $78;
  $80 = HEAP32[$79 >> 2] | 0;
  $81 = $0;
  $82 = $81;
  HEAP32[$82 >> 2] = $77;
  $83 = $81 + 4 | 0;
  $84 = $83;
  HEAP32[$84 >> 2] = $80;
  $85 = $0 + 8 | 0;
  HEAP32[$85 >> 2] = $74;
  __ZN5Oryol3MapINS_2IdEiE3AddEONS_12KeyValuePairIS1_iEE($6, $0);
  STACKTOP = sp;
  return;
 }
 $60 = $this + 28 | 0;
 if (__ZNK5Oryol3MapINS_7LocatorEiE8ContainsERKS1_($60, $loc) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112984, 0, 111306, 59, 112153);
  _abort();
 }
 $62 = $this + 16 | 0;
 $64 = $this + 12 | 0;
 $67 = (HEAP32[$62 >> 2] | 0) + -1 - (HEAP32[$64 >> 2] | 0) | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($0, $loc);
 HEAP32[$0 + 4 >> 2] = HEAP32[$57 >> 2];
 HEAP32[$0 + 8 >> 2] = $67;
 __ZN5Oryol3MapINS_7LocatorEiE3AddEONS_12KeyValuePairIS1_iEE($60, $0);
 $$pre$phi8Z2D = $64;
 $$pre$phiZ2D = $62;
 $71 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 $72 = HEAP32[$$pre$phi8Z2D >> 2] | 0;
 $73 = $71 + -1 | 0;
 $74 = $73 - $72 | 0;
 $75 = $id;
 $76 = $75;
 $77 = HEAP32[$76 >> 2] | 0;
 $78 = $75 + 4 | 0;
 $79 = $78;
 $80 = HEAP32[$79 >> 2] | 0;
 $81 = $0;
 $82 = $81;
 HEAP32[$82 >> 2] = $77;
 $83 = $81 + 4 | 0;
 $84 = $83;
 HEAP32[$84 >> 2] = $80;
 $85 = $0 + 8 | 0;
 HEAP32[$85 >> 2] = $74;
 __ZN5Oryol3MapINS_2IdEiE3AddEONS_12KeyValuePairIS1_iEE($6, $0);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol11StaticArrayINS_11ShaderSetup17uniformBlockEntryELi8EEaSEOS3_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $10 = 0, $101 = 0, $106 = 0, $107 = 0, $11 = 0, $111 = 0, $112 = 0, $117 = 0, $122 = 0, $123 = 0, $127 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $15 = 0, $16 = 0, $21 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $37 = 0, $42 = 0, $43 = 0, $47 = 0, $48 = 0, $5 = 0, $53 = 0, $58 = 0, $59 = 0, $63 = 0, $64 = 0, $69 = 0, $74 = 0, $75 = 0, $79 = 0, $80 = 0, $85 = 0, $90 = 0, $91 = 0, $95 = 0, $96 = 0;
 if (($rhs | 0) == ($this | 0)) {
  $127 = $rhs + 8 | 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($127, $127) | 0;
  $128 = $rhs + 296 | 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($128, $128) | 0;
  $129 = $rhs + 584 | 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($129, $129) | 0;
  $130 = $rhs + 872 | 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($130, $130) | 0;
  $131 = $rhs + 1160 | 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($131, $131) | 0;
  $132 = $rhs + 1448 | 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($132, $132) | 0;
  $133 = $rhs + 1736 | 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($133, $133) | 0;
  $134 = $rhs + 2024 | 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($134, $134) | 0;
  return;
 } else {
  HEAP32[$this >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($this, $rhs);
  HEAP32[$rhs >> 2] = 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($this + 8 | 0, $rhs + 8 | 0) | 0;
  $5 = $rhs + 280 | 0;
  $10 = HEAP32[$5 + 4 >> 2] | 0;
  $11 = $this + 280 | 0;
  HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$11 + 4 >> 2] = $10;
  $15 = $this + 288 | 0;
  $16 = $rhs + 288 | 0;
  HEAP32[$15 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($15, $16);
  HEAP32[$16 >> 2] = 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($this + 296 | 0, $rhs + 296 | 0) | 0;
  $21 = $rhs + 568 | 0;
  $26 = HEAP32[$21 + 4 >> 2] | 0;
  $27 = $this + 568 | 0;
  HEAP32[$27 >> 2] = HEAP32[$21 >> 2];
  HEAP32[$27 + 4 >> 2] = $26;
  $31 = $this + 576 | 0;
  $32 = $rhs + 576 | 0;
  HEAP32[$31 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($31, $32);
  HEAP32[$32 >> 2] = 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($this + 584 | 0, $rhs + 584 | 0) | 0;
  $37 = $rhs + 856 | 0;
  $42 = HEAP32[$37 + 4 >> 2] | 0;
  $43 = $this + 856 | 0;
  HEAP32[$43 >> 2] = HEAP32[$37 >> 2];
  HEAP32[$43 + 4 >> 2] = $42;
  $47 = $this + 864 | 0;
  $48 = $rhs + 864 | 0;
  HEAP32[$47 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($47, $48);
  HEAP32[$48 >> 2] = 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($this + 872 | 0, $rhs + 872 | 0) | 0;
  $53 = $rhs + 1144 | 0;
  $58 = HEAP32[$53 + 4 >> 2] | 0;
  $59 = $this + 1144 | 0;
  HEAP32[$59 >> 2] = HEAP32[$53 >> 2];
  HEAP32[$59 + 4 >> 2] = $58;
  $63 = $this + 1152 | 0;
  $64 = $rhs + 1152 | 0;
  HEAP32[$63 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($63, $64);
  HEAP32[$64 >> 2] = 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($this + 1160 | 0, $rhs + 1160 | 0) | 0;
  $69 = $rhs + 1432 | 0;
  $74 = HEAP32[$69 + 4 >> 2] | 0;
  $75 = $this + 1432 | 0;
  HEAP32[$75 >> 2] = HEAP32[$69 >> 2];
  HEAP32[$75 + 4 >> 2] = $74;
  $79 = $this + 1440 | 0;
  $80 = $rhs + 1440 | 0;
  HEAP32[$79 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($79, $80);
  HEAP32[$80 >> 2] = 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($this + 1448 | 0, $rhs + 1448 | 0) | 0;
  $85 = $rhs + 1720 | 0;
  $90 = HEAP32[$85 + 4 >> 2] | 0;
  $91 = $this + 1720 | 0;
  HEAP32[$91 >> 2] = HEAP32[$85 >> 2];
  HEAP32[$91 + 4 >> 2] = $90;
  $95 = $this + 1728 | 0;
  $96 = $rhs + 1728 | 0;
  HEAP32[$95 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($95, $96);
  HEAP32[$96 >> 2] = 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($this + 1736 | 0, $rhs + 1736 | 0) | 0;
  $101 = $rhs + 2008 | 0;
  $106 = HEAP32[$101 + 4 >> 2] | 0;
  $107 = $this + 2008 | 0;
  HEAP32[$107 >> 2] = HEAP32[$101 >> 2];
  HEAP32[$107 + 4 >> 2] = $106;
  $111 = $this + 2016 | 0;
  $112 = $rhs + 2016 | 0;
  HEAP32[$111 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($111, $112);
  HEAP32[$112 >> 2] = 0;
  __ZN5Oryol18UniformBlockLayoutaSEOS0_($this + 2024 | 0, $rhs + 2024 | 0) | 0;
  $117 = $rhs + 2296 | 0;
  $122 = HEAP32[$117 + 4 >> 2] | 0;
  $123 = $this + 2296 | 0;
  HEAP32[$123 >> 2] = HEAP32[$117 >> 2];
  HEAP32[$123 + 4 >> 2] = $122;
  return;
 }
}

function __ZN5Oryol5_priv13elementBufferINS0_7textureEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $20 = 0, $25 = 0, $26 = 0, $32 = 0, $37 = 0, $38 = 0, $4 = 0, $46 = 0, $51 = 0, $52 = 0, $56 = 0, $57 = 0, $6 = 0, $65 = 0, $70 = 0, $71 = 0, $8 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $9 = 0, $97 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0, dest = 0, src = 0, stop = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 50422);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 50422);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 776 | 0) | 0;
 $13 = $12 + ($newStart * 776 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 50422);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 776 | 0) | 0;
  while (1) {
   $20 = $src$01;
   $25 = HEAP32[$20 + 4 >> 2] | 0;
   $26 = $dst$02;
   HEAP32[$26 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$26 + 4 >> 2] = $25;
   $32 = $src$01 + 8 | 0;
   $37 = HEAP32[$32 + 4 >> 2] | 0;
   $38 = $dst$02 + 8 | 0;
   HEAP32[$38 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$38 + 4 >> 2] = $37;
   dest = $dst$02 + 16 | 0;
   src = $src$01 + 16 | 0;
   stop = dest + 36 | 0;
   do {
    HEAP32[dest >> 2] = HEAP32[src >> 2];
    dest = dest + 4 | 0;
    src = src + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   $46 = $src$01 + 56 | 0;
   $51 = HEAP32[$46 + 4 >> 2] | 0;
   $52 = $dst$02 + 56 | 0;
   HEAP32[$52 >> 2] = HEAP32[$46 >> 2];
   HEAP32[$52 + 4 >> 2] = $51;
   $56 = $dst$02 + 64 | 0;
   $57 = $src$01 + 64 | 0;
   HEAP32[$56 >> 2] = HEAP32[$57 >> 2];
   HEAP32[$56 + 4 >> 2] = HEAP32[$57 + 4 >> 2];
   HEAP32[$56 + 8 >> 2] = HEAP32[$57 + 8 >> 2];
   HEAP32[$56 + 12 >> 2] = HEAP32[$57 + 12 >> 2];
   HEAP32[$56 + 16 >> 2] = HEAP32[$57 + 16 >> 2];
   HEAP32[$56 + 20 >> 2] = HEAP32[$57 + 20 >> 2];
   HEAP32[$56 + 24 >> 2] = HEAP32[$57 + 24 >> 2];
   __ZN5Oryol10StringAtom4copyERKS0_($dst$02 + 92 | 0, $src$01 + 92 | 0);
   HEAP32[$dst$02 + 96 >> 2] = HEAP32[$src$01 + 96 >> 2];
   $65 = $src$01 + 104 | 0;
   $70 = HEAP32[$65 + 4 >> 2] | 0;
   $71 = $dst$02 + 104 | 0;
   HEAP32[$71 >> 2] = HEAP32[$65 >> 2];
   HEAP32[$71 + 4 >> 2] = $70;
   __ZN5Oryol14ImageDataAttrsC2ERKS0_($dst$02 + 112 | 0, $src$01 + 112 | 0);
   HEAP8[$dst$02 + 696 >> 0] = HEAP8[$src$01 + 696 >> 0] | 0;
   __ZN5Oryol10StringAtom4copyERKS0_($dst$02 + 704 | 0, $src$01 + 704 | 0);
   HEAP32[$dst$02 + 708 >> 2] = HEAP32[$src$01 + 708 >> 2];
   $85 = $dst$02 + 712 | 0;
   $86 = $src$01 + 712 | 0;
   HEAP32[$85 >> 2] = HEAP32[$86 >> 2];
   HEAP32[$85 + 4 >> 2] = HEAP32[$86 + 4 >> 2];
   HEAP32[$85 + 8 >> 2] = HEAP32[$86 + 8 >> 2];
   HEAP32[$85 + 12 >> 2] = HEAP32[$86 + 12 >> 2];
   HEAP32[$85 + 16 >> 2] = HEAP32[$86 + 16 >> 2];
   HEAP32[$85 + 20 >> 2] = HEAP32[$86 + 20 >> 2];
   HEAP32[$85 + 24 >> 2] = HEAP32[$86 + 24 >> 2];
   HEAP32[$85 + 28 >> 2] = HEAP32[$86 + 28 >> 2];
   HEAP16[$85 + 32 >> 1] = HEAP16[$86 + 32 >> 1] | 0;
   HEAP8[$85 + 34 >> 0] = HEAP8[$86 + 34 >> 0] | 0;
   $87 = $dst$02 + 748 | 0;
   $88 = $src$01 + 748 | 0;
   HEAP32[$87 >> 2] = HEAP32[$88 >> 2];
   HEAP32[$87 + 4 >> 2] = HEAP32[$88 + 4 >> 2];
   HEAP32[$87 + 8 >> 2] = HEAP32[$88 + 8 >> 2];
   HEAP32[$87 + 12 >> 2] = HEAP32[$88 + 12 >> 2];
   HEAP16[$87 + 16 >> 1] = HEAP16[$88 + 16 >> 1] | 0;
   HEAP32[$dst$02 + 768 >> 2] = HEAP32[$src$01 + 768 >> 2];
   HEAP32[$dst$02 + 772 >> 2] = HEAP32[$src$01 + 772 >> 2];
   $dst$02 = $dst$02 + 776 | 0;
   __ZN5Oryol5_priv9glTextureD2Ev($src$01);
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else $src$01 = $src$01 + 776 | 0;
  }
 }
 $97 = HEAP32[$this >> 2] | 0;
 if ($97 | 0) __ZN5Oryol6Memory4FreeEPv($97);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN4yakc6memory11unmap_layerEi($this, $layer) {
 $this = $this | 0;
 $layer = $layer | 0;
 var $65 = 0, $72 = 0, $73 = 0, $layer_index$03$lcssa$i = 0, $page_index$04$i = 0, label = 0;
 if ($layer >>> 0 >= 4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15288, 0, 15325, 156, 15369);
  _abort();
 }
 HEAP32[$this + ($layer << 8) >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 4 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 8 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 12 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 16 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 20 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 24 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 28 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 32 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 36 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 40 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 44 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 48 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 52 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 56 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 60 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 64 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 68 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 72 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 76 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 80 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 84 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 88 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 92 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 96 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 100 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 104 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 108 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 112 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 116 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 120 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 124 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 128 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 132 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 136 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 140 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 144 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 148 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 152 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 156 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 160 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 164 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 168 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 172 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 176 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 180 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 184 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 188 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 192 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 196 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 200 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 204 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 208 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 212 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 216 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 220 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 224 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 228 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 232 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 236 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 240 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 244 >> 0] = 0;
 HEAP32[$this + ($layer << 8) + 248 >> 2] = 0;
 HEAP8[$this + ($layer << 8) + 252 >> 0] = 0;
 $65 = $this + 1280 | 0;
 $page_index$04$i = 0;
 do {
  if (!(HEAP32[$this + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 256 + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 512 + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 768 + ($page_index$04$i << 3) >> 2] | 0)) {
   HEAP32[$this + 1024 + ($page_index$04$i << 3) >> 2] = $65;
   HEAP8[$this + 1024 + ($page_index$04$i << 3) + 4 >> 0] = 0;
  } else {
   $layer_index$03$lcssa$i = 3;
   label = 6;
  } else {
   $layer_index$03$lcssa$i = 2;
   label = 6;
  } else {
   $layer_index$03$lcssa$i = 1;
   label = 6;
  } else {
   $layer_index$03$lcssa$i = 0;
   label = 6;
  }
  if ((label | 0) == 6) {
   label = 0;
   $72 = $this + 1024 + ($page_index$04$i << 3) | 0;
   $73 = $this + ($layer_index$03$lcssa$i << 8) + ($page_index$04$i << 3) | 0;
   HEAP32[$72 >> 2] = HEAP32[$73 >> 2];
   HEAP8[$72 + 4 >> 0] = HEAP8[$73 + 4 >> 0] | 0;
  }
  $page_index$04$i = $page_index$04$i + 1 | 0;
 } while (($page_index$04$i | 0) != 32);
 return;
}

function __ZN6SoLoud6Soloud4playERNS_11AudioSourceEffbj($this, $aSound, $aVolume, $aPan, $aPaused, $aBus) {
 $this = $this | 0;
 $aSound = $aSound | 0;
 $aVolume = +$aVolume;
 $aPan = +$aPan;
 $aPaused = $aPaused | 0;
 $aBus = $aBus | 0;
 var $$0 = 0, $102 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $110 = 0, $118 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $25 = 0, $29 = 0, $32 = 0, $39 = 0, $43 = 0, $47 = 0, $51 = 0, $55 = 0, $59 = 0, $63 = 0, $67 = 0, $71 = 0, $75 = 0, $79 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, $91 = 0, $95 = 0, $99 = 0;
 if (HEAP32[$aSound + 4 >> 2] & 2 | 0) __ZN6SoLoud11AudioSource4stopEv($aSound);
 HEAP32[$aSound + 76 >> 2] = $this;
 $8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$aSound >> 2] | 0) + 12 >> 2] & 63]($aSound) | 0;
 __ZN6SoLoud6Soloud14lockAudioMutexEv($this);
 $9 = __ZN6SoLoud6Soloud13findFreeVoiceEv($this) | 0;
 if (($9 | 0) < 0) {
  __ZN6SoLoud6Soloud16unlockAudioMutexEv($this);
  if (!$8) {
   $$0 = 7;
   return $$0 | 0;
  }
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8 >> 2] | 0) + 4 >> 2] & 255]($8);
  $$0 = 7;
  return $$0 | 0;
 }
 $15 = $aSound + 20 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if (!$16) {
  $18 = $this + 4176 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  HEAP32[$15 >> 2] = $19;
  HEAP32[$18 >> 2] = $19 + 1;
  $23 = $19;
 } else $23 = $16;
 $21 = $this + 44 + ($9 << 2) | 0;
 HEAP32[$21 >> 2] = $8;
 HEAP32[$8 + 348 >> 2] = $23;
 HEAP32[$8 + 352 >> 2] = $aBus;
 $25 = $this + 4172 | 0;
 __ZN6SoLoud19AudioSourceInstance4initERNS_11AudioSourceEi($8, $aSound, HEAP32[$25 >> 2] | 0);
 __ZN6SoLoud25AudioSourceInstance3dData4initERNS_11AudioSourceE($this + 7508 + ($9 * 96 | 0) | 0, $aSound);
 $29 = (HEAP32[$25 >> 2] | 0) + 1 | 0;
 HEAP32[$25 >> 2] = ($29 | 0) == 1048575 ? 0 : $29;
 if ($aPaused) {
  $32 = (HEAP32[$21 >> 2] | 0) + 12 | 0;
  HEAP32[$32 >> 2] = HEAP32[$32 >> 2] | 4;
 }
 __ZN6SoLoud6Soloud11setVoicePanEjf($this, $9, $aPan);
 if ($aVolume < 0.0) __ZN6SoLoud6Soloud14setVoiceVolumeEjf($this, $9, +HEAPF32[$aSound + 12 >> 2]); else __ZN6SoLoud6Soloud14setVoiceVolumeEjf($this, $9, $aVolume);
 __ZN6SoLoud6Soloud25setVoiceRelativePlaySpeedEjf($this, $9, 1.0) | 0;
 $39 = HEAP32[$aSound + 44 >> 2] | 0;
 if ($39 | 0) {
  $43 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$39 >> 2] >> 2] & 63]($39) | 0;
  HEAP32[(HEAP32[$21 >> 2] | 0) + 356 >> 2] = $43;
 }
 $47 = HEAP32[$aSound + 48 >> 2] | 0;
 if ($47 | 0) {
  $51 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$47 >> 2] >> 2] & 63]($47) | 0;
  HEAP32[(HEAP32[$21 >> 2] | 0) + 360 >> 2] = $51;
 }
 $55 = HEAP32[$aSound + 52 >> 2] | 0;
 if ($55 | 0) {
  $59 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$55 >> 2] >> 2] & 63]($55) | 0;
  HEAP32[(HEAP32[$21 >> 2] | 0) + 364 >> 2] = $59;
 }
 $63 = HEAP32[$aSound + 56 >> 2] | 0;
 if ($63 | 0) {
  $67 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$63 >> 2] >> 2] & 63]($63) | 0;
  HEAP32[(HEAP32[$21 >> 2] | 0) + 368 >> 2] = $67;
 }
 $71 = HEAP32[$aSound + 60 >> 2] | 0;
 if ($71 | 0) {
  $75 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$71 >> 2] >> 2] & 63]($71) | 0;
  HEAP32[(HEAP32[$21 >> 2] | 0) + 372 >> 2] = $75;
 }
 $79 = HEAP32[$aSound + 64 >> 2] | 0;
 if ($79 | 0) {
  $83 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$79 >> 2] >> 2] & 63]($79) | 0;
  HEAP32[(HEAP32[$21 >> 2] | 0) + 376 >> 2] = $83;
 }
 $87 = HEAP32[$aSound + 68 >> 2] | 0;
 if ($87 | 0) {
  $91 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$87 >> 2] >> 2] & 63]($87) | 0;
  HEAP32[(HEAP32[$21 >> 2] | 0) + 380 >> 2] = $91;
 }
 $95 = HEAP32[$aSound + 72 >> 2] | 0;
 if ($95 | 0) {
  $99 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$95 >> 2] >> 2] & 63]($95) | 0;
  HEAP32[(HEAP32[$21 >> 2] | 0) + 384 >> 2] = $99;
 }
 $102 = HEAP32[$21 >> 2] | 0;
 $104 = HEAP32[$102 + 60 >> 2] | 0;
 $105 = $104 << 9;
 $106 = $105 >>> 0 > 1073741823 ? -1 : $105 << 2;
 $107 = __Znaj($106) | 0;
 HEAP32[HEAP32[$102 + 388 >> 2] >> 2] = $107;
 $110 = __Znaj($106) | 0;
 HEAP32[HEAP32[(HEAP32[$21 >> 2] | 0) + 392 >> 2] >> 2] = $110;
 $118 = $104 << 11;
 _memset(HEAP32[HEAP32[(HEAP32[$21 >> 2] | 0) + 388 >> 2] >> 2] | 0, 0, $118 | 0) | 0;
 _memset(HEAP32[HEAP32[(HEAP32[$21 >> 2] | 0) + 392 >> 2] >> 2] | 0, 0, $118 | 0) | 0;
 __ZN6SoLoud6Soloud16unlockAudioMutexEv($this);
 $$0 = __ZNK6SoLoud6Soloud18getHandleFromVoiceEj($this, $9) | 0;
 return $$0 | 0;
}

function __ZN11ImFontAtlas7AddFontEPK12ImFontConfig($this, $font_cfg) {
 $this = $this | 0;
 $font_cfg = $font_cfg | 0;
 var $100 = 0, $102 = 0, $11 = 0, $12 = 0, $18 = 0, $21 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $34 = 0, $35 = 0, $38 = 0, $39 = 0, $45 = 0, $49 = 0, $50 = 0, $51 = 0, $54 = 0, $59 = 0, $60 = 0, $63 = 0, $64 = 0, $70 = 0, $71 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $82 = 0, $87 = 0, $90 = 0, $92 = 0, $96 = 0, $97 = 0, $99 = 0, dest = 0, src = 0, stop = 0;
 if (!(HEAP32[$font_cfg >> 2] | 0)) ___assert_fail(139838, 127372, 1093, 139893);
 if ((HEAP32[$font_cfg + 4 >> 2] | 0) <= 0) ___assert_fail(139838, 127372, 1093, 139893);
 if (!(+HEAPF32[$font_cfg + 16 >> 2] > 0.0)) ___assert_fail(139901, 127372, 1094, 139893);
 if (!(HEAP8[$font_cfg + 44 >> 0] | 0)) {
  $11 = __ZN5ImGui8MemAllocEj(84) | 0;
  $12 = $11;
  HEAP32[$11 + 44 >> 2] = 0;
  HEAP32[$11 + 40 >> 2] = 0;
  HEAP32[$11 + 48 >> 2] = 0;
  $18 = $11 + 60 | 0;
  HEAP32[$18 >> 2] = 0;
  HEAP32[$18 + 4 >> 2] = 0;
  HEAP32[$18 + 8 >> 2] = 0;
  HEAP32[$18 + 12 >> 2] = 0;
  HEAP32[$18 + 16 >> 2] = 0;
  HEAP32[$18 + 20 >> 2] = 0;
  HEAPF32[$11 + 4 >> 2] = 1.0;
  HEAP16[$11 + 16 >> 1] = 63;
  HEAPF32[$11 >> 2] = 0.0;
  HEAP32[$11 + 8 >> 2] = 0;
  HEAP32[$11 + 12 >> 2] = 1065353216;
  $21 = $11 + 20 | 0;
  HEAP32[$21 >> 2] = 0;
  HEAP32[$21 + 4 >> 2] = 0;
  HEAP32[$21 + 8 >> 2] = 0;
  HEAP32[$21 + 12 >> 2] = 0;
  HEAP32[$21 + 16 >> 2] = 0;
  HEAP32[$11 + 52 >> 2] = 0;
  HEAPF32[$11 + 56 >> 2] = 0.0;
  $24 = $this + 32 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  $26 = $this + 36 | 0;
  if (($25 | 0) == (HEAP32[$26 >> 2] | 0)) {
   $29 = $25 + 1 | 0;
   if (!$25) $34 = 8; else $34 = (($25 | 0) / 2 | 0) + $25 | 0;
   $35 = ($34 | 0) > ($29 | 0) ? $34 : $29;
   if (($25 | 0) < ($35 | 0)) {
    $38 = __ZN5ImGui8MemAllocEj($35 << 2) | 0;
    $39 = $this + 40 | 0;
    _memcpy($38 | 0, HEAP32[$39 >> 2] | 0, HEAP32[$24 >> 2] << 2 | 0) | 0;
    __ZN5ImGui7MemFreeEPv(HEAP32[$39 >> 2] | 0);
    HEAP32[$39 >> 2] = $38;
    HEAP32[$26 >> 2] = $35;
    $45 = HEAP32[$24 >> 2] | 0;
   } else $45 = $25;
  } else $45 = $25;
  HEAP32[$24 >> 2] = $45 + 1;
  HEAP32[(HEAP32[$this + 40 >> 2] | 0) + ($45 << 2) >> 2] = $12;
 }
 $49 = $this + 44 | 0;
 $50 = HEAP32[$49 >> 2] | 0;
 $51 = $this + 48 | 0;
 if (($50 | 0) == (HEAP32[$51 >> 2] | 0)) {
  $54 = $50 + 1 | 0;
  if (!$50) $59 = 8; else $59 = (($50 | 0) / 2 | 0) + $50 | 0;
  $60 = ($59 | 0) > ($54 | 0) ? $59 : $54;
  if (($50 | 0) < ($60 | 0)) {
   $63 = __ZN5ImGui8MemAllocEj($60 * 84 | 0) | 0;
   $64 = $this + 52 | 0;
   _memcpy($63 | 0, HEAP32[$64 >> 2] | 0, (HEAP32[$49 >> 2] | 0) * 84 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$64 >> 2] | 0);
   HEAP32[$64 >> 2] = $63;
   HEAP32[$51 >> 2] = $60;
   $70 = HEAP32[$49 >> 2] | 0;
  } else $70 = $50;
 } else $70 = $50;
 HEAP32[$49 >> 2] = $70 + 1;
 $71 = $this + 52 | 0;
 dest = (HEAP32[$71 >> 2] | 0) + ($70 * 84 | 0) | 0;
 src = $font_cfg;
 stop = dest + 84 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $74 = HEAP32[$49 >> 2] | 0;
 if (($74 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $76 = $74 + -1 | 0;
 $77 = HEAP32[$71 >> 2] | 0;
 $78 = $this + 32 | 0;
 $79 = HEAP32[$78 >> 2] | 0;
 if (($79 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $82 = $this + 40 | 0;
 HEAP32[$77 + ($76 * 84 | 0) + 80 >> 2] = HEAP32[(HEAP32[$82 >> 2] | 0) + ($79 + -1 << 2) >> 2];
 $87 = $77 + ($76 * 84 | 0) + 8 | 0;
 if (!(HEAP8[$87 >> 0] | 0)) {
  $90 = $77 + ($76 * 84 | 0) + 4 | 0;
  $92 = __ZN5ImGui8MemAllocEj(HEAP32[$90 >> 2] | 0) | 0;
  HEAP32[$77 + ($76 * 84 | 0) >> 2] = $92;
  HEAP8[$87 >> 0] = 1;
  _memcpy($92 | 0, HEAP32[$font_cfg >> 2] | 0, HEAP32[$90 >> 2] | 0) | 0;
 }
 $96 = $this + 4 | 0;
 $97 = HEAP32[$96 >> 2] | 0;
 if ($97 | 0) __ZN5ImGui7MemFreeEPv($97);
 $99 = $this + 8 | 0;
 $100 = HEAP32[$99 >> 2] | 0;
 if ($100 | 0) __ZN5ImGui7MemFreeEPv($100);
 HEAP32[$96 >> 2] = 0;
 HEAP32[$99 >> 2] = 0;
 $102 = HEAP32[$78 >> 2] | 0;
 if (($102 | 0) > 0) return HEAP32[(HEAP32[$82 >> 2] | 0) + ($102 + -1 << 2) >> 2] | 0; else ___assert_fail(127436, 127226, 815, 127445);
 return 0;
}

function __ZN12DisasmWindow15drawMainContentERKN4yakc4kc85Eti($this, $kc, $start_addr, $num_lines) {
 $this = $this | 0;
 $kc = $kc | 0;
 $start_addr = $start_addr | 0;
 $num_lines = $num_lines | 0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $10 = 0.0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0.0, $2 = 0, $21 = 0, $26 = 0.0, $27 = 0.0, $3 = 0, $32 = 0, $34 = 0, $39 = 0.0, $49 = 0, $5 = 0.0, $51 = 0.0, $53 = 0, $65 = 0, $9 = 0.0, $clipper = 0, $cur_addr$0$lcssa = 0, $cur_addr$08 = 0, $cur_addr$14 = 0, $cur_addr$2$lcssa = 0, $cur_addr$21 = 0, $disasm = 0, $line_i$07 = 0, $line_i1$03 = 0, $n$02 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 136 | 0;
 $1 = sp + 112 | 0;
 $2 = sp + 32 | 0;
 $3 = sp + 24 | 0;
 $clipper = sp + 120 | 0;
 $disasm = sp + 40 | 0;
 $5 = -+__ZN5ImGui29GetItemsLineHeightWithSpacingEv();
 HEAPF32[$0 >> 2] = 0.0;
 HEAPF32[$0 + 4 >> 2] = $5;
 __ZN5ImGui10BeginChildEPKcRK6ImVec2bi(35651, $0, 0, 0) | 0;
 HEAPF32[$1 >> 2] = 0.0;
 HEAPF32[$1 + 4 >> 2] = 0.0;
 __ZN5ImGui12PushStyleVarEiRK6ImVec2(5, $1);
 HEAPF32[$2 >> 2] = 0.0;
 HEAPF32[$2 + 4 >> 2] = 0.0;
 __ZN5ImGui12PushStyleVarEiRK6ImVec2(7, $2);
 $9 = +__ZN5ImGui17GetTextLineHeightEv();
 __ZN5ImGui12CalcTextSizeEPKcS1_bf($3, 36702, 0, 0, -1.0);
 $10 = +HEAPF32[$3 >> 2];
 $11 = $10 * 3.0;
 $12 = $clipper + 4 | 0;
 HEAP32[$12 >> 2] = $num_lines;
 HEAPF32[$clipper >> 2] = $9;
 $13 = $clipper + 8 | 0;
 $14 = $clipper + 12 | 0;
 __ZN5ImGui16CalcListClippingEifPiS0_($num_lines, $9, $13, $14);
 $15 = +__ZN5ImGui13GetCursorPosYEv();
 __ZN5ImGui13SetCursorPosYEf($15 + +(HEAP32[$13 >> 2] | 0) * +HEAPF32[$clipper >> 2]);
 __ZN6DisasmC2Ev($disasm);
 $21 = HEAP32[$13 >> 2] | 0;
 if (($num_lines | 0) > 0 & ($21 | 0) > 0) {
  $cur_addr$08 = $start_addr;
  $line_i$07 = 0;
  while (1) {
   $32 = ((__ZN6Disasm11DisassembleERKN4yakc4kc85Et($disasm, $kc, $cur_addr$08) | 0) & 65535) + ($cur_addr$08 & 65535) & 65535;
   $line_i$07 = $line_i$07 + 1 | 0;
   $34 = HEAP32[$13 >> 2] | 0;
   if (!(($line_i$07 | 0) < ($num_lines | 0) & ($line_i$07 | 0) < ($34 | 0))) {
    $$lcssa = $34;
    $cur_addr$0$lcssa = $32;
    break;
   } else $cur_addr$08 = $32;
  }
 } else {
  $$lcssa = $21;
  $cur_addr$0$lcssa = $start_addr;
 }
 if (($$lcssa | 0) < (HEAP32[$14 >> 2] | 0)) {
  $26 = $11 * 4.0;
  $27 = $10 * 2.0;
  $cur_addr$14 = $cur_addr$0$lcssa;
  $line_i1$03 = $$lcssa;
  while (1) {
   $49 = __ZN6Disasm11DisassembleERKN4yakc4kc85Et($disasm, $kc, $cur_addr$14) | 0;
   HEAP32[$vararg_buffer >> 2] = $cur_addr$14 & 65535;
   __ZN5ImGui4TextEPKcz(35718, $vararg_buffer);
   __ZN5ImGui8SameLineEff(0.0, -1.0);
   $51 = +__ZN5ImGui13GetCursorPosXEv();
   if (!($49 << 16 >> 16)) $cur_addr$2$lcssa = $cur_addr$14; else {
    $53 = $49 & 65535;
    $cur_addr$21 = $cur_addr$14;
    $n$02 = 0;
    while (1) {
     __ZN5ImGui8SameLineEff($51 + $11 * +($n$02 | 0), -1.0);
     $65 = $cur_addr$21 & 65535;
     HEAP32[$vararg_buffer4 >> 2] = HEAPU8[(HEAP32[$kc + 66932 + ($65 >>> 11 << 3) >> 2] | 0) + ($65 & 2047) >> 0];
     __ZN5ImGui4TextEPKcz(35725, $vararg_buffer4);
     $n$02 = $n$02 + 1 | 0;
     if (($n$02 | 0) == ($53 | 0)) break; else $cur_addr$21 = $cur_addr$21 + 1 << 16 >> 16;
    }
    $cur_addr$2$lcssa = $49 + $cur_addr$14 << 16 >> 16;
   }
   __ZN5ImGui8SameLineEff($27 + ($26 + $51), -1.0);
   HEAP32[$vararg_buffer1 >> 2] = __ZNK6Disasm6ResultEv($disasm) | 0;
   __ZN5ImGui4TextEPKcz(124291, $vararg_buffer1);
   $line_i1$03 = $line_i1$03 + 1 | 0;
   if (($line_i1$03 | 0) >= (HEAP32[$14 >> 2] | 0)) break; else $cur_addr$14 = $cur_addr$2$lcssa;
  }
 }
 if ((HEAP32[$12 >> 2] | 0) <= -1) ___assert_fail(35663, 127226, 1019, 35679);
 $39 = +__ZN5ImGui13GetCursorPosYEv();
 __ZN5ImGui13SetCursorPosYEf($39 + +HEAPF32[$clipper >> 2] * +((HEAP32[$12 >> 2] | 0) - (HEAP32[$14 >> 2] | 0) | 0));
 HEAP32[$12 >> 2] = -1;
 __ZN5ImGui11PopStyleVarEi(2);
 __ZN5ImGui8EndChildEv();
 if ((HEAP32[$12 >> 2] | 0) == -1) {
  STACKTOP = sp;
  return;
 } else ___assert_fail(35683, 127226, 1007, 35700);
}

function __ZN5Oryol3MapINS_7LocatorEiE5EraseERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$i4 = 0, $$0$i6 = 0, $$0$ph$i$i$i = 0, $$0$ph$lcssa7$i$i$i = 0, $$0$ph$us$i$i$i = 0, $$lcssa = 0, $$lcssa58 = 0, $$lcssa60 = 0, $$pre$i$i$i$i$i$i$i = 0, $$pre27 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $24 = 0, $25 = 0, $34 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $53 = 0, $54 = 0, $56 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa56 = 0, $__len$0$ph$i$i$i = 0, $__len$0$ph$us$i$i$i = 0, $__len$0$us$us$i$i$i = 0, $__len$0$us$us$i$i$i$lcssa55 = 0, label = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = ($0 | 0) == 0;
 if ($1) {
  $$0$i1 = 0;
  $$0$i6 = 0;
 } else {
  $$0$i1 = $0 + ((HEAP32[$this + 12 >> 2] | 0) * 12 | 0) | 0;
  $$0$i6 = $0 + ((HEAP32[$this + 8 >> 2] | 0) * 12 | 0) | 0;
 }
 $10 = ($$0$i1 - $$0$i6 | 0) / 12 | 0;
 $11 = $key + 4 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = HEAP32[$key >> 2] | 0;
 L4 : do if (!$13) {
  $$0$ph$us$i$i$i = $$0$i6;
  $__len$0$ph$us$i$i$i = $10;
  while (1) {
   $__len$0$us$us$i$i$i = $__len$0$ph$us$i$i$i;
   while (1) {
    if (!$__len$0$us$us$i$i$i) {
     $$0$ph$lcssa7$i$i$i = $$0$ph$us$i$i$i;
     break L4;
    }
    $16 = ($__len$0$us$us$i$i$i | 0) / 2 | 0;
    if ((HEAP32[$$0$ph$us$i$i$i + ($16 * 12 | 0) + 4 >> 2] | 0) >>> 0 < $12 >>> 0) {
     $$lcssa = $16;
     $__len$0$us$us$i$i$i$lcssa55 = $__len$0$us$us$i$i$i;
     break;
    } else $__len$0$us$us$i$i$i = $16;
   }
   $$0$ph$us$i$i$i = $$0$ph$us$i$i$i + ($$lcssa * 12 | 0) + 12 | 0;
   $__len$0$ph$us$i$i$i = $__len$0$us$us$i$i$i$lcssa55 + -1 - $$lcssa | 0;
  }
 } else {
  $$0$ph$i$i$i = $$0$i6;
  $__len$0$ph$i$i$i = $10;
  L11 : while (1) {
   $__len$0$i$i$i = $__len$0$ph$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i) {
     $$0$ph$lcssa7$i$i$i = $$0$ph$i$i$i;
     break L4;
    }
    $24 = ($__len$0$i$i$i | 0) / 2 | 0;
    $25 = $$0$ph$i$i$i + ($24 * 12 | 0) | 0;
    if ((HEAP32[$$0$ph$i$i$i + ($24 * 12 | 0) + 4 >> 2] | 0) >>> 0 < $12 >>> 0) {
     $$lcssa58 = $24;
     $$lcssa60 = $25;
     $__len$0$i$i$i$lcssa56 = $__len$0$i$i$i;
     break;
    }
    $$pre$i$i$i$i$i$i$i = HEAP32[$25 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i$i) $34 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$13 >> 2] | 0)) $34 = $$pre$i$i$i$i$i$i$i; else break L11;
    if ($34 >>> 0 < $13 >>> 0) {
     $$lcssa58 = $24;
     $$lcssa60 = $25;
     $__len$0$i$i$i$lcssa56 = $__len$0$i$i$i;
     break;
    } else $__len$0$i$i$i = $24;
   }
   $$0$ph$i$i$i = $$lcssa60 + 12 | 0;
   $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa56 + -1 - $$lcssa58 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if ($1) $$0$i2 = 0; else $$0$i2 = $0 + ((HEAP32[$this + 12 >> 2] | 0) * 12 | 0) | 0;
 if (($$0$ph$lcssa7$i$i$i | 0) == ($$0$i2 | 0)) return;
 $$pre27 = $this + 8 | 0;
 if ($1) $$0$i4 = 0; else $$0$i4 = $0 + ((HEAP32[$$pre27 >> 2] | 0) * 12 | 0) | 0;
 $44 = $$0$ph$lcssa7$i$i$i - $$0$i4 | 0;
 $45 = ($44 | 0) / 12 | 0;
 $46 = $this + 12 | 0;
 $48 = HEAP32[$$pre27 >> 2] | 0;
 if (($45 | 0) >= ((HEAP32[$46 >> 2] | 0) - $48 | 0)) return;
 if (($44 | 0) <= -12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 115599);
  _abort();
 }
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 115599);
  _abort();
 } else {
  $54 = $48;
  $56 = $0;
 }
 while (1) {
  $53 = $54 + $45 | 0;
  if (!(__ZNK5Oryol10StringAtomeqERKS0_($56 + ($53 * 12 | 0) | 0, $key) | 0)) {
   label = 30;
   break;
  }
  if ((HEAP32[$56 + ($53 * 12 | 0) + 4 >> 2] | 0) != (HEAP32[$11 >> 2] | 0)) {
   label = 30;
   break;
  }
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE5eraseEi($this, $45);
  $54 = HEAP32[$$pre27 >> 2] | 0;
  if (($45 | 0) >= ((HEAP32[$46 >> 2] | 0) - $54 | 0)) {
   label = 30;
   break;
  }
  $56 = HEAP32[$this >> 2] | 0;
  if (!$56) {
   label = 25;
   break;
  }
 }
 if ((label | 0) == 25) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 115599);
  _abort();
 } else if ((label | 0) == 30) return;
}

function __ZN5Oryol5_priv24gfxResourceContainerBase7discardEv($this) {
 $this = $this | 0;
 var $$pre = 0, $$pre$phi5$i$iZ2D = 0, $$pre3$i$i = 0, $$pre3$i$i4 = 0, $$pre3$i$i5 = 0, $$pre3$i$i6 = 0, $$pre3$i$i9 = 0, $0 = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $28 = 0, $30 = 0, $40 = 0, $41 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $8 = 0, $__begin$03 = 0, $i$01$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 if (!(__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 48725, 45, 52420);
  _abort();
 }
 $2 = __ZN5Oryol4Core11PostRunLoopEv() | 0;
 __ZN5Oryol7RunLoop6RemoveEi($2, HEAP32[$this + 528 >> 2] | 0);
 $5 = $this + 532 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $$pre3$i$i4 = $this + 540 | 0;
 L4 : do if (!$6) {
  $$pre3$i$i6 = $$pre3$i$i4;
  label = 8;
 } else {
  $8 = HEAP32[$$pre3$i$i4 >> 2] | 0;
  $10 = HEAP32[$this + 544 >> 2] | 0;
  $11 = $6 + ($10 << 2) | 0;
  do if (($8 | 0) == ($10 | 0)) {
   $$pre3$i$i9 = $this + 540 | 0;
   $48 = $6;
  } else {
   $__begin$03 = $6 + ($8 << 2) | 0;
   while (1) {
    $41 = HEAP32[$__begin$03 >> 2] | 0;
    if (!$41) {
     label = 18;
     break;
    }
    FUNCTION_TABLE_vi[HEAP32[(HEAP32[$41 >> 2] | 0) + 16 >> 2] & 255]($41);
    $__begin$03 = $__begin$03 + 4 | 0;
    if (($__begin$03 | 0) == ($11 | 0)) {
     label = 7;
     break;
    }
   }
   if ((label | 0) == 7) {
    $$pre = HEAP32[$5 >> 2] | 0;
    $$pre3$i$i = $this + 540 | 0;
    if (!$$pre) {
     $$pre3$i$i6 = $$pre3$i$i;
     label = 8;
     break L4;
    } else {
     $$pre3$i$i9 = $$pre3$i$i;
     $48 = $$pre;
     break;
    }
   } else if ((label | 0) == 18) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 51946);
    _abort();
   }
  } while (0);
  $15 = HEAP32[$$pre3$i$i9 >> 2] | 0;
  $16 = $this + 544 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($15 | 0) < ($17 | 0)) {
   $20 = $48;
   $49 = $17;
   $i$01$i$i = $15;
   while (1) {
    $19 = $20 + ($i$01$i$i << 2) | 0;
    $21 = HEAP32[$19 >> 2] | 0;
    if (!$21) $30 = $49; else {
     $23 = $21 + 4 | 0;
     $24 = HEAP32[$23 >> 2] | 0;
     HEAP32[$23 >> 2] = $24 - 1;
     if (($24 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$21 >> 2] >> 2] & 255]($21);
     HEAP32[$19 >> 2] = 0;
     $30 = HEAP32[$16 >> 2] | 0;
    }
    $28 = $i$01$i$i + 1 | 0;
    if (($28 | 0) >= ($30 | 0)) {
     $$pre$phi5$i$iZ2D = $16;
     $$pre3$i$i5 = $$pre3$i$i9;
     break L4;
    }
    $20 = HEAP32[$5 >> 2] | 0;
    $49 = $30;
    $i$01$i$i = $28;
   }
  } else {
   $$pre$phi5$i$iZ2D = $16;
   $$pre3$i$i5 = $$pre3$i$i9;
  }
 } while (0);
 if ((label | 0) == 8) {
  $$pre$phi5$i$iZ2D = $this + 544 | 0;
  $$pre3$i$i5 = $$pre3$i$i6;
 }
 HEAP32[$$pre$phi5$i$iZ2D >> 2] = HEAP32[$$pre3$i$i5 >> 2];
 __ZN5Oryol21resourceContainerBase7discardEv($this);
 __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE7DiscardEv($this + 464 | 0);
 __ZN5Oryol5_priv19pipelineFactoryBase7DiscardEv($this + 240 | 0);
 __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE7DiscardEv($this + 400 | 0);
 __ZN5Oryol5_priv16glTextureFactory7DiscardEv($this + 208 | 0);
 __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE7DiscardEv($this + 336 | 0);
 __ZN5Oryol5_priv15glShaderFactory7DiscardEv($this + 176 | 0);
 __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE7DiscardEv($this + 272 | 0);
 __ZN5Oryol5_priv13glMeshFactory7DiscardEv($this + 144 | 0);
 $40 = $this + 116 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 HEAP32[$40 >> 2] = HEAP32[$0 >> 2];
 HEAP32[$40 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$40 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$40 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
 HEAP32[$40 + 16 >> 2] = HEAP32[$0 + 16 >> 2];
 HEAP32[$40 + 20 >> 2] = HEAP32[$0 + 20 >> 2];
 HEAP32[$40 + 24 >> 2] = HEAP32[$0 + 24 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN5Oryol9loadQueue3addERKNS_3URLENSt3__18functionIFvNS0_6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($this, $url, $onSuccess, $onFail) {
 $this = $this | 0;
 $url = $url | 0;
 $onSuccess = $onSuccess | 0;
 $onFail = $onFail | 0;
 var $0 = 0, $1 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $23 = 0, $36 = 0, $38 = 0, $4 = 0, $5 = 0, $52 = 0, $56 = 0, $58 = 0, $61 = 0, $66 = 0, $76 = 0, $85 = 0, $87 = 0, $88 = 0, $92 = 0, $94 = 0, $95 = 0, $growBy$0$i$i = 0, $ioReq = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $ioReq = sp + 56 | 0;
 $0 = sp;
 $1 = $onSuccess + 16 | 0;
 if (!(HEAP32[$1 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(103600, 0, 103610, 15, 103671);
  _abort();
 }
 $4 = __ZN5Oryol6Memory5AllocEi(88) | 0;
 dest = $4;
 stop = dest + 88 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$4 >> 2] = 13588;
 $5 = $4 + 12 | 0;
 __ZN5Oryol3URLC2Ev($5);
 HEAP32[$4 + 52 >> 2] = 0;
 HEAP32[$4 + 56 >> 2] = -1;
 HEAP32[$4 + 60 >> 2] = 0;
 HEAP32[$4 + 64 >> 2] = 0;
 HEAP32[$4 + 68 >> 2] = 0;
 HEAP32[$4 + 72 >> 2] = -1;
 __ZN5Oryol6StringC2Ev($4 + 76 | 0);
 HEAP32[$4 >> 2] = 13604;
 HEAP8[$4 + 84 >> 0] = 0;
 HEAP8[$4 + 85 >> 0] = 0;
 if (!$4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
  _abort();
 }
 $16 = $4 + 4 | 0;
 HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
 HEAP32[$ioReq >> 2] = $4;
 __ZN5Oryol3URLaSERKS0_($5, $url);
 __ZN5Oryol2IO3PutERKNS_3PtrINS_9IORequestEEE($ioReq);
 $18 = HEAP32[$ioReq >> 2] | 0;
 HEAP32[$0 >> 2] = $18;
 if ($18 | 0) {
  $20 = $18 + 4 | 0;
  HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
 }
 $22 = $0 + 8 | 0;
 $23 = HEAP32[$1 >> 2] | 0;
 do if (!$23) HEAP32[$0 + 24 >> 2] = 0; else if (($23 | 0) == ($onSuccess | 0)) {
  HEAP32[$0 + 24 >> 2] = $22;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$23 >> 2] | 0) + 12 >> 2] & 63]($23, $22);
  break;
 } else {
  HEAP32[$0 + 24 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$23 >> 2] | 0) + 8 >> 2] & 63]($23) | 0;
  break;
 } while (0);
 $36 = $0 + 32 | 0;
 $38 = HEAP32[$onFail + 16 >> 2] | 0;
 do if (!$38) HEAP32[$0 + 48 >> 2] = 0; else if (($38 | 0) == ($onFail | 0)) {
  HEAP32[$0 + 48 >> 2] = $36;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$38 >> 2] | 0) + 12 >> 2] & 63]($38, $36);
  break;
 } else {
  HEAP32[$0 + 48 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$38 >> 2] | 0) + 8 >> 2] & 63]($38) | 0;
  break;
 } while (0);
 $52 = HEAP32[$this + 4 >> 2] | 0;
 do if (($52 | 0) == (HEAP32[$this + 12 >> 2] | 0)) {
  $56 = $52 >> 1;
  $58 = HEAP32[$this + 16 >> 2] | 0;
  if (($56 | 0) < ($58 | 0)) $growBy$0$i$i = $58; else {
   $61 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i$i = ($56 | 0) > ($61 | 0) ? $61 : $56;
  }
  if (($growBy$0$i$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE5allocEii($this, $growBy$0$i$i + $52 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 103810);
   _abort();
  }
 } while (0);
 __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE8pushBackEOS3_($this, $0);
 $66 = HEAP32[$0 + 48 >> 2] | 0;
 if (($66 | 0) == ($36 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$36 >> 2] | 0) + 16 >> 2] & 255]($36); else if ($66 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$66 >> 2] | 0) + 20 >> 2] & 255]($66);
 $76 = HEAP32[$0 + 24 >> 2] | 0;
 if (($76 | 0) == ($22 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 255]($22); else if ($76 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$76 >> 2] | 0) + 20 >> 2] & 255]($76);
 $85 = HEAP32[$0 >> 2] | 0;
 if ($85 | 0) {
  $87 = $85 + 4 | 0;
  $88 = HEAP32[$87 >> 2] | 0;
  HEAP32[$87 >> 2] = $88 - 1;
  if (($88 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$85 >> 2] >> 2] & 255]($85);
  HEAP32[$0 >> 2] = 0;
 }
 $92 = HEAP32[$ioReq >> 2] | 0;
 if (!$92) {
  STACKTOP = sp;
  return;
 }
 $94 = $92 + 4 | 0;
 $95 = HEAP32[$94 >> 2] | 0;
 HEAP32[$94 >> 2] = $95 - 1;
 if (($95 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$92 >> 2] >> 2] & 255]($92);
 HEAP32[$ioReq >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glRenderer14applyDrawStateEPNS0_8pipelineEPPNS0_4meshEi($this, $pip, $meshes, $numMeshes) {
 $this = $this | 0;
 $pip = $pip | 0;
 $meshes = $meshes | 0;
 $numMeshes = $numMeshes | 0;
 var $$lo = 0, $$pre$phiZ2D = 0, $102 = 0, $105 = 0, $12 = 0, $15 = 0, $16 = 0, $18 = 0, $25 = 0, $31 = 0, $39 = 0, $54 = 0, $61 = 0, $70 = 0, $71 = 0, $77 = 0, $i$03 = 0, label = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 443, 67666);
  _abort();
 }
 if (!$pip) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67766, 0, 66399, 444, 67666);
  _abort();
 }
 if (($meshes | 0) != 0 & ($numMeshes | 0) > 0) $i$03 = 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67770, 0, 66399, 445, 67666);
  _abort();
 }
 do {
  if (!(HEAP32[$meshes + ($i$03 << 2) >> 2] | 0)) {
   label = 9;
   break;
  }
  $i$03 = $i$03 + 1 | 0;
 } while (($i$03 | 0) < ($numMeshes | 0));
 if ((label | 0) == 9) {
  HEAP32[$this + 212 >> 2] = 0;
  return;
 }
 HEAP32[$this + 212 >> 2] = $pip;
 $12 = $pip + 344 | 0;
 if (!(HEAP32[$12 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67796, 0, 66399, 457, 67666);
  _abort();
 }
 $15 = $pip + 24 | 0;
 $$lo = HEAP32[$15 >> 2] | 0;
 $16 = HEAPU16[$15 + 4 >> 1] | 0;
 $18 = _bitshift64Lshr($$lo | 0, $16 & 65535 | 0, 31) | 0;
 if (($18 & 31 | 0) != (HEAP32[$this + 60 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67805, 67868, 66399, 460, 67666);
  _abort();
 }
 $25 = _bitshift64Lshr($$lo | 0, $16 & 65535 | 0, 36) | 0;
 if (($25 & 31 | 0) != (HEAP32[$this + 64 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67929, 67992, 66399, 461, 67666);
  _abort();
 }
 $31 = $pip + 56 | 0;
 if (((HEAPU16[$31 >> 1] | 0) >>> 8 & 15 | 0) != (HEAP32[$this + 68 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68053, 68116, 66399, 462, 67666);
  _abort();
 }
 $39 = $pip + 48 | 0;
 if ((HEAP32[$pip + 52 >> 2] | 0) == (HEAP32[$this + 236 >> 2] | 0)) if ((HEAP16[$39 >> 1] | 0) == (HEAP16[$this + 232 >> 1] | 0)) {
  if ((HEAP16[$pip + 50 >> 1] | 0) != (HEAP16[$this + 234 >> 1] | 0)) label = 21;
 } else label = 21; else label = 21;
 if ((label | 0) == 21) __ZN5Oryol5_priv10glRenderer22applyDepthStencilStateERKNS_17DepthStencilStateE($this, $39);
 $54 = $15;
 $61 = $this + 224 | 0;
 if (!((HEAP32[$54 >> 2] | 0) == (HEAP32[$61 >> 2] | 0) ? (HEAP32[$54 + 4 >> 2] | 0) == (HEAP32[$61 + 4 >> 2] | 0) : 0)) __ZN5Oryol5_priv10glRenderer15applyBlendStateERKNS_10BlendStateE($this, $15);
 $70 = $pip + 32 | 0;
 $71 = $this + 260 | 0;
 if (+HEAPF32[$70 >> 2] != +HEAPF32[$71 >> 2]) {
  $$pre$phiZ2D = $this + 264 | 0;
  label = 29;
 } else {
  $77 = $this + 264 | 0;
  if (+HEAPF32[$pip + 36 >> 2] != +HEAPF32[$77 >> 2]) {
   $$pre$phiZ2D = $77;
   label = 29;
  } else if (+HEAPF32[$pip + 40 >> 2] != +HEAPF32[$this + 268 >> 2]) {
   $$pre$phiZ2D = $77;
   label = 29;
  } else if (+HEAPF32[$pip + 44 >> 2] != +HEAPF32[$this + 272 >> 2]) {
   $$pre$phiZ2D = $77;
   label = 29;
  }
 }
 if ((label | 0) == 29) {
  HEAP32[$71 >> 2] = HEAP32[$70 >> 2];
  HEAP32[$71 + 4 >> 2] = HEAP32[$70 + 4 >> 2];
  HEAP32[$71 + 8 >> 2] = HEAP32[$70 + 8 >> 2];
  HEAP32[$71 + 12 >> 2] = HEAP32[$70 + 12 >> 2];
  _glBlendColor(+(+HEAPF32[$71 >> 2]), +(+HEAPF32[$$pre$phiZ2D >> 2]), +(+HEAPF32[$this + 268 >> 2]), +(+HEAPF32[$this + 272 >> 2]));
 }
 if ((HEAP16[$31 >> 1] | 0) != (HEAP16[$this + 240 >> 1] | 0)) __ZN5Oryol5_priv10glRenderer20applyRasterizerStateERKNS_15RasterizerStateE($this, $31);
 $102 = HEAP32[(HEAP32[$12 >> 2] | 0) + 3064 >> 2] | 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 768, 69252);
  _abort();
 }
 $105 = $this + 300 | 0;
 if ((HEAP32[$105 >> 2] | 0) != ($102 | 0)) {
  HEAP32[$105 >> 2] = $102;
  _glUseProgram($102 | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 772, 69252);
   _abort();
  }
 }
 __ZN5Oryol5_priv10glRenderer11applyMeshesEPNS0_8pipelineEPPNS0_4meshEi($this, $pip, $meshes, $numMeshes);
 return;
}

function __ZN5Oryol5_priv13pinchDetector6detectERKNS0_10touchEventE($this, $newEvent) {
 $this = $this | 0;
 $newEvent = $newEvent | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $102 = 0, $103 = 0, $112 = 0, $117 = 0, $118 = 0, $126 = 0, $13 = 0, $131 = 0, $132 = 0, $136 = 0, $17 = 0, $21 = 0, $23 = 0, $28 = 0, $3 = 0, $30 = 0, $35 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $53 = 0, $55 = 0, $58 = 0, $59 = 0, $63 = 0, $68 = 0, $69 = 0, $74 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $97 = 0, label = 0;
 $0 = $newEvent + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78758, 0, 78600, 22, 78669);
  _abort();
 }
 $3 = HEAP32[$newEvent >> 2] | 0;
 switch ($3 | 0) {
 case 3:
  {
   $4 = $this + 32 | 0;
   if ((HEAP32[$4 >> 2] | 0) == 4) {
    $$0 = 0;
    return $$0 | 0;
   }
   HEAP32[$4 >> 2] = 4;
   _memset($this + 40 | 0, 0, 140) | 0;
   $$0 = 0;
   return $$0 | 0;
  }
 case 2:
  break;
 default:
  label = 6;
 }
 if ((label | 0) == 6) if (($1 | 0) != 2) {
  $9 = $this + 32 | 0;
  if ((HEAP32[$9 >> 2] | 0) == 4) {
   $$0 = 0;
   return $$0 | 0;
  }
  HEAP32[$9 >> 2] = 4;
  _memset($this + 40 | 0, 0, 140) | 0;
  $$0 = 0;
  return $$0 | 0;
 }
 $13 = $this + 32 | 0;
 do if ((HEAP32[$13 >> 2] | 0) == 4) $21 = $3; else {
  if (__ZNK5Oryol5_priv10touchEvent11sameTouchesERKS1_($13, $newEvent) | 0) {
   $21 = HEAP32[$newEvent >> 2] | 0;
   break;
  }
  $17 = $this + 32 | 0;
  if ((HEAP32[$17 >> 2] | 0) == 4) {
   $$0 = 0;
   return $$0 | 0;
  }
  HEAP32[$17 >> 2] = 4;
  _memset($this + 40 | 0, 0, 140) | 0;
  $$0 = 0;
  return $$0 | 0;
 } while (0);
 switch ($21 | 0) {
 case 0:
  {
   HEAP32[$13 >> 2] = 0;
   $23 = $newEvent + 8 | 0;
   $28 = HEAP32[$23 + 4 >> 2] | 0;
   $30 = $this + 40 | 0;
   HEAP32[$30 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$30 + 4 >> 2] = $28;
   _memcpy($this + 48 | 0, $0 | 0, 132) | 0;
   $35 = $this + 16 | 0;
   $39 = __ZNK5Oryol5_priv10touchEvent8touchPosEj($newEvent, HEAP32[$newEvent + 20 >> 2] | 0) | 0;
   $44 = HEAP32[$39 + 4 >> 2] | 0;
   $45 = $35;
   HEAP32[$45 >> 2] = HEAP32[$39 >> 2];
   HEAP32[$45 + 4 >> 2] = $44;
   $53 = __ZNK5Oryol5_priv10touchEvent8touchPosEj($newEvent, HEAP32[$newEvent + 36 >> 2] | 0) | 0;
   $55 = HEAP32[$53 >> 2] | 0;
   $58 = HEAP32[$53 + 4 >> 2] | 0;
   $59 = $this + 24 | 0;
   HEAP32[$59 >> 2] = $55;
   HEAP32[$59 + 4 >> 2] = $58;
   $63 = $35;
   $68 = HEAP32[$63 + 4 >> 2] | 0;
   $69 = $this;
   HEAP32[$69 >> 2] = HEAP32[$63 >> 2];
   HEAP32[$69 + 4 >> 2] = $68;
   $74 = $this + 8 | 0;
   HEAP32[$74 >> 2] = $55;
   HEAP32[$74 + 4 >> 2] = $58;
   $$0 = 1;
   return $$0 | 0;
  }
 case 1:
  {
   if ((HEAP32[$13 >> 2] | 0) == 4) {
    $$0 = 0;
    return $$0 | 0;
   }
   $83 = __ZNK5Oryol5_priv10touchEvent8touchPosEj($newEvent, HEAP32[$this + 52 >> 2] | 0) | 0;
   $88 = HEAP32[$83 + 4 >> 2] | 0;
   $89 = $this;
   HEAP32[$89 >> 2] = HEAP32[$83 >> 2];
   HEAP32[$89 + 4 >> 2] = $88;
   $97 = __ZNK5Oryol5_priv10touchEvent8touchPosEj($newEvent, HEAP32[$this + 68 >> 2] | 0) | 0;
   $102 = HEAP32[$97 + 4 >> 2] | 0;
   $103 = $this + 8 | 0;
   HEAP32[$103 >> 2] = HEAP32[$97 >> 2];
   HEAP32[$103 + 4 >> 2] = $102;
   $$0 = 2;
   return $$0 | 0;
  }
 case 2:
  {
   if ((HEAP32[$13 >> 2] | 0) == 4) {
    $$0 = 0;
    return $$0 | 0;
   }
   $112 = __ZNK5Oryol5_priv10touchEvent8touchPosEj($newEvent, HEAP32[$this + 52 >> 2] | 0) | 0;
   $117 = HEAP32[$112 + 4 >> 2] | 0;
   $118 = $this;
   HEAP32[$118 >> 2] = HEAP32[$112 >> 2];
   HEAP32[$118 + 4 >> 2] = $117;
   $126 = __ZNK5Oryol5_priv10touchEvent8touchPosEj($newEvent, HEAP32[$this + 68 >> 2] | 0) | 0;
   $131 = HEAP32[$126 + 4 >> 2] | 0;
   $132 = $this + 8 | 0;
   HEAP32[$132 >> 2] = HEAP32[$126 >> 2];
   HEAP32[$132 + 4 >> 2] = $131;
   $136 = $this + 32 | 0;
   if ((HEAP32[$136 >> 2] | 0) == 4) {
    $$0 = 4;
    return $$0 | 0;
   }
   HEAP32[$136 >> 2] = 4;
   _memset($this + 40 | 0, 0, 140) | 0;
   $$0 = 4;
   return $$0 | 0;
  }
 default:
  {
   $$0 = 0;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZN5ImGui8EndGroupEv() {
 var $$idx$val = 0.0, $$idx2$val = 0.0, $$idx4 = 0, $$idx4$val = 0.0, $$pre = 0, $1 = 0, $10 = 0, $110 = 0.0, $111 = 0, $112 = 0.0, $115 = 0, $116 = 0.0, $12 = 0, $122 = 0, $123 = 0, $13 = 0, $15 = 0, $18 = 0, $19 = 0, $23 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $41 = 0.0, $43 = 0.0, $44 = 0, $56 = 0, $57 = 0, $66 = 0.0, $68 = 0.0, $71 = 0.0, $73 = 0, $79 = 0, $8 = 0, $80 = 0.0, $82 = 0.0, $83 = 0, $84 = 0.0, $87 = 0, $89 = 0.0, $90 = 0, $91 = 0, $bitcast = 0.0, $bitcast14 = 0.0, $group_bb = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $group_bb = sp;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $3 = $1 + 328 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) ___assert_fail(125258, 124187, 8749, 125289);
 if (($4 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $8 = $4 + -1 | 0;
 $10 = HEAP32[$1 + 336 >> 2] | 0;
 $12 = $1 + 188 | 0;
 $13 = $10 + ($8 * 36 | 0) | 0;
 $15 = HEAP32[$13 >> 2] | 0;
 $18 = HEAP32[$13 + 4 >> 2] | 0;
 $19 = $group_bb;
 HEAP32[$19 >> 2] = $15;
 HEAP32[$19 + 4 >> 2] = $18;
 $23 = $group_bb + 8 | 0;
 $24 = $12;
 $26 = HEAP32[$24 >> 2] | 0;
 $29 = HEAP32[$24 + 4 >> 2] | 0;
 $30 = $23;
 HEAP32[$30 >> 2] = $26;
 HEAP32[$30 + 4 >> 2] = $29;
 $38 = (HEAP32[tempDoublePtr >> 2] = $29, +HEAPF32[tempDoublePtr >> 2]) - +HEAPF32[37996];
 $bitcast = (HEAP32[tempDoublePtr >> 2] = $15, +HEAPF32[tempDoublePtr >> 2]);
 $39 = (HEAP32[tempDoublePtr >> 2] = $18, +HEAPF32[tempDoublePtr >> 2]);
 $bitcast14 = (HEAP32[tempDoublePtr >> 2] = $26, +HEAPF32[tempDoublePtr >> 2]);
 $41 = $bitcast >= $bitcast14 ? $bitcast : $bitcast14;
 $43 = $39 >= $38 ? $39 : $38;
 HEAPF32[$23 >> 2] = $41;
 HEAPF32[$group_bb + 12 >> 2] = $43;
 $44 = $1 + 164 | 0;
 HEAP32[$44 >> 2] = $15;
 HEAP32[$44 + 4 >> 2] = $18;
 $$idx$val = +HEAPF32[$10 + ($8 * 36 | 0) + 8 >> 2];
 $$idx2$val = +HEAPF32[$10 + ($8 * 36 | 0) + 12 >> 2];
 $$idx4 = $1 + 192 | 0;
 $$idx4$val = +HEAPF32[$$idx4 >> 2];
 HEAPF32[$12 >> 2] = $$idx$val >= $bitcast14 ? $$idx$val : $bitcast14;
 HEAPF32[$$idx4 >> 2] = $$idx2$val >= $$idx4$val ? $$idx2$val : $$idx4$val;
 HEAP32[$1 + 196 >> 2] = HEAP32[$10 + ($8 * 36 | 0) + 20 >> 2];
 $56 = HEAP32[$10 + ($8 * 36 | 0) + 24 >> 2] | 0;
 $57 = $1 + 200 | 0;
 HEAP32[$57 >> 2] = $56;
 HEAP32[$1 + 368 >> 2] = HEAP32[$10 + ($8 * 36 | 0) + 16 >> 2];
 HEAPF32[$1 + 212 >> 2] = $39 + -9999.0;
 $66 = (HEAP32[tempDoublePtr >> 2] = $56, +HEAPF32[tempDoublePtr >> 2]);
 if (!(HEAP8[$10 + ($8 * 36 | 0) + 32 >> 0] | 0)) {
  $123 = $4;
  $122 = $123 + -1 | 0;
  HEAP32[$3 >> 2] = $122;
  STACKTOP = sp;
  return;
 }
 $68 = +HEAPF32[$1 + 208 >> 2];
 HEAPF32[$57 >> 2] = $68 >= $66 ? $68 : $66;
 $71 = $43 - $39;
 $73 = HEAP32[38201] | 0;
 HEAP8[$73 + 114 >> 0] = 1;
 if (!(HEAP8[$73 + 116 >> 0] | 0)) {
  $79 = $73 + 196 | 0;
  $80 = +HEAPF32[$79 >> 2];
  $82 = $80 >= $71 ? $80 : $71;
  $83 = $73 + 200 | 0;
  $84 = +HEAPF32[$83 >> 2];
  $87 = $73 + 164 | 0;
  $89 = $41 - $bitcast + +HEAPF32[$87 >> 2];
  $90 = $73 + 168 | 0;
  $91 = HEAP32[$90 >> 2] | 0;
  HEAPF32[$73 + 172 >> 2] = $89;
  HEAP32[$73 + 176 >> 2] = $91;
  $110 = +(~~($82 + (HEAP32[tempDoublePtr >> 2] = $91, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
  HEAPF32[$87 >> 2] = +(~~(+HEAPF32[$73 + 20 >> 2] + +HEAPF32[$73 + 368 >> 2] + +HEAPF32[$73 + 372 >> 2]) | 0);
  HEAPF32[$90 >> 2] = $110;
  $111 = $73 + 188 | 0;
  $112 = +HEAPF32[$111 >> 2];
  HEAPF32[$111 >> 2] = $112 >= $89 ? $112 : $89;
  $115 = $73 + 192 | 0;
  $116 = +HEAPF32[$115 >> 2];
  HEAPF32[$115 >> 2] = $116 >= $110 ? $116 : $110;
  HEAPF32[$73 + 204 >> 2] = $82;
  HEAPF32[$73 + 208 >> 2] = $84 >= $66 ? $84 : $66;
  HEAPF32[$83 >> 2] = 0.0;
  HEAPF32[$79 >> 2] = 0.0;
 }
 __ZN5ImGui7ItemAddERK6ImRectPKj($group_bb, 0) | 0;
 $$pre = HEAP32[$3 >> 2] | 0;
 if (($$pre | 0) > 0) {
  $123 = $$pre;
  $122 = $123 + -1 | 0;
  HEAP32[$3 >> 2] = $122;
  STACKTOP = sp;
  return;
 } else ___assert_fail(127436, 127226, 833, 125180);
}

function __ZN5Oryol3Gfx5SetupERKNS_8GfxSetupE($setup) {
 $setup = $setup | 0;
 var $0 = 0, $1 = 0, $13 = 0, $32 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $46 = 0, $47 = 0, $6 = 0, $pointers = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $pointers = sp + 64 | 0;
 $0 = sp;
 $1 = sp + 24 | 0;
 if (HEAP32[36694] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117531, 0, 42914, 18, 42965);
  _abort();
 }
 $4 = __ZN5Oryol6Memory5AllocEi(1728) | 0;
 _memset($4 | 0, 0, 1728) | 0;
 __ZN5Oryol8GfxSetupC2Ev($4);
 $6 = $4 + 160 | 0;
 dest = $4 + 116 | 0;
 stop = dest + 44 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN5Oryol5_priv14emscDisplayMgrC2Ev($6);
 __ZN5Oryol5_priv10glRendererC2Ev($4 + 416 | 0);
 __ZN5Oryol5_priv24gfxResourceContainerBaseC2Ev($4 + 1168 | 0);
 HEAP32[36694] = $4;
 HEAP32[$4 >> 2] = HEAP32[$setup >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$setup + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$setup + 8 >> 2];
 HEAP32[$4 + 12 >> 2] = HEAP32[$setup + 12 >> 2];
 HEAP32[$4 + 16 >> 2] = HEAP32[$setup + 16 >> 2];
 HEAP32[$4 + 20 >> 2] = HEAP32[$setup + 20 >> 2];
 HEAP32[$4 + 24 >> 2] = HEAP32[$setup + 24 >> 2];
 __ZN5Oryol6StringaSERKS0_($4 + 28 | 0, $setup + 28 | 0);
 dest = $4 + 36 | 0;
 src = $setup + 36 | 0;
 stop = dest + 80 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$pointers >> 2] = 0;
 HEAP32[$pointers + 4 >> 2] = 0;
 HEAP32[$pointers + 8 >> 2] = 0;
 HEAP32[$pointers + 12 >> 2] = 0;
 HEAP32[$pointers + 16 >> 2] = 0;
 HEAP32[$pointers + 20 >> 2] = 0;
 $13 = HEAP32[36694] | 0;
 HEAP32[$pointers + 4 >> 2] = $13 + 160;
 HEAP32[$pointers >> 2] = $13 + 416;
 HEAP32[$pointers + 8 >> 2] = $13 + 1168;
 HEAP32[$pointers + 12 >> 2] = $13 + 1440;
 HEAP32[$pointers + 16 >> 2] = $13 + 1504;
 HEAP32[$pointers + 20 >> 2] = $13 + 1568;
 HEAP32[$pointers + 24 >> 2] = $13 + 1632;
 __ZN5Oryol5_priv14emscDisplayMgr12SetupDisplayERKNS_8GfxSetupERKNS0_11gfxPointersE($13 + 160 | 0, $setup, $pointers);
 __ZN5Oryol5_priv10glRenderer5setupERKNS_8GfxSetupERKNS0_11gfxPointersE((HEAP32[36694] | 0) + 416 | 0, $setup, $pointers);
 __ZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS_8GfxSetupERKNS0_11gfxPointersE((HEAP32[36694] | 0) + 1168 | 0, $setup, $pointers);
 $32 = __ZN5Oryol4Core10PreRunLoopEv() | 0;
 $33 = $0 + 16 | 0;
 HEAP32[$33 >> 2] = $0;
 HEAP32[$0 >> 2] = 12808;
 $34 = __ZN5Oryol7RunLoop3AddENSt3__18functionIFvvEEE($32, $0) | 0;
 HEAP32[(HEAP32[36694] | 0) + 156 >> 2] = $34;
 $37 = HEAP32[$33 >> 2] | 0;
 if (($37 | 0) == ($0 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$37 >> 2] | 0) + 16 >> 2] & 255]($37);
  $46 = HEAP32[36694] | 0;
  $47 = $46 + 116 | 0;
  dest = $1;
  stop = dest + 40 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  dest = $47;
  src = $1;
  stop = dest + 40 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  STACKTOP = sp;
  return;
 }
 if (!$37) {
  $46 = HEAP32[36694] | 0;
  $47 = $46 + 116 | 0;
  dest = $1;
  stop = dest + 40 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  dest = $47;
  src = $1;
  stop = dest + 40 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$37 >> 2] | 0) + 20 >> 2] & 255]($37);
 $46 = HEAP32[36694] | 0;
 $47 = $46 + 116 | 0;
 dest = $1;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $47;
 src = $1;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 STACKTOP = sp;
 return;
}

function __ZN5Oryol3App7onFrameEv($this) {
 $this = $this | 0;
 var $$0$i$i1$i = 0, $$0$i$i2$i = 0, $$0$ph$i$i$i$i$i = 0, $$0$ph$i$i$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa12 = 0, $$phi$trans$insert = 0, $$pre = 0, $0 = 0, $1 = 0, $18 = 0, $19 = 0, $30 = 0, $32 = 0, $33 = 0, $38 = 0, $5 = 0, $__len$0$i$i$i$i$i = 0, $__len$0$i$i$i$i$i$lcssa11 = 0, $__len$0$ph$i$i$i$i$i = 0, $__ns$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer4 = sp + 24 | 0;
 $vararg_buffer1 = sp + 16 | 0;
 $vararg_buffer = sp + 8 | 0;
 $__ns$i = sp;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $$phi$trans$insert = $this + 4 | 0;
 $$pre = HEAP32[$$phi$trans$insert >> 2] | 0;
 do if (($1 | 0) == 9) {
  $32 = $$pre;
  label = 15;
 } else if (($1 | 0) == ($$pre | 0)) {
  $32 = $1;
  label = 15;
 } else {
  $5 = HEAP32[$this + 12 >> 2] | 0;
  if (!$5) {
   $$0$i$i1$i = 0;
   $$0$i$i2$i = 0;
  } else {
   $$0$i$i1$i = $5 + (HEAP32[$this + 24 >> 2] << 2) | 0;
   $$0$i$i2$i = $5 + (HEAP32[$this + 20 >> 2] << 2) | 0;
  }
  $$0$ph$i$i$i$i$i = $$0$i$i2$i;
  $__len$0$ph$i$i$i$i$i = $$0$i$i1$i - $$0$i$i2$i >> 2;
  L7 : while (1) {
   $__len$0$i$i$i$i$i = $__len$0$ph$i$i$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i$i$i) {
     $$0$ph$i$i$i$i$i$lcssa = $$0$ph$i$i$i$i$i;
     break L7;
    }
    $18 = ($__len$0$i$i$i$i$i | 0) / 2 | 0;
    $19 = $$0$ph$i$i$i$i$i + ($18 << 2) | 0;
    if ((HEAP32[$19 >> 2] | 0) < ($1 | 0)) {
     $$lcssa = $18;
     $$lcssa12 = $19;
     $__len$0$i$i$i$i$i$lcssa11 = $__len$0$i$i$i$i$i;
     break;
    } else $__len$0$i$i$i$i$i = $18;
   }
   $$0$ph$i$i$i$i$i = $$lcssa12 + 4 | 0;
   $__len$0$ph$i$i$i$i$i = $__len$0$i$i$i$i$i$lcssa11 + -1 - $$lcssa | 0;
  }
  if (($$0$ph$i$i$i$i$i$lcssa | 0) != ($$0$i$i1$i | 0)) if (($1 | 0) >= (HEAP32[$$0$ph$i$i$i$i$i$lcssa >> 2] | 0)) {
   if (($$pre | 0) == 7) break;
   HEAP32[$vararg_buffer >> 2] = __ZN5Oryol8AppState8ToStringENS0_4CodeE($1) | 0;
   __ZN5Oryol3Log4InfoEPKcz(116823, $vararg_buffer);
   HEAP32[$$phi$trans$insert >> 2] = 7;
   break;
  }
  HEAP32[$vararg_buffer1 >> 2] = __ZN5Oryol8AppState8ToStringENS0_4CodeE($1) | 0;
  __ZN5Oryol3Log4InfoEPKcz(116891, $vararg_buffer1);
  $30 = HEAP32[$0 >> 2] | 0;
  HEAP32[$$phi$trans$insert >> 2] = $30;
  HEAP32[$0 >> 2] = 9;
  $32 = $30;
  label = 15;
 } while (0);
 if ((label | 0) == 15) if (($32 | 0) != 7) {
  __ZN5Oryol7RunLoop3RunEv(__ZN5Oryol4Core10PreRunLoopEv() | 0);
  $38 = HEAP32[$$phi$trans$insert >> 2] | 0;
  switch ($38 | 0) {
  case 0:
   {
    HEAP32[$0 >> 2] = FUNCTION_TABLE_ii[HEAP32[HEAP32[$this >> 2] >> 2] & 63]($this) | 0;
    break;
   }
  case 1:
   {
    HEAP32[$0 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 63]($this) | 0;
    break;
   }
  case 2:
   {
    HEAP32[$0 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 8 >> 2] & 63]($this) | 0;
    break;
   }
  case 3:
   {
    HEAP32[$0 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 63]($this) | 0;
    break;
   }
  case 4:
   {
    HEAP32[$0 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 16 >> 2] & 63]($this) | 0;
    break;
   }
  case 5:
   {
    HEAP32[$0 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] & 63]($this) | 0;
    break;
   }
  case 6:
   {
    HEAP32[$0 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 24 >> 2] & 63]($this) | 0;
    HEAP32[$$phi$trans$insert >> 2] = 9;
    break;
   }
  default:
   {
    HEAP32[$vararg_buffer4 >> 2] = __ZN5Oryol8AppState8ToStringENS0_4CodeE($38) | 0;
    __ZN5Oryol3Log4WarnEPKcz(116936, $vararg_buffer4);
   }
  }
  __ZN5Oryol7RunLoop3RunEv(__ZN5Oryol4Core11PostRunLoopEv() | 0);
  STACKTOP = sp;
  return;
 }
 $33 = $__ns$i;
 HEAP32[$33 >> 2] = 1e8;
 HEAP32[$33 + 4 >> 2] = 0;
 __ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILx1ELx1000000000EEEEE($__ns$i);
 STACKTOP = sp;
 return;
}

function __Z15ImTextStrToUtf8PciPKtS1_($buf, $buf_size, $in_text, $in_text_end) {
 $buf = $buf | 0;
 $buf_size = $buf_size | 0;
 $in_text = $in_text | 0;
 $in_text_end = $in_text_end | 0;
 var $$0$i = 0, $$0$i$us = 0, $$03 = 0, $$03$us = 0, $0 = 0, $1 = 0, $11 = 0, $4 = 0, $5 = 0, $54 = 0, $60 = 0, $62 = 0, $9 = 0, $buf_out$0$be = 0, $buf_out$0$be$us = 0, $buf_out$0$lcssa = 0, $buf_out$02 = 0, $buf_out$02$us = 0;
 $0 = $buf + $buf_size | 0;
 $1 = $0 + -1 | 0;
 L1 : do if ($1 >>> 0 > $buf >>> 0) {
  $4 = $0;
  if (!$in_text_end) {
   $$03$us = $in_text;
   $buf_out$02$us = $buf;
   while (1) {
    $5 = HEAP16[$$03$us >> 1] | 0;
    if (!($5 << 16 >> 16)) {
     $buf_out$0$lcssa = $buf_out$02$us;
     break L1;
    }
    $$03$us = $$03$us + 2 | 0;
    if (($5 & 65535) < 128) {
     HEAP8[$buf_out$02$us >> 0] = $5;
     $buf_out$0$be$us = $buf_out$02$us + 1 | 0;
    } else {
     $9 = $5 & 65535;
     $11 = $4 - $buf_out$02$us | 0;
     L10 : do if (($5 & 65535) < 2048) if (($11 | 0) < 3) $$0$i$us = 0; else {
      HEAP8[$buf_out$02$us >> 0] = ($9 >>> 6) + 192;
      HEAP8[$buf_out$02$us + 1 >> 0] = $9 & 63 | 128;
      $$0$i$us = 2;
     } else switch ($9 & 64512 | 0) {
     case 56320:
      {
       $$0$i$us = 0;
       break L10;
       break;
      }
     case 55296:
      {
       if (($11 | 0) < 5) {
        $$0$i$us = 0;
        break L10;
       }
       HEAP8[$buf_out$02$us >> 0] = -16;
       HEAP8[$buf_out$02$us + 1 >> 0] = $9 >>> 12 | 128;
       HEAP8[$buf_out$02$us + 2 >> 0] = $9 >>> 6 & 63 | 128;
       HEAP8[$buf_out$02$us + 3 >> 0] = $9 & 63 | 128;
       $$0$i$us = 4;
       break L10;
       break;
      }
     default:
      {
       if (($11 | 0) < 4) {
        $$0$i$us = 0;
        break L10;
       }
       HEAP8[$buf_out$02$us >> 0] = $9 >>> 12 | 224;
       HEAP8[$buf_out$02$us + 1 >> 0] = $9 >>> 6 & 63 | 128;
       HEAP8[$buf_out$02$us + 2 >> 0] = $9 & 63 | 128;
       $$0$i$us = 3;
       break L10;
      }
     } while (0);
     $buf_out$0$be$us = $buf_out$02$us + $$0$i$us | 0;
    }
    if ($buf_out$0$be$us >>> 0 >= $1 >>> 0) {
     $buf_out$0$lcssa = $buf_out$0$be$us;
     break L1;
    } else $buf_out$02$us = $buf_out$0$be$us;
   }
  } else {
   $$03 = $in_text;
   $buf_out$02 = $buf;
  }
  while (1) {
   if ($$03 >>> 0 >= $in_text_end >>> 0) {
    $buf_out$0$lcssa = $buf_out$02;
    break L1;
   }
   $54 = HEAP16[$$03 >> 1] | 0;
   if (!($54 << 16 >> 16)) {
    $buf_out$0$lcssa = $buf_out$02;
    break L1;
   }
   $$03 = $$03 + 2 | 0;
   if (($54 & 65535) < 128) {
    HEAP8[$buf_out$02 >> 0] = $54;
    $buf_out$0$be = $buf_out$02 + 1 | 0;
   } else {
    $60 = $54 & 65535;
    $62 = $4 - $buf_out$02 | 0;
    L28 : do if (($54 & 65535) < 2048) if (($62 | 0) < 3) $$0$i = 0; else {
     HEAP8[$buf_out$02 >> 0] = ($60 >>> 6) + 192;
     HEAP8[$buf_out$02 + 1 >> 0] = $60 & 63 | 128;
     $$0$i = 2;
    } else switch ($60 & 64512 | 0) {
    case 56320:
     {
      $$0$i = 0;
      break L28;
      break;
     }
    case 55296:
     {
      if (($62 | 0) < 5) {
       $$0$i = 0;
       break L28;
      }
      HEAP8[$buf_out$02 >> 0] = -16;
      HEAP8[$buf_out$02 + 1 >> 0] = $60 >>> 12 | 128;
      HEAP8[$buf_out$02 + 2 >> 0] = $60 >>> 6 & 63 | 128;
      HEAP8[$buf_out$02 + 3 >> 0] = $60 & 63 | 128;
      $$0$i = 4;
      break L28;
      break;
     }
    default:
     {
      if (($62 | 0) < 4) {
       $$0$i = 0;
       break L28;
      }
      HEAP8[$buf_out$02 >> 0] = $60 >>> 12 | 224;
      HEAP8[$buf_out$02 + 1 >> 0] = $60 >>> 6 & 63 | 128;
      HEAP8[$buf_out$02 + 2 >> 0] = $60 & 63 | 128;
      $$0$i = 3;
      break L28;
     }
    } while (0);
    $buf_out$0$be = $buf_out$02 + $$0$i | 0;
   }
   if ($buf_out$0$be >>> 0 >= $1 >>> 0) {
    $buf_out$0$lcssa = $buf_out$0$be;
    break;
   } else $buf_out$02 = $buf_out$0$be;
  }
 } else $buf_out$0$lcssa = $buf; while (0);
 HEAP8[$buf_out$0$lcssa >> 0] = 0;
 return $buf_out$0$lcssa - $buf | 0;
}

function __ZN10FileLoader5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $0 = sp + 88 | 0;
 $1 = sp + 84 | 0;
 $2 = sp + 80 | 0;
 $3 = sp + 76 | 0;
 $4 = sp + 72 | 0;
 $5 = sp + 68 | 0;
 $6 = sp + 64 | 0;
 $7 = sp + 60 | 0;
 $8 = sp + 56 | 0;
 $9 = sp + 52 | 0;
 $10 = sp + 48 | 0;
 $11 = sp + 44 | 0;
 $12 = sp + 40 | 0;
 $13 = sp + 36 | 0;
 $14 = sp + 32 | 0;
 $15 = sp + 28 | 0;
 $16 = sp + 24 | 0;
 $17 = sp + 20 | 0;
 $18 = sp + 16 | 0;
 $19 = sp + 12 | 0;
 $20 = sp + 8 | 0;
 $21 = sp + 4 | 0;
 $22 = sp;
 HEAP32[$0 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA10_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 37839, 37845, $0);
 HEAP32[$1 >> 2] = 4;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA11_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 37839, 38187, $1);
 HEAP32[$2 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA5_KcRA9_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 38366, 38371, $2);
 HEAP32[$3 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA10_KcRA14_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 38547, 38557, $3);
 HEAP32[$4 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA10_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 38740, 38746, $4);
 HEAP32[$5 >> 2] = 4;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA11_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 38740, 38756, $5);
 HEAP32[$6 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA11_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 38767, 38774, $6);
 HEAP32[$7 >> 2] = 4;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA12_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 38767, 38953, $7);
 HEAP32[$8 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA11_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 39133, 39140, $8);
 HEAP32[$9 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA9_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 39151, 39160, $9);
 HEAP32[$10 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA12_KcS7_N4yakc10kc85_modelEEEEvDpOT_($this, 39341, 39353, $10);
 HEAP32[$11 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA12_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 39534, 39546, $11);
 HEAP32[$12 >> 2] = 4;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA12_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 39534, 39728, $12);
 HEAP32[$13 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA12_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 39741, 39748, $13);
 HEAP32[$14 >> 2] = 4;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA12_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 39741, 39760, $14);
 HEAP32[$15 >> 2] = 4;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA11_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 39772, 39779, $15);
 HEAP32[$16 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 39790, 39797, $16);
 HEAP32[$17 >> 2] = 7;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA11_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 39978, 39989, $17);
 HEAP32[$18 >> 2] = 7;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA10_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 40171, 40177, $18);
 HEAP32[$19 >> 2] = 2;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA9_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 40187, 40196, $19);
 HEAP32[$20 >> 2] = 4;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA10_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 40209, 40215, $20);
 HEAP32[$21 >> 2] = 4;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA10_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 40225, 40231, $21);
 HEAP32[$22 >> 2] = 4;
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA10_S5_N4yakc10kc85_modelEEEEvDpOT_($this, 40241, 40247, $22);
 STACKTOP = sp;
 return;
}

function __ZN5ImGui22RenderCollapseTriangleE6ImVec2bfb($p_min, $opened, $scale, $shadow) {
 $p_min = $p_min | 0;
 $opened = $opened | 0;
 $scale = +$scale;
 $shadow = $shadow | 0;
 var $0 = 0, $1 = 0, $107 = 0, $108 = 0.0, $11 = 0.0, $110 = 0.0, $112 = 0.0, $117 = 0.0, $12 = 0.0, $14 = 0.0, $15 = 0.0, $2 = 0, $20 = 0.0, $22 = 0.0, $23 = 0.0, $25 = 0.0, $27 = 0.0, $28 = 0.0, $3 = 0, $33 = 0.0, $34 = 0.0, $37 = 0.0, $38 = 0.0, $39 = 0.0, $4 = 0, $43 = 0, $45 = 0, $48 = 0, $49 = 0, $53 = 0.0, $54 = 0.0, $6 = 0, $60 = 0, $71 = 0.0, $73 = 0.0, $75 = 0.0, $80 = 0.0, $9 = 0.0, $a = 0, $b = 0, $c = 0, $storemerge$in = 0, $tmpcast$idx$val = 0.0, $tmpcast$idx14$val = 0.0, $tmpcast2$idx$val = 0.0, $tmpcast2$idx11$val = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $a = sp + 32 | 0;
 $b = sp + 24 | 0;
 $c = sp + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $2 = sp + 56 | 0;
 $3 = sp + 48 | 0;
 $4 = sp + 40 | 0;
 $6 = HEAP32[38201] | 0;
 HEAP8[$6 + 114 >> 0] = 1;
 $9 = +HEAPF32[38187];
 $11 = $9 * .4000000059604645 * $scale;
 $12 = $9 * .5;
 $14 = +HEAPF32[$p_min >> 2] + $12;
 $15 = +HEAPF32[$p_min + 4 >> 2] + $12 * $scale;
 HEAPF32[$a + 4 >> 2] = 0.0;
 HEAPF32[$a >> 2] = 0.0;
 HEAPF32[$b + 4 >> 2] = 0.0;
 HEAPF32[$b >> 2] = 0.0;
 HEAPF32[$c + 4 >> 2] = 0.0;
 HEAPF32[$c >> 2] = 0.0;
 if ($opened) {
  $20 = $15 - $11 * .25;
  $22 = $14 + $11 * 0.0;
  $23 = $11 + $20;
  HEAPF32[$a >> 2] = $22;
  HEAPF32[$a + 4 >> 2] = $23;
  $25 = $11 * .8659999966621399;
  $27 = $14 - $25;
  $28 = $20 - $11 * .5;
  HEAPF32[$b >> 2] = $27;
  HEAPF32[$b + 4 >> 2] = $28;
  HEAPF32[$0 >> 2] = $14 + $25;
  HEAPF32[$0 + 4 >> 2] = $28;
  $storemerge$in = $0;
  $tmpcast$idx$val = $22;
  $tmpcast$idx14$val = $23;
  $tmpcast2$idx$val = $27;
  $tmpcast2$idx11$val = $28;
 } else {
  $33 = $14 + $11;
  $34 = $15 + $11 * 0.0;
  HEAPF32[$a >> 2] = $33;
  HEAPF32[$a + 4 >> 2] = $34;
  $37 = $11 * .8659999966621399;
  $38 = $14 - $11 * .5;
  $39 = $15 + $37;
  HEAPF32[$b >> 2] = $38;
  HEAPF32[$b + 4 >> 2] = $39;
  HEAPF32[$1 >> 2] = $38;
  HEAPF32[$1 + 4 >> 2] = $15 - $37;
  $storemerge$in = $1;
  $tmpcast$idx$val = $33;
  $tmpcast$idx14$val = $34;
  $tmpcast2$idx$val = $38;
  $tmpcast2$idx11$val = $39;
 }
 $43 = $storemerge$in;
 $45 = HEAP32[$43 >> 2] | 0;
 $48 = HEAP32[$43 + 4 >> 2] | 0;
 $49 = $c;
 HEAP32[$49 >> 2] = $45;
 HEAP32[$49 + 4 >> 2] = $48;
 $53 = (HEAP32[tempDoublePtr >> 2] = $45, +HEAPF32[tempDoublePtr >> 2]);
 $54 = (HEAP32[tempDoublePtr >> 2] = $48, +HEAPF32[tempDoublePtr >> 2]);
 if ($shadow) if (!(HEAP32[$6 + 8 >> 2] & 128)) $107 = 146892; else {
  $60 = HEAP32[$6 + 572 >> 2] | 0;
  HEAPF32[$2 >> 2] = $tmpcast$idx$val + 2.0;
  HEAPF32[$2 + 4 >> 2] = $tmpcast$idx14$val + 2.0;
  HEAPF32[$3 >> 2] = $tmpcast2$idx$val + 2.0;
  HEAPF32[$3 + 4 >> 2] = $tmpcast2$idx11$val + 2.0;
  HEAPF32[$4 >> 2] = $53 + 2.0;
  HEAPF32[$4 + 4 >> 2] = $54 + 2.0;
  $71 = +HEAPF32[38034];
  $73 = +HEAPF32[38035];
  $75 = +HEAPF32[38036];
  $80 = +HEAPF32[38037] * +HEAPF32[37984];
  __ZN10ImDrawList17AddTriangleFilledERK6ImVec2S2_S2_j($60, $2, $3, $4, ($73 < 0.0 ? 0 : ~~(($73 > 1.0 ? 1.0 : $73) * 255.0 + .5) << 8) | ($71 < 0.0 ? 0 : ~~(($71 > 1.0 ? 1.0 : $71) * 255.0 + .5)) | ($75 < 0.0 ? 0 : ~~(($75 > 1.0 ? 1.0 : $75) * 255.0 + .5) << 16) | ($80 < 0.0 ? 0 : ~~(($80 > 1.0 ? 1.0 : $80) * 255.0 + .5) << 24));
  $107 = 146892;
 } else $107 = 146892;
 $108 = +HEAPF32[$107 + 5164 >> 2];
 $110 = +HEAPF32[$107 + 5168 >> 2];
 $112 = +HEAPF32[$107 + 5172 >> 2];
 $117 = +HEAPF32[$107 + 5176 >> 2] * +HEAPF32[$107 + 5044 >> 2];
 __ZN10ImDrawList17AddTriangleFilledERK6ImVec2S2_S2_j(HEAP32[$6 + 572 >> 2] | 0, $a, $b, $c, ($110 < 0.0 ? 0 : ~~(($110 > 1.0 ? 1.0 : $110) * 255.0 + .5) << 8) | ($108 < 0.0 ? 0 : ~~(($108 > 1.0 ? 1.0 : $108) * 255.0 + .5)) | ($112 < 0.0 ? 0 : ~~(($112 > 1.0 ? 1.0 : $112) * 255.0 + .5) << 16) | ($117 < 0.0 ? 0 : ~~(($117 > 1.0 ? 1.0 : $117) * 255.0 + .5) << 24));
 STACKTOP = sp;
 return;
}

function __ZL15LogRenderedTextRK6ImVec2PKcS3_($ref_pos$0$1$val, $text, $text_end) {
 $ref_pos$0$1$val = +$ref_pos$0$1$val;
 $text = $text | 0;
 $text_end = $text_end | 0;
 var $$01 = 0, $$pre$phi$iZ2D = 0, $1 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $20 = 0, $26 = 0, $27 = 0, $39 = 0, $40 = 0, $45 = 0, $5 = 0, $9 = 0, $line_end$01 = 0, $line_end$01$us = 0, $line_end$2 = 0, $line_end$2$us = 0, $text_display_end$03$i = 0, $text_remaining$0 = 0, $text_remaining$0$us = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer = sp;
 $1 = HEAP32[38201] | 0;
 L1 : do if (!$text_end) if (($text | 0) == (-1 | 0)) $$01 = -1; else {
  $text_display_end$03$i = $text;
  while (1) {
   switch (HEAP8[$text_display_end$03$i >> 0] | 0) {
   case 0:
    {
     $$01 = $text_display_end$03$i;
     break L1;
     break;
    }
   case 35:
    {
     $5 = $text_display_end$03$i + 1 | 0;
     if ((HEAP8[$5 >> 0] | 0) == 35) {
      $$01 = $text_display_end$03$i;
      break L1;
     } else $$pre$phi$iZ2D = $5;
     break;
    }
   default:
    $$pre$phi$iZ2D = $text_display_end$03$i + 1 | 0;
   }
   if (($$pre$phi$iZ2D | 0) == (-1 | 0)) {
    $$01 = -1;
    break L1;
   } else $text_display_end$03$i = $$pre$phi$iZ2D;
  }
 } else $$01 = $text_end; while (0);
 $9 = $1 + 212 | 0;
 $12 = +HEAPF32[$9 >> 2] + 1.0 < $ref_pos$0$1$val;
 HEAPF32[$9 >> 2] = $ref_pos$0$1$val;
 $13 = 158008;
 $14 = HEAP32[$13 >> 2] | 0;
 $16 = HEAP32[$1 + 216 >> 2] | 0;
 if (($14 | 0) > ($16 | 0)) {
  HEAP32[$13 >> 2] = $16;
  $19 = $16;
 } else $19 = $14;
 $20 = $16 - $19 << 2;
 if ($12) {
  $text_remaining$0$us = $text;
  while (1) {
   L16 : do if ($text_remaining$0$us >>> 0 < $$01 >>> 0) {
    $line_end$01$us = $text_remaining$0$us;
    while (1) {
     if ((HEAP8[$line_end$01$us >> 0] | 0) == 10) {
      $27 = $line_end$01$us;
      break L16;
     }
     $line_end$01$us = $line_end$01$us + 1 | 0;
     if ($line_end$01$us >>> 0 >= $$01 >>> 0) {
      $27 = 0;
      break;
     }
    }
   } else $27 = 0; while (0);
   $26 = ($27 | 0) == 0;
   $line_end$2$us = $26 ? $$01 : $27;
   if (!(($line_end$2$us | 0) == 0 | $26 & ($line_end$2$us | 0) == ($text_remaining$0$us | 0))) {
    HEAP32[$vararg_buffer >> 2] = $20;
    HEAP32[$vararg_buffer + 4 >> 2] = 163344;
    HEAP32[$vararg_buffer + 8 >> 2] = $line_end$2$us - $text_remaining$0$us;
    HEAP32[$vararg_buffer + 12 >> 2] = $text_remaining$0$us;
    __ZN5ImGui7LogTextEPKcz(125027, $vararg_buffer);
   }
   if ($26) break; else $text_remaining$0$us = $line_end$2$us + 1 | 0;
  }
  STACKTOP = sp;
  return;
 } else $text_remaining$0 = $text;
 while (1) {
  L27 : do if ($text_remaining$0 >>> 0 < $$01 >>> 0) {
   $line_end$01 = $text_remaining$0;
   while (1) {
    if ((HEAP8[$line_end$01 >> 0] | 0) == 10) {
     $40 = $line_end$01;
     break L27;
    }
    $line_end$01 = $line_end$01 + 1 | 0;
    if ($line_end$01 >>> 0 >= $$01 >>> 0) {
     $40 = 0;
     break;
    }
   }
  } else $40 = 0; while (0);
  $39 = ($40 | 0) == 0;
  $line_end$2 = $39 ? $$01 : $40;
  do if (!(($line_end$2 | 0) == 0 | $39 & ($line_end$2 | 0) == ($text_remaining$0 | 0))) {
   $45 = $line_end$2 - $text_remaining$0 | 0;
   if (($text_remaining$0 | 0) == ($text | 0)) {
    HEAP32[$vararg_buffer10 >> 2] = $45;
    HEAP32[$vararg_buffer10 + 4 >> 2] = $text;
    __ZN5ImGui7LogTextEPKcz(125036, $vararg_buffer10);
    break;
   } else {
    HEAP32[$vararg_buffer4 >> 2] = $20;
    HEAP32[$vararg_buffer4 + 4 >> 2] = 163344;
    HEAP32[$vararg_buffer4 + 8 >> 2] = $45;
    HEAP32[$vararg_buffer4 + 12 >> 2] = $text_remaining$0;
    __ZN5ImGui7LogTextEPKcz(125027, $vararg_buffer4);
    break;
   }
  } while (0);
  if ($39) break; else $text_remaining$0 = $line_end$2 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN8ImGuiStbL19stb_text_createundoEPNS_12StbUndoStateEiii($state, $pos, $insert_len, $delete_len) {
 $state = $state | 0;
 $pos = $pos | 0;
 $insert_len = $insert_len | 0;
 $delete_len = $delete_len | 0;
 var $$0 = 0, $$lcssa$i = 0, $10 = 0, $11 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $28 = 0, $30 = 0, $31 = 0, $36 = 0, $37 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $48 = 0, $50 = 0, $53 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $63 = 0, $65 = 0, $67 = 0, $72 = 0, $74 = 0, $75 = 0, $79 = 0, $80 = 0, $88 = 0, $95 = 0, $i$01$i$i = 0, $i$01$i3$i = 0;
 HEAP16[$state + 3188 >> 1] = 99;
 HEAP16[$state + 3192 >> 1] = 999;
 $2 = $state + 3186 | 0;
 if ((HEAP16[$2 >> 1] | 0) == 99) {
  $6 = HEAP16[$state + 8 >> 1] | 0;
  L3 : do if ($6 << 16 >> 16 > -1) {
   $10 = HEAP16[$state + 4 >> 1] | 0;
   $11 = $state + 3190 | 0;
   $14 = (HEAPU16[$11 >> 1] | 0) - $10 | 0;
   HEAP16[$11 >> 1] = $14;
   _memmove($state + 1188 | 0, $state + 1188 + ($10 << 1) | 0, $14 << 16 >> 15 | 0) | 0;
   $19 = HEAP16[$2 >> 1] | 0;
   if ($19 << 16 >> 16 > 0) {
    $21 = $19 << 16 >> 16;
    $23 = $6;
    $i$01$i3$i = 0;
    while (1) {
     if ($23 << 16 >> 16 > -1) HEAP16[$state + ($i$01$i3$i * 12 | 0) + 8 >> 1] = ($23 & 65535) - $10;
     $28 = $i$01$i3$i + 1 | 0;
     if (($28 | 0) >= ($21 | 0)) {
      $31 = $19;
      break L3;
     }
     $23 = HEAP16[$state + ($28 * 12 | 0) + 8 >> 1] | 0;
     $i$01$i3$i = $28;
    }
   } else $31 = $19;
  } else $31 = 99; while (0);
  $30 = $31 + -1 << 16 >> 16;
  HEAP16[$2 >> 1] = $30;
  _memmove($state | 0, $state + 12 | 0, ($30 << 16 >> 16) * 12 | 0) | 0;
 }
 if (($insert_len | 0) > 999) {
  HEAP16[$2 >> 1] = 0;
  HEAP16[$state + 3190 >> 1] = 0;
  $$0 = 0;
  return $$0 | 0;
 }
 $36 = $state + 3190 | 0;
 $37 = HEAP16[$36 >> 1] | 0;
 $41 = HEAP16[$2 >> 1] | 0;
 if ((($37 << 16 >> 16) + $insert_len | 0) > 999) {
  $42 = $state + 8 | 0;
  $43 = $state + 4 | 0;
  $44 = $state + 1188 | 0;
  $45 = $state + 12 | 0;
  $48 = $41;
  $58 = $37;
  while (1) {
   if ($48 << 16 >> 16 > 0) {
    $53 = HEAP16[$42 >> 1] | 0;
    L24 : do if ($53 << 16 >> 16 > -1) {
     $56 = HEAP16[$43 >> 1] | 0;
     $59 = ($58 & 65535) - $56 | 0;
     HEAP16[$36 >> 1] = $59;
     _memmove($44 | 0, $state + 1188 + ($56 << 1) | 0, $59 << 16 >> 15 | 0) | 0;
     $63 = HEAP16[$2 >> 1] | 0;
     if ($63 << 16 >> 16 > 0) {
      $65 = $63 << 16 >> 16;
      $67 = $53;
      $i$01$i$i = 0;
      while (1) {
       if ($67 << 16 >> 16 > -1) HEAP16[$state + ($i$01$i$i * 12 | 0) + 8 >> 1] = ($67 & 65535) - $56;
       $72 = $i$01$i$i + 1 | 0;
       if (($72 | 0) >= ($65 | 0)) {
        $75 = $63;
        break L24;
       }
       $67 = HEAP16[$state + ($72 * 12 | 0) + 8 >> 1] | 0;
       $i$01$i$i = $72;
      }
     } else $75 = $63;
    } else $75 = $48; while (0);
    $74 = $75 + -1 << 16 >> 16;
    HEAP16[$2 >> 1] = $74;
    _memmove($state | 0, $45 | 0, ($74 << 16 >> 16) * 12 | 0) | 0;
    $50 = HEAP16[$36 >> 1] | 0;
    $95 = HEAP16[$2 >> 1] | 0;
   } else {
    $50 = $58;
    $95 = $48;
   }
   if ((($50 << 16 >> 16) + $insert_len | 0) > 999) {
    $48 = $95;
    $58 = $50;
   } else {
    $$lcssa$i = $95;
    break;
   }
  }
 } else $$lcssa$i = $41;
 HEAP16[$2 >> 1] = $$lcssa$i + 1 << 16 >> 16;
 $79 = $$lcssa$i << 16 >> 16;
 $80 = $state + ($79 * 12 | 0) | 0;
 if (!$80) {
  $$0 = 0;
  return $$0 | 0;
 }
 HEAP32[$80 >> 2] = $pos;
 HEAP16[$state + ($79 * 12 | 0) + 4 >> 1] = $insert_len;
 HEAP16[$state + ($79 * 12 | 0) + 6 >> 1] = $delete_len;
 if (!$insert_len) {
  HEAP16[$state + ($79 * 12 | 0) + 8 >> 1] = -1;
  $$0 = 0;
  return $$0 | 0;
 } else {
  $88 = HEAP16[$36 >> 1] | 0;
  HEAP16[$state + ($79 * 12 | 0) + 8 >> 1] = $88;
  HEAP16[$36 >> 1] = ($88 & 65535) + $insert_len;
  $$0 = $state + 1188 + ($88 << 16 >> 16 << 1) | 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZN5Oryol3MapINS_7LocatorEiE3AddEONS_12KeyValuePairIS1_iEE($this, $kvp) {
 $this = $this | 0;
 $kvp = $kvp | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$i4 = 0, $$0$ph$i$i$i = 0, $$0$ph$lcssa7$i$i$i = 0, $$0$ph$us$i$i$i = 0, $$lcssa = 0, $$lcssa55 = 0, $$lcssa57 = 0, $$pre$i$i$i$i$i$i$i = 0, $12 = 0, $13 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $34 = 0, $35 = 0, $44 = 0, $5 = 0, $52 = 0, $7 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa53 = 0, $__len$0$ph$i$i$i = 0, $__len$0$ph$us$i$i$i = 0, $__len$0$us$us$i$i$i = 0, $__len$0$us$us$i$i$i$lcssa52 = 0, $slotConstructed$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $slotConstructed$i = sp;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 300, 113021);
  _abort();
 }
 $5 = $this + 12 | 0;
 $7 = $this + 8 | 0;
 if (((HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) | 0) == (0 - (HEAP32[$7 >> 2] | 0) | 0)) __ZN5Oryol3MapINS_7LocatorEiE4growEv($this);
 $12 = HEAP32[$this >> 2] | 0;
 $13 = ($12 | 0) == 0;
 if ($13) {
  $$0$i1 = 0;
  $$0$i4 = 0;
 } else {
  $$0$i1 = $12 + ((HEAP32[$5 >> 2] | 0) * 12 | 0) | 0;
  $$0$i4 = $12 + ((HEAP32[$7 >> 2] | 0) * 12 | 0) | 0;
 }
 $20 = ($$0$i1 - $$0$i4 | 0) / 12 | 0;
 $21 = $kvp + 4 | 0;
 $22 = HEAP32[$21 >> 2] | 0;
 $23 = HEAP32[$kvp >> 2] | 0;
 L10 : do if (!$23) {
  $$0$ph$us$i$i$i = $$0$i4;
  $__len$0$ph$us$i$i$i = $20;
  while (1) {
   $__len$0$us$us$i$i$i = $__len$0$ph$us$i$i$i;
   while (1) {
    if (!$__len$0$us$us$i$i$i) {
     $$0$ph$lcssa7$i$i$i = $$0$ph$us$i$i$i;
     break L10;
    }
    $26 = ($__len$0$us$us$i$i$i | 0) / 2 | 0;
    if ((HEAP32[$$0$ph$us$i$i$i + ($26 * 12 | 0) + 4 >> 2] | 0) >>> 0 < $22 >>> 0) {
     $$lcssa = $26;
     $__len$0$us$us$i$i$i$lcssa52 = $__len$0$us$us$i$i$i;
     break;
    } else $__len$0$us$us$i$i$i = $26;
   }
   $$0$ph$us$i$i$i = $$0$ph$us$i$i$i + ($$lcssa * 12 | 0) + 12 | 0;
   $__len$0$ph$us$i$i$i = $__len$0$us$us$i$i$i$lcssa52 + -1 - $$lcssa | 0;
  }
 } else {
  $$0$ph$i$i$i = $$0$i4;
  $__len$0$ph$i$i$i = $20;
  L17 : while (1) {
   $__len$0$i$i$i = $__len$0$ph$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i) {
     $$0$ph$lcssa7$i$i$i = $$0$ph$i$i$i;
     break L10;
    }
    $34 = ($__len$0$i$i$i | 0) / 2 | 0;
    $35 = $$0$ph$i$i$i + ($34 * 12 | 0) | 0;
    if ((HEAP32[$$0$ph$i$i$i + ($34 * 12 | 0) + 4 >> 2] | 0) >>> 0 < $22 >>> 0) {
     $$lcssa55 = $34;
     $$lcssa57 = $35;
     $__len$0$i$i$i$lcssa53 = $__len$0$i$i$i;
     break;
    }
    $$pre$i$i$i$i$i$i$i = HEAP32[$35 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i$i) $44 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$23 >> 2] | 0)) $44 = $$pre$i$i$i$i$i$i$i; else break L17;
    if ($44 >>> 0 < $23 >>> 0) {
     $$lcssa55 = $34;
     $$lcssa57 = $35;
     $__len$0$i$i$i$lcssa53 = $__len$0$i$i$i;
     break;
    } else $__len$0$i$i$i = $34;
   }
   $$0$ph$i$i$i = $$lcssa57 + 12 | 0;
   $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa53 + -1 - $$lcssa55 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if ($13) $$0$i2 = 0; else $$0$i2 = $12 + ((HEAP32[$7 >> 2] | 0) * 12 | 0) | 0;
 HEAP8[$slotConstructed$i >> 0] = 1;
 $52 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE13prepareInsertEiRb($this, ($$0$ph$lcssa7$i$i$i - $$0$i2 | 0) / 12 | 0, $slotConstructed$i) | 0;
 if (!(HEAP8[$slotConstructed$i >> 0] | 0)) {
  __ZN5Oryol10StringAtom4copyERKS0_($52, $kvp);
  HEAP32[$52 + 4 >> 2] = HEAP32[$21 >> 2];
  HEAP32[$52 + 8 >> 2] = HEAP32[$kvp + 8 >> 2];
  STACKTOP = sp;
  return;
 }
 if (($52 | 0) == ($kvp | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$52 >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($52, $kvp);
 HEAP32[$52 + 4 >> 2] = HEAP32[$21 >> 2];
 HEAP32[$52 + 8 >> 2] = HEAP32[$kvp + 8 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glRenderer13updateTextureEPNS0_7textureEPKvRKNS_14ImageDataAttrsE($this, $tex, $data, $offsetsAndSizes) {
 $this = $this | 0;
 $tex = $tex | 0;
 $data = $data | 0;
 $offsetsAndSizes = $offsetsAndSizes | 0;
 var $$$i = 0, $12 = 0, $18 = 0, $24 = 0, $25 = 0, $29 = 0, $30 = 0, $35 = 0, $41 = 0, $44 = 0, $46 = 0, $49 = 0, $50 = 0, $59 = 0, $62 = 0, $mipIndex$03 = 0, $switch$tableidx$i = 0, label = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 648, 70252);
  _abort();
 }
 if (!$tex) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70367, 0, 66399, 649, 70252);
  _abort();
 }
 if (!$data) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80919, 0, 66399, 650, 70252);
  _abort();
 }
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 651, 70252);
  _abort();
 }
 if (HEAP32[$tex + 712 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70382, 0, 66399, 655, 70252);
  _abort();
 }
 if (!(HEAP32[$tex + 724 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70419, 0, 66399, 656, 70252);
  _abort();
 }
 $12 = $tex + 716 | 0;
 $switch$tableidx$i = (HEAP32[$12 >> 2] | 0) + -8 | 0;
 if ($switch$tableidx$i >>> 0 < 11) if (2023 >>> ($switch$tableidx$i & 2047) & 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70458, 0, 66399, 657, 70252);
  _abort();
 }
 $18 = $tex + 740 | 0;
 if ((HEAP32[$offsetsAndSizes + 4 >> 2] | 0) != (HEAP32[$18 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70510, 0, 66399, 658, 70252);
  _abort();
 }
 if ((HEAP32[$offsetsAndSizes >> 2] | 0) != 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70557, 0, 66399, 659, 70252);
  _abort();
 }
 $24 = HEAP32[$this + 204 >> 2] | 0;
 $25 = $tex + 760 | 0;
 if ((HEAP32[$25 >> 2] | 0) == ($24 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70587, 70623, 66399, 636, 70676);
  _abort();
 }
 HEAP32[$25 >> 2] = $24;
 $29 = HEAP16[$tex + 764 >> 1] | 0;
 $30 = $29 & 255;
 if (($30 & 255) <= 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70747, 0, 66399, 638, 70676);
  _abort();
 }
 $35 = (($29 & 65535) >>> 8 & 255) + 1 << 24 >> 24;
 $$$i = ($35 & 255) < ($30 & 255) ? $35 : 0;
 HEAP8[$tex + 765 >> 0] = $$$i;
 if (($$$i & 255) >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 73407);
  _abort();
 }
 $41 = $tex + 748 | 0;
 __ZN5Oryol5_priv10glRenderer11bindTextureEijj($this, 0, HEAP32[$41 >> 2] | 0, HEAP32[$tex + 768 + (($$$i & 255) << 2) >> 2] | 0);
 $44 = __ZN5Oryol5_priv7glTypes18asGLTexImageFormatENS_11PixelFormat4CodeE(HEAP32[$12 >> 2] | 0) | 0;
 $46 = __ZN5Oryol5_priv7glTypes16asGLTexImageTypeENS_11PixelFormat4CodeE(HEAP32[$12 >> 2] | 0) | 0;
 if ((HEAP32[$18 >> 2] | 0) <= 0) return;
 $49 = $tex + 728 | 0;
 $50 = $tex + 732 | 0;
 $mipIndex$03 = 0;
 while (1) {
  if ($mipIndex$03 >>> 0 >= 12) {
   label = 31;
   break;
  }
  if ((HEAP32[$offsetsAndSizes + 296 + ($mipIndex$03 << 2) >> 2] | 0) <= 0) {
   label = 33;
   break;
  }
  $59 = HEAP32[$49 >> 2] >> $mipIndex$03;
  $62 = HEAP32[$50 >> 2] >> $mipIndex$03;
  _glTexSubImage2D(HEAP32[$41 >> 2] | 0, $mipIndex$03 | 0, 0, 0, (($59 | 0) == 0 ? 1 : $59) | 0, (($62 | 0) == 0 ? 1 : $62) | 0, $44 | 0, $46 | 0, $data + (HEAP32[$offsetsAndSizes + 8 + ($mipIndex$03 << 2) >> 2] | 0) | 0);
  $mipIndex$03 = $mipIndex$03 + 1 | 0;
  if (_glGetError() | 0) {
   label = 35;
   break;
  }
  if (($mipIndex$03 | 0) >= (HEAP32[$18 >> 2] | 0)) {
   label = 29;
   break;
  }
 }
 if ((label | 0) == 29) return; else if ((label | 0) == 31) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 73989);
  _abort();
 } else if ((label | 0) == 33) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70949, 0, 66399, 667, 70252);
  _abort();
 } else if ((label | 0) == 35) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 681, 70252);
  _abort();
 }
}

function __ZN5Oryol5_priv24gfxResourceContainerBase7DestroyENS_13ResourceLabelE($this, $label) {
 $this = $this | 0;
 $label = $label | 0;
 var $$pre = 0, $0 = 0, $11 = 0, $12 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $28 = 0, $34 = 0, $38 = 0, $4 = 0, $42 = 0, $46 = 0, $9 = 0, $__begin$03 = 0, $ids = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $ids = sp + 8 | 0;
 $0 = sp;
 if (!(__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 48725, 308, 56784);
  _abort();
 }
 HEAP32[$0 >> 2] = HEAP32[$label >> 2];
 __ZN5Oryol5_priv16resourceRegistry6RemoveENS_13ResourceLabelE($ids, $this + 24 | 0, $0);
 $4 = HEAP32[$ids >> 2] | 0;
 if (!$4) {
  HEAP32[$ids + 16 >> 2] = 0;
  HEAP32[$ids + 20 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $9 = HEAP32[$ids + 8 >> 2] | 0;
 $11 = HEAP32[$ids + 12 >> 2] | 0;
 $12 = $4 + ($11 << 3) | 0;
 if (($9 | 0) == ($11 | 0)) {
  HEAP32[$ids + 16 >> 2] = 0;
  HEAP32[$ids + 20 >> 2] = 0;
  $28 = $4;
 } else {
  $17 = $this + 400 | 0;
  $18 = $this + 208 | 0;
  $19 = $this + 272 | 0;
  $20 = $this + 144 | 0;
  $21 = $this + 336 | 0;
  $22 = $this + 176 | 0;
  $23 = $this + 464 | 0;
  $24 = $this + 240 | 0;
  $__begin$03 = $4 + ($9 << 3) | 0;
  L11 : do {
   switch (HEAPU16[$__begin$03 + 2 >> 1] | 0 | 0) {
   case 0:
    {
     if ((__ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE10QueryStateERKNS_2IdE($17, $__begin$03) | 0) == 3) {
      $34 = __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6LookupERKNS_2IdE($17, $__begin$03) | 0;
      if ($34 | 0) __ZN5Oryol5_priv16glTextureFactory15DestroyResourceERNS0_7textureE($18, $34);
     }
     __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE8UnassignERKNS_2IdE($17, $__begin$03);
     break;
    }
   case 1:
    {
     if ((__ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE10QueryStateERKNS_2IdE($19, $__begin$03) | 0) == 3) {
      $38 = __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6LookupERKNS_2IdE($19, $__begin$03) | 0;
      if ($38 | 0) __ZN5Oryol5_priv13glMeshFactory15DestroyResourceERNS0_4meshE($20, $38);
     }
     __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE8UnassignERKNS_2IdE($19, $__begin$03);
     break;
    }
   case 2:
    {
     if ((__ZNK5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE10QueryStateERKNS_2IdE($21, $__begin$03) | 0) == 3) {
      $42 = __ZNK5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE6LookupERKNS_2IdE($21, $__begin$03) | 0;
      if ($42 | 0) __ZN5Oryol5_priv15glShaderFactory15DestroyResourceERNS0_6shaderE($22, $42);
     }
     __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE8UnassignERKNS_2IdE($21, $__begin$03);
     break;
    }
   case 3:
    {
     if ((__ZNK5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE10QueryStateERKNS_2IdE($23, $__begin$03) | 0) == 3) {
      $46 = __ZNK5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE6LookupERKNS_2IdE($23, $__begin$03) | 0;
      if ($46 | 0) __ZN5Oryol5_priv17glPipelineFactory15DestroyResourceERNS0_8pipelineE($24, $46);
     }
     __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE8UnassignERKNS_2IdE($23, $__begin$03);
     break;
    }
   default:
    {
     label = 28;
     break L11;
    }
   }
   $__begin$03 = $__begin$03 + 8 | 0;
  } while (($__begin$03 | 0) != ($12 | 0));
  if ((label | 0) == 28) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 48725, 362, 56784);
   _abort();
  }
  $$pre = HEAP32[$ids >> 2] | 0;
  HEAP32[$ids + 16 >> 2] = 0;
  HEAP32[$ids + 20 >> 2] = 0;
  if (!$$pre) {
   STACKTOP = sp;
   return;
  } else $28 = $$pre;
 }
 __ZN5Oryol6Memory4FreeEPv($28);
 STACKTOP = sp;
 return;
}

function _fmodf($x, $y) {
 $x = +$x;
 $y = +$y;
 var $$0 = 0.0, $$lcssa = 0, $$lcssa6 = 0, $0 = 0, $1 = 0, $12 = 0.0, $14 = 0, $19 = 0, $21 = 0, $29 = 0, $3 = 0, $31 = 0, $39 = 0, $40 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $5 = 0, $51 = 0, $52 = 0, $6 = 0, $62 = 0, $63 = 0, $7 = 0, $ex$0$lcssa = 0, $ex$025 = 0, $ex$1 = 0, $ex$2$lcssa = 0, $ex$211 = 0, $ex$3$lcssa = 0, $ex$38 = 0, $ey$0$lcssa = 0, $ey$019 = 0, $ey$1$ph = 0, $fabs = 0.0, $i$026 = 0, $i$120 = 0, $uxi$0 = 0, $uxi$1$lcssa = 0, $uxi$112 = 0, $uxi$2 = 0, $uxi$3$lcssa = 0, $uxi$3$ph = 0, $uxi$39 = 0, $uxi$4 = 0, $uy$sroa$0$0$ph = 0, label = 0;
 $0 = (HEAPF32[tempDoublePtr >> 2] = $x, HEAP32[tempDoublePtr >> 2] | 0);
 $1 = (HEAPF32[tempDoublePtr >> 2] = $y, HEAP32[tempDoublePtr >> 2] | 0);
 $3 = $0 >>> 23 & 255;
 $5 = $1 >>> 23 & 255;
 $6 = $0 & -2147483648;
 $7 = $1 << 1;
 L1 : do if (!$7) label = 3; else {
  $fabs = +Math_abs(+$y);
  if ((HEAPF32[tempDoublePtr >> 2] = $fabs, HEAP32[tempDoublePtr >> 2] | 0) >>> 0 > 2139095040 | ($3 | 0) == 255) label = 3; else {
   $14 = $0 << 1;
   if ($14 >>> 0 <= $7 >>> 0) return +(($14 | 0) == ($7 | 0) ? $x * 0.0 : $x);
   if (!$3) {
    $19 = $0 << 9;
    if (($19 | 0) > -1) {
     $ex$025 = 0;
     $i$026 = $19;
     while (1) {
      $21 = $ex$025 + -1 | 0;
      $i$026 = $i$026 << 1;
      if (($i$026 | 0) <= -1) {
       $ex$0$lcssa = $21;
       break;
      } else $ex$025 = $21;
     }
    } else $ex$0$lcssa = 0;
    $ex$1 = $ex$0$lcssa;
    $uxi$0 = $0 << 1 - $ex$0$lcssa;
   } else {
    $ex$1 = $3;
    $uxi$0 = $0 & 8388607 | 8388608;
   }
   if (!$5) {
    $29 = $1 << 9;
    if (($29 | 0) > -1) {
     $ey$019 = 0;
     $i$120 = $29;
     while (1) {
      $31 = $ey$019 + -1 | 0;
      $i$120 = $i$120 << 1;
      if (($i$120 | 0) <= -1) {
       $ey$0$lcssa = $31;
       break;
      } else $ey$019 = $31;
     }
    } else $ey$0$lcssa = 0;
    $ey$1$ph = $ey$0$lcssa;
    $uy$sroa$0$0$ph = $1 << 1 - $ey$0$lcssa;
   } else {
    $ey$1$ph = $5;
    $uy$sroa$0$0$ph = $1 & 8388607 | 8388608;
   }
   $39 = $uxi$0 - $uy$sroa$0$0$ph | 0;
   $40 = ($39 | 0) > -1;
   L23 : do if (($ex$1 | 0) > ($ey$1$ph | 0)) {
    $62 = $40;
    $63 = $39;
    $ex$211 = $ex$1;
    $uxi$112 = $uxi$0;
    while (1) {
     if ($62) if (($uxi$112 | 0) == ($uy$sroa$0$0$ph | 0)) break; else $uxi$2 = $63; else $uxi$2 = $uxi$112;
     $43 = $uxi$2 << 1;
     $44 = $ex$211 + -1 | 0;
     $46 = $43 - $uy$sroa$0$0$ph | 0;
     $47 = ($46 | 0) > -1;
     if (($44 | 0) > ($ey$1$ph | 0)) {
      $62 = $47;
      $63 = $46;
      $ex$211 = $44;
      $uxi$112 = $43;
     } else {
      $$lcssa = $46;
      $$lcssa6 = $47;
      $ex$2$lcssa = $44;
      $uxi$1$lcssa = $43;
      break L23;
     }
    }
    $$0 = $x * 0.0;
    break L1;
   } else {
    $$lcssa = $39;
    $$lcssa6 = $40;
    $ex$2$lcssa = $ex$1;
    $uxi$1$lcssa = $uxi$0;
   } while (0);
   if ($$lcssa6) if (($uxi$1$lcssa | 0) == ($uy$sroa$0$0$ph | 0)) {
    $$0 = $x * 0.0;
    break;
   } else $uxi$3$ph = $$lcssa; else $uxi$3$ph = $uxi$1$lcssa;
   if ($uxi$3$ph >>> 0 < 8388608) {
    $ex$38 = $ex$2$lcssa;
    $uxi$39 = $uxi$3$ph;
    while (1) {
     $51 = $uxi$39 << 1;
     $52 = $ex$38 + -1 | 0;
     if ($51 >>> 0 < 8388608) {
      $ex$38 = $52;
      $uxi$39 = $51;
     } else {
      $ex$3$lcssa = $52;
      $uxi$3$lcssa = $51;
      break;
     }
    }
   } else {
    $ex$3$lcssa = $ex$2$lcssa;
    $uxi$3$lcssa = $uxi$3$ph;
   }
   if (($ex$3$lcssa | 0) > 0) $uxi$4 = $uxi$3$lcssa + -8388608 | $ex$3$lcssa << 23; else $uxi$4 = $uxi$3$lcssa >>> (1 - $ex$3$lcssa | 0);
   $$0 = (HEAP32[tempDoublePtr >> 2] = $uxi$4 | $6, +HEAPF32[tempDoublePtr >> 2]);
  }
 } while (0);
 if ((label | 0) == 3) {
  $12 = $x * $y;
  $$0 = $12 / $12;
 }
 return +$$0;
}

function __ZN5Oryol3App10addBlockerENS_8AppState4CodeE($this, $blockedState) {
 $this = $this | 0;
 $blockedState = $blockedState | 0;
 var $$0$i$i1$i = 0, $$0$i$i1$i2 = 0, $$0$i$i2$i = 0, $$0$i$i2$i1 = 0, $$0$ph$i$i$i$i = 0, $$0$ph$i$i$i$i$i = 0, $$0$ph$i$i$i$i$i$lcssa = 0, $$0$ph$i$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa30 = 0, $$lcssa32 = 0, $$lcssa33 = 0, $0 = 0, $1 = 0, $14 = 0, $15 = 0, $2 = 0, $30 = 0, $34 = 0, $35 = 0, $45 = 0, $47 = 0, $55 = 0, $57 = 0, $60 = 0, $__len$0$i$i$i$i = 0, $__len$0$i$i$i$i$i = 0, $__len$0$i$i$i$i$i$lcssa31 = 0, $__len$0$i$i$i$i$lcssa29 = 0, $__len$0$ph$i$i$i$i = 0, $__len$0$ph$i$i$i$i$i = 0, $growBy$0$i$i = 0, $slotConstructed$i$i = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $slotConstructed$i$i = sp + 4 | 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = ($1 | 0) == 0;
 if ($2) {
  $$0$i$i1$i = 0;
  $$0$i$i2$i = 0;
 } else {
  $$0$i$i1$i = $1 + (HEAP32[$this + 24 >> 2] << 2) | 0;
  $$0$i$i2$i = $1 + (HEAP32[$this + 20 >> 2] << 2) | 0;
 }
 $$0$ph$i$i$i$i$i = $$0$i$i2$i;
 $__len$0$ph$i$i$i$i$i = $$0$i$i1$i - $$0$i$i2$i >> 2;
 L4 : while (1) {
  $__len$0$i$i$i$i$i = $__len$0$ph$i$i$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i$i$i) {
    $$0$ph$i$i$i$i$i$lcssa = $$0$ph$i$i$i$i$i;
    break L4;
   }
   $14 = ($__len$0$i$i$i$i$i | 0) / 2 | 0;
   $15 = $$0$ph$i$i$i$i$i + ($14 << 2) | 0;
   if ((HEAP32[$15 >> 2] | 0) < ($blockedState | 0)) {
    $$lcssa32 = $14;
    $$lcssa33 = $15;
    $__len$0$i$i$i$i$i$lcssa31 = $__len$0$i$i$i$i$i;
    break;
   } else $__len$0$i$i$i$i$i = $14;
  }
  $$0$ph$i$i$i$i$i = $$lcssa33 + 4 | 0;
  $__len$0$ph$i$i$i$i$i = $__len$0$i$i$i$i$i$lcssa31 + -1 - $$lcssa32 | 0;
 }
 if (($$0$ph$i$i$i$i$i$lcssa | 0) != ($$0$i$i1$i | 0)) if ((HEAP32[$$0$ph$i$i$i$i$i$lcssa >> 2] | 0) <= ($blockedState | 0)) {
  STACKTOP = sp;
  return;
 }
 if ($2) {
  $$0$i$i1$i2 = 0;
  $$0$i$i2$i1 = 0;
 } else {
  $$0$i$i1$i2 = $1 + (HEAP32[$this + 24 >> 2] << 2) | 0;
  $$0$i$i2$i1 = $1 + (HEAP32[$this + 20 >> 2] << 2) | 0;
 }
 $30 = $$0$i$i2$i1;
 $$0$ph$i$i$i$i = $$0$i$i2$i1;
 $__len$0$ph$i$i$i$i = $$0$i$i1$i2 - $30 >> 2;
 L18 : while (1) {
  $__len$0$i$i$i$i = $__len$0$ph$i$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i$i) {
    $$0$ph$i$i$i$i$lcssa = $$0$ph$i$i$i$i;
    break L18;
   }
   $34 = ($__len$0$i$i$i$i | 0) / 2 | 0;
   $35 = $$0$ph$i$i$i$i + ($34 << 2) | 0;
   if ((HEAP32[$35 >> 2] | 0) < ($blockedState | 0)) {
    $$lcssa = $34;
    $$lcssa30 = $35;
    $__len$0$i$i$i$i$lcssa29 = $__len$0$i$i$i$i;
    break;
   } else $__len$0$i$i$i$i = $34;
  }
  $$0$ph$i$i$i$i = $$lcssa30 + 4 | 0;
  $__len$0$ph$i$i$i$i = $__len$0$i$i$i$i$lcssa29 + -1 - $$lcssa | 0;
 }
 if (($$0$ph$i$i$i$i$lcssa | 0) != ($$0$i$i1$i2 | 0)) if ((HEAP32[$$0$ph$i$i$i$i$lcssa >> 2] | 0) == ($blockedState | 0)) {
  __ZN5Oryol3Log5ErrorEPKcz(122390, $vararg_buffer);
  _abort();
 }
 $45 = $$0$ph$i$i$i$i$lcssa - $30 >> 2;
 $47 = HEAP32[$this + 16 >> 2] | 0;
 do if (($47 - (HEAP32[$this + 24 >> 2] | 0) | 0) == (0 - (HEAP32[$this + 20 >> 2] | 0) | 0)) {
  $55 = $47 >> 1;
  $57 = HEAP32[$this + 28 >> 2] | 0;
  if (($55 | 0) < ($57 | 0)) $growBy$0$i$i = $57; else {
   $60 = HEAP32[$this + 32 >> 2] | 0;
   $growBy$0$i$i = ($55 | 0) > ($60 | 0) ? $60 : $55;
  }
  if (($growBy$0$i$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE5allocEii($0, $growBy$0$i$i + $47 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 116304);
   _abort();
  }
 } while (0);
 HEAP8[$slotConstructed$i$i >> 0] = 1;
 HEAP32[(__ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE13prepareInsertEiRb($0, $45, $slotConstructed$i$i) | 0) >> 2] = $blockedState;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6AssignERKNS_2IdERKS3_NS_13ResourceState4CodeE($this, $id, $setup, $state) {
 $this = $this | 0;
 $id = $id | 0;
 $setup = $setup | 0;
 $state = $state | 0;
 var $$sink = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $22 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $34 = 0, $35 = 0, $39 = 0, $44 = 0, $46 = 0, $50 = 0, $51 = 0, $52 = 0, $55 = 0, $57 = 0, $62 = 0, $64 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, dest = 0, src = 0, stop = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 169, 54580);
  _abort();
 }
 $3 = HEAPU16[$id >> 1] | 0;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 54475);
  _abort();
 }
 $11 = HEAP32[$this + 16 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 54475);
  _abort();
 }
 $13 = $7 + $3 | 0;
 $14 = $11 + ($13 * 776 | 0) | 0;
 $15 = $11 + ($13 * 776 | 0) + 8 | 0;
 if ((HEAP32[$15 >> 2] | 0) == 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53850, 0, 48917, 172, 54580);
  _abort();
 }
 HEAP32[$15 >> 2] = $state;
 HEAP32[$11 + ($13 * 776 | 0) + 12 >> 2] = HEAP32[$this + 4 >> 2];
 if (($14 | 0) != ($id | 0)) {
  $22 = $id;
  $27 = HEAP32[$22 + 4 >> 2] | 0;
  $28 = $14;
  HEAP32[$28 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$28 + 4 >> 2] = $27;
 }
 $32 = $11 + ($13 * 776 | 0) + 16 | 0;
 dest = $32;
 src = $setup;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($32 | 0) == ($setup | 0)) {
  $34 = $11 + ($13 * 776 | 0) + 64 | 0;
  $35 = $setup + 48 | 0;
  HEAP32[$34 >> 2] = HEAP32[$35 >> 2];
  HEAP32[$34 + 4 >> 2] = HEAP32[$35 + 4 >> 2];
  HEAP32[$34 + 8 >> 2] = HEAP32[$35 + 8 >> 2];
  HEAP32[$34 + 12 >> 2] = HEAP32[$35 + 12 >> 2];
  HEAP32[$34 + 16 >> 2] = HEAP32[$35 + 16 >> 2];
  HEAP32[$34 + 20 >> 2] = HEAP32[$35 + 20 >> 2];
  HEAP32[$34 + 24 >> 2] = HEAP32[$35 + 24 >> 2];
  $$sink = HEAP32[$setup + 80 >> 2] | 0;
  $68 = $11 + ($13 * 776 | 0) + 96 | 0;
  HEAP32[$68 >> 2] = $$sink;
  $69 = $11 + ($13 * 776 | 0) + 112 | 0;
  $70 = $setup + 96 | 0;
  __ZN5Oryol14ImageDataAttrsaSERKS0_($69, $70) | 0;
  $71 = $11 + ($13 * 776 | 0) + 696 | 0;
  $72 = $setup + 680 | 0;
  $73 = HEAP8[$72 >> 0] | 0;
  HEAP8[$71 >> 0] = $73;
  return $14 | 0;
 } else {
  $39 = $setup + 40 | 0;
  $44 = HEAP32[$39 + 4 >> 2] | 0;
  $46 = $11 + ($13 * 776 | 0) + 56 | 0;
  HEAP32[$46 >> 2] = HEAP32[$39 >> 2];
  HEAP32[$46 + 4 >> 2] = $44;
  $50 = $11 + ($13 * 776 | 0) + 64 | 0;
  $51 = $setup + 48 | 0;
  HEAP32[$50 >> 2] = HEAP32[$51 >> 2];
  HEAP32[$50 + 4 >> 2] = HEAP32[$51 + 4 >> 2];
  HEAP32[$50 + 8 >> 2] = HEAP32[$51 + 8 >> 2];
  HEAP32[$50 + 12 >> 2] = HEAP32[$51 + 12 >> 2];
  HEAP32[$50 + 16 >> 2] = HEAP32[$51 + 16 >> 2];
  HEAP32[$50 + 20 >> 2] = HEAP32[$51 + 20 >> 2];
  HEAP32[$50 + 24 >> 2] = HEAP32[$51 + 24 >> 2];
  $52 = $11 + ($13 * 776 | 0) + 92 | 0;
  HEAP32[$52 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($52, $setup + 76 | 0);
  $55 = HEAP32[$setup + 80 >> 2] | 0;
  $57 = $setup + 88 | 0;
  $62 = HEAP32[$57 + 4 >> 2] | 0;
  $64 = $11 + ($13 * 776 | 0) + 104 | 0;
  HEAP32[$64 >> 2] = HEAP32[$57 >> 2];
  HEAP32[$64 + 4 >> 2] = $62;
  $$sink = $55;
  $68 = $11 + ($13 * 776 | 0) + 96 | 0;
  HEAP32[$68 >> 2] = $$sink;
  $69 = $11 + ($13 * 776 | 0) + 112 | 0;
  $70 = $setup + 96 | 0;
  __ZN5Oryol14ImageDataAttrsaSERKS0_($69, $70) | 0;
  $71 = $11 + ($13 * 776 | 0) + 696 | 0;
  $72 = $setup + 680 | 0;
  $73 = HEAP8[$72 >> 0] | 0;
  HEAP8[$71 >> 0] = $73;
  return $14 | 0;
 }
 return 0;
}

function __ZN10ImDrawList5ClearEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $31 = 0, $32 = 0, $33 = 0, $36 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $50 = 0, $51 = 0, $52 = 0, $55 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $66 = 0, $67 = 0, $68 = 0, $71 = 0, $73 = 0, $76 = 0, $77 = 0, $82 = 0, $83 = 0, $84 = 0, $87 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $98 = 0, $99 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) < 0) {
  $4 = (($1 | 0) / 2 | 0) + $1 | 0;
  $6 = ($4 | 0) > 0 ? $4 : 0;
  if (($1 | 0) < ($6 | 0)) {
   $9 = __ZN5ImGui8MemAllocEj($6 << 5) | 0;
   $10 = $this + 8 | 0;
   _memcpy($9 | 0, HEAP32[$10 >> 2] | 0, HEAP32[$this >> 2] << 5 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$10 >> 2] | 0);
   HEAP32[$10 >> 2] = $9;
   HEAP32[$0 >> 2] = $6;
  }
 }
 HEAP32[$this >> 2] = 0;
 $15 = $this + 12 | 0;
 $16 = $this + 16 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 | 0) < 0) {
  $20 = (($17 | 0) / 2 | 0) + $17 | 0;
  $22 = ($20 | 0) > 0 ? $20 : 0;
  if (($17 | 0) < ($22 | 0)) {
   $25 = __ZN5ImGui8MemAllocEj($22 << 1) | 0;
   $26 = $this + 20 | 0;
   _memcpy($25 | 0, HEAP32[$26 >> 2] | 0, HEAP32[$15 >> 2] << 1 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$26 >> 2] | 0);
   HEAP32[$26 >> 2] = $25;
   HEAP32[$16 >> 2] = $22;
  }
 }
 HEAP32[$15 >> 2] = 0;
 $31 = $this + 24 | 0;
 $32 = $this + 28 | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 if (($33 | 0) < 0) {
  $36 = (($33 | 0) / 2 | 0) + $33 | 0;
  $38 = ($36 | 0) > 0 ? $36 : 0;
  if (($33 | 0) < ($38 | 0)) {
   $41 = __ZN5ImGui8MemAllocEj($38 * 20 | 0) | 0;
   $42 = $this + 32 | 0;
   _memcpy($41 | 0, HEAP32[$42 >> 2] | 0, (HEAP32[$31 >> 2] | 0) * 20 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$42 >> 2] | 0);
   HEAP32[$42 >> 2] = $41;
   HEAP32[$32 >> 2] = $38;
  }
 }
 HEAP32[$31 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this + 48 >> 2] = 0;
 $50 = $this + 52 | 0;
 $51 = $this + 56 | 0;
 $52 = HEAP32[$51 >> 2] | 0;
 if (($52 | 0) < 0) {
  $55 = (($52 | 0) / 2 | 0) + $52 | 0;
  $57 = ($55 | 0) > 0 ? $55 : 0;
  if (($52 | 0) < ($57 | 0)) {
   $60 = __ZN5ImGui8MemAllocEj($57 << 4) | 0;
   $61 = $this + 60 | 0;
   _memcpy($60 | 0, HEAP32[$61 >> 2] | 0, HEAP32[$50 >> 2] << 4 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$61 >> 2] | 0);
   HEAP32[$61 >> 2] = $60;
   HEAP32[$51 >> 2] = $57;
  }
 }
 HEAP32[$50 >> 2] = 0;
 $66 = $this + 64 | 0;
 $67 = $this + 68 | 0;
 $68 = HEAP32[$67 >> 2] | 0;
 if (($68 | 0) < 0) {
  $71 = (($68 | 0) / 2 | 0) + $68 | 0;
  $73 = ($71 | 0) > 0 ? $71 : 0;
  if (($68 | 0) < ($73 | 0)) {
   $76 = __ZN5ImGui8MemAllocEj($73 << 2) | 0;
   $77 = $this + 72 | 0;
   _memcpy($76 | 0, HEAP32[$77 >> 2] | 0, HEAP32[$66 >> 2] << 2 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$77 >> 2] | 0);
   HEAP32[$77 >> 2] = $76;
   HEAP32[$67 >> 2] = $73;
  }
 }
 HEAP32[$66 >> 2] = 0;
 $82 = $this + 76 | 0;
 $83 = $this + 80 | 0;
 $84 = HEAP32[$83 >> 2] | 0;
 if (($84 | 0) >= 0) {
  HEAP32[$82 >> 2] = 0;
  $98 = $this + 88 | 0;
  HEAP32[$98 >> 2] = 0;
  $99 = $this + 92 | 0;
  HEAP32[$99 >> 2] = 1;
  return;
 }
 $87 = (($84 | 0) / 2 | 0) + $84 | 0;
 $89 = ($87 | 0) > 0 ? $87 : 0;
 if (($84 | 0) >= ($89 | 0)) {
  HEAP32[$82 >> 2] = 0;
  $98 = $this + 88 | 0;
  HEAP32[$98 >> 2] = 0;
  $99 = $this + 92 | 0;
  HEAP32[$99 >> 2] = 1;
  return;
 }
 $92 = __ZN5ImGui8MemAllocEj($89 << 3) | 0;
 $93 = $this + 84 | 0;
 _memcpy($92 | 0, HEAP32[$93 >> 2] | 0, HEAP32[$82 >> 2] << 3 | 0) | 0;
 __ZN5ImGui7MemFreeEPv(HEAP32[$93 >> 2] | 0);
 HEAP32[$93 >> 2] = $92;
 HEAP32[$83 >> 2] = $89;
 HEAP32[$82 >> 2] = 0;
 $98 = $this + 88 | 0;
 HEAP32[$98 >> 2] = 0;
 $99 = $this + 92 | 0;
 HEAP32[$99 >> 2] = 1;
 return;
}

function __ZN4yakc6memory9unmap_allEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $8 = 0, $9 = 0, $__begin$02 = 0, $layer_index$03$lcssa$i = 0, $page_index$04$i = 0, label = 0;
 $0 = $this + 1024 | 0;
 $__begin$02 = $this;
 do {
  HEAP32[$__begin$02 >> 2] = 0;
  HEAP8[$__begin$02 + 4 >> 0] = 0;
  HEAP32[$__begin$02 + 8 >> 2] = 0;
  HEAP8[$__begin$02 + 12 >> 0] = 0;
  HEAP32[$__begin$02 + 16 >> 2] = 0;
  HEAP8[$__begin$02 + 20 >> 0] = 0;
  HEAP32[$__begin$02 + 24 >> 2] = 0;
  HEAP8[$__begin$02 + 28 >> 0] = 0;
  HEAP32[$__begin$02 + 32 >> 2] = 0;
  HEAP8[$__begin$02 + 36 >> 0] = 0;
  HEAP32[$__begin$02 + 40 >> 2] = 0;
  HEAP8[$__begin$02 + 44 >> 0] = 0;
  HEAP32[$__begin$02 + 48 >> 2] = 0;
  HEAP8[$__begin$02 + 52 >> 0] = 0;
  HEAP32[$__begin$02 + 56 >> 2] = 0;
  HEAP8[$__begin$02 + 60 >> 0] = 0;
  HEAP32[$__begin$02 + 64 >> 2] = 0;
  HEAP8[$__begin$02 + 68 >> 0] = 0;
  HEAP32[$__begin$02 + 72 >> 2] = 0;
  HEAP8[$__begin$02 + 76 >> 0] = 0;
  HEAP32[$__begin$02 + 80 >> 2] = 0;
  HEAP8[$__begin$02 + 84 >> 0] = 0;
  HEAP32[$__begin$02 + 88 >> 2] = 0;
  HEAP8[$__begin$02 + 92 >> 0] = 0;
  HEAP32[$__begin$02 + 96 >> 2] = 0;
  HEAP8[$__begin$02 + 100 >> 0] = 0;
  HEAP32[$__begin$02 + 104 >> 2] = 0;
  HEAP8[$__begin$02 + 108 >> 0] = 0;
  HEAP32[$__begin$02 + 112 >> 2] = 0;
  HEAP8[$__begin$02 + 116 >> 0] = 0;
  HEAP32[$__begin$02 + 120 >> 2] = 0;
  HEAP8[$__begin$02 + 124 >> 0] = 0;
  HEAP32[$__begin$02 + 128 >> 2] = 0;
  HEAP8[$__begin$02 + 132 >> 0] = 0;
  HEAP32[$__begin$02 + 136 >> 2] = 0;
  HEAP8[$__begin$02 + 140 >> 0] = 0;
  HEAP32[$__begin$02 + 144 >> 2] = 0;
  HEAP8[$__begin$02 + 148 >> 0] = 0;
  HEAP32[$__begin$02 + 152 >> 2] = 0;
  HEAP8[$__begin$02 + 156 >> 0] = 0;
  HEAP32[$__begin$02 + 160 >> 2] = 0;
  HEAP8[$__begin$02 + 164 >> 0] = 0;
  HEAP32[$__begin$02 + 168 >> 2] = 0;
  HEAP8[$__begin$02 + 172 >> 0] = 0;
  HEAP32[$__begin$02 + 176 >> 2] = 0;
  HEAP8[$__begin$02 + 180 >> 0] = 0;
  HEAP32[$__begin$02 + 184 >> 2] = 0;
  HEAP8[$__begin$02 + 188 >> 0] = 0;
  HEAP32[$__begin$02 + 192 >> 2] = 0;
  HEAP8[$__begin$02 + 196 >> 0] = 0;
  HEAP32[$__begin$02 + 200 >> 2] = 0;
  HEAP8[$__begin$02 + 204 >> 0] = 0;
  HEAP32[$__begin$02 + 208 >> 2] = 0;
  HEAP8[$__begin$02 + 212 >> 0] = 0;
  HEAP32[$__begin$02 + 216 >> 2] = 0;
  HEAP8[$__begin$02 + 220 >> 0] = 0;
  HEAP32[$__begin$02 + 224 >> 2] = 0;
  HEAP8[$__begin$02 + 228 >> 0] = 0;
  HEAP32[$__begin$02 + 232 >> 2] = 0;
  HEAP8[$__begin$02 + 236 >> 0] = 0;
  HEAP32[$__begin$02 + 240 >> 2] = 0;
  HEAP8[$__begin$02 + 244 >> 0] = 0;
  HEAP32[$__begin$02 + 248 >> 2] = 0;
  HEAP8[$__begin$02 + 252 >> 0] = 0;
  $__begin$02 = $__begin$02 + 256 | 0;
 } while (($__begin$02 | 0) != ($0 | 0));
 $1 = $this + 1280 | 0;
 $page_index$04$i = 0;
 do {
  if (!(HEAP32[$this + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 256 + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 512 + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 768 + ($page_index$04$i << 3) >> 2] | 0)) {
   HEAP32[$this + 1024 + ($page_index$04$i << 3) >> 2] = $1;
   HEAP8[$this + 1024 + ($page_index$04$i << 3) + 4 >> 0] = 0;
  } else {
   $layer_index$03$lcssa$i = 3;
   label = 5;
  } else {
   $layer_index$03$lcssa$i = 2;
   label = 5;
  } else {
   $layer_index$03$lcssa$i = 1;
   label = 5;
  } else {
   $layer_index$03$lcssa$i = 0;
   label = 5;
  }
  if ((label | 0) == 5) {
   label = 0;
   $8 = $this + 1024 + ($page_index$04$i << 3) | 0;
   $9 = $this + ($layer_index$03$lcssa$i << 8) + ($page_index$04$i << 3) | 0;
   HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
   HEAP8[$8 + 4 >> 0] = HEAP8[$9 + 4 >> 0] | 0;
  }
  $page_index$04$i = $page_index$04$i + 1 | 0;
 } while (($page_index$04$i | 0) != 32);
 return;
}

function __ZN5Oryol5_priv11textureBase5ClearEv($this) {
 $this = $this | 0;
 var $$sink$i = 0, $0 = 0, $1 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $26 = 0, $3 = 0, $31 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $42 = 0, $44 = 0, $49 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 736 | 0;
 $0 = sp;
 $1 = sp + 688 | 0;
 $2 = $this + 704 | 0;
 $3 = $1 + 4 | 0;
 dest = $1;
 stop = dest + 44 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 >> 2] = -2;
 $4 = $1 + 8 | 0;
 HEAP32[$4 >> 2] = -1;
 HEAP32[$1 + 12 >> 2] = 20;
 HEAP32[$1 + 16 >> 2] = 20;
 HEAP32[$1 + 20 >> 2] = -1;
 HEAP32[$1 + 24 >> 2] = 0;
 HEAP32[$1 + 28 >> 2] = 0;
 HEAP32[$1 + 32 >> 2] = 0;
 HEAP32[$1 + 36 >> 2] = 1;
 HEAP8[$1 + 40 >> 0] = 0;
 HEAP8[$1 + 41 >> 0] = 0;
 HEAP8[$1 + 42 >> 0] = 0;
 if (($1 | 0) == ($2 | 0)) $17 = -2; else {
  HEAP32[$2 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($2, $1);
  $17 = HEAP32[$3 >> 2] | 0;
 }
 HEAP32[$this + 708 >> 2] = $17;
 $18 = $this + 712 | 0;
 HEAP32[$18 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$18 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
 HEAP32[$18 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
 HEAP32[$18 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
 HEAP32[$18 + 16 >> 2] = HEAP32[$4 + 16 >> 2];
 HEAP32[$18 + 20 >> 2] = HEAP32[$4 + 20 >> 2];
 HEAP32[$18 + 24 >> 2] = HEAP32[$4 + 24 >> 2];
 HEAP32[$18 + 28 >> 2] = HEAP32[$4 + 28 >> 2];
 HEAP16[$18 + 32 >> 1] = HEAP16[$4 + 32 >> 1] | 0;
 HEAP8[$18 + 34 >> 0] = HEAP8[$4 + 34 >> 0] | 0;
 HEAP32[$1 >> 2] = 0;
 $19 = $this + 16 | 0;
 __ZN5Oryol12TextureSetupC2Ev($0);
 dest = $19;
 src = $0;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($19 | 0) == ($0 | 0)) {
  $21 = $this + 64 | 0;
  $22 = $0 + 48 | 0;
  HEAP32[$21 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$21 + 4 >> 2] = HEAP32[$22 + 4 >> 2];
  HEAP32[$21 + 8 >> 2] = HEAP32[$22 + 8 >> 2];
  HEAP32[$21 + 12 >> 2] = HEAP32[$22 + 12 >> 2];
  HEAP32[$21 + 16 >> 2] = HEAP32[$22 + 16 >> 2];
  HEAP32[$21 + 20 >> 2] = HEAP32[$22 + 20 >> 2];
  HEAP32[$21 + 24 >> 2] = HEAP32[$22 + 24 >> 2];
  $$sink$i = HEAP32[$0 + 80 >> 2] | 0;
  $55 = $this + 96 | 0;
  HEAP32[$55 >> 2] = $$sink$i;
  $56 = $this + 112 | 0;
  $57 = $0 + 96 | 0;
  __ZN5Oryol14ImageDataAttrsaSEOS0_($56, $57) | 0;
  $58 = $this + 696 | 0;
  $59 = $0 + 680 | 0;
  $60 = HEAP8[$59 >> 0] | 0;
  HEAP8[$58 >> 0] = $60;
  STACKTOP = sp;
  return;
 } else {
  $26 = $0 + 40 | 0;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $33 = $this + 56 | 0;
  HEAP32[$33 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$33 + 4 >> 2] = $31;
  $37 = $this + 64 | 0;
  $38 = $0 + 48 | 0;
  HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$37 + 4 >> 2] = HEAP32[$38 + 4 >> 2];
  HEAP32[$37 + 8 >> 2] = HEAP32[$38 + 8 >> 2];
  HEAP32[$37 + 12 >> 2] = HEAP32[$38 + 12 >> 2];
  HEAP32[$37 + 16 >> 2] = HEAP32[$38 + 16 >> 2];
  HEAP32[$37 + 20 >> 2] = HEAP32[$38 + 20 >> 2];
  HEAP32[$37 + 24 >> 2] = HEAP32[$38 + 24 >> 2];
  $39 = $this + 92 | 0;
  HEAP32[$39 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($39, $0 + 76 | 0);
  $42 = HEAP32[$0 + 80 >> 2] | 0;
  $44 = $0 + 88 | 0;
  $49 = HEAP32[$44 + 4 >> 2] | 0;
  $51 = $this + 104 | 0;
  HEAP32[$51 >> 2] = HEAP32[$44 >> 2];
  HEAP32[$51 + 4 >> 2] = $49;
  $$sink$i = $42;
  $55 = $this + 96 | 0;
  HEAP32[$55 >> 2] = $$sink$i;
  $56 = $this + 112 | 0;
  $57 = $0 + 96 | 0;
  __ZN5Oryol14ImageDataAttrsaSEOS0_($56, $57) | 0;
  $58 = $this + 696 | 0;
  $59 = $0 + 680 | 0;
  $60 = HEAP8[$59 >> 0] | 0;
  HEAP8[$58 >> 0] = $60;
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol5_priv10glRenderer15applyBlendStateERKNS_10BlendStateE($this, $bs) {
 $this = $this | 0;
 $bs = $bs | 0;
 var $$lo13 = 0, $$lo8 = 0, $10 = 0, $100 = 0, $105 = 0, $106 = 0, $17 = 0, $19 = 0, $2 = 0, $22 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $32 = 0, $34 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $56 = 0, $58 = 0, $61 = 0, $63 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $87 = 0, $9 = 0, $91 = 0, $95 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 924, 68757);
  _abort();
 }
 HEAPU16[$bs + 4 >> 1] | 0;
 $2 = HEAP32[$bs >> 2] & 1;
 $3 = $this + 224 | 0;
 HEAPU16[$3 + 4 >> 1] | 0;
 do if (($2 | 0) != (HEAP32[$3 >> 2] & 1 | 0)) if (($2 | 0) == 0 & 0 == 0) {
  _glDisable(3042);
  break;
 } else {
  _glEnable(3042);
  break;
 } while (0);
 $$lo8 = HEAP32[$bs >> 2] | 0;
 $9 = HEAPU16[$bs + 4 >> 1] | 0;
 $$lo13 = HEAP32[$3 >> 2] | 0;
 $10 = HEAPU16[$3 + 4 >> 1] | 0;
 $10 ^ $9;
 do if ((($$lo13 ^ $$lo8) & 16762878 | 0) == 0 & 0 == 0) {
  $47 = $$lo13;
  $48 = $$lo8;
  $49 = $10;
  $50 = $9;
 } else {
  $17 = _bitshift64Lshr($$lo8 | 0, $9 & 65535 | 0, 1) | 0;
  $19 = $17 & 31;
  if ($19 >>> 0 >= 15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68831, 0, 66399, 940, 68757);
   _abort();
  }
  $22 = _bitshift64Lshr($$lo8 | 0, $9 & 65535 | 0, 6) | 0;
  $24 = $22 & 31;
  if ($24 >>> 0 >= 15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68878, 0, 66399, 941, 68757);
   _abort();
  }
  $27 = _bitshift64Lshr($$lo8 | 0, $9 & 65535 | 0, 14) | 0;
  $29 = $27 & 31;
  if ($29 >>> 0 >= 15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68925, 0, 66399, 942, 68757);
   _abort();
  }
  $32 = _bitshift64Lshr($$lo8 | 0, $9 & 65535 | 0, 19) | 0;
  $34 = $32 & 31;
  if ($34 >>> 0 < 15) {
   _glBlendFuncSeparate(HEAP32[13080 + ($19 << 2) >> 2] | 0, HEAP32[13080 + ($24 << 2) >> 2] | 0, HEAP32[13080 + ($29 << 2) >> 2] | 0, HEAP32[13080 + ($34 << 2) >> 2] | 0);
   $47 = HEAP32[$3 >> 2] | 0;
   $48 = HEAP32[$bs >> 2] | 0;
   $49 = HEAPU16[$3 + 4 >> 1] | 0;
   $50 = HEAPU16[$bs + 4 >> 1] | 0;
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68974, 0, 66399, 943, 68757);
   _abort();
  }
 } while (0);
 $49 ^ $50;
 do if ((($47 ^ $48) & 117454848 | 0) == 0 & 0 == 0) {
  $72 = $50;
  $73 = $48;
  $77 = $49;
  $78 = $47;
 } else {
  $56 = _bitshift64Lshr($48 | 0, $50 & 65535 | 0, 11) | 0;
  $58 = $56 & 7;
  if ($58 >>> 0 >= 3) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69023, 0, 66399, 953, 68757);
   _abort();
  }
  $61 = _bitshift64Lshr($48 | 0, $50 & 65535 | 0, 24) | 0;
  $63 = $61 & 7;
  if ($63 >>> 0 < 3) {
   _glBlendEquationSeparate(HEAP32[13140 + ($58 << 2) >> 2] | 0, HEAP32[13140 + ($63 << 2) >> 2] | 0);
   $72 = HEAPU16[$bs + 4 >> 1] | 0;
   $73 = HEAP32[$bs >> 2] | 0;
   $77 = HEAPU16[$3 + 4 >> 1] | 0;
   $78 = HEAP32[$3 >> 2] | 0;
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69069, 0, 66399, 954, 68757);
   _abort();
  }
 } while (0);
 $74 = _bitshift64Lshr($73 | 0, $72 & 65535 | 0, 27) | 0;
 $75 = tempRet0;
 $79 = _bitshift64Lshr($78 | 0, $77 & 65535 | 0, 27) | 0;
 tempRet0 ^ $75;
 if (!((($79 ^ $74) & 15 | 0) == 0 & 0 == 0)) {
  $87 = _bitshift64Lshr($73 | 0, $72 & 65535 | 0, 30) | 0;
  $91 = _bitshift64Lshr($73 | 0, $72 & 65535 | 0, 29) | 0;
  $95 = _bitshift64Lshr($73 | 0, $72 & 65535 | 0, 28) | 0;
  _glColorMask($87 & 1 | 0, $91 & 1 | 0, $95 & 1 | 0, $74 & 1 | 0);
 }
 $100 = $bs;
 $105 = HEAP32[$100 + 4 >> 2] | 0;
 $106 = $3;
 HEAP32[$106 >> 2] = HEAP32[$100 >> 2];
 HEAP32[$106 + 4 >> 2] = $105;
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 967, 68757);
  _abort();
 }
}

function __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE5SetupEti($this, $resType, $poolSize) {
 $this = $this | 0;
 $resType = $resType | 0;
 $poolSize = $poolSize | 0;
 var $11 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $23 = 0, $24 = 0, $27 = 0, $30 = 0, $31 = 0, $33 = 0, $37 = 0, $39 = 0, $43 = 0, $5 = 0, $56 = 0, $58 = 0, $6 = 0, $growBy$0$i$i = 0, $i$02 = 0, $storemerge1 = 0, label = 0;
 if (HEAP8[$this >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48917, 98, 48986);
  _abort();
 }
 if ($resType << 16 >> 16 == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(49130, 0, 48917, 99, 48986);
  _abort();
 }
 if (($poolSize | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(49157, 0, 48917, 100, 48986);
  _abort();
 }
 HEAP16[$this + 12 >> 1] = $resType;
 $5 = $this + 16 | 0;
 $6 = $this + 28 | 0;
 $11 = (HEAP32[$6 >> 2] | 0) - (HEAP32[$this + 24 >> 2] | 0) + $poolSize | 0;
 $12 = $this + 20 | 0;
 if (($11 | 0) > (HEAP32[$12 >> 2] | 0)) __ZN5Oryol5_priv13elementBufferINS0_4meshEE5allocEii($5, $11, 0);
 $15 = $this + 32 | 0;
 HEAP32[$15 >> 2] = 0;
 $16 = $this + 36 | 0;
 HEAP32[$16 >> 2] = 0;
 $17 = $this + 40 | 0;
 $18 = $this + 52 | 0;
 $23 = (HEAP32[$18 >> 2] | 0) - (HEAP32[$this + 48 >> 2] | 0) + $poolSize | 0;
 $24 = $this + 44 | 0;
 if (($23 | 0) > (HEAP32[$24 >> 2] | 0)) __ZN5Oryol5_priv13elementBufferItE5allocEii($17, $23, 0);
 $i$02 = 0;
 while (1) {
  $27 = HEAP32[$12 >> 2] | 0;
  if (($27 | 0) == (HEAP32[$6 >> 2] | 0)) {
   $30 = $27 >> 1;
   $31 = HEAP32[$15 >> 2] | 0;
   if (($30 | 0) < ($31 | 0)) $growBy$0$i$i = $31; else {
    $33 = HEAP32[$16 >> 2] | 0;
    $growBy$0$i$i = ($30 | 0) > ($33 | 0) ? $33 : $30;
   }
   if (($growBy$0$i$i | 0) <= 0) {
    label = 17;
    break;
   }
   __ZN5Oryol5_priv13elementBufferINS0_4meshEE5allocEii($5, $growBy$0$i$i + $27 | 0, 0);
  }
  $37 = HEAP32[$5 >> 2] | 0;
  if (!$37) {
   label = 21;
   break;
  }
  $39 = HEAP32[$6 >> 2] | 0;
  if (($39 | 0) >= (HEAP32[$12 >> 2] | 0)) {
   label = 21;
   break;
  }
  HEAP32[$6 >> 2] = $39 + 1;
  $43 = $37 + ($39 * 400 | 0) | 0;
  _memset($43 | 0, 0, 400) | 0;
  __ZN5Oryol5_priv8meshBaseC2Ev($43);
  HEAP32[$37 + ($39 * 400 | 0) + 364 >> 2] = -1;
  HEAP8[$37 + ($39 * 400 | 0) + 368 >> 0] = 1;
  HEAP8[$37 + ($39 * 400 | 0) + 369 >> 0] = 0;
  HEAP32[$37 + ($39 * 400 | 0) + 372 >> 2] = 0;
  HEAP32[$37 + ($39 * 400 | 0) + 376 >> 2] = 0;
  HEAP32[$37 + ($39 * 400 | 0) + 380 >> 2] = -1;
  HEAP8[$37 + ($39 * 400 | 0) + 384 >> 0] = 1;
  HEAP8[$37 + ($39 * 400 | 0) + 385 >> 0] = 0;
  HEAP32[$37 + ($39 * 400 | 0) + 388 >> 2] = 0;
  HEAP32[$37 + ($39 * 400 | 0) + 392 >> 2] = 0;
  $i$02 = $i$02 + 1 | 0;
  if (($i$02 | 0) >= ($poolSize | 0)) {
   label = 12;
   break;
  }
 }
 if ((label | 0) == 12) {
  $storemerge1 = 0;
  while (1) {
   __ZN5Oryol5QueueItE12checkEnqueueEv($17);
   $56 = HEAP32[$17 >> 2] | 0;
   if (!$56) {
    label = 26;
    break;
   }
   $58 = HEAP32[$18 >> 2] | 0;
   if (($58 | 0) >= (HEAP32[$24 >> 2] | 0)) {
    label = 26;
    break;
   }
   HEAP32[$18 >> 2] = $58 + 1;
   HEAP16[$56 + ($58 << 1) >> 1] = $storemerge1;
   $storemerge1 = $storemerge1 + 1 << 16 >> 16;
   if (($storemerge1 & 65535 | 0) >= ($poolSize | 0)) {
    label = 23;
    break;
   }
  }
  if ((label | 0) == 23) {
   HEAP8[$this >> 0] = 1;
   return;
  } else if ((label | 0) == 26) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
   _abort();
  }
 } else if ((label | 0) == 17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 49358);
  _abort();
 } else if ((label | 0) == 21) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49432);
  _abort();
 }
}

function __ZN5Oryol5_priv11panDetector6detectERKNS0_10touchEventE($this, $newEvent) {
 $this = $this | 0;
 $newEvent = $newEvent | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $100 = 0, $104 = 0, $108 = 0, $11 = 0, $16 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $43 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $63 = 0, $65 = 0, $68 = 0, $69 = 0, $73 = 0, $76 = 0.0, $80 = 0.0, $83 = 0.0, $88 = 0, $94 = 0, $99 = 0;
 $0 = $newEvent + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78758, 0, 78446, 31, 78513);
  _abort();
 }
 $3 = HEAP32[$newEvent >> 2] | 0;
 if (($3 | 0) == 3) {
  $5 = $this + 16 | 0;
  if ((HEAP32[$5 >> 2] | 0) != 4) {
   HEAP32[$5 >> 2] = 4;
   _memset($this + 24 | 0, 0, 140) | 0;
  }
  HEAP8[$this + 168 >> 0] = 0;
  $$0 = 0;
  return $$0 | 0;
 }
 if (($1 | 0) != 1) {
  $11 = $this + 16 | 0;
  if ((HEAP32[$11 >> 2] | 0) != 4) {
   HEAP32[$11 >> 2] = 4;
   _memset($this + 24 | 0, 0, 140) | 0;
  }
  HEAP8[$this + 168 >> 0] = 0;
  $$0 = 0;
  return $$0 | 0;
 }
 $16 = $this + 16 | 0;
 do if ((HEAP32[$16 >> 2] | 0) == 4) $25 = $3; else {
  if (__ZNK5Oryol5_priv10touchEvent11sameTouchesERKS1_($16, $newEvent) | 0) {
   $25 = HEAP32[$newEvent >> 2] | 0;
   break;
  }
  $20 = $this + 16 | 0;
  if ((HEAP32[$20 >> 2] | 0) != 4) {
   HEAP32[$20 >> 2] = 4;
   _memset($this + 24 | 0, 0, 140) | 0;
  }
  HEAP8[$this + 168 >> 0] = 0;
  $$0 = 0;
  return $$0 | 0;
 } while (0);
 switch ($25 | 0) {
 case 0:
  {
   HEAP32[$16 >> 2] = 0;
   $27 = $newEvent + 8 | 0;
   $32 = HEAP32[$27 + 4 >> 2] | 0;
   $34 = $this + 24 | 0;
   HEAP32[$34 >> 2] = HEAP32[$27 >> 2];
   HEAP32[$34 + 4 >> 2] = $32;
   _memcpy($this + 32 | 0, $0 | 0, 132) | 0;
   $43 = __ZNK5Oryol5_priv10touchEvent8touchPosEj($newEvent, HEAP32[$newEvent + 20 >> 2] | 0) | 0;
   $45 = HEAP32[$43 >> 2] | 0;
   $48 = HEAP32[$43 + 4 >> 2] | 0;
   $49 = $this + 8 | 0;
   HEAP32[$49 >> 2] = $45;
   HEAP32[$49 + 4 >> 2] = $48;
   $53 = $this;
   HEAP32[$53 >> 2] = $45;
   HEAP32[$53 + 4 >> 2] = $48;
   HEAP8[$this + 168 >> 0] = 0;
   $$0 = 0;
   return $$0 | 0;
  }
 case 1:
  {
   if ((HEAP32[$16 >> 2] | 0) == 4) {
    $$0 = 0;
    return $$0 | 0;
   }
   $63 = __ZNK5Oryol5_priv10touchEvent8touchPosEj($newEvent, HEAP32[$this + 36 >> 2] | 0) | 0;
   $65 = HEAP32[$63 >> 2] | 0;
   $68 = HEAP32[$63 + 4 >> 2] | 0;
   $69 = $this;
   HEAP32[$69 >> 2] = $65;
   HEAP32[$69 + 4 >> 2] = $68;
   $73 = $this + 168 | 0;
   if (HEAP8[$73 >> 0] | 0) {
    $$0 = 2;
    return $$0 | 0;
   }
   $76 = (HEAP32[tempDoublePtr >> 2] = $68, +HEAPF32[tempDoublePtr >> 2]);
   $80 = (HEAP32[tempDoublePtr >> 2] = $65, +HEAPF32[tempDoublePtr >> 2]) - +HEAPF32[$this + 8 >> 2];
   $83 = $76 - +HEAPF32[$this + 12 >> 2];
   if ($80 * $80 + $83 * $83 < 100.0) {
    $$0 = 0;
    return $$0 | 0;
   }
   HEAP8[$73 >> 0] = 1;
   $$0 = 1;
   return $$0 | 0;
  }
 case 2:
  {
   $88 = $this + 168 | 0;
   if (!(HEAP8[$88 >> 0] | 0)) {
    $108 = $this + 16 | 0;
    if ((HEAP32[$108 >> 2] | 0) != 4) {
     HEAP32[$108 >> 2] = 4;
     _memset($this + 24 | 0, 0, 140) | 0;
    }
    HEAP8[$88 >> 0] = 0;
    $$0 = 0;
    return $$0 | 0;
   } else {
    $94 = __ZNK5Oryol5_priv10touchEvent8touchPosEj($newEvent, HEAP32[$this + 36 >> 2] | 0) | 0;
    $99 = HEAP32[$94 + 4 >> 2] | 0;
    $100 = $this;
    HEAP32[$100 >> 2] = HEAP32[$94 >> 2];
    HEAP32[$100 + 4 >> 2] = $99;
    $104 = $this + 16 | 0;
    if ((HEAP32[$104 >> 2] | 0) != 4) {
     HEAP32[$104 >> 2] = 4;
     _memset($this + 24 | 0, 0, 140) | 0;
    }
    HEAP8[$88 >> 0] = 0;
    $$0 = 4;
    return $$0 | 0;
   }
   break;
  }
 default:
  {
   $$0 = 0;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZN5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE3AddEONS_12KeyValuePairIS1_S4_EE($this, $kvp) {
 $this = $this | 0;
 $kvp = $kvp | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$i4 = 0, $$0$ph$i$i$i = 0, $$0$ph$lcssa6$i$i$i = 0, $$lcssa38 = 0, $$lcssa39 = 0, $$pre$i$i$i$i$i$i = 0, $12 = 0, $13 = 0, $20 = 0, $21 = 0, $27 = 0, $28 = 0, $34 = 0, $42 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $52 = 0, $53 = 0, $57 = 0, $59 = 0, $62 = 0, $7 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa37 = 0, $__len$0$ph$i$i$i = 0, $__len$0$us$us$i7$i$i = 0, $slotConstructed$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $slotConstructed$i = sp;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 300, 107868);
  _abort();
 }
 $5 = $this + 12 | 0;
 $7 = $this + 8 | 0;
 if (((HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) | 0) == (0 - (HEAP32[$7 >> 2] | 0) | 0)) __ZN5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE4growEv($this);
 $12 = HEAP32[$this >> 2] | 0;
 $13 = ($12 | 0) == 0;
 if ($13) {
  $$0$i1 = 0;
  $$0$i4 = 0;
 } else {
  $$0$i1 = $12 + (HEAP32[$5 >> 2] << 3) | 0;
  $$0$i4 = $12 + (HEAP32[$7 >> 2] << 3) | 0;
 }
 $20 = $$0$i1 - $$0$i4 >> 3;
 $21 = HEAP32[$kvp >> 2] | 0;
 L10 : do if (!$21) if (!$20) $$0$ph$lcssa6$i$i$i = $$0$i4; else {
  $__len$0$us$us$i7$i$i = $20;
  while (1) if (($__len$0$us$us$i7$i$i + 1 | 0) >>> 0 < 3) {
   $$0$ph$lcssa6$i$i$i = $$0$i4;
   break;
  } else $__len$0$us$us$i7$i$i = ($__len$0$us$us$i7$i$i | 0) / 2 | 0;
 } else {
  $$0$ph$i$i$i = $$0$i4;
  $__len$0$ph$i$i$i = $20;
  L14 : while (1) {
   $__len$0$i$i$i = $__len$0$ph$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i) {
     $$0$ph$lcssa6$i$i$i = $$0$ph$i$i$i;
     break L10;
    }
    $27 = ($__len$0$i$i$i | 0) / 2 | 0;
    $28 = $$0$ph$i$i$i + ($27 << 3) | 0;
    $$pre$i$i$i$i$i$i = HEAP32[$28 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i) $34 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$21 >> 2] | 0)) $34 = $$pre$i$i$i$i$i$i; else break L14;
    if ($34 >>> 0 < $21 >>> 0) {
     $$lcssa38 = $27;
     $$lcssa39 = $28;
     $__len$0$i$i$i$lcssa37 = $__len$0$i$i$i;
     break;
    } else $__len$0$i$i$i = $27;
   }
   $$0$ph$i$i$i = $$lcssa39 + 8 | 0;
   $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa37 + -1 - $$lcssa38 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if ($13) $$0$i2 = 0; else $$0$i2 = $12 + (HEAP32[$7 >> 2] << 3) | 0;
 HEAP8[$slotConstructed$i >> 0] = 1;
 $42 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE13prepareInsertEiRb($this, $$0$ph$lcssa6$i$i$i - $$0$i2 >> 3, $slotConstructed$i) | 0;
 if (!(HEAP8[$slotConstructed$i >> 0] | 0)) {
  __ZN5Oryol10StringAtom4copyERKS0_($42, $kvp);
  HEAP32[$kvp >> 2] = 0;
  $62 = $kvp + 4 | 0;
  HEAP32[$42 + 4 >> 2] = HEAP32[$62 >> 2];
  HEAP32[$62 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 if (($42 | 0) == ($kvp | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$42 >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($42, $kvp);
 $46 = $kvp + 4 | 0;
 $47 = HEAP32[$46 >> 2] | 0;
 $48 = $42 + 4 | 0;
 $49 = HEAP32[$48 >> 2] | 0;
 if (($47 | 0) == ($49 | 0)) {
  STACKTOP = sp;
  return;
 }
 if (!$49) $57 = $47; else {
  $52 = $49 + 4 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  HEAP32[$52 >> 2] = $53 - 1;
  if (($53 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$49 >> 2] >> 2] & 255]($49);
  HEAP32[$48 >> 2] = 0;
  $57 = HEAP32[$46 >> 2] | 0;
 }
 HEAP32[$48 >> 2] = $57;
 if (!$57) {
  STACKTOP = sp;
  return;
 }
 $59 = $57 + 4 | 0;
 HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue9groupItemEE13moveEraseBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$lcssa6 = 0, $$pre = 0, $$pre5$i$i$i$i = 0, $$pre6$i$i2$pre$phi$i$iZZZZ2D = 0, $0 = 0, $10 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $22 = 0, $3 = 0, $33 = 0, $4 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $55 = 0, $56 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $65 = 0, $69 = 0, $71 = 0, $9 = 0, $i$01$i$i$i$i = 0, $65$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 105281);
  _abort();
 }
 $3 = $this + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$this + 8 >> 2] | 0;
 if (($4 - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 105281);
  _abort();
 }
 $9 = $6 + $index | 0;
 $10 = $4 + -1 | 0;
 if (($9 | 0) < ($10 | 0)) {
  $13 = $9 + 1 | 0;
  __ZN5Oryol9loadQueue9groupItemaSEOS1_($0 + ($9 * 72 | 0) | 0, $0 + ($13 * 72 | 0) | 0) | 0;
  $16 = (HEAP32[$3 >> 2] | 0) + -1 | 0;
  if (($13 | 0) < ($16 | 0)) {
   $65 = $13;
   do {
    $$pre = HEAP32[$this >> 2] | 0;
    $65$looptemp = $65;
    $65 = $65 + 1 | 0;
    __ZN5Oryol9loadQueue9groupItemaSEOS1_($$pre + ($65$looptemp * 72 | 0) | 0, $$pre + ($65 * 72 | 0) | 0) | 0;
    $69 = (HEAP32[$3 >> 2] | 0) + -1 | 0;
   } while (($65 | 0) < ($69 | 0));
   $$lcssa6 = $69;
  } else $$lcssa6 = $16;
  $$lcssa = $$lcssa6;
  $19 = HEAP32[$this >> 2] | 0;
 } else {
  $$lcssa = $10;
  $19 = $0;
 }
 HEAP32[$3 >> 2] = $$lcssa;
 $18 = $19 + ($$lcssa * 72 | 0) | 0;
 $22 = HEAP32[$19 + ($$lcssa * 72 | 0) + 64 >> 2] | 0;
 if (($22 | 0) == ($19 + ($$lcssa * 72 | 0) + 48 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 255]($22); else if ($22 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 20 >> 2] & 255]($22);
 $33 = HEAP32[$19 + ($$lcssa * 72 | 0) + 40 >> 2] | 0;
 if (($33 | 0) == ($19 + ($$lcssa * 72 | 0) + 24 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$33 >> 2] | 0) + 16 >> 2] & 255]($33); else if ($33 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$33 >> 2] | 0) + 20 >> 2] & 255]($33);
 HEAP32[$19 + ($$lcssa * 72 | 0) + 16 >> 2] = 0;
 HEAP32[$19 + ($$lcssa * 72 | 0) + 20 >> 2] = 0;
 $44 = HEAP32[$18 >> 2] | 0;
 $$pre5$i$i$i$i = $19 + ($$lcssa * 72 | 0) + 8 | 0;
 if (!$44) {
  $$pre6$i$i2$pre$phi$i$iZZZZ2D = $19 + ($$lcssa * 72 | 0) + 12 | 0;
  $63 = $19 + ($$lcssa * 72 | 0) + 4 | 0;
  HEAP32[$18 >> 2] = 0;
  HEAP32[$63 >> 2] = 0;
  HEAP32[$$pre5$i$i$i$i >> 2] = 0;
  HEAP32[$$pre6$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
  return;
 }
 $46 = HEAP32[$$pre5$i$i$i$i >> 2] | 0;
 $47 = $19 + ($$lcssa * 72 | 0) + 12 | 0;
 $48 = HEAP32[$47 >> 2] | 0;
 if (($46 | 0) < ($48 | 0)) {
  $52 = $44;
  $71 = $48;
  $i$01$i$i$i$i = $46;
  while (1) {
   $51 = $52 + ($i$01$i$i$i$i << 2) | 0;
   $53 = HEAP32[$51 >> 2] | 0;
   if (!$53) $62 = $71; else {
    $55 = $53 + 4 | 0;
    $56 = HEAP32[$55 >> 2] | 0;
    HEAP32[$55 >> 2] = $56 - 1;
    if (($56 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$53 >> 2] >> 2] & 255]($53);
    HEAP32[$51 >> 2] = 0;
    $62 = HEAP32[$47 >> 2] | 0;
   }
   $60 = $i$01$i$i$i$i + 1 | 0;
   if (($60 | 0) >= ($62 | 0)) break;
   $52 = HEAP32[$18 >> 2] | 0;
   $71 = $62;
   $i$01$i$i$i$i = $60;
  }
  $50 = HEAP32[$18 >> 2] | 0;
 } else $50 = $44;
 __ZN5Oryol6Memory4FreeEPv($50);
 $$pre6$i$i2$pre$phi$i$iZZZZ2D = $47;
 $63 = $19 + ($$lcssa * 72 | 0) + 4 | 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$63 >> 2] = 0;
 HEAP32[$$pre5$i$i$i$i >> 2] = 0;
 HEAP32[$$pre6$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $$pre$phi5Z2D = 0, $$pre4$pre$phiZZ2D = 0, $1 = 0, $12 = 0, $13 = 0, $15 = 0, $21 = 0, $22 = 0, $23 = 0, $29 = 0, $34 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $42 = 0, $49 = 0, $57 = 0, $58 = 0, $6 = 0, $67 = 0, $69 = 0, $70 = 0, $75 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0, label = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 103892);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 103892);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 56 | 0) | 0;
 $13 = $12 + ($newStart * 56 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 103892);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 56 | 0) | 0;
  do {
   HEAP32[$dst$02 >> 2] = HEAP32[$src$01 >> 2];
   HEAP32[$src$01 >> 2] = 0;
   $21 = $dst$02 + 8 | 0;
   $22 = $src$01 + 24 | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   do if (!$23) HEAP32[$dst$02 + 24 >> 2] = 0; else if (($23 | 0) == ($src$01 + 8 | 0)) {
    HEAP32[$dst$02 + 24 >> 2] = $21;
    $29 = HEAP32[$22 >> 2] | 0;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$29 >> 2] | 0) + 12 >> 2] & 63]($29, $21);
    break;
   } else {
    HEAP32[$dst$02 + 24 >> 2] = $23;
    HEAP32[$22 >> 2] = 0;
    break;
   } while (0);
   $34 = $dst$02 + 32 | 0;
   $35 = $src$01 + 48 | 0;
   $36 = HEAP32[$35 >> 2] | 0;
   do if (!$36) {
    HEAP32[$dst$02 + 48 >> 2] = 0;
    $$pre4$pre$phiZZ2D = $src$01 + 32 | 0;
    label = 20;
   } else {
    $39 = $src$01 + 32 | 0;
    if (($36 | 0) == ($39 | 0)) {
     HEAP32[$dst$02 + 48 >> 2] = $34;
     $42 = HEAP32[$35 >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$42 >> 2] | 0) + 12 >> 2] & 63]($42, $34);
     $$pre4$pre$phiZZ2D = $39;
     label = 20;
     break;
    } else {
     HEAP32[$dst$02 + 48 >> 2] = $36;
     HEAP32[$35 >> 2] = 0;
     $$pre$phi5Z2D = $39;
     $49 = 0;
     break;
    }
   } while (0);
   $dst$02 = $dst$02 + 56 | 0;
   if ((label | 0) == 20) {
    label = 0;
    $$pre$phi5Z2D = $$pre4$pre$phiZZ2D;
    $49 = HEAP32[$35 >> 2] | 0;
   }
   if (($49 | 0) == ($$pre$phi5Z2D | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pre$phi5Z2D >> 2] | 0) + 16 >> 2] & 255]($$pre$phi5Z2D); else if ($49 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$49 >> 2] | 0) + 20 >> 2] & 255]($49);
   $57 = $src$01 + 8 | 0;
   $58 = HEAP32[$22 >> 2] | 0;
   if (($58 | 0) == ($57 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$57 >> 2] | 0) + 16 >> 2] & 255]($57); else if ($58 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$58 >> 2] | 0) + 20 >> 2] & 255]($58);
   $67 = HEAP32[$src$01 >> 2] | 0;
   if ($67 | 0) {
    $69 = $67 + 4 | 0;
    $70 = HEAP32[$69 >> 2] | 0;
    HEAP32[$69 >> 2] = $70 - 1;
    if (($70 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$67 >> 2] >> 2] & 255]($67);
    HEAP32[$src$01 >> 2] = 0;
   }
   $src$01 = $src$01 + 56 | 0;
   $i$03 = $i$03 + 1 | 0;
  } while (($i$03 | 0) != ($8 | 0));
 }
 $75 = HEAP32[$this >> 2] | 0;
 if ($75 | 0) __ZN5Oryol6Memory4FreeEPv($75);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol3MapIiNS_7RunLoop4itemEE3AddEONS_12KeyValuePairIiS2_EE($this, $kvp) {
 $this = $this | 0;
 $kvp = $kvp | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$i4 = 0, $$0$ph$i$i$i = 0, $$0$ph$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa17 = 0, $$pre$phi$i$i$iZ2D = 0, $0 = 0, $13 = 0, $14 = 0, $22 = 0, $24 = 0, $25 = 0, $35 = 0, $40 = 0, $42 = 0, $44 = 0, $47 = 0, $55 = 0, $56 = 0, $6 = 0, $69 = 0, $70 = 0, $71 = 0, $77 = 0, $8 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa16 = 0, $__len$0$ph$i$i$i = 0, $slotConstructed$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $slotConstructed$i = sp + 24 | 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 300, 118997);
  _abort();
 }
 $6 = $this + 12 | 0;
 $8 = $this + 8 | 0;
 if (((HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0) == (0 - (HEAP32[$8 >> 2] | 0) | 0)) __ZN5Oryol3MapIiNS_7RunLoop4itemEE4growEv($this);
 $13 = HEAP32[$this >> 2] | 0;
 $14 = ($13 | 0) == 0;
 if ($14) {
  $$0$i1 = 0;
  $$0$i4 = 0;
 } else {
  $$0$i1 = $13 + ((HEAP32[$6 >> 2] | 0) * 40 | 0) | 0;
  $$0$i4 = $13 + ((HEAP32[$8 >> 2] | 0) * 40 | 0) | 0;
 }
 $22 = HEAP32[$kvp >> 2] | 0;
 $$0$ph$i$i$i = $$0$i4;
 $__len$0$ph$i$i$i = ($$0$i1 - $$0$i4 | 0) / 40 | 0;
 L10 : while (1) {
  $__len$0$i$i$i = $__len$0$ph$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i) {
    $$0$ph$i$i$i$lcssa = $$0$ph$i$i$i;
    break L10;
   }
   $24 = ($__len$0$i$i$i | 0) / 2 | 0;
   $25 = $$0$ph$i$i$i + ($24 * 40 | 0) | 0;
   if ((HEAP32[$25 >> 2] | 0) < ($22 | 0)) {
    $$lcssa = $24;
    $$lcssa17 = $25;
    $__len$0$i$i$i$lcssa16 = $__len$0$i$i$i;
    break;
   } else $__len$0$i$i$i = $24;
  }
  $$0$ph$i$i$i = $$lcssa17 + 40 | 0;
  $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa16 + -1 - $$lcssa | 0;
 }
 if ($14) $$0$i2 = 0; else $$0$i2 = $13 + ((HEAP32[$8 >> 2] | 0) * 40 | 0) | 0;
 HEAP8[$slotConstructed$i >> 0] = 1;
 $35 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE13prepareInsertEiRb($this, ($$0$ph$i$i$i$lcssa - $$0$i2 | 0) / 40 | 0, $slotConstructed$i) | 0;
 if (!(HEAP8[$slotConstructed$i >> 0] | 0)) {
  HEAP32[$35 >> 2] = HEAP32[$kvp >> 2];
  $69 = $35 + 8 | 0;
  $70 = $kvp + 24 | 0;
  $71 = HEAP32[$70 >> 2] | 0;
  do if (!$71) HEAP32[$35 + 24 >> 2] = 0; else if (($71 | 0) == ($kvp + 8 | 0)) {
   HEAP32[$35 + 24 >> 2] = $69;
   $77 = HEAP32[$70 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$77 >> 2] | 0) + 12 >> 2] & 63]($77, $69);
   break;
  } else {
   HEAP32[$35 + 24 >> 2] = $71;
   HEAP32[$70 >> 2] = 0;
   break;
  } while (0);
  HEAP8[$35 + 32 >> 0] = HEAP8[$kvp + 32 >> 0] | 0;
  STACKTOP = sp;
  return;
 }
 if (($35 | 0) == ($kvp | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$35 >> 2] = HEAP32[$kvp >> 2];
 $40 = $35 + 8 | 0;
 $42 = HEAP32[$kvp + 24 >> 2] | 0;
 do if (!$42) {
  $44 = $0 + 16 | 0;
  HEAP32[$44 >> 2] = 0;
  $$pre$phi$i$i$iZ2D = $44;
 } else if (($42 | 0) == ($kvp + 8 | 0)) {
  $47 = $0 + 16 | 0;
  HEAP32[$47 >> 2] = $0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$42 >> 2] | 0) + 12 >> 2] & 63]($42, $0);
  $$pre$phi$i$i$iZ2D = $47;
  break;
 } else {
  $55 = $0 + 16 | 0;
  HEAP32[$55 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$42 >> 2] | 0) + 8 >> 2] & 63]($42) | 0;
  $$pre$phi$i$i$iZ2D = $55;
  break;
 } while (0);
 __ZNSt3__18functionIFvvEE4swapERS2_($0, $40);
 $56 = HEAP32[$$pre$phi$i$i$iZ2D >> 2] | 0;
 if (($56 | 0) == ($0 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 255]($0); else if ($56 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$56 >> 2] | 0) + 20 >> 2] & 255]($56);
 HEAP8[$35 + 32 >> 0] = HEAP8[$kvp + 32 >> 0] | 0;
 STACKTOP = sp;
 return;
}

function __ZL12SaveSettingsv() {
 var $$13$i = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $23 = 0, $25 = 0, $27 = 0, $3 = 0, $31 = 0, $38 = 0, $4 = 0, $43 = 0, $44 = 0, $50 = 0, $55 = 0, $56 = 0, $6 = 0, $65 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $73 = 0, $74 = 0, $80 = 0, $86 = 0, $9 = 0, $92 = 0, $i$04 = 0, $i$04$i = 0, $i1$03 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer9 = sp + 24 | 0;
 $vararg_buffer5 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $1 = HEAP32[36728] | 0;
 if (!$1) {
  STACKTOP = sp;
  return;
 }
 $3 = 152780;
 $4 = HEAP32[$3 >> 2] | 0;
 L4 : do if ($4 | 0) {
  $6 = 152788;
  $14 = $4;
  $i$04 = 0;
  L6 : while (1) {
   if (($14 | 0) <= ($i$04 | 0)) {
    label = 8;
    break;
   }
   $17 = HEAP32[(HEAP32[$6 >> 2] | 0) + ($i$04 << 2) >> 2] | 0;
   if (!(HEAP32[$17 + 8 >> 2] & 256)) {
    $23 = __Z6ImHashPKvij(HEAP32[$17 >> 2] | 0, 0, 0) | 0;
    $25 = HEAP32[38216] | 0;
    L11 : do if (!$25) $$13$i = 0; else {
     $27 = 152872;
     $i$04$i = 0;
     while (1) {
      if (($25 | 0) <= ($i$04$i | 0)) {
       label = 14;
       break L6;
      }
      $31 = HEAP32[$27 >> 2] | 0;
      if ((HEAP32[$31 + ($i$04$i * 28 | 0) + 4 >> 2] | 0) == ($23 | 0)) {
       $$13$i = $31 + ($i$04$i * 28 | 0) | 0;
       break L11;
      }
      $i$04$i = $i$04$i + 1 | 0;
      if (($i$04$i | 0) == ($25 | 0)) {
       $$13$i = 0;
       break;
      }
     }
    } while (0);
    $38 = $17 + 20 | 0;
    $43 = HEAP32[$38 + 4 >> 2] | 0;
    $44 = $$13$i + 8 | 0;
    HEAP32[$44 >> 2] = HEAP32[$38 >> 2];
    HEAP32[$44 + 4 >> 2] = $43;
    $50 = $17 + 36 | 0;
    $55 = HEAP32[$50 + 4 >> 2] | 0;
    $56 = $$13$i + 16 | 0;
    HEAP32[$56 >> 2] = HEAP32[$50 >> 2];
    HEAP32[$56 + 4 >> 2] = $55;
    HEAP8[$$13$i + 24 >> 0] = HEAP8[$17 + 115 >> 0] | 0;
    $65 = HEAP32[$3 >> 2] | 0;
   } else $65 = $14;
   $i$04 = $i$04 + 1 | 0;
   if (($i$04 | 0) == ($65 | 0)) break L4; else $14 = $65;
  }
  if ((label | 0) == 8) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 14) ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 $7 = _fopen($1, 126e3) | 0;
 if (!$7) {
  STACKTOP = sp;
  return;
 }
 $9 = 152864;
 $10 = HEAP32[$9 >> 2] | 0;
 L26 : do if ($10 | 0) {
  $12 = 152872;
  $67 = $10;
  $i1$03 = 0;
  while (1) {
   if (($67 | 0) <= ($i1$03 | 0)) break;
   $68 = HEAP32[$12 >> 2] | 0;
   $69 = $68 + ($i1$03 * 28 | 0) + 8 | 0;
   if (+HEAPF32[$69 >> 2] == 3402823466385288598117041.0e14) $92 = $67; else {
    $73 = HEAP32[$68 + ($i1$03 * 28 | 0) >> 2] | 0;
    $74 = _strstr($73, 126003) | 0;
    HEAP32[$vararg_buffer >> 2] = ($74 | 0) == 0 ? $73 : $74;
    _fprintf($7, 126007, $vararg_buffer) | 0;
    $80 = ~~+HEAPF32[$68 + ($i1$03 * 28 | 0) + 12 >> 2];
    HEAP32[$vararg_buffer1 >> 2] = ~~+HEAPF32[$69 >> 2];
    HEAP32[$vararg_buffer1 + 4 >> 2] = $80;
    _fprintf($7, 126013, $vararg_buffer1) | 0;
    $86 = ~~+HEAPF32[$68 + ($i1$03 * 28 | 0) + 20 >> 2];
    HEAP32[$vararg_buffer5 >> 2] = ~~+HEAPF32[$68 + ($i1$03 * 28 | 0) + 16 >> 2];
    HEAP32[$vararg_buffer5 + 4 >> 2] = $86;
    _fprintf($7, 126024, $vararg_buffer5) | 0;
    HEAP32[$vararg_buffer9 >> 2] = HEAPU8[$68 + ($i1$03 * 28 | 0) + 24 >> 0];
    _fprintf($7, 126036, $vararg_buffer9) | 0;
    _fputc(10, $7) | 0;
    $92 = HEAP32[$9 >> 2] | 0;
   }
   $i1$03 = $i1$03 + 1 | 0;
   if (($i1$03 | 0) == ($92 | 0)) break L26; else $67 = $92;
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 _fclose($7) | 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE14moveInsertBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $10 = 0, $13 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $59 = 0, $60 = 0, $63 = 0, $70 = 0, $9 = 0, $i$0 = 0, $i$0$in2 = 0, $i$0$in2$phi = 0, $i$01 = 0, $i$03 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 119814);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 119814);
  _abort();
 }
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 119814);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 119814);
  _abort();
 }
 $9 = $this + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (($3 - $10 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 119814);
  _abort();
 }
 $13 = $3 + -1 | 0;
 HEAP32[$0 + ($3 * 40 | 0) >> 2] = HEAP32[$0 + ($13 * 40 | 0) >> 2];
 $17 = $0 + ($3 * 40 | 0) + 8 | 0;
 $18 = $0 + ($13 * 40 | 0) + 24 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 do if (!$19) {
  HEAP32[$0 + ($3 * 40 | 0) + 24 >> 2] = 0;
  $32 = $3;
  $34 = $10;
 } else if (($19 | 0) == ($0 + ($13 * 40 | 0) + 8 | 0)) {
  HEAP32[$0 + ($3 * 40 | 0) + 24 >> 2] = $17;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 12 >> 2] & 63]($19, $17);
  $32 = HEAP32[$2 >> 2] | 0;
  $34 = HEAP32[$9 >> 2] | 0;
  break;
 } else {
  HEAP32[$0 + ($3 * 40 | 0) + 24 >> 2] = $19;
  HEAP32[$18 >> 2] = 0;
  $32 = $3;
  $34 = $10;
  break;
 } while (0);
 HEAP8[$0 + ($3 * 40 | 0) + 32 >> 0] = HEAP8[$0 + ($13 * 40 | 0) + 32 >> 0] | 0;
 $i$01 = $32 + -1 | 0;
 if (($i$01 | 0) > ($34 + $index | 0)) {
  $i$0$in2 = $32;
  $i$03 = $i$01;
 } else {
  $37 = $32;
  $39 = $34;
  $36 = $37 + 1 | 0;
  HEAP32[$2 >> 2] = $36;
  $38 = $39 + $index | 0;
  $40 = HEAP32[$this >> 2] | 0;
  $41 = $40 + ($38 * 40 | 0) | 0;
  return $41 | 0;
 }
 while (1) {
  $42 = HEAP32[$this >> 2] | 0;
  $43 = $i$0$in2 + -2 | 0;
  HEAP32[$42 + ($i$03 * 40 | 0) >> 2] = HEAP32[$42 + ($43 * 40 | 0) >> 2];
  $47 = $42 + ($i$03 * 40 | 0) + 8 | 0;
  $48 = $42 + ($43 * 40 | 0) + 8 | 0;
  $49 = $42 + ($i$03 * 40 | 0) + 24 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  if (($50 | 0) == ($47 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$50 >> 2] | 0) + 16 >> 2] & 255]($50); else if ($50 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$50 >> 2] | 0) + 20 >> 2] & 255]($50);
  HEAP32[$49 >> 2] = 0;
  $59 = $42 + ($43 * 40 | 0) + 24 | 0;
  $60 = HEAP32[$59 >> 2] | 0;
  do if (!$60) HEAP32[$49 >> 2] = 0; else if (($60 | 0) == ($48 | 0)) {
   HEAP32[$49 >> 2] = $47;
   $63 = HEAP32[$59 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$63 >> 2] | 0) + 12 >> 2] & 63]($63, $47);
   break;
  } else {
   HEAP32[$49 >> 2] = $60;
   HEAP32[$59 >> 2] = 0;
   break;
  } while (0);
  HEAP8[$42 + ($i$03 * 40 | 0) + 32 >> 0] = HEAP8[$42 + ($43 * 40 | 0) + 32 >> 0] | 0;
  $i$0 = $i$03 + -1 | 0;
  $70 = HEAP32[$9 >> 2] | 0;
  if (($i$0 | 0) > ($70 + $index | 0)) {
   $i$0$in2$phi = $i$03;
   $i$03 = $i$0;
   $i$0$in2 = $i$0$in2$phi;
  } else {
   $$lcssa = $70;
   break;
  }
 }
 $37 = HEAP32[$2 >> 2] | 0;
 $39 = $$lcssa;
 $36 = $37 + 1 | 0;
 HEAP32[$2 >> 2] = $36;
 $38 = $39 + $index | 0;
 $40 = HEAP32[$this >> 2] | 0;
 $41 = $40 + ($38 * 40 | 0) | 0;
 return $41 | 0;
}

function __ZN5Oryol5_priv6glInfo9printInfoEv() {
 var $10 = 0, $13 = 0, $16 = 0, $19 = 0, $2 = 0, $22 = 0, $25 = 0, $5 = 0, $8 = 0, $value$i = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer15 = 0, $vararg_buffer19 = 0, $vararg_buffer2 = 0, $vararg_buffer23 = 0, $vararg_buffer27 = 0, $vararg_buffer6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $vararg_buffer27 = sp + 64 | 0;
 $vararg_buffer23 = sp + 56 | 0;
 $vararg_buffer19 = sp + 48 | 0;
 $vararg_buffer15 = sp + 40 | 0;
 $vararg_buffer11 = sp + 32 | 0;
 $vararg_buffer6 = sp + 16 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $value$i = sp + 72 | 0;
 __ZN5Oryol5_priv6glInfo11printStringEjPKcb(7938, 75871, 0);
 __ZN5Oryol5_priv6glInfo11printStringEjPKcb(7936, 76006, 0);
 __ZN5Oryol5_priv6glInfo11printStringEjPKcb(7937, 76016, 0);
 __ZN5Oryol5_priv6glInfo11printStringEjPKcb(35724, 76028, 0);
 _glGetIntegerv(3379, $value$i | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 128, 76076);
  _abort();
 }
 $2 = HEAP32[$value$i >> 2] | 0;
 HEAP32[$vararg_buffer >> 2] = 76056;
 HEAP32[$vararg_buffer + 4 >> 2] = $2;
 __ZN5Oryol3Log4InfoEPKcz(76146, $vararg_buffer);
 _glGetIntegerv(34076, $value$i | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 128, 76076);
  _abort();
 }
 $5 = HEAP32[$value$i >> 2] | 0;
 HEAP32[$vararg_buffer2 >> 2] = 76154;
 HEAP32[$vararg_buffer2 + 4 >> 2] = $5;
 __ZN5Oryol3Log4InfoEPKcz(76146, $vararg_buffer2);
 _glGetIntegerv(3386, $value$i | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 128, 76076);
  _abort();
 }
 $8 = HEAP32[$value$i >> 2] | 0;
 $10 = HEAP32[$value$i + 4 >> 2] | 0;
 HEAP32[$vararg_buffer6 >> 2] = 76183;
 HEAP32[$vararg_buffer6 + 4 >> 2] = $8;
 HEAP32[$vararg_buffer6 + 8 >> 2] = $10;
 __ZN5Oryol3Log4InfoEPKcz(76204, $vararg_buffer6);
 _glGetIntegerv(34921, $value$i | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 128, 76076);
  _abort();
 }
 $13 = HEAP32[$value$i >> 2] | 0;
 HEAP32[$vararg_buffer11 >> 2] = 76215;
 HEAP32[$vararg_buffer11 + 4 >> 2] = $13;
 __ZN5Oryol3Log4InfoEPKcz(76146, $vararg_buffer11);
 _glGetIntegerv(35661, $value$i | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 128, 76076);
  _abort();
 }
 $16 = HEAP32[$value$i >> 2] | 0;
 HEAP32[$vararg_buffer15 >> 2] = 76237;
 HEAP32[$vararg_buffer15 + 4 >> 2] = $16;
 __ZN5Oryol3Log4InfoEPKcz(76146, $vararg_buffer15);
 _glGetIntegerv(35660, $value$i | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 128, 76076);
  _abort();
 }
 $19 = HEAP32[$value$i >> 2] | 0;
 HEAP32[$vararg_buffer19 >> 2] = 76273;
 HEAP32[$vararg_buffer19 + 4 >> 2] = $19;
 __ZN5Oryol3Log4InfoEPKcz(76146, $vararg_buffer19);
 _glGetIntegerv(36347, $value$i | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 128, 76076);
  _abort();
 }
 $22 = HEAP32[$value$i >> 2] | 0;
 HEAP32[$vararg_buffer23 >> 2] = 76307;
 HEAP32[$vararg_buffer23 + 4 >> 2] = $22;
 __ZN5Oryol3Log4InfoEPKcz(76146, $vararg_buffer23);
 _glGetIntegerv(36349, $value$i | 0);
 if (!(_glGetError() | 0)) {
  $25 = HEAP32[$value$i >> 2] | 0;
  HEAP32[$vararg_buffer27 >> 2] = 76337;
  HEAP32[$vararg_buffer27 + 4 >> 2] = $25;
  __ZN5Oryol3Log4InfoEPKcz(76146, $vararg_buffer27);
  __ZN5Oryol5_priv6glInfo11printStringEjPKcb(7939, 76369, 1);
  STACKTOP = sp;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 128, 76076);
  _abort();
 }
}

function __ZN11AudioWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $$byval_copy = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $17 = 0, $23 = 0, $25 = 0, $26 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer14 = 0, $vararg_buffer17 = 0, $vararg_buffer20 = 0, $vararg_buffer23 = 0, $vararg_buffer8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $$byval_copy = sp + 72 | 0;
 $vararg_buffer23 = sp + 64 | 0;
 $vararg_buffer20 = sp + 56 | 0;
 $vararg_buffer17 = sp + 48 | 0;
 $vararg_buffer14 = sp + 40 | 0;
 $vararg_buffer12 = sp + 32 | 0;
 $vararg_buffer10 = sp + 24 | 0;
 $vararg_buffer8 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 88 | 0;
 $1 = sp + 80 | 0;
 HEAPF32[$0 >> 2] = 600.0;
 HEAPF32[$0 + 4 >> 2] = 220.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 2);
 $5 = $this + 8 | 0;
 $6 = __ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $5, 128) | 0;
 $7 = $this + 20 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!$6) {
  __ZN6SoLoud6Soloud22setVisualizationEnableEb($8, 0);
  __ZN5ImGui3EndEv();
  $42 = HEAP8[$5 >> 0] | 0;
  $43 = $42 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $43 | 0;
 }
 __ZN6SoLoud6Soloud22setVisualizationEnableEb($8, 1);
 $9 = $this + 24 | 0;
 __ZN5ImGui8CheckboxEPKcPb(37639, $9) | 0;
 if (!(HEAP8[$9 >> 0] | 0)) {
  __ZN5Oryol6Memory4CopyEPKvPvi(__ZN6SoLoud6Soloud7getWaveEv(HEAP32[$7 >> 2] | 0) | 0, $this + 28 | 0, 1024);
  $17 = $this + 25 | 0;
  HEAP8[$17 >> 0] = HEAP8[$kc + 725505 >> 0] | 0;
  HEAP8[$this + 26 >> 0] = HEAP8[$kc + 725506 >> 0] | 0;
  $$pre$phiZ2D = $17;
 } else $$pre$phiZ2D = $this + 25 | 0;
 HEAP32[$vararg_buffer >> 2] = __ZN6SoLoud6Soloud16getBackendStringEv(HEAP32[$7 >> 2] | 0) | 0;
 __ZN5ImGui4TextEPKcz(37645, $vararg_buffer);
 $23 = HEAP32[$7 >> 2] | 0;
 $25 = HEAP32[$23 + 110056 >> 2] | 0;
 $26 = __ZN6SoLoud6Soloud20getBackendSamplerateEv($23) | 0;
 HEAP32[$vararg_buffer1 >> 2] = $25;
 HEAP32[$vararg_buffer1 + 4 >> 2] = $26;
 __ZN5ImGui4TextEPKcz(37657, $vararg_buffer1);
 HEAP32[$$byval_copy >> 2] = __ZN6SoLoud6Soloud20getBackendBufferSizeEv(HEAP32[$7 >> 2] | 0) | 0;
 __ZN5ImGui4TextEPKcz(37700, $$byval_copy);
 do if (!(HEAP8[$$pre$phiZ2D >> 0] | 0)) if (!(HEAP8[$this + 26 >> 0] | 0)) {
  __ZN5ImGui11TextColoredERK6ImVec4PKcz(146576, 37769, $vararg_buffer12);
  break;
 } else {
  __ZN5ImGui11TextColoredERK6ImVec4PKcz(146592, 37750, $vararg_buffer10);
  break;
 } else __ZN5ImGui11TextColoredERK6ImVec4PKcz(146592, 37732, $vararg_buffer8); while (0);
 if (!(HEAP8[(HEAP32[$7 >> 2] | 0) + 110082 >> 0] | 0)) {
  HEAP32[$vararg_buffer17 >> 2] = 0;
  __ZN5ImGui11TextColoredERK6ImVec4PKcz(146576, 37819, $vararg_buffer17);
 } else {
  HEAP32[$vararg_buffer14 >> 2] = 0;
  __ZN5ImGui11TextColoredERK6ImVec4PKcz(146592, 37780, $vararg_buffer14);
 }
 if (!(HEAP8[(HEAP32[$7 >> 2] | 0) + 118298 >> 0] | 0)) {
  HEAP32[$vararg_buffer23 >> 2] = 1;
  __ZN5ImGui11TextColoredERK6ImVec4PKcz(146576, 37819, $vararg_buffer23);
 } else {
  HEAP32[$vararg_buffer20 >> 2] = 1;
  __ZN5ImGui11TextColoredERK6ImVec4PKcz(146592, 37780, $vararg_buffer20);
 }
 HEAPF32[$1 >> 2] = 512.0;
 HEAPF32[$1 + 4 >> 2] = 60.0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 __ZN5ImGui9PlotLinesEPKcPKfiiS1_ff6ImVec2i(37834, $this + 28 | 0, 256, 0, 0, -1.0, 1.0, $$byval_copy, 4);
 __ZN5ImGui3EndEv();
 $42 = HEAP8[$5 >> 0] | 0;
 $43 = $42 << 24 >> 24 != 0;
 STACKTOP = sp;
 return $43 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue9groupItemEE14moveEraseFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$lcssa6 = 0, $$pre = 0, $$pre5$i$i$i$i = 0, $$pre6$i$i2$pre$phi$i$iZZZZ2D = 0, $0 = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $21 = 0, $32 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0, $67 = 0, $69 = 0, $i$01$i$i$i$i = 0, $64$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 105161);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (((HEAP32[$this + 12 >> 2] | 0) - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 105161);
  _abort();
 }
 if (($index | 0) > 0) {
  $10 = $6 + $index | 0;
  $12 = $10 + -1 | 0;
  __ZN5Oryol9loadQueue9groupItemaSEOS1_($0 + ($10 * 72 | 0) | 0, $0 + ($12 * 72 | 0) | 0) | 0;
  $14 = HEAP32[$5 >> 2] | 0;
  if (($12 | 0) > ($14 | 0)) {
   $64 = $12;
   do {
    $$pre = HEAP32[$this >> 2] | 0;
    $64$looptemp = $64;
    $64 = $64 + -1 | 0;
    __ZN5Oryol9loadQueue9groupItemaSEOS1_($$pre + ($64$looptemp * 72 | 0) | 0, $$pre + ($64 * 72 | 0) | 0) | 0;
    $67 = HEAP32[$5 >> 2] | 0;
   } while (($64 | 0) > ($67 | 0));
   $$lcssa6 = $67;
  } else $$lcssa6 = $14;
  $$lcssa = $$lcssa6;
  $18 = HEAP32[$this >> 2] | 0;
 } else {
  $$lcssa = $6;
  $18 = $0;
 }
 HEAP32[$5 >> 2] = $$lcssa + 1;
 $17 = $18 + ($$lcssa * 72 | 0) | 0;
 $21 = HEAP32[$18 + ($$lcssa * 72 | 0) + 64 >> 2] | 0;
 if (($21 | 0) == ($18 + ($$lcssa * 72 | 0) + 48 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 16 >> 2] & 255]($21); else if ($21 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 20 >> 2] & 255]($21);
 $32 = HEAP32[$18 + ($$lcssa * 72 | 0) + 40 >> 2] | 0;
 if (($32 | 0) == ($18 + ($$lcssa * 72 | 0) + 24 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 16 >> 2] & 255]($32); else if ($32 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 20 >> 2] & 255]($32);
 HEAP32[$18 + ($$lcssa * 72 | 0) + 16 >> 2] = 0;
 HEAP32[$18 + ($$lcssa * 72 | 0) + 20 >> 2] = 0;
 $43 = HEAP32[$17 >> 2] | 0;
 $$pre5$i$i$i$i = $18 + ($$lcssa * 72 | 0) + 8 | 0;
 if (!$43) {
  $$pre6$i$i2$pre$phi$i$iZZZZ2D = $18 + ($$lcssa * 72 | 0) + 12 | 0;
  $62 = $18 + ($$lcssa * 72 | 0) + 4 | 0;
  HEAP32[$17 >> 2] = 0;
  HEAP32[$62 >> 2] = 0;
  HEAP32[$$pre5$i$i$i$i >> 2] = 0;
  HEAP32[$$pre6$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
  return;
 }
 $45 = HEAP32[$$pre5$i$i$i$i >> 2] | 0;
 $46 = $18 + ($$lcssa * 72 | 0) + 12 | 0;
 $47 = HEAP32[$46 >> 2] | 0;
 if (($45 | 0) < ($47 | 0)) {
  $51 = $43;
  $69 = $47;
  $i$01$i$i$i$i = $45;
  while (1) {
   $50 = $51 + ($i$01$i$i$i$i << 2) | 0;
   $52 = HEAP32[$50 >> 2] | 0;
   if (!$52) $61 = $69; else {
    $54 = $52 + 4 | 0;
    $55 = HEAP32[$54 >> 2] | 0;
    HEAP32[$54 >> 2] = $55 - 1;
    if (($55 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$52 >> 2] >> 2] & 255]($52);
    HEAP32[$50 >> 2] = 0;
    $61 = HEAP32[$46 >> 2] | 0;
   }
   $59 = $i$01$i$i$i$i + 1 | 0;
   if (($59 | 0) >= ($61 | 0)) break;
   $51 = HEAP32[$17 >> 2] | 0;
   $69 = $61;
   $i$01$i$i$i$i = $59;
  }
  $49 = HEAP32[$17 >> 2] | 0;
 } else $49 = $43;
 __ZN5Oryol6Memory4FreeEPv($49);
 $$pre6$i$i2$pre$phi$i$iZZZZ2D = $46;
 $62 = $18 + ($$lcssa * 72 | 0) + 4 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$62 >> 2] = 0;
 HEAP32[$$pre5$i$i$i$i >> 2] = 0;
 HEAP32[$$pre6$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
 return;
}

function __ZN5ImGui7ItemAddERK6ImRectPKj($bb, $id) {
 $bb = $bb | 0;
 $id = $id | 0;
 var $$0 = 0, $$idx2$val$i = 0.0, $$idx3$val$i = 0.0, $0 = 0, $1 = 0, $10 = 0.0, $107 = 0, $12 = 0.0, $3 = 0, $39 = 0, $41 = 0, $42 = 0, $45 = 0.0, $46 = 0, $49 = 0.0, $51 = 0.0, $55 = 0.0, $6 = 0, $60 = 0, $63 = 0, $67 = 0.0, $7 = 0, $71 = 0.0, $75 = 0, $76 = 0, $78 = 0, $8 = 0, $83 = 0, $94 = 0, $97 = 0, $rect_clipped$sroa$10$0$i = 0, $rect_clipped$sroa$6$0$i = 0, label = 0;
 $0 = 152804;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $3 = ($id | 0) != 0;
 if ($3) $6 = HEAP32[$id >> 2] | 0; else $6 = 0;
 HEAP32[$1 + 220 >> 2] = $6;
 $7 = $1 + 224 | 0;
 HEAP32[$7 >> 2] = HEAP32[$bb >> 2];
 HEAP32[$7 + 4 >> 2] = HEAP32[$bb + 4 >> 2];
 HEAP32[$7 + 8 >> 2] = HEAP32[$bb + 8 >> 2];
 HEAP32[$7 + 12 >> 2] = HEAP32[$bb + 12 >> 2];
 $8 = HEAP32[$0 >> 2] | 0;
 $10 = +HEAPF32[$8 + 440 >> 2];
 $12 = +HEAPF32[$bb + 12 >> 2];
 if ($10 < $12) if (+HEAPF32[$8 + 448 >> 2] > +HEAPF32[$bb + 4 >> 2]) if (+HEAPF32[$8 + 436 >> 2] < +HEAPF32[$bb + 8 >> 2]) {
  if (!(+HEAPF32[$8 + 444 >> 2] > +HEAPF32[$bb >> 2])) label = 7;
 } else label = 7; else label = 7; else label = 7;
 do if ((label | 0) == 7) {
  if ($id | 0) if ((HEAP32[$id >> 2] | 0) == (HEAP32[38211] | 0)) break;
  if (!(HEAP8[157996] | 0)) {
   HEAP8[$1 + 241 >> 0] = 0;
   HEAP8[$1 + 240 >> 0] = 0;
   $$0 = 0;
   return $$0 | 0;
  }
 } while (0);
 $39 = HEAP32[$bb >> 2] | 0;
 $41 = HEAP32[$bb + 4 >> 2] | 0;
 $42 = HEAP32[$bb + 8 >> 2] | 0;
 $45 = +HEAPF32[$8 + 436 >> 2];
 $46 = (HEAP32[tempDoublePtr >> 2] = $39, +HEAPF32[tempDoublePtr >> 2]) < $45;
 $49 = +HEAPF32[$8 + 444 >> 2];
 $51 = +HEAPF32[$8 + 448 >> 2];
 $$idx2$val$i = +HEAPF32[37999];
 $$idx3$val$i = +HEAPF32[38e3];
 $55 = +HEAPF32[36771];
 if (!($55 >= (HEAP32[tempDoublePtr >> 2] = $46 ? (HEAPF32[tempDoublePtr >> 2] = $45, HEAP32[tempDoublePtr >> 2] | 0) : $39, +HEAPF32[tempDoublePtr >> 2]) - $$idx2$val$i)) $107 = $1 + 241 | 0; else {
  $60 = (HEAP32[tempDoublePtr >> 2] = $42, +HEAPF32[tempDoublePtr >> 2]) > $49;
  $rect_clipped$sroa$10$0$i = $60 ? (HEAPF32[tempDoublePtr >> 2] = $49, HEAP32[tempDoublePtr >> 2] | 0) : $42;
  $63 = (HEAP32[tempDoublePtr >> 2] = $41, +HEAPF32[tempDoublePtr >> 2]) < $10;
  $rect_clipped$sroa$6$0$i = $63 ? (HEAPF32[tempDoublePtr >> 2] = $10, HEAP32[tempDoublePtr >> 2] | 0) : $41;
  $67 = $$idx2$val$i + (HEAP32[tempDoublePtr >> 2] = $rect_clipped$sroa$10$0$i, +HEAPF32[tempDoublePtr >> 2]);
  $71 = +HEAPF32[36772];
  $75 = $1 + 241 | 0;
  if ($71 < $$idx3$val$i + ($12 > $51 ? $51 : $12) & ($55 < $67 & $71 >= (HEAP32[tempDoublePtr >> 2] = $rect_clipped$sroa$6$0$i, +HEAPF32[tempDoublePtr >> 2]) - $$idx3$val$i)) {
   HEAP8[$75 >> 0] = 1;
   $76 = $1 + 240 | 0;
   HEAP8[$76 >> 0] = 0;
   $78 = HEAP32[38207] | 0;
   if (($78 | 0) != (HEAP32[$1 + 576 >> 2] | 0)) {
    $$0 = 1;
    return $$0 | 0;
   }
   $83 = HEAP32[38211] | 0;
   do if ($83 | 0) {
    if ($3) if (($83 | 0) == (HEAP32[$id >> 2] | 0)) break;
    if (!(HEAP8[152854] | 0)) if (($83 | 0) != (HEAP32[$1 + 68 >> 2] | 0)) {
     $$0 = 1;
     return $$0 | 0;
    }
   } while (0);
   $94 = HEAP32[38205] | 0;
   if ($94 | 0) {
    $97 = HEAP32[$94 + 576 >> 2] | 0;
    if ($97 | 0) if (HEAP32[$97 + 8 >> 2] & 33554432 | 0) if (!((HEAP8[$97 + 113 >> 0] | 0) == 0 | ($97 | 0) == ($78 | 0))) {
     $$0 = 1;
     return $$0 | 0;
    }
   }
   HEAP8[$76 >> 0] = 1;
   $$0 = 1;
   return $$0 | 0;
  } else $107 = $75;
 }
 HEAP8[$107 >> 0] = 0;
 HEAP8[$1 + 240 >> 0] = 0;
 $$0 = 1;
 return $$0 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE14moveInsertBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $54 = 0, $55 = 0, $57 = 0, $61 = 0, $9 = 0, $i$0 = 0, $i$0$in2 = 0, $i$0$in2$phi = 0, $i$01 = 0, $i$03 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 18101);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 18101);
  _abort();
 }
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 18101);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 18101);
  _abort();
 }
 $9 = $this + 8 | 0;
 if (($3 - (HEAP32[$9 >> 2] | 0) | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 18101);
  _abort();
 }
 $13 = $3 + -1 | 0;
 $14 = $0 + ($13 << 5) | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($0 + ($3 << 5) | 0, $14);
 HEAP32[$14 >> 2] = 0;
 $16 = $0 + ($3 << 5) + 8 | 0;
 $17 = $0 + ($13 << 5) + 24 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 do if (!$18) HEAP32[$0 + ($3 << 5) + 24 >> 2] = 0; else if (($18 | 0) == ($0 + ($13 << 5) + 8 | 0)) {
  HEAP32[$0 + ($3 << 5) + 24 >> 2] = $16;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$18 >> 2] | 0) + 12 >> 2] & 63]($18, $16);
  break;
 } else {
  HEAP32[$0 + ($3 << 5) + 24 >> 2] = $18;
  HEAP32[$17 >> 2] = 0;
  break;
 } while (0);
 $28 = HEAP32[$2 >> 2] | 0;
 $i$01 = $28 + -1 | 0;
 $29 = HEAP32[$9 >> 2] | 0;
 if (($i$01 | 0) > ($29 + $index | 0)) {
  $i$0$in2 = $28;
  $i$03 = $i$01;
 } else {
  $33 = $28;
  $35 = $29;
  $32 = $33 + 1 | 0;
  HEAP32[$2 >> 2] = $32;
  $34 = $35 + $index | 0;
  $36 = HEAP32[$this >> 2] | 0;
  $37 = $36 + ($34 << 5) | 0;
  return $37 | 0;
 }
 while (1) {
  $38 = HEAP32[$this >> 2] | 0;
  $39 = $38 + ($i$03 << 5) | 0;
  $40 = $i$0$in2 + -2 | 0;
  $41 = $38 + ($40 << 5) | 0;
  HEAP32[$39 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($39, $41);
  HEAP32[$41 >> 2] = 0;
  $42 = $38 + ($i$03 << 5) + 8 | 0;
  $43 = $38 + ($40 << 5) + 8 | 0;
  $44 = $38 + ($i$03 << 5) + 24 | 0;
  $45 = HEAP32[$44 >> 2] | 0;
  if (($45 | 0) == ($42 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$45 >> 2] | 0) + 16 >> 2] & 255]($45); else if ($45 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$45 >> 2] | 0) + 20 >> 2] & 255]($45);
  HEAP32[$44 >> 2] = 0;
  $54 = $38 + ($40 << 5) + 24 | 0;
  $55 = HEAP32[$54 >> 2] | 0;
  do if (!$55) HEAP32[$44 >> 2] = 0; else if (($55 | 0) == ($43 | 0)) {
   HEAP32[$44 >> 2] = $42;
   $61 = HEAP32[$54 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$61 >> 2] | 0) + 12 >> 2] & 63]($61, $42);
   break;
  } else {
   HEAP32[$44 >> 2] = $55;
   HEAP32[$54 >> 2] = 0;
   break;
  } while (0);
  $i$0 = $i$03 + -1 | 0;
  $57 = HEAP32[$9 >> 2] | 0;
  if (($i$0 | 0) > ($57 + $index | 0)) {
   $i$0$in2$phi = $i$03;
   $i$03 = $i$0;
   $i$0$in2 = $i$0$in2$phi;
  } else {
   $$lcssa = $57;
   break;
  }
 }
 $33 = HEAP32[$2 >> 2] | 0;
 $35 = $$lcssa;
 $32 = $33 + 1 | 0;
 HEAP32[$2 >> 2] = $32;
 $34 = $35 + $index | 0;
 $36 = HEAP32[$this >> 2] | 0;
 $37 = $36 + ($34 << 5) | 0;
 return $37 | 0;
}
function __ZN5Oryol2IO18RegisterFileSystemERKNS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEE($scheme, $fsCreator) {
 $scheme = $scheme | 0;
 $fsCreator = $fsCreator | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $20 = 0, $21 = 0, $30 = 0, $32 = 0, $34 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $47 = 0, $49 = 0, $53 = 0, $55 = 0, $56 = 0, $6 = 0, $8 = 0, $msg = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $msg = sp + 24 | 0;
 $1 = HEAP32[36715] | 0;
 if (!$1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 100720, 95, 100954);
  _abort();
 }
 $4 = __ZNK5Oryol5_priv14schemeRegistry22IsFileSystemRegisteredERKNS_10StringAtomE($1 + 36 | 0, $scheme) | 0;
 $6 = (HEAP32[36715] | 0) + 36 | 0;
 $8 = HEAP32[$fsCreator + 16 >> 2] | 0;
 do if (!$8) {
  $10 = $0 + 16 | 0;
  HEAP32[$10 >> 2] = 0;
  $$pre$phiZ2D = $10;
 } else if (($8 | 0) == ($fsCreator | 0)) {
  $12 = $0 + 16 | 0;
  HEAP32[$12 >> 2] = $0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] & 63]($8, $0);
  $$pre$phiZ2D = $12;
  break;
 } else {
  $20 = $0 + 16 | 0;
  HEAP32[$20 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 8 >> 2] & 63]($8) | 0;
  $$pre$phiZ2D = $20;
  break;
 } while (0);
 __ZN5Oryol5_priv14schemeRegistry18RegisterFileSystemERKNS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEE($6, $scheme, $0);
 $21 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if (($21 | 0) == ($0 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 255]($0); else if ($21 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 20 >> 2] & 255]($21);
 if ($4) {
  $45 = __ZN5Oryol6Memory5AllocEi(16) | 0;
  HEAP32[$45 >> 2] = 0;
  HEAP32[$45 + 4 >> 2] = 0;
  HEAP32[$45 + 8 >> 2] = 0;
  HEAP32[$45 + 12 >> 2] = 0;
  HEAP32[$45 >> 2] = 13572;
  if (!$45) {
   HEAP32[$msg >> 2] = $45;
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 101157);
   _abort();
  }
  $47 = $45 + 4 | 0;
  HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 1;
  HEAP32[$msg >> 2] = $45;
  $49 = $45 + 12 | 0;
  if (($49 | 0) != ($scheme | 0)) {
   HEAP32[$49 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($49, $scheme);
  }
  __ZN5Oryol5_priv8ioRouter3putERKNS_3PtrINS0_5ioMsgEEE((HEAP32[36715] | 0) + 72 | 0, $msg);
  $53 = HEAP32[$msg >> 2] | 0;
  if ($53 | 0) {
   $55 = $53 + 4 | 0;
   $56 = HEAP32[$55 >> 2] | 0;
   HEAP32[$55 >> 2] = $56 - 1;
   if (($56 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$53 >> 2] >> 2] & 255]($53);
   HEAP32[$msg >> 2] = 0;
  }
  STACKTOP = sp;
  return;
 } else {
  $30 = __ZN5Oryol6Memory5AllocEi(16) | 0;
  HEAP32[$30 >> 2] = 0;
  HEAP32[$30 + 4 >> 2] = 0;
  HEAP32[$30 + 8 >> 2] = 0;
  HEAP32[$30 + 12 >> 2] = 0;
  HEAP32[$30 >> 2] = 13540;
  if (!$30) {
   HEAP32[$msg >> 2] = $30;
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 101058);
   _abort();
  }
  $32 = $30 + 4 | 0;
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
  HEAP32[$msg >> 2] = $30;
  $34 = $30 + 12 | 0;
  if (($34 | 0) != ($scheme | 0)) {
   HEAP32[$34 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($34, $scheme);
  }
  __ZN5Oryol5_priv8ioRouter3putERKNS_3PtrINS0_5ioMsgEEE((HEAP32[36715] | 0) + 72 | 0, $msg);
  $38 = HEAP32[$msg >> 2] | 0;
  if ($38 | 0) {
   $40 = $38 + 4 | 0;
   $41 = HEAP32[$40 >> 2] | 0;
   HEAP32[$40 >> 2] = $41 - 1;
   if (($41 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$38 >> 2] >> 2] & 255]($38);
   HEAP32[$msg >> 2] = 0;
  }
  STACKTOP = sp;
  return;
 }
}

function __ZN5ImGui9SeparatorEv() {
 var $1 = 0, $100 = 0.0, $102 = 0.0, $104 = 0.0, $109 = 0.0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $31 = 0.0, $34 = 0.0, $41 = 0, $42 = 0, $44 = 0, $47 = 0, $52 = 0, $53 = 0.0, $55 = 0.0, $56 = 0, $57 = 0.0, $6 = 0, $60 = 0, $62 = 0.0, $63 = 0, $64 = 0, $83 = 0.0, $84 = 0, $85 = 0.0, $88 = 0, $89 = 0.0, $9 = 0, $bb = 0, $vararg_buffer = 0, $x1$0 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $bb = sp + 8 | 0;
 $1 = HEAP32[38201] | 0;
 $2 = $1 + 114 | 0;
 HEAP8[$2 >> 0] = 1;
 if (HEAP8[$1 + 116 >> 0] | 0) {
  STACKTOP = sp;
  return;
 }
 $6 = $1 + 380 | 0;
 do if ((HEAP32[$6 >> 2] | 0) > 1) {
  HEAP8[$2 >> 0] = 1;
  $9 = $1 + 572 | 0;
  __ZN10ImDrawList11PopClipRectEv(HEAP32[$9 >> 2] | 0);
  $11 = HEAP32[$9 >> 2] | 0;
  $13 = HEAP32[$11 + 52 >> 2] | 0;
  if (($13 | 0) > 0) {
   $15 = $13 + -1 | 0;
   $17 = HEAP32[$11 + 60 >> 2] | 0;
   $21 = HEAP32[$17 + ($15 << 4) + 4 >> 2] | 0;
   $23 = HEAP32[$17 + ($15 << 4) + 8 >> 2] | 0;
   $25 = HEAP32[$17 + ($15 << 4) + 12 >> 2] | 0;
   HEAP32[$1 + 436 >> 2] = HEAP32[$17 + ($15 << 4) >> 2];
   HEAP32[$1 + 440 >> 2] = $21;
   HEAP32[$1 + 444 >> 2] = $23;
   HEAP32[$1 + 448 >> 2] = $25;
   break;
  } else ___assert_fail(127436, 127226, 815, 127445);
 } while (0);
 $31 = +HEAPF32[$1 + 20 >> 2];
 $34 = $31 + +HEAPF32[$1 + 28 >> 2];
 if (!(HEAP32[$1 + 328 >> 2] | 0)) $x1$0 = $31; else $x1$0 = $31 + +HEAPF32[$1 + 368 >> 2];
 $41 = $1 + 168 | 0;
 $42 = HEAP32[$41 >> 2] | 0;
 HEAPF32[$bb >> 2] = $x1$0;
 HEAP32[$bb + 4 >> 2] = $42;
 $44 = $bb + 8 | 0;
 HEAPF32[$44 >> 2] = $34;
 HEAP32[$bb + 12 >> 2] = $42;
 $47 = HEAP32[38201] | 0;
 HEAP8[$47 + 114 >> 0] = 1;
 if (!(HEAP8[$47 + 116 >> 0] | 0)) {
  $52 = $47 + 196 | 0;
  $53 = +HEAPF32[$52 >> 2];
  $55 = $53 >= 0.0 ? $53 : 0.0;
  $56 = $47 + 200 | 0;
  $57 = +HEAPF32[$56 >> 2];
  $60 = $47 + 164 | 0;
  $62 = +HEAPF32[$60 >> 2] + 0.0;
  $63 = $47 + 168 | 0;
  $64 = HEAP32[$63 >> 2] | 0;
  HEAPF32[$47 + 172 >> 2] = $62;
  HEAP32[$47 + 176 >> 2] = $64;
  $83 = +(~~($55 + (HEAP32[tempDoublePtr >> 2] = $64, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
  HEAPF32[$60 >> 2] = +(~~(+HEAPF32[$47 + 20 >> 2] + +HEAPF32[$47 + 368 >> 2] + +HEAPF32[$47 + 372 >> 2]) | 0);
  HEAPF32[$63 >> 2] = $83;
  $84 = $47 + 188 | 0;
  $85 = +HEAPF32[$84 >> 2];
  HEAPF32[$84 >> 2] = $85 >= $62 ? $85 : $62;
  $88 = $47 + 192 | 0;
  $89 = +HEAPF32[$88 >> 2];
  HEAPF32[$88 >> 2] = $89 >= $83 ? $89 : $83;
  HEAPF32[$47 + 204 >> 2] = $55;
  HEAPF32[$47 + 208 >> 2] = $57 >= 0.0 ? $57 : 0.0;
  HEAPF32[$56 >> 2] = 0.0;
  HEAPF32[$52 >> 2] = 0.0;
 }
 if (__ZN5ImGui7ItemAddERK6ImRectPKj($bb, 0) | 0) {
  $100 = +HEAPF32[38030];
  $102 = +HEAPF32[38031];
  $104 = +HEAPF32[38032];
  $109 = +HEAPF32[38033] * +HEAPF32[37984];
  __ZN10ImDrawList7AddLineERK6ImVec2S2_jf(HEAP32[$1 + 572 >> 2] | 0, $bb, $44, ($102 < 0.0 ? 0 : ~~(($102 > 1.0 ? 1.0 : $102) * 255.0 + .5) << 8) | ($100 < 0.0 ? 0 : ~~(($100 > 1.0 ? 1.0 : $100) * 255.0 + .5)) | ($104 < 0.0 ? 0 : ~~(($104 > 1.0 ? 1.0 : $104) * 255.0 + .5) << 16) | ($109 < 0.0 ? 0 : ~~(($109 > 1.0 ? 1.0 : $109) * 255.0 + .5) << 24), 1.0);
  if (HEAP8[157996] | 0) __ZN5ImGui7LogTextEPKcz(127183, $vararg_buffer);
  if ((HEAP32[$6 >> 2] | 0) > 1) {
   __ZL18PushColumnClipRecti();
   HEAP32[$1 + 396 >> 2] = HEAP32[$41 >> 2];
  }
 } else if ((HEAP32[$6 >> 2] | 0) > 1) __ZL18PushColumnClipRecti();
 STACKTOP = sp;
 return;
}

function __ZN5Oryol11ShaderSetup15AddUniformBlockERKNS_10StringAtomERKNS_18UniformBlockLayoutENS_11ShaderStage4CodeEi($this, $name, $layout, $bindStage, $bindSlot) {
 $this = $this | 0;
 $name = $name | 0;
 $layout = $layout | 0;
 $bindStage = $bindStage | 0;
 $bindSlot = $bindSlot | 0;
 var $15 = 0, $16 = 0, $19 = 0, $21 = 0, $23 = 0, $27 = 0, $32 = 0, $33 = 0, $5 = 0, $i$01$i$i = 0;
 if (!(HEAP32[$name >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(61251, 0, 60953, 62, 61266);
  _abort();
 }
 if (!(HEAP32[$layout + 8 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(61392, 0, 60953, 63, 61266);
  _abort();
 }
 $5 = $layout;
 if ((HEAP32[$5 >> 2] | 0) == 0 & (HEAP32[$5 + 4 >> 2] | 0) == 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(61408, 0, 60953, 64, 61266);
  _abort();
 }
 if (($bindSlot | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(61429, 0, 60953, 65, 61266);
  _abort();
 }
 $15 = $this + 324 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 HEAP32[$15 >> 2] = $16 + 1;
 if ($16 >>> 0 >= 8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 61443);
  _abort();
 }
 $19 = $this + 328 + ($16 * 288 | 0) | 0;
 if (($19 | 0) != ($name | 0)) {
  HEAP32[$19 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($19, $name);
 }
 $21 = $this + 328 + ($16 * 288 | 0) + 8 | 0;
 HEAP32[$21 >> 2] = HEAP32[$layout >> 2];
 HEAP32[$21 + 4 >> 2] = HEAP32[$layout + 4 >> 2];
 HEAP32[$21 + 8 >> 2] = HEAP32[$layout + 8 >> 2];
 HEAP32[$21 + 12 >> 2] = HEAP32[$layout + 12 >> 2];
 if (($21 | 0) != ($layout | 0)) {
  $i$01$i$i = 0;
  do {
   $23 = $this + 328 + ($16 * 288 | 0) + 24 + ($i$01$i$i * 12 | 0) | 0;
   HEAP32[$23 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($23, $layout + 16 + ($i$01$i$i * 12 | 0) | 0);
   $27 = $layout + 16 + ($i$01$i$i * 12 | 0) + 4 | 0;
   $32 = HEAP32[$27 + 4 >> 2] | 0;
   $33 = $this + 328 + ($16 * 288 | 0) + 24 + ($i$01$i$i * 12 | 0) + 4 | 0;
   HEAP32[$33 >> 2] = HEAP32[$27 >> 2];
   HEAP32[$33 + 4 >> 2] = $32;
   $i$01$i$i = $i$01$i$i + 1 | 0;
  } while (($i$01$i$i | 0) != 16);
 }
 HEAP32[$this + 328 + ($16 * 288 | 0) + 216 >> 2] = HEAP32[$layout + 208 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 220 >> 2] = HEAP32[$layout + 212 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 224 >> 2] = HEAP32[$layout + 216 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 228 >> 2] = HEAP32[$layout + 220 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 232 >> 2] = HEAP32[$layout + 224 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 236 >> 2] = HEAP32[$layout + 228 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 240 >> 2] = HEAP32[$layout + 232 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 244 >> 2] = HEAP32[$layout + 236 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 248 >> 2] = HEAP32[$layout + 240 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 252 >> 2] = HEAP32[$layout + 244 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 256 >> 2] = HEAP32[$layout + 248 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 260 >> 2] = HEAP32[$layout + 252 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 264 >> 2] = HEAP32[$layout + 256 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 268 >> 2] = HEAP32[$layout + 260 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 272 >> 2] = HEAP32[$layout + 264 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 276 >> 2] = HEAP32[$layout + 268 >> 2];
 HEAP32[$this + 328 + ($16 * 288 | 0) + 280 >> 2] = $bindStage;
 HEAP32[$this + 328 + ($16 * 288 | 0) + 284 >> 2] = $bindSlot;
 return;
}

function __ZN5Oryol9loadQueue9groupItemaSEOS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $$pre$phi7$i$i$iZ2D = 0, $$pre5$i$i$i = 0, $$pre6$i$i$i2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $3 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $47 = 0, $48 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $67 = 0, $68 = 0, $7 = 0, $71 = 0, $75 = 0, $8 = 0, $i$01$i$i$i = 0;
 if (($0 | 0) != ($this | 0)) {
  $2 = $this + 16 | 0;
  HEAP32[$2 >> 2] = 0;
  $3 = $this + 20 | 0;
  HEAP32[$3 >> 2] = 0;
  $4 = HEAP32[$this >> 2] | 0;
  $$pre5$i$i$i = $this + 8 | 0;
  if (!$4) $$pre$phi7$i$i$iZ2D = $this + 12 | 0; else {
   $6 = HEAP32[$$pre5$i$i$i >> 2] | 0;
   $7 = $this + 12 | 0;
   $8 = HEAP32[$7 >> 2] | 0;
   if (($6 | 0) < ($8 | 0)) {
    $12 = $4;
    $75 = $8;
    $i$01$i$i$i = $6;
    while (1) {
     $11 = $12 + ($i$01$i$i$i << 2) | 0;
     $13 = HEAP32[$11 >> 2] | 0;
     if (!$13) $22 = $75; else {
      $15 = $13 + 4 | 0;
      $16 = HEAP32[$15 >> 2] | 0;
      HEAP32[$15 >> 2] = $16 - 1;
      if (($16 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$13 >> 2] >> 2] & 255]($13);
      HEAP32[$11 >> 2] = 0;
      $22 = HEAP32[$7 >> 2] | 0;
     }
     $20 = $i$01$i$i$i + 1 | 0;
     if (($20 | 0) >= ($22 | 0)) break;
     $12 = HEAP32[$this >> 2] | 0;
     $75 = $22;
     $i$01$i$i$i = $20;
    }
    $10 = HEAP32[$this >> 2] | 0;
   } else $10 = $4;
   __ZN5Oryol6Memory4FreeEPv($10);
   $$pre$phi7$i$i$iZ2D = $7;
  }
  $23 = $this + 4 | 0;
  HEAP32[$$pre$phi7$i$i$iZ2D >> 2] = 0;
  HEAP32[$2 >> 2] = HEAP32[$0 + 16 >> 2];
  HEAP32[$3 >> 2] = HEAP32[$0 + 20 >> 2];
  $$pre6$i$i$i2 = $this + 12 | 0;
  HEAP32[$this >> 2] = 0;
  HEAP32[$23 >> 2] = 0;
  HEAP32[$$pre5$i$i$i >> 2] = 0;
  HEAP32[$$pre6$i$i$i2 >> 2] = 0;
  HEAP32[$this >> 2] = HEAP32[$0 >> 2];
  HEAP32[$23 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$$pre5$i$i$i >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$$pre6$i$i$i2 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
 }
 $35 = $this + 24 | 0;
 $36 = $0 + 24 | 0;
 $37 = $this + 40 | 0;
 $38 = HEAP32[$37 >> 2] | 0;
 if (($38 | 0) == ($35 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$38 >> 2] | 0) + 16 >> 2] & 255]($38); else if ($38 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$38 >> 2] | 0) + 20 >> 2] & 255]($38);
 HEAP32[$37 >> 2] = 0;
 $47 = $0 + 40 | 0;
 $48 = HEAP32[$47 >> 2] | 0;
 do if (!$48) HEAP32[$37 >> 2] = 0; else if (($48 | 0) == ($36 | 0)) {
  HEAP32[$37 >> 2] = $35;
  $51 = HEAP32[$47 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$51 >> 2] | 0) + 12 >> 2] & 63]($51, $35);
  break;
 } else {
  HEAP32[$37 >> 2] = $48;
  HEAP32[$47 >> 2] = 0;
  break;
 } while (0);
 $55 = $this + 48 | 0;
 $56 = $0 + 48 | 0;
 $57 = $this + 64 | 0;
 $58 = HEAP32[$57 >> 2] | 0;
 if (($58 | 0) == ($55 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$58 >> 2] | 0) + 16 >> 2] & 255]($58); else if ($58 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$58 >> 2] | 0) + 20 >> 2] & 255]($58);
 HEAP32[$57 >> 2] = 0;
 $67 = $0 + 64 | 0;
 $68 = HEAP32[$67 >> 2] | 0;
 if (!$68) {
  HEAP32[$57 >> 2] = 0;
  return $this | 0;
 }
 if (($68 | 0) == ($56 | 0)) {
  HEAP32[$57 >> 2] = $55;
  $71 = HEAP32[$67 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$71 >> 2] | 0) + 12 >> 2] & 63]($71, $55);
  return $this | 0;
 } else {
  HEAP32[$57 >> 2] = $68;
  HEAP32[$67 >> 2] = 0;
  return $this | 0;
 }
 return 0;
}

function __ZL22FindBestPopupWindowPosRK6ImVec2S1_PiRK6ImRect($agg$result, $base_pos, $size, $last_dir, $r_inner) {
 $agg$result = $agg$result | 0;
 $base_pos = $base_pos | 0;
 $size = $size | 0;
 $last_dir = $last_dir | 0;
 $r_inner = $r_inner | 0;
 var $$n$023 = 0, $1 = 0.0, $10 = 0.0, $12 = 0.0, $16 = 0.0, $21 = 0.0, $23 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $33 = 0.0, $34 = 0.0, $38 = 0.0, $42 = 0.0, $43 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0.0, $5 = 0.0, $50 = 0, $51 = 0.0, $52 = 0.0, $54 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $74 = 0.0, $76 = 0.0, $79 = 0.0, $82 = 0.0, $85 = 0.0, $88 = 0.0, $base_pos$idx$val = 0.0, $base_pos$idx4 = 0, $base_pos$idx4$val = 0.0, $n$023 = 0, $r_outer$sroa$0$0 = 0.0, $r_outer$sroa$10$0 = 0.0, $r_outer$sroa$18$0$in = 0, $r_outer$sroa$18$013 = 0.0, $r_outer$sroa$26$012 = 0.0, label = 0;
 $1 = +HEAPF32[38010];
 $3 = +HEAPF32[38011];
 $5 = +HEAPF32[36760];
 $6 = 147048;
 if ($5 != +HEAPF32[$6 >> 2]) {
  $10 = +HEAPF32[36761];
  $12 = +HEAPF32[36763];
  if ($10 != $12) {
   $r_outer$sroa$0$0 = $5;
   $r_outer$sroa$10$0 = $10;
   $r_outer$sroa$18$0$in = $6;
   $r_outer$sroa$26$012 = $12;
  } else label = 4;
 } else label = 4;
 if ((label | 0) == 4) {
  $r_outer$sroa$0$0 = 0.0;
  $r_outer$sroa$10$0 = 0.0;
  $r_outer$sroa$18$0$in = 146896;
  $r_outer$sroa$26$012 = +HEAPF32[36725];
 }
 $r_outer$sroa$18$013 = +HEAPF32[$r_outer$sroa$18$0$in >> 2];
 $16 = +HEAPF32[$size >> 2];
 $21 = $16 - ($r_outer$sroa$18$013 - $r_outer$sroa$0$0) > $1 * 2.0 ? $1 : 0.0;
 $23 = +HEAPF32[$size + 4 >> 2];
 $28 = $23 - ($r_outer$sroa$26$012 - $r_outer$sroa$10$0) > $3 * 2.0 ? $3 : 0.0;
 $29 = $r_outer$sroa$0$0 + $21;
 $30 = $r_outer$sroa$10$0 + $28;
 $31 = $r_outer$sroa$18$013 - $21;
 $32 = $r_outer$sroa$26$012 - $28;
 $33 = $31 - $16;
 $34 = $32 - $23;
 $base_pos$idx$val = +HEAPF32[$base_pos >> 2];
 $base_pos$idx4 = $base_pos + 4 | 0;
 $base_pos$idx4$val = +HEAPF32[$base_pos$idx4 >> 2];
 $38 = $base_pos$idx$val < $29 ? $29 : $base_pos$idx$val > $33 ? $33 : $base_pos$idx$val;
 $42 = $base_pos$idx4$val < $30 ? $30 : $base_pos$idx4$val > $34 ? $34 : $base_pos$idx4$val;
 $43 = HEAP32[$last_dir >> 2] | 0;
 $46 = $r_inner + 8 | 0;
 $47 = +HEAPF32[$46 >> 2];
 $48 = $r_inner + 12 | 0;
 $49 = +HEAPF32[$r_inner >> 2];
 $50 = $r_inner + 4 | 0;
 $51 = +HEAPF32[$50 >> 2];
 $52 = +HEAPF32[$48 >> 2];
 $n$023 = (($43 | 0) != -1) << 31 >> 31;
 while (1) {
  $$n$023 = ($n$023 | 0) == -1 ? $43 : $n$023;
  $54 = ($$n$023 | 0) == 0;
  $56 = ($$n$023 | 0) == 1;
  $57 = ($$n$023 | 0) == 3;
  $59 = ($$n$023 | 0) == 2;
  if (!(($57 ? $49 : $31) - ($54 ? $47 : $29) < $16)) if (!(($59 ? $51 : $32) - ($56 ? $52 : $30) < $23)) break;
  $n$023 = $n$023 + 1 | 0;
  if (($n$023 | 0) >= 4) {
   label = 18;
   break;
  }
 }
 if ((label | 0) == 18) {
  HEAP32[$last_dir >> 2] = -1;
  $79 = +HEAPF32[$base_pos >> 2] + $16;
  $82 = ($79 < $31 ? $79 : $31) - $16;
  $85 = +HEAPF32[$base_pos$idx4 >> 2] + $23;
  $88 = ($85 < $32 ? $85 : $32) - $23;
  HEAPF32[$agg$result >> 2] = $82 >= $29 ? $82 : $29;
  HEAPF32[$agg$result + 4 >> 2] = $88 >= $30 ? $88 : $30;
  return;
 }
 HEAP32[$last_dir >> 2] = $$n$023;
 if ($54) $74 = +HEAPF32[$46 >> 2]; else if ($57) $74 = +HEAPF32[$r_inner >> 2] - $16; else $74 = $38;
 if ($56) $76 = +HEAPF32[$48 >> 2]; else if ($59) $76 = +HEAPF32[$50 >> 2] - $23; else $76 = $42;
 HEAPF32[$agg$result >> 2] = $74;
 HEAPF32[$agg$result + 4 >> 2] = $76;
 return;
}

function __ZN5ImGui11OpenPopupExEPKcb($str_id, $reopen_existing) {
 $str_id = $str_id | 0;
 $reopen_existing = $reopen_existing | 0;
 var $1 = 0, $10 = 0, $101 = 0, $103 = 0, $109 = 0, $16 = 0, $17 = 0, $2 = 0, $23 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $39 = 0, $44 = 0, $45 = 0, $48 = 0, $53 = 0, $54 = 0, $58 = 0, $6 = 0, $60 = 0, $66 = 0, $68 = 0, $80 = 0, $81 = 0, $87 = 0, $88 = 0, $91 = 0, $96 = 0, $97 = 0;
 $1 = HEAP32[38201] | 0;
 $2 = $1 + 424 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $6 = $1 + 432 | 0;
 $10 = __Z6ImHashPKvij($str_id, 0, HEAP32[(HEAP32[$6 >> 2] | 0) + ($3 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($10 | 0)) HEAP8[152852] = 1;
 $16 = HEAP32[38232] | 0;
 $17 = HEAP32[$2 >> 2] | 0;
 if (($17 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $23 = __Z6ImHashPKvij(126654, 0, HEAP32[(HEAP32[$6 >> 2] | 0) + ($17 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($23 | 0)) HEAP8[152852] = 1;
 $29 = HEAP32[36771] | 0;
 $31 = HEAP32[36772] | 0;
 $32 = 152916;
 $33 = HEAP32[$32 >> 2] | 0;
 $34 = $16 + 1 | 0;
 if (($33 | 0) <= ($16 | 0)) {
  $36 = 152920;
  if (($33 | 0) == (HEAP32[$36 >> 2] | 0)) {
   $39 = $33 + 1 | 0;
   if (!$33) $44 = 8; else $44 = (($33 | 0) / 2 | 0) + $33 | 0;
   $45 = ($44 | 0) > ($39 | 0) ? $44 : $39;
   if (($33 | 0) < ($45 | 0)) {
    $48 = 147664;
    HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 1;
    $53 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($45 * 24 | 0) | 0;
    $54 = 152924;
    _memcpy($53 | 0, HEAP32[$54 >> 2] | 0, (HEAP32[$32 >> 2] | 0) * 24 | 0) | 0;
    $58 = HEAP32[$54 >> 2] | 0;
    if ($58 | 0) {
     $60 = 147664;
     HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + -1;
    }
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($58);
    HEAP32[$54 >> 2] = $53;
    HEAP32[$36 >> 2] = $45;
    $66 = HEAP32[$32 >> 2] | 0;
   } else $66 = $33;
  } else $66 = $33;
  HEAP32[$32 >> 2] = $66 + 1;
  $68 = HEAP32[38231] | 0;
  HEAP32[$68 + ($66 * 24 | 0) >> 2] = $10;
  HEAP32[$68 + ($66 * 24 | 0) + 4 >> 2] = 0;
  HEAP32[$68 + ($66 * 24 | 0) + 8 >> 2] = $1;
  HEAP32[$68 + ($66 * 24 | 0) + 12 >> 2] = $23;
  HEAP32[$68 + ($66 * 24 | 0) + 16 >> 2] = $29;
  HEAP32[$68 + ($66 * 24 | 0) + 20 >> 2] = $31;
  return;
 }
 if (!$reopen_existing) if ((HEAP32[(HEAP32[38231] | 0) + ($16 * 24 | 0) >> 2] | 0) == ($10 | 0)) return;
 $80 = 152920;
 $81 = HEAP32[$80 >> 2] | 0;
 if (($81 | 0) <= ($16 | 0)) {
  if (!$81) $87 = 8; else $87 = (($81 | 0) / 2 | 0) + $81 | 0;
  $88 = ($87 | 0) > ($34 | 0) ? $87 : $34;
  if (($81 | 0) < ($88 | 0)) {
   $91 = 147664;
   HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + 1;
   $96 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($88 * 24 | 0) | 0;
   $97 = 152924;
   _memcpy($96 | 0, HEAP32[$97 >> 2] | 0, (HEAP32[$32 >> 2] | 0) * 24 | 0) | 0;
   $101 = HEAP32[$97 >> 2] | 0;
   if ($101 | 0) {
    $103 = 147664;
    HEAP32[$103 >> 2] = (HEAP32[$103 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($101);
   HEAP32[$97 >> 2] = $96;
   HEAP32[$80 >> 2] = $88;
  }
 }
 HEAP32[$32 >> 2] = $34;
 $109 = HEAP32[38231] | 0;
 HEAP32[$109 + ($16 * 24 | 0) >> 2] = $10;
 HEAP32[$109 + ($16 * 24 | 0) + 4 >> 2] = 0;
 HEAP32[$109 + ($16 * 24 | 0) + 8 >> 2] = $1;
 HEAP32[$109 + ($16 * 24 | 0) + 12 >> 2] = $23;
 HEAP32[$109 + ($16 * 24 | 0) + 16 >> 2] = $29;
 HEAP32[$109 + ($16 * 24 | 0) + 20 >> 2] = $31;
 return;
}

function __ZN4yakc6memoryC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $69 = 0, $76 = 0, $77 = 0, $layer_index$03$lcssa$i = 0, $page_index$04$i = 0, label = 0;
 $0 = $this + 1024 | 0;
 $1 = $this;
 do {
  HEAP32[$1 >> 2] = 0;
  HEAP8[$1 + 4 >> 0] = 0;
  $1 = $1 + 8 | 0;
 } while (($1 | 0) != ($0 | 0));
 HEAP32[$this + 1024 >> 2] = 0;
 HEAP8[$this + 1028 >> 0] = 0;
 HEAP32[$this + 1032 >> 2] = 0;
 HEAP8[$this + 1036 >> 0] = 0;
 HEAP32[$this + 1040 >> 2] = 0;
 HEAP8[$this + 1044 >> 0] = 0;
 HEAP32[$this + 1048 >> 2] = 0;
 HEAP8[$this + 1052 >> 0] = 0;
 HEAP32[$this + 1056 >> 2] = 0;
 HEAP8[$this + 1060 >> 0] = 0;
 HEAP32[$this + 1064 >> 2] = 0;
 HEAP8[$this + 1068 >> 0] = 0;
 HEAP32[$this + 1072 >> 2] = 0;
 HEAP8[$this + 1076 >> 0] = 0;
 HEAP32[$this + 1080 >> 2] = 0;
 HEAP8[$this + 1084 >> 0] = 0;
 HEAP32[$this + 1088 >> 2] = 0;
 HEAP8[$this + 1092 >> 0] = 0;
 HEAP32[$this + 1096 >> 2] = 0;
 HEAP8[$this + 1100 >> 0] = 0;
 HEAP32[$this + 1104 >> 2] = 0;
 HEAP8[$this + 1108 >> 0] = 0;
 HEAP32[$this + 1112 >> 2] = 0;
 HEAP8[$this + 1116 >> 0] = 0;
 HEAP32[$this + 1120 >> 2] = 0;
 HEAP8[$this + 1124 >> 0] = 0;
 HEAP32[$this + 1128 >> 2] = 0;
 HEAP8[$this + 1132 >> 0] = 0;
 HEAP32[$this + 1136 >> 2] = 0;
 HEAP8[$this + 1140 >> 0] = 0;
 HEAP32[$this + 1144 >> 2] = 0;
 HEAP8[$this + 1148 >> 0] = 0;
 HEAP32[$this + 1152 >> 2] = 0;
 HEAP8[$this + 1156 >> 0] = 0;
 HEAP32[$this + 1160 >> 2] = 0;
 HEAP8[$this + 1164 >> 0] = 0;
 HEAP32[$this + 1168 >> 2] = 0;
 HEAP8[$this + 1172 >> 0] = 0;
 HEAP32[$this + 1176 >> 2] = 0;
 HEAP8[$this + 1180 >> 0] = 0;
 HEAP32[$this + 1184 >> 2] = 0;
 HEAP8[$this + 1188 >> 0] = 0;
 HEAP32[$this + 1192 >> 2] = 0;
 HEAP8[$this + 1196 >> 0] = 0;
 HEAP32[$this + 1200 >> 2] = 0;
 HEAP8[$this + 1204 >> 0] = 0;
 HEAP32[$this + 1208 >> 2] = 0;
 HEAP8[$this + 1212 >> 0] = 0;
 HEAP32[$this + 1216 >> 2] = 0;
 HEAP8[$this + 1220 >> 0] = 0;
 HEAP32[$this + 1224 >> 2] = 0;
 HEAP8[$this + 1228 >> 0] = 0;
 HEAP32[$this + 1232 >> 2] = 0;
 HEAP8[$this + 1236 >> 0] = 0;
 HEAP32[$this + 1240 >> 2] = 0;
 HEAP8[$this + 1244 >> 0] = 0;
 HEAP32[$this + 1248 >> 2] = 0;
 HEAP8[$this + 1252 >> 0] = 0;
 HEAP32[$this + 1256 >> 2] = 0;
 HEAP8[$this + 1260 >> 0] = 0;
 HEAP32[$this + 1264 >> 2] = 0;
 HEAP8[$this + 1268 >> 0] = 0;
 HEAP32[$this + 1272 >> 2] = 0;
 HEAP8[$this + 1276 >> 0] = 0;
 $69 = $this + 1280 | 0;
 _memset($69 | 0, -1, 2048) | 0;
 __ZN4yakc6memory9unmap_allEv($this);
 $page_index$04$i = 0;
 do {
  if (!(HEAP32[$this + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 256 + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 512 + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 768 + ($page_index$04$i << 3) >> 2] | 0)) {
   HEAP32[$this + 1024 + ($page_index$04$i << 3) >> 2] = $69;
   HEAP8[$this + 1024 + ($page_index$04$i << 3) + 4 >> 0] = 0;
  } else {
   $layer_index$03$lcssa$i = 3;
   label = 6;
  } else {
   $layer_index$03$lcssa$i = 2;
   label = 6;
  } else {
   $layer_index$03$lcssa$i = 1;
   label = 6;
  } else {
   $layer_index$03$lcssa$i = 0;
   label = 6;
  }
  if ((label | 0) == 6) {
   label = 0;
   $76 = $this + 1024 + ($page_index$04$i << 3) | 0;
   $77 = $this + ($layer_index$03$lcssa$i << 8) + ($page_index$04$i << 3) | 0;
   HEAP32[$76 >> 2] = HEAP32[$77 >> 2];
   HEAP8[$76 + 4 >> 0] = HEAP8[$77 + 4 >> 0] | 0;
  }
  $page_index$04$i = $page_index$04$i + 1 | 0;
 } while (($page_index$04$i | 0) != 32);
 return;
}

function __ZN5Oryol5_priv11tapDetector6detectERKNS0_10touchEventE($this, $newEvent) {
 $this = $this | 0;
 $newEvent = $newEvent | 0;
 var $$0 = 0, $$pre$phi12Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $111 = 0, $116 = 0, $117 = 0, $13 = 0, $14 = 0, $20 = 0, $21 = 0, $27 = 0, $32 = 0, $39 = 0.0, $44 = 0.0, $49 = 0, $5 = 0, $54 = 0, $59 = 0, $60 = 0, $66 = 0, $68 = 0, $71 = 0, $72 = 0, $73 = 0, $88 = 0.0, $93 = 0.0, $98 = 0;
 $0 = $newEvent + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78758, 0, 78782, 40, 78849);
  _abort();
 }
 L4 : do if (($1 | 0) <= 1) switch (HEAP32[$newEvent >> 2] | 0) {
 case 3:
  {
   break L4;
   break;
  }
 case 0:
  {
   $10 = $this + 168 | 0;
   $13 = $newEvent + 8 | 0;
   if ((HEAP32[$10 >> 2] | 0) > 0) {
    $14 = $13;
    $20 = $this + 24 | 0;
    $21 = $20;
    $27 = _i64Subtract(HEAP32[$14 >> 2] | 0, HEAP32[$14 + 4 >> 2] | 0, HEAP32[$21 >> 2] | 0, HEAP32[$21 + 4 >> 2] | 0) | 0;
    if (!((+($27 >>> 0) + 4294967296.0 * +(tempRet0 | 0)) / 1.0e3 < 750.0)) {
     $32 = $this + 16 | 0;
     if ((HEAP32[$32 >> 2] | 0) != 4) {
      HEAP32[$32 >> 2] = 4;
      _memset($20 | 0, 0, 140) | 0;
     }
     HEAP32[$10 >> 2] = 0;
    }
    $39 = +HEAPF32[$newEvent + 24 >> 2] - +HEAPF32[$this + 40 >> 2];
    $44 = +HEAPF32[$newEvent + 28 >> 2] - +HEAPF32[$this + 44 >> 2];
    if ($39 * $39 + $44 * $44 < 900.0) $$pre$phi12Z2D = $20; else {
     $49 = $this + 16 | 0;
     if ((HEAP32[$49 >> 2] | 0) != 4) {
      HEAP32[$49 >> 2] = 4;
      _memset($20 | 0, 0, 140) | 0;
     }
     HEAP32[$10 >> 2] = 0;
     $$pre$phi12Z2D = $20;
    }
   } else $$pre$phi12Z2D = $this + 24 | 0;
   HEAP32[$this + 16 >> 2] = HEAP32[$newEvent >> 2];
   $54 = $13;
   $59 = HEAP32[$54 + 4 >> 2] | 0;
   $60 = $$pre$phi12Z2D;
   HEAP32[$60 >> 2] = HEAP32[$54 >> 2];
   HEAP32[$60 + 4 >> 2] = $59;
   _memcpy($this + 32 | 0, $0 | 0, 132) | 0;
   $$0 = 0;
   return $$0 | 0;
  }
 case 2:
  {
   $66 = $newEvent + 8 | 0;
   $68 = HEAP32[$66 >> 2] | 0;
   $71 = HEAP32[$66 + 4 >> 2] | 0;
   $72 = $this + 24 | 0;
   $73 = $72;
   if (!((+((_i64Subtract($68 | 0, $71 | 0, HEAP32[$73 >> 2] | 0, HEAP32[$73 + 4 >> 2] | 0) | 0) >>> 0) + 4294967296.0 * +(tempRet0 | 0)) / 1.0e3 < 250.0)) {
    $$0 = 0;
    return $$0 | 0;
   }
   $88 = +HEAPF32[$newEvent + 24 >> 2] - +HEAPF32[$this + 40 >> 2];
   $93 = +HEAPF32[$newEvent + 28 >> 2] - +HEAPF32[$this + 44 >> 2];
   if (!($88 * $88 + $93 * $93 < 400.0)) {
    $$0 = 0;
    return $$0 | 0;
   }
   $98 = $this + 168 | 0;
   $100 = (HEAP32[$98 >> 2] | 0) + 1 | 0;
   HEAP32[$98 >> 2] = $100;
   $101 = $this + 16 | 0;
   HEAP32[$101 >> 2] = 2;
   $102 = $72;
   HEAP32[$102 >> 2] = $68;
   HEAP32[$102 + 4 >> 2] = $71;
   _memcpy($this + 32 | 0, $0 | 0, 132) | 0;
   if (($100 | 0) != (HEAP32[$this >> 2] | 0)) {
    $$0 = 0;
    return $$0 | 0;
   }
   HEAP32[$101 >> 2] = 4;
   _memset($72 | 0, 0, 140) | 0;
   HEAP32[$98 >> 2] = 0;
   $111 = $newEvent + 24 | 0;
   $116 = HEAP32[$111 + 4 >> 2] | 0;
   $117 = $this + 4 | 0;
   HEAP32[$117 >> 2] = HEAP32[$111 >> 2];
   HEAP32[$117 + 4 >> 2] = $116;
   $$0 = 5;
   return $$0 | 0;
  }
 default:
  {
   $$0 = 0;
   return $$0 | 0;
  }
 } while (0);
 $5 = $this + 16 | 0;
 if ((HEAP32[$5 >> 2] | 0) != 4) {
  HEAP32[$5 >> 2] = 4;
  _memset($this + 24 | 0, 0, 140) | 0;
 }
 HEAP32[$this + 168 >> 2] = 0;
 $$0 = 0;
 return $$0 | 0;
}

function __ZN5ImGui15BeginChildFrameEjRK6ImVec2i($id, $size, $extra_flags) {
 $id = $id | 0;
 $size = $size | 0;
 $extra_flags = $extra_flags | 0;
 var $0 = 0, $1 = 0, $12 = 0, $13 = 0, $16 = 0, $2 = 0, $21 = 0, $22 = 0, $26 = 0, $28 = 0, $3 = 0, $34 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $48 = 0, $53 = 0, $54 = 0, $57 = 0, $62 = 0, $63 = 0, $67 = 0, $69 = 0, $7 = 0, $75 = 0, $77 = 0, $82 = 0, $str_id$i = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer = sp + 32 | 0;
 $str_id$i = sp;
 $0 = 152152;
 $1 = 152104;
 HEAP32[$str_id$i >> 2] = HEAP32[$1 >> 2];
 HEAP32[$str_id$i + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$str_id$i + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$str_id$i + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 $2 = 152880;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = 152884;
 if (($3 | 0) == (HEAP32[$4 >> 2] | 0)) {
  $7 = $3 + 1 | 0;
  if (!$3) $12 = 8; else $12 = (($3 | 0) / 2 | 0) + $3 | 0;
  $13 = ($12 | 0) > ($7 | 0) ? $12 : $7;
  if (($3 | 0) < ($13 | 0)) {
   $16 = 147664;
   HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
   $21 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($13 * 20 | 0) | 0;
   $22 = 152888;
   _memcpy($21 | 0, HEAP32[$22 >> 2] | 0, (HEAP32[$2 >> 2] | 0) * 20 | 0) | 0;
   $26 = HEAP32[$22 >> 2] | 0;
   if ($26 | 0) {
    $28 = 147664;
    HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($26);
   HEAP32[$22 >> 2] = $21;
   HEAP32[$4 >> 2] = $13;
   $34 = HEAP32[$2 >> 2] | 0;
  } else $34 = $3;
 } else $34 = $3;
 HEAP32[$2 >> 2] = $34 + 1;
 $36 = HEAP32[38222] | 0;
 HEAP32[$36 + ($34 * 20 | 0) >> 2] = 3;
 $38 = $36 + ($34 * 20 | 0) + 4 | 0;
 HEAP32[$38 >> 2] = HEAP32[$str_id$i >> 2];
 HEAP32[$38 + 4 >> 2] = HEAP32[$str_id$i + 4 >> 2];
 HEAP32[$38 + 8 >> 2] = HEAP32[$str_id$i + 8 >> 2];
 HEAP32[$38 + 12 >> 2] = HEAP32[$str_id$i + 12 >> 2];
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$1 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
 $40 = HEAP32[37994] | 0;
 $41 = 151964;
 $42 = HEAP32[$41 >> 2] | 0;
 $43 = 152892;
 $44 = HEAP32[$43 >> 2] | 0;
 $45 = 152896;
 if (($44 | 0) == (HEAP32[$45 >> 2] | 0)) {
  $48 = $44 + 1 | 0;
  if (!$44) $53 = 8; else $53 = (($44 | 0) / 2 | 0) + $44 | 0;
  $54 = ($53 | 0) > ($48 | 0) ? $53 : $48;
  if (($44 | 0) < ($54 | 0)) {
   $57 = 147664;
   HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 1;
   $62 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($54 * 12 | 0) | 0;
   $63 = 152900;
   _memcpy($62 | 0, HEAP32[$63 >> 2] | 0, (HEAP32[$43 >> 2] | 0) * 12 | 0) | 0;
   $67 = HEAP32[$63 >> 2] | 0;
   if ($67 | 0) {
    $69 = 147664;
    HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($67);
   HEAP32[$63 >> 2] = $62;
   HEAP32[$45 >> 2] = $54;
   $75 = HEAP32[$43 >> 2] | 0;
  } else $75 = $44;
 } else $75 = $44;
 HEAP32[$43 >> 2] = $75 + 1;
 $77 = HEAP32[38225] | 0;
 HEAP32[$77 + ($75 * 12 | 0) >> 2] = 4;
 HEAP32[$77 + ($75 * 12 | 0) + 4 >> 2] = $42;
 HEAP32[$77 + ($75 * 12 | 0) + 8 >> 2] = 0;
 HEAP32[$41 >> 2] = $40;
 HEAP32[$vararg_buffer >> 2] = $id;
 __Z14ImFormatStringPciPKcz($str_id$i, 32, 124658, $vararg_buffer) | 0;
 $82 = __ZN5ImGui10BeginChildEPKcRK6ImVec2bi($str_id$i, $size, 0, $extra_flags | 4) | 0;
 STACKTOP = sp;
 return $82 | 0;
}

function __ZN10ImDrawList13PathArcToFastERK6ImVec2fii($this, $centre, $radius, $amin, $amax) {
 $this = $this | 0;
 $centre = $centre | 0;
 $radius = +$radius;
 $amin = $amin | 0;
 $amax = $amax | 0;
 var $102 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $27 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $42 = 0, $47 = 0, $48 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $60 = 0, $65 = 0, $66 = 0, $67 = 0, $72 = 0.0, $77 = 0.0, $78 = 0, $80 = 0, $81 = 0, $86 = 0, $87 = 0, $9 = 0.0, $90 = 0, $96 = 0, $97 = 0, $a1$05 = 0, $i$06 = 0, dest = 0, stop = 0;
 if (!(HEAP8[146512] | 0)) if (___cxa_guard_acquire(146512) | 0) {
  dest = 162660;
  stop = dest + 96 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
 }
 if (!(HEAP8[163345] | 0)) {
  $i$06 = 0;
  do {
   $9 = +($i$06 | 0) / 12.0 * 2.0 * 3.1415927410125732;
   HEAPF32[162660 + ($i$06 << 3) >> 2] = +Math_cos(+$9);
   HEAPF32[162660 + ($i$06 << 3) + 4 >> 2] = +Math_sin(+$9);
   $i$06 = $i$06 + 1 | 0;
  } while (($i$06 | 0) != 12);
  HEAP8[163345] = 1;
 }
 if (($amax | 0) < ($amin | 0)) return;
 $17 = $this + 76 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if ($radius == 0.0) {
  $19 = $this + 80 | 0;
  if (($18 | 0) == (HEAP32[$19 >> 2] | 0)) {
   $22 = $18 + 1 | 0;
   if (!$18) $27 = 8; else $27 = (($18 | 0) / 2 | 0) + $18 | 0;
   $28 = ($27 | 0) > ($22 | 0) ? $27 : $22;
   if (($18 | 0) < ($28 | 0)) {
    $31 = __ZN5ImGui8MemAllocEj($28 << 3) | 0;
    $32 = $this + 84 | 0;
    _memcpy($31 | 0, HEAP32[$32 >> 2] | 0, HEAP32[$17 >> 2] << 3 | 0) | 0;
    __ZN5ImGui7MemFreeEPv(HEAP32[$32 >> 2] | 0);
    HEAP32[$32 >> 2] = $31;
    HEAP32[$19 >> 2] = $28;
    $38 = HEAP32[$17 >> 2] | 0;
   } else $38 = $18;
  } else $38 = $18;
  HEAP32[$17 >> 2] = $38 + 1;
  $42 = $centre;
  $47 = HEAP32[$42 + 4 >> 2] | 0;
  $48 = (HEAP32[$this + 84 >> 2] | 0) + ($38 << 3) | 0;
  HEAP32[$48 >> 2] = HEAP32[$42 >> 2];
  HEAP32[$48 + 4 >> 2] = $47;
  return;
 }
 $54 = 1 - $amin + $amax + $18 | 0;
 $55 = $this + 80 | 0;
 $56 = HEAP32[$55 >> 2] | 0;
 if (($56 | 0) < ($54 | 0)) {
  $59 = __ZN5ImGui8MemAllocEj($54 << 3) | 0;
  $60 = $this + 84 | 0;
  _memcpy($59 | 0, HEAP32[$60 >> 2] | 0, HEAP32[$17 >> 2] << 3 | 0) | 0;
  __ZN5ImGui7MemFreeEPv(HEAP32[$60 >> 2] | 0);
  HEAP32[$60 >> 2] = $59;
  HEAP32[$55 >> 2] = $54;
  $102 = $54;
 } else $102 = $56;
 $65 = $centre + 4 | 0;
 $66 = $this + 84 | 0;
 $80 = $102;
 $a1$05 = $amin;
 while (1) {
  $67 = ($a1$05 | 0) % 12 | 0;
  $72 = +HEAPF32[$centre >> 2] + +HEAPF32[162660 + ($67 << 3) >> 2] * $radius;
  $77 = +HEAPF32[$65 >> 2] + +HEAPF32[162660 + ($67 << 3) + 4 >> 2] * $radius;
  $78 = HEAP32[$17 >> 2] | 0;
  if (($78 | 0) == ($80 | 0)) {
   $81 = $80 + 1 | 0;
   if (!$80) $86 = 8; else $86 = (($80 | 0) / 2 | 0) + $80 | 0;
   $87 = ($86 | 0) > ($81 | 0) ? $86 : $81;
   if (($80 | 0) < ($87 | 0)) {
    $90 = __ZN5ImGui8MemAllocEj($87 << 3) | 0;
    _memcpy($90 | 0, HEAP32[$66 >> 2] | 0, HEAP32[$17 >> 2] << 3 | 0) | 0;
    __ZN5ImGui7MemFreeEPv(HEAP32[$66 >> 2] | 0);
    HEAP32[$66 >> 2] = $90;
    HEAP32[$55 >> 2] = $87;
    $96 = HEAP32[$17 >> 2] | 0;
   } else $96 = $80;
  } else $96 = $78;
  HEAP32[$17 >> 2] = $96 + 1;
  $97 = HEAP32[$66 >> 2] | 0;
  HEAPF32[$97 + ($96 << 3) >> 2] = $72;
  HEAPF32[$97 + ($96 << 3) + 4 >> 2] = $77;
  if (($a1$05 | 0) >= ($amax | 0)) break;
  $80 = HEAP32[$55 >> 2] | 0;
  $a1$05 = $a1$05 + 1 | 0;
 }
 return;
}

function __ZN5Oryol5_priv12imguiWrapper8NewFrameEf($this, $frameDurationInSeconds) {
 $this = $this | 0;
 $frameDurationInSeconds = +$frameDurationInSeconds;
 var $0 = 0, $1 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0.0, $25 = 0, $36 = 0, $39 = 0, $40 = 0, $44 = 0, $48 = 0, $5 = 0, $64 = 0, $66 = 0, $8 = 0, $__begin$07 = 0, $dispAttrs = 0, $text$08 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $dispAttrs = sp;
 $0 = __ZN5ImGui5GetIOEv() | 0;
 $1 = __ZN5Oryol3Gfx17RenderTargetAttrsEv() | 0;
 dest = $dispAttrs;
 src = $1;
 stop = dest + 44 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $2 = $dispAttrs + 44 | 0;
 __ZN5Oryol6StringC2ERKS0_($2, $1 + 44 | 0);
 $5 = HEAP32[$dispAttrs + 16 >> 2] | 0;
 if (($5 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(81003, 0, 80002, 136, 81073);
  _abort();
 }
 $8 = HEAP32[$dispAttrs + 20 >> 2] | 0;
 if (($8 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(81003, 0, 80002, 136, 81073);
  _abort();
 }
 HEAPF32[$0 >> 2] = +($5 | 0);
 HEAPF32[$0 + 4 >> 2] = +($8 | 0);
 HEAPF32[$0 + 8 >> 2] = $frameDurationInSeconds;
 if (!(__ZN5Oryol5Input7IsValidEv() | 0)) {
  __ZN5ImGui8NewFrameEv();
  __ZN5Oryol6StringD2Ev($2);
  STACKTOP = sp;
  return;
 }
 $15 = __ZN5Oryol5Input5MouseEv() | 0;
 if (HEAP8[$15 >> 0] | 0) {
  HEAP32[$0 + 188 >> 2] = HEAP32[$15 + 4 >> 2];
  HEAP32[$0 + 192 >> 2] = HEAP32[$15 + 8 >> 2];
  HEAP32[$0 + 204 >> 2] = HEAP32[$15 + 24 >> 2];
  HEAP8[$0 + 196 >> 0] = (HEAP8[$15 + 28 >> 0] & 5) != 0 & 1;
  HEAP8[$0 + 197 >> 0] = (HEAP8[$15 + 29 >> 0] & 5) != 0 & 1;
  HEAP8[$0 + 198 >> 0] = (HEAP8[$15 + 30 >> 0] & 5) != 0 & 1;
 }
 $18 = __ZN5Oryol5Input8TouchpadEv() | 0;
 $19 = HEAP16[$18 >> 1] | 0;
 if (($19 & 255) << 24 >> 24) {
  $23 = +HEAPF32[$18 + 12 >> 2];
  if ($23 > 0.0) {
   $25 = $18 + 16 | 0;
   if (+HEAPF32[$25 >> 2] > 0.0) {
    HEAPF32[$0 + 188 >> 2] = $23;
    HEAP32[$0 + 192 >> 2] = HEAP32[$25 >> 2];
    HEAP8[$0 + 196 >> 0] = ($19 & 65535) < 256 ? HEAP8[$18 + 4 >> 0] | 0 : 1;
   }
  }
 }
 $36 = __ZN5Oryol5Input8KeyboardEv() | 0;
 if (!(HEAP8[$36 >> 0] | 0)) {
  __ZN5ImGui8NewFrameEv();
  __ZN5Oryol6StringD2Ev($2);
  STACKTOP = sp;
  return;
 }
 $39 = $36 + 72 | 0;
 $40 = HEAP32[$39 >> 2] | 0;
 if ($40 | 0) {
  $44 = $40;
  $text$08 = $39;
  do {
   $text$08 = $text$08 + 4 | 0;
   __ZN7ImGuiIO17AddInputCharacterEt($0, $44 & 65535);
   $44 = HEAP32[$text$08 >> 2] | 0;
  } while (($44 | 0) != 0);
 }
 $48 = HEAP32[$36 + 48 >> 2] | 0;
 HEAP8[$0 + 209 >> 0] = $48 & 131072 | 0 ? 1 : $48 >>> 21 & 1;
 HEAP8[$0 + 210 >> 0] = $48 & 65536 | 0 ? 1 : $48 >>> 20 & 1;
 HEAP8[$0 + 211 >> 0] = $48 & 262144 | 0 ? 1 : $48 >>> 22 & 1;
 $__begin$07 = 13232;
 while (1) {
  $64 = HEAP32[$__begin$07 >> 2] | 0;
  if ($64 >>> 0 >= 121) {
   label = 15;
   break;
  }
  $66 = $64 >>> 5;
  HEAP8[$0 + 212 + $64 >> 0] = ((HEAP32[$36 + 36 + ($66 << 2) >> 2] | HEAP32[$36 + 4 + ($66 << 2) >> 2]) & 1 << ($64 & 31) | 0) != 0 & 1;
  $__begin$07 = $__begin$07 + 4 | 0;
  if (($__begin$07 | 0) == 13300) {
   label = 17;
   break;
  }
 }
 if ((label | 0) == 15) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(81122, 0, 81157, 125, 81219);
  _abort();
 } else if ((label | 0) == 17) {
  __ZN5ImGui8NewFrameEv();
  __ZN5Oryol6StringD2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNK5Oryol5_priv14assignRegistry14ResolveAssignsERKNS_6StringE($agg$result, $this, $str) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $str = $str | 0;
 var $$0$i1$i = 0, $$0$i2$i = 0, $$0$ph$i$i$i$i$i = 0, $$0$ph$i$i$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa15 = 0, $1 = 0, $10 = 0, $13 = 0, $24 = 0, $25 = 0, $3 = 0, $34 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $__len$0$i$i$i$i$i = 0, $__len$0$i$i$i$i$i$lcssa14 = 0, $__len$0$ph$i$i$i$i$i = 0, $assignString = 0, $builder = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $builder = sp + 8 | 0;
 $assignString = sp;
 do {} while ((HEAP8[$this >> 0] & 1) != 0);
 $1 = $this + 4 | 0;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
 __ZN5Oryol13StringBuilderC2Ev($builder);
 __ZN5Oryol13StringBuilder3SetERKNS_6StringE($builder, $str);
 $3 = __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($builder, 0, -1, 102747) | 0;
 if (($3 | 0) <= 1) {
  __ZNK5Oryol13StringBuilder9GetStringEv($agg$result, $builder);
  $34 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = $34 - 1;
  __ZN5Oryol13StringBuilderD2Ev($builder);
  STACKTOP = sp;
  return;
 }
 $5 = $this + 8 | 0;
 $6 = $this + 32 | 0;
 $7 = $this + 16 | 0;
 $8 = $this + 20 | 0;
 $10 = $3;
 while (1) {
  __ZNK5Oryol13StringBuilder12GetSubStringEii($assignString, $builder, 0, $10 + 1 | 0);
  if (HEAP8[$6 >> 0] | 0) {
   label = 6;
   break;
  }
  $13 = HEAP32[$5 >> 2] | 0;
  if (!$13) {
   $$0$i1$i = 0;
   $$0$i2$i = 0;
  } else {
   $$0$i1$i = $13 + (HEAP32[$8 >> 2] << 4) | 0;
   $$0$i2$i = $13 + (HEAP32[$7 >> 2] << 4) | 0;
  }
  $$0$ph$i$i$i$i$i = $$0$i2$i;
  $__len$0$ph$i$i$i$i$i = $$0$i1$i - $$0$i2$i >> 4;
  L13 : while (1) {
   $__len$0$i$i$i$i$i = $__len$0$ph$i$i$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i$i$i) {
     $$0$ph$i$i$i$i$i$lcssa = $$0$ph$i$i$i$i$i;
     break L13;
    }
    $24 = ($__len$0$i$i$i$i$i | 0) / 2 | 0;
    $25 = $$0$ph$i$i$i$i$i + ($24 << 4) | 0;
    if (__ZNK5Oryol6StringltERKS0_($25, $assignString) | 0) {
     $$lcssa = $24;
     $$lcssa15 = $25;
     $__len$0$i$i$i$i$i$lcssa14 = $__len$0$i$i$i$i$i;
     break;
    } else $__len$0$i$i$i$i$i = $24;
   }
   $$0$ph$i$i$i$i$i = $$lcssa15 + 16 | 0;
   $__len$0$ph$i$i$i$i$i = $__len$0$i$i$i$i$i$lcssa14 + -1 - $$lcssa | 0;
  }
  if (($$0$ph$i$i$i$i$i$lcssa | 0) == ($$0$i1$i | 0)) {
   label = 17;
   break;
  }
  if (__ZNK5Oryol6StringltERKS0_($assignString, $$0$ph$i$i$i$i$i$lcssa) | 0) {
   label = 17;
   break;
  }
  __ZN5Oryol13StringBuilder15SubstituteFirstERKNS_6StringES3_($builder, $assignString, __ZNK5Oryol3MapINS_6StringES1_EixERKS1_($5, $assignString) | 0) | 0;
  __ZN5Oryol6StringD2Ev($assignString);
  $10 = __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($builder, 0, -1, 102747) | 0;
  if (($10 | 0) <= 1) {
   label = 18;
   break;
  }
 }
 if ((label | 0) == 6) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 102379);
  _abort();
 } else if ((label | 0) == 17) {
  __ZN5Oryol6StringD2Ev($assignString);
  __ZNK5Oryol13StringBuilder9GetStringEv($agg$result, $builder);
  $34 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = $34 - 1;
  __ZN5Oryol13StringBuilderD2Ev($builder);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 18) {
  __ZNK5Oryol13StringBuilder9GetStringEv($agg$result, $builder);
  $34 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = $34 - 1;
  __ZN5Oryol13StringBuilderD2Ev($builder);
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol3Gfx14validateMeshesEPNS_5_priv8pipelineEPPNS1_4meshEi($pip, $meshes, $num) {
 $pip = $pip | 0;
 $meshes = $meshes | 0;
 $num = $num | 0;
 var $12 = 0, $25 = 0, $26 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $compIndex$012 = 0, $mshIndex$013 = 0, $mshIndex$013$lcssa = 0, $mshIndex$013$lcssa39 = 0, $mshIndex$013$lcssa40 = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer8 = 0, $vertexAttrCounts = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer11 = sp + 40 | 0;
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vertexAttrCounts = sp + 48 | 0;
 if (!(($meshes | 0) != 0 & ($num + -1 | 0) >>> 0 < 3)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(44692, 0, 42914, 396, 44752);
  _abort();
 }
 $3 = HEAP32[$meshes >> 2] | 0;
 if (!$3) {
  __ZN5Oryol3Log5ErrorEPKcz(44845, sp);
  _abort();
 }
 if (HEAP32[$3 + 288 >> 2] | 0) if (!(HEAP32[$3 + 284 >> 2] | 0)) {
  __ZN5Oryol3Log5ErrorEPKcz(44919, $vararg_buffer1);
  _abort();
 }
 dest = $vertexAttrCounts;
 stop = dest + 64 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $mshIndex$013 = 0;
 L11 : while (1) {
  $12 = HEAP32[$meshes + ($mshIndex$013 << 2) >> 2] | 0;
  if ($12 | 0) {
   if ((HEAP32[$12 + 8 >> 2] | 0) != 3) {
    $mshIndex$013$lcssa = $mshIndex$013;
    label = 12;
    break;
   }
   if (($mshIndex$013 | 0) > 0) {
    if (HEAP32[$12 + 288 >> 2] | 0) {
     $mshIndex$013$lcssa39 = $mshIndex$013;
     label = 15;
     break;
    }
    if ((HEAP32[$12 + 296 >> 2] | 0) > 0) {
     $mshIndex$013$lcssa40 = $mshIndex$013;
     label = 17;
     break;
    }
   }
   $25 = HEAP8[$12 + 278 >> 0] | 0;
   $26 = $25 << 24 >> 24;
   if ($25 << 24 >> 24 > 0) {
    $compIndex$012 = 0;
    do {
     if ($compIndex$012 >>> 0 >= 16) {
      label = 21;
      break L11;
     }
     $32 = HEAP8[$12 + 214 + ($compIndex$012 << 1) >> 0] | 0;
     if (($32 & 255) >= 16) {
      label = 23;
      break L11;
     }
     $35 = $vertexAttrCounts + (($32 & 255) << 2) | 0;
     $36 = HEAP32[$35 >> 2] | 0;
     HEAP32[$35 >> 2] = $36 + 1;
     $compIndex$012 = $compIndex$012 + 1 | 0;
     if (($36 | 0) > 0) {
      label = 25;
      break L11;
     }
    } while (($compIndex$012 | 0) < ($26 | 0));
   }
  }
  $mshIndex$013 = $mshIndex$013 + 1 | 0;
  if (($mshIndex$013 | 0) >= 4) {
   label = 9;
   break;
  }
 }
 if ((label | 0) == 9) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 12) {
  HEAP32[$vararg_buffer3 >> 2] = $mshIndex$013$lcssa;
  __ZN5Oryol3Log5ErrorEPKcz(45009, $vararg_buffer3);
  _abort();
 } else if ((label | 0) == 15) {
  HEAP32[$vararg_buffer5 >> 2] = $mshIndex$013$lcssa39;
  __ZN5Oryol3Log5ErrorEPKcz(45065, $vararg_buffer5);
  _abort();
 } else if ((label | 0) == 17) {
  HEAP32[$vararg_buffer8 >> 2] = $mshIndex$013$lcssa40;
  __ZN5Oryol3Log5ErrorEPKcz(45146, $vararg_buffer8);
  _abort();
 } else if ((label | 0) == 21) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 62948);
  _abort();
 } else if ((label | 0) == 23) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 47534);
  _abort();
 } else if ((label | 0) == 25) {
  __ZN5Oryol3Log5ErrorEPKcz(45237, $vararg_buffer11);
  _abort();
 }
}

function __ZNK5Oryol3MapINS_7LocatorEiE8ContainsERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$ph$i$i$i$i = 0, $$0$ph$lcssa7$i$i$i$i = 0, $$0$ph$us$i$i$i$i = 0, $$lcssa = 0, $$lcssa52 = 0, $$lcssa54 = 0, $$pre$i$i$i$i$i$i$i$i = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $28 = 0, $29 = 0, $3 = 0, $38 = 0, $45 = 0, $46 = 0, $50 = 0, $51 = 0, $__len$0$i$i$i$i = 0, $__len$0$i$i$i$i$lcssa50 = 0, $__len$0$ph$i$i$i$i = 0, $__len$0$ph$us$i$i$i$i = 0, $__len$0$us$us$i$i$i$i = 0, $__len$0$us$us$i$i$i$i$lcssa49 = 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 112713);
  _abort();
 }
 $3 = HEAP32[$this >> 2] | 0;
 if (!$3) {
  $$0$i1 = 0;
  $$0$i2 = 0;
 } else {
  $$0$i1 = $3 + ((HEAP32[$this + 12 >> 2] | 0) * 12 | 0) | 0;
  $$0$i2 = $3 + ((HEAP32[$this + 8 >> 2] | 0) * 12 | 0) | 0;
 }
 $14 = ($$0$i1 - $$0$i2 | 0) / 12 | 0;
 $16 = HEAP32[$key + 4 >> 2] | 0;
 $17 = HEAP32[$key >> 2] | 0;
 $18 = ($17 | 0) == 0;
 L7 : do if ($18) {
  $$0$ph$us$i$i$i$i = $$0$i2;
  $__len$0$ph$us$i$i$i$i = $14;
  while (1) {
   $__len$0$us$us$i$i$i$i = $__len$0$ph$us$i$i$i$i;
   while (1) {
    if (!$__len$0$us$us$i$i$i$i) {
     $$0$ph$lcssa7$i$i$i$i = $$0$ph$us$i$i$i$i;
     break L7;
    }
    $20 = ($__len$0$us$us$i$i$i$i | 0) / 2 | 0;
    if ((HEAP32[$$0$ph$us$i$i$i$i + ($20 * 12 | 0) + 4 >> 2] | 0) >>> 0 < $16 >>> 0) {
     $$lcssa = $20;
     $__len$0$us$us$i$i$i$i$lcssa49 = $__len$0$us$us$i$i$i$i;
     break;
    } else $__len$0$us$us$i$i$i$i = $20;
   }
   $$0$ph$us$i$i$i$i = $$0$ph$us$i$i$i$i + ($$lcssa * 12 | 0) + 12 | 0;
   $__len$0$ph$us$i$i$i$i = $__len$0$us$us$i$i$i$i$lcssa49 + -1 - $$lcssa | 0;
  }
 } else {
  $$0$ph$i$i$i$i = $$0$i2;
  $__len$0$ph$i$i$i$i = $14;
  L14 : while (1) {
   $__len$0$i$i$i$i = $__len$0$ph$i$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i$i) {
     $$0$ph$lcssa7$i$i$i$i = $$0$ph$i$i$i$i;
     break L7;
    }
    $28 = ($__len$0$i$i$i$i | 0) / 2 | 0;
    $29 = $$0$ph$i$i$i$i + ($28 * 12 | 0) | 0;
    if ((HEAP32[$$0$ph$i$i$i$i + ($28 * 12 | 0) + 4 >> 2] | 0) >>> 0 < $16 >>> 0) {
     $$lcssa52 = $28;
     $$lcssa54 = $29;
     $__len$0$i$i$i$i$lcssa50 = $__len$0$i$i$i$i;
     break;
    }
    $$pre$i$i$i$i$i$i$i$i = HEAP32[$29 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i$i$i) $38 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$17 >> 2] | 0)) $38 = $$pre$i$i$i$i$i$i$i$i; else break L14;
    if ($38 >>> 0 < $17 >>> 0) {
     $$lcssa52 = $28;
     $$lcssa54 = $29;
     $__len$0$i$i$i$i$lcssa50 = $__len$0$i$i$i$i;
     break;
    } else $__len$0$i$i$i$i = $28;
   }
   $$0$ph$i$i$i$i = $$lcssa54 + 12 | 0;
   $__len$0$ph$i$i$i$i = $__len$0$i$i$i$i$lcssa50 + -1 - $$lcssa52 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if (($$0$ph$lcssa7$i$i$i$i | 0) == ($$0$i1 | 0)) {
  $51 = 0;
  return $51 | 0;
 }
 if ($16 >>> 0 < (HEAP32[$$0$ph$lcssa7$i$i$i$i + 4 >> 2] | 0) >>> 0) {
  $51 = 0;
  return $51 | 0;
 }
 $45 = HEAP32[$$0$ph$lcssa7$i$i$i$i >> 2] | 0;
 $46 = ($45 | 0) == 0;
 if ($18 | $46) $50 = $46 ? $17 : 0; else if ((HEAP32[$17 >> 2] | 0) == (HEAP32[$45 >> 2] | 0)) $50 = $17; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 }
 $51 = $50 >>> 0 >= $45 >>> 0;
 return $51 | 0;
}

function __ZNK5Oryol3MapINS_7LocatorEiE9FindIndexERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0 = 0, $$0$i1 = 0, $$0$i3 = 0, $$0$i4 = 0, $$0$i6 = 0, $$0$ph$i$i$i = 0, $$0$ph$lcssa7$i$i$i = 0, $$0$ph$us$i$i$i = 0, $$lcssa = 0, $$lcssa57 = 0, $$lcssa59 = 0, $$pre$i$i$i$i$i$i$i = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $27 = 0, $28 = 0, $3 = 0, $37 = 0, $4 = 0, $49 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa55 = 0, $__len$0$ph$i$i$i = 0, $__len$0$ph$us$i$i$i = 0, $__len$0$us$us$i$i$i = 0, $__len$0$us$us$i$i$i$lcssa54 = 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 444, 114251);
  _abort();
 }
 $3 = HEAP32[$this >> 2] | 0;
 $4 = ($3 | 0) == 0;
 if ($4) {
  $$0$i3 = 0;
  $$0$i6 = 0;
 } else {
  $$0$i3 = $3 + ((HEAP32[$this + 12 >> 2] | 0) * 12 | 0) | 0;
  $$0$i6 = $3 + ((HEAP32[$this + 8 >> 2] | 0) * 12 | 0) | 0;
 }
 $13 = ($$0$i3 - $$0$i6 | 0) / 12 | 0;
 $14 = $key + 4 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $16 = HEAP32[$key >> 2] | 0;
 L7 : do if (!$16) {
  $$0$ph$us$i$i$i = $$0$i6;
  $__len$0$ph$us$i$i$i = $13;
  while (1) {
   $__len$0$us$us$i$i$i = $__len$0$ph$us$i$i$i;
   while (1) {
    if (!$__len$0$us$us$i$i$i) {
     $$0$ph$lcssa7$i$i$i = $$0$ph$us$i$i$i;
     break L7;
    }
    $19 = ($__len$0$us$us$i$i$i | 0) / 2 | 0;
    if ((HEAP32[$$0$ph$us$i$i$i + ($19 * 12 | 0) + 4 >> 2] | 0) >>> 0 < $15 >>> 0) {
     $$lcssa = $19;
     $__len$0$us$us$i$i$i$lcssa54 = $__len$0$us$us$i$i$i;
     break;
    } else $__len$0$us$us$i$i$i = $19;
   }
   $$0$ph$us$i$i$i = $$0$ph$us$i$i$i + ($$lcssa * 12 | 0) + 12 | 0;
   $__len$0$ph$us$i$i$i = $__len$0$us$us$i$i$i$lcssa54 + -1 - $$lcssa | 0;
  }
 } else {
  $$0$ph$i$i$i = $$0$i6;
  $__len$0$ph$i$i$i = $13;
  L14 : while (1) {
   $__len$0$i$i$i = $__len$0$ph$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i) {
     $$0$ph$lcssa7$i$i$i = $$0$ph$i$i$i;
     break L7;
    }
    $27 = ($__len$0$i$i$i | 0) / 2 | 0;
    $28 = $$0$ph$i$i$i + ($27 * 12 | 0) | 0;
    if ((HEAP32[$$0$ph$i$i$i + ($27 * 12 | 0) + 4 >> 2] | 0) >>> 0 < $15 >>> 0) {
     $$lcssa57 = $27;
     $$lcssa59 = $28;
     $__len$0$i$i$i$lcssa55 = $__len$0$i$i$i;
     break;
    }
    $$pre$i$i$i$i$i$i$i = HEAP32[$28 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i$i) $37 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$16 >> 2] | 0)) $37 = $$pre$i$i$i$i$i$i$i; else break L14;
    if ($37 >>> 0 < $16 >>> 0) {
     $$lcssa57 = $27;
     $$lcssa59 = $28;
     $__len$0$i$i$i$lcssa55 = $__len$0$i$i$i;
     break;
    } else $__len$0$i$i$i = $27;
   }
   $$0$ph$i$i$i = $$lcssa59 + 12 | 0;
   $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa55 + -1 - $$lcssa57 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if ($4) $$0$i4 = 0; else $$0$i4 = $3 + ((HEAP32[$this + 12 >> 2] | 0) * 12 | 0) | 0;
 if (($$0$ph$lcssa7$i$i$i | 0) == ($$0$i4 | 0)) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (!(__ZNK5Oryol10StringAtomeqERKS0_($key, $$0$ph$lcssa7$i$i$i) | 0)) {
  $$0 = -1;
  return $$0 | 0;
 }
 if ((HEAP32[$14 >> 2] | 0) != (HEAP32[$$0$ph$lcssa7$i$i$i + 4 >> 2] | 0)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $49 = HEAP32[$this >> 2] | 0;
 if (!$49) $$0$i1 = 0; else $$0$i1 = $49 + ((HEAP32[$this + 8 >> 2] | 0) * 12 | 0) | 0;
 $$0 = ($$0$ph$lcssa7$i$i$i - $$0$i1 | 0) / 12 | 0;
 return $$0 | 0;
}

function __ZN10ImDrawList15ClearFreeMemoryEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $17 = 0, $18 = 0, $22 = 0, $23 = 0, $27 = 0, $28 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $63 = 0, $9 = 0, $i$08 = 0, label = 0;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$this + 4 >> 2] = 0;
  HEAP32[$this >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($1);
  HEAP32[$0 >> 2] = 0;
 }
 $4 = $this + 20 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 | 0) {
  HEAP32[$this + 16 >> 2] = 0;
  HEAP32[$this + 12 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($5);
  HEAP32[$4 >> 2] = 0;
 }
 $9 = $this + 32 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if ($10 | 0) {
  HEAP32[$this + 28 >> 2] = 0;
  HEAP32[$this + 24 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($10);
  HEAP32[$9 >> 2] = 0;
 }
 HEAP32[$this + 40 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this + 48 >> 2] = 0;
 $17 = $this + 60 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if ($18 | 0) {
  HEAP32[$this + 56 >> 2] = 0;
  HEAP32[$this + 52 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($18);
  HEAP32[$17 >> 2] = 0;
 }
 $22 = $this + 72 | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 if ($23 | 0) {
  HEAP32[$this + 68 >> 2] = 0;
  HEAP32[$this + 64 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($23);
  HEAP32[$22 >> 2] = 0;
 }
 $27 = $this + 84 | 0;
 $28 = HEAP32[$27 >> 2] | 0;
 if ($28 | 0) {
  HEAP32[$this + 80 >> 2] = 0;
  HEAP32[$this + 76 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($28);
  HEAP32[$27 >> 2] = 0;
 }
 HEAP32[$this + 88 >> 2] = 0;
 HEAP32[$this + 92 >> 2] = 1;
 $34 = $this + 96 | 0;
 $35 = HEAP32[$34 >> 2] | 0;
 $37 = $this + 104 | 0;
 L19 : do if (($35 | 0) > 0) {
  $43 = $35;
  $i$08 = 0;
  while (1) {
   if (!$i$08) {
    if (($43 | 0) <= 0) {
     label = 20;
     break;
    }
    $44 = HEAP32[$37 >> 2] | 0;
    HEAP32[$44 >> 2] = 0;
    HEAP32[$44 + 4 >> 2] = 0;
    HEAP32[$44 + 8 >> 2] = 0;
    HEAP32[$44 + 12 >> 2] = 0;
    HEAP32[$44 + 16 >> 2] = 0;
    HEAP32[$44 + 20 >> 2] = 0;
    $46 = HEAP32[$34 >> 2] | 0;
   } else $46 = $43;
   if (($46 | 0) <= ($i$08 | 0)) {
    label = 23;
    break;
   }
   $47 = HEAP32[$37 >> 2] | 0;
   $48 = $47 + ($i$08 * 24 | 0) + 8 | 0;
   $49 = HEAP32[$48 >> 2] | 0;
   if (!$49) $54 = $46; else {
    HEAP32[$47 + ($i$08 * 24 | 0) + 4 >> 2] = 0;
    HEAP32[$47 + ($i$08 * 24 | 0) >> 2] = 0;
    __ZN5ImGui7MemFreeEPv($49);
    HEAP32[$48 >> 2] = 0;
    $54 = HEAP32[$34 >> 2] | 0;
   }
   if (($54 | 0) <= ($i$08 | 0)) {
    label = 27;
    break;
   }
   $55 = HEAP32[$37 >> 2] | 0;
   $56 = $55 + ($i$08 * 24 | 0) + 20 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   if (!$57) $63 = $54; else {
    HEAP32[$55 + ($i$08 * 24 | 0) + 16 >> 2] = 0;
    HEAP32[$55 + ($i$08 * 24 | 0) + 12 >> 2] = 0;
    __ZN5ImGui7MemFreeEPv($57);
    HEAP32[$56 >> 2] = 0;
    $63 = HEAP32[$34 >> 2] | 0;
   }
   $i$08 = $i$08 + 1 | 0;
   if (($i$08 | 0) >= ($63 | 0)) break L19; else $43 = $63;
  }
  if ((label | 0) == 20) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 23) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 27) ___assert_fail(127217, 127226, 805, 127272);
 } while (0);
 $38 = HEAP32[$37 >> 2] | 0;
 if (!$38) return;
 HEAP32[$this + 100 >> 2] = 0;
 HEAP32[$34 >> 2] = 0;
 __ZN5ImGui7MemFreeEPv($38);
 HEAP32[$37 >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv12emscInputMgr13setupKeyTableEv($this) {
 $this = $this | 0;
 _memset($this + 2136 | 0, 0, 1024) | 0;
 HEAP32[$this + 2168 >> 2] = 54;
 HEAP32[$this + 2172 >> 2] = 53;
 HEAP32[$this + 2188 >> 2] = 52;
 HEAP32[$this + 2200 >> 2] = 112;
 HEAP32[$this + 2204 >> 2] = 113;
 HEAP32[$this + 2208 >> 2] = 114;
 HEAP32[$this + 2212 >> 2] = 69;
 HEAP32[$this + 2244 >> 2] = 51;
 HEAP32[$this + 2264 >> 2] = 1;
 HEAP32[$this + 2268 >> 2] = 61;
 HEAP32[$this + 2272 >> 2] = 62;
 HEAP32[$this + 2276 >> 2] = 64;
 HEAP32[$this + 2280 >> 2] = 63;
 HEAP32[$this + 2284 >> 2] = 58;
 HEAP32[$this + 2288 >> 2] = 60;
 HEAP32[$this + 2292 >> 2] = 57;
 HEAP32[$this + 2296 >> 2] = 59;
 HEAP32[$this + 2316 >> 2] = 55;
 HEAP32[$this + 2320 >> 2] = 56;
 HEAP32[$this + 2328 >> 2] = 7;
 HEAP32[$this + 2332 >> 2] = 8;
 HEAP32[$this + 2336 >> 2] = 9;
 HEAP32[$this + 2340 >> 2] = 10;
 HEAP32[$this + 2344 >> 2] = 11;
 HEAP32[$this + 2348 >> 2] = 12;
 HEAP32[$this + 2352 >> 2] = 13;
 HEAP32[$this + 2356 >> 2] = 14;
 HEAP32[$this + 2360 >> 2] = 15;
 HEAP32[$this + 2364 >> 2] = 16;
 HEAP32[$this + 2372 >> 2] = 17;
 HEAP32[$this + 2392 >> 2] = 18;
 HEAP32[$this + 2396 >> 2] = 19;
 HEAP32[$this + 2400 >> 2] = 20;
 HEAP32[$this + 2404 >> 2] = 21;
 HEAP32[$this + 2408 >> 2] = 22;
 HEAP32[$this + 2412 >> 2] = 23;
 HEAP32[$this + 2416 >> 2] = 24;
 HEAP32[$this + 2420 >> 2] = 25;
 HEAP32[$this + 2424 >> 2] = 26;
 HEAP32[$this + 2428 >> 2] = 27;
 HEAP32[$this + 2432 >> 2] = 28;
 HEAP32[$this + 2436 >> 2] = 29;
 HEAP32[$this + 2440 >> 2] = 30;
 HEAP32[$this + 2444 >> 2] = 31;
 HEAP32[$this + 2448 >> 2] = 32;
 HEAP32[$this + 2452 >> 2] = 33;
 HEAP32[$this + 2456 >> 2] = 34;
 HEAP32[$this + 2460 >> 2] = 35;
 HEAP32[$this + 2464 >> 2] = 36;
 HEAP32[$this + 2468 >> 2] = 37;
 HEAP32[$this + 2472 >> 2] = 38;
 HEAP32[$this + 2476 >> 2] = 39;
 HEAP32[$this + 2480 >> 2] = 40;
 HEAP32[$this + 2484 >> 2] = 41;
 HEAP32[$this + 2488 >> 2] = 42;
 HEAP32[$this + 2492 >> 2] = 43;
 HEAP32[$this + 2496 >> 2] = 44;
 HEAP32[$this + 2508 >> 2] = 120;
 HEAP32[$this + 2520 >> 2] = 95;
 HEAP32[$this + 2524 >> 2] = 96;
 HEAP32[$this + 2528 >> 2] = 97;
 HEAP32[$this + 2532 >> 2] = 98;
 HEAP32[$this + 2536 >> 2] = 99;
 HEAP32[$this + 2540 >> 2] = 100;
 HEAP32[$this + 2544 >> 2] = 101;
 HEAP32[$this + 2548 >> 2] = 102;
 HEAP32[$this + 2552 >> 2] = 103;
 HEAP32[$this + 2556 >> 2] = 104;
 HEAP32[$this + 2560 >> 2] = 107;
 HEAP32[$this + 2564 >> 2] = 109;
 HEAP32[$this + 2572 >> 2] = 108;
 HEAP32[$this + 2576 >> 2] = 105;
 HEAP32[$this + 2580 >> 2] = 106;
 HEAP32[$this + 2584 >> 2] = 70;
 HEAP32[$this + 2588 >> 2] = 71;
 HEAP32[$this + 2592 >> 2] = 72;
 HEAP32[$this + 2596 >> 2] = 73;
 HEAP32[$this + 2600 >> 2] = 74;
 HEAP32[$this + 2604 >> 2] = 75;
 HEAP32[$this + 2608 >> 2] = 76;
 HEAP32[$this + 2612 >> 2] = 77;
 HEAP32[$this + 2616 >> 2] = 78;
 HEAP32[$this + 2620 >> 2] = 79;
 HEAP32[$this + 2624 >> 2] = 80;
 HEAP32[$this + 2628 >> 2] = 81;
 HEAP32[$this + 2712 >> 2] = 67;
 HEAP32[$this + 2716 >> 2] = 66;
 HEAP32[$this + 2828 >> 2] = 4;
 HEAP32[$this + 2888 >> 2] = 3;
 HEAP32[$this + 2896 >> 2] = 5;
 HEAP32[$this + 2900 >> 2] = 6;
 HEAP32[$this + 2904 >> 2] = 48;
 HEAP32[$this + 3012 >> 2] = 45;
 HEAP32[$this + 3016 >> 2] = 46;
 HEAP32[$this + 3020 >> 2] = 47;
 HEAP32[$this + 3024 >> 2] = 2;
 HEAP32[$this + 3032 >> 2] = 115;
 return;
}

function _scanexp($f, $pok) {
 $f = $f | 0;
 $pok = $pok | 0;
 var $$lcssa22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $20 = 0, $35 = 0, $36 = 0, $48 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $78 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $98 = 0, $99 = 0, $c$0 = 0, $c$1$be = 0, $c$1$be$lcssa = 0, $c$112 = 0, $c$2$be = 0, $c$2$lcssa = 0, $c$27 = 0, $c$3$be = 0, $neg$0 = 0, $x$013 = 0;
 $0 = $f + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $f + 100 | 0;
 if ($1 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
  HEAP32[$0 >> 2] = $1 + 1;
  $10 = HEAPU8[$1 >> 0] | 0;
 } else $10 = ___shgetc($f) | 0;
 switch ($10 | 0) {
 case 43:
 case 45:
  {
   $11 = ($10 | 0) == 45 & 1;
   $12 = HEAP32[$0 >> 2] | 0;
   if ($12 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $12 + 1;
    $20 = HEAPU8[$12 >> 0] | 0;
   } else $20 = ___shgetc($f) | 0;
   if (($pok | 0) != 0 & ($20 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$2 >> 2] | 0)) {
    $c$0 = $20;
    $neg$0 = $11;
   } else {
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
    $c$0 = $20;
    $neg$0 = $11;
   } else {
    $c$0 = $20;
    $neg$0 = $11;
   }
   break;
  }
 default:
  {
   $c$0 = $10;
   $neg$0 = 0;
  }
 }
 if (($c$0 + -48 | 0) >>> 0 > 9) if (!(HEAP32[$2 >> 2] | 0)) {
  $98 = -2147483648;
  $99 = 0;
 } else {
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  $98 = -2147483648;
  $99 = 0;
 } else {
  $c$112 = $c$0;
  $x$013 = 0;
  while (1) {
   $35 = $c$112 + -48 + ($x$013 * 10 | 0) | 0;
   $36 = HEAP32[$0 >> 2] | 0;
   if ($36 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $36 + 1;
    $c$1$be = HEAPU8[$36 >> 0] | 0;
   } else $c$1$be = ___shgetc($f) | 0;
   if (($c$1$be + -48 | 0) >>> 0 < 10 & ($35 | 0) < 214748364) {
    $c$112 = $c$1$be;
    $x$013 = $35;
   } else {
    $$lcssa22 = $35;
    $c$1$be$lcssa = $c$1$be;
    break;
   }
  }
  $48 = (($$lcssa22 | 0) < 0) << 31 >> 31;
  if (($c$1$be$lcssa + -48 | 0) >>> 0 < 10) {
   $53 = $$lcssa22;
   $54 = $48;
   $c$27 = $c$1$be$lcssa;
   while (1) {
    $55 = ___muldi3($53 | 0, $54 | 0, 10, 0) | 0;
    $56 = tempRet0;
    $59 = _i64Add($c$27 | 0, (($c$27 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    $61 = _i64Add($59 | 0, tempRet0 | 0, $55 | 0, $56 | 0) | 0;
    $62 = tempRet0;
    $63 = HEAP32[$0 >> 2] | 0;
    if ($63 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
     HEAP32[$0 >> 2] = $63 + 1;
     $c$2$be = HEAPU8[$63 >> 0] | 0;
    } else $c$2$be = ___shgetc($f) | 0;
    if (($c$2$be + -48 | 0) >>> 0 < 10 & (($62 | 0) < 21474836 | ($62 | 0) == 21474836 & $61 >>> 0 < 2061584302)) {
     $53 = $61;
     $54 = $62;
     $c$27 = $c$2$be;
    } else {
     $92 = $61;
     $93 = $62;
     $c$2$lcssa = $c$2$be;
     break;
    }
   }
  } else {
   $92 = $$lcssa22;
   $93 = $48;
   $c$2$lcssa = $c$1$be$lcssa;
  }
  if (($c$2$lcssa + -48 | 0) >>> 0 < 10) do {
   $78 = HEAP32[$0 >> 2] | 0;
   if ($78 >>> 0 < (HEAP32[$2 >> 2] | 0) >>> 0) {
    HEAP32[$0 >> 2] = $78 + 1;
    $c$3$be = HEAPU8[$78 >> 0] | 0;
   } else $c$3$be = ___shgetc($f) | 0;
  } while (($c$3$be + -48 | 0) >>> 0 < 10);
  if (HEAP32[$2 >> 2] | 0) HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  $91 = ($neg$0 | 0) != 0;
  $94 = _i64Subtract(0, 0, $92 | 0, $93 | 0) | 0;
  $98 = $91 ? tempRet0 : $93;
  $99 = $91 ? $94 : $92;
 }
 tempRet0 = $98;
 return $99 | 0;
}

function __ZN5Oryol5_priv17glPipelineFactory18glSetupVertexAttrsERNS0_8pipelineE($this, $pip) {
 $this = $this | 0;
 $pip = $pip | 0;
 var $$sink = 0, $$sroa$0 = 0, $0 = 0, $1 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $29 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $attrIndex$08 = 0, $compIndex$04 = 0, $layoutIndex$05 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$sroa$0 = sp;
 $attrIndex$08 = 0;
 do {
  $0 = $pip + 348 + ($attrIndex$08 << 4) | 0;
  HEAP32[$$sroa$0 >> 2] = 0;
  HEAP16[$$sroa$0 + 4 >> 1] = 0;
  HEAP8[$$sroa$0 + 6 >> 0] = 0;
  $1 = $$sroa$0;
  $6 = HEAP32[$1 + 4 >> 2] | 0;
  $7 = $0;
  HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$7 + 4 >> 2] = $6;
  HEAP32[$pip + 348 + ($attrIndex$08 << 4) + 8 >> 2] = 0;
  HEAP32[$pip + 348 + ($attrIndex$08 << 4) + 12 >> 2] = 0;
  HEAP8[$0 >> 0] = $attrIndex$08;
  $attrIndex$08 = $attrIndex$08 + 1 | 0;
 } while (($attrIndex$08 | 0) < 16);
 $layoutIndex$05 = 0;
 L3 : while (1) {
  $17 = HEAP8[$pip + 58 + ($layoutIndex$05 * 68 | 0) + 66 >> 0] | 0;
  $18 = $17 << 24 >> 24;
  if ($17 << 24 >> 24 > 0) {
   $20 = $layoutIndex$05 & 255;
   $21 = $pip + 58 + ($layoutIndex$05 * 68 | 0) | 0;
   $22 = $pip + 58 + ($layoutIndex$05 * 68 | 0) + 67 | 0;
   $23 = $pip + 58 + ($layoutIndex$05 * 68 | 0) + 1 | 0;
   $compIndex$04 = 0;
   do {
    if ($compIndex$04 >>> 0 >= 16) {
     label = 7;
     break L3;
    }
    $25 = $pip + 58 + ($layoutIndex$05 * 68 | 0) + 2 + ($compIndex$04 << 1) + 1 | 0;
    if ((HEAPU8[$25 >> 0] | 0) >= 12) {
     label = 9;
     break L3;
    }
    $29 = HEAP8[$pip + 58 + ($layoutIndex$05 * 68 | 0) + 2 + ($compIndex$04 << 1) >> 0] | 0;
    if (($29 & 255) >= 16) {
     label = 11;
     break L3;
    }
    $31 = $29 & 255;
    $32 = $pip + 348 + ($31 << 4) + 1 | 0;
    if (HEAP8[$32 >> 0] | 0) {
     label = 13;
     break L3;
    }
    HEAP8[$32 >> 0] = 1;
    HEAP8[$pip + 348 + ($31 << 4) + 2 >> 0] = $20;
    if (!(HEAP8[$21 >> 0] | 0)) $$sink = 0; else $$sink = HEAP8[$23 >> 0] | 0;
    HEAP8[$pip + 348 + ($31 << 4) + 3 >> 0] = $$sink;
    HEAP8[$pip + 348 + ($31 << 4) + 4 >> 0] = HEAP8[$22 >> 0] | 0;
    HEAP32[$pip + 348 + ($31 << 4) + 8 >> 2] = HEAPU8[$pip + 58 + ($layoutIndex$05 * 68 | 0) + 34 + $compIndex$04 >> 0];
    HEAP8[$pip + 348 + ($31 << 4) + 5 >> 0] = HEAP32[12872 + ((HEAPU8[$25 >> 0] | 0) * 12 | 0) >> 2];
    HEAP32[$pip + 348 + ($31 << 4) + 12 >> 2] = HEAP32[12872 + ((HEAPU8[$25 >> 0] | 0) * 12 | 0) + 4 >> 2];
    HEAP8[$pip + 348 + ($31 << 4) + 6 >> 0] = HEAP8[12872 + ((HEAPU8[$25 >> 0] | 0) * 12 | 0) + 8 >> 0] | 0;
    $compIndex$04 = $compIndex$04 + 1 | 0;
   } while (($compIndex$04 | 0) < ($18 | 0));
  }
  $layoutIndex$05 = $layoutIndex$05 + 1 | 0;
  if (($layoutIndex$05 | 0) >= 4) {
   label = 3;
   break;
  }
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 7) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 62948);
  _abort();
 } else if ((label | 0) == 9) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(63089, 0, 62779, 70, 63134);
  _abort();
 } else if ((label | 0) == 11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 63217);
  _abort();
 } else if ((label | 0) == 13) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(63338, 0, 62779, 72, 63134);
  _abort();
 }
}

function __ZN13CommandWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $1 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $36 = 0, $43 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $6 = 0, $i$01 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $0 = sp + 24 | 0;
 $1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 HEAPF32[$0 >> 2] = 200.0;
 HEAPF32[$0 + 4 >> 2] = 250.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 2);
 $6 = $this + 8 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $6, 128) | 0)) {
  __ZN5ImGui3EndEv();
  $57 = HEAP8[$6 >> 0] | 0;
  $58 = $57 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $58 | 0;
 }
 __ZN14HexInputWidget4DrawEv($this + 20 | 0) | 0;
 __ZN5ImGui8SameLineEff(0.0, -1.0);
 HEAPF32[$1 >> 2] = 0.0;
 HEAPF32[$1 + 4 >> 2] = 0.0;
 if (__ZN5ImGui6ButtonEPKcRK6ImVec2(37185, $1) | 0) __ZN13CommandWindow4scanERKN4yakc4kc85Eh($this, $kc, HEAP16[$this + 30 >> 1] & 255);
 $14 = $this + 48 | 0;
 $16 = $this + 44 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if ((HEAP32[$14 >> 2] | 0) <= ($17 | 0)) {
  __ZN5ImGui3EndEv();
  $57 = HEAP8[$6 >> 0] | 0;
  $58 = $57 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $58 | 0;
 }
 $19 = $this + 36 | 0;
 $20 = $kc + 725484 | 0;
 $21 = $kc + 725488 | 0;
 $22 = $2 + 4 | 0;
 $23 = $kc + 725486 | 0;
 $27 = $17;
 $i$01 = 0;
 while (1) {
  $24 = HEAP32[$19 >> 2] | 0;
  if (!$24) {
   label = 7;
   break;
  }
  $26 = $27 + $i$01 | 0;
  $28 = $24 + ($26 * 12 | 0) + 8 | 0;
  $29 = HEAP16[$28 >> 1] | 0;
  $30 = HEAP32[$20 >> 2] | 0;
  if (!(($30 & 255) << 24 >> 24)) label = 10; else if (($30 >>> 16 & 65535) << 16 >> 16 == $29 << 16 >> 16) label = 12; else label = 10;
  do if ((label | 0) == 10) {
   label = 0;
   $36 = HEAP32[$21 >> 2] | 0;
   if (($36 & 255) << 24 >> 24) if (($36 >>> 16 & 65535) << 16 >> 16 == $29 << 16 >> 16) {
    label = 12;
    break;
   }
   __ZN5ImGui14PushStyleColorEiRK6ImVec4(0, 146624);
  } while (0);
  if ((label | 0) == 12) {
   label = 0;
   __ZN5ImGui14PushStyleColorEiRK6ImVec4(0, 146608);
  }
  __ZN5ImGui6PushIDEi($i$01);
  HEAPF32[$2 >> 2] = 0.0;
  HEAPF32[$22 >> 2] = 0.0;
  do if (__ZN5ImGui6ButtonEPKcRK6ImVec2(37610, $2) | 0) {
   $43 = HEAP16[$28 >> 1] | 0;
   if ((HEAP16[$23 >> 1] | 0) == $43 << 16 >> 16) {
    HEAP8[$20 >> 0] = HEAP8[$20 >> 0] ^ 1;
    break;
   } else {
    HEAP8[$20 >> 0] = 1;
    HEAP16[$23 >> 1] = $43;
    break;
   }
  } while (0);
  __ZN5ImGui5PopIDEv();
  __ZN5ImGui8SameLineEff(0.0, -1.0);
  $49 = HEAPU16[$28 >> 1] | 0;
  $51 = __ZNK5Oryol6String6AsCStrEv($24 + ($26 * 12 | 0) | 0) | 0;
  HEAP32[$vararg_buffer >> 2] = $49;
  HEAP32[$vararg_buffer + 4 >> 2] = $51;
  __ZN5ImGui4TextEPKcz(37614, $vararg_buffer);
  __ZN5ImGui13PopStyleColorEi(1);
  $i$01 = $i$01 + 1 | 0;
  $27 = HEAP32[$16 >> 2] | 0;
  if (($i$01 | 0) >= ((HEAP32[$14 >> 2] | 0) - $27 | 0)) {
   label = 19;
   break;
  }
 }
 if ((label | 0) == 7) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 37511);
  _abort();
 } else if ((label | 0) == 19) {
  __ZN5ImGui3EndEv();
  $57 = HEAP8[$6 >> 0] | 0;
  $58 = $57 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $58 | 0;
 }
 return 0;
}

function __ZN10ImDrawList17AddTriangleFilledERK6ImVec2S2_S2_j($this, $a, $b, $c, $col) {
 $this = $this | 0;
 $a = $a | 0;
 $b = $b | 0;
 $c = $c | 0;
 $col = $col | 0;
 var $1 = 0, $100 = 0, $101 = 0, $104 = 0, $106 = 0, $109 = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $2 = 0, $22 = 0, $23 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $36 = 0, $39 = 0, $44 = 0, $45 = 0, $48 = 0, $54 = 0, $57 = 0, $6 = 0, $62 = 0, $63 = 0, $67 = 0, $70 = 0, $75 = 0, $76 = 0, $79 = 0, $85 = 0, $88 = 0, $93 = 0, $94 = 0;
 if ($col >>> 0 < 16777216) return;
 $1 = $this + 76 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $this + 80 | 0;
 if (($2 | 0) == (HEAP32[$3 >> 2] | 0)) {
  $6 = $2 + 1 | 0;
  if (!$2) $11 = 8; else $11 = (($2 | 0) / 2 | 0) + $2 | 0;
  $12 = ($11 | 0) > ($6 | 0) ? $11 : $6;
  if (($2 | 0) < ($12 | 0)) {
   $15 = __ZN5ImGui8MemAllocEj($12 << 3) | 0;
   $16 = $this + 84 | 0;
   _memcpy($15 | 0, HEAP32[$16 >> 2] | 0, HEAP32[$1 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$16 >> 2] | 0);
   HEAP32[$16 >> 2] = $15;
   HEAP32[$3 >> 2] = $12;
   $22 = HEAP32[$1 >> 2] | 0;
  } else $22 = $2;
 } else $22 = $2;
 HEAP32[$1 >> 2] = $22 + 1;
 $23 = $this + 84 | 0;
 $26 = $a;
 $31 = HEAP32[$26 + 4 >> 2] | 0;
 $32 = (HEAP32[$23 >> 2] | 0) + ($22 << 3) | 0;
 HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
 HEAP32[$32 + 4 >> 2] = $31;
 $36 = HEAP32[$1 >> 2] | 0;
 if (($36 | 0) == (HEAP32[$3 >> 2] | 0)) {
  $39 = $36 + 1 | 0;
  if (!$36) $44 = 8; else $44 = (($36 | 0) / 2 | 0) + $36 | 0;
  $45 = ($44 | 0) > ($39 | 0) ? $44 : $39;
  if (($36 | 0) < ($45 | 0)) {
   $48 = __ZN5ImGui8MemAllocEj($45 << 3) | 0;
   _memcpy($48 | 0, HEAP32[$23 >> 2] | 0, HEAP32[$1 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$23 >> 2] | 0);
   HEAP32[$23 >> 2] = $48;
   HEAP32[$3 >> 2] = $45;
   $54 = HEAP32[$1 >> 2] | 0;
  } else $54 = $36;
 } else $54 = $36;
 HEAP32[$1 >> 2] = $54 + 1;
 $57 = $b;
 $62 = HEAP32[$57 + 4 >> 2] | 0;
 $63 = (HEAP32[$23 >> 2] | 0) + ($54 << 3) | 0;
 HEAP32[$63 >> 2] = HEAP32[$57 >> 2];
 HEAP32[$63 + 4 >> 2] = $62;
 $67 = HEAP32[$1 >> 2] | 0;
 if (($67 | 0) == (HEAP32[$3 >> 2] | 0)) {
  $70 = $67 + 1 | 0;
  if (!$67) $75 = 8; else $75 = (($67 | 0) / 2 | 0) + $67 | 0;
  $76 = ($75 | 0) > ($70 | 0) ? $75 : $70;
  if (($67 | 0) < ($76 | 0)) {
   $79 = __ZN5ImGui8MemAllocEj($76 << 3) | 0;
   _memcpy($79 | 0, HEAP32[$23 >> 2] | 0, HEAP32[$1 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$23 >> 2] | 0);
   HEAP32[$23 >> 2] = $79;
   HEAP32[$3 >> 2] = $76;
   $85 = HEAP32[$1 >> 2] | 0;
  } else $85 = $67;
 } else $85 = $67;
 HEAP32[$1 >> 2] = $85 + 1;
 $88 = $c;
 $93 = HEAP32[$88 + 4 >> 2] | 0;
 $94 = (HEAP32[$23 >> 2] | 0) + ($85 << 3) | 0;
 HEAP32[$94 >> 2] = HEAP32[$88 >> 2];
 HEAP32[$94 + 4 >> 2] = $93;
 __ZN10ImDrawList19AddConvexPolyFilledEPK6ImVec2ijb($this, HEAP32[$23 >> 2] | 0, HEAP32[$1 >> 2] | 0, $col, 1);
 $100 = $this + 76 | 0;
 $101 = HEAP32[$3 >> 2] | 0;
 if (($101 | 0) < 0) {
  $104 = (($101 | 0) / 2 | 0) + $101 | 0;
  $106 = ($104 | 0) > 0 ? $104 : 0;
  if (($101 | 0) < ($106 | 0)) {
   $109 = __ZN5ImGui8MemAllocEj($106 << 3) | 0;
   _memcpy($109 | 0, HEAP32[$23 >> 2] | 0, HEAP32[$100 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$23 >> 2] | 0);
   HEAP32[$23 >> 2] = $109;
   HEAP32[$3 >> 2] = $106;
  }
 }
 HEAP32[$100 >> 2] = 0;
 return;
}

function __ZN5ImGui14EndMainMenuBarEv() {
 var $$0$i$ph$i = 0, $$0$i$ph$i$1 = 0, $$0$i1$ph$i = 0, $$0$i1$ph$i$1 = 0, $$pre$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $26 = 0, $27 = 0, $3 = 0, $31 = 0, $35 = 0, $36 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $5 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 __ZN5ImGui10EndMenuBarEv();
 __ZN5ImGui3EndEv();
 $0 = 152892;
 $1 = 152900;
 $$pre$i = HEAP32[$0 >> 2] | 0;
 $2 = 151940;
 $3 = 151948;
 $4 = 151968;
 $5 = 151980;
 $6 = 151988;
 $7 = 151936;
 $8 = 151956;
 $9 = 151964;
 $10 = 151976;
 $11 = 152008;
 $12 = 152024;
 if (($$pre$i | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $14 = $$pre$i + -1 | 0;
 $15 = HEAP32[$1 >> 2] | 0;
 switch (HEAP32[$15 + ($14 * 12 | 0) >> 2] | 0) {
 case 0:
  {
   $$0$i$ph$i = $7;
   label = 9;
   break;
  }
 case 2:
  {
   $$0$i$ph$i = $8;
   label = 9;
   break;
  }
 case 4:
  {
   $$0$i$ph$i = $9;
   label = 9;
   break;
  }
 case 6:
  {
   $$0$i$ph$i = $10;
   label = 9;
   break;
  }
 case 9:
  {
   $$0$i$ph$i = $11;
   label = 9;
   break;
  }
 case 10:
  {
   $$0$i$ph$i = $12;
   label = 9;
   break;
  }
 case 1:
  {
   $$0$i1$ph$i = $2;
   label = 14;
   break;
  }
 case 3:
  {
   $$0$i1$ph$i = $3;
   label = 14;
   break;
  }
 case 5:
  {
   $$0$i1$ph$i = $4;
   label = 14;
   break;
  }
 case 7:
  {
   $$0$i1$ph$i = $5;
   label = 14;
   break;
  }
 case 8:
  {
   $$0$i1$ph$i = $6;
   label = 14;
   break;
  }
 default:
  {}
 }
 if ((label | 0) == 9) HEAP32[$$0$i$ph$i >> 2] = HEAP32[$15 + ($14 * 12 | 0) + 4 >> 2]; else if ((label | 0) == 14) {
  $21 = $15 + ($14 * 12 | 0) + 4 | 0;
  $26 = HEAP32[$21 + 4 >> 2] | 0;
  $27 = $$0$i1$ph$i;
  HEAP32[$27 >> 2] = HEAP32[$21 >> 2];
  HEAP32[$27 + 4 >> 2] = $26;
 }
 $31 = HEAP32[$0 >> 2] | 0;
 if (($31 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 HEAP32[$0 >> 2] = $31 + -1;
 if (($31 | 0) <= 1) ___assert_fail(127436, 127226, 815, 127445);
 $35 = $31 + -2 | 0;
 $36 = HEAP32[$1 >> 2] | 0;
 switch (HEAP32[$36 + ($35 * 12 | 0) >> 2] | 0) {
 case 0:
  {
   $$0$i$ph$i$1 = $7;
   label = 29;
   break;
  }
 case 2:
  {
   $$0$i$ph$i$1 = $8;
   label = 29;
   break;
  }
 case 4:
  {
   $$0$i$ph$i$1 = $9;
   label = 29;
   break;
  }
 case 6:
  {
   $$0$i$ph$i$1 = $10;
   label = 29;
   break;
  }
 case 9:
  {
   $$0$i$ph$i$1 = $11;
   label = 29;
   break;
  }
 case 10:
  {
   $$0$i$ph$i$1 = $12;
   label = 29;
   break;
  }
 case 1:
  {
   $$0$i1$ph$i$1 = $2;
   label = 23;
   break;
  }
 case 3:
  {
   $$0$i1$ph$i$1 = $3;
   label = 23;
   break;
  }
 case 5:
  {
   $$0$i1$ph$i$1 = $4;
   label = 23;
   break;
  }
 case 7:
  {
   $$0$i1$ph$i$1 = $5;
   label = 23;
   break;
  }
 case 8:
  {
   $$0$i1$ph$i$1 = $6;
   label = 23;
   break;
  }
 default:
  {}
 }
 if ((label | 0) == 23) {
  $40 = $36 + ($35 * 12 | 0) + 4 | 0;
  $45 = HEAP32[$40 + 4 >> 2] | 0;
  $46 = $$0$i1$ph$i$1;
  HEAP32[$46 >> 2] = HEAP32[$40 >> 2];
  HEAP32[$46 + 4 >> 2] = $45;
 } else if ((label | 0) == 29) HEAP32[$$0$i$ph$i$1 >> 2] = HEAP32[$36 + ($35 * 12 | 0) + 4 >> 2];
 $52 = HEAP32[$0 >> 2] | 0;
 if (($52 | 0) > 0) {
  HEAP32[$0 >> 2] = $52 + -1;
  return;
 } else ___assert_fail(127436, 127226, 833, 125180);
}

function __ZN5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE5EraseERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$i4 = 0, $$0$i6 = 0, $$0$ph$i$i$i = 0, $$0$ph$lcssa6$i$i$i = 0, $$lcssa41 = 0, $$lcssa42 = 0, $$pre$i$i$i$i$i$i = 0, $$pre20 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $24 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $44 = 0, $46 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa40 = 0, $__len$0$ph$i$i$i = 0, $__len$0$us$us$i7$i$i = 0, label = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = ($0 | 0) == 0;
 if ($1) {
  $$0$i1 = 0;
  $$0$i6 = 0;
 } else {
  $$0$i1 = $0 + (HEAP32[$this + 12 >> 2] << 3) | 0;
  $$0$i6 = $0 + (HEAP32[$this + 8 >> 2] << 3) | 0;
 }
 $10 = $$0$i1 - $$0$i6 >> 3;
 $11 = HEAP32[$key >> 2] | 0;
 L4 : do if (!$11) if (!$10) $$0$ph$lcssa6$i$i$i = $$0$i6; else {
  $__len$0$us$us$i7$i$i = $10;
  while (1) if (($__len$0$us$us$i7$i$i + 1 | 0) >>> 0 < 3) {
   $$0$ph$lcssa6$i$i$i = $$0$i6;
   break;
  } else $__len$0$us$us$i7$i$i = ($__len$0$us$us$i7$i$i | 0) / 2 | 0;
 } else {
  $$0$ph$i$i$i = $$0$i6;
  $__len$0$ph$i$i$i = $10;
  L8 : while (1) {
   $__len$0$i$i$i = $__len$0$ph$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i) {
     $$0$ph$lcssa6$i$i$i = $$0$ph$i$i$i;
     break L4;
    }
    $17 = ($__len$0$i$i$i | 0) / 2 | 0;
    $18 = $$0$ph$i$i$i + ($17 << 3) | 0;
    $$pre$i$i$i$i$i$i = HEAP32[$18 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i) $24 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$11 >> 2] | 0)) $24 = $$pre$i$i$i$i$i$i; else break L8;
    if ($24 >>> 0 < $11 >>> 0) {
     $$lcssa41 = $17;
     $$lcssa42 = $18;
     $__len$0$i$i$i$lcssa40 = $__len$0$i$i$i;
     break;
    } else $__len$0$i$i$i = $17;
   }
   $$0$ph$i$i$i = $$lcssa42 + 8 | 0;
   $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa40 + -1 - $$lcssa41 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if ($1) $$0$i2 = 0; else $$0$i2 = $0 + (HEAP32[$this + 12 >> 2] << 3) | 0;
 if (($$0$ph$lcssa6$i$i$i | 0) == ($$0$i2 | 0)) return;
 $$pre20 = $this + 8 | 0;
 if ($1) $$0$i4 = 0; else $$0$i4 = $0 + (HEAP32[$$pre20 >> 2] << 3) | 0;
 $34 = $$0$ph$lcssa6$i$i$i - $$0$i4 | 0;
 $35 = $34 >> 3;
 $36 = $this + 12 | 0;
 $38 = HEAP32[$$pre20 >> 2] | 0;
 if (($35 | 0) >= ((HEAP32[$36 >> 2] | 0) - $38 | 0)) return;
 if (($34 | 0) <= -8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 109200);
  _abort();
 }
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 109200);
  _abort();
 } else {
  $44 = $38;
  $46 = $0;
 }
 while (1) {
  if (!(__ZNK5Oryol10StringAtomeqERKS0_($46 + ($44 + $35 << 3) | 0, $key) | 0)) {
   label = 26;
   break;
  }
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE5eraseEi($this, $35);
  $44 = HEAP32[$$pre20 >> 2] | 0;
  if (($35 | 0) >= ((HEAP32[$36 >> 2] | 0) - $44 | 0)) {
   label = 26;
   break;
  }
  $46 = HEAP32[$this >> 2] | 0;
  if (!$46) {
   label = 22;
   break;
  }
 }
 if ((label | 0) == 22) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 109200);
  _abort();
 } else if ((label | 0) == 26) return;
}

function __ZL18PushColumnClipRecti() {
 var $$01$i1 = 0, $$1$i = 0.0, $$1$i4 = 0.0, $0 = 0, $15 = 0.0, $2 = 0, $24 = 0.0, $33 = 0.0, $37 = 0, $40 = 0, $41 = 0, $47 = 0.0, $5 = 0, $56 = 0.0, $6 = 0, $65 = 0.0, $66 = 0.0, $68 = 0, $69 = 0, $7 = 0.0, $70 = 0.0, $72 = 0, $73 = 0.0, $76 = 0, $77 = 0.0, $79 = 0, $80 = 0.0, $83 = 0.0, $84 = 0.0, $85 = 0.0, $87 = 0.0, $9 = 0, $91 = 0, $cr$sroa$0$0$i$v = 0.0, $cr$sroa$15$0$i$v = 0.0, $cr$sroa$9$0$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $2 = HEAP32[38201] | 0;
 HEAP8[$2 + 114 >> 0] = 1;
 $5 = HEAP32[$2 + 376 >> 2] | 0;
 $6 = $2 + 20 | 0;
 $7 = +HEAPF32[$6 >> 2];
 $9 = HEAP32[38211] | 0;
 if (!$9) label = 4; else if (($9 | 0) == ((HEAP32[$2 + 408 >> 2] | 0) + $5 | 0)) {
  $15 = +__ZL22GetDraggedColumnOffseti($5);
  $$1$i = $15;
  $37 = HEAP32[38201] | 0;
  $40 = 146892;
  $65 = +HEAPF32[$6 >> 2];
 } else label = 4;
 do if ((label | 0) == 4) if (($5 | 0) < (HEAP32[$2 + 412 >> 2] | 0)) {
  $24 = +HEAPF32[$2 + 384 >> 2];
  $$1$i = +(~~($24 + +HEAPF32[(HEAP32[$2 + 420 >> 2] | 0) + ($5 << 2) >> 2] * (+HEAPF32[$2 + 388 >> 2] - $24)) | 0);
  $37 = $2;
  $40 = 146892;
  $65 = $7;
  break;
 } else ___assert_fail(124599, 124187, 8883, 124642); while (0);
 $33 = $7 + $$1$i + -1.0;
 if (($5 | 0) < -1) $$01$i1 = HEAP32[$37 + 376 >> 2] | 0; else $$01$i1 = $5 + 1 | 0;
 $41 = HEAP32[$40 + 5952 >> 2] | 0;
 if (!$41) label = 12; else if (($41 | 0) == ((HEAP32[$37 + 408 >> 2] | 0) + $$01$i1 | 0)) {
  $47 = +__ZL22GetDraggedColumnOffseti($$01$i1);
  $$1$i4 = $47;
  $68 = HEAP32[38201] | 0;
 } else label = 12;
 do if ((label | 0) == 12) if (($$01$i1 | 0) < (HEAP32[$37 + 412 >> 2] | 0)) {
  $56 = +HEAPF32[$37 + 384 >> 2];
  $$1$i4 = +(~~($56 + +HEAPF32[(HEAP32[$37 + 420 >> 2] | 0) + ($$01$i1 << 2) >> 2] * (+HEAPF32[$37 + 388 >> 2] - $56)) | 0);
  $68 = $37;
  break;
 } else ___assert_fail(124599, 124187, 8883, 124642); while (0);
 $66 = $65 + $$1$i4 + -1.0;
 HEAP8[$68 + 114 >> 0] = 1;
 $69 = $68 + 436 | 0;
 $70 = +HEAPF32[$69 >> 2];
 $cr$sroa$0$0$i$v = $33 < $70 ? $70 : $33;
 $72 = $68 + 440 | 0;
 $73 = +HEAPF32[$72 >> 2];
 $cr$sroa$9$0$i = $73 > -3402823466385288598117041.0e14 ? (HEAPF32[tempDoublePtr >> 2] = $73, HEAP32[tempDoublePtr >> 2] | 0) : -8388609;
 $76 = $68 + 444 | 0;
 $77 = +HEAPF32[$76 >> 2];
 $cr$sroa$15$0$i$v = $66 > $77 ? $77 : $66;
 $79 = $68 + 448 | 0;
 $80 = +HEAPF32[$79 >> 2];
 $83 = $cr$sroa$0$0$i$v >= $cr$sroa$15$0$i$v ? $cr$sroa$0$0$i$v : $cr$sroa$15$0$i$v;
 $84 = (HEAP32[tempDoublePtr >> 2] = $cr$sroa$9$0$i, +HEAPF32[tempDoublePtr >> 2]);
 $85 = $80 < 3402823466385288598117041.0e14 ? $80 : 3402823466385288598117041.0e14;
 $87 = $84 >= $85 ? $84 : $85;
 if (!($cr$sroa$0$0$i$v <= $83) | !($84 <= $87)) ___assert_fail(124844, 124187, 2338, 124889); else {
  HEAPF32[$69 >> 2] = $cr$sroa$0$0$i$v;
  HEAP32[$72 >> 2] = $cr$sroa$9$0$i;
  HEAPF32[$76 >> 2] = $83;
  HEAPF32[$79 >> 2] = $87;
  $91 = HEAP32[$68 + 572 >> 2] | 0;
  HEAPF32[$0 >> 2] = $cr$sroa$0$0$i$v;
  HEAP32[$0 + 4 >> 2] = $cr$sroa$9$0$i;
  HEAPF32[$0 + 8 >> 2] = $83;
  HEAPF32[$0 + 12 >> 2] = $87;
  __ZN10ImDrawList12PushClipRectERK6ImVec4($91, $0);
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol7RunLoop12addCallbacksEv($this) {
 $this = $this | 0;
 var $$pre = 0, $$pre$phi4$i$iZ2D = 0, $$pre2$i$i = 0, $$pre2$i$i4 = 0, $$pre2$i$i5 = 0, $$pre2$i$i6 = 0, $$pre2$i$i9 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $22 = 0, $31 = 0, $34 = 0, $35 = 0, $38 = 0, $4 = 0, $50 = 0, $6 = 0, $61 = 0, $7 = 0, $__begin$03 = 0, $i$01$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp;
 $1 = $this + 32 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $$pre2$i$i4 = $this + 40 | 0;
 do if (!$2) $$pre2$i$i6 = $$pre2$i$i4; else {
  $4 = HEAP32[$$pre2$i$i4 >> 2] | 0;
  $6 = HEAP32[$this + 44 >> 2] | 0;
  $7 = $2 + ($6 * 40 | 0) | 0;
  if (($4 | 0) == ($6 | 0)) {
   $$pre2$i$i9 = $this + 40 | 0;
   $61 = $2;
  } else {
   $10 = $this + 4 | 0;
   $11 = $0 + 8 | 0;
   $12 = $0 + 24 | 0;
   $13 = $0 + 32 | 0;
   $__begin$03 = $2 + ($4 * 40 | 0) | 0;
   do {
    $35 = $__begin$03 + 32 | 0;
    HEAP8[$35 >> 0] = 1;
    HEAP32[$0 >> 2] = HEAP32[$__begin$03 >> 2];
    $38 = HEAP32[$__begin$03 + 24 >> 2] | 0;
    do if (!$38) HEAP32[$12 >> 2] = 0; else if (($38 | 0) == ($__begin$03 + 8 | 0)) {
     HEAP32[$12 >> 2] = $11;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$38 >> 2] | 0) + 12 >> 2] & 63]($38, $11);
     break;
    } else {
     HEAP32[$12 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$38 >> 2] | 0) + 8 >> 2] & 63]($38) | 0;
     break;
    } while (0);
    HEAP8[$13 >> 0] = HEAP8[$35 >> 0] | 0;
    __ZN5Oryol3MapIiNS_7RunLoop4itemEE3AddEONS_12KeyValuePairIiS2_EE($10, $0);
    $50 = HEAP32[$12 >> 2] | 0;
    if (($50 | 0) == ($11 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11); else if ($50 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$50 >> 2] | 0) + 20 >> 2] & 255]($50);
    $__begin$03 = $__begin$03 + 40 | 0;
   } while (($__begin$03 | 0) != ($7 | 0));
   $$pre = HEAP32[$1 >> 2] | 0;
   $$pre2$i$i = $this + 40 | 0;
   if (!$$pre) {
    $$pre2$i$i6 = $$pre2$i$i;
    break;
   } else {
    $$pre2$i$i9 = $$pre2$i$i;
    $61 = $$pre;
   }
  }
  $15 = HEAP32[$$pre2$i$i9 >> 2] | 0;
  $16 = $this + 44 | 0;
  if (($15 | 0) < (HEAP32[$16 >> 2] | 0)) {
   $20 = $61;
   $i$01$i$i = $15;
  } else {
   $$pre$phi4$i$iZ2D = $16;
   $$pre2$i$i5 = $$pre2$i$i9;
   $34 = HEAP32[$$pre2$i$i5 >> 2] | 0;
   HEAP32[$$pre$phi4$i$iZ2D >> 2] = $34;
   STACKTOP = sp;
   return;
  }
  while (1) {
   $22 = HEAP32[$20 + ($i$01$i$i * 40 | 0) + 24 >> 2] | 0;
   if (($22 | 0) == ($20 + ($i$01$i$i * 40 | 0) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 16 >> 2] & 255]($22); else if ($22 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 20 >> 2] & 255]($22);
   $31 = $i$01$i$i + 1 | 0;
   if (($31 | 0) >= (HEAP32[$16 >> 2] | 0)) {
    $$pre$phi4$i$iZ2D = $16;
    $$pre2$i$i5 = $$pre2$i$i9;
    break;
   }
   $20 = HEAP32[$1 >> 2] | 0;
   $i$01$i$i = $31;
  }
  $34 = HEAP32[$$pre2$i$i5 >> 2] | 0;
  HEAP32[$$pre$phi4$i$iZ2D >> 2] = $34;
  STACKTOP = sp;
  return;
 } while (0);
 $$pre$phi4$i$iZ2D = $this + 44 | 0;
 $$pre2$i$i5 = $$pre2$i$i6;
 $34 = HEAP32[$$pre2$i$i5 >> 2] | 0;
 HEAP32[$$pre$phi4$i$iZ2D >> 2] = $34;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS0_6shaderEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $19 = 0, $24 = 0, $25 = 0, $31 = 0, $36 = 0, $37 = 0, $4 = 0, $48 = 0, $53 = 0, $54 = 0, $6 = 0, $8 = 0, $84 = 0, $9 = 0, $dst$02 = 0, $i$01$i$i$i = 0, $i$01$i1$i$i = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 49965);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 49965);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 3712 | 0) | 0;
 $13 = $12 + ($newStart * 3712 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 49965);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 3712 | 0) | 0;
  while (1) {
   $19 = $src$01;
   $24 = HEAP32[$19 + 4 >> 2] | 0;
   $25 = $dst$02;
   HEAP32[$25 >> 2] = HEAP32[$19 >> 2];
   HEAP32[$25 + 4 >> 2] = $24;
   $31 = $src$01 + 8 | 0;
   $36 = HEAP32[$31 + 4 >> 2] | 0;
   $37 = $dst$02 + 8 | 0;
   HEAP32[$37 >> 2] = HEAP32[$31 >> 2];
   HEAP32[$37 + 4 >> 2] = $36;
   __ZN5Oryol10StringAtom4copyERKS0_($dst$02 + 16 | 0, $src$01 + 16 | 0);
   HEAP32[$dst$02 + 20 >> 2] = HEAP32[$src$01 + 20 >> 2];
   $48 = $src$01 + 24 | 0;
   $53 = HEAP32[$48 + 4 >> 2] | 0;
   $54 = $dst$02 + 24 | 0;
   HEAP32[$54 >> 2] = HEAP32[$48 >> 2];
   HEAP32[$54 + 4 >> 2] = $53;
   __ZN5Oryol11ShaderSetup12programEntryC2ERKS1_($dst$02 + 32 | 0, $src$01 + 32 | 0);
   HEAP32[$dst$02 + 340 >> 2] = HEAP32[$src$01 + 340 >> 2];
   __ZN5Oryol11StaticArrayINS_11ShaderSetup17uniformBlockEntryELi8EEC2ERKS3_($dst$02 + 344 | 0, $src$01 + 344 | 0);
   HEAP32[$dst$02 + 2648 >> 2] = HEAP32[$src$01 + 2648 >> 2];
   __ZN5Oryol11StaticArrayINS_11ShaderSetup17textureBlockEntryELi2EEC2ERKS3_($dst$02 + 2652 | 0, $src$01 + 2652 | 0);
   HEAP32[$dst$02 + 3064 >> 2] = HEAP32[$src$01 + 3064 >> 2];
   $i$01$i$i$i = 0;
   do {
    HEAP32[$dst$02 + 3068 + ($i$01$i$i$i << 2) >> 2] = HEAP32[$src$01 + 3068 + ($i$01$i$i$i << 2) >> 2];
    $i$01$i$i$i = $i$01$i$i$i + 1 | 0;
   } while (($i$01$i$i$i | 0) != 128);
   $i$01$i1$i$i = 0;
   do {
    HEAP32[$dst$02 + 3580 + ($i$01$i1$i$i << 2) >> 2] = HEAP32[$src$01 + 3580 + ($i$01$i1$i$i << 2) >> 2];
    $i$01$i1$i$i = $i$01$i1$i$i + 1 | 0;
   } while (($i$01$i1$i$i | 0) != 32);
   __ZN5Oryol5_priv8glShaderD2Ev($src$01);
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 3712 | 0;
    $src$01 = $src$01 + 3712 | 0;
   }
  }
 }
 $84 = HEAP32[$this >> 2] | 0;
 if ($84 | 0) __ZN5Oryol6Memory4FreeEPv($84);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function ___stpncpy($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $$0$lcssa = 0, $$0$lcssa42 = 0, $$031 = 0, $$04$lcssa = 0, $$04$lcssa43 = 0, $$0430 = 0, $$06$lcssa = 0, $$06$lcssa44 = 0, $$0629 = 0, $$1$lcssa = 0, $$117 = 0, $$15$ph = 0, $$1511 = 0, $$17$ph = 0, $$1710 = 0, $$2$ph = 0, $$212 = 0, $$28 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $35 = 0, $7 = 0, $8 = 0, $wd$0$lcssa = 0, $wd$018 = 0, $ws$0$lcssa = 0, $ws$019 = 0, label = 0;
 $0 = $s;
 do if (!(($0 ^ $d) & 3)) {
  $7 = ($n | 0) != 0;
  L3 : do if ($7 & ($0 & 3 | 0) != 0) {
   $$031 = $n;
   $$0430 = $s;
   $$0629 = $d;
   while (1) {
    $8 = HEAP8[$$0430 >> 0] | 0;
    HEAP8[$$0629 >> 0] = $8;
    if (!($8 << 24 >> 24)) {
     $$0$lcssa42 = $$031;
     $$04$lcssa43 = $$0430;
     $$06$lcssa44 = $$0629;
     break L3;
    }
    $10 = $$031 + -1 | 0;
    $11 = $$0430 + 1 | 0;
    $12 = $$0629 + 1 | 0;
    $16 = ($10 | 0) != 0;
    if ($16 & ($11 & 3 | 0) != 0) {
     $$031 = $10;
     $$0430 = $11;
     $$0629 = $12;
    } else {
     $$0$lcssa = $10;
     $$04$lcssa = $11;
     $$06$lcssa = $12;
     $$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$0$lcssa = $n;
   $$04$lcssa = $s;
   $$06$lcssa = $d;
   $$lcssa = $7;
   label = 5;
  } while (0);
  if ((label | 0) == 5) if ($$lcssa) {
   $$0$lcssa42 = $$0$lcssa;
   $$04$lcssa43 = $$04$lcssa;
   $$06$lcssa44 = $$06$lcssa;
  } else {
   $$28 = $$06$lcssa;
   $$3 = 0;
   break;
  }
  if (!(HEAP8[$$04$lcssa43 >> 0] | 0)) {
   $$28 = $$06$lcssa44;
   $$3 = $$0$lcssa42;
  } else {
   L11 : do if ($$0$lcssa42 >>> 0 > 3) {
    $$117 = $$0$lcssa42;
    $wd$018 = $$06$lcssa44;
    $ws$019 = $$04$lcssa43;
    while (1) {
     $20 = HEAP32[$ws$019 >> 2] | 0;
     if (($20 & -2139062144 ^ -2139062144) & $20 + -16843009 | 0) {
      $$1$lcssa = $$117;
      $wd$0$lcssa = $wd$018;
      $ws$0$lcssa = $ws$019;
      break L11;
     }
     HEAP32[$wd$018 >> 2] = $20;
     $26 = $$117 + -4 | 0;
     $27 = $ws$019 + 4 | 0;
     $28 = $wd$018 + 4 | 0;
     if ($26 >>> 0 > 3) {
      $$117 = $26;
      $wd$018 = $28;
      $ws$019 = $27;
     } else {
      $$1$lcssa = $26;
      $wd$0$lcssa = $28;
      $ws$0$lcssa = $27;
      break;
     }
    }
   } else {
    $$1$lcssa = $$0$lcssa42;
    $wd$0$lcssa = $$06$lcssa44;
    $ws$0$lcssa = $$04$lcssa43;
   } while (0);
   $$15$ph = $ws$0$lcssa;
   $$17$ph = $wd$0$lcssa;
   $$2$ph = $$1$lcssa;
   label = 11;
  }
 } else {
  $$15$ph = $s;
  $$17$ph = $d;
  $$2$ph = $n;
  label = 11;
 } while (0);
 L16 : do if ((label | 0) == 11) if (!$$2$ph) {
  $$28 = $$17$ph;
  $$3 = 0;
 } else {
  $$1511 = $$15$ph;
  $$1710 = $$17$ph;
  $$212 = $$2$ph;
  while (1) {
   $31 = HEAP8[$$1511 >> 0] | 0;
   HEAP8[$$1710 >> 0] = $31;
   if (!($31 << 24 >> 24)) {
    $$28 = $$1710;
    $$3 = $$212;
    break L16;
   }
   $$212 = $$212 + -1 | 0;
   $35 = $$1710 + 1 | 0;
   if (!$$212) {
    $$28 = $35;
    $$3 = 0;
    break;
   } else {
    $$1511 = $$1511 + 1 | 0;
    $$1710 = $35;
   }
  }
 } while (0);
 _memset($$28 | 0, 0, $$3 | 0) | 0;
 return $$28 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE15moveInsertFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $54 = 0, $55 = 0, $64 = 0, $i$01 = 0, $i$01$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 119486);
  _abort();
 }
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 119486);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 119486);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - $3 | 0) < ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 119486);
  _abort();
 }
 $10 = $3 + -1 | 0;
 HEAP32[$0 + ($10 * 40 | 0) >> 2] = HEAP32[$0 + ($3 * 40 | 0) >> 2];
 $14 = $0 + ($10 * 40 | 0) + 8 | 0;
 $15 = $0 + ($3 * 40 | 0) + 24 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 do if (!$16) {
  HEAP32[$0 + ($10 * 40 | 0) + 24 >> 2] = 0;
  $31 = $3;
 } else if (($16 | 0) == ($0 + ($3 * 40 | 0) + 8 | 0)) {
  HEAP32[$0 + ($10 * 40 | 0) + 24 >> 2] = $14;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$16 >> 2] | 0) + 12 >> 2] & 63]($16, $14);
  $31 = HEAP32[$2 >> 2] | 0;
  break;
 } else {
  HEAP32[$0 + ($10 * 40 | 0) + 24 >> 2] = $16;
  HEAP32[$15 >> 2] = 0;
  $31 = $3;
  break;
 } while (0);
 HEAP8[$0 + ($10 * 40 | 0) + 32 >> 0] = HEAP8[$0 + ($3 * 40 | 0) + 32 >> 0] | 0;
 $29 = $index + -1 | 0;
 if (($31 | 0) < ($29 + $31 | 0)) $i$01 = $31; else {
  $$lcssa = $31;
  $33 = $$lcssa + -1 | 0;
  HEAP32[$2 >> 2] = $33;
  $34 = $33 + $index | 0;
  $35 = HEAP32[$this >> 2] | 0;
  $36 = $35 + ($34 * 40 | 0) | 0;
  return $36 | 0;
 }
 do {
  $37 = HEAP32[$this >> 2] | 0;
  $i$01$looptemp = $i$01;
  $i$01 = $i$01 + 1 | 0;
  HEAP32[$37 + ($i$01$looptemp * 40 | 0) >> 2] = HEAP32[$37 + ($i$01 * 40 | 0) >> 2];
  $42 = $37 + ($i$01$looptemp * 40 | 0) + 8 | 0;
  $43 = $37 + ($i$01 * 40 | 0) + 8 | 0;
  $44 = $37 + ($i$01$looptemp * 40 | 0) + 24 | 0;
  $45 = HEAP32[$44 >> 2] | 0;
  if (($45 | 0) == ($42 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$45 >> 2] | 0) + 16 >> 2] & 255]($45); else if ($45 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$45 >> 2] | 0) + 20 >> 2] & 255]($45);
  HEAP32[$44 >> 2] = 0;
  $54 = $37 + ($i$01 * 40 | 0) + 24 | 0;
  $55 = HEAP32[$54 >> 2] | 0;
  do if (!$55) HEAP32[$44 >> 2] = 0; else if (($55 | 0) == ($43 | 0)) {
   HEAP32[$44 >> 2] = $42;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$55 >> 2] | 0) + 12 >> 2] & 63]($55, $42);
   break;
  } else {
   HEAP32[$44 >> 2] = $55;
   HEAP32[$54 >> 2] = 0;
   break;
  } while (0);
  HEAP8[$37 + ($i$01$looptemp * 40 | 0) + 32 >> 0] = HEAP8[$37 + ($i$01 * 40 | 0) + 32 >> 0] | 0;
  $64 = HEAP32[$2 >> 2] | 0;
 } while (($i$01 | 0) < ($29 + $64 | 0));
 $$lcssa = $64;
 $33 = $$lcssa + -1 | 0;
 HEAP32[$2 >> 2] = $33;
 $34 = $33 + $index | 0;
 $35 = HEAP32[$this >> 2] | 0;
 $36 = $35 + ($34 * 40 | 0) | 0;
 return $36 | 0;
}

function __ZN5Oryol5_priv24gfxResourceContainerBaseC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $12 = 0, $19 = 0, $2 = 0, $22 = 0, $29 = 0, $32 = 0, $39 = 0, $42 = 0, $45 = 0, $9 = 0;
 __ZN5Oryol21resourceContainerBaseC2Ev($this);
 $0 = $this + 116 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 __ZN5Oryol5_priv13glMeshFactoryC2Ev($this + 144 | 0);
 $2 = $this + 176 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP8[$2 + 28 >> 0] = 0;
 __ZN5Oryol5_priv16glTextureFactoryC2Ev($this + 208 | 0);
 __ZN5Oryol5_priv19pipelineFactoryBaseC2Ev($this + 240 | 0);
 HEAP8[$this + 272 >> 0] = 0;
 HEAP32[$this + 276 >> 2] = 0;
 HEAP32[$this + 280 >> 2] = 0;
 HEAP16[$this + 284 >> 1] = 255;
 $9 = $this + 288 | 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP32[$9 + 12 >> 2] = 0;
 HEAP32[$this + 304 >> 2] = 16;
 HEAP32[$this + 308 >> 2] = 65536;
 $12 = $this + 312 | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 HEAP32[$12 + 12 >> 2] = 0;
 HEAP32[$this + 328 >> 2] = 16;
 HEAP32[$this + 332 >> 2] = 65536;
 HEAP8[$this + 336 >> 0] = 0;
 HEAP32[$this + 340 >> 2] = 0;
 HEAP32[$this + 344 >> 2] = 0;
 HEAP16[$this + 348 >> 1] = 255;
 $19 = $this + 352 | 0;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 HEAP32[$19 + 12 >> 2] = 0;
 HEAP32[$this + 368 >> 2] = 16;
 HEAP32[$this + 372 >> 2] = 65536;
 $22 = $this + 376 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 HEAP32[$22 + 12 >> 2] = 0;
 HEAP32[$this + 392 >> 2] = 16;
 HEAP32[$this + 396 >> 2] = 65536;
 HEAP8[$this + 400 >> 0] = 0;
 HEAP32[$this + 404 >> 2] = 0;
 HEAP32[$this + 408 >> 2] = 0;
 HEAP16[$this + 412 >> 1] = 255;
 $29 = $this + 416 | 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$29 + 8 >> 2] = 0;
 HEAP32[$29 + 12 >> 2] = 0;
 HEAP32[$this + 432 >> 2] = 16;
 HEAP32[$this + 436 >> 2] = 65536;
 $32 = $this + 440 | 0;
 HEAP32[$32 >> 2] = 0;
 HEAP32[$32 + 4 >> 2] = 0;
 HEAP32[$32 + 8 >> 2] = 0;
 HEAP32[$32 + 12 >> 2] = 0;
 HEAP32[$this + 456 >> 2] = 16;
 HEAP32[$this + 460 >> 2] = 65536;
 HEAP8[$this + 464 >> 0] = 0;
 HEAP32[$this + 468 >> 2] = 0;
 HEAP32[$this + 472 >> 2] = 0;
 HEAP16[$this + 476 >> 1] = 255;
 $39 = $this + 480 | 0;
 HEAP32[$39 >> 2] = 0;
 HEAP32[$39 + 4 >> 2] = 0;
 HEAP32[$39 + 8 >> 2] = 0;
 HEAP32[$39 + 12 >> 2] = 0;
 HEAP32[$this + 496 >> 2] = 16;
 HEAP32[$this + 500 >> 2] = 65536;
 $42 = $this + 504 | 0;
 HEAP32[$42 >> 2] = 0;
 HEAP32[$42 + 4 >> 2] = 0;
 HEAP32[$42 + 8 >> 2] = 0;
 HEAP32[$42 + 12 >> 2] = 0;
 HEAP32[$this + 520 >> 2] = 16;
 HEAP32[$this + 524 >> 2] = 65536;
 $45 = $this + 528 | 0;
 HEAP32[$45 >> 2] = 0;
 HEAP32[$45 + 4 >> 2] = 0;
 HEAP32[$45 + 8 >> 2] = 0;
 HEAP32[$45 + 12 >> 2] = 0;
 HEAP32[$45 + 16 >> 2] = 0;
 HEAP32[$this + 548 >> 2] = 16;
 HEAP32[$this + 552 >> 2] = 65536;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6AssignERKNS_2IdERKS3_NS_13ResourceState4CodeE($this, $id, $setup, $state) {
 $this = $this | 0;
 $id = $id | 0;
 $setup = $setup | 0;
 $state = $state | 0;
 var $$sink = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $22 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $38 = 0, $39 = 0, $45 = 0, $46 = 0, $47 = 0, $53 = 0, $55 = 0, $60 = 0, $62 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, dest = 0, src = 0, stop = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 169, 53661);
  _abort();
 }
 $3 = HEAPU16[$id >> 1] | 0;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 53525);
  _abort();
 }
 $11 = HEAP32[$this + 16 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 53525);
  _abort();
 }
 $13 = $7 + $3 | 0;
 $14 = $11 + ($13 * 400 | 0) | 0;
 $15 = $11 + ($13 * 400 | 0) + 8 | 0;
 if ((HEAP32[$15 >> 2] | 0) == 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53850, 0, 48917, 172, 53661);
  _abort();
 }
 HEAP32[$15 >> 2] = $state;
 HEAP32[$11 + ($13 * 400 | 0) + 12 >> 2] = HEAP32[$this + 4 >> 2];
 if (($14 | 0) != ($id | 0)) {
  $22 = $id;
  $27 = HEAP32[$22 + 4 >> 2] | 0;
  $28 = $14;
  HEAP32[$28 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$28 + 4 >> 2] = $27;
 }
 $32 = $11 + ($13 * 400 | 0) + 16 | 0;
 $33 = $setup;
 $38 = HEAP32[$33 + 4 >> 2] | 0;
 $39 = $32;
 HEAP32[$39 >> 2] = HEAP32[$33 >> 2];
 HEAP32[$39 + 4 >> 2] = $38;
 __ZN5Oryol12VertexLayoutaSERKS0_($11 + ($13 * 400 | 0) + 24 | 0, $setup + 8 | 0) | 0;
 $45 = $11 + ($13 * 400 | 0) + 92 | 0;
 $46 = $setup + 76 | 0;
 HEAP32[$45 >> 2] = HEAP32[$46 >> 2];
 HEAP32[$45 + 4 >> 2] = HEAP32[$46 + 4 >> 2];
 HEAP32[$45 + 8 >> 2] = HEAP32[$46 + 8 >> 2];
 HEAP8[$45 + 12 >> 0] = HEAP8[$46 + 12 >> 0] | 0;
 $47 = $11 + ($13 * 400 | 0) + 108 | 0;
 if (($32 | 0) == ($setup | 0)) {
  $$sink = HEAP32[$setup + 96 >> 2] | 0;
  $66 = $11 + ($13 * 400 | 0) + 112 | 0;
  HEAP32[$66 >> 2] = $$sink;
  $67 = $11 + ($13 * 400 | 0) + 128 | 0;
  $68 = $setup + 112 | 0;
  dest = $67;
  src = $68;
  stop = dest + 76 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP8[$67 + 76 >> 0] = HEAP8[$68 + 76 >> 0] | 0;
  return $14 | 0;
 } else {
  HEAP32[$47 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($47, $setup + 92 | 0);
  $53 = HEAP32[$setup + 96 >> 2] | 0;
  $55 = $setup + 104 | 0;
  $60 = HEAP32[$55 + 4 >> 2] | 0;
  $62 = $11 + ($13 * 400 | 0) + 120 | 0;
  HEAP32[$62 >> 2] = HEAP32[$55 >> 2];
  HEAP32[$62 + 4 >> 2] = $60;
  $$sink = $53;
  $66 = $11 + ($13 * 400 | 0) + 112 | 0;
  HEAP32[$66 >> 2] = $$sink;
  $67 = $11 + ($13 * 400 | 0) + 128 | 0;
  $68 = $setup + 112 | 0;
  dest = $67;
  src = $68;
  stop = dest + 76 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP8[$67 + 76 >> 0] = HEAP8[$68 + 76 >> 0] | 0;
  return $14 | 0;
 }
 return 0;
}

function __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi($this, $a, $b, $col, $rounding, $rounding_corners) {
 $this = $this | 0;
 $a = $a | 0;
 $b = $b | 0;
 $col = $col | 0;
 $rounding = +$rounding;
 $rounding_corners = $rounding_corners | 0;
 var $103 = 0, $107 = 0, $11 = 0, $13 = 0, $16 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $43 = 0, $50 = 0, $52 = 0, $57 = 0, $58 = 0, $6 = 0, $64 = 0, $68 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $81 = 0, $86 = 0, $87 = 0, $93 = 0, $97 = 0;
 if ($col >>> 0 < 16777216) return;
 if (!($rounding > 0.0)) {
  __ZN10ImDrawList11PrimReserveEii($this, 6, 4);
  $21 = HEAP32[$b >> 2] | 0;
  $23 = HEAP32[$a + 4 >> 2] | 0;
  $24 = HEAP32[$a >> 2] | 0;
  $26 = HEAP32[$b + 4 >> 2] | 0;
  $28 = 152756;
  $30 = HEAP32[$28 >> 2] | 0;
  $33 = HEAP32[$28 + 4 >> 2] | 0;
  $34 = $this + 40 | 0;
  $35 = HEAP32[$34 >> 2] | 0;
  $36 = $35 & 65535;
  $37 = $this + 48 | 0;
  $38 = HEAP32[$37 >> 2] | 0;
  HEAP16[$38 >> 1] = $36;
  HEAP16[$38 + 2 >> 1] = $35 + 1;
  $43 = $35 + 2 & 65535;
  HEAP16[$38 + 4 >> 1] = $43;
  HEAP16[$38 + 6 >> 1] = $36;
  HEAP16[$38 + 8 >> 1] = $43;
  HEAP16[$38 + 10 >> 1] = $35 + 3;
  $50 = $this + 44 | 0;
  $52 = $a;
  $57 = HEAP32[$52 + 4 >> 2] | 0;
  $58 = HEAP32[$50 >> 2] | 0;
  HEAP32[$58 >> 2] = HEAP32[$52 >> 2];
  HEAP32[$58 + 4 >> 2] = $57;
  $64 = (HEAP32[$50 >> 2] | 0) + 8 | 0;
  HEAP32[$64 >> 2] = $30;
  HEAP32[$64 + 4 >> 2] = $33;
  $68 = HEAP32[$50 >> 2] | 0;
  HEAP32[$68 + 16 >> 2] = $col;
  HEAP32[$68 + 20 >> 2] = $21;
  HEAP32[$68 + 24 >> 2] = $23;
  $74 = (HEAP32[$50 >> 2] | 0) + 28 | 0;
  HEAP32[$74 >> 2] = $30;
  HEAP32[$74 + 4 >> 2] = $33;
  $78 = HEAP32[$50 >> 2] | 0;
  HEAP32[$78 + 36 >> 2] = $col;
  $81 = $b;
  $86 = HEAP32[$81 + 4 >> 2] | 0;
  $87 = $78 + 40 | 0;
  HEAP32[$87 >> 2] = HEAP32[$81 >> 2];
  HEAP32[$87 + 4 >> 2] = $86;
  $93 = (HEAP32[$50 >> 2] | 0) + 48 | 0;
  HEAP32[$93 >> 2] = $30;
  HEAP32[$93 + 4 >> 2] = $33;
  $97 = HEAP32[$50 >> 2] | 0;
  HEAP32[$97 + 56 >> 2] = $col;
  HEAP32[$97 + 60 >> 2] = $24;
  HEAP32[$97 + 64 >> 2] = $26;
  $103 = (HEAP32[$50 >> 2] | 0) + 68 | 0;
  HEAP32[$103 >> 2] = $30;
  HEAP32[$103 + 4 >> 2] = $33;
  $107 = HEAP32[$50 >> 2] | 0;
  HEAP32[$107 + 76 >> 2] = $col;
  HEAP32[$50 >> 2] = $107 + 80;
  HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 4;
  HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 12;
  return;
 }
 __ZN10ImDrawList8PathRectERK6ImVec2S2_fi($this, $a, $b, $rounding, $rounding_corners);
 $2 = $this + 84 | 0;
 __ZN10ImDrawList19AddConvexPolyFilledEPK6ImVec2ijb($this, HEAP32[$2 >> 2] | 0, HEAP32[$this + 76 >> 2] | 0, $col, 1);
 $6 = $this + 76 | 0;
 $7 = $this + 80 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($8 | 0) < 0) {
  $11 = (($8 | 0) / 2 | 0) + $8 | 0;
  $13 = ($11 | 0) > 0 ? $11 : 0;
  if (($8 | 0) < ($13 | 0)) {
   $16 = __ZN5ImGui8MemAllocEj($13 << 3) | 0;
   _memcpy($16 | 0, HEAP32[$2 >> 2] | 0, HEAP32[$6 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$2 >> 2] | 0);
   HEAP32[$2 >> 2] = $16;
   HEAP32[$7 >> 2] = $13;
  }
 }
 HEAP32[$6 >> 2] = 0;
 return;
}

function __ZN5Oryol11ShaderSetup12programEntryaSERKS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $101 = 0, $106 = 0, $107 = 0, $113 = 0, $118 = 0, $119 = 0, $125 = 0, $130 = 0, $131 = 0, $137 = 0, $142 = 0, $143 = 0, $149 = 0, $154 = 0, $155 = 0, $41 = 0, $46 = 0, $47 = 0, $53 = 0, $58 = 0, $59 = 0, $65 = 0, $70 = 0, $71 = 0, $77 = 0, $82 = 0, $83 = 0, $89 = 0, $94 = 0, $95 = 0;
 __ZN5Oryol6StringaSERKS0_($this, $0);
 __ZN5Oryol6StringaSERKS0_($this + 8 | 0, $0 + 8 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 16 | 0, $0 + 16 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 24 | 0, $0 + 24 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 32 | 0, $0 + 32 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 40 | 0, $0 + 40 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 48 | 0, $0 + 48 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 56 | 0, $0 + 56 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 64 | 0, $0 + 64 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 72 | 0, $0 + 72 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 80 | 0, $0 + 80 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 88 | 0, $0 + 88 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 96 | 0, $0 + 96 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 104 | 0, $0 + 104 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 112 | 0, $0 + 112 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 120 | 0, $0 + 120 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 128 | 0, $0 + 128 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 136 | 0, $0 + 136 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 144 | 0, $0 + 144 | 0);
 __ZN5Oryol6StringaSERKS0_($this + 152 | 0, $0 + 152 | 0);
 $41 = $0 + 160 | 0;
 $46 = HEAP32[$41 + 4 >> 2] | 0;
 $47 = $this + 160 | 0;
 HEAP32[$47 >> 2] = HEAP32[$41 >> 2];
 HEAP32[$47 + 4 >> 2] = $46;
 $53 = $0 + 168 | 0;
 $58 = HEAP32[$53 + 4 >> 2] | 0;
 $59 = $this + 168 | 0;
 HEAP32[$59 >> 2] = HEAP32[$53 >> 2];
 HEAP32[$59 + 4 >> 2] = $58;
 $65 = $0 + 176 | 0;
 $70 = HEAP32[$65 + 4 >> 2] | 0;
 $71 = $this + 176 | 0;
 HEAP32[$71 >> 2] = HEAP32[$65 >> 2];
 HEAP32[$71 + 4 >> 2] = $70;
 $77 = $0 + 184 | 0;
 $82 = HEAP32[$77 + 4 >> 2] | 0;
 $83 = $this + 184 | 0;
 HEAP32[$83 >> 2] = HEAP32[$77 >> 2];
 HEAP32[$83 + 4 >> 2] = $82;
 $89 = $0 + 192 | 0;
 $94 = HEAP32[$89 + 4 >> 2] | 0;
 $95 = $this + 192 | 0;
 HEAP32[$95 >> 2] = HEAP32[$89 >> 2];
 HEAP32[$95 + 4 >> 2] = $94;
 $101 = $0 + 200 | 0;
 $106 = HEAP32[$101 + 4 >> 2] | 0;
 $107 = $this + 200 | 0;
 HEAP32[$107 >> 2] = HEAP32[$101 >> 2];
 HEAP32[$107 + 4 >> 2] = $106;
 $113 = $0 + 208 | 0;
 $118 = HEAP32[$113 + 4 >> 2] | 0;
 $119 = $this + 208 | 0;
 HEAP32[$119 >> 2] = HEAP32[$113 >> 2];
 HEAP32[$119 + 4 >> 2] = $118;
 $125 = $0 + 216 | 0;
 $130 = HEAP32[$125 + 4 >> 2] | 0;
 $131 = $this + 216 | 0;
 HEAP32[$131 >> 2] = HEAP32[$125 >> 2];
 HEAP32[$131 + 4 >> 2] = $130;
 $137 = $0 + 224 | 0;
 $142 = HEAP32[$137 + 4 >> 2] | 0;
 $143 = $this + 224 | 0;
 HEAP32[$143 >> 2] = HEAP32[$137 >> 2];
 HEAP32[$143 + 4 >> 2] = $142;
 $149 = $0 + 232 | 0;
 $154 = HEAP32[$149 + 4 >> 2] | 0;
 $155 = $this + 232 | 0;
 HEAP32[$155 >> 2] = HEAP32[$149 >> 2];
 HEAP32[$155 + 4 >> 2] = $154;
 __ZN5Oryol12VertexLayoutaSERKS0_($this + 240 | 0, $0 + 240 | 0) | 0;
 return $this | 0;
}

function __ZN5ImGui24TreeNodeBehaviorIsOpenedEji($id, $flags) {
 $id = $id | 0;
 $flags = $flags | 0;
 var $$0$i20 = 0, $$idx$i$i = 0, $$idx$i$i10 = 0, $$idx$val$i = 0, $$idx$val$i7 = 0, $$idx1$val$i = 0, $$idx1$val$i9 = 0, $1 = 0, $10 = 0, $15 = 0, $16 = 0, $18 = 0, $27 = 0, $3 = 0, $30 = 0, $34 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $5 = 0, $count$02$i$i = 0, $count$02$i$i13 = 0, $first$0$lcssa$i$i = 0, $first$0$lcssa$i$i18 = 0, $first$03$i$i = 0, $first$03$i$i12 = 0, $first$1$i$i = 0, $first$1$i$i16 = 0, $opened$1 = 0, $opened$2$off0 = 0;
 $1 = HEAP32[38201] | 0;
 $3 = HEAP32[$1 + 260 >> 2] | 0;
 $4 = 152988;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) {
  $34 = $flags & 1;
  $$idx$val$i7 = HEAP32[$3 >> 2] | 0;
  $$idx1$val$i9 = HEAP32[$3 + 8 >> 2] | 0;
  $$idx$i$i10 = $$idx$val$i7 << 3;
  if (($$idx$i$i10 | 0) > 0) {
   $count$02$i$i13 = $$idx$i$i10 >> 3;
   $first$03$i$i12 = $$idx1$val$i9;
   while (1) {
    $37 = ($count$02$i$i13 | 0) / 2 | 0;
    $38 = $first$03$i$i12 + ($37 << 3) | 0;
    $40 = (HEAP32[$38 >> 2] | 0) >>> 0 < $id >>> 0;
    $count$02$i$i13 = $40 ? $count$02$i$i13 + -1 - $37 | 0 : $37;
    $first$1$i$i16 = $40 ? $38 + 8 | 0 : $first$03$i$i12;
    if (($count$02$i$i13 | 0) <= 0) {
     $first$0$lcssa$i$i18 = $first$1$i$i16;
     break;
    } else $first$03$i$i12 = $first$1$i$i16;
   }
  } else $first$0$lcssa$i$i18 = $$idx1$val$i9;
  if (($first$0$lcssa$i$i18 | 0) == ($$idx1$val$i9 + ($$idx$val$i7 << 3) | 0)) $$0$i20 = $34; else if ((HEAP32[$first$0$lcssa$i$i18 >> 2] | 0) == ($id | 0)) $$0$i20 = HEAP32[$first$0$lcssa$i$i18 + 4 >> 2] | 0; else $$0$i20 = $34;
  $opened$2$off0 = ($$0$i20 | 0) != 0;
 } else {
  do if (!($5 & 1)) {
   $$idx$val$i = HEAP32[$3 >> 2] | 0;
   $$idx1$val$i = HEAP32[$3 + 8 >> 2] | 0;
   $$idx$i$i = $$idx$val$i << 3;
   if (($$idx$i$i | 0) > 0) {
    $count$02$i$i = $$idx$i$i >> 3;
    $first$03$i$i = $$idx1$val$i;
    while (1) {
     $15 = ($count$02$i$i | 0) / 2 | 0;
     $16 = $first$03$i$i + ($15 << 3) | 0;
     $18 = (HEAP32[$16 >> 2] | 0) >>> 0 < $id >>> 0;
     $count$02$i$i = $18 ? $count$02$i$i + -1 - $15 | 0 : $15;
     $first$1$i$i = $18 ? $16 + 8 | 0 : $first$03$i$i;
     if (($count$02$i$i | 0) <= 0) {
      $first$0$lcssa$i$i = $first$1$i$i;
      break;
     } else $first$03$i$i = $first$1$i$i;
    }
   } else $first$0$lcssa$i$i = $$idx1$val$i;
   if (($first$0$lcssa$i$i | 0) != ($$idx1$val$i + ($$idx$val$i << 3) | 0)) if ((HEAP32[$first$0$lcssa$i$i >> 2] | 0) == ($id | 0)) {
    $27 = HEAP32[$first$0$lcssa$i$i + 4 >> 2] | 0;
    if (($27 | 0) != -1) {
     $opened$1 = ($27 | 0) != 0;
     break;
    }
   }
   $30 = HEAP8[152985] | 0;
   __ZN12ImGuiStorage6SetIntEji($3, $id, $30 & 255);
   $opened$1 = $30 << 24 >> 24 != 0;
  } else {
   $10 = HEAP8[152985] | 0;
   __ZN12ImGuiStorage6SetIntEji($3, $id, $10 & 255);
   $opened$1 = $10 << 24 >> 24 != 0;
  } while (0);
  HEAP32[$4 >> 2] = 0;
  $opened$2$off0 = $opened$1;
 }
 if (($flags & 2 | 0) == 0 & (HEAP8[157996] | 0) != 0) return $opened$2$off0 | (HEAP32[$1 + 216 >> 2] | 0) < (HEAP32[39503] | 0) | 0; else return $opened$2$off0 | 0;
 return 0;
}

function __ZN5Oryol11ShaderSetup12programEntryaSEOS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $101 = 0, $106 = 0, $107 = 0, $113 = 0, $118 = 0, $119 = 0, $125 = 0, $130 = 0, $131 = 0, $137 = 0, $142 = 0, $143 = 0, $149 = 0, $154 = 0, $155 = 0, $41 = 0, $46 = 0, $47 = 0, $53 = 0, $58 = 0, $59 = 0, $65 = 0, $70 = 0, $71 = 0, $77 = 0, $82 = 0, $83 = 0, $89 = 0, $94 = 0, $95 = 0;
 __ZN5Oryol6StringaSEOS0_($this, $0);
 __ZN5Oryol6StringaSEOS0_($this + 8 | 0, $0 + 8 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 16 | 0, $0 + 16 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 24 | 0, $0 + 24 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 32 | 0, $0 + 32 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 40 | 0, $0 + 40 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 48 | 0, $0 + 48 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 56 | 0, $0 + 56 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 64 | 0, $0 + 64 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 72 | 0, $0 + 72 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 80 | 0, $0 + 80 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 88 | 0, $0 + 88 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 96 | 0, $0 + 96 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 104 | 0, $0 + 104 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 112 | 0, $0 + 112 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 120 | 0, $0 + 120 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 128 | 0, $0 + 128 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 136 | 0, $0 + 136 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 144 | 0, $0 + 144 | 0);
 __ZN5Oryol6StringaSEOS0_($this + 152 | 0, $0 + 152 | 0);
 $41 = $0 + 160 | 0;
 $46 = HEAP32[$41 + 4 >> 2] | 0;
 $47 = $this + 160 | 0;
 HEAP32[$47 >> 2] = HEAP32[$41 >> 2];
 HEAP32[$47 + 4 >> 2] = $46;
 $53 = $0 + 168 | 0;
 $58 = HEAP32[$53 + 4 >> 2] | 0;
 $59 = $this + 168 | 0;
 HEAP32[$59 >> 2] = HEAP32[$53 >> 2];
 HEAP32[$59 + 4 >> 2] = $58;
 $65 = $0 + 176 | 0;
 $70 = HEAP32[$65 + 4 >> 2] | 0;
 $71 = $this + 176 | 0;
 HEAP32[$71 >> 2] = HEAP32[$65 >> 2];
 HEAP32[$71 + 4 >> 2] = $70;
 $77 = $0 + 184 | 0;
 $82 = HEAP32[$77 + 4 >> 2] | 0;
 $83 = $this + 184 | 0;
 HEAP32[$83 >> 2] = HEAP32[$77 >> 2];
 HEAP32[$83 + 4 >> 2] = $82;
 $89 = $0 + 192 | 0;
 $94 = HEAP32[$89 + 4 >> 2] | 0;
 $95 = $this + 192 | 0;
 HEAP32[$95 >> 2] = HEAP32[$89 >> 2];
 HEAP32[$95 + 4 >> 2] = $94;
 $101 = $0 + 200 | 0;
 $106 = HEAP32[$101 + 4 >> 2] | 0;
 $107 = $this + 200 | 0;
 HEAP32[$107 >> 2] = HEAP32[$101 >> 2];
 HEAP32[$107 + 4 >> 2] = $106;
 $113 = $0 + 208 | 0;
 $118 = HEAP32[$113 + 4 >> 2] | 0;
 $119 = $this + 208 | 0;
 HEAP32[$119 >> 2] = HEAP32[$113 >> 2];
 HEAP32[$119 + 4 >> 2] = $118;
 $125 = $0 + 216 | 0;
 $130 = HEAP32[$125 + 4 >> 2] | 0;
 $131 = $this + 216 | 0;
 HEAP32[$131 >> 2] = HEAP32[$125 >> 2];
 HEAP32[$131 + 4 >> 2] = $130;
 $137 = $0 + 224 | 0;
 $142 = HEAP32[$137 + 4 >> 2] | 0;
 $143 = $this + 224 | 0;
 HEAP32[$143 >> 2] = HEAP32[$137 >> 2];
 HEAP32[$143 + 4 >> 2] = $142;
 $149 = $0 + 232 | 0;
 $154 = HEAP32[$149 + 4 >> 2] | 0;
 $155 = $this + 232 | 0;
 HEAP32[$155 >> 2] = HEAP32[$149 >> 2];
 HEAP32[$155 + 4 >> 2] = $154;
 __ZN5Oryol12VertexLayoutaSEOS0_($this + 240 | 0, $0 + 240 | 0) | 0;
 return $this | 0;
}

function __ZN5Oryol11NoCRTShader5SetupEv($agg$result) {
 $agg$result = $agg$result | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $FSParams_ublayout = 0, $Textures_tblayout = 0, $vs_layout = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 $0 = sp + 544 | 0;
 $vs_layout = sp + 552 | 0;
 $1 = sp + 336 | 0;
 $2 = sp + 328 | 0;
 $3 = sp + 320 | 0;
 $4 = sp + 312 | 0;
 $5 = sp + 304 | 0;
 $6 = sp + 296 | 0;
 $FSParams_ublayout = sp;
 $7 = sp + 288 | 0;
 $8 = sp + 284 | 0;
 $9 = sp + 280 | 0;
 $Textures_tblayout = sp + 344 | 0;
 $10 = sp + 276 | 0;
 $11 = sp + 272 | 0;
 __ZN5Oryol7LocatorC2EPKc($0, 33479);
 __ZN5Oryol11ShaderSetupC2ERKNS_7LocatorE($agg$result, $0);
 HEAP32[$0 >> 2] = 0;
 __ZN5Oryol12VertexLayoutC2Ev($vs_layout);
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($vs_layout, 0, 3) | 0;
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($vs_layout, 2, 1) | 0;
 __ZN5Oryol6StringC2EPKc($1, 20563);
 __ZN5Oryol6StringC2EPKc($2, 21022);
 __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($agg$result, 0, $vs_layout, $1, $2);
 __ZN5Oryol6StringD2Ev($2);
 __ZN5Oryol6StringD2Ev($1);
 __ZN5Oryol6StringC2EPKc($3, 24881);
 __ZN5Oryol6StringC2EPKc($4, 25353);
 __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($agg$result, 1, $vs_layout, $3, $4);
 __ZN5Oryol6StringD2Ev($4);
 __ZN5Oryol6StringD2Ev($3);
 __ZN5Oryol6StringC2EPKc($5, 29188);
 __ZN5Oryol6StringC2EPKc($6, 29632);
 __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($agg$result, 2, $vs_layout, $5, $6);
 __ZN5Oryol6StringD2Ev($6);
 __ZN5Oryol6StringD2Ev($5);
 __ZN5Oryol18UniformBlockLayoutC2Ev($FSParams_ublayout);
 $12 = $FSParams_ublayout;
 HEAP32[$12 >> 2] = -284321316;
 HEAP32[$12 + 4 >> 2] = -10977405;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($7, 33491);
 __ZN5Oryol18UniformBlockLayout3AddERKNS_10StringAtomENS_11UniformType4CodeE($FSParams_ublayout, $7, 1) | 0;
 HEAP32[$7 >> 2] = 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($8, 33499);
 __ZN5Oryol18UniformBlockLayout3AddERKNS_10StringAtomENS_11UniformType4CodeE($FSParams_ublayout, $8, 8) | 0;
 HEAP32[$8 >> 2] = 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($9, 33507);
 __ZN5Oryol11ShaderSetup15AddUniformBlockERKNS_10StringAtomERKNS_18UniformBlockLayoutENS_11ShaderStage4CodeEi($agg$result, $9, $FSParams_ublayout, 1, 0);
 HEAP32[$9 >> 2] = 0;
 __ZN5Oryol18TextureBlockLayoutC2Ev($Textures_tblayout);
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($10, 33516);
 __ZN5Oryol18TextureBlockLayout3AddERKNS_10StringAtomENS_11TextureType4CodeEi($Textures_tblayout, $10, 0, 0) | 0;
 HEAP32[$10 >> 2] = 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($11, 84314);
 __ZN5Oryol11ShaderSetup15AddTextureBlockERKNS_10StringAtomERKNS_18TextureBlockLayoutENS_11ShaderStage4CodeE($agg$result, $11, $Textures_tblayout, 1);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol9CRTShader5SetupEv($agg$result) {
 $agg$result = $agg$result | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $FSParams_ublayout = 0, $Textures_tblayout = 0, $vs_layout = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 $0 = sp + 544 | 0;
 $vs_layout = sp + 552 | 0;
 $1 = sp + 336 | 0;
 $2 = sp + 328 | 0;
 $3 = sp + 320 | 0;
 $4 = sp + 312 | 0;
 $5 = sp + 304 | 0;
 $6 = sp + 296 | 0;
 $FSParams_ublayout = sp;
 $7 = sp + 288 | 0;
 $8 = sp + 284 | 0;
 $9 = sp + 280 | 0;
 $Textures_tblayout = sp + 344 | 0;
 $10 = sp + 276 | 0;
 $11 = sp + 272 | 0;
 __ZN5Oryol7LocatorC2EPKc($0, 33526);
 __ZN5Oryol11ShaderSetupC2ERKNS_7LocatorE($agg$result, $0);
 HEAP32[$0 >> 2] = 0;
 __ZN5Oryol12VertexLayoutC2Ev($vs_layout);
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($vs_layout, 0, 3) | 0;
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($vs_layout, 2, 1) | 0;
 __ZN5Oryol6StringC2EPKc($1, 20563);
 __ZN5Oryol6StringC2EPKc($2, 21643);
 __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($agg$result, 0, $vs_layout, $1, $2);
 __ZN5Oryol6StringD2Ev($2);
 __ZN5Oryol6StringD2Ev($1);
 __ZN5Oryol6StringC2EPKc($3, 24881);
 __ZN5Oryol6StringC2EPKc($4, 25962);
 __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($agg$result, 1, $vs_layout, $3, $4);
 __ZN5Oryol6StringD2Ev($4);
 __ZN5Oryol6StringD2Ev($3);
 __ZN5Oryol6StringC2EPKc($5, 29188);
 __ZN5Oryol6StringC2EPKc($6, 30247);
 __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($agg$result, 2, $vs_layout, $5, $6);
 __ZN5Oryol6StringD2Ev($6);
 __ZN5Oryol6StringD2Ev($5);
 __ZN5Oryol18UniformBlockLayoutC2Ev($FSParams_ublayout);
 $12 = $FSParams_ublayout;
 HEAP32[$12 >> 2] = -284321316;
 HEAP32[$12 + 4 >> 2] = -10977405;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($7, 33491);
 __ZN5Oryol18UniformBlockLayout3AddERKNS_10StringAtomENS_11UniformType4CodeE($FSParams_ublayout, $7, 1) | 0;
 HEAP32[$7 >> 2] = 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($8, 33499);
 __ZN5Oryol18UniformBlockLayout3AddERKNS_10StringAtomENS_11UniformType4CodeE($FSParams_ublayout, $8, 8) | 0;
 HEAP32[$8 >> 2] = 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($9, 33507);
 __ZN5Oryol11ShaderSetup15AddUniformBlockERKNS_10StringAtomERKNS_18UniformBlockLayoutENS_11ShaderStage4CodeEi($agg$result, $9, $FSParams_ublayout, 1, 0);
 HEAP32[$9 >> 2] = 0;
 __ZN5Oryol18TextureBlockLayoutC2Ev($Textures_tblayout);
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($10, 33516);
 __ZN5Oryol18TextureBlockLayout3AddERKNS_10StringAtomENS_11TextureType4CodeEi($Textures_tblayout, $10, 0, 0) | 0;
 HEAP32[$10 >> 2] = 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($11, 84314);
 __ZN5Oryol11ShaderSetup15AddTextureBlockERKNS_10StringAtomERKNS_18TextureBlockLayoutENS_11ShaderStage4CodeE($agg$result, $11, $Textures_tblayout, 1);
 STACKTOP = sp;
 return;
}

function __ZN4yakc5clock6updateEi($this, $num_cycles) {
 $this = $this | 0;
 $num_cycles = $num_cycles | 0;
 var $$pr = 0, $$pr$1 = 0, $$pr$2 = 0, $$pr$3 = 0, $0 = 0, $1 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $38 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $59 = 0, $61 = 0, $63 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $8 = 0, $80 = 0, $82 = 0, $9 = 0;
 $0 = $this + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 L1 : do if ($1 | 0) {
  $3 = $this + 12 | 0;
  $5 = (HEAP32[$3 >> 2] | 0) - $num_cycles | 0;
  HEAP32[$3 >> 2] = $5;
  if (($5 | 0) < 1) {
   $7 = $this + 8 | 0;
   $8 = $this + 4 | 0;
   $9 = $this + 20 | 0;
   $17 = $5;
   $19 = $1;
   while (1) {
    HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 1;
    HEAP32[$3 >> 2] = $17 + (((HEAP32[$this >> 2] | 0) * 1e3 | 0) / (HEAP32[$8 >> 2] | 0) | 0);
    FUNCTION_TABLE_vi[$19 & 255](HEAP32[$9 >> 2] | 0);
    $$pr = HEAP32[$3 >> 2] | 0;
    if (($$pr | 0) >= 1) break L1;
    $17 = $$pr;
    $19 = HEAP32[$0 >> 2] | 0;
   }
  }
 } while (0);
 $21 = $this + 36 | 0;
 $22 = HEAP32[$21 >> 2] | 0;
 L8 : do if ($22 | 0) {
  $24 = $this + 32 | 0;
  $26 = (HEAP32[$24 >> 2] | 0) - $num_cycles | 0;
  HEAP32[$24 >> 2] = $26;
  if (($26 | 0) < 1) {
   $28 = $this + 28 | 0;
   $29 = $this + 24 | 0;
   $30 = $this + 40 | 0;
   $38 = $26;
   $40 = $22;
   while (1) {
    HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
    HEAP32[$24 >> 2] = $38 + (((HEAP32[$this >> 2] | 0) * 1e3 | 0) / (HEAP32[$29 >> 2] | 0) | 0);
    FUNCTION_TABLE_vi[$40 & 255](HEAP32[$30 >> 2] | 0);
    $$pr$1 = HEAP32[$24 >> 2] | 0;
    if (($$pr$1 | 0) >= 1) break L8;
    $38 = $$pr$1;
    $40 = HEAP32[$21 >> 2] | 0;
   }
  }
 } while (0);
 $42 = $this + 56 | 0;
 $43 = HEAP32[$42 >> 2] | 0;
 L15 : do if ($43 | 0) {
  $45 = $this + 52 | 0;
  $47 = (HEAP32[$45 >> 2] | 0) - $num_cycles | 0;
  HEAP32[$45 >> 2] = $47;
  if (($47 | 0) < 1) {
   $49 = $this + 48 | 0;
   $50 = $this + 44 | 0;
   $51 = $this + 60 | 0;
   $59 = $47;
   $61 = $43;
   while (1) {
    HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 1;
    HEAP32[$45 >> 2] = $59 + (((HEAP32[$this >> 2] | 0) * 1e3 | 0) / (HEAP32[$50 >> 2] | 0) | 0);
    FUNCTION_TABLE_vi[$61 & 255](HEAP32[$51 >> 2] | 0);
    $$pr$2 = HEAP32[$45 >> 2] | 0;
    if (($$pr$2 | 0) >= 1) break L15;
    $59 = $$pr$2;
    $61 = HEAP32[$42 >> 2] | 0;
   }
  }
 } while (0);
 $63 = $this + 76 | 0;
 $64 = HEAP32[$63 >> 2] | 0;
 if (!$64) return;
 $66 = $this + 72 | 0;
 $68 = (HEAP32[$66 >> 2] | 0) - $num_cycles | 0;
 HEAP32[$66 >> 2] = $68;
 if (($68 | 0) >= 1) return;
 $70 = $this + 68 | 0;
 $71 = $this + 64 | 0;
 $72 = $this + 80 | 0;
 $80 = $68;
 $82 = $64;
 while (1) {
  HEAP32[$70 >> 2] = (HEAP32[$70 >> 2] | 0) + 1;
  HEAP32[$66 >> 2] = $80 + (((HEAP32[$this >> 2] | 0) * 1e3 | 0) / (HEAP32[$71 >> 2] | 0) | 0);
  FUNCTION_TABLE_vi[$82 & 255](HEAP32[$72 >> 2] | 0);
  $$pr$3 = HEAP32[$66 >> 2] | 0;
  if (($$pr$3 | 0) >= 1) break;
  $80 = $$pr$3;
  $82 = HEAP32[$63 >> 2] | 0;
 }
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE15moveInsertFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $49 = 0, $50 = 0, $52 = 0, $i$01 = 0, $i$01$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 17846);
  _abort();
 }
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 17846);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 17846);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - $3 | 0) < ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 17846);
  _abort();
 }
 $10 = $3 + -1 | 0;
 $11 = $0 + ($3 << 5) | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($0 + ($10 << 5) | 0, $11);
 HEAP32[$11 >> 2] = 0;
 $13 = $0 + ($10 << 5) + 8 | 0;
 $14 = $0 + ($3 << 5) + 24 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 do if (!$15) HEAP32[$0 + ($10 << 5) + 24 >> 2] = 0; else if (($15 | 0) == ($0 + ($3 << 5) + 8 | 0)) {
  HEAP32[$0 + ($10 << 5) + 24 >> 2] = $13;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$15 >> 2] | 0) + 12 >> 2] & 63]($15, $13);
  break;
 } else {
  HEAP32[$0 + ($10 << 5) + 24 >> 2] = $15;
  HEAP32[$14 >> 2] = 0;
  break;
 } while (0);
 $25 = HEAP32[$2 >> 2] | 0;
 $26 = $index + -1 | 0;
 if (($25 | 0) < ($26 + $25 | 0)) $i$01 = $25; else {
  $$lcssa = $25;
  $29 = $$lcssa + -1 | 0;
  HEAP32[$2 >> 2] = $29;
  $30 = $29 + $index | 0;
  $31 = HEAP32[$this >> 2] | 0;
  $32 = $31 + ($30 << 5) | 0;
  return $32 | 0;
 }
 do {
  $33 = HEAP32[$this >> 2] | 0;
  $34 = $33 + ($i$01 << 5) | 0;
  $i$01$looptemp = $i$01;
  $i$01 = $i$01 + 1 | 0;
  $36 = $33 + ($i$01 << 5) | 0;
  HEAP32[$34 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($34, $36);
  HEAP32[$36 >> 2] = 0;
  $37 = $33 + ($i$01$looptemp << 5) + 8 | 0;
  $38 = $33 + ($i$01 << 5) + 8 | 0;
  $39 = $33 + ($i$01$looptemp << 5) + 24 | 0;
  $40 = HEAP32[$39 >> 2] | 0;
  if (($40 | 0) == ($37 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$40 >> 2] | 0) + 16 >> 2] & 255]($40); else if ($40 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$40 >> 2] | 0) + 20 >> 2] & 255]($40);
  HEAP32[$39 >> 2] = 0;
  $49 = $33 + ($i$01 << 5) + 24 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  do if (!$50) HEAP32[$39 >> 2] = 0; else if (($50 | 0) == ($38 | 0)) {
   HEAP32[$39 >> 2] = $37;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$50 >> 2] | 0) + 12 >> 2] & 63]($50, $37);
   break;
  } else {
   HEAP32[$39 >> 2] = $50;
   HEAP32[$49 >> 2] = 0;
   break;
  } while (0);
  $52 = HEAP32[$2 >> 2] | 0;
 } while (($i$01 | 0) < ($26 + $52 | 0));
 $$lcssa = $52;
 $29 = $$lcssa + -1 | 0;
 HEAP32[$2 >> 2] = $29;
 $30 = $29 + $index | 0;
 $31 = HEAP32[$this >> 2] | 0;
 $32 = $31 + ($30 << 5) | 0;
 return $32 | 0;
}

function __ZN15MemoryMapWindow8drawGridEb($this, $is_kc85_4) {
 $this = $this | 0;
 $is_kc85_4 = $is_kc85_4 | 0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $11 = 0.0, $15 = 0.0, $2 = 0, $22 = 0.0, $23 = 0, $24 = 0, $26 = 0, $31 = 0.0, $32 = 0, $36 = 0.0, $38 = 0, $4 = 0, $40 = 0.0, $43 = 0, $44 = 0, $5 = 0, $50 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, $a = 0, $b = 0, $canvas_area = 0, $canvas_pos = 0, $i$02 = 0, $i3$01 = 0, $strBuilder = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer = sp;
 $strBuilder = sp + 56 | 0;
 $canvas_pos = sp + 48 | 0;
 $canvas_area = sp + 40 | 0;
 $0 = sp + 24 | 0;
 $a = sp + 32 | 0;
 $b = sp + 16 | 0;
 $1 = sp + 8 | 0;
 __ZN5Oryol13StringBuilderC2Ev($strBuilder);
 $2 = __ZN5ImGui17GetWindowDrawListEv() | 0;
 __ZN5ImGui18GetCursorScreenPosEv($canvas_pos);
 __ZN5ImGui21GetContentRegionAvailEv($canvas_area);
 __ZN5ImGui12CalcTextSizeEPKcS1_bf($0, 36702, 0, 0, -1.0);
 $4 = $canvas_pos + 4 | 0;
 $5 = $a + 4 | 0;
 $6 = $canvas_area + 4 | 0;
 $7 = $b + 4 | 0;
 $8 = +HEAPF32[$0 >> 2] * 4.0;
 $9 = $1 + 4 | 0;
 $i$02 = 0;
 do {
  $26 = $i$02 << 14;
  $31 = +(($26 | 0) / 160 | 0 | 0) + +HEAPF32[$canvas_pos >> 2] + 80.0;
  $32 = HEAP32[$4 >> 2] | 0;
  HEAPF32[$a >> 2] = $31;
  HEAP32[$5 >> 2] = $32;
  $36 = (HEAP32[tempDoublePtr >> 2] = $32, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[$6 >> 2] + 4.0 + -20.0;
  HEAPF32[$b >> 2] = $31;
  HEAPF32[$7 >> 2] = $36;
  __ZN10ImDrawList7AddLineERK6ImVec2S2_jf($2, $a, $b, HEAP32[36665] | 0, 1.0);
  $38 = ($26 | 0) == 65536;
  HEAP32[$vararg_buffer >> 2] = $38 ? 65535 : $26;
  __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 34992, $vararg_buffer) | 0;
  $40 = +HEAPF32[$b >> 2];
  $43 = HEAP32[$7 >> 2] | 0;
  HEAPF32[$1 >> 2] = $38 ? $40 - $8 : $40;
  HEAP32[$9 >> 2] = $43;
  $44 = HEAP32[36664] | 0;
  __ZN10ImDrawList7AddTextERK6ImVec2jPKcS4_($2, $1, $44, __ZNK5Oryol13StringBuilder6AsCStrEv($strBuilder) | 0, 0);
  $i$02 = $i$02 + 1 | 0;
 } while (($i$02 | 0) != 5);
 $11 = +HEAPF32[$canvas_pos >> 2] + 80.0;
 $15 = +HEAPF32[$4 >> 2] + +HEAPF32[$6 >> 2] + -20.0;
 HEAPF32[$vararg_buffer >> 2] = $11;
 HEAPF32[$vararg_buffer + 4 >> 2] = $15;
 HEAPF32[$a >> 2] = $11 + 409.0;
 HEAPF32[$a + 4 >> 2] = $15;
 __ZN10ImDrawList7AddLineERK6ImVec2S2_jf($2, $vararg_buffer, $a, HEAP32[36665] | 0, 1.0);
 $22 = +HEAPF32[$4 >> 2] + 2.0;
 HEAP32[$b >> 2] = HEAP32[$canvas_pos >> 2];
 $23 = $b + 4 | 0;
 HEAPF32[$23 >> 2] = $22;
 $24 = $is_kc85_4 ? 6 : 1;
 $50 = HEAP32[36664] | 0;
 $i3$01 = 0;
 while (1) {
  __ZN10ImDrawList7AddTextERK6ImVec2jPKcS4_($2, $b, $50, 35017, 0);
  HEAPF32[$23 >> 2] = +HEAPF32[$23 >> 2] + 20.0;
  $i3$01 = $i3$01 + 1 | 0;
  $55 = HEAP32[36664] | 0;
  if (($i3$01 | 0) >= ($24 | 0)) {
   $$lcssa = $55;
   break;
  } else $50 = $55;
 }
 __ZN10ImDrawList7AddTextERK6ImVec2jPKcS4_($2, $b, $$lcssa, 34997, 0);
 HEAPF32[$23 >> 2] = +HEAPF32[$23 >> 2] + 20.0;
 __ZN10ImDrawList7AddTextERK6ImVec2jPKcS4_($2, $b, HEAP32[36664] | 0, 35007, 0);
 __ZN5Oryol13StringBuilderD2Ev($strBuilder);
 STACKTOP = sp;
 return;
}

function __Z18ImTextCharFromUtf8PjPKcS1_($out_char, $in_text, $in_text_end) {
 $out_char = $out_char | 0;
 $in_text = $in_text | 0;
 $in_text_end = $in_text_end | 0;
 var $$0 = 0, $1 = 0, $11 = 0, $15 = 0, $30 = 0, $36 = 0, $38 = 0, $39 = 0, $44 = 0, $62 = 0, $68 = 0, $70 = 0, $71 = 0, $76 = 0, $81 = 0, $92 = 0, label = 0;
 $1 = HEAPU8[$in_text >> 0] | 0;
 if (!($1 & 128)) {
  HEAP32[$out_char >> 2] = $1;
  $$0 = 1;
  return $$0 | 0;
 }
 if (($1 & 224 | 0) == 192) {
  HEAP32[$out_char >> 2] = 65533;
  if ($in_text_end | 0) if (($in_text_end - $in_text | 0) < 2) {
   $$0 = 1;
   return $$0 | 0;
  }
  $11 = HEAP8[$in_text >> 0] | 0;
  if (($11 & 255) < 194) {
   $$0 = 2;
   return $$0 | 0;
  }
  $15 = HEAPU8[$in_text + 1 >> 0] | 0;
  if (($15 & 192 | 0) != 128) {
   $$0 = 2;
   return $$0 | 0;
  }
  HEAP32[$out_char >> 2] = $15 & 63 | ($11 & 255) << 6 & 1984;
  $$0 = 2;
  return $$0 | 0;
 }
 if (($1 & 240 | 0) == 224) {
  HEAP32[$out_char >> 2] = 65533;
  if ($in_text_end | 0) if (($in_text_end - $in_text | 0) < 3) {
   $$0 = 1;
   return $$0 | 0;
  }
  $30 = HEAP8[$in_text >> 0] | 0;
  switch ($30 << 24 >> 24) {
  case -32:
   {
    if ((HEAP8[$in_text + 1 >> 0] & -32) << 24 >> 24 == -96) label = 14; else {
     $$0 = 3;
     return $$0 | 0;
    }
    break;
   }
  case -19:
   {
    $36 = HEAP8[$in_text + 1 >> 0] | 0;
    if (($36 & 255) > 159) {
     $$0 = 3;
     return $$0 | 0;
    } else $39 = $36;
    break;
   }
  default:
   label = 14;
  }
  if ((label | 0) == 14) $39 = HEAP8[$in_text + 1 >> 0] | 0;
  $38 = $39 & 255;
  if (($38 & 192 | 0) != 128) {
   $$0 = 3;
   return $$0 | 0;
  }
  $44 = HEAPU8[$in_text + 2 >> 0] | 0;
  if (($44 & 192 | 0) != 128) {
   $$0 = 3;
   return $$0 | 0;
  }
  HEAP32[$out_char >> 2] = $44 & 63 | $38 << 6 & 4032 | ($30 & 255) << 12 & 61440;
  $$0 = 3;
  return $$0 | 0;
 }
 if (($1 & 248 | 0) != 240) {
  HEAP32[$out_char >> 2] = 0;
  $$0 = 0;
  return $$0 | 0;
 }
 HEAP32[$out_char >> 2] = 65533;
 if ($in_text_end | 0) if (($in_text_end - $in_text | 0) < 4) {
  $$0 = 1;
  return $$0 | 0;
 }
 $62 = HEAP8[$in_text >> 0] | 0;
 if (($62 & 255) > 244) {
  $$0 = 4;
  return $$0 | 0;
 }
 switch ($62 << 24 >> 24) {
 case -16:
  {
   if (((HEAP8[$in_text + 1 >> 0] | 0) + 112 & 255) > 47) {
    $$0 = 4;
    return $$0 | 0;
   } else label = 25;
   break;
  }
 case -12:
  {
   $68 = HEAP8[$in_text + 1 >> 0] | 0;
   if (($68 & 255) > 143) {
    $$0 = 4;
    return $$0 | 0;
   } else $71 = $68;
   break;
  }
 default:
  label = 25;
 }
 if ((label | 0) == 25) $71 = HEAP8[$in_text + 1 >> 0] | 0;
 $70 = $71 & 255;
 if (($70 & 192 | 0) != 128) {
  $$0 = 4;
  return $$0 | 0;
 }
 $76 = HEAPU8[$in_text + 2 >> 0] | 0;
 if (($76 & 192 | 0) != 128) {
  $$0 = 4;
  return $$0 | 0;
 }
 $81 = HEAPU8[$in_text + 3 >> 0] | 0;
 if (($81 & 192 | 0) != 128) {
  $$0 = 4;
  return $$0 | 0;
 }
 $92 = $76 << 6 & 4032 | $70 << 12 & 258048 | ($62 & 255) << 18 & 1835008;
 if (($92 & 2095104 | 0) == 55296) {
  $$0 = 4;
  return $$0 | 0;
 }
 HEAP32[$out_char >> 2] = $92 | $81 & 63;
 $$0 = 4;
 return $$0 | 0;
}

function __ZN12ModuleWindow14drawModuleSlotERN4yakc4kc85Eh($this, $kc, $slot_addr) {
 $this = $this | 0;
 $kc = $kc | 0;
 $slot_addr = $slot_addr | 0;
 var $0 = 0, $1 = 0, $11 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $37 = 0, $4 = 0, $44 = 0, $47 = 0, $7 = 0, $__begin$0$$0$lcssa$i = 0, $i$01 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 32 | 0;
 $1 = sp + 24 | 0;
 $2 = $slot_addr & 255;
 __ZN5ImGui6PushIDEi($2);
 __ZN5ImGui29AlignFirstTextHeightToWidgetsEv();
 HEAP32[$vararg_buffer >> 2] = $2;
 __ZN5ImGui4TextEPKcz(36312, $vararg_buffer);
 __ZN5ImGui8SameLineEff(0.0, -1.0);
 $3 = $kc + 462872 | 0;
 $4 = $kc + 463128 | 0;
 $7 = $kc + 463168 | 0;
 if ((HEAP8[$4 >> 0] | 0) == $slot_addr << 24 >> 24) $__begin$0$$0$lcssa$i = $4; else if ((HEAP8[$7 >> 0] | 0) == $slot_addr << 24 >> 24) $__begin$0$$0$lcssa$i = $7; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 $11 = HEAP32[$__begin$0$$0$lcssa$i + 16 >> 2] | 0;
 HEAPF32[$0 >> 2] = 192.0;
 HEAPF32[$0 + 4 >> 2] = 0.0;
 if (__ZN5ImGui6ButtonEPKcRK6ImVec2($11, $0) | 0) __ZN5ImGui9OpenPopupEPKc(36323);
 if (__ZN5ImGui13IsItemHoveredEv() | 0) {
  HEAP32[$vararg_buffer1 >> 2] = HEAP32[$__begin$0$$0$lcssa$i + 20 >> 2];
  __ZN5ImGui10SetTooltipEPKcz(124291, $vararg_buffer1);
 }
 __ZN5ImGui8SameLineEff(0.0, -1.0);
 $22 = HEAPU8[$__begin$0$$0$lcssa$i + 38 >> 0] | 0;
 HEAP32[$vararg_buffer4 >> 2] = HEAPU8[$__begin$0$$0$lcssa$i + 12 >> 0];
 HEAP32[$vararg_buffer4 + 4 >> 2] = $22;
 __ZN5ImGui4TextEPKcz(36330, $vararg_buffer4);
 if (!(__ZN5ImGui10BeginPopupEPKc(36323) | 0)) {
  __ZN5ImGui5PopIDEv();
  STACKTOP = sp;
  return;
 }
 $24 = $1 + 4 | 0;
 $25 = $kc + 463128 | 0;
 $26 = $kc + 69240 | 0;
 $29 = ($2 << 8 | 128) & 65535;
 $30 = $kc + 69244 | 0;
 $31 = $kc + 65908 | 0;
 $32 = $kc + 463168 | 0;
 $i$01 = 0;
 do {
  if (HEAP8[$kc + 462872 + ($i$01 << 5) >> 0] | 0) {
   $37 = HEAP32[$kc + 462872 + ($i$01 << 5) + 12 >> 2] | 0;
   HEAPF32[$1 >> 2] = 0.0;
   HEAPF32[$24 >> 2] = 0.0;
   if (__ZN5ImGui10SelectableEPKcbiRK6ImVec2($37, 0, 0, $1) | 0) {
    if ((HEAP8[$25 >> 0] | 0) == $slot_addr << 24 >> 24) $44 = 0; else if ((HEAP8[$32 >> 0] | 0) == $slot_addr << 24 >> 24) $44 = 1; else {
     label = 15;
     break;
    }
    if ((HEAP8[$kc + 463128 + ($44 * 40 | 0) + 12 >> 0] | 0) != -1) __ZN4yakc8kc85_exp13remove_moduleEhRNS_6memoryE($3, $slot_addr, $31);
    __ZN4yakc8kc85_exp13insert_moduleEhNS0_11module_typeE($3, $slot_addr, $i$01);
    $47 = HEAP32[$26 >> 2] | 0;
    if ($47 | 0) FUNCTION_TABLE_viii[$47 & 7](HEAP32[$30 >> 2] | 0, $29, 0);
   }
  }
  $i$01 = $i$01 + 1 | 0;
 } while (($i$01 | 0) < 8);
 if ((label | 0) == 15) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 __ZN5ImGui8EndPopupEv();
 __ZN5ImGui5PopIDEv();
 STACKTOP = sp;
 return;
}

function __ZN10ImDrawList9PathArcToERK6ImVec2fffi($this, $centre, $radius, $amin, $amax, $num_segments) {
 $this = $this | 0;
 $centre = $centre | 0;
 $radius = +$radius;
 $amin = +$amin;
 $amax = +$amax;
 $num_segments = $num_segments | 0;
 var $$pre$phi7Z2D = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $2 = 0, $22 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $37 = 0, $38 = 0, $39 = 0, $42 = 0, $43 = 0, $49 = 0.0, $50 = 0.0, $51 = 0, $52 = 0, $56 = 0.0, $6 = 0, $60 = 0.0, $64 = 0.0, $65 = 0, $67 = 0, $68 = 0, $73 = 0, $74 = 0, $77 = 0, $83 = 0, $84 = 0, $87 = 0, $88 = 0, $i$04 = 0;
 $1 = $this + 76 | 0;
 if ($radius == 0.0) {
  $2 = HEAP32[$1 >> 2] | 0;
  $3 = $this + 80 | 0;
  if (($2 | 0) == (HEAP32[$3 >> 2] | 0)) {
   $6 = $2 + 1 | 0;
   if (!$2) $11 = 8; else $11 = (($2 | 0) / 2 | 0) + $2 | 0;
   $12 = ($11 | 0) > ($6 | 0) ? $11 : $6;
   if (($2 | 0) < ($12 | 0)) {
    $15 = __ZN5ImGui8MemAllocEj($12 << 3) | 0;
    $16 = $this + 84 | 0;
    _memcpy($15 | 0, HEAP32[$16 >> 2] | 0, HEAP32[$1 >> 2] << 3 | 0) | 0;
    __ZN5ImGui7MemFreeEPv(HEAP32[$16 >> 2] | 0);
    HEAP32[$16 >> 2] = $15;
    HEAP32[$3 >> 2] = $12;
    $22 = HEAP32[$1 >> 2] | 0;
   } else $22 = $2;
  } else $22 = $2;
  HEAP32[$1 >> 2] = $22 + 1;
  $26 = $centre;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = (HEAP32[$this + 84 >> 2] | 0) + ($22 << 3) | 0;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  $$pre$phi7Z2D = $3;
 } else $$pre$phi7Z2D = $this + 80 | 0;
 $37 = $num_segments + 1 | 0;
 $38 = $37 + (HEAP32[$1 >> 2] | 0) | 0;
 $39 = HEAP32[$$pre$phi7Z2D >> 2] | 0;
 if (($39 | 0) < ($38 | 0)) {
  $42 = __ZN5ImGui8MemAllocEj($38 << 3) | 0;
  $43 = $this + 84 | 0;
  _memcpy($42 | 0, HEAP32[$43 >> 2] | 0, HEAP32[$1 >> 2] << 3 | 0) | 0;
  __ZN5ImGui7MemFreeEPv(HEAP32[$43 >> 2] | 0);
  HEAP32[$43 >> 2] = $42;
  HEAP32[$$pre$phi7Z2D >> 2] = $38;
  $88 = $38;
 } else $88 = $39;
 if (($num_segments | 0) < 0) return;
 $49 = +($num_segments | 0);
 $50 = $amax - $amin;
 $51 = $centre + 4 | 0;
 $52 = $this + 84 | 0;
 $67 = $88;
 $i$04 = 0;
 while (1) {
  $56 = $50 * (+($i$04 | 0) / $49) + $amin;
  $60 = +HEAPF32[$centre >> 2] + +Math_cos(+$56) * $radius;
  $64 = +HEAPF32[$51 >> 2] + +Math_sin(+$56) * $radius;
  $65 = HEAP32[$1 >> 2] | 0;
  if (($65 | 0) == ($67 | 0)) {
   $68 = $67 + 1 | 0;
   if (!$67) $73 = 8; else $73 = (($67 | 0) / 2 | 0) + $67 | 0;
   $74 = ($73 | 0) > ($68 | 0) ? $73 : $68;
   if (($67 | 0) < ($74 | 0)) {
    $77 = __ZN5ImGui8MemAllocEj($74 << 3) | 0;
    _memcpy($77 | 0, HEAP32[$52 >> 2] | 0, HEAP32[$1 >> 2] << 3 | 0) | 0;
    __ZN5ImGui7MemFreeEPv(HEAP32[$52 >> 2] | 0);
    HEAP32[$52 >> 2] = $77;
    HEAP32[$$pre$phi7Z2D >> 2] = $74;
    $83 = HEAP32[$1 >> 2] | 0;
   } else $83 = $67;
  } else $83 = $65;
  HEAP32[$1 >> 2] = $83 + 1;
  $84 = HEAP32[$52 >> 2] | 0;
  HEAPF32[$84 + ($83 << 3) >> 2] = $60;
  HEAPF32[$84 + ($83 << 3) + 4 >> 2] = $64;
  $87 = $i$04 + 1 | 0;
  if (($87 | 0) == ($37 | 0)) break;
  $67 = HEAP32[$$pre$phi7Z2D >> 2] | 0;
  $i$04 = $87;
 }
 return;
}

function __ZN5Oryol10IMUIShader5SetupEv($agg$result) {
 $agg$result = $agg$result | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $IMUITextures_tblayout = 0, $VSParams_ublayout = 0, $vsIMUI_layout = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 624 | 0;
 $0 = sp + 536 | 0;
 $vsIMUI_layout = sp + 544 | 0;
 $1 = sp + 528 | 0;
 $2 = sp + 320 | 0;
 $3 = sp + 312 | 0;
 $4 = sp + 304 | 0;
 $5 = sp + 296 | 0;
 $6 = sp + 288 | 0;
 $VSParams_ublayout = sp;
 $7 = sp + 284 | 0;
 $8 = sp + 280 | 0;
 $IMUITextures_tblayout = sp + 328 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 __ZN5Oryol7LocatorC2EPKc($0, 84284);
 __ZN5Oryol11ShaderSetupC2ERKNS_7LocatorE($agg$result, $0);
 HEAP32[$0 >> 2] = 0;
 __ZN5Oryol12VertexLayoutC2Ev($vsIMUI_layout);
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($vsIMUI_layout, 0, 3) | 0;
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($vsIMUI_layout, 2, 1) | 0;
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($vsIMUI_layout, 10, 3) | 0;
 __ZN5Oryol6StringC2EPKc($1, 81266);
 __ZN5Oryol6StringC2EPKc($2, 81812);
 __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($agg$result, 0, $vsIMUI_layout, $1, $2);
 __ZN5Oryol6StringD2Ev($2);
 __ZN5Oryol6StringD2Ev($1);
 __ZN5Oryol6StringC2EPKc($3, 82284);
 __ZN5Oryol6StringC2EPKc($4, 82843);
 __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($agg$result, 1, $vsIMUI_layout, $3, $4);
 __ZN5Oryol6StringD2Ev($4);
 __ZN5Oryol6StringD2Ev($3);
 __ZN5Oryol6StringC2EPKc($5, 83303);
 __ZN5Oryol6StringC2EPKc($6, 83823);
 __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($agg$result, 2, $vsIMUI_layout, $5, $6);
 __ZN5Oryol6StringD2Ev($6);
 __ZN5Oryol6StringD2Ev($5);
 __ZN5Oryol18UniformBlockLayoutC2Ev($VSParams_ublayout);
 $11 = $VSParams_ublayout;
 HEAP32[$11 >> 2] = 1254626822;
 HEAP32[$11 + 4 >> 2] = 1855796075;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($7, 84295);
 __ZN5Oryol18UniformBlockLayout3AddERKNS_10StringAtomENS_11UniformType4CodeE($VSParams_ublayout, $7, 6) | 0;
 HEAP32[$7 >> 2] = 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($8, 84301);
 __ZN5Oryol11ShaderSetup15AddUniformBlockERKNS_10StringAtomERKNS_18UniformBlockLayoutENS_11ShaderStage4CodeEi($agg$result, $8, $VSParams_ublayout, 0, 0);
 HEAP32[$8 >> 2] = 0;
 __ZN5Oryol18TextureBlockLayoutC2Ev($IMUITextures_tblayout);
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($9, 84310);
 __ZN5Oryol18TextureBlockLayout3AddERKNS_10StringAtomENS_11TextureType4CodeEi($IMUITextures_tblayout, $9, 0, 0) | 0;
 HEAP32[$9 >> 2] = 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($10, 84314);
 __ZN5Oryol11ShaderSetup15AddTextureBlockERKNS_10StringAtomERKNS_18TextureBlockLayoutENS_11ShaderStage4CodeE($agg$result, $10, $IMUITextures_tblayout, 1);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glPipelineC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $7 = 0, $8 = 0, $9 = 0;
 $0 = $this;
 HEAP32[$0 >> 2] = -1;
 HEAP32[$0 + 4 >> 2] = -1;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol13PipelineSetupC2Ev($this + 16 | 0);
 $7 = $this + 344 | 0;
 $8 = $this + 356 | 0;
 $9 = $this + 372 | 0;
 $10 = $this + 388 | 0;
 $11 = $this + 404 | 0;
 $12 = $this + 420 | 0;
 $13 = $this + 436 | 0;
 $14 = $this + 452 | 0;
 $15 = $this + 468 | 0;
 $16 = $this + 484 | 0;
 $17 = $this + 500 | 0;
 $18 = $this + 516 | 0;
 $19 = $this + 532 | 0;
 $20 = $this + 548 | 0;
 $21 = $this + 564 | 0;
 $22 = $this + 580 | 0;
 HEAP32[$this + 596 >> 2] = 0;
 HEAP32[$this + 600 >> 2] = 0;
 HEAP32[$this + 604 >> 2] = 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP16[$7 + 8 >> 1] = 0;
 HEAP8[$7 + 10 >> 0] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 HEAP16[$8 + 12 >> 1] = 0;
 HEAP8[$8 + 14 >> 0] = 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 HEAP16[$9 + 12 >> 1] = 0;
 HEAP8[$9 + 14 >> 0] = 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP16[$10 + 12 >> 1] = 0;
 HEAP8[$10 + 14 >> 0] = 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP16[$11 + 12 >> 1] = 0;
 HEAP8[$11 + 14 >> 0] = 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 HEAP16[$12 + 12 >> 1] = 0;
 HEAP8[$12 + 14 >> 0] = 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP16[$13 + 12 >> 1] = 0;
 HEAP8[$13 + 14 >> 0] = 0;
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 HEAP16[$14 + 12 >> 1] = 0;
 HEAP8[$14 + 14 >> 0] = 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP16[$15 + 12 >> 1] = 0;
 HEAP8[$15 + 14 >> 0] = 0;
 HEAP32[$16 >> 2] = 0;
 HEAP32[$16 + 4 >> 2] = 0;
 HEAP32[$16 + 8 >> 2] = 0;
 HEAP16[$16 + 12 >> 1] = 0;
 HEAP8[$16 + 14 >> 0] = 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP16[$17 + 12 >> 1] = 0;
 HEAP8[$17 + 14 >> 0] = 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$18 + 4 >> 2] = 0;
 HEAP32[$18 + 8 >> 2] = 0;
 HEAP16[$18 + 12 >> 1] = 0;
 HEAP8[$18 + 14 >> 0] = 0;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 HEAP16[$19 + 12 >> 1] = 0;
 HEAP8[$19 + 14 >> 0] = 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 HEAP16[$20 + 12 >> 1] = 0;
 HEAP8[$20 + 14 >> 0] = 0;
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 HEAP16[$21 + 12 >> 1] = 0;
 HEAP8[$21 + 14 >> 0] = 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 HEAP16[$22 + 12 >> 1] = 0;
 HEAP8[$22 + 14 >> 0] = 0;
 return;
}

function __ZN13CommandWindow4scanERKN4yakc4kc85Eh($this, $kc, $prologByte) {
 $this = $this | 0;
 $kc = $kc | 0;
 $prologByte = $prologByte | 0;
 var $$lcssa = 0, $$lcssa12 = 0, $$lcssa13 = 0, $$pre$phi4$i$iZ2D = 0, $$pre2$i$i = 0, $0 = 0, $1 = 0, $13 = 0, $2 = 0, $20 = 0, $30 = 0, $31 = 0, $38 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $51 = 0, $56 = 0, $58 = 0, $9 = 0, $addr = 0, $prevByte$02 = 0, $storemerge1 = 0, $strBuilder = 0, sp = 0, $prevByte$02$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $strBuilder = sp + 12 | 0;
 $addr = sp + 8 | 0;
 $0 = sp;
 __ZN5Oryol13StringBuilderC2Ev($strBuilder);
 $1 = $this + 36 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $$pre2$i$i = $this + 44 | 0;
 if (!$2) $$pre$phi4$i$iZ2D = $this + 48 | 0; else {
  $4 = HEAP32[$$pre2$i$i >> 2] | 0;
  $5 = $this + 48 | 0;
  if (($4 | 0) < (HEAP32[$5 >> 2] | 0)) {
   __ZN5Oryol6StringD2Ev($2 + ($4 * 12 | 0) | 0);
   $9 = $4 + 1 | 0;
   if (($9 | 0) < (HEAP32[$5 >> 2] | 0)) {
    $13 = $9;
    do {
     __ZN5Oryol6StringD2Ev((HEAP32[$1 >> 2] | 0) + ($13 * 12 | 0) | 0);
     $13 = $13 + 1 | 0;
    } while (($13 | 0) < (HEAP32[$5 >> 2] | 0));
    $$pre$phi4$i$iZ2D = $5;
   } else $$pre$phi4$i$iZ2D = $5;
  } else $$pre$phi4$i$iZ2D = $5;
 }
 HEAP32[$$pre$phi4$i$iZ2D >> 2] = HEAP32[$$pre2$i$i >> 2];
 $20 = HEAP8[HEAP32[$kc + 66932 >> 2] >> 0] | 0;
 HEAP32[$addr >> 2] = 1;
 $prevByte$02 = $20;
 $storemerge1 = 1;
 do {
  $prevByte$02$looptemp = $prevByte$02;
  $prevByte$02 = HEAP8[(HEAP32[$kc + 66932 + (($storemerge1 >>> 11 & 31) << 3) >> 2] | 0) + ($storemerge1 & 2047) >> 0] | 0;
  if ($prevByte$02$looptemp << 24 >> 24 == $prologByte << 24 >> 24 ? $prevByte$02 << 24 >> 24 == $prologByte << 24 >> 24 : 0) {
   $30 = $storemerge1 + 1 | 0;
   $31 = $storemerge1 + 2 | 0;
   HEAP32[$addr >> 2] = $31;
   $38 = HEAP8[(HEAP32[$kc + 66932 + (($30 >>> 11 & 31) << 3) >> 2] | 0) + ($30 & 2047) >> 0] | 0;
   if (!(_isalnum($38 & 255) | 0)) {
    $$lcssa = $38;
    $58 = $31;
   } else {
    $42 = $38;
    $44 = $31;
    while (1) {
     __ZN5Oryol13StringBuilder6AppendEc($strBuilder, $42);
     $43 = $44 + 1 | 0;
     $51 = HEAP8[(HEAP32[$kc + 66932 + (($44 >>> 11 & 31) << 3) >> 2] | 0) + ($44 & 2047) >> 0] | 0;
     if (!(_isalnum($51 & 255) | 0)) {
      $$lcssa12 = $43;
      $$lcssa13 = $51;
      break;
     } else {
      $42 = $51;
      $44 = $43;
     }
    }
    HEAP32[$addr >> 2] = $$lcssa12;
    $$lcssa = $$lcssa13;
    $58 = $$lcssa12;
   }
   if (($$lcssa & 255) < 2) {
    __ZNK5Oryol13StringBuilder9GetStringEv($0, $strBuilder);
    __ZN5Oryol5ArrayIN13CommandWindow3CmdEE3AddIJNS_6StringERjEEEvDpOT_($1, $0, $addr);
    __ZN5Oryol6StringD2Ev($0);
   }
   __ZN5Oryol13StringBuilder5ClearEv($strBuilder);
   $56 = $58;
  } else $56 = $storemerge1;
  $storemerge1 = $56 + 1 | 0;
  HEAP32[$addr >> 2] = $storemerge1;
 } while ($storemerge1 >>> 0 < 65536);
 __ZN5Oryol13StringBuilderD2Ev($strBuilder);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8Touchpad10onPinchingERKN3glm5tvec2IfLNS1_9precisionE0EEES6_S6_S6_($this, $p0, $p1, $s0, $s1) {
 $this = $this | 0;
 $p0 = $p0 | 0;
 $p1 = $p1 | 0;
 $s0 = $s0 | 0;
 $s1 = $s1 | 0;
 var $1 = 0, $10 = 0.0, $100 = 0, $105 = 0, $110 = 0, $115 = 0, $117 = 0, $12 = 0, $120 = 0, $2 = 0, $20 = 0.0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $33 = 0, $35 = 0, $38 = 0, $39 = 0, $44 = 0, $46 = 0, $49 = 0, $50 = 0, $55 = 0, $57 = 0, $60 = 0, $61 = 0, $66 = 0, $68 = 0, $72 = 0, $77 = 0, $82 = 0, $87 = 0, $88 = 0, $94 = 0, $99 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 7 >> 0] = 1;
 $1 = $this + 28 | 0;
 $2 = $this + 12 | 0;
 $10 = +HEAPF32[$p0 + 4 >> 2] - +HEAPF32[$this + 16 >> 2];
 HEAPF32[$1 >> 2] = +HEAPF32[$p0 >> 2] - +HEAPF32[$2 >> 2];
 HEAPF32[$this + 32 >> 2] = $10;
 $12 = $this + 20 | 0;
 $20 = +HEAPF32[$p1 + 4 >> 2] - +HEAPF32[$this + 24 >> 2];
 HEAPF32[$this + 36 >> 2] = +HEAPF32[$p1 >> 2] - +HEAPF32[$12 >> 2];
 HEAPF32[$this + 40 >> 2] = $20;
 $23 = $p0;
 $25 = HEAP32[$23 >> 2] | 0;
 $28 = HEAP32[$23 + 4 >> 2] | 0;
 $29 = $2;
 HEAP32[$29 >> 2] = $25;
 HEAP32[$29 + 4 >> 2] = $28;
 $33 = $p1;
 $35 = HEAP32[$33 >> 2] | 0;
 $38 = HEAP32[$33 + 4 >> 2] | 0;
 $39 = $12;
 HEAP32[$39 >> 2] = $35;
 HEAP32[$39 + 4 >> 2] = $38;
 $44 = $s0;
 $46 = HEAP32[$44 >> 2] | 0;
 $49 = HEAP32[$44 + 4 >> 2] | 0;
 $50 = $this + 44 | 0;
 HEAP32[$50 >> 2] = $46;
 HEAP32[$50 + 4 >> 2] = $49;
 $55 = $s1;
 $57 = HEAP32[$55 >> 2] | 0;
 $60 = HEAP32[$55 + 4 >> 2] | 0;
 $61 = $this + 52 | 0;
 HEAP32[$61 >> 2] = $57;
 HEAP32[$61 + 4 >> 2] = $60;
 $66 = HEAP32[$this + 76 >> 2] | 0;
 $68 = HEAP32[$this + 72 >> 2] | 0;
 if (($66 | 0) == ($68 | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $event + 4 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$event >> 2] = 7;
 $72 = $event + 4 | 0;
 HEAP32[$72 >> 2] = $25;
 HEAP32[$72 + 4 >> 2] = $28;
 $77 = $event + 12 | 0;
 HEAP32[$77 >> 2] = $35;
 HEAP32[$77 + 4 >> 2] = $38;
 $82 = $1;
 $87 = HEAP32[$82 + 4 >> 2] | 0;
 $88 = $event + 36 | 0;
 HEAP32[$88 >> 2] = HEAP32[$82 >> 2];
 HEAP32[$88 + 4 >> 2] = $87;
 $94 = $this + 36 | 0;
 $99 = HEAP32[$94 + 4 >> 2] | 0;
 $100 = $event + 44 | 0;
 HEAP32[$100 >> 2] = HEAP32[$94 >> 2];
 HEAP32[$100 + 4 >> 2] = $99;
 $105 = $event + 20 | 0;
 HEAP32[$105 >> 2] = $46;
 HEAP32[$105 + 4 >> 2] = $49;
 $110 = $event + 28 | 0;
 HEAP32[$110 >> 2] = $57;
 HEAP32[$110 + 4 >> 2] = $60;
 $115 = HEAP32[$this + 64 >> 2] | 0;
 if ($115 | 0) {
  $117 = $115 + ($66 << 5) | 0;
  $__begin$03$i = $115 + ($68 << 5) | 0;
  do {
   $120 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$120 >> 2] | 0) + 24 >> 2] & 63]($120, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($117 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN5ImGui9IsHoveredERK6ImRectjb($bb, $id, $flatten_childs) {
 $bb = $bb | 0;
 $id = $id | 0;
 $flatten_childs = $flatten_childs | 0;
 var $$1 = 0, $$idx2$val$i = 0.0, $$idx3$val$i = 0.0, $1 = 0, $18 = 0, $25 = 0, $27 = 0, $28 = 0, $30 = 0, $33 = 0.0, $34 = 0, $37 = 0.0, $39 = 0.0, $41 = 0.0, $45 = 0.0, $48 = 0, $51 = 0, $54 = 0, $57 = 0.0, $59 = 0.0, $63 = 0.0, $68 = 0, $70 = 0, $73 = 0, $8 = 0, $rect_clipped$sroa$10$0$i = 0, $rect_clipped$sroa$14$1$i = 0, $rect_clipped$sroa$6$0$i = 0;
 $1 = HEAP32[38208] | 0;
 if (!(($1 | 0) == 0 | ($1 | 0) == ($id | 0))) if (!(HEAP8[152836] | 0)) {
  $$1 = 0;
  return $$1 | 0;
 }
 $8 = HEAP32[38201] | 0;
 if ((HEAP32[38206] | 0) != ($8 | 0)) {
  if (!$flatten_childs) {
   $$1 = 0;
   return $$1 | 0;
  }
  if ((HEAP32[38207] | 0) != (HEAP32[$8 + 576 >> 2] | 0)) {
   $$1 = 0;
   return $$1 | 0;
  }
 }
 $18 = HEAP32[38211] | 0;
 if (!(($18 | 0) == 0 | ($18 | 0) == ($id | 0))) if (!(HEAP8[152854] | 0)) {
  $$1 = 0;
  return $$1 | 0;
 }
 $25 = HEAP32[$bb >> 2] | 0;
 $27 = HEAP32[$bb + 4 >> 2] | 0;
 $28 = HEAP32[$bb + 8 >> 2] | 0;
 $30 = HEAP32[$bb + 12 >> 2] | 0;
 $33 = +HEAPF32[$8 + 436 >> 2];
 $34 = (HEAP32[tempDoublePtr >> 2] = $25, +HEAPF32[tempDoublePtr >> 2]) < $33;
 $37 = +HEAPF32[$8 + 440 >> 2];
 $39 = +HEAPF32[$8 + 444 >> 2];
 $41 = +HEAPF32[$8 + 448 >> 2];
 $$idx2$val$i = +HEAPF32[37999];
 $$idx3$val$i = +HEAPF32[38e3];
 $45 = +HEAPF32[36771];
 if (!($45 >= (HEAP32[tempDoublePtr >> 2] = $34 ? (HEAPF32[tempDoublePtr >> 2] = $33, HEAP32[tempDoublePtr >> 2] | 0) : $25, +HEAPF32[tempDoublePtr >> 2]) - $$idx2$val$i)) {
  $$1 = 0;
  return $$1 | 0;
 }
 $48 = (HEAP32[tempDoublePtr >> 2] = $30, +HEAPF32[tempDoublePtr >> 2]) > $41;
 $rect_clipped$sroa$14$1$i = $48 ? (HEAPF32[tempDoublePtr >> 2] = $41, HEAP32[tempDoublePtr >> 2] | 0) : $30;
 $51 = (HEAP32[tempDoublePtr >> 2] = $28, +HEAPF32[tempDoublePtr >> 2]) > $39;
 $rect_clipped$sroa$10$0$i = $51 ? (HEAPF32[tempDoublePtr >> 2] = $39, HEAP32[tempDoublePtr >> 2] | 0) : $28;
 $54 = (HEAP32[tempDoublePtr >> 2] = $27, +HEAPF32[tempDoublePtr >> 2]) < $37;
 $rect_clipped$sroa$6$0$i = $54 ? (HEAPF32[tempDoublePtr >> 2] = $37, HEAP32[tempDoublePtr >> 2] | 0) : $27;
 $57 = $$idx3$val$i + (HEAP32[tempDoublePtr >> 2] = $rect_clipped$sroa$14$1$i, +HEAPF32[tempDoublePtr >> 2]);
 $59 = $$idx2$val$i + (HEAP32[tempDoublePtr >> 2] = $rect_clipped$sroa$10$0$i, +HEAPF32[tempDoublePtr >> 2]);
 $63 = +HEAPF32[36772];
 if (!($63 < $57 & ($45 < $59 & $63 >= (HEAP32[tempDoublePtr >> 2] = $rect_clipped$sroa$6$0$i, +HEAPF32[tempDoublePtr >> 2]) - $$idx3$val$i))) {
  $$1 = 0;
  return $$1 | 0;
 }
 $68 = HEAP32[38207] | 0;
 $70 = HEAP32[38205] | 0;
 if ($70 | 0) {
  $73 = HEAP32[$70 + 576 >> 2] | 0;
  if ($73 | 0) if (HEAP32[$73 + 8 >> 2] & 33554432 | 0) if (HEAP8[$73 + 113 >> 0] | 0) if (($73 | 0) != (HEAP32[$68 + 576 >> 2] | 0)) {
   $$1 = 0;
   return $$1 | 0;
  }
 }
 $$1 = 1;
 return $$1 | 0;
}

function __ZN5Oryol5_priv10glPipeline5ClearEv($this) {
 $this = $this | 0;
 var $$sroa$0 = 0, $1 = 0, $105 = 0, $112 = 0, $117 = 0, $118 = 0, $14 = 0, $21 = 0, $28 = 0, $3 = 0, $35 = 0, $42 = 0, $49 = 0, $56 = 0, $6 = 0, $63 = 0, $7 = 0, $70 = 0, $77 = 0, $84 = 0, $91 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $$sroa$0 = sp;
 HEAP32[$$sroa$0 >> 2] = 0;
 HEAP16[$$sroa$0 + 4 >> 1] = 0;
 HEAP8[$$sroa$0 + 6 >> 0] = 0;
 $1 = $$sroa$0;
 $3 = HEAP32[$1 >> 2] | 0;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $this + 348 | 0;
 HEAP32[$7 >> 2] = $3;
 HEAP32[$7 + 4 >> 2] = $6;
 HEAP32[$this + 356 >> 2] = 0;
 HEAP32[$this + 360 >> 2] = 0;
 $14 = $this + 364 | 0;
 HEAP32[$14 >> 2] = $3;
 HEAP32[$14 + 4 >> 2] = $6;
 HEAP32[$this + 372 >> 2] = 0;
 HEAP32[$this + 376 >> 2] = 0;
 $21 = $this + 380 | 0;
 HEAP32[$21 >> 2] = $3;
 HEAP32[$21 + 4 >> 2] = $6;
 HEAP32[$this + 388 >> 2] = 0;
 HEAP32[$this + 392 >> 2] = 0;
 $28 = $this + 396 | 0;
 HEAP32[$28 >> 2] = $3;
 HEAP32[$28 + 4 >> 2] = $6;
 HEAP32[$this + 404 >> 2] = 0;
 HEAP32[$this + 408 >> 2] = 0;
 $35 = $this + 412 | 0;
 HEAP32[$35 >> 2] = $3;
 HEAP32[$35 + 4 >> 2] = $6;
 HEAP32[$this + 420 >> 2] = 0;
 HEAP32[$this + 424 >> 2] = 0;
 $42 = $this + 428 | 0;
 HEAP32[$42 >> 2] = $3;
 HEAP32[$42 + 4 >> 2] = $6;
 HEAP32[$this + 436 >> 2] = 0;
 HEAP32[$this + 440 >> 2] = 0;
 $49 = $this + 444 | 0;
 HEAP32[$49 >> 2] = $3;
 HEAP32[$49 + 4 >> 2] = $6;
 HEAP32[$this + 452 >> 2] = 0;
 HEAP32[$this + 456 >> 2] = 0;
 $56 = $this + 460 | 0;
 HEAP32[$56 >> 2] = $3;
 HEAP32[$56 + 4 >> 2] = $6;
 HEAP32[$this + 468 >> 2] = 0;
 HEAP32[$this + 472 >> 2] = 0;
 $63 = $this + 476 | 0;
 HEAP32[$63 >> 2] = $3;
 HEAP32[$63 + 4 >> 2] = $6;
 HEAP32[$this + 484 >> 2] = 0;
 HEAP32[$this + 488 >> 2] = 0;
 $70 = $this + 492 | 0;
 HEAP32[$70 >> 2] = $3;
 HEAP32[$70 + 4 >> 2] = $6;
 HEAP32[$this + 500 >> 2] = 0;
 HEAP32[$this + 504 >> 2] = 0;
 $77 = $this + 508 | 0;
 HEAP32[$77 >> 2] = $3;
 HEAP32[$77 + 4 >> 2] = $6;
 HEAP32[$this + 516 >> 2] = 0;
 HEAP32[$this + 520 >> 2] = 0;
 $84 = $this + 524 | 0;
 HEAP32[$84 >> 2] = $3;
 HEAP32[$84 + 4 >> 2] = $6;
 HEAP32[$this + 532 >> 2] = 0;
 HEAP32[$this + 536 >> 2] = 0;
 $91 = $this + 540 | 0;
 HEAP32[$91 >> 2] = $3;
 HEAP32[$91 + 4 >> 2] = $6;
 HEAP32[$this + 548 >> 2] = 0;
 HEAP32[$this + 552 >> 2] = 0;
 $98 = $this + 556 | 0;
 HEAP32[$98 >> 2] = $3;
 HEAP32[$98 + 4 >> 2] = $6;
 HEAP32[$this + 564 >> 2] = 0;
 HEAP32[$this + 568 >> 2] = 0;
 $105 = $this + 572 | 0;
 HEAP32[$105 >> 2] = $3;
 HEAP32[$105 + 4 >> 2] = $6;
 HEAP32[$this + 580 >> 2] = 0;
 HEAP32[$this + 584 >> 2] = 0;
 $112 = $$sroa$0;
 $117 = HEAP32[$112 + 4 >> 2] | 0;
 $118 = $this + 588 | 0;
 HEAP32[$118 >> 2] = HEAP32[$112 >> 2];
 HEAP32[$118 + 4 >> 2] = $117;
 HEAP32[$this + 596 >> 2] = 0;
 HEAP32[$this + 600 >> 2] = 0;
 HEAP32[$this + 604 >> 2] = 0;
 __ZN5Oryol5_priv12pipelineBase5ClearEv($this);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol7RunLoopD2Ev($this) {
 $this = $this | 0;
 var $$pre4$i$i$i = 0, $$pre4$i$i$i1 = 0, $$pre5$i$i2$pre$phi$i13ZZZZ2D = 0, $$pre5$i$i2$pre$phi$iZZZZ2D = 0, $0 = 0, $10 = 0, $11 = 0, $14 = 0, $16 = 0, $18 = 0, $27 = 0, $3 = 0, $31 = 0, $34 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $44 = 0, $5 = 0, $53 = 0, $56 = 0, $8 = 0, $i$01$i$i$i = 0, $i$01$i$i$i8 = 0;
 $0 = $this + 60 | 0;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP32[$this + 80 >> 2] = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 if ($3 | 0) __ZN5Oryol6Memory4FreeEPv($3);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 $5 = $this + 32 | 0;
 HEAP32[$this + 48 >> 2] = 0;
 HEAP32[$this + 52 >> 2] = 0;
 $8 = HEAP32[$5 >> 2] | 0;
 $$pre4$i$i$i = $this + 40 | 0;
 if (!$8) $$pre5$i$i2$pre$phi$iZZZZ2D = $this + 44 | 0; else {
  $10 = HEAP32[$$pre4$i$i$i >> 2] | 0;
  $11 = $this + 44 | 0;
  if (($10 | 0) < (HEAP32[$11 >> 2] | 0)) {
   $16 = $8;
   $i$01$i$i$i = $10;
   while (1) {
    $18 = HEAP32[$16 + ($i$01$i$i$i * 40 | 0) + 24 >> 2] | 0;
    if (($18 | 0) == ($16 + ($i$01$i$i$i * 40 | 0) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$18 >> 2] | 0) + 16 >> 2] & 255]($18); else if ($18 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$18 >> 2] | 0) + 20 >> 2] & 255]($18);
    $27 = $i$01$i$i$i + 1 | 0;
    if (($27 | 0) >= (HEAP32[$11 >> 2] | 0)) break;
    $16 = HEAP32[$5 >> 2] | 0;
    $i$01$i$i$i = $27;
   }
   $14 = HEAP32[$5 >> 2] | 0;
  } else $14 = $8;
  __ZN5Oryol6Memory4FreeEPv($14);
  $$pre5$i$i2$pre$phi$iZZZZ2D = $11;
 }
 HEAP32[$5 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$$pre4$i$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
 $31 = $this + 4 | 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 $34 = HEAP32[$31 >> 2] | 0;
 $$pre4$i$i$i1 = $this + 12 | 0;
 if (!$34) {
  $$pre5$i$i2$pre$phi$i13ZZZZ2D = $this + 16 | 0;
  $56 = $this + 8 | 0;
  HEAP32[$31 >> 2] = 0;
  HEAP32[$56 >> 2] = 0;
  HEAP32[$$pre4$i$i$i1 >> 2] = 0;
  HEAP32[$$pre5$i$i2$pre$phi$i13ZZZZ2D >> 2] = 0;
  return;
 }
 $36 = HEAP32[$$pre4$i$i$i1 >> 2] | 0;
 $37 = $this + 16 | 0;
 if (($36 | 0) < (HEAP32[$37 >> 2] | 0)) {
  $42 = $34;
  $i$01$i$i$i8 = $36;
  while (1) {
   $44 = HEAP32[$42 + ($i$01$i$i$i8 * 40 | 0) + 24 >> 2] | 0;
   if (($44 | 0) == ($42 + ($i$01$i$i$i8 * 40 | 0) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$44 >> 2] | 0) + 16 >> 2] & 255]($44); else if ($44 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$44 >> 2] | 0) + 20 >> 2] & 255]($44);
   $53 = $i$01$i$i$i8 + 1 | 0;
   if (($53 | 0) >= (HEAP32[$37 >> 2] | 0)) break;
   $42 = HEAP32[$31 >> 2] | 0;
   $i$01$i$i$i8 = $53;
  }
  $40 = HEAP32[$31 >> 2] | 0;
 } else $40 = $34;
 __ZN5Oryol6Memory4FreeEPv($40);
 $$pre5$i$i2$pre$phi$i13ZZZZ2D = $37;
 $56 = $this + 8 | 0;
 HEAP32[$31 >> 2] = 0;
 HEAP32[$56 >> 2] = 0;
 HEAP32[$$pre4$i$i$i1 >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i13ZZZZ2D >> 2] = 0;
 return;
}

function __ZL12BeginPopupExPKci($str_id, $extra_flags) {
 $str_id = $str_id | 0;
 $extra_flags = $extra_flags | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $11 = 0, $19 = 0, $2 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $48 = 0, $49 = 0, $53 = 0, $55 = 0, $61 = 0, $63 = 0, $73 = 0, $79 = 0, $name = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $name = sp + 24 | 0;
 $0 = sp + 16 | 0;
 $1 = 152804;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP32[$2 + 424 >> 2] | 0;
 if (($4 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $11 = __Z6ImHashPKvij($str_id, 0, HEAP32[(HEAP32[$2 + 432 >> 2] | 0) + ($4 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($11 | 0)) HEAP8[152852] = 1;
 $19 = HEAP32[38232] | 0;
 if ((HEAP32[38229] | 0) > ($19 | 0)) if ((HEAP32[(HEAP32[38231] | 0) + ($19 * 24 | 0) >> 2] | 0) == ($11 | 0)) {
  $27 = 151956;
  $28 = HEAP32[$27 >> 2] | 0;
  $29 = 152892;
  $30 = HEAP32[$29 >> 2] | 0;
  $31 = 152896;
  if (($30 | 0) == (HEAP32[$31 >> 2] | 0)) {
   $34 = $30 + 1 | 0;
   if (!$30) $39 = 8; else $39 = (($30 | 0) / 2 | 0) + $30 | 0;
   $40 = ($39 | 0) > ($34 | 0) ? $39 : $34;
   if (($30 | 0) < ($40 | 0)) {
    $43 = 147664;
    HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 1;
    $48 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($40 * 12 | 0) | 0;
    $49 = 152900;
    _memcpy($48 | 0, HEAP32[$49 >> 2] | 0, (HEAP32[$29 >> 2] | 0) * 12 | 0) | 0;
    $53 = HEAP32[$49 >> 2] | 0;
    if ($53 | 0) {
     $55 = 147664;
     HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + -1;
    }
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($53);
    HEAP32[$49 >> 2] = $48;
    HEAP32[$31 >> 2] = $40;
    $61 = HEAP32[$29 >> 2] | 0;
   } else $61 = $30;
  } else $61 = $30;
  HEAP32[$29 >> 2] = $61 + 1;
  $63 = HEAP32[38225] | 0;
  HEAP32[$63 + ($61 * 12 | 0) >> 2] = 2;
  HEAP32[$63 + ($61 * 12 | 0) + 4 >> 2] = $28;
  HEAP32[$63 + ($61 * 12 | 0) + 8 >> 2] = 0;
  HEAPF32[$27 >> 2] = 0.0;
  if (!($extra_flags & 134217728)) {
   HEAP32[$vararg_buffer1 >> 2] = $11;
   __Z14ImFormatStringPciPKcz($name, 20, 126672, $vararg_buffer1) | 0;
  } else {
   HEAP32[$vararg_buffer >> 2] = HEAP32[38232];
   __Z14ImFormatStringPciPKcz($name, 20, 126662, $vararg_buffer) | 0;
  }
  HEAPF32[$0 >> 2] = 0.0;
  HEAPF32[$0 + 4 >> 2] = 0.0;
  $73 = __ZN5ImGui5BeginEPKcPbRK6ImVec2fi($name, 0, $0, 1.0, $extra_flags | 33554759) | 0;
  if (!(HEAP32[$2 + 8 >> 2] & 128)) {
   $79 = (HEAP32[$1 >> 2] | 0) + 8 | 0;
   HEAP32[$79 >> 2] = HEAP32[$79 >> 2] & -129;
  }
  if (!$73) __ZN5ImGui8EndPopupEv();
  $$0 = $73;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $26 = 152968;
 HEAP32[$26 >> 2] = 0;
 HEAP32[$26 + 4 >> 2] = 0;
 HEAP32[$26 + 8 >> 2] = 0;
 HEAP32[$26 + 12 >> 2] = 0;
 HEAP8[$26 + 16 >> 0] = 0;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZL24InputTextFilterCharacterPjiPFiP25ImGuiTextEditCallbackDataEPv($p_char, $flags, $callback, $user_data) {
 $p_char = $p_char | 0;
 $flags = $flags | 0;
 $callback = $callback | 0;
 $user_data = $user_data | 0;
 var $$3 = 0, $$off31 = 0, $0 = 0, $29 = 0, $35 = 0, $40 = 0, $c$0 = 0, $c$1 = 0, $callback_data = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $callback_data = sp;
 $0 = HEAP32[$p_char >> 2] | 0;
 if ($0 >>> 0 < 128 & ($0 | 0) != 32) if (!(_isprint($0 & 255) | 0)) {
  if (($0 + -57344 | 0) >>> 0 < 6400 | (($flags & 1048576 | 0) != 0 & ($0 | 0) == 10 | ($flags & 1024 | 0) != 0 & ($0 | 0) == 9) ^ 1) {
   $$3 = 0;
   STACKTOP = sp;
   return $$3 | 0;
  }
 } else label = 4; else label = 4;
 if ((label | 0) == 4) if (($0 + -57344 | 0) >>> 0 < 6400) {
  $$3 = 0;
  STACKTOP = sp;
  return $$3 | 0;
 }
 L9 : do if (!($flags & 15)) $c$1 = $0; else {
  $$off31 = $0 + -48 | 0;
  L11 : do if (($flags & 1 | 0) != 0 & $$off31 >>> 0 > 9) {
   switch ($0 | 0) {
   case 42:
   case 43:
   case 45:
   case 46:
   case 47:
    {
     break L11;
     break;
    }
   default:
    $$3 = 0;
   }
   STACKTOP = sp;
   return $$3 | 0;
  } while (0);
  if (!((($0 & -33) + -65 | 0) >>> 0 < 6 | (($flags & 2 | 0) == 0 | $$off31 >>> 0 < 10))) {
   $$3 = 0;
   STACKTOP = sp;
   return $$3 | 0;
  }
  if (($flags & 4 | 0) != 0 & ($0 + -97 | 0) >>> 0 < 26) {
   $29 = $0 + -32 | 0;
   HEAP32[$p_char >> 2] = $29;
   $c$0 = $29;
  } else $c$0 = $0;
  if (!($flags & 8)) $c$1 = $c$0; else {
   if (($c$0 | 0) < 32) {
    switch ($c$0 | 0) {
    case 9:
     {
      $$3 = 0;
      break;
     }
    default:
     {
      $c$1 = $c$0;
      break L9;
     }
    }
    STACKTOP = sp;
    return $$3 | 0;
   }
   if (($c$0 | 0) < 12288) {
    switch ($c$0 | 0) {
    case 32:
     {
      $$3 = 0;
      break;
     }
    default:
     {
      $c$1 = $c$0;
      break L9;
     }
    }
    STACKTOP = sp;
    return $$3 | 0;
   } else {
    switch ($c$0 | 0) {
    case 12288:
     {
      $$3 = 0;
      break;
     }
    default:
     {
      $c$1 = $c$0;
      break L9;
     }
    }
    STACKTOP = sp;
    return $$3 | 0;
   }
  }
 } while (0);
 do if ($flags & 512 | 0) {
  dest = $callback_data;
  stop = dest + 44 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP32[$callback_data >> 2] = 512;
  $35 = $callback_data + 14 | 0;
  HEAP16[$35 >> 1] = $c$1;
  HEAP32[$callback_data + 4 >> 2] = $flags;
  HEAP32[$callback_data + 8 >> 2] = $user_data;
  if (!(FUNCTION_TABLE_ii[$callback & 63]($callback_data) | 0)) {
   $40 = HEAP16[$35 >> 1] | 0;
   HEAP32[$p_char >> 2] = $40 & 65535;
   if (!($40 << 16 >> 16)) $$3 = 0; else break;
   STACKTOP = sp;
   return $$3 | 0;
  } else {
   $$3 = 0;
   STACKTOP = sp;
   return $$3 | 0;
  }
 } while (0);
 $$3 = 1;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN5Oryol5_priv8ioWorker6doWorkEv($this) {
 $this = $this | 0;
 var $0 = 0, $13 = 0, $14 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0, $37 = 0, $39 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $49 = 0, $54 = 0, $55 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $2 = HEAP32[$this + 108 >> 2] | 0;
 if (!(($2 & 255) << 24 >> 24)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105824, 0, 105697, 49, 106522);
  _abort();
 }
 if ($2 & 16711680 | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105954, 0, 105697, 50, 106522);
  _abort();
 }
 $7 = $this + 48 | 0;
 $9 = $this + 44 | 0;
 if ((HEAP32[$7 >> 2] | 0) != (HEAP32[$9 >> 2] | 0)) {
  __ZN5Oryol5_priv8ioWorker24moveWriteToTransferQueueEv($this);
  if ((HEAP32[$7 >> 2] | 0) != (HEAP32[$9 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106974, 0, 105697, 54, 106522);
   _abort();
  }
 }
 $13 = $this + 84 | 0;
 $14 = $this + 96 | 0;
 $16 = $this + 92 | 0;
 if ((HEAP32[$14 >> 2] | 0) != (HEAP32[$16 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106999, 0, 105697, 141, 107023);
  _abort();
 }
 $19 = $this + 60 | 0;
 $20 = $this + 100 | 0;
 HEAP32[$20 >> 2] = 0;
 $21 = $this + 104 | 0;
 HEAP32[$21 >> 2] = 0;
 $22 = HEAP32[$13 >> 2] | 0;
 if ($22 | 0) __ZN5Oryol6Memory4FreeEPv($22);
 HEAP32[$20 >> 2] = HEAP32[$this + 76 >> 2];
 HEAP32[$21 >> 2] = HEAP32[$this + 80 >> 2];
 $29 = $13;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$13 >> 2] = HEAP32[$19 >> 2];
 HEAP32[$this + 88 >> 2] = HEAP32[$this + 64 >> 2];
 $37 = HEAP32[$this + 68 >> 2] | 0;
 HEAP32[$16 >> 2] = $37;
 $39 = HEAP32[$this + 72 >> 2] | 0;
 HEAP32[$14 >> 2] = $39;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 HEAP32[$19 + 12 >> 2] = 0;
 if (($39 | 0) == ($37 | 0)) {
  STACKTOP = sp;
  return;
 }
 $42 = $39;
 $43 = $37;
 while (1) {
  if (($42 | 0) <= ($43 | 0)) {
   label = 15;
   break;
  }
  $44 = HEAP32[$13 >> 2] | 0;
  if (!$44) {
   label = 17;
   break;
  }
  $46 = $44 + ($43 << 2) | 0;
  $47 = HEAP32[$46 >> 2] | 0;
  HEAP32[$46 >> 2] = 0;
  HEAP32[$16 >> 2] = $43 + 1;
  HEAP32[$0 >> 2] = $47;
  __ZN5Oryol5_priv8ioWorker5onMsgERKNS_3PtrINS0_5ioMsgEEE($this, $0);
  $49 = $47;
  if ($47 | 0) {
   $54 = $49 + 4 | 0;
   $55 = HEAP32[$54 >> 2] | 0;
   HEAP32[$54 >> 2] = $55 - 1;
   if (($55 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$47 >> 2] >> 2] & 255]($49);
   HEAP32[$0 >> 2] = 0;
  }
  $42 = HEAP32[$14 >> 2] | 0;
  $43 = HEAP32[$16 >> 2] | 0;
  if (($42 | 0) == ($43 | 0)) {
   label = 23;
   break;
  }
 }
 if ((label | 0) == 15) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106560, 0, 105992, 315, 106584);
  _abort();
 } else if ((label | 0) == 17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106688, 0, 123391, 705, 106727);
  _abort();
 } else if ((label | 0) == 23) {
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol14ImageDataAttrsaSERKS0_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $6 = 0, $7 = 0, $i$01$i = 0, $i$01$i1 = 0;
 $1 = $0;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $this;
 HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 + 4 >> 2] = $6;
 $i$01$i = 0;
 do {
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 4 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 4 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 8 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 8 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 12 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 12 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 16 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 16 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 20 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 20 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 24 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 24 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 28 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 28 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 32 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 32 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 36 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 36 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 40 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 40 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 44 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 44 >> 2];
  $i$01$i = $i$01$i + 1 | 0;
 } while (($i$01$i | 0) != 6);
 $i$01$i1 = 0;
 do {
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 4 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 4 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 8 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 8 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 12 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 12 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 16 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 16 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 20 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 20 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 24 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 24 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 28 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 28 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 32 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 32 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 36 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 36 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 40 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 40 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 44 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 44 >> 2];
  $i$01$i1 = $i$01$i1 + 1 | 0;
 } while (($i$01$i1 | 0) != 6);
 return $this | 0;
}

function __ZN5Oryol14ImageDataAttrsaSEOS0_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $6 = 0, $7 = 0, $i$01$i = 0, $i$01$i1 = 0;
 $1 = $0;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $this;
 HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 + 4 >> 2] = $6;
 $i$01$i = 0;
 do {
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 4 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 4 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 8 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 8 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 12 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 12 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 16 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 16 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 20 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 20 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 24 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 24 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 28 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 28 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 32 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 32 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 36 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 36 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 40 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 40 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 44 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 44 >> 2];
  $i$01$i = $i$01$i + 1 | 0;
 } while (($i$01$i | 0) != 6);
 $i$01$i1 = 0;
 do {
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 4 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 4 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 8 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 8 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 12 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 12 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 16 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 16 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 20 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 20 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 24 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 24 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 28 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 28 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 32 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 32 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 36 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 36 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 40 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 40 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 44 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 44 >> 2];
  $i$01$i1 = $i$01$i1 + 1 | 0;
 } while (($i$01$i1 | 0) != 6);
 return $this | 0;
}

function __ZN5ImGui12TextColoredVERK6ImVec4PKcPi($col, $fmt, $args) {
 $col = $col | 0;
 $fmt = $fmt | 0;
 $args = $args | 0;
 var $$pre$i = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $27 = 0, $3 = 0, $33 = 0, $35 = 0, $37 = 0, $39 = 0, $44 = 0, $45 = 0, $50 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $backup$sroa$4$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $backup$sroa$4$i = sp;
 $0 = 152056;
 HEAP32[$backup$sroa$4$i >> 2] = HEAP32[$0 >> 2];
 HEAP32[$backup$sroa$4$i + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$backup$sroa$4$i + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$backup$sroa$4$i + 12 >> 2] = HEAP32[$0 + 12 >> 2];
 $1 = 152880;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = 152884;
 if (($2 | 0) == (HEAP32[$3 >> 2] | 0)) {
  $6 = $2 + 1 | 0;
  if (!$2) $11 = 8; else $11 = (($2 | 0) / 2 | 0) + $2 | 0;
  $12 = ($11 | 0) > ($6 | 0) ? $11 : $6;
  if (($2 | 0) < ($12 | 0)) {
   $15 = 147664;
   HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 1;
   $20 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($12 * 20 | 0) | 0;
   $21 = 152888;
   _memcpy($20 | 0, HEAP32[$21 >> 2] | 0, (HEAP32[$1 >> 2] | 0) * 20 | 0) | 0;
   $25 = HEAP32[$21 >> 2] | 0;
   if ($25 | 0) {
    $27 = 147664;
    HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($25);
   HEAP32[$21 >> 2] = $20;
   HEAP32[$3 >> 2] = $12;
   $33 = HEAP32[$1 >> 2] | 0;
  } else $33 = $2;
 } else $33 = $2;
 HEAP32[$1 >> 2] = $33 + 1;
 $35 = HEAP32[38222] | 0;
 HEAP32[$35 + ($33 * 20 | 0) >> 2] = 0;
 $37 = $35 + ($33 * 20 | 0) + 4 | 0;
 HEAP32[$37 >> 2] = HEAP32[$backup$sroa$4$i >> 2];
 HEAP32[$37 + 4 >> 2] = HEAP32[$backup$sroa$4$i + 4 >> 2];
 HEAP32[$37 + 8 >> 2] = HEAP32[$backup$sroa$4$i + 8 >> 2];
 HEAP32[$37 + 12 >> 2] = HEAP32[$backup$sroa$4$i + 12 >> 2];
 HEAP32[$0 >> 2] = HEAP32[$col >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$col + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$col + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[$col + 12 >> 2];
 $39 = HEAP32[38201] | 0;
 HEAP8[$39 + 114 >> 0] = 1;
 if (!(HEAP8[$39 + 116 >> 0] | 0)) {
  $44 = 158506;
  $45 = _vsnprintf($44, 3073, $fmt, $args) | 0;
  HEAP8[161578] = 0;
  __ZN5ImGui15TextUnformattedEPKcS1_($44, 158506 + (($45 | 0) == -1 ? 3073 : $45) | 0);
 }
 $50 = 152880;
 $$pre$i = HEAP32[$50 >> 2] | 0;
 if (($$pre$i | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $53 = $$pre$i + -1 | 0;
 $54 = HEAP32[38222] | 0;
 $57 = 152056 + (HEAP32[$54 + ($53 * 20 | 0) >> 2] << 4) | 0;
 $58 = $54 + ($53 * 20 | 0) + 4 | 0;
 HEAP32[$57 >> 2] = HEAP32[$58 >> 2];
 HEAP32[$57 + 4 >> 2] = HEAP32[$58 + 4 >> 2];
 HEAP32[$57 + 8 >> 2] = HEAP32[$58 + 8 >> 2];
 HEAP32[$57 + 12 >> 2] = HEAP32[$58 + 12 >> 2];
 $59 = HEAP32[$50 >> 2] | 0;
 if (($59 | 0) > 0) {
  HEAP32[$50 >> 2] = $59 + -1;
  STACKTOP = sp;
  return;
 } else ___assert_fail(127436, 127226, 833, 125180);
}

function __ZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS_8GfxSetupERKNS0_11gfxPointersE($this, $setup, $ptrs) {
 $this = $this | 0;
 $setup = $setup | 0;
 $ptrs = $ptrs | 0;
 var $0 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 if (__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78040, 0, 48725, 21, 48806);
  _abort();
 }
 $2 = $this + 116 | 0;
 HEAP32[$2 >> 2] = HEAP32[$ptrs >> 2];
 HEAP32[$2 + 4 >> 2] = HEAP32[$ptrs + 4 >> 2];
 HEAP32[$2 + 8 >> 2] = HEAP32[$ptrs + 8 >> 2];
 HEAP32[$2 + 12 >> 2] = HEAP32[$ptrs + 12 >> 2];
 HEAP32[$2 + 16 >> 2] = HEAP32[$ptrs + 16 >> 2];
 HEAP32[$2 + 20 >> 2] = HEAP32[$ptrs + 20 >> 2];
 HEAP32[$2 + 24 >> 2] = HEAP32[$ptrs + 24 >> 2];
 __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE5SetupEti($this + 272 | 0, 1, __ZNK5Oryol8GfxSetup8PoolSizeENS_15GfxResourceType4CodeE($setup, 1) | 0);
 __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE5SetupEti($this + 336 | 0, 2, __ZNK5Oryol8GfxSetup8PoolSizeENS_15GfxResourceType4CodeE($setup, 2) | 0);
 __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE5SetupEti($this + 400 | 0, 0, __ZNK5Oryol8GfxSetup8PoolSizeENS_15GfxResourceType4CodeE($setup, 0) | 0);
 __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE5SetupEti($this + 464 | 0, 3, __ZNK5Oryol8GfxSetup8PoolSizeENS_15GfxResourceType4CodeE($setup, 3) | 0);
 __ZN5Oryol5_priv13glMeshFactory5SetupERKNS0_11gfxPointersE($this + 144 | 0, $2);
 __ZN5Oryol5_priv15glShaderFactory5SetupERKNS0_11gfxPointersE($this + 176 | 0, $2);
 __ZN5Oryol5_priv16glTextureFactory5SetupERKNS0_11gfxPointersE($this + 208 | 0, $2);
 __ZN5Oryol5_priv19pipelineFactoryBase5SetupERKNS0_11gfxPointersE($this + 240 | 0, $2);
 $15 = __ZN5Oryol4Core11PostRunLoopEv() | 0;
 $17 = $0 + 16 | 0;
 HEAP32[$17 >> 2] = $0;
 HEAP32[$0 >> 2] = 12844;
 HEAP32[$0 + 4 >> 2] = $this;
 HEAP32[$this + 528 >> 2] = __ZN5Oryol7RunLoop3AddENSt3__18functionIFvvEEE($15, $0) | 0;
 $21 = HEAP32[$17 >> 2] | 0;
 if (($21 | 0) == ($0 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 16 >> 2] & 255]($21);
  $30 = $setup + 64 | 0;
  $31 = HEAP32[$30 >> 2] | 0;
  $32 = $setup + 68 | 0;
  $33 = HEAP32[$32 >> 2] | 0;
  __ZN5Oryol21resourceContainerBase5setupEii($this, $31, $33);
  STACKTOP = sp;
  return;
 }
 if (!$21) {
  $30 = $setup + 64 | 0;
  $31 = HEAP32[$30 >> 2] | 0;
  $32 = $setup + 68 | 0;
  $33 = HEAP32[$32 >> 2] | 0;
  __ZN5Oryol21resourceContainerBase5setupEii($this, $31, $33);
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 20 >> 2] & 255]($21);
 $30 = $setup + 64 | 0;
 $31 = HEAP32[$30 >> 2] | 0;
 $32 = $setup + 68 | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 __ZN5Oryol21resourceContainerBase5setupEii($this, $31, $33);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol14ImageDataAttrsC2ERKS0_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $6 = 0, $7 = 0, $i$01$i = 0, $i$01$i1 = 0;
 $1 = $0;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = $this;
 HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 + 4 >> 2] = $6;
 $i$01$i = 0;
 do {
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 4 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 4 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 8 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 8 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 12 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 12 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 16 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 16 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 20 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 20 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 24 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 24 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 28 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 28 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 32 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 32 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 36 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 36 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 40 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 40 >> 2];
  HEAP32[$this + 8 + ($i$01$i * 48 | 0) + 44 >> 2] = HEAP32[$0 + 8 + ($i$01$i * 48 | 0) + 44 >> 2];
  $i$01$i = $i$01$i + 1 | 0;
 } while (($i$01$i | 0) != 6);
 $i$01$i1 = 0;
 do {
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 4 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 4 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 8 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 8 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 12 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 12 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 16 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 16 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 20 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 20 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 24 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 24 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 28 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 28 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 32 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 32 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 36 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 36 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 40 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 40 >> 2];
  HEAP32[$this + 296 + ($i$01$i1 * 48 | 0) + 44 >> 2] = HEAP32[$0 + 296 + ($i$01$i1 * 48 | 0) + 44 >> 2];
  $i$01$i1 = $i$01$i1 + 1 | 0;
 } while (($i$01$i1 | 0) != 6);
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE14moveInsertBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $13 = 0, $14 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $42 = 0, $43 = 0, $9 = 0, $i$0 = 0, $i$0$in2 = 0, $i$0$in2$phi = 0, $i$01 = 0, $i$03 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 108954);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 108954);
  _abort();
 }
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 108954);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 108954);
  _abort();
 }
 $9 = $this + 8 | 0;
 if (($3 - (HEAP32[$9 >> 2] | 0) | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 108954);
  _abort();
 }
 $13 = $3 + -1 | 0;
 $14 = $0 + ($13 << 3) | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($0 + ($3 << 3) | 0, $14);
 HEAP32[$14 >> 2] = 0;
 $17 = $0 + ($13 << 3) + 4 | 0;
 HEAP32[$0 + ($3 << 3) + 4 >> 2] = HEAP32[$17 >> 2];
 HEAP32[$17 >> 2] = 0;
 $19 = HEAP32[$2 >> 2] | 0;
 $i$01 = $19 + -1 | 0;
 $20 = HEAP32[$9 >> 2] | 0;
 if (($i$01 | 0) > ($20 + $index | 0)) {
  $i$0$in2 = $19;
  $i$03 = $i$01;
 } else {
  $24 = $19;
  $26 = $20;
  $23 = $24 + 1 | 0;
  HEAP32[$2 >> 2] = $23;
  $25 = $26 + $index | 0;
  $27 = HEAP32[$this >> 2] | 0;
  $28 = $27 + ($25 << 3) | 0;
  return $28 | 0;
 }
 while (1) {
  $29 = HEAP32[$this >> 2] | 0;
  $30 = $29 + ($i$03 << 3) | 0;
  $31 = $i$0$in2 + -2 | 0;
  $32 = $29 + ($31 << 3) | 0;
  HEAP32[$30 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($30, $32);
  HEAP32[$32 >> 2] = 0;
  $33 = $29 + ($31 << 3) + 4 | 0;
  $34 = HEAP32[$33 >> 2] | 0;
  $35 = $29 + ($i$03 << 3) + 4 | 0;
  $36 = HEAP32[$35 >> 2] | 0;
  if (($34 | 0) != ($36 | 0)) {
   if ($36 | 0) {
    $42 = $36 + 4 | 0;
    $43 = HEAP32[$42 >> 2] | 0;
    HEAP32[$42 >> 2] = $43 - 1;
    if (($43 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$36 >> 2] >> 2] & 255]($36);
    HEAP32[$35 >> 2] = 0;
   }
   HEAP32[$35 >> 2] = $34;
   HEAP32[$33 >> 2] = 0;
  }
  $i$0 = $i$03 + -1 | 0;
  $38 = HEAP32[$9 >> 2] | 0;
  if (($i$0 | 0) > ($38 + $index | 0)) {
   $i$0$in2$phi = $i$03;
   $i$03 = $i$0;
   $i$0$in2 = $i$0$in2$phi;
  } else {
   $$lcssa = $38;
   break;
  }
 }
 $24 = HEAP32[$2 >> 2] | 0;
 $26 = $$lcssa;
 $23 = $24 + 1 | 0;
 HEAP32[$2 >> 2] = $23;
 $25 = $26 + $index | 0;
 $27 = HEAP32[$this >> 2] | 0;
 $28 = $27 + ($25 << 3) | 0;
 return $28 | 0;
}

function _pop_arg($arg, $type, $ap) {
 $arg = $arg | 0;
 $type = $type | 0;
 $ap = $ap | 0;
 var $105 = 0, $106 = 0.0, $112 = 0, $113 = 0.0, $13 = 0, $14 = 0, $17 = 0, $26 = 0, $27 = 0, $28 = 0, $37 = 0, $38 = 0, $40 = 0, $43 = 0, $44 = 0, $53 = 0, $54 = 0, $56 = 0, $59 = 0, $6 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $79 = 0, $80 = 0, $82 = 0, $85 = 0, $94 = 0, $95 = 0, $96 = 0;
 L1 : do if ($type >>> 0 <= 20) do switch ($type | 0) {
 case 9:
  {
   $6 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $7 = HEAP32[$6 >> 2] | 0;
   HEAP32[$ap >> 2] = $6 + 4;
   HEAP32[$arg >> 2] = $7;
   break L1;
   break;
  }
 case 10:
  {
   $13 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $14 = HEAP32[$13 >> 2] | 0;
   HEAP32[$ap >> 2] = $13 + 4;
   $17 = $arg;
   HEAP32[$17 >> 2] = $14;
   HEAP32[$17 + 4 >> 2] = (($14 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 11:
  {
   $26 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $27 = HEAP32[$26 >> 2] | 0;
   HEAP32[$ap >> 2] = $26 + 4;
   $28 = $arg;
   HEAP32[$28 >> 2] = $27;
   HEAP32[$28 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 12:
  {
   $37 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $38 = $37;
   $40 = HEAP32[$38 >> 2] | 0;
   $43 = HEAP32[$38 + 4 >> 2] | 0;
   HEAP32[$ap >> 2] = $37 + 8;
   $44 = $arg;
   HEAP32[$44 >> 2] = $40;
   HEAP32[$44 + 4 >> 2] = $43;
   break L1;
   break;
  }
 case 13:
  {
   $53 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $54 = HEAP32[$53 >> 2] | 0;
   HEAP32[$ap >> 2] = $53 + 4;
   $56 = ($54 & 65535) << 16 >> 16;
   $59 = $arg;
   HEAP32[$59 >> 2] = $56;
   HEAP32[$59 + 4 >> 2] = (($56 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 14:
  {
   $68 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $69 = HEAP32[$68 >> 2] | 0;
   HEAP32[$ap >> 2] = $68 + 4;
   $70 = $arg;
   HEAP32[$70 >> 2] = $69 & 65535;
   HEAP32[$70 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 15:
  {
   $79 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $80 = HEAP32[$79 >> 2] | 0;
   HEAP32[$ap >> 2] = $79 + 4;
   $82 = ($80 & 255) << 24 >> 24;
   $85 = $arg;
   HEAP32[$85 >> 2] = $82;
   HEAP32[$85 + 4 >> 2] = (($82 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 16:
  {
   $94 = (HEAP32[$ap >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $95 = HEAP32[$94 >> 2] | 0;
   HEAP32[$ap >> 2] = $94 + 4;
   $96 = $arg;
   HEAP32[$96 >> 2] = $95 & 255;
   HEAP32[$96 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 17:
  {
   $105 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $106 = +HEAPF64[$105 >> 3];
   HEAP32[$ap >> 2] = $105 + 8;
   HEAPF64[$arg >> 3] = $106;
   break L1;
   break;
  }
 case 18:
  {
   $112 = (HEAP32[$ap >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $113 = +HEAPF64[$112 >> 3];
   HEAP32[$ap >> 2] = $112 + 8;
   HEAPF64[$arg >> 3] = $113;
   break L1;
   break;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function __ZN5Oryol5_priv14assignRegistry9SetAssignERKNS_6StringES4_($this, $assign, $path) {
 $this = $this | 0;
 $assign = $assign | 0;
 $path = $path | 0;
 var $$0$i1$i = 0, $$0$i2$i = 0, $$0$ph$i$i$i$i$i = 0, $$0$ph$i$i$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa12 = 0, $0 = 0, $10 = 0, $11 = 0, $14 = 0, $18 = 0, $31 = 0, $32 = 0, $39 = 0, $__len$0$i$i$i$i$i = 0, $__len$0$i$i$i$i$i$lcssa11 = 0, $__len$0$ph$i$i$i$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if ((__ZNK5Oryol6String4BackEv($assign) | 0) << 24 >> 24 != 58) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(102122, 0, 102143, 14, 102209);
  _abort();
 }
 if ((__ZNK5Oryol6String6LengthEv($assign) | 0) <= 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(102300, 0, 102143, 15, 102209);
  _abort();
 }
 if (__ZNK5Oryol6String5EmptyEv($path) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(102320, 0, 102143, 16, 102209);
  _abort();
 }
 if ((__ZNK5Oryol6String4BackEv($path) | 0) << 24 >> 24 != 47) if ((__ZNK5Oryol6String4BackEv($path) | 0) << 24 >> 24 != 58) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(102334, 0, 102143, 17, 102209);
  _abort();
 }
 do {
  $10 = HEAP8[$this >> 0] | 0;
  HEAP8[$this >> 0] = 1;
 } while (($10 & 1) != 0);
 $11 = $this + 4 | 0;
 do {} while ((HEAP32[$11 >> 2] | 0) > 0);
 $14 = $this + 8 | 0;
 if (HEAP8[$this + 32 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 102379);
  _abort();
 }
 $18 = HEAP32[$14 >> 2] | 0;
 if (!$18) {
  $$0$i1$i = 0;
  $$0$i2$i = 0;
 } else {
  $$0$i1$i = $18 + (HEAP32[$this + 20 >> 2] << 4) | 0;
  $$0$i2$i = $18 + (HEAP32[$this + 16 >> 2] << 4) | 0;
 }
 $$0$ph$i$i$i$i$i = $$0$i2$i;
 $__len$0$ph$i$i$i$i$i = $$0$i1$i - $$0$i2$i >> 4;
 L26 : while (1) {
  $__len$0$i$i$i$i$i = $__len$0$ph$i$i$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i$i$i) {
    $$0$ph$i$i$i$i$i$lcssa = $$0$ph$i$i$i$i$i;
    break L26;
   }
   $31 = ($__len$0$i$i$i$i$i | 0) / 2 | 0;
   $32 = $$0$ph$i$i$i$i$i + ($31 << 4) | 0;
   if (__ZNK5Oryol6StringltERKS0_($32, $assign) | 0) {
    $$lcssa = $31;
    $$lcssa12 = $32;
    $__len$0$i$i$i$i$i$lcssa11 = $__len$0$i$i$i$i$i;
    break;
   } else $__len$0$i$i$i$i$i = $31;
  }
  $$0$ph$i$i$i$i$i = $$lcssa12 + 16 | 0;
  $__len$0$ph$i$i$i$i$i = $__len$0$i$i$i$i$i$lcssa11 + -1 - $$lcssa | 0;
 }
 if (($$0$ph$i$i$i$i$i$lcssa | 0) != ($$0$i1$i | 0)) if (!(__ZNK5Oryol6StringltERKS0_($assign, $$0$ph$i$i$i$i$i$lcssa) | 0)) {
  __ZN5Oryol6StringaSERKS0_(__ZN5Oryol3MapINS_6StringES1_EixERKS1_($14, $assign) | 0, $path);
  HEAP8[$this >> 0] = 0;
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6StringC2ERKS0_($0, $assign);
 $39 = $0 + 8 | 0;
 __ZN5Oryol6StringC2ERKS0_($39, $path);
 __ZN5Oryol3MapINS_6StringES1_E3AddEONS_12KeyValuePairIS1_S1_EE($14, $0);
 __ZN5Oryol6StringD2Ev($39);
 __ZN5Oryol6StringD2Ev($0);
 HEAP8[$this >> 0] = 0;
 STACKTOP = sp;
 return;
}

function ___stdio_write($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $15 = 0, $20 = 0, $25 = 0, $3 = 0, $34 = 0, $36 = 0, $38 = 0, $49 = 0, $5 = 0, $9 = 0, $cnt$0 = 0, $cnt$1 = 0, $iov$0 = 0, $iov$0$lcssa11 = 0, $iov$1 = 0, $iovcnt$0 = 0, $iovcnt$0$lcssa12 = 0, $iovcnt$1 = 0, $iovs = 0, $rem$0 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $iovs = sp + 32 | 0;
 $0 = $f + 28 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$iovs >> 2] = $1;
 $3 = $f + 20 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) - $1 | 0;
 HEAP32[$iovs + 4 >> 2] = $5;
 HEAP32[$iovs + 8 >> 2] = $buf;
 HEAP32[$iovs + 12 >> 2] = $len;
 $9 = $f + 60 | 0;
 $10 = $f + 44 | 0;
 $iov$0 = $iovs;
 $iovcnt$0 = 2;
 $rem$0 = $5 + $len | 0;
 while (1) {
  if (!(HEAP32[40694] | 0)) {
   HEAP32[$vararg_buffer3 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$vararg_buffer3 + 4 >> 2] = $iov$0;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $iovcnt$0;
   $cnt$0 = ___syscall_ret(___syscall146(146, $vararg_buffer3 | 0) | 0) | 0;
  } else {
   _pthread_cleanup_push(134, $f | 0);
   HEAP32[$vararg_buffer >> 2] = HEAP32[$9 >> 2];
   HEAP32[$vararg_buffer + 4 >> 2] = $iov$0;
   HEAP32[$vararg_buffer + 8 >> 2] = $iovcnt$0;
   $15 = ___syscall_ret(___syscall146(146, $vararg_buffer | 0) | 0) | 0;
   _pthread_cleanup_pop(0);
   $cnt$0 = $15;
  }
  if (($rem$0 | 0) == ($cnt$0 | 0)) {
   label = 6;
   break;
  }
  if (($cnt$0 | 0) < 0) {
   $iov$0$lcssa11 = $iov$0;
   $iovcnt$0$lcssa12 = $iovcnt$0;
   label = 8;
   break;
  }
  $34 = $rem$0 - $cnt$0 | 0;
  $36 = HEAP32[$iov$0 + 4 >> 2] | 0;
  if ($cnt$0 >>> 0 > $36 >>> 0) {
   $38 = HEAP32[$10 >> 2] | 0;
   HEAP32[$0 >> 2] = $38;
   HEAP32[$3 >> 2] = $38;
   $49 = HEAP32[$iov$0 + 12 >> 2] | 0;
   $cnt$1 = $cnt$0 - $36 | 0;
   $iov$1 = $iov$0 + 8 | 0;
   $iovcnt$1 = $iovcnt$0 + -1 | 0;
  } else if (($iovcnt$0 | 0) == 2) {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + $cnt$0;
   $49 = $36;
   $cnt$1 = $cnt$0;
   $iov$1 = $iov$0;
   $iovcnt$1 = 2;
  } else {
   $49 = $36;
   $cnt$1 = $cnt$0;
   $iov$1 = $iov$0;
   $iovcnt$1 = $iovcnt$0;
  }
  HEAP32[$iov$1 >> 2] = (HEAP32[$iov$1 >> 2] | 0) + $cnt$1;
  HEAP32[$iov$1 + 4 >> 2] = $49 - $cnt$1;
  $iov$0 = $iov$1;
  $iovcnt$0 = $iovcnt$1;
  $rem$0 = $34;
 }
 if ((label | 0) == 6) {
  $20 = HEAP32[$10 >> 2] | 0;
  HEAP32[$f + 16 >> 2] = $20 + (HEAP32[$f + 48 >> 2] | 0);
  $25 = $20;
  HEAP32[$0 >> 2] = $25;
  HEAP32[$3 >> 2] = $25;
  $$0 = $len;
 } else if ((label | 0) == 8) {
  HEAP32[$f + 16 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$f >> 2] = HEAP32[$f >> 2] | 32;
  if (($iovcnt$0$lcssa12 | 0) == 2) $$0 = 0; else $$0 = $len - (HEAP32[$iov$0$lcssa11 + 4 >> 2] | 0) | 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6SoLoud6Soloud8postinitEjjjj($this, $aSamplerate, $aBufferSize, $aFlags, $aChannels) {
 $this = $this | 0;
 $aSamplerate = $aSamplerate | 0;
 $aBufferSize = $aBufferSize | 0;
 $aFlags = $aFlags | 0;
 $aChannels = $aChannels | 0;
 var $1 = 0, $13 = 0, $18 = 0, $19 = 0, $23 = 0, $25 = 0, $4 = 0, $7 = 0, $8 = 0, $storemerge1 = 0;
 HEAPF32[$this + 4164 >> 2] = 1.0;
 $1 = $this + 4144 | 0;
 HEAP32[$1 >> 2] = $aChannels;
 HEAP32[$this + 4140 >> 2] = $aSamplerate;
 HEAP32[$this + 4156 >> 2] = $aBufferSize;
 $4 = $this + 28 | 0;
 $storemerge1 = $aBufferSize >>> 0 < 4096 ? 4096 : $aBufferSize;
 HEAP32[$4 >> 2] = $storemerge1;
 HEAP32[$this + 32 >> 2] = $storemerge1;
 $7 = $this + 24 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (!$8) $23 = $storemerge1; else {
  __ZdaPv($8);
  $23 = HEAP32[$4 >> 2] | 0;
 }
 $13 = __Znaj(($storemerge1 * 24 | 0) + 16 | 0) | 0;
 HEAP32[$7 >> 2] = $13;
 HEAP32[$this + 20 >> 2] = $13 + 15 & -16;
 $18 = $this + 40 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 if ($19 | 0) __ZdaPv($19);
 $25 = __Znaj(($23 * 24 | 0) + 16 | 0) | 0;
 HEAP32[$18 >> 2] = $25;
 HEAP32[$this + 36 >> 2] = $25 + 15 & -16;
 HEAP32[$this + 4160 >> 2] = $aFlags;
 HEAPF32[$this + 4168 >> 2] = .949999988079071;
 switch (HEAP32[$1 >> 2] | 0) {
 case 1:
  {
   HEAPF32[$this + 7436 >> 2] = 0.0;
   HEAPF32[$this + 7440 >> 2] = 0.0;
   HEAPF32[$this + 7444 >> 2] = 1.0;
   return;
  }
 case 2:
  {
   HEAPF32[$this + 7436 >> 2] = 2.0;
   HEAPF32[$this + 7440 >> 2] = 0.0;
   HEAPF32[$this + 7444 >> 2] = 1.0;
   HEAPF32[$this + 7448 >> 2] = -2.0;
   HEAPF32[$this + 7452 >> 2] = 0.0;
   HEAPF32[$this + 7456 >> 2] = 1.0;
   return;
  }
 case 4:
  {
   HEAPF32[$this + 7436 >> 2] = 2.0;
   HEAPF32[$this + 7440 >> 2] = 0.0;
   HEAPF32[$this + 7444 >> 2] = 1.0;
   HEAPF32[$this + 7448 >> 2] = -2.0;
   HEAPF32[$this + 7452 >> 2] = 0.0;
   HEAPF32[$this + 7456 >> 2] = 1.0;
   HEAPF32[$this + 7460 >> 2] = 2.0;
   HEAPF32[$this + 7464 >> 2] = 0.0;
   HEAPF32[$this + 7468 >> 2] = -1.0;
   HEAPF32[$this + 7472 >> 2] = -2.0;
   HEAPF32[$this + 7476 >> 2] = 0.0;
   HEAPF32[$this + 7480 >> 2] = -1.0;
   return;
  }
 case 6:
  {
   HEAPF32[$this + 7436 >> 2] = 2.0;
   HEAPF32[$this + 7440 >> 2] = 0.0;
   HEAPF32[$this + 7444 >> 2] = 1.0;
   HEAPF32[$this + 7448 >> 2] = -2.0;
   HEAPF32[$this + 7452 >> 2] = 0.0;
   HEAPF32[$this + 7456 >> 2] = 1.0;
   HEAPF32[$this + 7460 >> 2] = 0.0;
   HEAPF32[$this + 7464 >> 2] = 0.0;
   HEAPF32[$this + 7468 >> 2] = 1.0;
   HEAPF32[$this + 7472 >> 2] = 0.0;
   HEAPF32[$this + 7476 >> 2] = 0.0;
   HEAPF32[$this + 7480 >> 2] = 0.0;
   HEAPF32[$this + 7484 >> 2] = 2.0;
   HEAPF32[$this + 7488 >> 2] = 0.0;
   HEAPF32[$this + 7492 >> 2] = -1.0;
   HEAPF32[$this + 7496 >> 2] = -2.0;
   HEAPF32[$this + 7500 >> 2] = 0.0;
   HEAPF32[$this + 7504 >> 2] = -1.0;
   return;
  }
 default:
  return;
 }
}
function __ZN5ImGui8EndChildEv() {
 var $$idx1 = 0, $$idx1$val = 0.0, $1 = 0, $13 = 0, $15 = 0, $21 = 0.0, $30 = 0.0, $35 = 0, $37 = 0, $38 = 0.0, $39 = 0.0, $4 = 0, $40 = 0.0, $42 = 0, $44 = 0, $47 = 0, $48 = 0, $58 = 0, $59 = 0.0, $61 = 0.0, $62 = 0, $63 = 0.0, $67 = 0.0, $85 = 0.0, $86 = 0, $87 = 0.0, $90 = 0, $91 = 0.0, $bb = 0, $sz$sroa$0$0 = 0, $sz$sroa$7$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $bb = sp;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $4 = HEAP32[$1 + 8 >> 2] | 0;
 if (!($4 & 1048576)) ___assert_fail(125085, 124187, 3378, 125130);
 if (!($4 & 8388608)) if ((HEAP32[$1 + 120 >> 2] | 0) <= 1) {
  $13 = HEAP32[$1 + 28 >> 2] | 0;
  $15 = HEAP32[$1 + 32 >> 2] | 0;
  if (!($4 & 2097152)) $sz$sroa$0$0 = $13; else {
   $21 = (HEAP32[tempDoublePtr >> 2] = $13, +HEAPF32[tempDoublePtr >> 2]) - +HEAPF32[37985];
   $sz$sroa$0$0 = (HEAPF32[tempDoublePtr >> 2] = $21 <= 4.0 ? 4.0 : $21, HEAP32[tempDoublePtr >> 2] | 0);
  }
  if (!($4 & 4194304)) $sz$sroa$7$0 = $15; else {
   $30 = (HEAP32[tempDoublePtr >> 2] = $15, +HEAPF32[tempDoublePtr >> 2]) - +HEAPF32[37986];
   $sz$sroa$7$0 = (HEAPF32[tempDoublePtr >> 2] = $30 <= 4.0 ? 4.0 : $30, HEAP32[tempDoublePtr >> 2] | 0);
  }
  __ZN5ImGui3EndEv();
  $35 = HEAP32[38201] | 0;
  $37 = $35 + 164 | 0;
  $$idx1 = $35 + 168 | 0;
  $$idx1$val = +HEAPF32[$$idx1 >> 2];
  $38 = (HEAP32[tempDoublePtr >> 2] = $sz$sroa$0$0, +HEAPF32[tempDoublePtr >> 2]);
  $39 = (HEAP32[tempDoublePtr >> 2] = $sz$sroa$7$0, +HEAPF32[tempDoublePtr >> 2]);
  $40 = $38 + +HEAPF32[$37 >> 2];
  $42 = $37;
  $44 = HEAP32[$42 >> 2] | 0;
  $47 = HEAP32[$42 + 4 >> 2] | 0;
  $48 = $bb;
  HEAP32[$48 >> 2] = $44;
  HEAP32[$48 + 4 >> 2] = $47;
  HEAPF32[$bb + 8 >> 2] = $40;
  HEAPF32[$bb + 12 >> 2] = $39 + $$idx1$val;
  HEAP8[$35 + 114 >> 0] = 1;
  if (!(HEAP8[$35 + 116 >> 0] | 0)) {
   $58 = $35 + 196 | 0;
   $59 = +HEAPF32[$58 >> 2];
   $61 = $59 >= $39 ? $59 : $39;
   $62 = $35 + 200 | 0;
   $63 = +HEAPF32[$62 >> 2];
   $67 = $38 + (HEAP32[tempDoublePtr >> 2] = $44, +HEAPF32[tempDoublePtr >> 2]);
   HEAPF32[$35 + 172 >> 2] = $67;
   HEAPF32[$35 + 176 >> 2] = $$idx1$val;
   $85 = +(~~($61 + $$idx1$val + +HEAPF32[37996]) | 0);
   HEAPF32[$35 + 164 >> 2] = +(~~(+HEAPF32[$35 + 20 >> 2] + +HEAPF32[$35 + 368 >> 2] + +HEAPF32[$35 + 372 >> 2]) | 0);
   HEAPF32[$$idx1 >> 2] = $85;
   $86 = $35 + 188 | 0;
   $87 = +HEAPF32[$86 >> 2];
   HEAPF32[$86 >> 2] = $87 >= $67 ? $87 : $67;
   $90 = $35 + 192 | 0;
   $91 = +HEAPF32[$90 >> 2];
   HEAPF32[$90 >> 2] = $91 >= $85 ? $91 : $85;
   HEAPF32[$35 + 204 >> 2] = $61;
   HEAPF32[$35 + 208 >> 2] = $63 >= 0.0 ? $63 : 0.0;
   HEAPF32[$62 >> 2] = 0.0;
   HEAPF32[$58 >> 2] = 0.0;
  }
  __ZN5ImGui7ItemAddERK6ImRectPKj($bb, 0) | 0;
  STACKTOP = sp;
  return;
 }
 __ZN5ImGui3EndEv();
 STACKTOP = sp;
 return;
}

function __ZN11DebugWindow12drawControlsERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $$pre$i = 0, $$sink = 0, $$sink2 = 0, $$sink3 = 0, $$sink4 = 0, $0 = 0, $1 = 0, $2 = 0, $33 = 0, $36 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $6 = 0, $61 = 0, $63 = 0, $74 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = $kc + 725484 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $6 = $2 >>> 16;
 if (!(($2 & 255) << 24 >> 24)) {
  HEAP8[$this + 400 >> 0] = 1;
  HEAP16[$this + 398 >> 1] = -1;
  $$sink = 70;
  $$sink2 = 70;
  $$sink3 = 70;
  $$sink4 = 70;
 } else {
  HEAP8[$this + 400 >> 0] = 1;
  HEAP16[$this + 398 >> 1] = $6;
  $$sink = HEAP8[35768 + ($6 & 15) >> 0] | 0;
  $$sink2 = HEAP8[35768 + ($2 >>> 20 & 15) >> 0] | 0;
  $$sink3 = HEAP8[35768 + ($2 >>> 24 & 15) >> 0] | 0;
  $$sink4 = HEAP8[35768 + ($2 >>> 28) >> 0] | 0;
 }
 HEAP8[$this + 392 >> 0] = $$sink4;
 HEAP8[$this + 393 >> 0] = $$sink3;
 HEAP8[$this + 394 >> 0] = $$sink2;
 HEAP8[$this + 395 >> 0] = $$sink;
 HEAP8[$this + 396 >> 0] = 0;
 do if (__ZN14HexInputWidget4DrawEv($this + 388 | 0) | 0) {
  $33 = HEAP16[$this + 398 >> 1] | 0;
  if ($33 << 16 >> 16 == -1) {
   HEAP8[$1 >> 0] = 0;
   break;
  } else {
   HEAP8[$1 >> 0] = 1;
   HEAP16[$kc + 725486 >> 1] = $33;
   break;
  }
 } while (0);
 __ZN5ImGui8SameLineEff(0.0, -1.0);
 $36 = $kc + 725492 | 0;
 __ZN5ImGui8CheckboxEPKcPb(35593, $36) | 0;
 if (!(HEAP8[$36 >> 0] | 0)) {
  $74 = $kc + 69254 | 0;
  __ZN5ImGui8CheckboxEPKcPb(35604, $74) | 0;
  STACKTOP = sp;
  return;
 }
 __ZN5ImGui8SameLineEff(0.0, -1.0);
 HEAPF32[$0 >> 2] = 0.0;
 HEAPF32[$0 + 4 >> 2] = 0.0;
 if (!(__ZN5ImGui6ButtonEPKcRK6ImVec2(35599, $0) | 0)) {
  $74 = $kc + 69254 | 0;
  __ZN5ImGui8CheckboxEPKcPb(35604, $74) | 0;
  STACKTOP = sp;
  return;
 }
 $41 = $kc + 65620 | 0;
 $42 = $kc + 65642 | 0;
 $43 = $kc + 725464 | 0;
 $44 = $kc + 65650 | 0;
 $45 = $kc + 69253 | 0;
 $46 = $kc + 65645 | 0;
 $47 = $kc + 65649 | 0;
 $48 = $kc + 65648 | 0;
 $$pre$i = HEAP16[$42 >> 1] | 0;
 do {
  $49 = HEAP32[$43 >> 2] | 0;
  HEAP32[$43 >> 2] = $49 + 1;
  HEAP16[$kc + 725468 + ($49 << 1) >> 1] = $$pre$i;
  HEAP32[$43 >> 2] = HEAP32[$43 >> 2] & 7;
  HEAP8[$44 >> 0] = 0;
  if (HEAP8[$45 >> 0] | 0) {
   HEAP8[$47 >> 0] = 1;
   HEAP8[$48 >> 0] = 1;
   HEAP8[$45 >> 0] = 0;
  }
  HEAP8[$46 >> 0] = (HEAPU8[$46 >> 0] | 0) + 1 & 127;
  $61 = HEAP16[$42 >> 1] | 0;
  HEAP16[$42 >> 1] = $61 + 1 << 16 >> 16;
  $63 = $61 & 65535;
  __ZN4yakc3z805do_opEh($41, HEAP8[(HEAP32[$kc + 66932 + ($63 >>> 11 << 3) >> 2] | 0) + ($63 & 2047) >> 0] | 0) | 0;
 } while ((HEAP8[$44 >> 0] | 0) == 0 ? $$pre$i << 16 >> 16 == (HEAP16[$42 >> 1] | 0) : 0);
 $74 = $kc + 69254 | 0;
 __ZN5ImGui8CheckboxEPKcPb(35604, $74) | 0;
 STACKTOP = sp;
 return;
}

function __ZN5ImGui30InputScalarAsWidgetReplacementERK6ImRectPKc13ImGuiDataTypePvji($aabb, $label, $data_type, $data_ptr, $id, $decimal_precision) {
 $aabb = $aabb | 0;
 $label = $label | 0;
 $data_type = $data_type | 0;
 $data_ptr = $data_ptr | 0;
 $id = $id | 0;
 $decimal_precision = $decimal_precision | 0;
 var $0 = 0, $12 = 0, $15 = 0, $19 = 0, $2 = 0, $22 = 0.0, $31 = 0.0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $6 = 0, $buf = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer5 = 0, $vararg_buffer8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer8 = sp + 24 | 0;
 $vararg_buffer5 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $buf = sp + 48 | 0;
 $0 = sp + 40 | 0;
 $2 = HEAP32[38201] | 0;
 HEAP8[$2 + 114 >> 0] = 1;
 $4 = 156896;
 $6 = 152844;
 HEAP32[$6 >> 2] = HEAP32[$4 >> 2];
 HEAP8[152854] = 0;
 HEAP8[152853] = 1;
 HEAP32[38214] = $2;
 HEAP32[38208] = 0;
 HEAP8[152836] = 0;
 $12 = $2 + 584 | 0;
 HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + -1;
 $15 = $2 + 588 | 0;
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + -1;
 L1 : do switch ($data_type | 0) {
 case 0:
  {
   $19 = HEAP32[$data_ptr >> 2] | 0;
   if (($decimal_precision | 0) < 0) {
    HEAP32[$vararg_buffer >> 2] = $19;
    __Z14ImFormatStringPciPKcz($buf, 32, 126802, $vararg_buffer) | 0;
    break L1;
   } else {
    HEAP32[$vararg_buffer1 >> 2] = $decimal_precision;
    HEAP32[$vararg_buffer1 + 4 >> 2] = $19;
    __Z14ImFormatStringPciPKcz($buf, 32, 126805, $vararg_buffer1) | 0;
    break L1;
   }
   break;
  }
 case 1:
  {
   $22 = +HEAPF32[$data_ptr >> 2];
   if (($decimal_precision | 0) < 0) {
    HEAPF64[$vararg_buffer5 >> 3] = $22;
    __Z14ImFormatStringPciPKcz($buf, 32, 126810, $vararg_buffer5) | 0;
    break L1;
   } else {
    HEAP32[$vararg_buffer8 >> 2] = $decimal_precision;
    HEAPF64[$vararg_buffer8 + 8 >> 3] = $22;
    __Z14ImFormatStringPciPKcz($buf, 32, 126813, $vararg_buffer8) | 0;
    break L1;
   }
   break;
  }
 default:
  {}
 } while (0);
 $31 = +HEAPF32[$aabb + 12 >> 2] - +HEAPF32[$aabb + 4 >> 2];
 HEAPF32[$0 >> 2] = +HEAPF32[$aabb + 8 >> 2] - +HEAPF32[$aabb >> 2];
 HEAPF32[$0 + 4 >> 2] = $31;
 $33 = __ZN5ImGui11InputTextExEPKcPciRK6ImVec2iPFiP25ImGuiTextEditCallbackDataEPv($label, $buf, 32, $0, 17, 0, 0) | 0;
 $34 = HEAP32[$4 >> 2] | 0;
 $36 = HEAP32[$6 >> 2] | 0;
 do if (!$34) if (($36 | 0) == ($id | 0)) {
  HEAP32[$4 >> 2] = $id;
  HEAP32[38208] = $id;
  HEAP8[152836] = 0;
  break;
 } else ___assert_fail(126818, 124187, 5977, 126835); else if (($36 | 0) != ($34 | 0)) HEAP32[$4 >> 2] = 0; while (0);
 if (!$33) {
  STACKTOP = sp;
  return $33 | 0;
 }
 __ZL23DataTypeApplyOpFromTextPKcS0_13ImGuiDataTypePvS0_($buf, HEAP32[38388] | 0, $data_type, $data_ptr, 0);
 STACKTOP = sp;
 return $33 | 0;
}

function __ZN5Oryol3MapINS_2IdEiE5EraseERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$i4 = 0, $$0$i6 = 0, $$0$ph$i$i$i = 0, $$0$ph$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa20 = 0, $$pre12 = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $25 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $50 = 0, $52 = 0, $53 = 0, $59 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa19 = 0, $__len$0$ph$i$i$i = 0, label = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = ($0 | 0) == 0;
 if ($1) {
  $$0$i1 = 0;
  $$0$i6 = 0;
 } else {
  $$0$i1 = $0 + (HEAP32[$this + 12 >> 2] << 4) | 0;
  $$0$i6 = $0 + (HEAP32[$this + 8 >> 2] << 4) | 0;
 }
 $11 = $key;
 $13 = HEAP32[$11 >> 2] | 0;
 $16 = HEAP32[$11 + 4 >> 2] | 0;
 $$0$ph$i$i$i = $$0$i6;
 $__len$0$ph$i$i$i = $$0$i1 - $$0$i6 >> 4;
 L4 : while (1) {
  $__len$0$i$i$i = $__len$0$ph$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i) {
    $$0$ph$i$i$i$lcssa = $$0$ph$i$i$i;
    break L4;
   }
   $18 = ($__len$0$i$i$i | 0) / 2 | 0;
   $19 = $$0$ph$i$i$i + ($18 << 4) | 0;
   $20 = $19;
   $25 = HEAP32[$20 + 4 >> 2] | 0;
   if ($25 >>> 0 < $16 >>> 0 | (($25 | 0) == ($16 | 0) ? (HEAP32[$20 >> 2] | 0) >>> 0 < $13 >>> 0 : 0)) {
    $$lcssa = $18;
    $$lcssa20 = $19;
    $__len$0$i$i$i$lcssa19 = $__len$0$i$i$i;
    break;
   } else $__len$0$i$i$i = $18;
  }
  $$0$ph$i$i$i = $$lcssa20 + 16 | 0;
  $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa19 + -1 - $$lcssa | 0;
 }
 if ($1) $$0$i2 = 0; else $$0$i2 = $0 + (HEAP32[$this + 12 >> 2] << 4) | 0;
 if (($$0$ph$i$i$i$lcssa | 0) == ($$0$i2 | 0)) return;
 $$pre12 = $this + 8 | 0;
 if ($1) $$0$i4 = 0; else $$0$i4 = $0 + (HEAP32[$$pre12 >> 2] << 4) | 0;
 $40 = $$0$ph$i$i$i$lcssa - $$0$i4 | 0;
 $41 = $40 >> 4;
 $42 = $this + 12 | 0;
 $44 = HEAP32[$$pre12 >> 2] | 0;
 if (($41 | 0) >= ((HEAP32[$42 >> 2] | 0) - $44 | 0)) return;
 if (($40 | 0) <= -16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 115337);
  _abort();
 }
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 115337);
  _abort();
 } else {
  $50 = $44;
  $52 = $0;
 }
 while (1) {
  $53 = $52 + ($50 + $41 << 4) | 0;
  $59 = $key;
  if (!((HEAP32[$53 >> 2] | 0) == (HEAP32[$59 >> 2] | 0) ? (HEAP32[$53 + 4 >> 2] | 0) == (HEAP32[$59 + 4 >> 2] | 0) : 0)) {
   label = 21;
   break;
  }
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE5eraseEi($this, $41);
  $50 = HEAP32[$$pre12 >> 2] | 0;
  if (($41 | 0) >= ((HEAP32[$42 >> 2] | 0) - $50 | 0)) {
   label = 21;
   break;
  }
  $52 = HEAP32[$this >> 2] | 0;
  if (!$52) {
   label = 17;
   break;
  }
 }
 if ((label | 0) == 17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 115337);
  _abort();
 } else if ((label | 0) == 21) return;
}

function __ZN4yakc4kc8519update_rom_pointersEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $13 = 0, $21 = 0, $29 = 0, $37 = 0, $45 = 0, $5 = 0, $51 = 0, $59 = 0;
 $0 = $this + 725528 | 0;
 HEAP32[$0 >> 2] = 0;
 $1 = $this + 725532 | 0;
 HEAP32[$1 >> 2] = 0;
 switch (HEAP32[$this + 725500 >> 2] | 0) {
 case 0:
  {
   $5 = HEAP32[$this + 463208 >> 2] | 0;
   if (($5 | 0) == -1) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
    _abort();
   }
   HEAP32[$this + 725536 >> 2] = $this + 463316 + $5;
   HEAP32[$this + 725540 >> 2] = HEAP32[$this + 463212 >> 2];
   return;
  }
 case 1:
  {
   $13 = HEAP32[$this + 463216 >> 2] | 0;
   if (($13 | 0) == -1) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
    _abort();
   }
   HEAP32[$this + 725536 >> 2] = $this + 463316 + $13;
   HEAP32[$this + 725540 >> 2] = HEAP32[$this + 463220 >> 2];
   return;
  }
 case 2:
  {
   $21 = HEAP32[$this + 463224 >> 2] | 0;
   if (($21 | 0) == -1) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
    _abort();
   }
   HEAP32[$this + 725536 >> 2] = $this + 463316 + $21;
   HEAP32[$this + 725540 >> 2] = HEAP32[$this + 463228 >> 2];
   return;
  }
 case 3:
  {
   $29 = HEAP32[$this + 463232 >> 2] | 0;
   if (($29 | 0) == -1) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
    _abort();
   }
   HEAP32[$this + 725536 >> 2] = $this + 463316 + $29;
   HEAP32[$this + 725540 >> 2] = HEAP32[$this + 463236 >> 2];
   return;
  }
 case 4:
  {
   $37 = HEAP32[$this + 463240 >> 2] | 0;
   if (($37 | 0) == -1) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
    _abort();
   }
   HEAP32[$this + 725536 >> 2] = $this + 463316 + $37;
   HEAP32[$this + 725540 >> 2] = HEAP32[$this + 463244 >> 2];
   $45 = HEAP32[$this + 463248 >> 2] | 0;
   if (($45 | 0) == -1) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
    _abort();
   }
   HEAP32[$0 >> 2] = $this + 463316 + $45;
   HEAP32[$1 >> 2] = HEAP32[$this + 463252 >> 2];
   return;
  }
 case 5:
  {
   $51 = HEAP32[$this + 463256 >> 2] | 0;
   if (($51 | 0) == -1) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
    _abort();
   }
   HEAP32[$this + 725536 >> 2] = $this + 463316 + $51;
   HEAP32[$this + 725540 >> 2] = HEAP32[$this + 463260 >> 2];
   $59 = HEAP32[$this + 463264 >> 2] | 0;
   if (($59 | 0) == -1) {
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
    _abort();
   }
   HEAP32[$0 >> 2] = $this + 463316 + $59;
   HEAP32[$1 >> 2] = HEAP32[$this + 463268 >> 2];
   return;
  }
 default:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 34024, 268, 15039);
   _abort();
  }
 }
}

function __ZN5ImGui19IsMouseHoveringRectERK6ImVec2S2_b($pos_min, $pos_max, $clip) {
 $pos_min = $pos_min | 0;
 $pos_max = $pos_max | 0;
 $clip = $clip | 0;
 var $$idx2$val = 0.0, $$idx3$val = 0.0, $0 = 0, $10 = 0.0, $11 = 0, $15 = 0.0, $16 = 0, $2 = 0, $20 = 0.0, $21 = 0, $25 = 0.0, $3 = 0, $31 = 0.0, $34 = 0.0, $36 = 0.0, $40 = 0.0, $5 = 0, $7 = 0, $rect_clipped$sroa$0$0 = 0, $rect_clipped$sroa$0$1 = 0, $rect_clipped$sroa$10$0 = 0, $rect_clipped$sroa$10$1 = 0, $rect_clipped$sroa$14$1 = 0, $rect_clipped$sroa$6$0 = 0, $rect_clipped$sroa$6$1 = 0;
 $0 = HEAP32[$pos_min >> 2] | 0;
 $2 = HEAP32[$pos_min + 4 >> 2] | 0;
 $3 = HEAP32[$pos_max >> 2] | 0;
 $5 = HEAP32[$pos_max + 4 >> 2] | 0;
 if ($clip) {
  $7 = HEAP32[38201] | 0;
  $10 = +HEAPF32[$7 + 436 >> 2];
  $11 = (HEAP32[tempDoublePtr >> 2] = $0, +HEAPF32[tempDoublePtr >> 2]) < $10;
  $rect_clipped$sroa$0$0 = $11 ? (HEAPF32[tempDoublePtr >> 2] = $10, HEAP32[tempDoublePtr >> 2] | 0) : $0;
  $15 = +HEAPF32[$7 + 440 >> 2];
  $16 = (HEAP32[tempDoublePtr >> 2] = $2, +HEAPF32[tempDoublePtr >> 2]) < $15;
  $rect_clipped$sroa$6$0 = $16 ? (HEAPF32[tempDoublePtr >> 2] = $15, HEAP32[tempDoublePtr >> 2] | 0) : $2;
  $20 = +HEAPF32[$7 + 444 >> 2];
  $21 = (HEAP32[tempDoublePtr >> 2] = $3, +HEAPF32[tempDoublePtr >> 2]) > $20;
  $rect_clipped$sroa$10$0 = $21 ? (HEAPF32[tempDoublePtr >> 2] = $20, HEAP32[tempDoublePtr >> 2] | 0) : $3;
  $25 = +HEAPF32[$7 + 448 >> 2];
  if ((HEAP32[tempDoublePtr >> 2] = $5, +HEAPF32[tempDoublePtr >> 2]) > $25) {
   $rect_clipped$sroa$0$1 = $rect_clipped$sroa$0$0;
   $rect_clipped$sroa$10$1 = $rect_clipped$sroa$10$0;
   $rect_clipped$sroa$14$1 = (HEAPF32[tempDoublePtr >> 2] = $25, HEAP32[tempDoublePtr >> 2] | 0);
   $rect_clipped$sroa$6$1 = $rect_clipped$sroa$6$0;
  } else {
   $rect_clipped$sroa$0$1 = $rect_clipped$sroa$0$0;
   $rect_clipped$sroa$10$1 = $rect_clipped$sroa$10$0;
   $rect_clipped$sroa$14$1 = $5;
   $rect_clipped$sroa$6$1 = $rect_clipped$sroa$6$0;
  }
 } else {
  $rect_clipped$sroa$0$1 = $0;
  $rect_clipped$sroa$10$1 = $3;
  $rect_clipped$sroa$14$1 = $5;
  $rect_clipped$sroa$6$1 = $2;
 }
 $$idx2$val = +HEAPF32[37999];
 $$idx3$val = +HEAPF32[38e3];
 $31 = +HEAPF32[36771];
 if (!($31 >= (HEAP32[tempDoublePtr >> 2] = $rect_clipped$sroa$0$1, +HEAPF32[tempDoublePtr >> 2]) - $$idx2$val)) return 0; else {
  $34 = (HEAP32[tempDoublePtr >> 2] = $rect_clipped$sroa$14$1, +HEAPF32[tempDoublePtr >> 2]) + $$idx3$val;
  $36 = (HEAP32[tempDoublePtr >> 2] = $rect_clipped$sroa$10$1, +HEAPF32[tempDoublePtr >> 2]) + $$idx2$val;
  $40 = +HEAPF32[36772];
  return $31 < $36 & $40 >= (HEAP32[tempDoublePtr >> 2] = $rect_clipped$sroa$6$1, +HEAPF32[tempDoublePtr >> 2]) - $$idx3$val & $40 < $34 | 0;
 }
 return 0;
}

function __ZN5ImGui14ButtonBehaviorERK6ImRectjPbS3_i($bb, $id, $out_hovered, $out_held, $flags) {
 $bb = $bb | 0;
 $id = $id | 0;
 $out_hovered = $out_hovered | 0;
 $out_held = $out_held | 0;
 $flags = $flags | 0;
 var $$0 = 0, $1 = 0, $15 = 0, $24 = 0, $32 = 0, $52 = 0.0, $55 = 0.0, $58 = 0.0, $59 = 0.0, $61 = 0.0, $62 = 0, $7 = 0, $held$0$off0 = 0, $pressed$1$off0 = 0, $pressed$3$off0 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 if ($flags & 32 | 0) {
  if ($out_hovered | 0) HEAP8[$out_hovered >> 0] = 0;
  if ($out_held | 0) HEAP8[$out_held >> 0] = 0;
  $7 = 152844;
  if ((HEAP32[$7 >> 2] | 0) != ($id | 0)) {
   $$0 = 0;
   return $$0 | 0;
  }
  HEAP32[$7 >> 2] = 0;
  HEAP8[152854] = 0;
  HEAP8[152853] = 1;
  HEAP32[38214] = 0;
  $$0 = 0;
  return $$0 | 0;
 }
 $15 = __ZN5ImGui9IsHoveredERK6ImRectjb($bb, $id, ($flags & 8 | 0) != 0) | 0;
 do if ($15) {
  HEAP32[38208] = $id;
  HEAP8[152836] = 0;
  if ($flags & 128 | 0) {
   if (HEAP8[147105] | 0) {
    $pressed$1$off0 = 0;
    break;
   }
   $24 = HEAP16[73553] | 0;
   if (!(($24 & 255) << 24 >> 24 == 0 & ($24 & 65535) < 256)) {
    $pressed$1$off0 = 0;
    break;
   }
  }
  if (HEAP8[147696] | 0) {
   $32 = ($flags & 2 | 0) == 0;
   HEAP32[38211] = $32 ? $id : 0;
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = $32 ? $1 : 0;
   __ZN5ImGui11FocusWindowEP11ImGuiWindow($1);
   $pressed$1$off0 = $32 ^ 1;
   break;
  }
  if (!(($flags & 4 | 0) == 0 | (HEAP8[147769] | 0) == 0)) {
   HEAP32[38211] = 0;
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = 0;
   $pressed$1$off0 = 1;
   break;
  }
  if (!($flags & 1)) $pressed$1$off0 = 0; else if ((HEAP32[38211] | 0) == ($id | 0)) {
   $52 = +HEAPF32[36945];
   if (!($52 == 0.0)) {
    $55 = +HEAPF32[36752];
    if (!($52 > $55)) {
     $pressed$1$off0 = 0;
     break;
    }
    $58 = +HEAPF32[36753];
    $59 = $52 - $55;
    $61 = $58 * .5;
    $62 = +_fmodf($59, $58) > $61;
    if (!($62 ^ +_fmodf($59 - +HEAPF32[36726], $58) > $61)) {
     $pressed$1$off0 = 0;
     break;
    }
   }
   $pressed$1$off0 = 1;
  } else $pressed$1$off0 = 0;
 } else $pressed$1$off0 = 0; while (0);
 if ((HEAP32[38211] | 0) == ($id | 0)) if (!(HEAP8[147092] | 0)) {
  HEAP32[38211] = 0;
  HEAP8[152854] = 0;
  HEAP8[152853] = 1;
  HEAP32[38214] = 0;
  $held$0$off0 = 0;
  $pressed$3$off0 = $15 | $pressed$1$off0;
 } else {
  $held$0$off0 = 1;
  $pressed$3$off0 = $pressed$1$off0;
 } else {
  $held$0$off0 = 0;
  $pressed$3$off0 = $pressed$1$off0;
 }
 if ($out_hovered | 0) HEAP8[$out_hovered >> 0] = $15 & 1;
 if (!$out_held) {
  $$0 = $pressed$3$off0;
  return $$0 | 0;
 }
 HEAP8[$out_held >> 0] = $held$0$off0;
 $$0 = $pressed$3$off0;
 return $$0 | 0;
}

function __ZNK5Oryol5_priv15glShaderFactory13compileShaderENS_11ShaderStage4CodeEPKci($this, $stage, $sourceString, $sourceLen) {
 $this = $this | 0;
 $stage = $stage | 0;
 $sourceString = $sourceString | 0;
 $sourceLen = $sourceLen | 0;
 var $0 = 0, $1 = 0, $21 = 0, $5 = 0, $compileStatus = 0, $glShader$0 = 0, $logLength = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $0 = sp + 20 | 0;
 $1 = sp + 12 | 0;
 $compileStatus = sp + 24 | 0;
 $logLength = sp + 16 | 0;
 HEAP32[$0 >> 2] = $sourceString;
 HEAP32[$1 >> 2] = $sourceLen;
 if (!(($sourceString | 0) != 0 & ($sourceLen | 0) > 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(65616, 0, 65202, 183, 65648);
  _abort();
 }
 $5 = _glCreateShader(__ZN5Oryol5_priv7glTypes15asGLShaderStageENS_11ShaderStage4CodeE($stage) | 0) | 0;
 if (!$5) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(65744, 0, 65202, 186, 65648);
  _abort();
 }
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 187, 65648);
  _abort();
 }
 _glShaderSource($5 | 0, 1, $0 | 0, $1 | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 191, 65648);
  _abort();
 }
 _glCompileShader($5 | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 195, 65648);
  _abort();
 }
 HEAP32[$compileStatus >> 2] = 0;
 _glGetShaderiv($5 | 0, 35713, $compileStatus | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 200, 65648);
  _abort();
 }
 HEAP32[$logLength >> 2] = 0;
 _glGetShaderiv($5 | 0, 35716, $logLength | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 205, 65648);
  _abort();
 }
 do if ((HEAP32[$logLength >> 2] | 0) > 0) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$0 >> 2];
  __ZN5Oryol3Log4InfoEPKcz(65758, $vararg_buffer);
  $21 = __ZN5Oryol6Memory5AllocEi(HEAP32[$logLength >> 2] | 0) | 0;
  _glGetShaderInfoLog($5 | 0, HEAP32[$logLength >> 2] | 0, $logLength | 0, $21 | 0);
  if (!(_glGetError() | 0)) {
   HEAP32[$vararg_buffer1 >> 2] = $21;
   __ZN5Oryol3Log4InfoEPKcz(65778, $vararg_buffer1);
   __ZN5Oryol6Memory4FreeEPv($21);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 214, 65648);
   _abort();
  }
 } while (0);
 if (HEAP32[$compileStatus >> 2] | 0) {
  $glShader$0 = $5;
  STACKTOP = sp;
  return $glShader$0 | 0;
 }
 _glDeleteShader($5 | 0);
 if (!(_glGetError() | 0)) {
  $glShader$0 = 0;
  STACKTOP = sp;
  return $glShader$0 | 0;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 223, 65648);
  _abort();
 }
 return 0;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $$pre$phi5Z2D = 0, $$pre4$pre$phiZZ2D = 0, $1 = 0, $12 = 0, $13 = 0, $15 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $28 = 0, $35 = 0, $4 = 0, $44 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0, label = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 17336);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 17336);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 5) | 0;
 $13 = $12 + ($newStart << 5) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 17336);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 5) | 0;
  do {
   __ZN5Oryol10StringAtom4copyERKS0_($dst$02, $src$01);
   HEAP32[$src$01 >> 2] = 0;
   $20 = $dst$02 + 8 | 0;
   $21 = $src$01 + 24 | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   do if (!$22) {
    HEAP32[$dst$02 + 24 >> 2] = 0;
    $$pre4$pre$phiZZ2D = $src$01 + 8 | 0;
    label = 15;
   } else {
    $25 = $src$01 + 8 | 0;
    if (($22 | 0) == ($25 | 0)) {
     HEAP32[$dst$02 + 24 >> 2] = $20;
     $28 = HEAP32[$21 >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$28 >> 2] | 0) + 12 >> 2] & 63]($28, $20);
     $$pre4$pre$phiZZ2D = $25;
     label = 15;
     break;
    } else {
     HEAP32[$dst$02 + 24 >> 2] = $22;
     HEAP32[$21 >> 2] = 0;
     $$pre$phi5Z2D = $25;
     $35 = 0;
     break;
    }
   } while (0);
   $dst$02 = $dst$02 + 32 | 0;
   if ((label | 0) == 15) {
    label = 0;
    $$pre$phi5Z2D = $$pre4$pre$phiZZ2D;
    $35 = HEAP32[$21 >> 2] | 0;
   }
   if (($35 | 0) == ($$pre$phi5Z2D | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pre$phi5Z2D >> 2] | 0) + 16 >> 2] & 255]($$pre$phi5Z2D); else if ($35 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35 >> 2] | 0) + 20 >> 2] & 255]($35);
   HEAP32[$src$01 >> 2] = 0;
   $src$01 = $src$01 + 32 | 0;
   $i$03 = $i$03 + 1 | 0;
  } while (($i$03 | 0) != ($8 | 0));
 }
 $44 = HEAP32[$this >> 2] | 0;
 if ($44 | 0) __ZN5Oryol6Memory4FreeEPv($44);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN14KeyboardWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $19 = 0, $2 = 0, $23 = 0.0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $35 = 0, $41 = 0, $42 = 0, $7 = 0, $col$01 = 0, $row$03 = 0, $size = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp + 24 | 0;
 $size = sp + 32 | 0;
 $1 = sp + 16 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZN5ImGui12PushStyleVarEif(0, .75);
 HEAPF32[$0 >> 2] = 572.0;
 HEAPF32[$0 + 4 >> 2] = 196.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 0);
 $7 = $this + 8 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $7, 130) | 0)) {
  __ZN5ImGui3EndEv();
  __ZN5ImGui11PopStyleVarEi(1);
  $41 = HEAP8[$7 >> 0] | 0;
  $42 = $41 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $42 | 0;
 }
 HEAPF32[$size >> 2] = 32.0;
 HEAPF32[$size + 4 >> 2] = 24.0;
 $10 = $1 + 4 | 0;
 $11 = $this + 21 | 0;
 $12 = $this + 20 | 0;
 $13 = $kc + 725524 | 0;
 $row$03 = 0;
 do {
  $col$01 = 0;
  do {
   $19 = HEAP32[1072 + ($row$03 * 156 | 0) + ($col$01 * 12 | 0) + 4 >> 2] | 0;
   L8 : do if ($19 | 0) {
    if ($col$01 | 0) __ZN5ImGui8SameLineEff(0.0, -1.0);
    $23 = +HEAPF32[1072 + ($row$03 * 156 | 0) + ($col$01 * 12 | 0) >> 2];
    if ($23 > 0.0) {
     HEAPF32[$1 >> 2] = $23;
     HEAPF32[$10 >> 2] = 0.0;
     __ZN5ImGui5DummyERK6ImVec2($1);
     __ZN5ImGui8SameLineEff(0.0, -1.0);
    }
    if (__ZN5ImGui6ButtonEPKcRK6ImVec2($19, $size) | 0) {
     $27 = HEAP8[1072 + ($row$03 * 156 | 0) + ($col$01 * 12 | 0) + 8 >> 0] | 0;
     switch ($27 << 24 >> 24) {
     case 22:
      {
       $29 = HEAP8[$11 >> 0] ^ 1;
       HEAP8[$11 >> 0] = $29;
       HEAP8[$12 >> 0] = $29;
       break;
      }
     case -1:
      {
       HEAP8[$12 >> 0] = 1;
       break L8;
       break;
      }
     default:
      {}
     }
     $30 = HEAP16[$12 >> 1] | 0;
     if (!(($30 & 255) << 24 >> 24)) $35 = $27; else $35 = HEAP8[1072 + ($row$03 * 156 | 0) + ($col$01 * 12 | 0) + 9 >> 0] | 0;
     HEAP8[$13 >> 0] = $35;
     if (($30 & 65535) < 256) HEAP8[$12 >> 0] = 0;
    }
   } while (0);
   $col$01 = $col$01 + 1 | 0;
  } while (($col$01 | 0) != 13);
  $row$03 = $row$03 + 1 | 0;
 } while (($row$03 | 0) != 5);
 HEAPF32[$2 >> 2] = 80.0;
 HEAPF32[$2 + 4 >> 2] = 0.0;
 __ZN5ImGui5DummyERK6ImVec2($2);
 __ZN5ImGui8SameLineEff(0.0, -1.0);
 HEAPF32[$3 >> 2] = 224.0;
 HEAPF32[$3 + 4 >> 2] = 0.0;
 if (__ZN5ImGui6ButtonEPKcRK6ImVec2(36566, $3) | 0) HEAP8[$13 >> 0] = HEAP8[$11 >> 0] | 0 ? 91 : 32;
 __ZN5ImGui3EndEv();
 __ZN5ImGui11PopStyleVarEi(1);
 $41 = HEAP8[$7 >> 0] | 0;
 $42 = $41 << 24 >> 24 != 0;
 STACKTOP = sp;
 return $42 | 0;
}

function __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE6AssignERKNS_2IdERKS3_NS_13ResourceState4CodeE($this, $id, $setup, $state) {
 $this = $this | 0;
 $id = $id | 0;
 $setup = $setup | 0;
 $state = $state | 0;
 var $11 = 0, $13 = 0, $14 = 0, $15 = 0, $22 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $37 = 0, $38 = 0, $51 = 0, $56 = 0, $58 = 0, $7 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 169, 56389);
  _abort();
 }
 $3 = HEAPU16[$id >> 1] | 0;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 56282);
  _abort();
 }
 $11 = HEAP32[$this + 16 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 56282);
  _abort();
 }
 $13 = $7 + $3 | 0;
 $14 = $11 + ($13 * 608 | 0) | 0;
 $15 = $11 + ($13 * 608 | 0) + 8 | 0;
 if ((HEAP32[$15 >> 2] | 0) == 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53850, 0, 48917, 172, 56389);
  _abort();
 }
 HEAP32[$15 >> 2] = $state;
 HEAP32[$11 + ($13 * 608 | 0) + 12 >> 2] = HEAP32[$this + 4 >> 2];
 if (($14 | 0) != ($id | 0)) {
  $22 = $id;
  $27 = HEAP32[$22 + 4 >> 2] | 0;
  $28 = $14;
  HEAP32[$28 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$28 + 4 >> 2] = $27;
 }
 $32 = $11 + ($13 * 608 | 0) + 16 | 0;
 $33 = ($32 | 0) == ($setup | 0);
 if (!$33) {
  HEAP32[$32 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($32, $setup);
 }
 HEAP32[$11 + ($13 * 608 | 0) + 20 >> 2] = HEAP32[$setup + 4 >> 2];
 $37 = $11 + ($13 * 608 | 0) + 24 | 0;
 $38 = $setup + 8 | 0;
 HEAP32[$37 >> 2] = HEAP32[$38 >> 2];
 HEAP32[$37 + 4 >> 2] = HEAP32[$38 + 4 >> 2];
 HEAP32[$37 + 8 >> 2] = HEAP32[$38 + 8 >> 2];
 HEAP32[$37 + 12 >> 2] = HEAP32[$38 + 12 >> 2];
 HEAP32[$37 + 16 >> 2] = HEAP32[$38 + 16 >> 2];
 HEAP32[$37 + 20 >> 2] = HEAP32[$38 + 20 >> 2];
 HEAP32[$37 + 24 >> 2] = HEAP32[$38 + 24 >> 2];
 HEAP32[$37 + 28 >> 2] = HEAP32[$38 + 28 >> 2];
 HEAP16[$37 + 32 >> 1] = HEAP16[$38 + 32 >> 1] | 0;
 __ZN5Oryol12VertexLayoutaSERKS0_($11 + ($13 * 608 | 0) + 58 | 0, $setup + 42 | 0) | 0;
 __ZN5Oryol12VertexLayoutaSERKS0_($11 + ($13 * 608 | 0) + 126 | 0, $setup + 110 | 0) | 0;
 __ZN5Oryol12VertexLayoutaSERKS0_($11 + ($13 * 608 | 0) + 194 | 0, $setup + 178 | 0) | 0;
 __ZN5Oryol12VertexLayoutaSERKS0_($11 + ($13 * 608 | 0) + 262 | 0, $setup + 246 | 0) | 0;
 HEAP32[$11 + ($13 * 608 | 0) + 332 >> 2] = HEAP32[$setup + 316 >> 2];
 if ($33) return $14 | 0;
 $51 = $setup + 320 | 0;
 $56 = HEAP32[$51 + 4 >> 2] | 0;
 $58 = $11 + ($13 * 608 | 0) + 336 | 0;
 HEAP32[$58 >> 2] = HEAP32[$51 >> 2];
 HEAP32[$58 + 4 >> 2] = $56;
 return $14 | 0;
}

function __ZN5Oryol3SetINS_15stringAtomTable5EntryEE3AddERKS2_($this, $val) {
 $this = $this | 0;
 $val = $val | 0;
 var $$0$i$i1 = 0, $$0$i$i2 = 0, $$0$ph$i$i$i = 0, $$0$ph$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa14 = 0, $0 = 0, $13 = 0, $14 = 0, $22 = 0, $24 = 0, $32 = 0, $34 = 0, $37 = 0, $41 = 0, $42 = 0, $9 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa13 = 0, $__len$0$ph$i$i$i = 0, $growBy$0$i$i = 0, $slotConstructed$i$i = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $slotConstructed$i$i = sp + 4 | 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  $$0$i$i1 = 0;
  $$0$i$i2 = 0;
 } else {
  $$0$i$i1 = $0 + (HEAP32[$this + 12 >> 2] << 2) | 0;
  $$0$i$i2 = $0 + (HEAP32[$this + 8 >> 2] << 2) | 0;
 }
 $9 = $$0$i$i2;
 $$0$ph$i$i$i = $$0$i$i2;
 $__len$0$ph$i$i$i = $$0$i$i1 - $9 >> 2;
 L4 : while (1) {
  $__len$0$i$i$i = $__len$0$ph$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i) {
    $$0$ph$i$i$i$lcssa = $$0$ph$i$i$i;
    break L4;
   }
   $13 = ($__len$0$i$i$i | 0) / 2 | 0;
   $14 = $$0$ph$i$i$i + ($13 << 2) | 0;
   if (__ZNK5Oryol15stringAtomTable5EntryltERKS1_($14, $val) | 0) {
    $$lcssa = $13;
    $$lcssa14 = $14;
    $__len$0$i$i$i$lcssa13 = $__len$0$i$i$i;
    break;
   } else $__len$0$i$i$i = $13;
  }
  $$0$ph$i$i$i = $$lcssa14 + 4 | 0;
  $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa13 + -1 - $$lcssa | 0;
 }
 if (($$0$ph$i$i$i$lcssa | 0) != ($$0$i$i1 | 0)) if (__ZNK5Oryol15stringAtomTable5EntryeqERKS1_($$0$ph$i$i$i$lcssa, $val) | 0) {
  __ZN5Oryol3Log5ErrorEPKcz(122390, $vararg_buffer);
  _abort();
 }
 $22 = $$0$ph$i$i$i$lcssa - $9 >> 2;
 $24 = HEAP32[$this + 4 >> 2] | 0;
 if (($24 - (HEAP32[$this + 12 >> 2] | 0) | 0) != (0 - (HEAP32[$this + 8 >> 2] | 0) | 0)) {
  HEAP8[$slotConstructed$i$i >> 0] = 1;
  $41 = __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE13prepareInsertEiRb($this, $22, $slotConstructed$i$i) | 0;
  $42 = HEAP32[$val >> 2] | 0;
  HEAP32[$41 >> 2] = $42;
  STACKTOP = sp;
  return;
 }
 $32 = $24 >> 1;
 $34 = HEAP32[$this + 16 >> 2] | 0;
 if (($32 | 0) < ($34 | 0)) $growBy$0$i$i = $34; else {
  $37 = HEAP32[$this + 20 >> 2] | 0;
  $growBy$0$i$i = ($32 | 0) > ($37 | 0) ? $37 : $32;
 }
 if (($growBy$0$i$i | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 122427);
  _abort();
 }
 __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE5allocEii($this, $growBy$0$i$i + $24 | 0, 0);
 HEAP8[$slotConstructed$i$i >> 0] = 1;
 $41 = __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE13prepareInsertEiRb($this, $22, $slotConstructed$i$i) | 0;
 $42 = HEAP32[$val >> 2] | 0;
 HEAP32[$41 >> 2] = $42;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE13prepareInsertEiRb($this, $index, $outSlotConstructed) {
 $this = $this | 0;
 $index = $index | 0;
 $outSlotConstructed = $outSlotConstructed | 0;
 var $$1 = 0, $0 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0;
 HEAP8[$outSlotConstructed >> 0] = 1;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 if (($4 | 0) == ($index | 0)) {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   HEAP32[$0 >> 2] = $1 + 1;
   $$1 = (HEAP32[$this >> 2] | 0) + ($1 << 5) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 527, 17585);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 if (!$index) {
  if (($3 | 0) > 0) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   $16 = $3 + -1 | 0;
   HEAP32[$2 >> 2] = $16;
   $$1 = (HEAP32[$this >> 2] | 0) + ($16 << 5) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 543, 17585);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE14moveInsertBackEi($this, 0) | 0;
  return $$1 | 0;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  if (($3 | 0) > 0) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE15moveInsertFrontEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123198, 0, 123391, 557, 17585);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE14moveInsertBackEi($this, $index) | 0;
  return $$1 | 0;
 } else {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE14moveInsertBackEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123220, 0, 123391, 569, 17585);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 return 0;
}

function __ZN5Oryol5_priv12emscInputMgr9emscTouchEiPK20EmscriptenTouchEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $event = 0, $i$01 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 $event = sp;
 HEAP32[$event >> 2] = 4;
 $0 = $event + 8 | 0;
 $1 = $event + 36 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP8[$0 + 24 >> 0] = 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP8[$1 + 12 >> 0] = 0;
 $2 = $event + 52 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP8[$2 + 12 >> 0] = 0;
 $3 = $event + 68 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP8[$3 + 12 >> 0] = 0;
 $4 = $event + 84 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP8[$4 + 12 >> 0] = 0;
 $5 = $event + 100 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP8[$5 + 12 >> 0] = 0;
 $6 = $event + 116 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP8[$6 + 12 >> 0] = 0;
 $7 = $event + 132 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP8[$7 + 12 >> 0] = 0;
 switch ($eventType | 0) {
 case 22:
  {
   HEAP32[$event >> 2] = 0;
   break;
  }
 case 23:
  {
   HEAP32[$event >> 2] = 2;
   break;
  }
 case 24:
  {
   HEAP32[$event >> 2] = 1;
   break;
  }
 case 25:
  {
   HEAP32[$event >> 2] = 3;
   break;
  }
 default:
  {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $8 = __ZN5Oryol5Clock3NowEv() | 0;
 $10 = $0;
 HEAP32[$10 >> 2] = $8;
 HEAP32[$10 + 4 >> 2] = tempRet0;
 $14 = HEAP32[$e >> 2] | 0;
 $15 = $event + 16 | 0;
 HEAP32[$15 >> 2] = $14;
 if (($14 | 0) > 0) {
  $i$01 = 0;
  do {
   HEAP32[$event + 20 + ($i$01 << 4) >> 2] = HEAP32[$e + 20 + ($i$01 * 52 | 0) >> 2];
   HEAPF32[$event + 20 + ($i$01 << 4) + 4 >> 2] = +(HEAP32[$e + 20 + ($i$01 * 52 | 0) + 44 >> 2] | 0);
   HEAPF32[$event + 20 + ($i$01 << 4) + 8 >> 2] = +(HEAP32[$e + 20 + ($i$01 * 52 | 0) + 48 >> 2] | 0);
   HEAP8[$event + 20 + ($i$01 << 4) + 12 >> 0] = (HEAP32[$e + 20 + ($i$01 * 52 | 0) + 28 >> 2] | 0) != 0 & 1;
   $i$01 = $i$01 + 1 | 0;
  } while (($i$01 | 0) < (HEAP32[$15 >> 2] | 0));
 }
 __ZN5Oryol5_priv12inputMgrBase12onTouchEventERKNS0_10touchEventE($userData, $event);
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol5_priv10glRenderer17applyStencilStateERKNS_17DepthStencilStateES4_j($this, $newState, $curState, $glFace) {
 $this = $this | 0;
 $newState = $newState | 0;
 $curState = $curState | 0;
 $glFace = $glFace | 0;
 var $10 = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $6 = 0, $62 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 824, 68349);
  _abort();
 }
 $2 = ($glFace | 0) == 1028;
 $4 = $2 ? $newState : $newState + 2 | 0;
 $6 = $2 ? $curState : $curState + 2 | 0;
 $7 = HEAP16[$4 >> 1] | 0;
 $8 = ($7 & 65535) >>> 12;
 $9 = $8 & 65535;
 $10 = $newState + 4 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 $14 = ($11 & 65535) >>> 7 & 255;
 $15 = $14 & 65535;
 $16 = $10 + 2 | 0;
 $17 = $11 >>> 24;
 $18 = $17 & 65535;
 $19 = HEAP16[$6 >> 1] | 0;
 if ($8 << 16 >> 16 == ($19 & 65535) >>> 12 << 16 >> 16) {
  $23 = HEAP32[$curState + 4 >> 2] | 0;
  if ($14 << 16 >> 16 == (($23 & 65535) >>> 7 & 255)) if ($18 << 16 >> 16 == ($23 >>> 24 & 65535) << 16 >> 16) {
   $35 = $7;
   $44 = $19;
  } else label = 6; else label = 6;
 } else label = 6;
 do if ((label | 0) == 6) if ($7 << 16 >> 16 > -1) {
  _glStencilFuncSeparate($glFace | 0, HEAP32[13016 + ($9 << 2) >> 2] | 0, $17 | 0, $15 | 0);
  $35 = HEAP16[$4 >> 1] | 0;
  $44 = HEAP16[$6 >> 1] | 0;
  break;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68474, 0, 66399, 833, 68349);
  _abort();
 } while (0);
 $34 = $35 & 15;
 $36 = $34 & 65535;
 $38 = ($35 & 65535) >>> 4 & 15;
 $39 = $38 & 65535;
 $41 = ($35 & 65535) >>> 8 & 15;
 $42 = $41 & 65535;
 if ($34 << 16 >> 16 == ($44 & 15)) if ($38 << 16 >> 16 == (($44 & 65535) >>> 4 & 15)) {
  if ($41 << 16 >> 16 != (($44 & 65535) >>> 8 & 15)) label = 12;
 } else label = 12; else label = 12;
 do if ((label | 0) == 12) {
  if (($34 & 65535) >= 8) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68543, 0, 66399, 841, 68349);
   _abort();
  }
  if (($38 & 65535) >= 8) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68615, 0, 66399, 842, 68349);
   _abort();
  }
  if (($41 & 65535) < 8) {
   _glStencilOpSeparate($glFace | 0, HEAP32[13048 + ($36 << 2) >> 2] | 0, HEAP32[13048 + ($39 << 2) >> 2] | 0, HEAP32[13048 + ($42 << 2) >> 2] | 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68687, 0, 66399, 843, 68349);
   _abort();
  }
 } while (0);
 $62 = HEAP16[$16 >> 1] & 255;
 if ($62 << 16 >> 16 == (HEAP16[$curState + 4 + 2 >> 1] & 255)) return;
 _glStencilMaskSeparate($glFace | 0, $62 & 65535 | 0);
 return;
}

function __ZN5Oryol3MapINS_2IdEiE3AddEONS_12KeyValuePairIS1_iEE($this, $kvp) {
 $this = $this | 0;
 $kvp = $kvp | 0;
 var $$0$i1 = 0, $$0$i3 = 0, $$0$i4 = 0, $$0$ph$i$i$i = 0, $$0$ph$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa17 = 0, $12 = 0, $13 = 0, $21 = 0, $23 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $35 = 0, $48 = 0, $5 = 0, $52 = 0, $57 = 0, $58 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa16 = 0, $__len$0$ph$i$i$i = 0, $slotConstructed$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $slotConstructed$i = sp;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 300, 113661);
  _abort();
 }
 $5 = $this + 12 | 0;
 $7 = $this + 8 | 0;
 if (((HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) | 0) == (0 - (HEAP32[$7 >> 2] | 0) | 0)) __ZN5Oryol3MapINS_2IdEiE4growEv($this);
 $12 = HEAP32[$this >> 2] | 0;
 $13 = ($12 | 0) == 0;
 if ($13) {
  $$0$i3 = 0;
  $$0$i4 = 0;
 } else {
  $$0$i3 = $12 + (HEAP32[$5 >> 2] << 4) | 0;
  $$0$i4 = $12 + (HEAP32[$7 >> 2] << 4) | 0;
 }
 $21 = $kvp;
 $23 = HEAP32[$21 >> 2] | 0;
 $26 = HEAP32[$21 + 4 >> 2] | 0;
 $$0$ph$i$i$i = $$0$i4;
 $__len$0$ph$i$i$i = $$0$i3 - $$0$i4 >> 4;
 L10 : while (1) {
  $__len$0$i$i$i = $__len$0$ph$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i) {
    $$0$ph$i$i$i$lcssa = $$0$ph$i$i$i;
    break L10;
   }
   $28 = ($__len$0$i$i$i | 0) / 2 | 0;
   $29 = $$0$ph$i$i$i + ($28 << 4) | 0;
   $30 = $29;
   $35 = HEAP32[$30 + 4 >> 2] | 0;
   if ($35 >>> 0 < $26 >>> 0 | (($35 | 0) == ($26 | 0) ? (HEAP32[$30 >> 2] | 0) >>> 0 < $23 >>> 0 : 0)) {
    $$lcssa = $28;
    $$lcssa17 = $29;
    $__len$0$i$i$i$lcssa16 = $__len$0$i$i$i;
    break;
   } else $__len$0$i$i$i = $28;
  }
  $$0$ph$i$i$i = $$lcssa17 + 16 | 0;
  $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa16 + -1 - $$lcssa | 0;
 }
 if ($13) $$0$i1 = 0; else $$0$i1 = $12 + (HEAP32[$7 >> 2] << 4) | 0;
 HEAP8[$slotConstructed$i >> 0] = 1;
 $48 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE13prepareInsertEiRb($this, $$0$ph$i$i$i$lcssa - $$0$i1 >> 4, $slotConstructed$i) | 0;
 if (!(HEAP8[$slotConstructed$i >> 0] | 0)) {
  $65 = $kvp;
  $70 = HEAP32[$65 + 4 >> 2] | 0;
  $71 = $48;
  HEAP32[$71 >> 2] = HEAP32[$65 >> 2];
  HEAP32[$71 + 4 >> 2] = $70;
  HEAP32[$48 + 8 >> 2] = HEAP32[$kvp + 8 >> 2];
  STACKTOP = sp;
  return;
 }
 if (($48 | 0) == ($kvp | 0)) {
  STACKTOP = sp;
  return;
 }
 $52 = $kvp;
 $57 = HEAP32[$52 + 4 >> 2] | 0;
 $58 = $48;
 HEAP32[$58 >> 2] = HEAP32[$52 >> 2];
 HEAP32[$58 + 4 >> 2] = $57;
 HEAP32[$48 + 8 >> 2] = HEAP32[$kvp + 8 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glRenderer13updateIndicesEPNS0_4meshEPKvi($this, $msh, $data, $numBytes) {
 $this = $this | 0;
 $msh = $msh | 0;
 $data = $data | 0;
 $numBytes = $numBytes | 0;
 var $$$i = 0, $$0$i$i = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $29 = 0, $33 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 616, 70001);
  _abort();
 }
 if (!$msh) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69703, 0, 66399, 617, 70001);
  _abort();
 }
 if (!$data) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80919, 0, 66399, 618, 70001);
  _abort();
 }
 $5 = HEAP32[$msh + 288 >> 2] | 0;
 if (!$5) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70087, 0, 66399, 620, 70001);
  _abort();
 }
 if (($numBytes | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70133, 0, 66399, 621, 70001);
  _abort();
 }
 $9 = HEAP32[$msh + 284 >> 2] | 0;
 switch ($5 | 0) {
 case 2:
  {
   $$0$i$i = 4;
   break;
  }
 case 1:
  {
   $$0$i$i = 2;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(69405, sp);
   _abort();
  }
 }
 if ((Math_imul($$0$i$i, $9) | 0) < ($numBytes | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70133, 0, 66399, 621, 70001);
  _abort();
 }
 if (!(HEAP32[$msh + 292 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70198, 0, 66399, 622, 70001);
  _abort();
 }
 $16 = HEAP32[$this + 204 >> 2] | 0;
 $17 = $msh + 380 | 0;
 if ((HEAP32[$17 >> 2] | 0) == ($16 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69839, 69874, 66399, 583, 69926);
  _abort();
 }
 HEAP32[$17 >> 2] = $16;
 $20 = $msh + 385 | 0;
 $22 = (HEAP8[$20 >> 0] | 0) + 1 << 24 >> 24;
 $$$i = ($22 & 255) < (HEAPU8[$msh + 384 >> 0] | 0) ? $22 : 0;
 HEAP8[$20 >> 0] = $$$i;
 if (($$$i & 255) >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 73407);
  _abort();
 }
 $29 = HEAP32[$msh + 388 + (($$$i & 255) << 2) >> 2] | 0;
 if (!$29) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69987, 0, 66399, 626, 70001);
  _abort();
 }
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 746, 67526);
  _abort();
 }
 $33 = $this + 296 | 0;
 if ((HEAP32[$33 >> 2] | 0) != ($29 | 0)) {
  HEAP32[$33 >> 2] = $29;
  _glBindBuffer(34963, $29 | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 751, 67526);
   _abort();
  }
 }
 _glBufferSubData(34963, 0, $numBytes | 0, $data | 0);
 if (!(_glGetError() | 0)) {
  STACKTOP = sp;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 629, 70001);
  _abort();
 }
}

function __ZN5Oryol5_priv13glMeshFactory15createEmptyMeshERNS0_4meshE($this, $mesh) {
 $this = $this | 0;
 $mesh = $mesh | 0;
 var $$0$i = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $29 = 0, $31 = 0, $32 = 0, $35 = 0, $37 = 0, $38 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (HEAP32[$mesh + 372 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(63779, 0, 63465, 209, 63820);
  _abort();
 }
 if (HEAP32[$mesh + 388 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(63907, 0, 63465, 210, 63820);
  _abort();
 }
 __ZN5Oryol5_priv13glMeshFactory10setupAttrsERNS0_4meshE(0, $mesh);
 __ZN5Oryol5_priv13glMeshFactory15setupPrimGroupsERNS0_4meshE(0, $mesh);
 if ((HEAP32[$mesh + 92 >> 2] | 0) > 0) {
  $14 = Math_imul(HEAPU8[$mesh + 279 >> 0] | 0, HEAP32[$mesh + 208 >> 2] | 0) | 0;
  $15 = $mesh + 280 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  $19 = $mesh + 368 | 0;
  HEAP8[$19 >> 0] = ($16 | 0) == 2 ? 2 : 1;
  HEAP32[$mesh + 372 >> 2] = __ZN5Oryol5_priv13glMeshFactory18createVertexBufferEPKvjNS_5Usage4CodeE($this, 0, $14, $16) | 0;
  if ((HEAPU8[$19 >> 0] | 0) > 1) {
   HEAP32[$mesh + 376 >> 2] = __ZN5Oryol5_priv13glMeshFactory18createVertexBufferEPKvjNS_5Usage4CodeE($this, 0, $14, HEAP32[$15 >> 2] | 0) | 0;
   if ((HEAPU8[$19 >> 0] | 0) > 2) {
    __ZN5Oryol5_priv13glMeshFactory18createVertexBufferEPKvjNS_5Usage4CodeE($this, 0, $14, HEAP32[$15 >> 2] | 0) | 0;
    __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 73407);
    _abort();
   }
  }
 }
 $29 = HEAP32[$mesh + 288 >> 2] | 0;
 if (!$29) {
  STACKTOP = sp;
  return 3;
 }
 $31 = $mesh + 292 | 0;
 $32 = HEAP32[$31 >> 2] | 0;
 $35 = $mesh + 384 | 0;
 HEAP8[$35 >> 0] = ($32 | 0) == 2 ? 2 : 1;
 $37 = HEAP32[$mesh + 284 >> 2] | 0;
 switch ($29 | 0) {
 case 2:
  {
   $$0$i = 4;
   break;
  }
 case 1:
  {
   $$0$i = 2;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(69405, $vararg_buffer);
   _abort();
  }
 }
 $38 = Math_imul($$0$i, $37) | 0;
 HEAP32[$mesh + 388 >> 2] = __ZN5Oryol5_priv13glMeshFactory17createIndexBufferEPKvjNS_5Usage4CodeE($this, 0, $38, $32) | 0;
 if ((HEAPU8[$35 >> 0] | 0) <= 1) {
  STACKTOP = sp;
  return 3;
 }
 HEAP32[$mesh + 392 >> 2] = __ZN5Oryol5_priv13glMeshFactory17createIndexBufferEPKvjNS_5Usage4CodeE($this, 0, $38, HEAP32[$31 >> 2] | 0) | 0;
 if ((HEAPU8[$35 >> 0] | 0) > 2) {
  __ZN5Oryol5_priv13glMeshFactory17createIndexBufferEPKvjNS_5Usage4CodeE($this, 0, $38, HEAP32[$31 >> 2] | 0) | 0;
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 73407);
  _abort();
 } else {
  STACKTOP = sp;
  return 3;
 }
 return 0;
}

function __ZN5ImGui17CloseCurrentPopupEv() {
 var $1 = 0, $13 = 0, $18 = 0, $2 = 0, $20 = 0, $26 = 0, $35 = 0, $36 = 0, $37 = 0, $43 = 0, $44 = 0, $47 = 0, $5 = 0, $52 = 0, $53 = 0, $57 = 0, $59 = 0, $popup_idx$0$lcssa = 0, $popup_idx$010 = 0, $popup_idx$010$lcssa19 = 0, $popup_idx$08 = 0, label = 0;
 $1 = HEAP32[38232] | 0;
 $2 = $1 + -1 | 0;
 if (($1 | 0) < 1) return;
 $5 = HEAP32[38229] | 0;
 if (($2 | 0) > ($5 | 0)) return;
 if (($5 | 0) < ($1 | 0)) ___assert_fail(127217, 127226, 805, 127272);
 $13 = HEAP32[38231] | 0;
 if ((HEAP32[(HEAP32[38234] | 0) + ($2 * 24 | 0) >> 2] | 0) != (HEAP32[$13 + ($2 * 24 | 0) >> 2] | 0)) return;
 L13 : do if (($1 | 0) > 1) {
  $18 = ($1 | 0) > ($5 | 0);
  $popup_idx$010 = $2;
  while (1) {
   if ($18) {
    label = 9;
    break;
   }
   $20 = HEAP32[$13 + ($popup_idx$010 * 24 | 0) + 4 >> 2] | 0;
   if (!$20) {
    $popup_idx$010$lcssa19 = $popup_idx$010;
    break;
   }
   if (!(HEAP32[$20 + 8 >> 2] & 134217728)) {
    $popup_idx$010$lcssa19 = $popup_idx$010;
    break;
   }
   $26 = $popup_idx$010 + -1 | 0;
   if (($popup_idx$010 | 0) > 1) $popup_idx$010 = $26; else {
    $popup_idx$0$lcssa = $26;
    label = 16;
    break L13;
   }
  }
  if ((label | 0) == 9) ___assert_fail(127217, 127226, 805, 127272);
  if (($5 | 0) < ($popup_idx$010$lcssa19 | 0)) ___assert_fail(127217, 127226, 805, 127272); else {
   __ZN5ImGui11FocusWindowEP11ImGuiWindow(HEAP32[$13 + (($popup_idx$010$lcssa19 + -1 | 0) * 24 | 0) + 4 >> 2] | 0);
   $popup_idx$08 = $popup_idx$010$lcssa19;
   break;
  }
 } else {
  $popup_idx$0$lcssa = $2;
  label = 16;
 } while (0);
 do if ((label | 0) == 16) if (($5 | 0) > 0) {
  __ZN5ImGui11FocusWindowEP11ImGuiWindow(HEAP32[$13 + 8 >> 2] | 0);
  $popup_idx$08 = $popup_idx$0$lcssa;
  break;
 } else ___assert_fail(127217, 127226, 805, 127272); while (0);
 $35 = 152916;
 $36 = 152920;
 $37 = HEAP32[$36 >> 2] | 0;
 if (($37 | 0) < ($popup_idx$08 | 0)) {
  if (!$37) $43 = 8; else $43 = (($37 | 0) / 2 | 0) + $37 | 0;
  $44 = ($43 | 0) > ($popup_idx$08 | 0) ? $43 : $popup_idx$08;
  if (($37 | 0) < ($44 | 0)) {
   $47 = 147664;
   HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 1;
   $52 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($44 * 24 | 0) | 0;
   $53 = 152924;
   _memcpy($52 | 0, HEAP32[$53 >> 2] | 0, (HEAP32[$35 >> 2] | 0) * 24 | 0) | 0;
   $57 = HEAP32[$53 >> 2] | 0;
   if ($57 | 0) {
    $59 = 147664;
    HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($57);
   HEAP32[$53 >> 2] = $52;
   HEAP32[$36 >> 2] = $44;
  }
 }
 HEAP32[$35 >> 2] = $popup_idx$08;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE5eraseEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $1 = 0, $13 = 0, $2 = 0, $24 = 0, $3 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $4 = 0, $43 = 0, $46 = 0, $5 = 0, $57 = 0, $66 = 0, $67 = 0, $69 = 0, $70 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 610, 104261);
  _abort();
 }
 if (!$index) {
  HEAP32[$2 >> 2] = $3 + 1;
  $13 = HEAP32[$5 + ($3 * 56 | 0) + 48 >> 2] | 0;
  if (($13 | 0) == ($5 + ($3 * 56 | 0) + 32 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 16 >> 2] & 255]($13); else if ($13 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 20 >> 2] & 255]($13);
  $24 = HEAP32[$5 + ($3 * 56 | 0) + 24 >> 2] | 0;
  if (($24 | 0) == ($5 + ($3 * 56 | 0) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$24 >> 2] | 0) + 16 >> 2] & 255]($24); else if ($24 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$24 >> 2] | 0) + 20 >> 2] & 255]($24);
  $33 = $5 + ($3 * 56 | 0) | 0;
  $34 = HEAP32[$33 >> 2] | 0;
  if (!$34) return;
  $36 = $34 + 4 | 0;
  $37 = HEAP32[$36 >> 2] | 0;
  HEAP32[$36 >> 2] = $37 - 1;
  if (($37 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$34 >> 2] >> 2] & 255]($34);
  HEAP32[$33 >> 2] = 0;
  return;
 }
 if (($4 + -1 | 0) != ($index | 0)) if (($4 >> 1 | 0) > ($index | 0)) {
  __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE14moveEraseFrontEi($this, $index);
  return;
 } else {
  __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE13moveEraseBackEi($this, $index);
  return;
 }
 $43 = $1 + -1 | 0;
 HEAP32[$0 >> 2] = $43;
 $46 = HEAP32[$5 + ($43 * 56 | 0) + 48 >> 2] | 0;
 if (($46 | 0) == ($5 + ($43 * 56 | 0) + 32 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$46 >> 2] | 0) + 16 >> 2] & 255]($46); else if ($46 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$46 >> 2] | 0) + 20 >> 2] & 255]($46);
 $57 = HEAP32[$5 + ($43 * 56 | 0) + 24 >> 2] | 0;
 if (($57 | 0) == ($5 + ($43 * 56 | 0) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$57 >> 2] | 0) + 16 >> 2] & 255]($57); else if ($57 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$57 >> 2] | 0) + 20 >> 2] & 255]($57);
 $66 = $5 + ($43 * 56 | 0) | 0;
 $67 = HEAP32[$66 >> 2] | 0;
 if (!$67) return;
 $69 = $67 + 4 | 0;
 $70 = HEAP32[$69 >> 2] | 0;
 HEAP32[$69 >> 2] = $70 - 1;
 if (($70 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$67 >> 2] >> 2] & 255]($67);
 HEAP32[$66 >> 2] = 0;
 return;
}

function _memchr($src, $c, $n) {
 $src = $src | 0;
 $c = $c | 0;
 $n = $n | 0;
 var $$0$lcssa = 0, $$0$lcssa30 = 0, $$019 = 0, $$1$lcssa = 0, $$110 = 0, $$110$lcssa = 0, $$24 = 0, $$3 = 0, $$lcssa = 0, $0 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $32 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0, $s$0$lcssa = 0, $s$0$lcssa29 = 0, $s$020 = 0, $s$15 = 0, $s$2 = 0, $w$0$lcssa = 0, $w$011 = 0, $w$011$lcssa = 0, label = 0;
 $0 = $c & 255;
 $4 = ($n | 0) != 0;
 L1 : do if ($4 & ($src & 3 | 0) != 0) {
  $5 = $c & 255;
  $$019 = $n;
  $s$020 = $src;
  while (1) {
   if ((HEAP8[$s$020 >> 0] | 0) == $5 << 24 >> 24) {
    $$0$lcssa30 = $$019;
    $s$0$lcssa29 = $s$020;
    label = 6;
    break L1;
   }
   $8 = $s$020 + 1 | 0;
   $9 = $$019 + -1 | 0;
   $13 = ($9 | 0) != 0;
   if ($13 & ($8 & 3 | 0) != 0) {
    $$019 = $9;
    $s$020 = $8;
   } else {
    $$0$lcssa = $9;
    $$lcssa = $13;
    $s$0$lcssa = $8;
    label = 5;
    break;
   }
  }
 } else {
  $$0$lcssa = $n;
  $$lcssa = $4;
  $s$0$lcssa = $src;
  label = 5;
 } while (0);
 if ((label | 0) == 5) if ($$lcssa) {
  $$0$lcssa30 = $$0$lcssa;
  $s$0$lcssa29 = $s$0$lcssa;
  label = 6;
 } else {
  $$3 = 0;
  $s$2 = $s$0$lcssa;
 }
 L8 : do if ((label | 0) == 6) {
  $15 = $c & 255;
  if ((HEAP8[$s$0$lcssa29 >> 0] | 0) == $15 << 24 >> 24) {
   $$3 = $$0$lcssa30;
   $s$2 = $s$0$lcssa29;
  } else {
   $17 = Math_imul($0, 16843009) | 0;
   L11 : do if ($$0$lcssa30 >>> 0 > 3) {
    $$110 = $$0$lcssa30;
    $w$011 = $s$0$lcssa29;
    while (1) {
     $20 = HEAP32[$w$011 >> 2] ^ $17;
     if (($20 & -2139062144 ^ -2139062144) & $20 + -16843009 | 0) {
      $$110$lcssa = $$110;
      $w$011$lcssa = $w$011;
      break;
     }
     $26 = $w$011 + 4 | 0;
     $27 = $$110 + -4 | 0;
     if ($27 >>> 0 > 3) {
      $$110 = $27;
      $w$011 = $26;
     } else {
      $$1$lcssa = $27;
      $w$0$lcssa = $26;
      label = 11;
      break L11;
     }
    }
    $$24 = $$110$lcssa;
    $s$15 = $w$011$lcssa;
   } else {
    $$1$lcssa = $$0$lcssa30;
    $w$0$lcssa = $s$0$lcssa29;
    label = 11;
   } while (0);
   if ((label | 0) == 11) if (!$$1$lcssa) {
    $$3 = 0;
    $s$2 = $w$0$lcssa;
    break;
   } else {
    $$24 = $$1$lcssa;
    $s$15 = $w$0$lcssa;
   }
   while (1) {
    if ((HEAP8[$s$15 >> 0] | 0) == $15 << 24 >> 24) {
     $$3 = $$24;
     $s$2 = $s$15;
     break L8;
    }
    $32 = $s$15 + 1 | 0;
    $$24 = $$24 + -1 | 0;
    if (!$$24) {
     $$3 = 0;
     $s$2 = $32;
     break;
    } else $s$15 = $32;
   }
  }
 } while (0);
 return ($$3 | 0 ? $s$2 : 0) | 0;
}

function __ZN6SoLoud28BiquadResonantFilterInstance13filterChannelEPfjfdjj($this, $aBuffer, $aSamples, $aSamplerate, $aTime, $aChannel, $aChannels) {
 $this = $this | 0;
 $aBuffer = $aBuffer | 0;
 $aSamples = $aSamples | 0;
 $aSamplerate = +$aSamplerate;
 $aTime = +$aTime;
 $aChannel = $aChannel | 0;
 $aChannels = $aChannels | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $28 = 0.0, $32 = 0.0, $41 = 0.0, $42 = 0.0, $44 = 0, $49 = 0, $50 = 0.0, $67 = 0.0, $68 = 0.0, $7 = 0, $73 = 0, $i$02 = 0, $32$looptemp = 0.0;
 if (!(HEAP32[$this + 20 >> 2] | 0)) return;
 if (!$aChannel) {
  FUNCTION_TABLE_vid[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 1]($this, $aTime);
  $7 = $this + 8 | 0;
  if (HEAP32[$7 >> 2] & 14 | 0) __ZN6SoLoud28BiquadResonantFilterInstance13calcBQRParamsEv($this);
  HEAP32[$7 >> 2] = 0;
 }
 $11 = $this + 24 + ($aChannel << 4) | 0;
 if (!$aSamples) $$pre$phiZ2D = $11; else {
  $13 = $this + 56 | 0;
  $14 = $this + 60 | 0;
  $15 = $this + 24 + ($aChannel << 4) + 8 | 0;
  $16 = $this + 64 | 0;
  $17 = $this + 24 + ($aChannel << 4) + 12 | 0;
  $18 = $this + 68 | 0;
  $19 = $this + 72 | 0;
  $20 = $this + 24 + ($aChannel << 4) + 4 | 0;
  $21 = $this + 12 | 0;
  $28 = +HEAPF32[$15 >> 2];
  $32 = +HEAPF32[$17 >> 2];
  $i$02 = 0;
  while (1) {
   $22 = $aBuffer + ($i$02 << 2) | 0;
   $32$looptemp = $32;
   $32 = +HEAPF32[$22 >> 2];
   $41 = $32 * +HEAPF32[$13 >> 2] + +HEAPF32[$14 >> 2] * $28 + +HEAPF32[$16 >> 2] * $32$looptemp - +HEAPF32[$18 >> 2] * +HEAPF32[$11 >> 2] - +HEAPF32[$19 >> 2] * +HEAPF32[$20 >> 2];
   HEAPF32[$20 >> 2] = $41;
   $42 = +HEAPF32[$22 >> 2];
   $44 = HEAP32[$21 >> 2] | 0;
   HEAPF32[$22 >> 2] = $42 + ($41 - $42) * +HEAPF32[$44 >> 2];
   $49 = $aBuffer + (($i$02 | 1) << 2) | 0;
   $50 = +HEAPF32[$49 >> 2];
   HEAPF32[$17 >> 2] = $50;
   $67 = $50 * +HEAPF32[$13 >> 2] + $32 * +HEAPF32[$14 >> 2] + +HEAPF32[$16 >> 2] * +HEAPF32[$15 >> 2] - +HEAPF32[$18 >> 2] * +HEAPF32[$20 >> 2] - +HEAPF32[$19 >> 2] * +HEAPF32[$11 >> 2];
   HEAPF32[$11 >> 2] = $67;
   $68 = +HEAPF32[$49 >> 2];
   HEAPF32[$49 >> 2] = $68 + ($67 - $68) * +HEAPF32[$44 >> 2];
   $73 = HEAP32[$17 >> 2] | 0;
   HEAP32[$15 >> 2] = $73;
   HEAPF32[$17 >> 2] = $32;
   $i$02 = $i$02 + 2 | 0;
   if ($i$02 >>> 0 >= $aSamples >>> 0) {
    $$pre$phiZ2D = $11;
    break;
   } else $28 = (HEAP32[tempDoublePtr >> 2] = $73, +HEAPF32[tempDoublePtr >> 2]);
  }
 }
 HEAPF32[$$pre$phiZ2D >> 2] = +HEAPF32[$$pre$phiZ2D >> 2] + 9.999999887266023e-27;
 return;
}

function __ZN4yakc3z8010handle_irqEv($this) {
 $this = $this | 0;
 var $$lcssa = 0, $$pre$i = 0, $0 = 0, $13 = 0, $15 = 0, $19 = 0, $34 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $46 = 0, $57 = 0, $67 = 0, $70 = 0, $9 = 0, $this$tr$i = 0, $this$tr$i$lcssa = 0, $tstates$0 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $0 = $this + 3632 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  $tstates$0 = 0;
  STACKTOP = sp;
  return $tstates$0 | 0;
 }
 $4 = HEAP16[$this + 26 >> 1] | 0;
 if (($4 & 255) << 24 >> 24 != 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16213, 0, 15203, 441, 16227);
  _abort();
 }
 if (($4 & 65535) >= 256) {
  HEAP8[$this + 27 >> 0] = 0;
  $9 = $this + 22 | 0;
  HEAP16[$9 >> 1] = (HEAP16[$9 >> 1] | 0) + 1 << 16 >> 16;
 }
 $13 = HEAP32[$this + 3628 >> 2] | 0;
 if (!$13) {
  $tstates$0 = 2;
  STACKTOP = sp;
  return $tstates$0 | 0;
 }
 $15 = $this + 28 | 0;
 if (!(HEAP8[$15 >> 0] | 0)) {
  $tstates$0 = 2;
  STACKTOP = sp;
  return $tstates$0 | 0;
 }
 HEAP8[$0 >> 0] = 0;
 HEAP8[$this + 29 >> 0] = 0;
 HEAP8[$15 >> 0] = 0;
 $this$tr$i = $13;
 while (1) {
  $19 = $this$tr$i + 1 | 0;
  if (HEAP8[$19 >> 0] | 0) {
   $$lcssa = $19;
   $this$tr$i$lcssa = $this$tr$i;
   break;
  }
  $this$tr$i = HEAP32[$this$tr$i + 16 >> 2] | 0;
  if (!$this$tr$i) {
   label = 13;
   break;
  }
 }
 if ((label | 0) == 13) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 15651, 147, 16305);
  _abort();
 }
 $$pre$i = $this$tr$i$lcssa + 2 | 0;
 if (HEAP8[$this$tr$i$lcssa + 4 >> 0] | 0) {
  HEAP32[$vararg_buffer >> 2] = HEAPU8[$$pre$i >> 0];
  __ZN5Oryol3Log4InfoEPKcz(16255, $vararg_buffer);
 }
 HEAP8[$$lcssa >> 0] = 0;
 HEAP8[$this$tr$i$lcssa + 3 >> 0] = 1;
 $34 = HEAPU8[$this + 24 >> 0] | 0;
 $37 = $34 << 8 | HEAPU8[$$pre$i >> 0];
 $38 = $this + 12 | 0;
 $40 = HEAPU16[$38 >> 1] | 0;
 $41 = $40 + 65534 | 0;
 HEAP16[$38 >> 1] = $41;
 $43 = $this + 22 | 0;
 $44 = HEAP16[$43 >> 1] | 0;
 $46 = $41 >>> 11 & 31;
 if (HEAP8[$this + 1312 + ($46 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($46 << 3) >> 2] | 0) + ($41 & 2047) >> 0] = $44;
 $57 = ($40 + 65535 | 0) >>> 11 & 31;
 if (HEAP8[$this + 1312 + ($57 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$this + 1312 + ($57 << 3) >> 2] | 0) + ($40 + 2047 & 2047) >> 0] = ($44 & 65535) >>> 8;
 $67 = $37 & 2046;
 $70 = HEAP32[$this + 1312 + ($34 >>> 3 << 3) >> 2] | 0;
 HEAP16[$43 >> 1] = HEAPU8[$70 + ($67 | 1) >> 0] << 8 | HEAPU8[$70 + $67 >> 0];
 $tstates$0 = 21;
 STACKTOP = sp;
 return $tstates$0 | 0;
}

function __ZN10ImDrawList7AddLineERK6ImVec2S2_jf($this, $a, $b, $col, $thickness) {
 $this = $this | 0;
 $a = $a | 0;
 $b = $b | 0;
 $col = $col | 0;
 $thickness = +$thickness;
 var $1 = 0.0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0.0, $24 = 0, $25 = 0, $26 = 0, $29 = 0.0, $3 = 0, $30 = 0.0, $31 = 0, $34 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $49 = 0, $5 = 0, $50 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $64 = 0, $8 = 0;
 if ($col >>> 0 < 16777216) return;
 $1 = +HEAPF32[$a >> 2] + .5;
 $2 = +HEAPF32[$a + 4 >> 2] + .5;
 $3 = $this + 76 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $this + 80 | 0;
 if (($4 | 0) == (HEAP32[$5 >> 2] | 0)) {
  $8 = $4 + 1 | 0;
  if (!$4) $13 = 8; else $13 = (($4 | 0) / 2 | 0) + $4 | 0;
  $14 = ($13 | 0) > ($8 | 0) ? $13 : $8;
  if (($4 | 0) < ($14 | 0)) {
   $17 = __ZN5ImGui8MemAllocEj($14 << 3) | 0;
   $18 = $this + 84 | 0;
   _memcpy($17 | 0, HEAP32[$18 >> 2] | 0, HEAP32[$3 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$18 >> 2] | 0);
   HEAP32[$18 >> 2] = $17;
   HEAP32[$5 >> 2] = $14;
   $24 = HEAP32[$3 >> 2] | 0;
  } else $24 = $4;
 } else $24 = $4;
 HEAP32[$3 >> 2] = $24 + 1;
 $25 = $this + 84 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 HEAPF32[$26 + ($24 << 3) >> 2] = $1;
 HEAPF32[$26 + ($24 << 3) + 4 >> 2] = $2;
 $29 = +HEAPF32[$b >> 2] + .5;
 $30 = +HEAPF32[$b + 4 >> 2] + .5;
 $31 = HEAP32[$3 >> 2] | 0;
 if (($31 | 0) == (HEAP32[$5 >> 2] | 0)) {
  $34 = $31 + 1 | 0;
  if (!$31) $39 = 8; else $39 = (($31 | 0) / 2 | 0) + $31 | 0;
  $40 = ($39 | 0) > ($34 | 0) ? $39 : $34;
  if (($31 | 0) < ($40 | 0)) {
   $43 = __ZN5ImGui8MemAllocEj($40 << 3) | 0;
   _memcpy($43 | 0, HEAP32[$25 >> 2] | 0, HEAP32[$3 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$25 >> 2] | 0);
   HEAP32[$25 >> 2] = $43;
   HEAP32[$5 >> 2] = $40;
   $49 = HEAP32[$3 >> 2] | 0;
  } else $49 = $31;
 } else $49 = $31;
 HEAP32[$3 >> 2] = $49 + 1;
 $50 = HEAP32[$25 >> 2] | 0;
 HEAPF32[$50 + ($49 << 3) >> 2] = $29;
 HEAPF32[$50 + ($49 << 3) + 4 >> 2] = $30;
 __ZN10ImDrawList11AddPolylineEPK6ImVec2ijbfb($this, HEAP32[$25 >> 2] | 0, HEAP32[$3 >> 2] | 0, $col, 0, $thickness, 1);
 $55 = $this + 76 | 0;
 $56 = HEAP32[$5 >> 2] | 0;
 if (($56 | 0) < 0) {
  $59 = (($56 | 0) / 2 | 0) + $56 | 0;
  $61 = ($59 | 0) > 0 ? $59 : 0;
  if (($56 | 0) < ($61 | 0)) {
   $64 = __ZN5ImGui8MemAllocEj($61 << 3) | 0;
   _memcpy($64 | 0, HEAP32[$25 >> 2] | 0, HEAP32[$55 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$25 >> 2] | 0);
   HEAP32[$25 >> 2] = $64;
   HEAP32[$5 >> 2] = $61;
  }
 }
 HEAP32[$55 >> 2] = 0;
 return;
}

function __ZN5Oryol3MapIiNS_7RunLoop4itemEE5EraseERKi($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$i4 = 0, $$0$i6 = 0, $$0$ph$i$i$i = 0, $$0$ph$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa20 = 0, $$pre12 = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $26 = 0, $27 = 0, $28 = 0, $30 = 0, $36 = 0, $38 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa19 = 0, $__len$0$ph$i$i$i = 0, label = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = ($0 | 0) == 0;
 if ($1) {
  $$0$i1 = 0;
  $$0$i6 = 0;
 } else {
  $$0$i1 = $0 + ((HEAP32[$this + 12 >> 2] | 0) * 40 | 0) | 0;
  $$0$i6 = $0 + ((HEAP32[$this + 8 >> 2] | 0) * 40 | 0) | 0;
 }
 $11 = HEAP32[$key >> 2] | 0;
 $$0$ph$i$i$i = $$0$i6;
 $__len$0$ph$i$i$i = ($$0$i1 - $$0$i6 | 0) / 40 | 0;
 L4 : while (1) {
  $__len$0$i$i$i = $__len$0$ph$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i) {
    $$0$ph$i$i$i$lcssa = $$0$ph$i$i$i;
    break L4;
   }
   $13 = ($__len$0$i$i$i | 0) / 2 | 0;
   $14 = $$0$ph$i$i$i + ($13 * 40 | 0) | 0;
   if ((HEAP32[$14 >> 2] | 0) < ($11 | 0)) {
    $$lcssa = $13;
    $$lcssa20 = $14;
    $__len$0$i$i$i$lcssa19 = $__len$0$i$i$i;
    break;
   } else $__len$0$i$i$i = $13;
  }
  $$0$ph$i$i$i = $$lcssa20 + 40 | 0;
  $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa19 + -1 - $$lcssa | 0;
 }
 if ($1) $$0$i2 = 0; else $$0$i2 = $0 + ((HEAP32[$this + 12 >> 2] | 0) * 40 | 0) | 0;
 if (($$0$ph$i$i$i$lcssa | 0) == ($$0$i2 | 0)) return;
 $$pre12 = $this + 8 | 0;
 if ($1) $$0$i4 = 0; else $$0$i4 = $0 + ((HEAP32[$$pre12 >> 2] | 0) * 40 | 0) | 0;
 $26 = $$0$ph$i$i$i$lcssa - $$0$i4 | 0;
 $27 = ($26 | 0) / 40 | 0;
 $28 = $this + 12 | 0;
 $30 = HEAP32[$$pre12 >> 2] | 0;
 if (($27 | 0) >= ((HEAP32[$28 >> 2] | 0) - $30 | 0)) return;
 if (($26 | 0) <= -40) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 118278);
  _abort();
 }
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 118278);
  _abort();
 } else {
  $36 = $30;
  $38 = $0;
 }
 while (1) {
  if ((HEAP32[$38 + (($36 + $27 | 0) * 40 | 0) >> 2] | 0) != (HEAP32[$key >> 2] | 0)) {
   label = 21;
   break;
  }
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE5eraseEi($this, $27);
  $36 = HEAP32[$$pre12 >> 2] | 0;
  if (($27 | 0) >= ((HEAP32[$28 >> 2] | 0) - $36 | 0)) {
   label = 21;
   break;
  }
  $38 = HEAP32[$this >> 2] | 0;
  if (!$38) {
   label = 17;
   break;
  }
 }
 if ((label | 0) == 17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 118278);
  _abort();
 } else if ((label | 0) == 21) return;
}

function __ZN10FileLoader4copyEPN4yakc4kc85ERKNS_8FileInfoERKN5Oryol6BufferE($kc, $info, $data) {
 $kc = $kc | 0;
 $info = $info | 0;
 $data = $data | 0;
 var $$01$i = 0, $$pre = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $23 = 0, $24 = 0, $36 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $8 = 0, $addr$09 = 0, $addr$1$lcssa = 0, $addr$15 = 0, $i$02$i = 0, $i$06 = 0, $ptr$010 = 0, $ptr$1 = 0, $ptr$1$lcssa = 0, $ptr$13 = 0, $ptr$17 = 0;
 if (HEAP8[$info + 15 >> 0] | 0) return;
 $4 = HEAP32[$data + 8 >> 2] | 0;
 if (!$4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 202, 40264);
  _abort();
 }
 $8 = $4 + (HEAP32[$info + 20 >> 2] | 0) | 0;
 $13 = HEAP32[$info + 8 >> 2] | 0;
 $14 = $13 & 65535;
 $15 = $info + 10 | 0;
 $16 = $13 >>> 16;
 $17 = $16 & 65535;
 if ((HEAP32[$info + 16 >> 2] | 0) == 1) {
  $20 = $16 - ($13 & 65535) | 0;
  if (($20 | 0) > 0) {
   $$01$i = $14;
   $i$02$i = 0;
  } else return;
  while (1) {
   $23 = $$01$i & 65535;
   $24 = $23 >>> 11;
   if (HEAP8[$kc + 66932 + ($24 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$kc + 66932 + ($24 << 3) >> 2] | 0) + ($23 & 2047) >> 0] = HEAP8[$8 + $i$02$i >> 0] | 0;
   $i$02$i = $i$02$i + 1 | 0;
   if (($i$02$i | 0) == ($20 | 0)) break; else $$01$i = $$01$i + 1 << 16 >> 16;
  }
  return;
 }
 if (($14 & 65535) < ($17 & 65535)) {
  $38 = $17;
  $addr$09 = $14;
  $ptr$010 = $8;
 } else return;
 while (1) {
  $ptr$13 = $ptr$010 + 1 | 0;
  if (($addr$09 & 65535) < ($38 & 65535)) {
   $54 = $38;
   $55 = $38;
   $addr$15 = $addr$09;
   $i$06 = 0;
   $ptr$17 = $ptr$13;
   while (1) {
    $39 = $addr$15 + 1 << 16 >> 16;
    $40 = $addr$15 & 65535;
    $41 = $40 >>> 11;
    if (!(HEAP8[$kc + 66932 + ($41 << 3) + 4 >> 0] | 0)) {
     $53 = $55;
     $56 = $54;
    } else {
     HEAP8[(HEAP32[$kc + 66932 + ($41 << 3) >> 2] | 0) + ($40 & 2047) >> 0] = HEAP8[$ptr$17 >> 0] | 0;
     $$pre = HEAP16[$15 >> 1] | 0;
     $53 = $$pre;
     $56 = $$pre;
    }
    $i$06 = $i$06 + 1 | 0;
    $ptr$1 = $ptr$17 + 1 | 0;
    if (!(($i$06 | 0) < 128 & ($39 & 65535) < ($53 & 65535))) {
     $36 = $56;
     $addr$1$lcssa = $39;
     $ptr$1$lcssa = $ptr$1;
     break;
    } else {
     $54 = $56;
     $55 = $53;
     $addr$15 = $39;
     $ptr$17 = $ptr$1;
    }
   }
  } else {
   $36 = $38;
   $addr$1$lcssa = $addr$09;
   $ptr$1$lcssa = $ptr$13;
  }
  if (($addr$1$lcssa & 65535) < ($36 & 65535)) {
   $38 = $36;
   $addr$09 = $addr$1$lcssa;
   $ptr$010 = $ptr$1$lcssa;
  } else break;
 }
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE13prepareInsertEiRb($this, $index, $outSlotConstructed) {
 $this = $this | 0;
 $index = $index | 0;
 $outSlotConstructed = $outSlotConstructed | 0;
 var $$1 = 0, $0 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0;
 HEAP8[$outSlotConstructed >> 0] = 1;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 if (($4 | 0) == ($index | 0)) {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   HEAP32[$0 >> 2] = $1 + 1;
   $$1 = (HEAP32[$this >> 2] | 0) + ($1 << 3) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 527, 108739);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 if (!$index) {
  if (($3 | 0) > 0) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   $16 = $3 + -1 | 0;
   HEAP32[$2 >> 2] = $16;
   $$1 = (HEAP32[$this >> 2] | 0) + ($16 << 3) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 543, 108739);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE14moveInsertBackEi($this, 0) | 0;
  return $$1 | 0;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  if (($3 | 0) > 0) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE15moveInsertFrontEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123198, 0, 123391, 557, 108739);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE14moveInsertBackEi($this, $index) | 0;
  return $$1 | 0;
 } else {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE14moveInsertBackEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123220, 0, 123391, 569, 108739);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 return 0;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $$idx$val$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $39 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 __ZN5Oryol3URLC2Ev($0);
 $1 = $0 + 40 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 44 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 48 | 0;
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($0, $__arg);
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5Oryol6Memory4FreeEPv($4);
 $6 = $__arg + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$1 >> 2] = $7;
 $8 = $__arg + 44 | 0;
 HEAP32[$2 >> 2] = HEAP32[$8 >> 2];
 $10 = $__arg + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $$idx$val$i = HEAP32[$this + 4 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 209, 19358);
  _abort();
 }
 $13 = $$idx$val$i + 463344 | 0;
 if ((HEAP32[$13 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $16 = $$idx$val$i + 463352 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 + $7 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($$idx$val$i + 463356 + $17 | 0, $11 | 0, $7 | 0) | 0;
 $21 = HEAP32[$16 >> 2] | 0;
 HEAP32[$13 >> 2] = $21;
 HEAP32[$$idx$val$i + 463348 >> 2] = $7;
 HEAP32[$16 >> 2] = $21 + $7;
 if (($21 | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
  _abort();
 }
 $26 = $$idx$val$i + 463008 | 0;
 if (HEAP8[$26 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16514, 0, 40519, 174, 19546);
  _abort();
 }
 if (!$7) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(19666, 0, 40519, 175, 19546);
  _abort();
 }
 HEAP8[$26 >> 0] = 1;
 HEAP32[$$idx$val$i + 463012 >> 2] = 3;
 HEAP8[$$idx$val$i + 463016 >> 0] = -5;
 HEAP32[$$idx$val$i + 463020 >> 2] = 16682;
 HEAP32[$$idx$val$i + 463024 >> 2] = 19949;
 HEAP32[$$idx$val$i + 463028 >> 2] = $$idx$val$i + 463356 + $21;
 HEAP32[$$idx$val$i + 463032 >> 2] = $7;
 HEAP8[$$idx$val$i + 463036 >> 0] = 0;
 HEAP8[$$idx$val$i + 463037 >> 0] = 0;
 HEAP8[$$idx$val$i + 463038 >> 0] = -32;
 $39 = HEAP32[$3 >> 2] | 0;
 if (!$39) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($39);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $$idx$val$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $39 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 __ZN5Oryol3URLC2Ev($0);
 $1 = $0 + 40 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 44 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 48 | 0;
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($0, $__arg);
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5Oryol6Memory4FreeEPv($4);
 $6 = $__arg + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$1 >> 2] = $7;
 $8 = $__arg + 44 | 0;
 HEAP32[$2 >> 2] = HEAP32[$8 >> 2];
 $10 = $__arg + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $$idx$val$i = HEAP32[$this + 4 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 209, 19358);
  _abort();
 }
 $13 = $$idx$val$i + 463320 | 0;
 if ((HEAP32[$13 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $16 = $$idx$val$i + 463352 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 + $7 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($$idx$val$i + 463356 + $17 | 0, $11 | 0, $7 | 0) | 0;
 $21 = HEAP32[$16 >> 2] | 0;
 HEAP32[$13 >> 2] = $21;
 HEAP32[$$idx$val$i + 463324 >> 2] = $7;
 HEAP32[$16 >> 2] = $21 + $7;
 if (($21 | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
  _abort();
 }
 $26 = $$idx$val$i + 462944 | 0;
 if (HEAP8[$26 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16514, 0, 40519, 174, 19546);
  _abort();
 }
 if (!$7) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(19666, 0, 40519, 175, 19546);
  _abort();
 }
 HEAP8[$26 >> 0] = 1;
 HEAP32[$$idx$val$i + 462948 >> 2] = 1;
 HEAP8[$$idx$val$i + 462952 >> 0] = -4;
 HEAP32[$$idx$val$i + 462956 >> 2] = 16653;
 HEAP32[$$idx$val$i + 462960 >> 2] = 19860;
 HEAP32[$$idx$val$i + 462964 >> 2] = $$idx$val$i + 463356 + $21;
 HEAP32[$$idx$val$i + 462968 >> 2] = $7;
 HEAP8[$$idx$val$i + 462972 >> 0] = 0;
 HEAP8[$$idx$val$i + 462973 >> 0] = 0;
 HEAP8[$$idx$val$i + 462974 >> 0] = -64;
 $39 = HEAP32[$3 >> 2] | 0;
 if (!$39) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($39);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $$idx$val$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $39 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 __ZN5Oryol3URLC2Ev($0);
 $1 = $0 + 40 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 44 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 48 | 0;
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($0, $__arg);
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5Oryol6Memory4FreeEPv($4);
 $6 = $__arg + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$1 >> 2] = $7;
 $8 = $__arg + 44 | 0;
 HEAP32[$2 >> 2] = HEAP32[$8 >> 2];
 $10 = $__arg + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $$idx$val$i = HEAP32[$this + 4 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 209, 19358);
  _abort();
 }
 $13 = $$idx$val$i + 463336 | 0;
 if ((HEAP32[$13 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $16 = $$idx$val$i + 463352 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 + $7 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($$idx$val$i + 463356 + $17 | 0, $11 | 0, $7 | 0) | 0;
 $21 = HEAP32[$16 >> 2] | 0;
 HEAP32[$13 >> 2] = $21;
 HEAP32[$$idx$val$i + 463340 >> 2] = $7;
 HEAP32[$16 >> 2] = $21 + $7;
 if (($21 | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
  _abort();
 }
 $26 = $$idx$val$i + 463104 | 0;
 if (HEAP8[$26 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16514, 0, 40519, 174, 19546);
  _abort();
 }
 if (!$7) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(19666, 0, 40519, 175, 19546);
  _abort();
 }
 HEAP8[$26 >> 0] = 1;
 HEAP32[$$idx$val$i + 463108 >> 2] = 6;
 HEAP8[$$idx$val$i + 463112 >> 0] = -5;
 HEAP32[$$idx$val$i + 463116 >> 2] = 16722;
 HEAP32[$$idx$val$i + 463120 >> 2] = 19690;
 HEAP32[$$idx$val$i + 463124 >> 2] = $$idx$val$i + 463356 + $21;
 HEAP32[$$idx$val$i + 463128 >> 2] = $7;
 HEAP8[$$idx$val$i + 463132 >> 0] = 0;
 HEAP8[$$idx$val$i + 463133 >> 0] = 0;
 HEAP8[$$idx$val$i + 463134 >> 0] = -32;
 $39 = HEAP32[$3 >> 2] | 0;
 if (!$39) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($39);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $$idx$val$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $26 = 0, $3 = 0, $39 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 __ZN5Oryol3URLC2Ev($0);
 $1 = $0 + 40 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 44 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 48 | 0;
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($0, $__arg);
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5Oryol6Memory4FreeEPv($4);
 $6 = $__arg + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$1 >> 2] = $7;
 $8 = $__arg + 44 | 0;
 HEAP32[$2 >> 2] = HEAP32[$8 >> 2];
 $10 = $__arg + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $$idx$val$i = HEAP32[$this + 4 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 209, 19358);
  _abort();
 }
 $13 = $$idx$val$i + 463328 | 0;
 if ((HEAP32[$13 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $16 = $$idx$val$i + 463352 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 + $7 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($$idx$val$i + 463356 + $17 | 0, $11 | 0, $7 | 0) | 0;
 $21 = HEAP32[$16 >> 2] | 0;
 HEAP32[$13 >> 2] = $21;
 HEAP32[$$idx$val$i + 463332 >> 2] = $7;
 HEAP32[$16 >> 2] = $21 + $7;
 if (($21 | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15078, 0, 15094, 76, 15141);
  _abort();
 }
 $26 = $$idx$val$i + 463072 | 0;
 if (HEAP8[$26 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16514, 0, 40519, 174, 19546);
  _abort();
 }
 if (!$7) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(19666, 0, 40519, 175, 19546);
  _abort();
 }
 HEAP8[$26 >> 0] = 1;
 HEAP32[$$idx$val$i + 463076 >> 2] = 5;
 HEAP8[$$idx$val$i + 463080 >> 0] = -5;
 HEAP32[$$idx$val$i + 463084 >> 2] = 16711;
 HEAP32[$$idx$val$i + 463088 >> 2] = 19389;
 HEAP32[$$idx$val$i + 463092 >> 2] = $$idx$val$i + 463356 + $21;
 HEAP32[$$idx$val$i + 463096 >> 2] = $7;
 HEAP8[$$idx$val$i + 463100 >> 0] = 0;
 HEAP8[$$idx$val$i + 463101 >> 0] = 0;
 HEAP8[$$idx$val$i + 463102 >> 0] = -32;
 $39 = HEAP32[$3 >> 2] | 0;
 if (!$39) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($39);
 STACKTOP = sp;
 return;
}

function __ZNK5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEE8ContainsERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$ph$i$i$i$i = 0, $$0$ph$lcssa6$i$i$i$i = 0, $$lcssa35 = 0, $$lcssa36 = 0, $$pre$i$i$i$i$i$i$i = 0, $14 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $38 = 0, $39 = 0, $__len$0$i$i$i$i = 0, $__len$0$i$i$i$i$lcssa34 = 0, $__len$0$ph$i$i$i$i = 0, $__len$0$us$us$i7$i$i$i = 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 102749);
  _abort();
 }
 $3 = HEAP32[$this >> 2] | 0;
 if (!$3) {
  $$0$i1 = 0;
  $$0$i2 = 0;
 } else {
  $$0$i1 = $3 + (HEAP32[$this + 12 >> 2] << 5) | 0;
  $$0$i2 = $3 + (HEAP32[$this + 8 >> 2] << 5) | 0;
 }
 $14 = $$0$i1 - $$0$i2 >> 5;
 $15 = HEAP32[$key >> 2] | 0;
 $16 = ($15 | 0) == 0;
 L7 : do if ($16) if (!$14) $$0$ph$lcssa6$i$i$i$i = $$0$i2; else {
  $__len$0$us$us$i7$i$i$i = $14;
  while (1) if (($__len$0$us$us$i7$i$i$i + 1 | 0) >>> 0 < 3) {
   $$0$ph$lcssa6$i$i$i$i = $$0$i2;
   break;
  } else $__len$0$us$us$i7$i$i$i = ($__len$0$us$us$i7$i$i$i | 0) / 2 | 0;
 } else {
  $$0$ph$i$i$i$i = $$0$i2;
  $__len$0$ph$i$i$i$i = $14;
  L11 : while (1) {
   $__len$0$i$i$i$i = $__len$0$ph$i$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i$i) {
     $$0$ph$lcssa6$i$i$i$i = $$0$ph$i$i$i$i;
     break L7;
    }
    $21 = ($__len$0$i$i$i$i | 0) / 2 | 0;
    $22 = $$0$ph$i$i$i$i + ($21 << 5) | 0;
    $$pre$i$i$i$i$i$i$i = HEAP32[$22 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i$i) $28 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$15 >> 2] | 0)) $28 = $$pre$i$i$i$i$i$i$i; else break L11;
    if ($28 >>> 0 < $15 >>> 0) {
     $$lcssa35 = $21;
     $$lcssa36 = $22;
     $__len$0$i$i$i$i$lcssa34 = $__len$0$i$i$i$i;
     break;
    } else $__len$0$i$i$i$i = $21;
   }
   $$0$ph$i$i$i$i = $$lcssa36 + 32 | 0;
   $__len$0$ph$i$i$i$i = $__len$0$i$i$i$i$lcssa34 + -1 - $$lcssa35 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if (($$0$ph$lcssa6$i$i$i$i | 0) == ($$0$i1 | 0)) {
  $39 = 0;
  return $39 | 0;
 }
 $32 = HEAP32[$$0$ph$lcssa6$i$i$i$i >> 2] | 0;
 $33 = ($32 | 0) == 0;
 if ($16 | $33) $38 = $33 ? $15 : 0; else if ((HEAP32[$15 >> 2] | 0) == (HEAP32[$32 >> 2] | 0)) $38 = $15; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 }
 $39 = $38 >>> 0 >= $32 >>> 0;
 return $39 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE14moveInsertBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $13 = 0, $2 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $42 = 0, $9 = 0, $i$0 = 0, $i$0$in2 = 0, $i$0$in2$phi = 0, $i$01 = 0, $i$03 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 113513);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 113513);
  _abort();
 }
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 113513);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 113513);
  _abort();
 }
 $9 = $this + 8 | 0;
 if (($3 - (HEAP32[$9 >> 2] | 0) | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 113513);
  _abort();
 }
 $13 = $3 + -1 | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($0 + ($3 * 12 | 0) | 0, $0 + ($13 * 12 | 0) | 0);
 HEAP32[$0 + ($3 * 12 | 0) + 4 >> 2] = HEAP32[$0 + ($13 * 12 | 0) + 4 >> 2];
 HEAP32[$0 + ($3 * 12 | 0) + 8 >> 2] = HEAP32[$0 + ($13 * 12 | 0) + 8 >> 2];
 $22 = HEAP32[$2 >> 2] | 0;
 $i$01 = $22 + -1 | 0;
 $23 = HEAP32[$9 >> 2] | 0;
 if (($i$01 | 0) > ($23 + $index | 0)) {
  $i$0$in2 = $22;
  $i$03 = $i$01;
 } else {
  $27 = $22;
  $29 = $23;
  $26 = $27 + 1 | 0;
  HEAP32[$2 >> 2] = $26;
  $28 = $29 + $index | 0;
  $30 = HEAP32[$this >> 2] | 0;
  $31 = $30 + ($28 * 12 | 0) | 0;
  return $31 | 0;
 }
 while (1) {
  $32 = HEAP32[$this >> 2] | 0;
  $33 = $32 + ($i$03 * 12 | 0) | 0;
  $34 = $i$0$in2 + -2 | 0;
  HEAP32[$33 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($33, $32 + ($34 * 12 | 0) | 0);
  HEAP32[$32 + ($i$03 * 12 | 0) + 4 >> 2] = HEAP32[$32 + ($34 * 12 | 0) + 4 >> 2];
  HEAP32[$32 + ($i$03 * 12 | 0) + 8 >> 2] = HEAP32[$32 + ($34 * 12 | 0) + 8 >> 2];
  $i$0 = $i$03 + -1 | 0;
  $42 = HEAP32[$9 >> 2] | 0;
  if (($i$0 | 0) > ($42 + $index | 0)) {
   $i$0$in2$phi = $i$03;
   $i$03 = $i$0;
   $i$0$in2 = $i$0$in2$phi;
  } else {
   $$lcssa = $42;
   break;
  }
 }
 $27 = HEAP32[$2 >> 2] | 0;
 $29 = $$lcssa;
 $26 = $27 + 1 | 0;
 HEAP32[$2 >> 2] = $26;
 $28 = $29 + $index | 0;
 $30 = HEAP32[$this >> 2] | 0;
 $31 = $30 + ($28 * 12 | 0) | 0;
 return $31 | 0;
}

function __ZNK5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE8ContainsERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$ph$i$i$i$i = 0, $$0$ph$lcssa6$i$i$i$i = 0, $$lcssa35 = 0, $$lcssa36 = 0, $$pre$i$i$i$i$i$i$i = 0, $14 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $28 = 0, $3 = 0, $32 = 0, $33 = 0, $38 = 0, $39 = 0, $__len$0$i$i$i$i = 0, $__len$0$i$i$i$i$lcssa34 = 0, $__len$0$ph$i$i$i$i = 0, $__len$0$us$us$i7$i$i$i = 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 237, 107234);
  _abort();
 }
 $3 = HEAP32[$this >> 2] | 0;
 if (!$3) {
  $$0$i1 = 0;
  $$0$i2 = 0;
 } else {
  $$0$i1 = $3 + (HEAP32[$this + 12 >> 2] << 3) | 0;
  $$0$i2 = $3 + (HEAP32[$this + 8 >> 2] << 3) | 0;
 }
 $14 = $$0$i1 - $$0$i2 >> 3;
 $15 = HEAP32[$key >> 2] | 0;
 $16 = ($15 | 0) == 0;
 L7 : do if ($16) if (!$14) $$0$ph$lcssa6$i$i$i$i = $$0$i2; else {
  $__len$0$us$us$i7$i$i$i = $14;
  while (1) if (($__len$0$us$us$i7$i$i$i + 1 | 0) >>> 0 < 3) {
   $$0$ph$lcssa6$i$i$i$i = $$0$i2;
   break;
  } else $__len$0$us$us$i7$i$i$i = ($__len$0$us$us$i7$i$i$i | 0) / 2 | 0;
 } else {
  $$0$ph$i$i$i$i = $$0$i2;
  $__len$0$ph$i$i$i$i = $14;
  L11 : while (1) {
   $__len$0$i$i$i$i = $__len$0$ph$i$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i$i) {
     $$0$ph$lcssa6$i$i$i$i = $$0$ph$i$i$i$i;
     break L7;
    }
    $21 = ($__len$0$i$i$i$i | 0) / 2 | 0;
    $22 = $$0$ph$i$i$i$i + ($21 << 3) | 0;
    $$pre$i$i$i$i$i$i$i = HEAP32[$22 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i$i) $28 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$15 >> 2] | 0)) $28 = $$pre$i$i$i$i$i$i$i; else break L11;
    if ($28 >>> 0 < $15 >>> 0) {
     $$lcssa35 = $21;
     $$lcssa36 = $22;
     $__len$0$i$i$i$i$lcssa34 = $__len$0$i$i$i$i;
     break;
    } else $__len$0$i$i$i$i = $21;
   }
   $$0$ph$i$i$i$i = $$lcssa36 + 8 | 0;
   $__len$0$ph$i$i$i$i = $__len$0$i$i$i$i$lcssa34 + -1 - $$lcssa35 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if (($$0$ph$lcssa6$i$i$i$i | 0) == ($$0$i1 | 0)) {
  $39 = 0;
  return $39 | 0;
 }
 $32 = HEAP32[$$0$ph$lcssa6$i$i$i$i >> 2] | 0;
 $33 = ($32 | 0) == 0;
 if ($16 | $33) $38 = $33 ? $15 : 0; else if ((HEAP32[$15 >> 2] | 0) == (HEAP32[$32 >> 2] | 0)) $38 = $15; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 }
 $39 = $38 >>> 0 >= $32 >>> 0;
 return $39 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $$pre$phi5Z2D = 0, $1 = 0, $12 = 0, $13 = 0, $15 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $29 = 0, $38 = 0, $4 = 0, $48 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 119331);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 119331);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 40 | 0) | 0;
 $13 = $12 + ($newStart * 40 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 119331);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 40 | 0) | 0;
  do {
   HEAP32[$dst$02 >> 2] = HEAP32[$src$01 >> 2];
   $21 = $dst$02 + 8 | 0;
   $22 = $src$01 + 24 | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   do if (!$23) {
    HEAP32[$dst$02 + 24 >> 2] = 0;
    $$pre$phi5Z2D = $src$01 + 8 | 0;
   } else {
    $26 = $src$01 + 8 | 0;
    if (($23 | 0) == ($26 | 0)) {
     HEAP32[$dst$02 + 24 >> 2] = $21;
     $29 = HEAP32[$22 >> 2] | 0;
     FUNCTION_TABLE_vii[HEAP32[(HEAP32[$29 >> 2] | 0) + 12 >> 2] & 63]($29, $21);
     $$pre$phi5Z2D = $26;
     break;
    } else {
     HEAP32[$dst$02 + 24 >> 2] = $23;
     HEAP32[$22 >> 2] = 0;
     $$pre$phi5Z2D = $26;
     break;
    }
   } while (0);
   HEAP8[$dst$02 + 32 >> 0] = HEAP8[$src$01 + 32 >> 0] | 0;
   $dst$02 = $dst$02 + 40 | 0;
   $src$01 = $src$01 + 40 | 0;
   $38 = HEAP32[$22 >> 2] | 0;
   if (($38 | 0) == ($$pre$phi5Z2D | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pre$phi5Z2D >> 2] | 0) + 16 >> 2] & 255]($$pre$phi5Z2D); else if ($38 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$38 >> 2] | 0) + 20 >> 2] & 255]($38);
   $i$03 = $i$03 + 1 | 0;
  } while (($i$03 | 0) != ($8 | 0));
 }
 $48 = HEAP32[$this >> 2] | 0;
 if ($48 | 0) __ZN5Oryol6Memory4FreeEPv($48);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN12ImGuiStorage6SetIntEji($this, $key, $val) {
 $this = $this | 0;
 $key = $key | 0;
 $val = $val | 0;
 var $$$i = 0, $$idx$i = 0, $$idx$val = 0, $$idx1 = 0, $$idx1$val = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $3 = 0, $31 = 0, $35 = 0, $37 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $50 = 0, $51 = 0, $9 = 0, $count$02$i = 0, $first$0$lcssa$i = 0, $first$03$i = 0, $first$1$i = 0;
 $$idx$val = HEAP32[$this >> 2] | 0;
 $$idx1 = $this + 8 | 0;
 $$idx1$val = HEAP32[$$idx1 >> 2] | 0;
 $$idx$i = $$idx$val << 3;
 if (($$idx$i | 0) > 0) {
  $count$02$i = $$idx$i >> 3;
  $first$03$i = $$idx1$val;
  while (1) {
   $2 = ($count$02$i | 0) / 2 | 0;
   $3 = $first$03$i + ($2 << 3) | 0;
   $5 = (HEAP32[$3 >> 2] | 0) >>> 0 < $key >>> 0;
   $count$02$i = $5 ? $count$02$i + -1 - $2 | 0 : $2;
   $first$1$i = $5 ? $3 + 8 | 0 : $first$03$i;
   if (($count$02$i | 0) <= 0) {
    $first$0$lcssa$i = $first$1$i;
    break;
   } else $first$03$i = $first$1$i;
  }
 } else $first$0$lcssa$i = $$idx1$val;
 $9 = $$idx1$val + ($$idx$val << 3) | 0;
 if (($first$0$lcssa$i | 0) != ($9 | 0)) if ((HEAP32[$first$0$lcssa$i >> 2] | 0) == ($key | 0)) {
  HEAP32[$first$0$lcssa$i + 4 >> 2] = $val;
  return;
 }
 if ($$idx1$val >>> 0 > $first$0$lcssa$i >>> 0 | $9 >>> 0 < $first$0$lcssa$i >>> 0) ___assert_fail(124254, 127226, 836, 124284);
 $18 = $first$0$lcssa$i - $$idx1$val >> 3;
 $19 = $this + 4 | 0;
 if (($$idx$val | 0) == (HEAP32[$19 >> 2] | 0)) {
  $$$i = ($$idx$val | 0) == 0 ? 4 : $$idx$val << 1;
  if (($$idx$val | 0) < ($$$i | 0)) {
   $26 = 147664;
   HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1;
   $31 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($$$i << 3) | 0;
   _memcpy($31 | 0, HEAP32[$$idx1 >> 2] | 0, HEAP32[$this >> 2] << 3 | 0) | 0;
   $35 = HEAP32[$$idx1 >> 2] | 0;
   if ($35 | 0) {
    $37 = 147664;
    HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($35);
   HEAP32[$$idx1 >> 2] = $31;
   HEAP32[$19 >> 2] = $$$i;
   $43 = HEAP32[$this >> 2] | 0;
   $45 = $31;
  } else {
   $43 = $$idx$val;
   $45 = $$idx1$val;
  }
 } else {
  $43 = $$idx$val;
  $45 = $$idx1$val;
 }
 if (($43 | 0) > ($18 | 0)) {
  $44 = $45 + ($18 << 3) | 0;
  _memmove($44 + 8 | 0, $44 | 0, $43 - $18 << 3 | 0) | 0;
  $50 = HEAP32[$$idx1 >> 2] | 0;
 } else $50 = $45;
 $51 = $50 + ($18 << 3) | 0;
 HEAP32[$51 >> 2] = $key;
 HEAP32[$51 + 4 >> 2] = $val;
 HEAP32[$this >> 2] = (HEAP32[$this >> 2] | 0) + 1;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE15moveInsertFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $10 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $37 = 0, $38 = 0, $i$01 = 0, $i$01$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 108530);
  _abort();
 }
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 108530);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 108530);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - $3 | 0) < ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 108530);
  _abort();
 }
 $10 = $3 + -1 | 0;
 $11 = $0 + ($3 << 3) | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($0 + ($10 << 3) | 0, $11);
 HEAP32[$11 >> 2] = 0;
 $14 = $0 + ($3 << 3) + 4 | 0;
 HEAP32[$0 + ($10 << 3) + 4 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$14 >> 2] = 0;
 $16 = HEAP32[$2 >> 2] | 0;
 $17 = $index + -1 | 0;
 if (($16 | 0) < ($17 + $16 | 0)) $i$01 = $16; else {
  $$lcssa = $16;
  $20 = $$lcssa + -1 | 0;
  HEAP32[$2 >> 2] = $20;
  $21 = $20 + $index | 0;
  $22 = HEAP32[$this >> 2] | 0;
  $23 = $22 + ($21 << 3) | 0;
  return $23 | 0;
 }
 do {
  $24 = HEAP32[$this >> 2] | 0;
  $25 = $24 + ($i$01 << 3) | 0;
  $i$01$looptemp = $i$01;
  $i$01 = $i$01 + 1 | 0;
  $27 = $24 + ($i$01 << 3) | 0;
  HEAP32[$25 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($25, $27);
  HEAP32[$27 >> 2] = 0;
  $28 = $24 + ($i$01 << 3) + 4 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  $30 = $24 + ($i$01$looptemp << 3) + 4 | 0;
  $31 = HEAP32[$30 >> 2] | 0;
  if (($29 | 0) != ($31 | 0)) {
   if ($31 | 0) {
    $37 = $31 + 4 | 0;
    $38 = HEAP32[$37 >> 2] | 0;
    HEAP32[$37 >> 2] = $38 - 1;
    if (($38 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$31 >> 2] >> 2] & 255]($31);
    HEAP32[$30 >> 2] = 0;
   }
   HEAP32[$30 >> 2] = $29;
   HEAP32[$28 >> 2] = 0;
  }
  $33 = HEAP32[$2 >> 2] | 0;
 } while (($i$01 | 0) < ($17 + $33 | 0));
 $$lcssa = $33;
 $20 = $$lcssa + -1 | 0;
 HEAP32[$2 >> 2] = $20;
 $21 = $20 + $index | 0;
 $22 = HEAP32[$this >> 2] | 0;
 $23 = $22 + ($21 << 3) | 0;
 return $23 | 0;
}

function __ZN12ImGuiStorage8SetFloatEjf($this, $key, $val) {
 $this = $this | 0;
 $key = $key | 0;
 $val = +$val;
 var $$$i = 0, $$idx$i = 0, $$idx$val = 0, $$idx1 = 0, $$idx1$val = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $3 = 0, $31 = 0, $35 = 0, $37 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $50 = 0, $9 = 0, $count$02$i = 0, $first$0$lcssa$i = 0, $first$03$i = 0, $first$1$i = 0;
 $$idx$val = HEAP32[$this >> 2] | 0;
 $$idx1 = $this + 8 | 0;
 $$idx1$val = HEAP32[$$idx1 >> 2] | 0;
 $$idx$i = $$idx$val << 3;
 if (($$idx$i | 0) > 0) {
  $count$02$i = $$idx$i >> 3;
  $first$03$i = $$idx1$val;
  while (1) {
   $2 = ($count$02$i | 0) / 2 | 0;
   $3 = $first$03$i + ($2 << 3) | 0;
   $5 = (HEAP32[$3 >> 2] | 0) >>> 0 < $key >>> 0;
   $count$02$i = $5 ? $count$02$i + -1 - $2 | 0 : $2;
   $first$1$i = $5 ? $3 + 8 | 0 : $first$03$i;
   if (($count$02$i | 0) <= 0) {
    $first$0$lcssa$i = $first$1$i;
    break;
   } else $first$03$i = $first$1$i;
  }
 } else $first$0$lcssa$i = $$idx1$val;
 $9 = $$idx1$val + ($$idx$val << 3) | 0;
 if (($first$0$lcssa$i | 0) != ($9 | 0)) if ((HEAP32[$first$0$lcssa$i >> 2] | 0) == ($key | 0)) {
  HEAPF32[$first$0$lcssa$i + 4 >> 2] = $val;
  return;
 }
 if ($$idx1$val >>> 0 > $first$0$lcssa$i >>> 0 | $9 >>> 0 < $first$0$lcssa$i >>> 0) ___assert_fail(124254, 127226, 836, 124284);
 $18 = $first$0$lcssa$i - $$idx1$val >> 3;
 $19 = $this + 4 | 0;
 if (($$idx$val | 0) == (HEAP32[$19 >> 2] | 0)) {
  $$$i = ($$idx$val | 0) == 0 ? 4 : $$idx$val << 1;
  if (($$idx$val | 0) < ($$$i | 0)) {
   $26 = 147664;
   HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1;
   $31 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($$$i << 3) | 0;
   _memcpy($31 | 0, HEAP32[$$idx1 >> 2] | 0, HEAP32[$this >> 2] << 3 | 0) | 0;
   $35 = HEAP32[$$idx1 >> 2] | 0;
   if ($35 | 0) {
    $37 = 147664;
    HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($35);
   HEAP32[$$idx1 >> 2] = $31;
   HEAP32[$19 >> 2] = $$$i;
   $43 = HEAP32[$this >> 2] | 0;
   $45 = $31;
  } else {
   $43 = $$idx$val;
   $45 = $$idx1$val;
  }
 } else {
  $43 = $$idx$val;
  $45 = $$idx1$val;
 }
 if (($43 | 0) > ($18 | 0)) {
  $44 = $45 + ($18 << 3) | 0;
  _memmove($44 + 8 | 0, $44 | 0, $43 - $18 << 3 | 0) | 0;
  $50 = HEAP32[$$idx1 >> 2] | 0;
 } else $50 = $45;
 HEAP32[$50 + ($18 << 3) >> 2] = $key;
 HEAPF32[$50 + ($18 << 3) + 4 >> 2] = $val;
 HEAP32[$this >> 2] = (HEAP32[$this >> 2] | 0) + 1;
 return;
}

function __ZN5Oryol5_priv24gfxResourceContainerBase6updateEv($this) {
 $this = $this | 0;
 var $10 = 0, $16 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $30 = 0, $34 = 0, $37 = 0, $4 = 0, $41 = 0, $i$03$in = 0, label = 0, $i$03$in$looptemp = 0;
 if (!(__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 48725, 371, 51202);
  _abort();
 }
 if (!(HEAP8[$this + 272 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 141, 51256);
  _abort();
 }
 $4 = $this + 276 | 0;
 HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
 if (!(HEAP8[$this + 336 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 141, 51387);
  _abort();
 }
 $10 = $this + 340 | 0;
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
 if (!(HEAP8[$this + 400 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 141, 51526);
  _abort();
 }
 $16 = $this + 404 | 0;
 HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
 if (!(HEAP8[$this + 464 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 141, 51669);
  _abort();
 }
 $22 = $this + 468 | 0;
 HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1;
 $25 = $this + 532 | 0;
 $26 = $this + 544 | 0;
 $28 = $this + 540 | 0;
 $30 = (HEAP32[$26 >> 2] | 0) - (HEAP32[$28 >> 2] | 0) | 0;
 if (($30 | 0) <= 0) return;
 $i$03$in = $30;
 while (1) {
  $i$03$in$looptemp = $i$03$in;
  $i$03$in = $i$03$in + -1 | 0;
  if (($i$03$in$looptemp | 0) <= 0) {
   label = 16;
   break;
  }
  $34 = HEAP32[$28 >> 2] | 0;
  if (((HEAP32[$26 >> 2] | 0) - $34 | 0) < ($i$03$in$looptemp | 0)) {
   label = 16;
   break;
  }
  $37 = HEAP32[$25 >> 2] | 0;
  if (!$37) {
   label = 18;
   break;
  }
  $41 = HEAP32[$37 + ($34 + $i$03$in << 2) >> 2] | 0;
  if (!$41) {
   label = 20;
   break;
  }
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$41 >> 2] | 0) + 12 >> 2] & 63]($41) | 0) != 2) __ZN5Oryol5_priv13elementBufferINS_3PtrINS_14ResourceLoaderEEEE5eraseEi($25, $i$03$in);
  if (($i$03$in$looptemp | 0) <= 1) {
   label = 13;
   break;
  }
 }
 if ((label | 0) == 13) return; else if ((label | 0) == 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 51816);
  _abort();
 } else if ((label | 0) == 18) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 51816);
  _abort();
 } else if ((label | 0) == 20) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 51946);
  _abort();
 }
}
function ___fdopen($fd, $mode) {
 $fd = $fd | 0;
 $mode = $mode | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $14 = 0, $19 = 0, $24 = 0, $26 = 0, $37 = 0, $4 = 0, $tio = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $tio = sp + 52 | 0;
 $0 = HEAP8[$mode >> 0] | 0;
 if (!(_memchr(146293, $0 << 24 >> 24, 4) | 0)) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $$0 = 0;
 } else {
  $4 = _malloc(1144) | 0;
  if (!$4) $$0 = 0; else {
   dest = $4;
   stop = dest + 112 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   if (!(_strchr($mode, 43) | 0)) HEAP32[$4 >> 2] = $0 << 24 >> 24 == 114 ? 8 : 4;
   if (!(_strchr($mode, 101) | 0)) $13 = $0; else {
    HEAP32[$vararg_buffer >> 2] = $fd;
    HEAP32[$vararg_buffer + 4 >> 2] = 2;
    HEAP32[$vararg_buffer + 8 >> 2] = 1;
    ___syscall221(221, $vararg_buffer | 0) | 0;
    $13 = HEAP8[$mode >> 0] | 0;
   }
   if ($13 << 24 >> 24 == 97) {
    HEAP32[$vararg_buffer3 >> 2] = $fd;
    HEAP32[$vararg_buffer3 + 4 >> 2] = 3;
    $14 = ___syscall221(221, $vararg_buffer3 | 0) | 0;
    if (!($14 & 1024)) {
     HEAP32[$vararg_buffer7 >> 2] = $fd;
     HEAP32[$vararg_buffer7 + 4 >> 2] = 4;
     HEAP32[$vararg_buffer7 + 8 >> 2] = $14 | 1024;
     ___syscall221(221, $vararg_buffer7 | 0) | 0;
    }
    $19 = HEAP32[$4 >> 2] | 128;
    HEAP32[$4 >> 2] = $19;
    $26 = $19;
   } else $26 = HEAP32[$4 >> 2] | 0;
   HEAP32[$4 + 60 >> 2] = $fd;
   HEAP32[$4 + 44 >> 2] = $4 + 120;
   HEAP32[$4 + 48 >> 2] = 1024;
   $24 = $4 + 75 | 0;
   HEAP8[$24 >> 0] = -1;
   if (!($26 & 8)) {
    HEAP32[$vararg_buffer12 >> 2] = $fd;
    HEAP32[$vararg_buffer12 + 4 >> 2] = 21505;
    HEAP32[$vararg_buffer12 + 8 >> 2] = $tio;
    if (!(___syscall54(54, $vararg_buffer12 | 0) | 0)) HEAP8[$24 >> 0] = 10;
   }
   HEAP32[$4 + 32 >> 2] = 18;
   HEAP32[$4 + 36 >> 2] = 17;
   HEAP32[$4 + 40 >> 2] = 2;
   HEAP32[$4 + 12 >> 2] = 34;
   if (!(HEAP32[40695] | 0)) HEAP32[$4 + 76 >> 2] = -1;
   ___lock(162804);
   $37 = HEAP32[40700] | 0;
   HEAP32[$4 + 56 >> 2] = $37;
   if ($37 | 0) HEAP32[$37 + 52 >> 2] = $4;
   HEAP32[40700] = $4;
   ___unlock(162804);
   $$0 = $4;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol12TextureSetup13FromPixelDataEiiiNS_11TextureType4CodeENS_11PixelFormat4CodeERKS0_($agg$result, $w, $h, $numMipMaps, $type, $fmt, $blueprint) {
 $agg$result = $agg$result | 0;
 $w = $w | 0;
 $h = $h | 0;
 $numMipMaps = $numMipMaps | 0;
 $type = $type | 0;
 $fmt = $fmt | 0;
 $blueprint = $blueprint | 0;
 var $10 = 0, $11 = 0, $15 = 0, $16 = 0, $24 = 0, $29 = 0, $30 = 0, $5 = 0, dest = 0, src = 0, stop = 0;
 if (($w | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62257, 0, 62263, 69, 62335);
  _abort();
 }
 if (($h | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62329, 0, 62263, 70, 62335);
  _abort();
 }
 if (($fmt + -11 | 0) >>> 0 <= 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62479, 0, 62263, 71, 62335);
  _abort();
 }
 if (($numMipMaps + -1 | 0) >>> 0 < 11) {
  dest = $agg$result;
  src = $blueprint;
  stop = dest + 36 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  $5 = $blueprint + 40 | 0;
  $10 = HEAP32[$5 + 4 >> 2] | 0;
  $11 = $agg$result + 40 | 0;
  HEAP32[$11 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$11 + 4 >> 2] = $10;
  $15 = $agg$result + 48 | 0;
  $16 = $blueprint + 48 | 0;
  HEAP32[$15 >> 2] = HEAP32[$16 >> 2];
  HEAP32[$15 + 4 >> 2] = HEAP32[$16 + 4 >> 2];
  HEAP32[$15 + 8 >> 2] = HEAP32[$16 + 8 >> 2];
  HEAP32[$15 + 12 >> 2] = HEAP32[$16 + 12 >> 2];
  HEAP32[$15 + 16 >> 2] = HEAP32[$16 + 16 >> 2];
  HEAP32[$15 + 20 >> 2] = HEAP32[$16 + 20 >> 2];
  HEAP32[$15 + 24 >> 2] = HEAP32[$16 + 24 >> 2];
  __ZN5Oryol10StringAtom4copyERKS0_($agg$result + 76 | 0, $blueprint + 76 | 0);
  HEAP32[$agg$result + 80 >> 2] = HEAP32[$blueprint + 80 >> 2];
  $24 = $blueprint + 88 | 0;
  $29 = HEAP32[$24 + 4 >> 2] | 0;
  $30 = $agg$result + 88 | 0;
  HEAP32[$30 >> 2] = HEAP32[$24 >> 2];
  HEAP32[$30 + 4 >> 2] = $29;
  __ZN5Oryol14ImageDataAttrsC2ERKS0_($agg$result + 96 | 0, $blueprint + 96 | 0);
  HEAP8[$agg$result + 680 >> 0] = HEAP8[$blueprint + 680 >> 0] | 2;
  HEAP32[$agg$result + 4 >> 2] = $type;
  HEAP32[$agg$result + 8 >> 2] = $w;
  HEAP32[$agg$result + 12 >> 2] = $h;
  HEAP32[$agg$result + 24 >> 2] = $numMipMaps;
  HEAP32[$agg$result + 28 >> 2] = $fmt;
  HEAP32[$agg$result + 96 >> 2] = ($type | 0) == 0 ? 1 : 6;
  HEAP32[$agg$result + 100 >> 2] = $numMipMaps;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62523, 0, 62263, 72, 62335);
  _abort();
 }
}

function __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_12TextureSetupEEENS_2IdERKT_PKvi($agg$result, $this, $setup, $data, $size) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $setup = $setup | 0;
 $data = $data | 0;
 $size = $size | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $30 = 0, $32 = 0, $35 = 0, $39 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 if (!(__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 48725, 134, 54967);
  _abort();
 }
 if (!$data) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80919, 0, 48725, 135, 54967);
  _abort();
 }
 if (($size | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80935, 0, 48725, 136, 54967);
  _abort();
 }
 if (__ZNK5Oryol12TextureSetup19ShouldSetupFromFileEv($setup) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53167, 0, 48725, 137, 54967);
  _abort();
 }
 $7 = $this + 24 | 0;
 $8 = $setup + 76 | 0;
 __ZNK5Oryol5_priv16resourceRegistry6LookupERKNS_7LocatorE($agg$result, $7, $8);
 if ((HEAP32[$agg$result + 4 >> 2] | 0) != -1) {
  STACKTOP = sp;
  return;
 }
 $12 = $this + 400 | 0;
 __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE7AllocIdEv($0, $12);
 if (($0 | 0) == ($agg$result | 0)) {
  $14 = $agg$result;
  $32 = HEAP32[$14 >> 2] | 0;
  $35 = HEAP32[$14 + 4 >> 2] | 0;
 } else {
  $20 = $0;
  $22 = HEAP32[$20 >> 2] | 0;
  $25 = HEAP32[$20 + 4 >> 2] | 0;
  $26 = $agg$result;
  HEAP32[$26 >> 2] = $22;
  HEAP32[$26 + 4 >> 2] = $25;
  $32 = $22;
  $35 = $25;
 }
 $30 = $1;
 HEAP32[$30 >> 2] = $32;
 HEAP32[$30 + 4 >> 2] = $35;
 HEAP32[$2 >> 2] = __ZNK5Oryol21resourceContainerBase9peekLabelEv($this) | 0;
 __ZN5Oryol5_priv16resourceRegistry3AddERKNS_7LocatorENS_2IdENS_13ResourceLabelE($7, $8, $1, $2);
 $39 = __ZN5Oryol5_priv16glTextureFactory13SetupResourceERNS0_7textureEPKvi($this + 208 | 0, __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6AssignERKNS_2IdERKS3_NS_13ResourceState4CodeE($12, $agg$result, $setup, 1) | 0, $data, $size) | 0;
 if (($39 + -3 | 0) >>> 0 >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53885, 0, 48725, 148, 54967);
  _abort();
 }
 __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE11UpdateStateERKNS_2IdENS_13ResourceState4CodeE($12, $agg$result, $39);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol12TextureSetup5EmptyEiiiNS_11TextureType4CodeENS_11PixelFormat4CodeENS_5Usage4CodeE($agg$result, $w, $h, $numMipMaps, $type, $fmt, $usage) {
 $agg$result = $agg$result | 0;
 $w = $w | 0;
 $h = $h | 0;
 $numMipMaps = $numMipMaps | 0;
 $type = $type | 0;
 $fmt = $fmt | 0;
 $usage = $usage | 0;
 var $10 = 0, $24 = 0, $29 = 0, $6 = 0, $7 = 0, $switch$tableidx$i = 0;
 if (($w | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62257, 0, 62263, 89, 62590);
  _abort();
 }
 if (($h | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62329, 0, 62263, 90, 62590);
  _abort();
 }
 if (($fmt + -11 | 0) >>> 0 <= 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62479, 0, 62263, 91, 62590);
  _abort();
 }
 $switch$tableidx$i = $fmt + -8 | 0;
 if ($switch$tableidx$i >>> 0 < 11) if (2023 >>> ($switch$tableidx$i & 2047) & 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62710, 0, 62263, 92, 62590);
  _abort();
 }
 if ($type | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62748, 0, 62263, 93, 62590);
  _abort();
 }
 if (($numMipMaps + -1 | 0) >>> 0 < 11) {
  $6 = $agg$result + 24 | 0;
  HEAP32[$agg$result >> 2] = 0;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = 0;
  HEAP32[$agg$result + 12 >> 2] = 0;
  HEAP32[$agg$result + 16 >> 2] = 0;
  HEAP32[$agg$result + 20 >> 2] = 0;
  HEAP32[$6 >> 2] = 1;
  $7 = $agg$result + 28 | 0;
  HEAP32[$7 >> 2] = 0;
  HEAP32[$agg$result + 32 >> 2] = 20;
  $10 = $agg$result + 40 | 0;
  HEAP32[$10 >> 2] = -1;
  HEAP32[$10 + 4 >> 2] = -1;
  HEAP16[$agg$result + 48 >> 1] = 21;
  HEAPF32[$agg$result + 52 >> 2] = 0.0;
  HEAPF32[$agg$result + 56 >> 2] = 0.0;
  HEAPF32[$agg$result + 60 >> 2] = 0.0;
  HEAPF32[$agg$result + 64 >> 2] = 1.0;
  HEAPF32[$agg$result + 68 >> 2] = 1.0;
  HEAP8[$agg$result + 72 >> 0] = 0;
  HEAP8[$agg$result + 73 >> 0] = 3;
  __ZN5Oryol7Locator9NonSharedEv($agg$result + 76 | 0);
  $24 = $agg$result + 88 | 0;
  HEAP32[$24 >> 2] = -1;
  HEAP32[$24 + 4 >> 2] = -1;
  $29 = $agg$result + 680 | 0;
  _memset($agg$result + 96 | 0, 0, 584) | 0;
  HEAP8[$29 >> 0] = HEAP8[$29 >> 0] & -128 | 4;
  HEAP32[$agg$result + 4 >> 2] = 0;
  HEAP32[$agg$result + 8 >> 2] = $w;
  HEAP32[$agg$result + 12 >> 2] = $h;
  HEAP32[$6 >> 2] = $numMipMaps;
  HEAP32[$7 >> 2] = $fmt;
  HEAP32[$agg$result >> 2] = $usage;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62523, 0, 62263, 94, 62590);
  _abort();
 }
}

function __ZN5ImGui11FocusWindowEP11ImGuiWindow($window) {
 $window = $window | 0;
 var $$ = 0, $$$v = 0, $$lcssa = 0, $13 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $33 = 0, $43 = 0, $46 = 0, $49 = 0, $50 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $64 = 0, $68 = 0, $70 = 0, $76 = 0, $i$05 = 0, $i$05$lcssa = 0, label = 0;
 HEAP32[38205] = $window;
 if (!$window) return;
 $3 = HEAP32[$window + 576 >> 2] | 0;
 $$$v = ($3 | 0) == 0 ? $window : $3;
 $$ = $$$v;
 $6 = HEAP32[$$$v + 8 >> 2] | 0;
 if ($6 & 33554432 | 0) if (HEAP32[38211] | 0) {
  $13 = HEAP32[38214] | 0;
  if ($13 | 0) if ((HEAP32[$13 + 576 >> 2] | 0) != ($$$v | 0)) {
   HEAP32[38211] = 0;
   HEAP8[152854] = 0;
   HEAP8[152853] = 1;
   HEAP32[38214] = 0;
  }
 }
 if ($6 & 8192 | 0) return;
 $24 = 152780;
 $25 = HEAP32[$24 >> 2] | 0;
 if (($25 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $28 = 152788;
 $29 = HEAP32[$28 >> 2] | 0;
 if ((HEAP32[$29 + ($25 + -1 << 2) >> 2] | 0) == ($$$v | 0)) return; else $i$05 = 0;
 while (1) {
  $33 = $29 + ($i$05 << 2) | 0;
  if ((HEAP32[$33 >> 2] | 0) == ($$$v | 0)) {
   $$lcssa = $33;
   $i$05$lcssa = $i$05;
   label = 12;
   break;
  }
  $i$05 = $i$05 + 1 | 0;
  if (($25 | 0) <= ($i$05 | 0)) {
   $49 = $25;
   break;
  }
 }
 do if ((label | 0) == 12) if (($i$05$lcssa | 0) > -1 & ($25 | 0) > ($i$05$lcssa | 0)) {
  _memmove($$lcssa | 0, $$lcssa + 4 | 0, ($25 - $i$05$lcssa << 2) + -4 | 0) | 0;
  $43 = (HEAP32[$24 >> 2] | 0) + -1 | 0;
  HEAP32[$24 >> 2] = $43;
  $49 = $43;
  break;
 } else ___assert_fail(124809, 127226, 835, 124838); while (0);
 $46 = 152784;
 if (($49 | 0) == (HEAP32[$46 >> 2] | 0)) {
  $50 = $49 + 1 | 0;
  if (!$49) $55 = 8; else $55 = (($49 | 0) / 2 | 0) + $49 | 0;
  $56 = ($55 | 0) > ($50 | 0) ? $55 : $50;
  if (($49 | 0) < ($56 | 0)) {
   $59 = 147664;
   HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 1;
   $64 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($56 << 2) | 0;
   _memcpy($64 | 0, HEAP32[$28 >> 2] | 0, HEAP32[$24 >> 2] << 2 | 0) | 0;
   $68 = HEAP32[$28 >> 2] | 0;
   if ($68 | 0) {
    $70 = 147664;
    HEAP32[$70 >> 2] = (HEAP32[$70 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($68);
   HEAP32[$28 >> 2] = $64;
   HEAP32[$46 >> 2] = $56;
   $76 = HEAP32[$24 >> 2] | 0;
  } else $76 = $49;
 } else $76 = $49;
 HEAP32[$24 >> 2] = $76 + 1;
 HEAP32[(HEAP32[$28 >> 2] | 0) + ($76 << 2) >> 2] = $$;
 return;
}

function __ZN5Oryol5_priv12inputMgrBase12onTouchEventERKNS0_10touchEventE($this, $event) {
 $this = $this | 0;
 $event = $event | 0;
 var $23 = 0, $3 = 0, $34 = 0;
 if ((HEAP32[$event + 16 >> 2] | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78345, 0, 78057, 86, 78366);
  _abort();
 }
 $3 = $this + 1288 | 0;
 if (!(HEAP8[$3 >> 0] | 0)) return;
 if (HEAP8[$this + 1409 >> 0] | 0) if ((__ZN5Oryol5_priv11tapDetector6detectERKNS0_10touchEventE($this + 1416 | 0, $event) | 0) == 5) __ZN5Oryol8Touchpad8onTappedERKN3glm5tvec2IfLNS1_9precisionE0EEE($3, $this + 1420 | 0);
 if (HEAP8[$this + 1410 >> 0] | 0) if ((__ZN5Oryol5_priv11tapDetector6detectERKNS0_10touchEventE($this + 1592 | 0, $event) | 0) == 5) __ZN5Oryol8Touchpad14onDoubleTappedERKN3glm5tvec2IfLNS1_9precisionE0EEE($3, $this + 1596 | 0);
 L15 : do if (HEAP8[$this + 1412 >> 0] | 0) {
  $23 = $this + 1768 | 0;
  switch (__ZN5Oryol5_priv11panDetector6detectERKNS0_10touchEventE($23, $event) | 0) {
  case 1:
   {
    __ZN5Oryol8Touchpad16onPanningStartedERKN3glm5tvec2IfLNS1_9precisionE0EEES6_($3, $23, $this + 1776 | 0);
    break L15;
    break;
   }
  case 2:
   {
    __ZN5Oryol8Touchpad9onPanningERKN3glm5tvec2IfLNS1_9precisionE0EEES6_($3, $23, $this + 1776 | 0);
    break L15;
    break;
   }
  case 4:
   {
    __ZN5Oryol8Touchpad14onPanningEndedERKN3glm5tvec2IfLNS1_9precisionE0EEES6_($3, $23, $this + 1776 | 0);
    break L15;
    break;
   }
  default:
   {
    if (!(HEAP8[$this + 1292 >> 0] | 0)) break L15;
    __ZN5Oryol8Touchpad18onPanningCancelledEv($3);
    break L15;
   }
  }
 } while (0);
 if (!(HEAP8[$this + 1411 >> 0] | 0)) return;
 $34 = $this + 1944 | 0;
 switch (__ZN5Oryol5_priv13pinchDetector6detectERKNS0_10touchEventE($34, $event) | 0) {
 case 1:
  {
   __ZN5Oryol8Touchpad17onPinchingStartedERKN3glm5tvec2IfLNS1_9precisionE0EEES6_S6_S6_($3, $34, $this + 1952 | 0, $this + 1960 | 0, $this + 1968 | 0);
   return;
  }
 case 2:
  {
   __ZN5Oryol8Touchpad10onPinchingERKN3glm5tvec2IfLNS1_9precisionE0EEES6_S6_S6_($3, $34, $this + 1952 | 0, $this + 1960 | 0, $this + 1968 | 0);
   return;
  }
 case 4:
  {
   __ZN5Oryol8Touchpad15onPinchingEndedERKN3glm5tvec2IfLNS1_9precisionE0EEES6_S6_S6_($3, $34, $this + 1952 | 0, $this + 1960 | 0, $this + 1968 | 0);
   return;
  }
 default:
  {
   if (!(HEAP8[$this + 1295 >> 0] | 0)) return;
   __ZN5Oryol8Touchpad19onPinchingCancelledEv($3);
   return;
  }
 }
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE13moveEraseBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $0 = 0, $10 = 0, $13 = 0, $15 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $41 = 0, $42 = 0, $52 = 0, $6 = 0, $9 = 0, $i$02 = 0, $i$02$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 118839);
  _abort();
 }
 $3 = $this + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$this + 8 >> 2] | 0;
 if (($4 - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 118839);
  _abort();
 }
 $9 = $6 + $index | 0;
 $10 = $4 + -1 | 0;
 if (($9 | 0) < ($10 | 0)) {
  $26 = $0;
  $i$02 = $9;
  while (1) {
   $i$02$looptemp = $i$02;
   $i$02 = $i$02 + 1 | 0;
   HEAP32[$26 + ($i$02$looptemp * 40 | 0) >> 2] = HEAP32[$26 + ($i$02 * 40 | 0) >> 2];
   $29 = $26 + ($i$02$looptemp * 40 | 0) + 8 | 0;
   $30 = $26 + ($i$02 * 40 | 0) + 8 | 0;
   $31 = $26 + ($i$02$looptemp * 40 | 0) + 24 | 0;
   $32 = HEAP32[$31 >> 2] | 0;
   if (($32 | 0) == ($29 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 16 >> 2] & 255]($32); else if ($32 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 20 >> 2] & 255]($32);
   HEAP32[$31 >> 2] = 0;
   $41 = $26 + ($i$02 * 40 | 0) + 24 | 0;
   $42 = HEAP32[$41 >> 2] | 0;
   do if (!$42) HEAP32[$31 >> 2] = 0; else if (($42 | 0) == ($30 | 0)) {
    HEAP32[$31 >> 2] = $29;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$42 >> 2] | 0) + 12 >> 2] & 63]($42, $29);
    break;
   } else {
    HEAP32[$31 >> 2] = $42;
    HEAP32[$41 >> 2] = 0;
    break;
   } while (0);
   HEAP8[$26 + ($i$02$looptemp * 40 | 0) + 32 >> 0] = HEAP8[$26 + ($i$02 * 40 | 0) + 32 >> 0] | 0;
   $52 = (HEAP32[$3 >> 2] | 0) + -1 | 0;
   $$pre = HEAP32[$this >> 2] | 0;
   if (($i$02 | 0) >= ($52 | 0)) {
    $$lcssa = $52;
    $13 = $$pre;
    break;
   } else $26 = $$pre;
  }
 } else {
  $$lcssa = $10;
  $13 = $0;
 }
 HEAP32[$3 >> 2] = $$lcssa;
 $15 = HEAP32[$13 + ($$lcssa * 40 | 0) + 24 >> 2] | 0;
 if (($15 | 0) == ($13 + ($$lcssa * 40 | 0) + 8 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($15);
  return;
 }
 if (!$15) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 255]($15);
 return;
}

function __ZNK5Oryol15stringAtomTable4FindEiPKc($this, $hash, $str) {
 $this = $this | 0;
 $hash = $hash | 0;
 $str = $str | 0;
 var $$0 = 0, $$0$i$i1$i$i = 0, $$0$i$i2$i$i = 0, $$0$i$i4$i$i = 0, $$0$ph$i$i$i$i$i = 0, $$0$ph$i$i$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa12 = 0, $17 = 0, $18 = 0, $22 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $__len$0$i$i$i$i$i = 0, $__len$0$i$i$i$i$i$lcssa11 = 0, $__len$0$ph$i$i$i$i$i = 0, $dummyEntry = 0, $dummyHead = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $dummyHead = sp + 8 | 0;
 $dummyEntry = sp;
 HEAP32[$dummyHead >> 2] = $this;
 HEAP32[$dummyHead + 4 >> 2] = $hash;
 HEAP32[$dummyHead + 8 >> 2] = 0;
 HEAP32[$dummyHead + 12 >> 2] = $str;
 HEAP32[$dummyEntry >> 2] = $dummyHead;
 $3 = $hash & 1023;
 $4 = $this + 32 + ($3 * 24 | 0) | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) {
  $$0$i$i1$i$i = 0;
  $$0$i$i4$i$i = 0;
 } else {
  $$0$i$i1$i$i = $5 + (HEAP32[$this + 32 + ($3 * 24 | 0) + 12 >> 2] << 2) | 0;
  $$0$i$i4$i$i = $5 + (HEAP32[$this + 32 + ($3 * 24 | 0) + 8 >> 2] << 2) | 0;
 }
 $$0$ph$i$i$i$i$i = $$0$i$i4$i$i;
 $__len$0$ph$i$i$i$i$i = $$0$i$i1$i$i - $$0$i$i4$i$i >> 2;
 L4 : while (1) {
  $__len$0$i$i$i$i$i = $__len$0$ph$i$i$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i$i$i) {
    $$0$ph$i$i$i$i$i$lcssa = $$0$ph$i$i$i$i$i;
    break L4;
   }
   $17 = ($__len$0$i$i$i$i$i | 0) / 2 | 0;
   $18 = $$0$ph$i$i$i$i$i + ($17 << 2) | 0;
   if (__ZNK5Oryol15stringAtomTable5EntryltERKS1_($18, $dummyEntry) | 0) {
    $$lcssa = $17;
    $$lcssa12 = $18;
    $__len$0$i$i$i$i$i$lcssa11 = $__len$0$i$i$i$i$i;
    break;
   } else $__len$0$i$i$i$i$i = $17;
  }
  $$0$ph$i$i$i$i$i = $$lcssa12 + 4 | 0;
  $__len$0$ph$i$i$i$i$i = $__len$0$i$i$i$i$i$lcssa11 + -1 - $$lcssa | 0;
 }
 $22 = HEAP32[$4 >> 2] | 0;
 if (!$22) $$0$i$i2$i$i = 0; else $$0$i$i2$i$i = $22 + (HEAP32[$this + 32 + ($3 * 24 | 0) + 12 >> 2] << 2) | 0;
 if (($$0$ph$i$i$i$i$i$lcssa | 0) == ($$0$i$i2$i$i | 0)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (($$0$ph$i$i$i$i$i$lcssa | 0) == 0 | (__ZNK5Oryol15stringAtomTable5EntryeqERKS1_($dummyEntry, $$0$ph$i$i$i$i$i$lcssa) | 0) ^ 1) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $30 = HEAP32[$$0$ph$i$i$i$i$i$lcssa >> 2] | 0;
 if (!$30) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122140, 0, 121790, 46, 122163);
  _abort();
 } else {
  $$0 = $30;
  STACKTOP = sp;
  return $$0 | 0;
 }
 return 0;
}

function __ZN4yakc8kc85_exp13remove_moduleEhRNS_6memoryE($this, $slot_addr, $mem) {
 $this = $this | 0;
 $slot_addr = $slot_addr | 0;
 $mem = $mem | 0;
 var $$lcssa = 0, $$sroa$5 = 0, $14 = 0, $15 = 0, $18 = 0, $25 = 0, $26 = 0, $30 = 0, $7 = 0, $__begin$0$$0$lcssa$i = 0, $i$0$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $$sroa$5 = sp;
 if ((HEAP8[$this + 256 >> 0] | 0) == $slot_addr << 24 >> 24) $7 = 0; else if ((HEAP8[$this + 296 >> 0] | 0) == $slot_addr << 24 >> 24) $7 = 1; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 if ((HEAP8[$this + 256 + ($7 * 40 | 0) + 12 >> 0] | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(36350, 0, 40519, 277, 36381);
  _abort();
 } else $i$0$i = 0;
 while (1) {
  if (($i$0$i | 0) >= 2) {
   label = 8;
   break;
  }
  $14 = $i$0$i + 1 | 0;
  if ((HEAP8[$this + 256 + ($i$0$i * 40 | 0) >> 0] | 0) == $slot_addr << 24 >> 24) {
   $$lcssa = $14;
   break;
  } else $i$0$i = $14;
 }
 if ((label | 0) == 8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 249, 36439);
  _abort();
 }
 __ZN4yakc6memory11unmap_layerEi($mem, $$lcssa);
 $15 = $this + 256 | 0;
 $18 = $this + 296 | 0;
 if ((HEAP8[$15 >> 0] | 0) == $slot_addr << 24 >> 24) $__begin$0$$0$lcssa$i = $15; else if ((HEAP8[$18 >> 0] | 0) == $slot_addr << 24 >> 24) $__begin$0$$0$lcssa$i = $18; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 HEAP16[$__begin$0$$0$lcssa$i + 36 >> 1] = 0;
 if (HEAP8[$__begin$0$$0$lcssa$i + 33 >> 0] | 0) {
  $25 = $__begin$0$$0$lcssa$i + 24 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  if ($26 | 0) {
   __ZN5Oryol6Memory4FreeEPv($26);
   HEAP32[$25 >> 2] = 0;
  }
 }
 HEAP32[$$sroa$5 >> 2] = 0;
 HEAP32[$$sroa$5 + 4 >> 2] = 0;
 HEAP32[$$sroa$5 + 8 >> 2] = 0;
 HEAP32[$$sroa$5 + 12 >> 2] = 0;
 HEAP32[$$sroa$5 + 16 >> 2] = 0;
 HEAP8[$$sroa$5 + 20 >> 0] = 0;
 $30 = $__begin$0$$0$lcssa$i + 4 | 0;
 HEAP32[$30 >> 2] = 0;
 HEAP32[$30 + 4 >> 2] = 0;
 HEAP8[$__begin$0$$0$lcssa$i + 12 >> 0] = -1;
 dest = $__begin$0$$0$lcssa$i + 13 | 0;
 src = $$sroa$5;
 stop = dest + 21 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$__begin$0$$0$lcssa$i + 34 >> 0] = -64;
 STACKTOP = sp;
 return;
}

function __ZN4yakc6memory3mapEitjPhb($this, $layer, $addr, $size, $ptr, $writable) {
 $this = $this | 0;
 $layer = $layer | 0;
 $addr = $addr | 0;
 $size = $size | 0;
 $ptr = $ptr | 0;
 $writable = $writable | 0;
 var $1 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $30 = 0, $31 = 0, $35 = 0, $8 = 0, $i$02 = 0, $layer_index$03$lcssa$i = 0, $page_index$04$i = 0, label = 0;
 if ($layer >>> 0 >= 4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15288, 0, 15325, 117, 15405);
  _abort();
 }
 $1 = $addr & 65535;
 if ($1 & 2047 | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15469, 0, 15325, 118, 15405);
  _abort();
 }
 if ($size & 2047 | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15494, 0, 15325, 119, 15405);
  _abort();
 }
 if ($size >>> 0 >= 65537) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15519, 0, 15325, 120, 15405);
  _abort();
 }
 $8 = $size >>> 11 & 65535;
 if ($8 >>> 0 >= 33) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15538, 0, 15325, 123, 15405);
  _abort();
 }
 if ($8 | 0) {
  $11 = $writable & 1;
  $31 = 0;
  $i$02 = 0;
  do {
   $30 = $31 << 11;
   $35 = ($30 + $1 | 0) >>> 11 & 31;
   HEAP32[$this + ($layer << 8) + ($35 << 3) >> 2] = $ptr + ($30 & 63488);
   HEAP8[$this + ($layer << 8) + ($35 << 3) + 4 >> 0] = $11;
   $i$02 = $i$02 + 1 << 16 >> 16;
   $31 = $i$02 & 65535;
  } while ($31 >>> 0 < $8 >>> 0);
 }
 $12 = $this + 1280 | 0;
 $page_index$04$i = 0;
 do {
  if (!(HEAP32[$this + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 256 + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 512 + ($page_index$04$i << 3) >> 2] | 0)) if (!(HEAP32[$this + 768 + ($page_index$04$i << 3) >> 2] | 0)) {
   HEAP32[$this + 1024 + ($page_index$04$i << 3) >> 2] = $12;
   HEAP8[$this + 1024 + ($page_index$04$i << 3) + 4 >> 0] = 0;
  } else {
   $layer_index$03$lcssa$i = 3;
   label = 16;
  } else {
   $layer_index$03$lcssa$i = 2;
   label = 16;
  } else {
   $layer_index$03$lcssa$i = 1;
   label = 16;
  } else {
   $layer_index$03$lcssa$i = 0;
   label = 16;
  }
  if ((label | 0) == 16) {
   label = 0;
   $19 = $this + 1024 + ($page_index$04$i << 3) | 0;
   $20 = $this + ($layer_index$03$lcssa$i << 8) + ($page_index$04$i << 3) | 0;
   HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
   HEAP8[$19 + 4 >> 0] = HEAP8[$20 + 4 >> 0] | 0;
  }
  $page_index$04$i = $page_index$04$i + 1 | 0;
 } while (($page_index$04$i | 0) != 32);
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE13prepareInsertEiRb($this, $index, $outSlotConstructed) {
 $this = $this | 0;
 $index = $index | 0;
 $outSlotConstructed = $outSlotConstructed | 0;
 var $$1 = 0, $0 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0;
 HEAP8[$outSlotConstructed >> 0] = 1;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 if (($4 | 0) == ($index | 0)) {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   HEAP32[$0 >> 2] = $1 + 1;
   $$1 = (HEAP32[$this >> 2] | 0) + ($1 * 40 | 0) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 527, 119647);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 if (!$index) {
  if (($3 | 0) > 0) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   $16 = $3 + -1 | 0;
   HEAP32[$2 >> 2] = $16;
   $$1 = (HEAP32[$this >> 2] | 0) + ($16 * 40 | 0) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 543, 119647);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE14moveInsertBackEi($this, 0) | 0;
  return $$1 | 0;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  if (($3 | 0) > 0) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE15moveInsertFrontEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123198, 0, 123391, 557, 119647);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE14moveInsertBackEi($this, $index) | 0;
  return $$1 | 0;
 } else {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE14moveInsertBackEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123220, 0, 123391, 569, 119647);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 return 0;
}

function __ZN5ImGui12CalcTextSizeEPKcS1_bf($agg$result, $text, $text_end, $hide_text_after_double_hash, $wrap_width) {
 $agg$result = $agg$result | 0;
 $text = $text | 0;
 $text_end = $text_end | 0;
 $hide_text_after_double_hash = $hide_text_after_double_hash | 0;
 $wrap_width = +$wrap_width;
 var $$pre$phi$iZ2D = 0, $$text_end$i = 0, $10 = 0, $12 = 0.0, $15 = 0.0, $16 = 0.0, $20 = 0.0, $22 = 0.0, $25 = 0, $30 = 0, $31 = 0, $5 = 0, $text_display_end$0 = 0, $text_display_end$03$i = 0, $text_size = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $text_size = sp;
 L1 : do if ($hide_text_after_double_hash) {
  $$text_end$i = ($text_end | 0) == 0 ? -1 : $text_end;
  if ($$text_end$i >>> 0 > $text >>> 0) $text_display_end$03$i = $text; else {
   $15 = +HEAPF32[38187];
   break;
  }
  while (1) {
   switch (HEAP8[$text_display_end$03$i >> 0] | 0) {
   case 0:
    {
     $text_display_end$0 = $text_display_end$03$i;
     label = 8;
     break L1;
     break;
    }
   case 35:
    {
     $5 = $text_display_end$03$i + 1 | 0;
     if ((HEAP8[$5 >> 0] | 0) == 35) {
      $text_display_end$0 = $text_display_end$03$i;
      label = 8;
      break L1;
     } else $$pre$phi$iZ2D = $5;
     break;
    }
   default:
    $$pre$phi$iZ2D = $text_display_end$03$i + 1 | 0;
   }
   if ($$pre$phi$iZ2D >>> 0 < $$text_end$i >>> 0) $text_display_end$03$i = $$pre$phi$iZ2D; else {
    $text_display_end$0 = $$pre$phi$iZ2D;
    label = 8;
    break L1;
   }
  }
 } else {
  $text_display_end$0 = $text_end;
  label = 8;
 } while (0);
 if ((label | 0) == 8) {
  $10 = HEAP32[38186] | 0;
  $12 = +HEAPF32[38187];
  if (($text_display_end$0 | 0) == ($text | 0)) $15 = $12; else {
   __ZNK6ImFont13CalcTextSizeAEfffPKcS1_PS1_($text_size, $10, $12, 3402823466385288598117041.0e14, $wrap_width, $text, $text_display_end$0, 0);
   $16 = +HEAPF32[$text_size >> 2];
   if ($16 > 0.0) {
    $20 = $16 - $12 / +HEAPF32[$10 >> 2];
    HEAPF32[$text_size >> 2] = $20;
    $22 = $20;
   } else $22 = $16;
   HEAPF32[$text_size >> 2] = +(~~($22 + .949999988079071) | 0);
   $25 = $text_size;
   $30 = HEAP32[$25 + 4 >> 2] | 0;
   $31 = $agg$result;
   HEAP32[$31 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$31 + 4 >> 2] = $30;
   STACKTOP = sp;
   return;
  }
 }
 HEAPF32[$agg$result >> 2] = 0.0;
 HEAPF32[$agg$result + 4 >> 2] = $15;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv8ioWorker24moveWriteToTransferQueueEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $38 = 0, $40 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 $0 = $this + 60 | 0;
 $1 = $this + 72 | 0;
 $3 = $this + 68 | 0;
 if ((HEAP32[$1 >> 2] | 0) == (HEAP32[$3 >> 2] | 0)) {
  $13 = $this + 36 | 0;
  $14 = $this + 76 | 0;
  HEAP32[$14 >> 2] = 0;
  $15 = $this + 80 | 0;
  HEAP32[$15 >> 2] = 0;
  $16 = HEAP32[$0 >> 2] | 0;
  if ($16 | 0) __ZN5Oryol6Memory4FreeEPv($16);
  HEAP32[$14 >> 2] = HEAP32[$this + 52 >> 2];
  HEAP32[$15 >> 2] = HEAP32[$this + 56 >> 2];
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 >> 2] = HEAP32[$13 >> 2];
  HEAP32[$this + 64 >> 2] = HEAP32[$this + 40 >> 2];
  HEAP32[$3 >> 2] = HEAP32[$this + 44 >> 2];
  HEAP32[$1 >> 2] = HEAP32[$this + 48 >> 2];
  HEAP32[$13 >> 2] = 0;
  HEAP32[$13 + 4 >> 2] = 0;
  HEAP32[$13 + 8 >> 2] = 0;
  HEAP32[$13 + 12 >> 2] = 0;
  return;
 }
 $6 = $this + 48 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $this + 44 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 if (($7 | 0) == ($9 | 0)) return;
 $11 = $this + 36 | 0;
 $12 = $this + 64 | 0;
 $31 = $7;
 $32 = $9;
 while (1) {
  if (($31 | 0) <= ($32 | 0)) {
   label = 8;
   break;
  }
  $33 = HEAP32[$11 >> 2] | 0;
  if (!$33) {
   label = 10;
   break;
  }
  $35 = $33 + ($32 << 2) | 0;
  $36 = HEAP32[$35 >> 2] | 0;
  HEAP32[$35 >> 2] = 0;
  HEAP32[$8 >> 2] = $32 + 1;
  __ZN5Oryol5QueueINS_3PtrINS_5_priv5ioMsgEEEE12checkEnqueueEv($0);
  $38 = HEAP32[$0 >> 2] | 0;
  if (!$38) {
   label = 13;
   break;
  }
  $40 = HEAP32[$1 >> 2] | 0;
  if (($40 | 0) >= (HEAP32[$12 >> 2] | 0)) {
   label = 13;
   break;
  }
  HEAP32[$1 >> 2] = $40 + 1;
  HEAP32[$38 + ($40 << 2) >> 2] = $36;
  $31 = HEAP32[$6 >> 2] | 0;
  $32 = HEAP32[$8 >> 2] | 0;
  if (($31 | 0) == ($32 | 0)) {
   label = 15;
   break;
  }
 }
 if ((label | 0) == 8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106560, 0, 105992, 315, 106584);
  _abort();
 } else if ((label | 0) == 10) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106688, 0, 123391, 705, 106727);
  _abort();
 } else if ((label | 0) == 13) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 408, 106847);
  _abort();
 } else if ((label | 0) == 15) return;
}

function __ZNK5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEixERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$ph$i$i$i = 0, $$0$ph$lcssa6$i$i$i = 0, $$lcssa40 = 0, $$lcssa41 = 0, $$pre$i$i$i$i$i$i = 0, $11 = 0, $12 = 0, $18 = 0, $19 = 0, $25 = 0, $3 = 0, $6 = 0, $7 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa39 = 0, $__len$0$ph$i$i$i = 0, $__len$0$us$us$i7$i$i = 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 254, 103306);
  _abort();
 }
 $3 = HEAP32[$this >> 2] | 0;
 if (!$3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105975, 0, 118102, 255, 103306);
  _abort();
 }
 $6 = HEAP32[$this + 8 >> 2] | 0;
 $7 = $3 + ($6 << 5) | 0;
 $11 = (HEAP32[$this + 12 >> 2] | 0) - $6 << 5 >> 5;
 $12 = HEAP32[$key >> 2] | 0;
 L7 : do if (!$12) if (!$11) $$0$ph$lcssa6$i$i$i = $7; else {
  $__len$0$us$us$i7$i$i = $11;
  while (1) if (($__len$0$us$us$i7$i$i + 1 | 0) >>> 0 < 3) {
   $$0$ph$lcssa6$i$i$i = $7;
   break;
  } else $__len$0$us$us$i7$i$i = ($__len$0$us$us$i7$i$i | 0) / 2 | 0;
 } else {
  $$0$ph$i$i$i = $7;
  $__len$0$ph$i$i$i = $11;
  L11 : while (1) {
   $__len$0$i$i$i = $__len$0$ph$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i) {
     $$0$ph$lcssa6$i$i$i = $$0$ph$i$i$i;
     break L7;
    }
    $18 = ($__len$0$i$i$i | 0) / 2 | 0;
    $19 = $$0$ph$i$i$i + ($18 << 5) | 0;
    $$pre$i$i$i$i$i$i = HEAP32[$19 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i) $25 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$12 >> 2] | 0)) $25 = $$pre$i$i$i$i$i$i; else break L11;
    if ($25 >>> 0 < $12 >>> 0) {
     $$lcssa40 = $18;
     $$lcssa41 = $19;
     $__len$0$i$i$i$lcssa39 = $__len$0$i$i$i;
     break;
    } else $__len$0$i$i$i = $18;
   }
   $$0$ph$i$i$i = $$lcssa41 + 32 | 0;
   $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa39 + -1 - $$lcssa40 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if (($$0$ph$lcssa6$i$i$i | 0) == ($3 + (HEAP32[$this + 12 >> 2] << 5) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(107554, 0, 118102, 257, 103306);
  _abort();
 }
 if (__ZNK5Oryol10StringAtomeqERKS0_($key, $$0$ph$lcssa6$i$i$i) | 0) return $$0$ph$lcssa6$i$i$i + 8 | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(107554, 0, 118102, 257, 103306);
  _abort();
 }
 return 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $33 = 0, $43 = 0, $45 = 0, $6 = 0, $is_dst_type_derived_from_static_type$0$off02 = 0, label = 0;
 do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $45 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$45 >> 2] | 0) + 24 >> 2] & 3]($45, $info, $current_ptr, $path_below, $use_strcmp);
   break;
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $23 = $info + 52 | 0;
    HEAP8[$23 >> 0] = 0;
    $24 = $info + 53 | 0;
    HEAP8[$24 >> 0] = 0;
    $26 = HEAP32[$this + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 3]($26, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
    if (!(HEAP8[$24 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off02 = 0;
     label = 13;
    } else if (!(HEAP8[$23 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off02 = 1;
     label = 13;
    } else label = 17;
    do if ((label | 0) == 13) {
     HEAP32[$14 >> 2] = $current_ptr;
     $33 = $info + 40 | 0;
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
     if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
      HEAP8[$info + 54 >> 0] = 1;
      if ($is_dst_type_derived_from_static_type$0$off02) {
       label = 17;
       break;
      } else {
       $43 = 4;
       break;
      }
     }
     if ($is_dst_type_derived_from_static_type$0$off02) label = 17; else $43 = 4;
    } while (0);
    if ((label | 0) == 17) $43 = 3;
    HEAP32[$20 >> 2] = $43;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN4yakc8kc85_exp22update_memory_mappingsERNS_6memoryE($this, $mem) {
 $this = $this | 0;
 $mem = $mem | 0;
 var $$lcssa = 0, $$lcssa9 = 0, $11 = 0, $17 = 0, $20 = 0, $23 = 0, $25 = 0, $33 = 0, $38 = 0, $4 = 0, $43 = 0, $45 = 0, $51 = 0, $54 = 0, $57 = 0, $59 = 0, $67 = 0, $9 = 0, $i$0$i = 0, $i$0$i$1 = 0, label = 0;
 do if ((HEAP8[$this + 268 >> 0] | 0) != -1) {
  $4 = HEAP8[$this + 256 >> 0] | 0;
  $i$0$i = 0;
  while (1) {
   if (($i$0$i | 0) >= 2) {
    label = 5;
    break;
   }
   $9 = $i$0$i + 1 | 0;
   if ((HEAP8[$this + 256 + ($i$0$i * 40 | 0) >> 0] | 0) == $4 << 24 >> 24) {
    $$lcssa9 = $9;
    break;
   } else $i$0$i = $9;
  }
  if ((label | 0) == 5) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 249, 36439);
   _abort();
  }
  __ZN4yakc6memory11unmap_layerEi($mem, $$lcssa9);
  $11 = HEAP8[$this + 294 >> 0] | 0;
  $17 = (HEAP8[$this + 290 >> 0] & $11 & 255) << 8 & 65535;
  HEAP16[$this + 292 >> 1] = $17;
  $20 = HEAP32[$this + 284 >> 2] | 0;
  if ($20 | 0) {
   $23 = HEAP32[$this + 280 >> 2] | 0;
   if ($23 | 0) {
    $25 = $11 & 255;
    if (!($25 & 1)) {
     __ZN4yakc6memory11unmap_layerEi($mem, $$lcssa9);
     break;
    }
    if (!($25 & 2)) $33 = 0; else $33 = (HEAP8[$this + 288 >> 0] | 0) != 0;
    __ZN4yakc6memory3mapEitjPhb($mem, $$lcssa9, $17, $20, $23, $33);
   }
  }
 } while (0);
 if ((HEAP8[$this + 308 >> 0] | 0) == -1) return;
 $38 = HEAP8[$this + 296 >> 0] | 0;
 $i$0$i$1 = 0;
 while (1) {
  if (($i$0$i$1 | 0) >= 2) {
   label = 5;
   break;
  }
  $43 = $i$0$i$1 + 1 | 0;
  if ((HEAP8[$this + 256 + ($i$0$i$1 * 40 | 0) >> 0] | 0) == $38 << 24 >> 24) {
   $$lcssa = $43;
   break;
  } else $i$0$i$1 = $43;
 }
 if ((label | 0) == 5) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 249, 36439);
  _abort();
 }
 __ZN4yakc6memory11unmap_layerEi($mem, $$lcssa);
 $45 = HEAP8[$this + 334 >> 0] | 0;
 $51 = (HEAP8[$this + 330 >> 0] & $45 & 255) << 8 & 65535;
 HEAP16[$this + 332 >> 1] = $51;
 $54 = HEAP32[$this + 324 >> 2] | 0;
 if (!$54) return;
 $57 = HEAP32[$this + 320 >> 2] | 0;
 if (!$57) return;
 $59 = $45 & 255;
 if (!($59 & 1)) {
  __ZN4yakc6memory11unmap_layerEi($mem, $$lcssa);
  return;
 }
 if (!($59 & 2)) $67 = 0; else $67 = (HEAP8[$this + 328 >> 0] | 0) != 0;
 __ZN4yakc6memory3mapEitjPhb($mem, $$lcssa, $51, $54, $57, $67);
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE13prepareInsertEiRb($this, $index, $outSlotConstructed) {
 $this = $this | 0;
 $index = $index | 0;
 $outSlotConstructed = $outSlotConstructed | 0;
 var $$1 = 0, $0 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0;
 HEAP8[$outSlotConstructed >> 0] = 1;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 if (($4 | 0) == ($index | 0)) {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   HEAP32[$0 >> 2] = $1 + 1;
   $$1 = (HEAP32[$this >> 2] | 0) + ($1 * 12 | 0) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 527, 113358);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 if (!$index) {
  if (($3 | 0) > 0) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   $16 = $3 + -1 | 0;
   HEAP32[$2 >> 2] = $16;
   $$1 = (HEAP32[$this >> 2] | 0) + ($16 * 12 | 0) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 543, 113358);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE14moveInsertBackEi($this, 0) | 0;
  return $$1 | 0;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  if (($3 | 0) > 0) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE15moveInsertFrontEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123198, 0, 123391, 557, 113358);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE14moveInsertBackEi($this, $index) | 0;
  return $$1 | 0;
 } else {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE14moveInsertBackEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123220, 0, 123391, 569, 113358);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 return 0;
}

function __ZN5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEEixERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$ph$i$i$i = 0, $$0$ph$lcssa6$i$i$i = 0, $$lcssa40 = 0, $$lcssa41 = 0, $$pre$i$i$i$i$i$i = 0, $11 = 0, $12 = 0, $18 = 0, $19 = 0, $25 = 0, $3 = 0, $6 = 0, $7 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa39 = 0, $__len$0$ph$i$i$i = 0, $__len$0$us$us$i7$i$i = 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 244, 107395);
  _abort();
 }
 $3 = HEAP32[$this >> 2] | 0;
 if (!$3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105975, 0, 118102, 245, 107395);
  _abort();
 }
 $6 = HEAP32[$this + 8 >> 2] | 0;
 $7 = $3 + ($6 << 3) | 0;
 $11 = (HEAP32[$this + 12 >> 2] | 0) - $6 << 3 >> 3;
 $12 = HEAP32[$key >> 2] | 0;
 L7 : do if (!$12) if (!$11) $$0$ph$lcssa6$i$i$i = $7; else {
  $__len$0$us$us$i7$i$i = $11;
  while (1) if (($__len$0$us$us$i7$i$i + 1 | 0) >>> 0 < 3) {
   $$0$ph$lcssa6$i$i$i = $7;
   break;
  } else $__len$0$us$us$i7$i$i = ($__len$0$us$us$i7$i$i | 0) / 2 | 0;
 } else {
  $$0$ph$i$i$i = $7;
  $__len$0$ph$i$i$i = $11;
  L11 : while (1) {
   $__len$0$i$i$i = $__len$0$ph$i$i$i;
   while (1) {
    if (!$__len$0$i$i$i) {
     $$0$ph$lcssa6$i$i$i = $$0$ph$i$i$i;
     break L7;
    }
    $18 = ($__len$0$i$i$i | 0) / 2 | 0;
    $19 = $$0$ph$i$i$i + ($18 << 3) | 0;
    $$pre$i$i$i$i$i$i = HEAP32[$19 >> 2] | 0;
    if (!$$pre$i$i$i$i$i$i) $25 = 0; else if ((HEAP32[$$pre$i$i$i$i$i$i >> 2] | 0) == (HEAP32[$12 >> 2] | 0)) $25 = $$pre$i$i$i$i$i$i; else break L11;
    if ($25 >>> 0 < $12 >>> 0) {
     $$lcssa40 = $18;
     $$lcssa41 = $19;
     $__len$0$i$i$i$lcssa39 = $__len$0$i$i$i;
     break;
    } else $__len$0$i$i$i = $18;
   }
   $$0$ph$i$i$i = $$lcssa41 + 8 | 0;
   $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa39 + -1 - $$lcssa40 | 0;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112815, 0, 112852, 180, 112917);
  _abort();
 } while (0);
 if (($$0$ph$lcssa6$i$i$i | 0) == ($3 + (HEAP32[$this + 12 >> 2] << 3) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(107554, 0, 118102, 247, 107395);
  _abort();
 }
 if (__ZNK5Oryol10StringAtomeqERKS0_($key, $$0$ph$lcssa6$i$i$i) | 0) return $$0$ph$lcssa6$i$i$i + 4 | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(107554, 0, 118102, 247, 107395);
  _abort();
 }
 return 0;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE13prepareInsertEiRb($this, $index, $outSlotConstructed) {
 $this = $this | 0;
 $index = $index | 0;
 $outSlotConstructed = $outSlotConstructed | 0;
 var $$1 = 0, $0 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0;
 HEAP8[$outSlotConstructed >> 0] = 1;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 if (($4 | 0) == ($index | 0)) {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   HEAP32[$0 >> 2] = $1 + 1;
   $$1 = (HEAP32[$this >> 2] | 0) + ($1 << 4) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 527, 18852);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 if (!$index) {
  if (($3 | 0) > 0) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   $16 = $3 + -1 | 0;
   HEAP32[$2 >> 2] = $16;
   $$1 = (HEAP32[$this >> 2] | 0) + ($16 << 4) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 543, 18852);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE14moveInsertBackEi($this, 0) | 0;
  return $$1 | 0;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  if (($3 | 0) > 0) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE15moveInsertFrontEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123198, 0, 123391, 557, 18852);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE14moveInsertBackEi($this, $index) | 0;
  return $$1 | 0;
 } else {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE14moveInsertBackEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123220, 0, 123391, 569, 18852);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 return 0;
}

function __ZN4yakc4kc8521handle_keyboard_inputEv($this) {
 $this = $this | 0;
 var $$pre = 0, $10 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $22 = 0, $32 = 0, $33 = 0, $36 = 0, $39 = 0, $46 = 0, $5 = 0, $52 = 0, $57 = 0, $59 = 0, $67 = 0, $68 = 0, $70 = 0, $71 = 0, $73 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $83 = 0, $9 = 0, $90 = 0, $92 = 0;
 if (!(HEAP8[$this + 65648 >> 0] | 0)) return;
 $5 = $this + 725524 | 0;
 $8 = HEAPU16[$this + 65628 >> 1] | 0;
 $9 = $8 + 8 | 0;
 $10 = $9 & 2047;
 $13 = $this + 66932 + (($9 >>> 11 & 31) << 3) | 0;
 $15 = (HEAP32[$13 >> 2] | 0) + $10 | 0;
 $17 = HEAPU8[$15 >> 0] | 0;
 if (!(HEAP8[$5 >> 0] | 0)) {
  HEAP8[$15 >> 0] = $17 | 8;
  $20 = $8 + 13 | 0;
  $22 = $20 >>> 11 & 31;
  if (!(HEAP8[$this + 66932 + ($22 << 3) + 4 >> 0] | 0)) return;
  HEAP8[(HEAP32[$this + 66932 + ($22 << 3) >> 2] | 0) + ($20 & 2047) >> 0] = 0;
  return;
 }
 HEAP8[$15 >> 0] = $17 & 247;
 $32 = HEAP8[$5 >> 0] | 0;
 $33 = $8 + 13 | 0;
 $36 = $33 >>> 11 & 31;
 $39 = (HEAP32[$this + 66932 + ($36 << 3) >> 2] | 0) + ($33 & 2047) | 0;
 if ($32 << 24 >> 24 != (HEAP8[$39 >> 0] | 0)) {
  if (HEAP8[$this + 66932 + ($36 << 3) + 4 >> 0] | 0) HEAP8[$39 >> 0] = $32;
  $46 = (HEAP32[$13 >> 2] | 0) + $10 | 0;
  HEAP8[$46 >> 0] = HEAPU8[$46 >> 0] & 239;
  $52 = (HEAP32[$13 >> 2] | 0) + $10 | 0;
  HEAP8[$52 >> 0] = HEAPU8[$52 >> 0] | 1;
  $57 = $8 + 10 | 0;
  $59 = $57 >>> 11 & 31;
  if (!(HEAP8[$this + 66932 + ($59 << 3) + 4 >> 0] | 0)) return;
  HEAP8[(HEAP32[$this + 66932 + ($59 << 3) >> 2] | 0) + ($57 & 2047) >> 0] = 0;
  return;
 }
 $67 = $8 + 10 | 0;
 $68 = $67 & 2047;
 $70 = $67 >>> 11 & 31;
 $71 = $this + 66932 + ($70 << 3) | 0;
 $73 = (HEAP32[$71 >> 2] | 0) + $68 | 0;
 HEAP8[$73 >> 0] = (HEAP8[$73 >> 0] | 0) + 1 << 24 >> 24;
 $76 = HEAP32[$13 >> 2] | 0;
 $77 = $76 + $10 | 0;
 $78 = HEAP8[$77 >> 0] | 0;
 $83 = HEAP8[(HEAP32[$71 >> 2] | 0) + $68 >> 0] | 0;
 do if (!($78 & 16)) if (($83 & 255) < 60) return; else {
  HEAP8[$77 >> 0] = $78 & 255 | 16;
  $$pre = HEAP32[$13 >> 2] | 0;
  $90 = $$pre;
  $92 = HEAP8[$$pre + $10 >> 0] | 0;
  break;
 } else if (($83 & 255) < 8) return; else {
  $90 = $76;
  $92 = $78;
 } while (0);
 HEAP8[$90 + $10 >> 0] = $92 & 255 | 1;
 if (!(HEAP8[$this + 66932 + ($70 << 3) + 4 >> 0] | 0)) return;
 HEAP8[(HEAP32[$71 >> 2] | 0) + $68 >> 0] = 0;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE14moveEraseFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $0 = 0, $13 = 0, $15 = 0, $26 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $41 = 0, $42 = 0, $5 = 0, $51 = 0, $6 = 0, $i$02 = 0, $i$02$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 118680);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (((HEAP32[$this + 12 >> 2] | 0) - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 118680);
  _abort();
 }
 if (($index | 0) > 0) {
  $26 = $0;
  $i$02 = $6 + $index | 0;
  while (1) {
   $i$02$looptemp = $i$02;
   $i$02 = $i$02 + -1 | 0;
   HEAP32[$26 + ($i$02$looptemp * 40 | 0) >> 2] = HEAP32[$26 + ($i$02 * 40 | 0) >> 2];
   $29 = $26 + ($i$02$looptemp * 40 | 0) + 8 | 0;
   $30 = $26 + ($i$02 * 40 | 0) + 8 | 0;
   $31 = $26 + ($i$02$looptemp * 40 | 0) + 24 | 0;
   $32 = HEAP32[$31 >> 2] | 0;
   if (($32 | 0) == ($29 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 16 >> 2] & 255]($32); else if ($32 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 20 >> 2] & 255]($32);
   HEAP32[$31 >> 2] = 0;
   $41 = $26 + ($i$02 * 40 | 0) + 24 | 0;
   $42 = HEAP32[$41 >> 2] | 0;
   do if (!$42) HEAP32[$31 >> 2] = 0; else if (($42 | 0) == ($30 | 0)) {
    HEAP32[$31 >> 2] = $29;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$42 >> 2] | 0) + 12 >> 2] & 63]($42, $29);
    break;
   } else {
    HEAP32[$31 >> 2] = $42;
    HEAP32[$41 >> 2] = 0;
    break;
   } while (0);
   HEAP8[$26 + ($i$02$looptemp * 40 | 0) + 32 >> 0] = HEAP8[$26 + ($i$02 * 40 | 0) + 32 >> 0] | 0;
   $51 = HEAP32[$5 >> 2] | 0;
   $$pre = HEAP32[$this >> 2] | 0;
   if (($i$02 | 0) <= ($51 | 0)) {
    $$lcssa = $51;
    $13 = $$pre;
    break;
   } else $26 = $$pre;
  }
 } else {
  $$lcssa = $6;
  $13 = $0;
 }
 HEAP32[$5 >> 2] = $$lcssa + 1;
 $15 = HEAP32[$13 + ($$lcssa * 40 | 0) + 24 >> 2] | 0;
 if (($15 | 0) == ($13 + ($$lcssa * 40 | 0) + 8 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$15 >> 2] | 0) + 16 >> 2] & 255]($15);
  return;
 }
 if (!$15) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$15 >> 2] | 0) + 20 >> 2] & 255]($15);
 return;
}

function __ZN5ImGui9LogFinishEv() {
 var $$pre$phi5Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $10 = 0, $14 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $29 = 0, $3 = 0, $32 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $45 = 0, $48 = 0, $50 = 0, $56 = 0, $58 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = 157996;
 if (!(HEAP8[$0 >> 0] | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZN5ImGui7LogTextEPKcz(125213, sp);
 HEAP8[$0 >> 0] = 0;
 $3 = 158e3;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) {
  if (($4 | 0) == (HEAP32[3487] | 0)) _fflush($4) | 0; else _fclose($4) | 0;
  HEAP32[$3 >> 2] = 0;
 }
 $8 = 158004;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (($10 + -1 | 0) <= 1) {
  STACKTOP = sp;
  return;
 }
 $14 = HEAP32[36766] | 0;
 do if (!$14) $20 = $9; else if (($10 | 0) > 0) {
  FUNCTION_TABLE_vi[$14 & 255](HEAP32[$9 + 8 >> 2] | 0);
  $20 = HEAP32[$8 >> 2] | 0;
  break;
 } else ___assert_fail(127436, 127226, 814, 125215); while (0);
 $19 = $20 + 8 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 if (!$21) {
  $$pre$phi5Z2D = $20 + 4 | 0;
  $$pre$phiZ2D = $20;
 } else {
  $23 = $20 + 4 | 0;
  HEAP32[$23 >> 2] = 0;
  HEAP32[$20 >> 2] = 0;
  $24 = 147664;
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($21);
  HEAP32[$19 >> 2] = 0;
  $$pre$phi5Z2D = $23;
  $$pre$phiZ2D = $20;
 }
 $29 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if (($29 | 0) == (HEAP32[$$pre$phi5Z2D >> 2] | 0)) {
  $32 = $29 + 1 | 0;
  if (!$29) $37 = 8; else $37 = (($29 | 0) / 2 | 0) + $29 | 0;
  $38 = ($37 | 0) > ($32 | 0) ? $37 : $32;
  if (($29 | 0) < ($38 | 0)) {
   $40 = 147664;
   HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 1;
   $45 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($38) | 0;
   _memcpy($45 | 0, HEAP32[$19 >> 2] | 0, HEAP32[$$pre$phiZ2D >> 2] | 0) | 0;
   $48 = HEAP32[$19 >> 2] | 0;
   if ($48 | 0) {
    $50 = 147664;
    HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($48);
   HEAP32[$19 >> 2] = $45;
   HEAP32[$$pre$phi5Z2D >> 2] = $38;
   $56 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   $58 = $45;
  } else {
   $56 = $29;
   $58 = 0;
  }
 } else {
  $56 = $29;
  $58 = 0;
 }
 HEAP32[$$pre$phiZ2D >> 2] = $56 + 1;
 HEAP8[$58 + $56 >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glRenderer22applyDepthStencilStateERKNS_17DepthStencilStateE($this, $newState) {
 $this = $this | 0;
 $newState = $newState | 0;
 var $$lobit = 0, $10 = 0, $11 = 0, $18 = 0, $2 = 0, $20 = 0, $24 = 0, $25 = 0, $27 = 0, $3 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $depthStencilChanged$0$off0 = 0, $frontChanged$0$off0 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 856, 68182);
  _abort();
 }
 $2 = $this + 232 | 0;
 $3 = $this + 236 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $newState + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $8 = $6 & 65535;
 $9 = $4 & 65535;
 do if (($4 | 0) == ($6 | 0)) $depthStencilChanged$0$off0 = 0; else {
  $10 = $8 & 31;
  $11 = $10 & 65535;
  do if ($10 << 16 >> 16 == ($9 & 31)) {
   $18 = $8;
   $20 = $9;
  } else if (($10 & 65535) < 8) {
   _glDepthFunc(HEAP32[13016 + ($11 << 2) >> 2] | 0);
   $18 = HEAP16[$5 >> 1] | 0;
   $20 = HEAP16[$3 >> 1] | 0;
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(68270, 0, 66399, 865, 68182);
   _abort();
  } while (0);
  $$lobit = ($18 & 65535) >>> 5 & 1;
  if ($$lobit << 16 >> 16 == (($20 & 65535) >>> 5 & 1)) {
   $25 = $18;
   $27 = $20;
  } else {
   _glDepthMask($$lobit & 255 | 0);
   $25 = HEAP16[$5 >> 1] | 0;
   $27 = HEAP16[$3 >> 1] | 0;
  }
  $24 = $25 & 64;
  if (($24 & 65535) >>> 6 << 16 >> 16 == (($27 & 65535) >>> 6 & 1)) $depthStencilChanged$0$off0 = 1; else if (!($24 << 16 >> 16)) {
   _glDisable(2960);
   $depthStencilChanged$0$off0 = 1;
   break;
  } else {
   _glEnable(2960);
   $depthStencilChanged$0$off0 = 1;
   break;
  }
 } while (0);
 if ((HEAP16[$2 >> 1] | 0) == (HEAP16[$newState >> 1] | 0)) $frontChanged$0$off0 = 0; else {
  __ZN5Oryol5_priv10glRenderer17applyStencilStateERKNS_17DepthStencilStateES4_j($this, $newState, $2, 1028);
  $frontChanged$0$off0 = 1;
 }
 if ((HEAP16[$this + 234 >> 1] | 0) == (HEAP16[$newState + 2 >> 1] | 0)) {
  if (!($depthStencilChanged$0$off0 | $frontChanged$0$off0)) return;
 } else __ZN5Oryol5_priv10glRenderer17applyStencilStateERKNS_17DepthStencilStateES4_j($this, $newState, $2, 1029);
 $39 = $newState;
 $44 = HEAP32[$39 + 4 >> 2] | 0;
 $45 = $2;
 HEAP32[$45 >> 2] = HEAP32[$39 >> 2];
 HEAP32[$45 + 4 >> 2] = $44;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE13prepareInsertEiRb($this, $index, $outSlotConstructed) {
 $this = $this | 0;
 $index = $index | 0;
 $outSlotConstructed = $outSlotConstructed | 0;
 var $$1 = 0, $0 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0;
 HEAP8[$outSlotConstructed >> 0] = 1;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 if (($4 | 0) == ($index | 0)) {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   HEAP32[$0 >> 2] = $1 + 1;
   $$1 = (HEAP32[$this >> 2] | 0) + ($1 << 4) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 527, 113968);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 if (!$index) {
  if (($3 | 0) > 0) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   $16 = $3 + -1 | 0;
   HEAP32[$2 >> 2] = $16;
   $$1 = (HEAP32[$this >> 2] | 0) + ($16 << 4) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 543, 113968);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE14moveInsertBackEi($this, 0) | 0;
  return $$1 | 0;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  if (($3 | 0) > 0) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE15moveInsertFrontEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123198, 0, 123391, 557, 113968);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE14moveInsertBackEi($this, $index) | 0;
  return $$1 | 0;
 } else {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE14moveInsertBackEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123220, 0, 123391, 569, 113968);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 return 0;
}

function __ZN6SoLoud6SoloudD2Ev($this) {
 $this = $this | 0;
 var $$lcssa = 0, $0 = 0, $1 = 0, $13 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $23 = 0, $26 = 0, $29 = 0, $3 = 0, $35 = 0, $4 = 0, $41 = 0, $47 = 0, $53 = 0, $59 = 0, $65 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $i$12 = 0;
 __ZN6SoLoud6Soloud7stopAllEv($this);
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) FUNCTION_TABLE_vi[$1 & 255]($this);
 HEAP32[$0 >> 2] = 0;
 $3 = $this + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN6SoLoud6Thread12destroyMutexEPv($4);
 HEAP32[$3 >> 2] = 0;
 $7 = HEAP32[$this + 4280 >> 2] | 0;
 if ($7 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$7 >> 2] | 0) + 36 >> 2] & 255]($7);
 $13 = HEAP32[$this + 4284 >> 2] | 0;
 if ($13 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 36 >> 2] & 255]($13);
 $35 = HEAP32[$this + 4288 >> 2] | 0;
 if ($35 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] & 255]($35);
 $41 = HEAP32[$this + 4292 >> 2] | 0;
 if ($41 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$41 >> 2] | 0) + 36 >> 2] & 255]($41);
 $47 = HEAP32[$this + 4296 >> 2] | 0;
 if ($47 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$47 >> 2] | 0) + 36 >> 2] & 255]($47);
 $53 = HEAP32[$this + 4300 >> 2] | 0;
 if ($53 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$53 >> 2] | 0) + 36 >> 2] & 255]($53);
 $59 = HEAP32[$this + 4304 >> 2] | 0;
 if ($59 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$59 >> 2] | 0) + 36 >> 2] & 255]($59);
 $65 = HEAP32[$this + 4308 >> 2] | 0;
 if ($65 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$65 >> 2] | 0) + 36 >> 2] & 255]($65);
 $19 = $this + 105816 | 0;
 $70 = HEAP32[$19 >> 2] | 0;
 $20 = $this + 105812 | 0;
 $72 = HEAP32[$20 >> 2] | 0;
 if (!$70) $$lcssa = $72; else {
  $16 = $72;
  $74 = $70;
  $i$12 = 0;
  while (1) {
   $17 = HEAP32[$16 + ($i$12 << 2) >> 2] | 0;
   if (!$17) {
    $23 = $74;
    $73 = $16;
   } else {
    __ZdaPv($17);
    $23 = HEAP32[$19 >> 2] | 0;
    $73 = HEAP32[$20 >> 2] | 0;
   }
   $i$12 = $i$12 + 1 | 0;
   if ($i$12 >>> 0 >= $23 >>> 0) {
    $$lcssa = $73;
    break;
   } else {
    $16 = $73;
    $74 = $23;
   }
  }
 }
 if ($$lcssa | 0) __ZdaPv($$lcssa);
 $26 = HEAP32[$this + 40 >> 2] | 0;
 if ($26 | 0) __ZdaPv($26);
 $29 = HEAP32[$this + 24 >> 2] | 0;
 if (!$29) return;
 __ZdaPv($29);
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE13prepareInsertEiRb($this, $index, $outSlotConstructed) {
 $this = $this | 0;
 $index = $index | 0;
 $outSlotConstructed = $outSlotConstructed | 0;
 var $$1 = 0, $0 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0;
 HEAP8[$outSlotConstructed >> 0] = 1;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 if (($4 | 0) == ($index | 0)) {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   HEAP32[$0 >> 2] = $1 + 1;
   $$1 = (HEAP32[$this >> 2] | 0) + ($1 << 2) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 527, 122846);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 if (!$index) {
  if (($3 | 0) > 0) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   $16 = $3 + -1 | 0;
   HEAP32[$2 >> 2] = $16;
   $$1 = (HEAP32[$this >> 2] | 0) + ($16 << 2) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 543, 122846);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE14moveInsertBackEi($this, 0) | 0;
  return $$1 | 0;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  if (($3 | 0) > 0) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE15moveInsertFrontEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123198, 0, 123391, 557, 122846);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE14moveInsertBackEi($this, $index) | 0;
  return $$1 | 0;
 } else {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE14moveInsertBackEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123220, 0, 123391, 569, 122846);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 return 0;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE13moveEraseBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $0 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $4 = 0, $6 = 0, $9 = 0, $i$03 = 0, $i$03$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 109809);
  _abort();
 }
 $3 = $this + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$this + 8 >> 2] | 0;
 if (($4 - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 109809);
  _abort();
 }
 $9 = $6 + $index | 0;
 $10 = $4 + -1 | 0;
 if (($9 | 0) < ($10 | 0)) {
  $23 = $0;
  $i$03 = $9;
  while (1) {
   $22 = $23 + ($i$03 << 3) | 0;
   $i$03$looptemp = $i$03;
   $i$03 = $i$03 + 1 | 0;
   $25 = $23 + ($i$03 << 3) | 0;
   HEAP32[$22 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($22, $25);
   HEAP32[$25 >> 2] = 0;
   $26 = $23 + ($i$03 << 3) + 4 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   $28 = $23 + ($i$03$looptemp << 3) + 4 | 0;
   $29 = HEAP32[$28 >> 2] | 0;
   if (($27 | 0) != ($29 | 0)) {
    if ($29 | 0) {
     $35 = $29 + 4 | 0;
     $36 = HEAP32[$35 >> 2] | 0;
     HEAP32[$35 >> 2] = $36 - 1;
     if (($36 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$29 >> 2] >> 2] & 255]($29);
     HEAP32[$28 >> 2] = 0;
    }
    HEAP32[$28 >> 2] = $27;
    HEAP32[$26 >> 2] = 0;
   }
   $32 = (HEAP32[$3 >> 2] | 0) + -1 | 0;
   $$pre = HEAP32[$this >> 2] | 0;
   if (($i$03 | 0) >= ($32 | 0)) {
    $$lcssa = $32;
    $13 = $$pre;
    break;
   } else $23 = $$pre;
  }
 } else {
  $$lcssa = $10;
  $13 = $0;
 }
 HEAP32[$3 >> 2] = $$lcssa;
 $12 = $13 + ($$lcssa << 3) + 4 | 0;
 $14 = HEAP32[$12 >> 2] | 0;
 if (!$14) {
  $21 = $13 + ($$lcssa << 3) | 0;
  HEAP32[$21 >> 2] = 0;
  return;
 }
 $16 = $14 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = $17 - 1;
 if (($17 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$14 >> 2] >> 2] & 255]($14);
 HEAP32[$12 >> 2] = 0;
 $21 = $13 + ($$lcssa << 3) | 0;
 HEAP32[$21 >> 2] = 0;
 return;
}

function __ZL25stbrp__skyline_find_min_yP13stbrp_contextP10stbrp_nodeiiPi($first, $x0, $width, $pwaste) {
 $first = $first | 0;
 $x0 = $x0 | 0;
 $width = $width | 0;
 $pwaste = $pwaste | 0;
 var $$ = 0, $$pn = 0, $0 = 0, $12 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $37 = 0, $39 = 0, $min_y$0$lcssa = 0, $min_y$02 = 0, $min_y$1 = 0, $node$01 = 0, $visited_width$03 = 0, $waste_area$0$lcssa = 0, $waste_area$04 = 0, $waste_area$1 = 0;
 $0 = $width + $x0 | 0;
 $2 = HEAPU16[$first >> 1] | 0;
 if (($2 | 0) > ($x0 | 0)) ___assert_fail(140212, 140089, 277, 140227);
 if ((HEAPU16[HEAP32[$first + 4 >> 2] >> 1] | 0 | 0) <= ($x0 | 0)) ___assert_fail(140253, 140089, 284, 140227);
 if (($2 | 0) < ($0 | 0)) {
  $18 = $2;
  $min_y$02 = 0;
  $node$01 = $first;
  $visited_width$03 = 0;
  $waste_area$04 = 0;
 } else {
  $min_y$0$lcssa = 0;
  $waste_area$0$lcssa = 0;
  HEAP32[$pwaste >> 2] = $waste_area$0$lcssa;
  return $min_y$0$lcssa | 0;
 }
 while (1) {
  $12 = HEAPU16[$node$01 + 2 >> 1] | 0;
  do if (($12 | 0) > ($min_y$02 | 0)) {
   $16 = (Math_imul($12 - $min_y$02 | 0, $visited_width$03) | 0) + $waste_area$04 | 0;
   $20 = HEAP32[$node$01 + 4 >> 2] | 0;
   $21 = HEAP16[$20 >> 1] | 0;
   $22 = $21 & 65535;
   if (($18 | 0) < ($x0 | 0)) {
    $$pn = $22 - $x0 | 0;
    $37 = $21;
    $39 = $20;
    $min_y$1 = $12;
    $waste_area$1 = $16;
    break;
   } else {
    $$pn = $22 - $18 | 0;
    $37 = $21;
    $39 = $20;
    $min_y$1 = $12;
    $waste_area$1 = $16;
    break;
   }
  } else {
   $26 = HEAP32[$node$01 + 4 >> 2] | 0;
   $27 = HEAP16[$26 >> 1] | 0;
   $29 = ($27 & 65535) - $18 | 0;
   $$ = ($29 + $visited_width$03 | 0) > ($width | 0) ? $width - $visited_width$03 | 0 : $29;
   $$pn = $$;
   $37 = $27;
   $39 = $26;
   $min_y$1 = $min_y$02;
   $waste_area$1 = (Math_imul($$, $min_y$02 - $12 | 0) | 0) + $waste_area$04 | 0;
  } while (0);
  $18 = $37 & 65535;
  if (($18 | 0) >= ($0 | 0)) {
   $min_y$0$lcssa = $min_y$1;
   $waste_area$0$lcssa = $waste_area$1;
   break;
  } else {
   $min_y$02 = $min_y$1;
   $node$01 = $39;
   $visited_width$03 = $$pn + $visited_width$03 | 0;
   $waste_area$04 = $waste_area$1;
  }
 }
 HEAP32[$pwaste >> 2] = $waste_area$0$lcssa;
 return $min_y$0$lcssa | 0;
}

function __ZN5Oryol5_priv14schemeRegistry18RegisterFileSystemERKNS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEE($this, $scheme, $fsCreator) {
 $this = $this | 0;
 $scheme = $scheme | 0;
 $fsCreator = $fsCreator | 0;
 var $$pre$phi$iZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $2 = 0, $21 = 0, $22 = 0, $31 = 0, $36 = 0, $37 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 do {
  $1 = HEAP8[$this >> 0] | 0;
  HEAP8[$this >> 0] = 1;
 } while (($1 & 1) != 0);
 $2 = $this + 4 | 0;
 do {} while ((HEAP32[$2 >> 2] | 0) > 0);
 $5 = $this + 8 | 0;
 if (__ZNK5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEE8ContainsERKS1_($5, $scheme) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(102956, 0, 102989, 26, 103055);
  _abort();
 }
 __ZN5Oryol10StringAtom4copyERKS0_($0, $scheme);
 $7 = $0 + 8 | 0;
 $9 = HEAP32[$fsCreator + 16 >> 2] | 0;
 do if (!$9) {
  $11 = $0 + 24 | 0;
  HEAP32[$11 >> 2] = 0;
  $$pre$phi$iZ2D = $11;
 } else if (($9 | 0) == ($fsCreator | 0)) {
  $13 = $0 + 24 | 0;
  HEAP32[$13 >> 2] = $7;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] & 63]($9, $7);
  $$pre$phi$iZ2D = $13;
  break;
 } else {
  $21 = $0 + 24 | 0;
  HEAP32[$21 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 8 >> 2] & 63]($9) | 0;
  $$pre$phi$iZ2D = $21;
  break;
 } while (0);
 __ZN5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEE3AddEONS_12KeyValuePairIS1_S8_EE($5, $0);
 $22 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
 if (($22 | 0) == ($7 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$7 >> 2] | 0) + 16 >> 2] & 255]($7); else if ($22 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$22 >> 2] | 0) + 20 >> 2] & 255]($22);
 HEAP8[$this >> 0] = 0;
 $31 = __ZNK5Oryol5_priv14schemeRegistry16CreateFileSystemERKNS_10StringAtomE($this, $scheme) | 0;
 if (!$31) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103523);
  _abort();
 }
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$31 >> 2] | 0) + 12 >> 2] & 63]($31, $scheme);
 $36 = $31 + 4 | 0;
 $37 = HEAP32[$36 >> 2] | 0;
 HEAP32[$36 >> 2] = $37 - 1;
 if (($37 | 0) != 1) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[HEAP32[$31 >> 2] >> 2] & 255]($31);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE13moveEraseBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$lcssa6 = 0, $$pre = 0, $0 = 0, $10 = 0, $13 = 0, $16 = 0, $19 = 0, $21 = 0, $3 = 0, $32 = 0, $4 = 0, $41 = 0, $42 = 0, $44 = 0, $45 = 0, $50 = 0, $54 = 0, $6 = 0, $9 = 0, $50$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 104472);
  _abort();
 }
 $3 = $this + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$this + 8 >> 2] | 0;
 if (($4 - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 104472);
  _abort();
 }
 $9 = $6 + $index | 0;
 $10 = $4 + -1 | 0;
 if (($9 | 0) < ($10 | 0)) {
  $13 = $9 + 1 | 0;
  __ZN5Oryol9loadQueue4itemaSEOS1_($0 + ($9 * 56 | 0) | 0, $0 + ($13 * 56 | 0) | 0) | 0;
  $16 = (HEAP32[$3 >> 2] | 0) + -1 | 0;
  if (($13 | 0) < ($16 | 0)) {
   $50 = $13;
   do {
    $$pre = HEAP32[$this >> 2] | 0;
    $50$looptemp = $50;
    $50 = $50 + 1 | 0;
    __ZN5Oryol9loadQueue4itemaSEOS1_($$pre + ($50$looptemp * 56 | 0) | 0, $$pre + ($50 * 56 | 0) | 0) | 0;
    $54 = (HEAP32[$3 >> 2] | 0) + -1 | 0;
   } while (($50 | 0) < ($54 | 0));
   $$lcssa6 = $54;
  } else $$lcssa6 = $16;
  $$lcssa = $$lcssa6;
  $19 = HEAP32[$this >> 2] | 0;
 } else {
  $$lcssa = $10;
  $19 = $0;
 }
 HEAP32[$3 >> 2] = $$lcssa;
 $21 = HEAP32[$19 + ($$lcssa * 56 | 0) + 48 >> 2] | 0;
 if (($21 | 0) == ($19 + ($$lcssa * 56 | 0) + 32 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 16 >> 2] & 255]($21); else if ($21 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 20 >> 2] & 255]($21);
 $32 = HEAP32[$19 + ($$lcssa * 56 | 0) + 24 >> 2] | 0;
 if (($32 | 0) == ($19 + ($$lcssa * 56 | 0) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 16 >> 2] & 255]($32); else if ($32 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$32 >> 2] | 0) + 20 >> 2] & 255]($32);
 $41 = $19 + ($$lcssa * 56 | 0) | 0;
 $42 = HEAP32[$41 >> 2] | 0;
 if (!$42) return;
 $44 = $42 + 4 | 0;
 $45 = HEAP32[$44 >> 2] | 0;
 HEAP32[$44 >> 2] = $45 - 1;
 if (($45 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$42 >> 2] >> 2] & 255]($42);
 HEAP32[$41 >> 2] = 0;
 return;
}

function __ZN5Oryol7RunLoop3AddENSt3__18functionIFvvEEE($this, $func) {
 $this = $this | 0;
 $func = $func | 0;
 var $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $3 = 0, $33 = 0, $36 = 0, $4 = 0, $45 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $0 = sp + 32 | 0;
 $1 = sp;
 $3 = (HEAP32[$this >> 2] | 0) + 1 | 0;
 HEAP32[$this >> 2] = $3;
 $4 = $this + 32 | 0;
 $6 = HEAP32[$func + 16 >> 2] | 0;
 do if (!$6) {
  $8 = $1 + 16 | 0;
  HEAP32[$8 >> 2] = 0;
  $$pre$phiZ2D = $8;
  $22 = 0;
 } else if (($6 | 0) == ($func | 0)) {
  $10 = $1 + 16 | 0;
  HEAP32[$10 >> 2] = $1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$6 >> 2] | 0) + 12 >> 2] & 63]($6, $1);
  $$pre$phiZ2D = $10;
  $22 = HEAP32[$10 >> 2] | 0;
  break;
 } else {
  $17 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 8 >> 2] & 63]($6) | 0;
  $18 = $1 + 16 | 0;
  HEAP32[$18 >> 2] = $17;
  $$pre$phiZ2D = $18;
  $22 = $17;
  break;
 } while (0);
 $19 = $1 + 24 | 0;
 HEAP8[$19 >> 0] = 0;
 HEAP32[$0 >> 2] = $3;
 $20 = $0 + 8 | 0;
 do if (!$22) {
  $23 = $0 + 24 | 0;
  HEAP32[$23 >> 2] = 0;
  $$pre$phi$iZ2D = $23;
 } else if (($22 | 0) == ($1 | 0)) {
  $25 = $0 + 24 | 0;
  HEAP32[$25 >> 2] = $20;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($1, $20);
  $$pre$phi$iZ2D = $25;
  break;
 } else {
  $33 = $0 + 24 | 0;
  HEAP32[$33 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$22 >> 2] | 0) + 8 >> 2] & 63]($22) | 0;
  $$pre$phi$iZ2D = $33;
  break;
 } while (0);
 HEAP8[$0 + 32 >> 0] = HEAP8[$19 >> 0] | 0;
 __ZN5Oryol3MapIiNS_7RunLoop4itemEE3AddEONS_12KeyValuePairIiS2_EE($4, $0);
 $36 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
 if (($36 | 0) == ($20 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$20 >> 2] | 0) + 16 >> 2] & 255]($20); else if ($36 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$36 >> 2] | 0) + 20 >> 2] & 255]($36);
 $45 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if (($45 | 0) == ($1 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 255]($1);
  STACKTOP = sp;
  return $3 | 0;
 }
 if (!$45) {
  STACKTOP = sp;
  return $3 | 0;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$45 >> 2] | 0) + 20 >> 2] & 255]($45);
 STACKTOP = sp;
 return $3 | 0;
}

function __ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEEclEOSE_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $0 = 0, $1 = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $30 = 0, $34 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $0 = sp + 56 | 0;
 $1 = sp;
 __ZN5Oryol3URLC2Ev($1);
 $2 = $1 + 40 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $1 + 44 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = $1 + 48 | 0;
 HEAP32[$4 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($1, $__arg);
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 | 0) __ZN5Oryol6Memory4FreeEPv($5);
 $7 = $__arg + 40 | 0;
 HEAP32[$2 >> 2] = HEAP32[$7 >> 2];
 $9 = $__arg + 44 | 0;
 HEAP32[$3 >> 2] = HEAP32[$9 >> 2];
 $11 = $__arg + 48 | 0;
 HEAP32[$4 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$7 >> 2] = 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$11 >> 2] = 0;
 $14 = HEAP32[$this + 4 >> 2] | 0;
 $15 = $14 + 96 | 0;
 $16 = $14 + 104 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if ($17 | 0) __ZN5Oryol6Memory4FreeEPv($17);
 HEAP32[$16 >> 2] = 0;
 HEAP32[$15 >> 2] = 0;
 $19 = $14 + 100 | 0;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$15 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$19 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$16 >> 2] = HEAP32[$4 >> 2];
 HEAP32[$2 >> 2] = 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 $23 = $14 + 28 | 0;
 __ZN10FileLoader11parseHeaderERKN5Oryol6BufferE($0, $15);
 __ZN5Oryol6StringaSEOS0_($23, $0);
 $24 = $14 + 36 | 0;
 $25 = $0 + 8 | 0;
 HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
 HEAP32[$24 + 4 >> 2] = HEAP32[$25 + 4 >> 2];
 HEAP32[$24 + 8 >> 2] = HEAP32[$25 + 8 >> 2];
 HEAP32[$24 + 12 >> 2] = HEAP32[$25 + 12 >> 2];
 __ZN5Oryol6StringD2Ev($0);
 HEAP32[$14 + 24 >> 2] = 2;
 if (HEAP8[$this + 12 >> 0] | 0) {
  $30 = $this + 8 | 0;
  __ZN10FileLoader4copyEPN4yakc4kc85ERKNS_8FileInfoERKN5Oryol6BufferE(HEAP32[$30 >> 2] | 0, $23, $15);
  __ZN10FileLoader5patchEPN4yakc4kc85ERKNS_8FileInfoE(HEAP32[$30 >> 2] | 0, $23);
  __ZN10FileLoader5startEPN4yakc4kc85ERKNS_8FileInfoE(HEAP32[$30 >> 2] | 0, $23);
 }
 $34 = HEAP32[$4 >> 2] | 0;
 if (!$34) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($34);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE14moveInsertBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $13 = 0, $18 = 0, $19 = 0, $2 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $34 = 0, $9 = 0, $i$0 = 0, $i$0$in2 = 0, $i$0$in2$phi = 0, $i$01 = 0, $i$03 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 19192);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 19192);
  _abort();
 }
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 19192);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 19192);
  _abort();
 }
 $9 = $this + 8 | 0;
 if (($3 - (HEAP32[$9 >> 2] | 0) | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 19192);
  _abort();
 }
 $13 = $3 + -1 | 0;
 __ZN5Oryol6StringC2EOS0_($0 + ($3 << 4) | 0, $0 + ($13 << 4) | 0);
 __ZN5Oryol6StringC2EOS0_($0 + ($3 << 4) + 8 | 0, $0 + ($13 << 4) + 8 | 0);
 $18 = HEAP32[$2 >> 2] | 0;
 $i$01 = $18 + -1 | 0;
 $19 = HEAP32[$9 >> 2] | 0;
 if (($i$01 | 0) > ($19 + $index | 0)) {
  $i$0$in2 = $18;
  $i$03 = $i$01;
 } else {
  $23 = $18;
  $25 = $19;
  $22 = $23 + 1 | 0;
  HEAP32[$2 >> 2] = $22;
  $24 = $25 + $index | 0;
  $26 = HEAP32[$this >> 2] | 0;
  $27 = $26 + ($24 << 4) | 0;
  return $27 | 0;
 }
 while (1) {
  $28 = HEAP32[$this >> 2] | 0;
  $29 = $i$0$in2 + -2 | 0;
  __ZN5Oryol6StringaSEOS0_($28 + ($i$03 << 4) | 0, $28 + ($29 << 4) | 0);
  __ZN5Oryol6StringaSEOS0_($28 + ($i$03 << 4) + 8 | 0, $28 + ($29 << 4) + 8 | 0);
  $i$0 = $i$03 + -1 | 0;
  $34 = HEAP32[$9 >> 2] | 0;
  if (($i$0 | 0) > ($34 + $index | 0)) {
   $i$0$in2$phi = $i$03;
   $i$03 = $i$0;
   $i$0$in2 = $i$0$in2$phi;
  } else {
   $$lcssa = $34;
   break;
  }
 }
 $23 = HEAP32[$2 >> 2] | 0;
 $25 = $$lcssa;
 $22 = $23 + 1 | 0;
 HEAP32[$2 >> 2] = $22;
 $24 = $25 + $index | 0;
 $26 = HEAP32[$this >> 2] | 0;
 $27 = $26 + ($24 << 4) | 0;
 return $27 | 0;
}

function __ZN5ImGui13EndChildFrameEv() {
 var $$0$i$ph$i = 0, $$0$i1$ph$i = 0, $$pre$i = 0, $$pre$i1 = 0, $0 = 0, $14 = 0, $15 = 0, $21 = 0, $26 = 0, $27 = 0, $31 = 0, $34 = 0, $37 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, label = 0;
 __ZN5ImGui8EndChildEv();
 $0 = 152892;
 $$pre$i = HEAP32[$0 >> 2] | 0;
 if (($$pre$i | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $14 = $$pre$i + -1 | 0;
 $15 = HEAP32[38225] | 0;
 switch (HEAP32[$15 + ($14 * 12 | 0) >> 2] | 0) {
 case 0:
  {
   $$0$i$ph$i = 151936;
   label = 9;
   break;
  }
 case 2:
  {
   $$0$i$ph$i = 151956;
   label = 9;
   break;
  }
 case 4:
  {
   $$0$i$ph$i = 151964;
   label = 9;
   break;
  }
 case 6:
  {
   $$0$i$ph$i = 151976;
   label = 9;
   break;
  }
 case 9:
  {
   $$0$i$ph$i = 152008;
   label = 9;
   break;
  }
 case 10:
  {
   $$0$i$ph$i = 152024;
   label = 9;
   break;
  }
 case 1:
  {
   $$0$i1$ph$i = 151940;
   label = 14;
   break;
  }
 case 3:
  {
   $$0$i1$ph$i = 151948;
   label = 14;
   break;
  }
 case 5:
  {
   $$0$i1$ph$i = 151968;
   label = 14;
   break;
  }
 case 7:
  {
   $$0$i1$ph$i = 151980;
   label = 14;
   break;
  }
 case 8:
  {
   $$0$i1$ph$i = 151988;
   label = 14;
   break;
  }
 default:
  {}
 }
 if ((label | 0) == 9) HEAP32[$$0$i$ph$i >> 2] = HEAP32[$15 + ($14 * 12 | 0) + 4 >> 2]; else if ((label | 0) == 14) {
  $21 = $15 + ($14 * 12 | 0) + 4 | 0;
  $26 = HEAP32[$21 + 4 >> 2] | 0;
  $27 = $$0$i1$ph$i;
  HEAP32[$27 >> 2] = HEAP32[$21 >> 2];
  HEAP32[$27 + 4 >> 2] = $26;
 }
 $31 = HEAP32[$0 >> 2] | 0;
 if (($31 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 HEAP32[$0 >> 2] = $31 + -1;
 $34 = 152880;
 $$pre$i1 = HEAP32[$34 >> 2] | 0;
 if (($$pre$i1 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $37 = $$pre$i1 + -1 | 0;
 $38 = HEAP32[38222] | 0;
 $41 = 152056 + (HEAP32[$38 + ($37 * 20 | 0) >> 2] << 4) | 0;
 $42 = $38 + ($37 * 20 | 0) + 4 | 0;
 HEAP32[$41 >> 2] = HEAP32[$42 >> 2];
 HEAP32[$41 + 4 >> 2] = HEAP32[$42 + 4 >> 2];
 HEAP32[$41 + 8 >> 2] = HEAP32[$42 + 8 >> 2];
 HEAP32[$41 + 12 >> 2] = HEAP32[$42 + 12 >> 2];
 $43 = HEAP32[$34 >> 2] | 0;
 if (($43 | 0) > 0) {
  HEAP32[$34 >> 2] = $43 + -1;
  return;
 } else ___assert_fail(127436, 127226, 833, 125180);
}

function __ZN5ImGui3EndEv() {
 var $1 = 0, $11 = 0, $13 = 0, $17 = 0, $19 = 0, $21 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $37 = 0, $38 = 0, $5 = 0, $7 = 0, $78 = 0, $9 = 0;
 $1 = HEAP32[38201] | 0;
 __ZN5ImGui7ColumnsEiPKcb(1, 125139, 1);
 $3 = HEAP32[38201] | 0;
 HEAP8[$3 + 114 >> 0] = 1;
 $5 = $3 + 572 | 0;
 __ZN10ImDrawList11PopClipRectEv(HEAP32[$5 >> 2] | 0);
 $7 = HEAP32[$5 >> 2] | 0;
 $9 = HEAP32[$7 + 52 >> 2] | 0;
 if (($9 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $11 = $9 + -1 | 0;
 $13 = HEAP32[$7 + 60 >> 2] | 0;
 $17 = HEAP32[$13 + ($11 << 4) + 4 >> 2] | 0;
 $19 = HEAP32[$13 + ($11 << 4) + 8 >> 2] | 0;
 $21 = HEAP32[$13 + ($11 << 4) + 12 >> 2] | 0;
 HEAP32[$3 + 436 >> 2] = HEAP32[$13 + ($11 << 4) >> 2];
 HEAP32[$3 + 440 >> 2] = $17;
 HEAP32[$3 + 444 >> 2] = $19;
 HEAP32[$3 + 448 >> 2] = $21;
 $26 = $1 + 8 | 0;
 if (!(HEAP32[$26 >> 2] & 1048576)) __ZN5ImGui9LogFinishEv();
 $30 = 152808;
 $31 = HEAP32[$30 >> 2] | 0;
 if (($31 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 $33 = $31 + -1 | 0;
 HEAP32[$30 >> 2] = $33;
 do if (HEAP32[$26 >> 2] & 33554432 | 0) {
  $37 = 152928;
  $38 = HEAP32[$37 >> 2] | 0;
  if (($38 | 0) > 0) {
   HEAP32[$37 >> 2] = $38 + -1;
   break;
  } else ___assert_fail(127436, 127226, 833, 125180);
 } while (0);
 if ((HEAP32[$1 + 344 >> 2] | 0) != (HEAP32[$1 + 424 >> 2] | 0)) ___assert_fail(125221, 124187, 3425, 125242);
 if ((HEAP32[$1 + 348 >> 2] | 0) != (HEAP32[$1 + 328 >> 2] | 0)) ___assert_fail(125221, 124187, 3426, 125242);
 if ((HEAP32[$1 + 352 >> 2] | 0) != (HEAP32[38232] | 0)) ___assert_fail(125221, 124187, 3427, 125242);
 if ((HEAP32[$1 + 356 >> 2] | 0) != (HEAP32[38220] | 0)) ___assert_fail(125221, 124187, 3428, 125242);
 if ((HEAP32[$1 + 360 >> 2] | 0) != (HEAP32[38223] | 0)) ___assert_fail(125221, 124187, 3429, 125242);
 if ((HEAP32[$1 + 364 >> 2] | 0) != (HEAP32[38226] | 0)) ___assert_fail(125221, 124187, 3430, 125242);
 if (!$33) {
  HEAP32[38201] = 0;
  return;
 }
 if (($31 | 0) <= 1) ___assert_fail(127436, 127226, 815, 127445);
 $78 = HEAP32[(HEAP32[38204] | 0) + ($31 + -2 << 2) >> 2] | 0;
 HEAP32[38201] = $78;
 if (!$78) return;
 HEAPF32[38187] = +HEAPF32[38188] * +HEAPF32[$78 + 568 >> 2];
 return;
}

function __ZN5ImGui10BeginGroupEv() {
 var $1 = 0, $14 = 0, $15 = 0, $18 = 0, $23 = 0, $24 = 0, $28 = 0, $3 = 0, $30 = 0, $37 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $5 = 0, $50 = 0, $51 = 0, $56 = 0, $57 = 0, $6 = 0, $61 = 0, $64 = 0, $7 = 0, $70 = 0, $78 = 0, $8 = 0, $83 = 0, $84 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $3 = $1 + 164 | 0;
 $4 = $1 + 328 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $5 + 1 | 0;
 $7 = $1 + 332 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if (($8 | 0) <= ($5 | 0)) {
  if (!$8) $14 = 8; else $14 = (($8 | 0) / 2 | 0) + $8 | 0;
  $15 = ($14 | 0) > ($6 | 0) ? $14 : $6;
  if (($8 | 0) < ($15 | 0)) {
   $18 = 147664;
   HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
   $23 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($15 * 36 | 0) | 0;
   $24 = $1 + 336 | 0;
   _memcpy($23 | 0, HEAP32[$24 >> 2] | 0, (HEAP32[$4 >> 2] | 0) * 36 | 0) | 0;
   $28 = HEAP32[$24 >> 2] | 0;
   if ($28 | 0) {
    $30 = 147664;
    HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($28);
   HEAP32[$24 >> 2] = $23;
   HEAP32[$7 >> 2] = $15;
  }
 }
 HEAP32[$4 >> 2] = $6;
 if (($5 | 0) > -1) {
  $37 = HEAP32[$1 + 336 >> 2] | 0;
  $39 = $3;
  $44 = HEAP32[$39 + 4 >> 2] | 0;
  $45 = $37 + ($5 * 36 | 0) | 0;
  HEAP32[$45 >> 2] = HEAP32[$39 >> 2];
  HEAP32[$45 + 4 >> 2] = $44;
  $50 = $1 + 188 | 0;
  $51 = $50;
  $56 = HEAP32[$51 + 4 >> 2] | 0;
  $57 = $37 + ($5 * 36 | 0) + 8 | 0;
  HEAP32[$57 >> 2] = HEAP32[$51 >> 2];
  HEAP32[$57 + 4 >> 2] = $56;
  $61 = $1 + 368 | 0;
  HEAP32[$37 + ($5 * 36 | 0) + 16 >> 2] = HEAP32[$61 >> 2];
  $64 = $1 + 196 | 0;
  HEAP32[$37 + ($5 * 36 | 0) + 20 >> 2] = HEAP32[$64 >> 2];
  HEAP32[$37 + ($5 * 36 | 0) + 24 >> 2] = HEAP32[$1 + 200 >> 2];
  $70 = $1 + 212 | 0;
  HEAP32[$37 + ($5 * 36 | 0) + 28 >> 2] = HEAP32[$70 >> 2];
  HEAP8[$37 + ($5 * 36 | 0) + 32 >> 0] = 1;
  HEAPF32[$61 >> 2] = +HEAPF32[$3 >> 2] - +HEAPF32[$1 + 20 >> 2];
  $78 = $3;
  $83 = HEAP32[$78 + 4 >> 2] | 0;
  $84 = $50;
  HEAP32[$84 >> 2] = HEAP32[$78 >> 2];
  HEAP32[$84 + 4 >> 2] = $83;
  HEAPF32[$64 >> 2] = 0.0;
  HEAPF32[$70 >> 2] = +HEAPF32[$1 + 168 >> 2] + -9999.0;
  return;
 } else ___assert_fail(127436, 127226, 815, 127445);
}

function _main($argc, $argv) {
 $argc = $argc | 0;
 $argv = $argv | 0;
 var $$pre4$i$i$i$i = 0, $$pre5$i$i2$pre$phi$i$iZZZZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $18 = 0, $20 = 0, $21 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $35 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 __ZN5Oryol4ArgsC2EiPPKc($0, $argc, $argv);
 HEAP32[26] = 0;
 HEAP32[27] = 0;
 $1 = HEAP32[22] | 0;
 if ($1 | 0) {
  $3 = HEAP32[24] | 0;
  if (($3 | 0) < (HEAP32[25] | 0)) {
   __ZN5Oryol6StringD2Ev($1 + ($3 << 3) | 0);
   $7 = $3 + 1 | 0;
   if (($7 | 0) < (HEAP32[25] | 0)) {
    $12 = $7;
    do {
     __ZN5Oryol6StringD2Ev((HEAP32[22] | 0) + ($12 << 3) | 0);
     $12 = $12 + 1 | 0;
    } while (($12 | 0) < (HEAP32[25] | 0));
   }
   $10 = HEAP32[22] | 0;
  } else $10 = $1;
  __ZN5Oryol6Memory4FreeEPv($10);
 };
 HEAP32[22] = 0;
 HEAP32[23] = 0;
 HEAP32[24] = 0;
 HEAP32[25] = 0;
 __ZN5Oryol5ArrayINS_6StringEE4moveEOS2_(88, $0);
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 $18 = HEAP32[$0 >> 2] | 0;
 $$pre4$i$i$i$i = $0 + 8 | 0;
 if (!$18) $$pre5$i$i2$pre$phi$i$iZZZZ2D = $0 + 12 | 0; else {
  $20 = HEAP32[$$pre4$i$i$i$i >> 2] | 0;
  $21 = $0 + 12 | 0;
  if (($20 | 0) < (HEAP32[$21 >> 2] | 0)) {
   __ZN5Oryol6StringD2Ev($18 + ($20 << 3) | 0);
   $25 = $20 + 1 | 0;
   if (($25 | 0) < (HEAP32[$21 >> 2] | 0)) {
    $30 = $25;
    do {
     __ZN5Oryol6StringD2Ev((HEAP32[$0 >> 2] | 0) + ($30 << 3) | 0);
     $30 = $30 + 1 | 0;
    } while (($30 | 0) < (HEAP32[$21 >> 2] | 0));
   }
   $28 = HEAP32[$0 >> 2] | 0;
  } else $28 = $18;
  __ZN5Oryol6Memory4FreeEPv($28);
  $$pre5$i$i2$pre$phi$i$iZZZZ2D = $21;
 }
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$$pre4$i$i$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
 $35 = __ZN5Oryol6Memory5AllocEi(1904160) | 0;
 _memset($35 | 0, 0, 1904160) | 0;
 __ZN7YakcAppC2Ev($35);
 __ZN5Oryol3App13StartMainLoopEv($35);
 HEAP32[$35 >> 2] = 272;
 __ZN2UID2Ev($35 + 853056 | 0);
 __ZN6SoLoud11AudioSourceD2Ev($35 + 836504 | 0);
 __ZN6SoLoud20BiquadResonantFilterD2Ev($35 + 836480 | 0);
 __ZN6SoLoud6SoloudD2Ev($35 + 726552 | 0);
 __ZN5Oryol3AppD2Ev($35);
 __ZN5Oryol6Memory4FreeEPv($35);
 STACKTOP = sp;
 return 0;
}

function __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE13prepareInsertEiRb($this, $index, $outSlotConstructed) {
 $this = $this | 0;
 $index = $index | 0;
 $outSlotConstructed = $outSlotConstructed | 0;
 var $$1 = 0, $0 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0;
 HEAP8[$outSlotConstructed >> 0] = 1;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 if (($4 | 0) == ($index | 0)) {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   HEAP32[$0 >> 2] = $1 + 1;
   $$1 = (HEAP32[$this >> 2] | 0) + ($1 << 2) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 527, 116598);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 if (!$index) {
  if (($3 | 0) > 0) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   $16 = $3 + -1 | 0;
   HEAP32[$2 >> 2] = $16;
   $$1 = (HEAP32[$this >> 2] | 0) + ($16 << 2) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 543, 116598);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE14moveInsertBackEi($this, 0) | 0;
  return $$1 | 0;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  if (($3 | 0) > 0) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE15moveInsertFrontEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123198, 0, 123391, 557, 116598);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE14moveInsertBackEi($this, $index) | 0;
  return $$1 | 0;
 } else {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   $$1 = __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE14moveInsertBackEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123220, 0, 123391, 569, 116598);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 return 0;
}

function __ZN10FileLoader5startEPN4yakc4kc85ERKNS_8FileInfoE($kc, $info) {
 $kc = $kc | 0;
 $info = $info | 0;
 var $10 = 0, $11 = 0, $13 = 0, $22 = 0, $3 = 0, $31 = 0, $36 = 0, $37 = 0, $45 = 0, $47 = 0, $56 = 0, $61 = 0, $62 = 0, $70 = 0, $72 = 0, $9 = 0, $indvars$iv = 0;
 if (!(HEAP8[$info + 14 >> 0] | 0)) return;
 $3 = $kc + 65626 | 0;
 HEAP8[$3 + 1 >> 0] = 0;
 HEAP8[$3 >> 0] = 16;
 HEAP16[$kc + 65620 >> 1] = 0;
 HEAP16[$kc + 65622 >> 1] = 0;
 HEAP16[$kc + 65624 >> 1] = 0;
 $9 = $kc + 65632 | 0;
 $10 = $kc + 65634 | 0;
 $11 = $10;
 HEAP16[$11 >> 1] = 0;
 HEAP16[$11 + 2 >> 1] = 0 >>> 16;
 $13 = $10 + 4 | 0;
 HEAP16[$13 >> 1] = 0;
 HEAP16[$13 + 2 >> 1] = 0 >>> 16;
 HEAP16[$9 >> 1] = 450;
 $indvars$iv = 45568;
 do {
  $22 = $indvars$iv >>> 11;
  if (HEAP8[$kc + 66932 + ($22 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$kc + 66932 + ($22 << 3) >> 2] | 0) + ($indvars$iv & 2047) >> 0] = 0;
  $indvars$iv = $indvars$iv + 1 | 0;
 } while (($indvars$iv | 0) != 46848);
 if (HEAP8[$kc + 67112 >> 0] | 0) HEAP8[(HEAP32[$kc + 67108 >> 2] | 0) + 1952 >> 0] = 0;
 switch (HEAP32[$kc + 725496 >> 2] | 0) {
 case 2:
  {
   $31 = HEAP32[$kc + 69240 >> 2] | 0;
   if ($31 | 0) FUNCTION_TABLE_viii[$31 & 7](HEAP32[$kc + 69244 >> 2] | 0, 137, -97);
   $36 = HEAPU16[$9 >> 1] | 0;
   $37 = $36 >>> 11;
   if (HEAP8[$kc + 66932 + ($37 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$kc + 66932 + ($37 << 3) >> 2] | 0) + ($36 & 2047) >> 0] = 92;
   $45 = $36 + 1 | 0;
   $47 = $45 >>> 11 & 31;
   if (HEAP8[$kc + 66932 + ($47 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$kc + 66932 + ($47 << 3) >> 2] | 0) + ($45 & 2047) >> 0] = -15;
   break;
  }
 case 4:
  {
   $56 = HEAP32[$kc + 69240 >> 2] | 0;
   if ($56 | 0) FUNCTION_TABLE_viii[$56 & 7](HEAP32[$kc + 69244 >> 2] | 0, 137, -1);
   $61 = HEAPU16[$9 >> 1] | 0;
   $62 = $61 >>> 11;
   if (HEAP8[$kc + 66932 + ($62 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$kc + 66932 + ($62 << 3) >> 2] | 0) + ($61 & 2047) >> 0] = 126;
   $70 = $61 + 1 | 0;
   $72 = $70 >>> 11 & 31;
   if (HEAP8[$kc + 66932 + ($72 << 3) + 4 >> 0] | 0) HEAP8[(HEAP32[$kc + 66932 + ($72 << 3) >> 2] | 0) + ($70 & 2047) >> 0] = -15;
   break;
  }
 default:
  {}
 }
 HEAP16[$kc + 65642 >> 1] = HEAP16[$info + 12 >> 1] | 0;
 return;
}

function __ZN5ImGui8PushFontEP6ImFont($font) {
 $font = $font | 0;
 var $$sroa$0$0 = 0, $0 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0.0, $25 = 0, $26 = 0, $3 = 0, $34 = 0.0, $37 = 0, $42 = 0, $43 = 0, $47 = 0, $48 = 0, $49 = 0, $52 = 0, $57 = 0, $58 = 0, $61 = 0, $66 = 0, $67 = 0, $71 = 0, $73 = 0, $79 = 0;
 $0 = $font;
 do if (!$font) {
  $3 = HEAP32[36755] | 0;
  if ((HEAP32[$3 + 32 >> 2] | 0) > 0) {
   $$sroa$0$0 = HEAP32[HEAP32[$3 + 40 >> 2] >> 2] | 0;
   break;
  } else ___assert_fail(127217, 127226, 805, 127272);
 } else $$sroa$0$0 = $0; while (0);
 $10 = $$sroa$0$0;
 if (!$$sroa$0$0) ___assert_fail(125406, 124187, 4320, 125431);
 $12 = $10 + 36 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if (!$13) ___assert_fail(125406, 124187, 4320, 125431);
 $16 = +HEAPF32[$10 + 4 >> 2];
 if (!($16 > 0.0)) ___assert_fail(125446, 124187, 4321, 125431);
 HEAP32[38186] = $10;
 HEAPF32[38188] = $16 * (+HEAPF32[36756] * +HEAPF32[$10 >> 2]);
 $25 = 152804;
 $26 = HEAP32[$25 >> 2] | 0;
 if (!$26) $34 = 0.0; else $34 = +HEAPF32[38188] * +HEAPF32[$26 + 568 >> 2];
 HEAPF32[38187] = $34;
 $37 = $13 + 24 | 0;
 $42 = HEAP32[$37 + 4 >> 2] | 0;
 $43 = 152756;
 HEAP32[$43 >> 2] = HEAP32[$37 >> 2];
 HEAP32[$43 + 4 >> 2] = $42;
 $47 = 152904;
 $48 = HEAP32[$47 >> 2] | 0;
 $49 = 152908;
 if (($48 | 0) == (HEAP32[$49 >> 2] | 0)) {
  $52 = $48 + 1 | 0;
  if (!$48) $57 = 8; else $57 = (($48 | 0) / 2 | 0) + $48 | 0;
  $58 = ($57 | 0) > ($52 | 0) ? $57 : $52;
  if (($48 | 0) < ($58 | 0)) {
   $61 = 147664;
   HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 1;
   $66 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($58 << 2) | 0;
   $67 = 152912;
   _memcpy($66 | 0, HEAP32[$67 >> 2] | 0, HEAP32[$47 >> 2] << 2 | 0) | 0;
   $71 = HEAP32[$67 >> 2] | 0;
   if ($71 | 0) {
    $73 = 147664;
    HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($71);
   HEAP32[$67 >> 2] = $66;
   HEAP32[$49 >> 2] = $58;
   $79 = HEAP32[$47 >> 2] | 0;
  } else $79 = $48;
 } else $79 = $48;
 HEAP32[$47 >> 2] = $79 + 1;
 HEAP32[(HEAP32[38228] | 0) + ($79 << 2) >> 2] = $$sroa$0$0;
 __ZN10ImDrawList13PushTextureIDERKPv(HEAP32[(HEAP32[$25 >> 2] | 0) + 572 >> 2] | 0, HEAP32[$12 >> 2] | 0);
 return;
}

function __ZN5Oryol5_priv16resourceRegistryD2Ev($this) {
 $this = $this | 0;
 var $$pre$i$i$i1 = 0, $$pre3$i$i2$pre$phi$i8ZZZZ2D = 0, $10 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $4 = 0, $7 = 0, $i$01$i$i$i = 0, $i$01$i$i$i5 = 0;
 if (HEAP8[$this >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 111306, 18, 111380);
  _abort();
 }
 $2 = $this + 16 | 0;
 $4 = $this + 12 | 0;
 if ((HEAP32[$2 >> 2] | 0) != (HEAP32[$4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111432, 0, 111306, 19, 111380);
  _abort();
 }
 $7 = $this + 56 | 0;
 HEAP32[$this + 72 >> 2] = 0;
 HEAP32[$this + 76 >> 2] = 0;
 $10 = HEAP32[$7 >> 2] | 0;
 if ($10 | 0) __ZN5Oryol6Memory4FreeEPv($10);
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this + 48 >> 2] = 0;
 $14 = $this + 28 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 $$pre$i$i$i1 = $this + 36 | 0;
 if (!$15) $$pre3$i$i2$pre$phi$i8ZZZZ2D = $this + 40 | 0; else {
  $17 = HEAP32[$$pre$i$i$i1 >> 2] | 0;
  $18 = $this + 40 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  if (($17 | 0) < ($19 | 0)) {
   $i$01$i$i$i5 = $17;
   do {
    HEAP32[$15 + ($i$01$i$i$i5 * 12 | 0) >> 2] = 0;
    $i$01$i$i$i5 = $i$01$i$i$i5 + 1 | 0;
   } while (($i$01$i$i$i5 | 0) != ($19 | 0));
  }
  __ZN5Oryol6Memory4FreeEPv($15);
  $$pre3$i$i2$pre$phi$i8ZZZZ2D = $18;
 }
 HEAP32[$14 >> 2] = 0;
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$$pre$i$i$i1 >> 2] = 0;
 HEAP32[$$pre3$i$i2$pre$phi$i8ZZZZ2D >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 $26 = $this + 4 | 0;
 $27 = HEAP32[$26 >> 2] | 0;
 if (!$27) {
  HEAP32[$26 >> 2] = 0;
  HEAP32[$26 + 4 >> 2] = 0;
  HEAP32[$26 + 8 >> 2] = 0;
  HEAP32[$26 + 12 >> 2] = 0;
  return;
 }
 $29 = HEAP32[$4 >> 2] | 0;
 $30 = HEAP32[$2 >> 2] | 0;
 if (($29 | 0) < ($30 | 0)) {
  $i$01$i$i$i = $29;
  do {
   HEAP32[$27 + ($i$01$i$i$i * 24 | 0) >> 2] = 0;
   $i$01$i$i$i = $i$01$i$i$i + 1 | 0;
  } while (($i$01$i$i$i | 0) != ($30 | 0));
 }
 __ZN5Oryol6Memory4FreeEPv($27);
 HEAP32[$26 >> 2] = 0;
 HEAP32[$26 + 4 >> 2] = 0;
 HEAP32[$26 + 8 >> 2] = 0;
 HEAP32[$26 + 12 >> 2] = 0;
 return;
}

function __ZN5Oryol3MapINS_6StringES1_E3AddEONS_12KeyValuePairIS1_S1_EE($this, $kvp) {
 $this = $this | 0;
 $kvp = $kvp | 0;
 var $$0$i1 = 0, $$0$i2 = 0, $$0$i4 = 0, $$0$ph$i$i$i = 0, $$0$ph$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa17 = 0, $12 = 0, $22 = 0, $23 = 0, $27 = 0, $34 = 0, $5 = 0, $7 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa16 = 0, $__len$0$ph$i$i$i = 0, $slotConstructed$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $slotConstructed$i = sp;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 300, 18355);
  _abort();
 }
 $5 = $this + 12 | 0;
 $7 = $this + 8 | 0;
 if (((HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) | 0) == (0 - (HEAP32[$7 >> 2] | 0) | 0)) __ZN5Oryol3MapINS_6StringES1_E4growEv($this);
 $12 = HEAP32[$this >> 2] | 0;
 if (!$12) {
  $$0$i1 = 0;
  $$0$i4 = 0;
 } else {
  $$0$i1 = $12 + (HEAP32[$5 >> 2] << 4) | 0;
  $$0$i4 = $12 + (HEAP32[$7 >> 2] << 4) | 0;
 }
 $$0$ph$i$i$i = $$0$i4;
 $__len$0$ph$i$i$i = $$0$i1 - $$0$i4 >> 4;
 L10 : while (1) {
  $__len$0$i$i$i = $__len$0$ph$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i) {
    $$0$ph$i$i$i$lcssa = $$0$ph$i$i$i;
    break L10;
   }
   $22 = ($__len$0$i$i$i | 0) / 2 | 0;
   $23 = $$0$ph$i$i$i + ($22 << 4) | 0;
   if (__ZNK5Oryol6StringltERKS0_($23, $kvp) | 0) {
    $$lcssa = $22;
    $$lcssa17 = $23;
    $__len$0$i$i$i$lcssa16 = $__len$0$i$i$i;
    break;
   } else $__len$0$i$i$i = $22;
  }
  $$0$ph$i$i$i = $$lcssa17 + 16 | 0;
  $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa16 + -1 - $$lcssa | 0;
 }
 $27 = HEAP32[$this >> 2] | 0;
 if (!$27) $$0$i2 = 0; else $$0$i2 = $27 + (HEAP32[$7 >> 2] << 4) | 0;
 HEAP8[$slotConstructed$i >> 0] = 1;
 $34 = __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE13prepareInsertEiRb($this, $$0$ph$i$i$i$lcssa - $$0$i2 >> 4, $slotConstructed$i) | 0;
 if (!(HEAP8[$slotConstructed$i >> 0] | 0)) {
  __ZN5Oryol6StringC2EOS0_($34, $kvp);
  __ZN5Oryol6StringC2EOS0_($34 + 8 | 0, $kvp + 8 | 0);
  STACKTOP = sp;
  return;
 }
 if (($34 | 0) == ($kvp | 0)) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6StringaSERKS0_($34, $kvp);
 __ZN5Oryol6StringaSERKS0_($34 + 8 | 0, $kvp + 8 | 0);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glRenderer14updateVerticesEPNS0_4meshEPKvi($this, $msh, $data, $numBytes) {
 $this = $this | 0;
 $msh = $msh | 0;
 $data = $data | 0;
 $numBytes = $numBytes | 0;
 var $$$i = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $29 = 0, $33 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 599, 69616);
  _abort();
 }
 if (!$msh) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69703, 0, 66399, 600, 69616);
  _abort();
 }
 if (!$data) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80919, 0, 66399, 601, 69616);
  _abort();
 }
 if (($numBytes | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69718, 0, 66399, 602, 69616);
  _abort();
 }
 if ((Math_imul(HEAPU8[$msh + 279 >> 0] | 0, HEAP32[$msh + 208 >> 2] | 0) | 0) < ($numBytes | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69718, 0, 66399, 602, 69616);
  _abort();
 }
 if (!(HEAP32[$msh + 280 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69784, 0, 66399, 603, 69616);
  _abort();
 }
 $16 = HEAP32[$this + 204 >> 2] | 0;
 $17 = $msh + 364 | 0;
 if ((HEAP32[$17 >> 2] | 0) == ($16 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69839, 69874, 66399, 583, 69926);
  _abort();
 }
 HEAP32[$17 >> 2] = $16;
 $20 = $msh + 369 | 0;
 $22 = (HEAP8[$20 >> 0] | 0) + 1 << 24 >> 24;
 $$$i = ($22 & 255) < (HEAPU8[$msh + 368 >> 0] | 0) ? $22 : 0;
 HEAP8[$20 >> 0] = $$$i;
 if (($$$i & 255) >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 73407);
  _abort();
 }
 $29 = HEAP32[$msh + 372 + (($$$i & 255) << 2) >> 2] | 0;
 if (!$29) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69987, 0, 66399, 607, 69616);
  _abort();
 }
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 734, 67610);
  _abort();
 }
 $33 = $this + 292 | 0;
 if ((HEAP32[$33 >> 2] | 0) != ($29 | 0)) {
  HEAP32[$33 >> 2] = $29;
  _glBindBuffer(34962, $29 | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 739, 67610);
   _abort();
  }
 }
 _glBufferSubData(34962, 0, $numBytes | 0, $data | 0);
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 610, 69616);
  _abort();
 }
}

function __ZN5Oryol11ShaderSetup17uniformBlockEntryaSERKS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $10 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $71 = 0, $76 = 0, $77 = 0, $i$01$i$i = 0;
 if (($0 | 0) == ($this | 0)) {
  $2 = $this + 8 | 0;
  $3 = $0 + 8 | 0;
  HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$2 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
  HEAP32[$2 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
  HEAP32[$2 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
 } else {
  HEAP32[$this >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($this, $0);
  $4 = $this + 8 | 0;
  $5 = $0 + 8 | 0;
  HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$4 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
  $i$01$i$i = 0;
  do {
   $6 = $this + 24 + ($i$01$i$i * 12 | 0) | 0;
   HEAP32[$6 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($6, $0 + 24 + ($i$01$i$i * 12 | 0) | 0);
   $10 = $0 + 24 + ($i$01$i$i * 12 | 0) + 4 | 0;
   $15 = HEAP32[$10 + 4 >> 2] | 0;
   $16 = $this + 24 + ($i$01$i$i * 12 | 0) + 4 | 0;
   HEAP32[$16 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$16 + 4 >> 2] = $15;
   $i$01$i$i = $i$01$i$i + 1 | 0;
  } while (($i$01$i$i | 0) != 16);
 }
 HEAP32[$this + 216 >> 2] = HEAP32[$0 + 216 >> 2];
 HEAP32[$this + 220 >> 2] = HEAP32[$0 + 220 >> 2];
 HEAP32[$this + 224 >> 2] = HEAP32[$0 + 224 >> 2];
 HEAP32[$this + 228 >> 2] = HEAP32[$0 + 228 >> 2];
 HEAP32[$this + 232 >> 2] = HEAP32[$0 + 232 >> 2];
 HEAP32[$this + 236 >> 2] = HEAP32[$0 + 236 >> 2];
 HEAP32[$this + 240 >> 2] = HEAP32[$0 + 240 >> 2];
 HEAP32[$this + 244 >> 2] = HEAP32[$0 + 244 >> 2];
 HEAP32[$this + 248 >> 2] = HEAP32[$0 + 248 >> 2];
 HEAP32[$this + 252 >> 2] = HEAP32[$0 + 252 >> 2];
 HEAP32[$this + 256 >> 2] = HEAP32[$0 + 256 >> 2];
 HEAP32[$this + 260 >> 2] = HEAP32[$0 + 260 >> 2];
 HEAP32[$this + 264 >> 2] = HEAP32[$0 + 264 >> 2];
 HEAP32[$this + 268 >> 2] = HEAP32[$0 + 268 >> 2];
 HEAP32[$this + 272 >> 2] = HEAP32[$0 + 272 >> 2];
 HEAP32[$this + 276 >> 2] = HEAP32[$0 + 276 >> 2];
 $71 = $0 + 280 | 0;
 $76 = HEAP32[$71 + 4 >> 2] | 0;
 $77 = $this + 280 | 0;
 HEAP32[$77 >> 2] = HEAP32[$71 >> 2];
 HEAP32[$77 + 4 >> 2] = $76;
 return $this | 0;
}

function __ZN5ImGui11PopStyleVarEi($count) {
 $count = $count | 0;
 var $$0$i$ph = 0, $$0$i1$ph = 0, $$04 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $23 = 0, $28 = 0, $29 = 0, $3 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 if (($count | 0) <= 0) return;
 $1 = 152892;
 $2 = 152900;
 $3 = 151940;
 $4 = 151948;
 $5 = 151968;
 $6 = 151980;
 $7 = 151988;
 $8 = 151936;
 $9 = 151956;
 $10 = 151964;
 $11 = 151976;
 $12 = 152008;
 $13 = 152024;
 $$04 = $count;
 $15 = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($15 | 0) <= 0) {
   label = 4;
   break;
  }
  $16 = $15 + -1 | 0;
  $17 = HEAP32[$2 >> 2] | 0;
  switch (HEAP32[$17 + ($16 * 12 | 0) >> 2] | 0) {
  case 0:
   {
    $$0$i$ph = $8;
    label = 11;
    break;
   }
  case 2:
   {
    $$0$i$ph = $9;
    label = 11;
    break;
   }
  case 4:
   {
    $$0$i$ph = $10;
    label = 11;
    break;
   }
  case 6:
   {
    $$0$i$ph = $11;
    label = 11;
    break;
   }
  case 9:
   {
    $$0$i$ph = $12;
    label = 11;
    break;
   }
  case 10:
   {
    $$0$i$ph = $13;
    label = 11;
    break;
   }
  case 1:
   {
    $$0$i1$ph = $3;
    label = 16;
    break;
   }
  case 3:
   {
    $$0$i1$ph = $4;
    label = 16;
    break;
   }
  case 5:
   {
    $$0$i1$ph = $5;
    label = 16;
    break;
   }
  case 7:
   {
    $$0$i1$ph = $6;
    label = 16;
    break;
   }
  case 8:
   {
    $$0$i1$ph = $7;
    label = 16;
    break;
   }
  default:
   {}
  }
  if ((label | 0) == 11) {
   label = 0;
   HEAP32[$$0$i$ph >> 2] = HEAP32[$17 + ($16 * 12 | 0) + 4 >> 2];
  } else if ((label | 0) == 16) {
   label = 0;
   $23 = $17 + ($16 * 12 | 0) + 4 | 0;
   $28 = HEAP32[$23 + 4 >> 2] | 0;
   $29 = $$0$i1$ph;
   HEAP32[$29 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$29 + 4 >> 2] = $28;
  }
  $33 = HEAP32[$1 >> 2] | 0;
  if (($33 | 0) <= 0) {
   label = 18;
   break;
  }
  $15 = $33 + -1 | 0;
  HEAP32[$1 >> 2] = $15;
  if (($$04 | 0) <= 1) {
   label = 20;
   break;
  } else $$04 = $$04 + -1 | 0;
 }
 if ((label | 0) == 4) ___assert_fail(127436, 127226, 815, 127445); else if ((label | 0) == 18) ___assert_fail(127436, 127226, 833, 125180); else if ((label | 0) == 20) return;
}

function __ZN10ImDrawList11PrimReserveEii($this, $idx_count, $vtx_count) {
 $this = $this | 0;
 $idx_count = $idx_count | 0;
 $vtx_count = $vtx_count | 0;
 var $10 = 0, $11 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $7 = 0, $8 = 0, $9 = 0;
 $4 = (HEAP32[$this + 8 >> 2] | 0) + ((HEAP32[$this >> 2] | 0) + -1 << 5) | 0;
 HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + $idx_count;
 $7 = $this + 24 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $8 + $vtx_count | 0;
 $10 = $this + 28 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (($11 | 0) < ($9 | 0)) {
  if (!$11) $17 = 8; else $17 = (($11 | 0) / 2 | 0) + $11 | 0;
  $18 = ($17 | 0) > ($9 | 0) ? $17 : $9;
  if (($11 | 0) < ($18 | 0)) {
   $21 = __ZN5ImGui8MemAllocEj($18 * 20 | 0) | 0;
   $22 = $this + 32 | 0;
   _memcpy($21 | 0, HEAP32[$22 >> 2] | 0, (HEAP32[$7 >> 2] | 0) * 20 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$22 >> 2] | 0);
   HEAP32[$22 >> 2] = $21;
   HEAP32[$10 >> 2] = $18;
  }
 }
 HEAP32[$7 >> 2] = $9;
 HEAP32[$this + 44 >> 2] = (HEAP32[$this + 32 >> 2] | 0) + ($8 * 20 | 0);
 $31 = $this + 12 | 0;
 $32 = HEAP32[$31 >> 2] | 0;
 $33 = $32 + $idx_count | 0;
 $34 = $this + 16 | 0;
 $35 = HEAP32[$34 >> 2] | 0;
 if (($35 | 0) >= ($33 | 0)) {
  HEAP32[$31 >> 2] = $33;
  $51 = $this + 20 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  $53 = $52 + ($32 << 1) | 0;
  $54 = $this + 48 | 0;
  HEAP32[$54 >> 2] = $53;
  return;
 }
 if (!$35) $41 = 8; else $41 = (($35 | 0) / 2 | 0) + $35 | 0;
 $42 = ($41 | 0) > ($33 | 0) ? $41 : $33;
 if (($35 | 0) >= ($42 | 0)) {
  HEAP32[$31 >> 2] = $33;
  $51 = $this + 20 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  $53 = $52 + ($32 << 1) | 0;
  $54 = $this + 48 | 0;
  HEAP32[$54 >> 2] = $53;
  return;
 }
 $45 = __ZN5ImGui8MemAllocEj($42 << 1) | 0;
 $46 = $this + 20 | 0;
 _memcpy($45 | 0, HEAP32[$46 >> 2] | 0, HEAP32[$31 >> 2] << 1 | 0) | 0;
 __ZN5ImGui7MemFreeEPv(HEAP32[$46 >> 2] | 0);
 HEAP32[$46 >> 2] = $45;
 HEAP32[$34 >> 2] = $42;
 HEAP32[$31 >> 2] = $33;
 $51 = $this + 20 | 0;
 $52 = HEAP32[$51 >> 2] | 0;
 $53 = $52 + ($32 << 1) | 0;
 $54 = $this + 48 | 0;
 HEAP32[$54 >> 2] = $53;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE14moveEraseFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$lcssa6 = 0, $$pre = 0, $0 = 0, $10 = 0, $12 = 0, $14 = 0, $18 = 0, $20 = 0, $31 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $49 = 0, $5 = 0, $52 = 0, $6 = 0, $49$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 104362);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (((HEAP32[$this + 12 >> 2] | 0) - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 104362);
  _abort();
 }
 if (($index | 0) > 0) {
  $10 = $6 + $index | 0;
  $12 = $10 + -1 | 0;
  __ZN5Oryol9loadQueue4itemaSEOS1_($0 + ($10 * 56 | 0) | 0, $0 + ($12 * 56 | 0) | 0) | 0;
  $14 = HEAP32[$5 >> 2] | 0;
  if (($12 | 0) > ($14 | 0)) {
   $49 = $12;
   do {
    $$pre = HEAP32[$this >> 2] | 0;
    $49$looptemp = $49;
    $49 = $49 + -1 | 0;
    __ZN5Oryol9loadQueue4itemaSEOS1_($$pre + ($49$looptemp * 56 | 0) | 0, $$pre + ($49 * 56 | 0) | 0) | 0;
    $52 = HEAP32[$5 >> 2] | 0;
   } while (($49 | 0) > ($52 | 0));
   $$lcssa6 = $52;
  } else $$lcssa6 = $14;
  $$lcssa = $$lcssa6;
  $18 = HEAP32[$this >> 2] | 0;
 } else {
  $$lcssa = $6;
  $18 = $0;
 }
 HEAP32[$5 >> 2] = $$lcssa + 1;
 $20 = HEAP32[$18 + ($$lcssa * 56 | 0) + 48 >> 2] | 0;
 if (($20 | 0) == ($18 + ($$lcssa * 56 | 0) + 32 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$20 >> 2] | 0) + 16 >> 2] & 255]($20); else if ($20 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$20 >> 2] | 0) + 20 >> 2] & 255]($20);
 $31 = HEAP32[$18 + ($$lcssa * 56 | 0) + 24 >> 2] | 0;
 if (($31 | 0) == ($18 + ($$lcssa * 56 | 0) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$31 >> 2] | 0) + 16 >> 2] & 255]($31); else if ($31 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$31 >> 2] | 0) + 20 >> 2] & 255]($31);
 $40 = $18 + ($$lcssa * 56 | 0) | 0;
 $41 = HEAP32[$40 >> 2] | 0;
 if (!$41) return;
 $43 = $41 + 4 | 0;
 $44 = HEAP32[$43 >> 2] | 0;
 HEAP32[$43 >> 2] = $44 - 1;
 if (($44 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$41 >> 2] >> 2] & 255]($41);
 HEAP32[$40 >> 2] = 0;
 return;
}

function __ZN4Draw6RenderERKN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $10 = 0, $11 = 0, $16 = 0, $24 = 0, $25 = 0, $32 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $8 = 0;
 __ZN5Oryol3Gfx13UpdateTextureERKNS_2IdEPKvRKNS_14ImageDataAttrsE($this + 8 | 0, $kc + 135012 | 0, $this + 380 | 0);
 $5 = HEAP32[(__ZN5Oryol3Gfx12DisplayAttrsEv() | 0) + 16 >> 2] | 0;
 $8 = HEAP32[(__ZN5Oryol3Gfx12DisplayAttrsEv() | 0) + 20 >> 2] | 0;
 $10 = HEAP32[$this + 964 >> 2] | 0;
 $11 = $10 << 1;
 $16 = ~~(+($8 | 0) * 1.25) - $11 | 0;
 __ZN5Oryol3Gfx13ApplyViewPortEiiiib(($5 - $16 | 0) / 2 | 0, $10, $16, $8 - $11 | 0, 0);
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Gfx14ApplyDrawStateERKNS_9DrawStateE($this + 200 | 0);
  if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 149, 20285);
   _abort();
  }
  $32 = HEAP32[36694] | 0;
  $33 = $32 + 132 | 0;
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
  __ZN5Oryol5_priv10glRenderer17applyUniformBlockENS_11ShaderStage4CodeEixPKhi($32 + 416 | 0, 1, 0, -284321316, -10977405, $this + 368 | 0, 12);
  __ZN5Oryol3Gfx4DrawEi(0);
  $37 = __ZN5Oryol3Gfx12DisplayAttrsEv() | 0;
  $38 = $37 + 16 | 0;
  $39 = HEAP32[$38 >> 2] | 0;
  $40 = __ZN5Oryol3Gfx12DisplayAttrsEv() | 0;
  $41 = $40 + 20 | 0;
  $42 = HEAP32[$41 >> 2] | 0;
  __ZN5Oryol3Gfx13ApplyViewPortEiiiib(0, 0, $39, $42, 0);
  return;
 } else {
  __ZN5Oryol3Gfx14ApplyDrawStateERKNS_9DrawStateE($this + 16 | 0);
  if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 149, 20199);
   _abort();
  }
  $24 = HEAP32[36694] | 0;
  $25 = $24 + 132 | 0;
  HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
  __ZN5Oryol5_priv10glRenderer17applyUniformBlockENS_11ShaderStage4CodeEixPKhi($24 + 416 | 0, 1, 0, -284321316, -10977405, $this + 184 | 0, 12);
  __ZN5Oryol3Gfx4DrawEi(0);
  $37 = __ZN5Oryol3Gfx12DisplayAttrsEv() | 0;
  $38 = $37 + 16 | 0;
  $39 = HEAP32[$38 >> 2] | 0;
  $40 = __ZN5Oryol3Gfx12DisplayAttrsEv() | 0;
  $41 = $40 + 20 | 0;
  $42 = HEAP32[$41 >> 2] | 0;
  __ZN5Oryol3Gfx13ApplyViewPortEiiiib(0, 0, $39, $42, 0);
  return;
 }
}

function __ZN5Oryol8Touchpad17onPinchingStartedERKN3glm5tvec2IfLNS1_9precisionE0EEES6_S6_S6_($this, $p0, $p1, $s0, $s1) {
 $this = $this | 0;
 $p0 = $p0 | 0;
 $p1 = $p1 | 0;
 $s0 = $s0 | 0;
 $s1 = $s1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $36 = 0, $38 = 0, $41 = 0, $42 = 0, $47 = 0, $49 = 0, $5 = 0, $53 = 0, $58 = 0, $63 = 0, $68 = 0, $73 = 0, $75 = 0, $78 = 0, $8 = 0, $9 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 6 >> 0] = 1;
 HEAP8[$this + 7 >> 0] = 1;
 $3 = $p0;
 $5 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $this + 12 | 0;
 HEAP32[$9 >> 2] = $5;
 HEAP32[$9 + 4 >> 2] = $8;
 $14 = $p1;
 $16 = HEAP32[$14 >> 2] | 0;
 $19 = HEAP32[$14 + 4 >> 2] | 0;
 $20 = $this + 20 | 0;
 HEAP32[$20 >> 2] = $16;
 HEAP32[$20 + 4 >> 2] = $19;
 $25 = $s0;
 $27 = HEAP32[$25 >> 2] | 0;
 $30 = HEAP32[$25 + 4 >> 2] | 0;
 $31 = $this + 44 | 0;
 HEAP32[$31 >> 2] = $27;
 HEAP32[$31 + 4 >> 2] = $30;
 $36 = $s1;
 $38 = HEAP32[$36 >> 2] | 0;
 $41 = HEAP32[$36 + 4 >> 2] | 0;
 $42 = $this + 52 | 0;
 HEAP32[$42 >> 2] = $38;
 HEAP32[$42 + 4 >> 2] = $41;
 $47 = HEAP32[$this + 76 >> 2] | 0;
 $49 = HEAP32[$this + 72 >> 2] | 0;
 if (($47 | 0) == ($49 | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $event + 4 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$event >> 2] = 6;
 $53 = $event + 4 | 0;
 HEAP32[$53 >> 2] = $5;
 HEAP32[$53 + 4 >> 2] = $8;
 $58 = $event + 12 | 0;
 HEAP32[$58 >> 2] = $16;
 HEAP32[$58 + 4 >> 2] = $19;
 $63 = $event + 20 | 0;
 HEAP32[$63 >> 2] = $27;
 HEAP32[$63 + 4 >> 2] = $30;
 $68 = $event + 28 | 0;
 HEAP32[$68 >> 2] = $38;
 HEAP32[$68 + 4 >> 2] = $41;
 $73 = HEAP32[$this + 64 >> 2] | 0;
 if ($73 | 0) {
  $75 = $73 + ($47 << 5) | 0;
  $__begin$03$i = $73 + ($49 << 5) | 0;
  do {
   $78 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$78 >> 2] | 0) + 24 >> 2] & 63]($78, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($75 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE14moveEraseFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $31 = 0, $34 = 0, $35 = 0, $5 = 0, $6 = 0, $i$03 = 0, $i$03$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 109602);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (((HEAP32[$this + 12 >> 2] | 0) - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 109602);
  _abort();
 }
 if (($index | 0) > 0) {
  $23 = $0;
  $i$03 = $6 + $index | 0;
  while (1) {
   $22 = $23 + ($i$03 << 3) | 0;
   $i$03$looptemp = $i$03;
   $i$03 = $i$03 + -1 | 0;
   $25 = $23 + ($i$03 << 3) | 0;
   HEAP32[$22 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($22, $25);
   HEAP32[$25 >> 2] = 0;
   $26 = $23 + ($i$03 << 3) + 4 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   $28 = $23 + ($i$03$looptemp << 3) + 4 | 0;
   $29 = HEAP32[$28 >> 2] | 0;
   if (($27 | 0) != ($29 | 0)) {
    if ($29 | 0) {
     $34 = $29 + 4 | 0;
     $35 = HEAP32[$34 >> 2] | 0;
     HEAP32[$34 >> 2] = $35 - 1;
     if (($35 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$29 >> 2] >> 2] & 255]($29);
     HEAP32[$28 >> 2] = 0;
    }
    HEAP32[$28 >> 2] = $27;
    HEAP32[$26 >> 2] = 0;
   }
   $31 = HEAP32[$5 >> 2] | 0;
   $$pre = HEAP32[$this >> 2] | 0;
   if (($i$03 | 0) <= ($31 | 0)) {
    $$lcssa = $31;
    $13 = $$pre;
    break;
   } else $23 = $$pre;
  }
 } else {
  $$lcssa = $6;
  $13 = $0;
 }
 HEAP32[$5 >> 2] = $$lcssa + 1;
 $12 = $13 + ($$lcssa << 3) + 4 | 0;
 $14 = HEAP32[$12 >> 2] | 0;
 if (!$14) {
  $21 = $13 + ($$lcssa << 3) | 0;
  HEAP32[$21 >> 2] = 0;
  return;
 }
 $16 = $14 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = $17 - 1;
 if (($17 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$14 >> 2] >> 2] & 255]($14);
 HEAP32[$12 >> 2] = 0;
 $21 = $13 + ($$lcssa << 3) | 0;
 HEAP32[$21 >> 2] = 0;
 return;
}

function __ZN5Oryol8Touchpad15onPinchingEndedERKN3glm5tvec2IfLNS1_9precisionE0EEES6_S6_S6_($this, $p0, $p1, $s0, $s1) {
 $this = $this | 0;
 $p0 = $p0 | 0;
 $p1 = $p1 | 0;
 $s0 = $s0 | 0;
 $s1 = $s1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $36 = 0, $38 = 0, $41 = 0, $42 = 0, $47 = 0, $49 = 0, $5 = 0, $53 = 0, $58 = 0, $63 = 0, $68 = 0, $73 = 0, $75 = 0, $78 = 0, $8 = 0, $9 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 8 >> 0] = 1;
 HEAP8[$this + 7 >> 0] = 0;
 $3 = $p0;
 $5 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $this + 12 | 0;
 HEAP32[$9 >> 2] = $5;
 HEAP32[$9 + 4 >> 2] = $8;
 $14 = $p1;
 $16 = HEAP32[$14 >> 2] | 0;
 $19 = HEAP32[$14 + 4 >> 2] | 0;
 $20 = $this + 20 | 0;
 HEAP32[$20 >> 2] = $16;
 HEAP32[$20 + 4 >> 2] = $19;
 $25 = $s0;
 $27 = HEAP32[$25 >> 2] | 0;
 $30 = HEAP32[$25 + 4 >> 2] | 0;
 $31 = $this + 44 | 0;
 HEAP32[$31 >> 2] = $27;
 HEAP32[$31 + 4 >> 2] = $30;
 $36 = $s1;
 $38 = HEAP32[$36 >> 2] | 0;
 $41 = HEAP32[$36 + 4 >> 2] | 0;
 $42 = $this + 52 | 0;
 HEAP32[$42 >> 2] = $38;
 HEAP32[$42 + 4 >> 2] = $41;
 $47 = HEAP32[$this + 76 >> 2] | 0;
 $49 = HEAP32[$this + 72 >> 2] | 0;
 if (($47 | 0) == ($49 | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $event + 4 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$event >> 2] = 8;
 $53 = $event + 4 | 0;
 HEAP32[$53 >> 2] = $5;
 HEAP32[$53 + 4 >> 2] = $8;
 $58 = $event + 12 | 0;
 HEAP32[$58 >> 2] = $16;
 HEAP32[$58 + 4 >> 2] = $19;
 $63 = $event + 20 | 0;
 HEAP32[$63 >> 2] = $27;
 HEAP32[$63 + 4 >> 2] = $30;
 $68 = $event + 28 | 0;
 HEAP32[$68 >> 2] = $38;
 HEAP32[$68 + 4 >> 2] = $41;
 $73 = HEAP32[$this + 64 >> 2] | 0;
 if ($73 | 0) {
  $75 = $73 + ($47 << 5) | 0;
  $__begin$03$i = $73 + ($49 << 5) | 0;
  do {
   $78 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$78 >> 2] | 0) + 24 >> 2] & 63]($78, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($75 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue6resultEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $33 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 104698);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 104698);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 52 | 0) | 0;
 $13 = $12 + ($newStart * 52 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 104698);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 52 | 0) | 0;
  while (1) {
   __ZN5Oryol3URLC2Ev($dst$02);
   $20 = $dst$02 + 40 | 0;
   HEAP32[$20 >> 2] = 0;
   $21 = $dst$02 + 44 | 0;
   HEAP32[$21 >> 2] = 0;
   $22 = $dst$02 + 48 | 0;
   HEAP32[$22 >> 2] = 0;
   __ZN5Oryol3URLaSEOS0_($dst$02, $src$01);
   $23 = HEAP32[$22 >> 2] | 0;
   if ($23 | 0) __ZN5Oryol6Memory4FreeEPv($23);
   HEAP32[$22 >> 2] = 0;
   HEAP32[$20 >> 2] = 0;
   HEAP32[$21 >> 2] = 0;
   $25 = $src$01 + 40 | 0;
   HEAP32[$20 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$21 >> 2] = HEAP32[$src$01 + 44 >> 2];
   HEAP32[$22 >> 2] = HEAP32[$src$01 + 48 >> 2];
   HEAP32[$src$01 >> 2] = 0;
   $i$03 = $i$03 + 1 | 0;
   HEAP32[$25 >> 2] = 0;
   HEAP32[$25 + 4 >> 2] = 0;
   HEAP32[$25 + 8 >> 2] = 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 52 | 0;
    $src$01 = $src$01 + 52 | 0;
   }
  }
 }
 $33 = HEAP32[$this >> 2] | 0;
 if ($33 | 0) __ZN5Oryol6Memory4FreeEPv($33);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN10FileLoader4loadEPN4yakc4kc85ERKNS_4ItemEb($this, $kc, $item, $autostart) {
 $this = $this | 0;
 $kc = $kc | 0;
 $item = $item | 0;
 $autostart = $autostart | 0;
 var $0 = 0, $1 = 0, $10 = 0, $15 = 0, $17 = 0, $2 = 0, $26 = 0, $3 = 0, $4 = 0, $strBuilder = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $vararg_buffer = sp + 48 | 0;
 $strBuilder = sp + 112 | 0;
 $0 = sp + 104 | 0;
 $1 = sp + 64 | 0;
 $2 = sp + 56 | 0;
 $3 = sp + 24 | 0;
 $4 = sp;
 __ZN5Oryol13StringBuilderC2Ev($strBuilder);
 HEAP32[$vararg_buffer >> 2] = __ZNK5Oryol6String6AsCStrEv($item + 8 | 0) | 0;
 __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 128, 40257, $vararg_buffer) | 0;
 __ZNK5Oryol13StringBuilder9GetStringEv($0, $strBuilder);
 __ZN5Oryol3URLaSERKNS_6StringE($this + 52 | 0, $0);
 __ZN5Oryol6StringD2Ev($0);
 HEAP32[$this + 24 >> 2] = 1;
 __ZNK5Oryol13StringBuilder9GetStringEv($2, $strBuilder);
 __ZN5Oryol3URLC2ERKNS_6StringE($1, $2);
 $10 = $3 + 16 | 0;
 HEAP32[$10 >> 2] = $3;
 HEAP32[$3 >> 2] = 1944;
 HEAP32[$3 + 4 >> 2] = $this;
 HEAP32[$3 + 8 >> 2] = $kc;
 HEAP8[$3 + 12 >> 0] = $autostart & 1;
 $15 = $4 + 16 | 0;
 HEAP32[$15 >> 2] = $4;
 HEAP32[$4 >> 2] = 1980;
 HEAP32[$4 + 4 >> 2] = $this;
 __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($1, $3, $4);
 $17 = HEAP32[$15 >> 2] | 0;
 if (($17 | 0) == ($4 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$17 >> 2] | 0) + 16 >> 2] & 255]($17); else if ($17 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$17 >> 2] | 0) + 20 >> 2] & 255]($17);
 $26 = HEAP32[$10 >> 2] | 0;
 if (($26 | 0) == ($3 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$26 >> 2] | 0) + 16 >> 2] & 255]($26);
  HEAP32[$1 >> 2] = 0;
  __ZN5Oryol6StringD2Ev($2);
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return;
 }
 if (!$26) {
  HEAP32[$1 >> 2] = 0;
  __ZN5Oryol6StringD2Ev($2);
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 255]($26);
 HEAP32[$1 >> 2] = 0;
 __ZN5Oryol6StringD2Ev($2);
 __ZN5Oryol13StringBuilderD2Ev($strBuilder);
 STACKTOP = sp;
 return;
}

function _mbrtowc($wc, $src, $n, $st) {
 $wc = $wc | 0;
 $src = $src | 0;
 $n = $n | 0;
 $st = $st | 0;
 var $$0 = 0, $$024 = 0, $$1 = 0, $$lcssa = 0, $$lcssa35 = 0, $$st = 0, $1 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $30 = 0, $7 = 0, $8 = 0, $c$05 = 0, $c$1 = 0, $c$2 = 0, $dummy = 0, $dummy$wc = 0, $s$06 = 0, $s$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $dummy = sp;
 $$st = ($st | 0) == 0 ? 162824 : $st;
 $1 = HEAP32[$$st >> 2] | 0;
 L1 : do if (!$src) if (!$1) $$0 = 0; else label = 15; else {
  $dummy$wc = ($wc | 0) == 0 ? $dummy : $wc;
  if (!$n) $$0 = -2; else {
   if (!$1) {
    $7 = HEAP8[$src >> 0] | 0;
    $8 = $7 & 255;
    if ($7 << 24 >> 24 > -1) {
     HEAP32[$dummy$wc >> 2] = $8;
     $$0 = $7 << 24 >> 24 != 0 & 1;
     break;
    }
    $12 = $8 + -194 | 0;
    if ($12 >>> 0 > 50) {
     label = 15;
     break;
    }
    $16 = HEAP32[13744 + ($12 << 2) >> 2] | 0;
    $17 = $n + -1 | 0;
    if (!$17) $c$2 = $16; else {
     $$024 = $17;
     $c$05 = $16;
     $s$06 = $src + 1 | 0;
     label = 9;
    }
   } else {
    $$024 = $n;
    $c$05 = $1;
    $s$06 = $src;
    label = 9;
   }
   L11 : do if ((label | 0) == 9) {
    $19 = HEAP8[$s$06 >> 0] | 0;
    $21 = ($19 & 255) >>> 3;
    if (($21 + -16 | $21 + ($c$05 >> 26)) >>> 0 > 7) {
     label = 15;
     break L1;
    } else {
     $$1 = $$024;
     $30 = $19;
     $c$1 = $c$05;
     $s$1 = $s$06;
    }
    while (1) {
     $s$1 = $s$1 + 1 | 0;
     $c$1 = ($30 & 255) + -128 | $c$1 << 6;
     $$1 = $$1 + -1 | 0;
     if (($c$1 | 0) >= 0) {
      $$lcssa = $c$1;
      $$lcssa35 = $$1;
      break;
     }
     if (!$$1) {
      $c$2 = $c$1;
      break L11;
     }
     $30 = HEAP8[$s$1 >> 0] | 0;
     if (($30 & -64) << 24 >> 24 != -128) {
      label = 15;
      break L1;
     }
    }
    HEAP32[$$st >> 2] = 0;
    HEAP32[$dummy$wc >> 2] = $$lcssa;
    $$0 = $n - $$lcssa35 | 0;
    break L1;
   } while (0);
   HEAP32[$$st >> 2] = $c$2;
   $$0 = -2;
  }
 } while (0);
 if ((label | 0) == 15) {
  HEAP32[$$st >> 2] = 0;
  HEAP32[(___errno_location() | 0) >> 2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5ImGui10RenderTextE6ImVec2PKcS2_b($pos, $text, $text_end, $hide_text_after_hash) {
 $pos = $pos | 0;
 $text = $text | 0;
 $text_end = $text_end | 0;
 $hide_text_after_hash = $hide_text_after_hash | 0;
 var $$pre$phi$iZ2D = 0, $$text_end$i = 0, $1 = 0, $23 = 0.0, $25 = 0.0, $27 = 0.0, $3 = 0, $32 = 0.0, $6 = 0, $text_display_end$0 = 0, $text_display_end$03$i = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $3 = ($text_end | 0) == 0;
 L1 : do if ($hide_text_after_hash) {
  $$text_end$i = $3 ? -1 : $text_end;
  if ($$text_end$i >>> 0 > $text >>> 0) {
   $text_display_end$03$i = $text;
   while (1) {
    switch (HEAP8[$text_display_end$03$i >> 0] | 0) {
    case 0:
     {
      $text_display_end$0 = $text_display_end$03$i;
      break L1;
      break;
     }
    case 35:
     {
      $6 = $text_display_end$03$i + 1 | 0;
      if ((HEAP8[$6 >> 0] | 0) == 35) {
       $text_display_end$0 = $text_display_end$03$i;
       break L1;
      } else $$pre$phi$iZ2D = $6;
      break;
     }
    default:
     $$pre$phi$iZ2D = $text_display_end$03$i + 1 | 0;
    }
    if ($$pre$phi$iZ2D >>> 0 < $$text_end$i >>> 0) $text_display_end$03$i = $$pre$phi$iZ2D; else {
     $text_display_end$0 = $$pre$phi$iZ2D;
     break L1;
    }
   }
  } else $text_display_end$0 = $text;
 } else if ($3) $text_display_end$0 = $text + (_strlen($text) | 0) | 0; else $text_display_end$0 = $text_end; while (0);
 if (($text_display_end$0 - $text | 0) <= 0) return;
 $23 = +HEAPF32[38014];
 $25 = +HEAPF32[38015];
 $27 = +HEAPF32[38016];
 $32 = +HEAPF32[38017] * +HEAPF32[37984];
 __ZN10ImDrawList7AddTextEPK6ImFontfRK6ImVec2jPKcS7_fPK6ImVec4(HEAP32[$1 + 572 >> 2] | 0, HEAP32[38186] | 0, +HEAPF32[38187], $pos, ($25 < 0.0 ? 0 : ~~(($25 > 1.0 ? 1.0 : $25) * 255.0 + .5) << 8) | ($23 < 0.0 ? 0 : ~~(($23 > 1.0 ? 1.0 : $23) * 255.0 + .5)) | ($27 < 0.0 ? 0 : ~~(($27 > 1.0 ? 1.0 : $27) * 255.0 + .5) << 16) | ($32 < 0.0 ? 0 : ~~(($32 > 1.0 ? 1.0 : $32) * 255.0 + .5) << 24), $text, $text_display_end$0, 0.0, 0);
 if (!(HEAP8[157996] | 0)) return;
 __ZL15LogRenderedTextRK6ImVec2PKcS3_(+HEAPF32[$pos + 4 >> 2], $text, $text_display_end$0);
 return;
}

function __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_12TextureSetupEEENS_2IdERKT_($agg$result, $this, $setup) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $setup = $setup | 0;
 var $0 = 0, $1 = 0, $10 = 0, $12 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $28 = 0, $30 = 0, $33 = 0, $37 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 if (!(__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 48725, 113, 54240);
  _abort();
 }
 if (__ZNK5Oryol12TextureSetup19ShouldSetupFromFileEv($setup) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53167, 0, 48725, 114, 54240);
  _abort();
 }
 $5 = $this + 24 | 0;
 $6 = $setup + 76 | 0;
 __ZNK5Oryol5_priv16resourceRegistry6LookupERKNS_7LocatorE($agg$result, $5, $6);
 if ((HEAP32[$agg$result + 4 >> 2] | 0) != -1) {
  STACKTOP = sp;
  return;
 }
 $10 = $this + 400 | 0;
 __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE7AllocIdEv($0, $10);
 if (($0 | 0) == ($agg$result | 0)) {
  $12 = $agg$result;
  $30 = HEAP32[$12 >> 2] | 0;
  $33 = HEAP32[$12 + 4 >> 2] | 0;
 } else {
  $18 = $0;
  $20 = HEAP32[$18 >> 2] | 0;
  $23 = HEAP32[$18 + 4 >> 2] | 0;
  $24 = $agg$result;
  HEAP32[$24 >> 2] = $20;
  HEAP32[$24 + 4 >> 2] = $23;
  $30 = $20;
  $33 = $23;
 }
 $28 = $1;
 HEAP32[$28 >> 2] = $30;
 HEAP32[$28 + 4 >> 2] = $33;
 HEAP32[$2 >> 2] = __ZNK5Oryol21resourceContainerBase9peekLabelEv($this) | 0;
 __ZN5Oryol5_priv16resourceRegistry3AddERKNS_7LocatorENS_2IdENS_13ResourceLabelE($5, $6, $1, $2);
 $37 = __ZN5Oryol5_priv16glTextureFactory13SetupResourceERNS0_7textureE($this + 208 | 0, __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6AssignERKNS_2IdERKS3_NS_13ResourceState4CodeE($10, $agg$result, $setup, 1) | 0) | 0;
 if (($37 + -3 | 0) >>> 0 >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53885, 0, 48725, 125, 54240);
  _abort();
 }
 __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE11UpdateStateERKNS_2IdENS_13ResourceState4CodeE($10, $agg$result, $37);
 STACKTOP = sp;
 return;
}

function __ZL23AddDrawListToRenderListR8ImVectorIP10ImDrawListES1_($out_render_list, $draw_list) {
 $out_render_list = $out_render_list | 0;
 $draw_list = $draw_list | 0;
 var $0 = 0, $1 = 0, $15 = 0, $16 = 0, $20 = 0, $21 = 0, $24 = 0, $29 = 0, $30 = 0, $33 = 0, $38 = 0, $39 = 0, $4 = 0, $43 = 0, $45 = 0, $51 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0;
 $0 = $draw_list;
 $1 = HEAP32[$draw_list >> 2] | 0;
 if (!$1) return;
 if (($1 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $4 = $1 + -1 | 0;
 $6 = HEAP32[$draw_list + 8 >> 2] | 0;
 if (!(HEAP32[$6 + ($4 << 5) >> 2] | 0)) if (!(HEAP32[$6 + ($4 << 5) + 24 >> 2] | 0)) {
  HEAP32[$draw_list >> 2] = $4;
  if (!$4) return;
 }
 $15 = HEAP32[$draw_list + 40 >> 2] | 0;
 $16 = $draw_list + 24 | 0;
 if (($15 | 0) != (HEAP32[$16 >> 2] | 0)) ___assert_fail(126323, 124187, 2303, 126383);
 if ($15 >>> 0 >= 65537) ___assert_fail(126407, 124187, 2304, 126383);
 $20 = HEAP32[$out_render_list >> 2] | 0;
 $21 = $out_render_list + 4 | 0;
 if (($20 | 0) == (HEAP32[$21 >> 2] | 0)) {
  $24 = $20 + 1 | 0;
  if (!$20) $29 = 8; else $29 = (($20 | 0) / 2 | 0) + $20 | 0;
  $30 = ($29 | 0) > ($24 | 0) ? $29 : $24;
  if (($20 | 0) < ($30 | 0)) {
   $33 = 147664;
   HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
   $38 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($30 << 2) | 0;
   $39 = $out_render_list + 8 | 0;
   _memcpy($38 | 0, HEAP32[$39 >> 2] | 0, HEAP32[$out_render_list >> 2] << 2 | 0) | 0;
   $43 = HEAP32[$39 >> 2] | 0;
   if ($43 | 0) {
    $45 = 147664;
    HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($43);
   HEAP32[$39 >> 2] = $38;
   HEAP32[$21 >> 2] = $30;
   $51 = HEAP32[$out_render_list >> 2] | 0;
   $58 = HEAP32[$16 >> 2] | 0;
  } else {
   $51 = $20;
   $58 = $15;
  }
 } else {
  $51 = $20;
  $58 = $15;
 }
 HEAP32[$out_render_list >> 2] = $51 + 1;
 HEAP32[(HEAP32[$out_render_list + 8 >> 2] | 0) + ($51 << 2) >> 2] = $0;
 $55 = 147668;
 HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + $58;
 $61 = 147672;
 HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + (HEAP32[$draw_list + 12 >> 2] | 0);
 return;
}

function __ZN5Oryol12VertexLayout3AddERKNS0_9ComponentE($this, $comp) {
 $this = $this | 0;
 $comp = $comp | 0;
 var $$0$i$i = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $18 = 0, $19 = 0, $29 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = $this + 66 | 0;
 $1 = HEAP8[$0 >> 0] | 0;
 if ($1 << 24 >> 24 >= 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(46746, 0, 46803, 30, 46868);
  _abort();
 }
 $3 = HEAP8[$comp >> 0] | 0;
 if (($3 & 255) >= 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 46954);
  _abort();
 }
 if ((HEAP8[($3 & 255) + ($this + 50) >> 0] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(47045, 0, 46803, 31, 46868);
  _abort();
 }
 if (($1 & 255) >= 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 47094);
  _abort();
 }
 $11 = $this + 2 + ($1 << 24 >> 24 << 1) | 0;
 $12 = HEAPU8[$comp >> 0] | HEAPU8[$comp + 1 >> 0] << 8;
 HEAP8[$11 >> 0] = $12;
 HEAP8[$11 + 1 >> 0] = $12 >> 8;
 $13 = HEAP8[$comp >> 0] | 0;
 if (($13 & 255) >= 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 46954);
  _abort();
 }
 HEAP8[($13 & 255) + ($this + 50) >> 0] = HEAP8[$0 >> 0] | 0;
 $18 = $this + 67 | 0;
 $19 = HEAP8[$0 >> 0] | 0;
 if (($19 & 255) >= 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 47223);
  _abort();
 }
 HEAP8[($19 << 24 >> 24) + ($this + 34) >> 0] = HEAP8[$18 >> 0] | 0;
 switch (HEAPU8[$comp + 1 >> 0] | 0) {
 case 9:
 case 8:
 case 7:
 case 6:
 case 5:
 case 4:
 case 0:
  {
   $$0$i$i = 4;
   break;
  }
 case 1:
  {
   $$0$i$i = 8;
   break;
  }
 case 2:
  {
   $$0$i$i = 12;
   break;
  }
 case 3:
  {
   $$0$i$i = 16;
   break;
  }
 case 11:
 case 10:
  {
   $$0$i$i = 8;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(47318, sp);
   _abort();
  }
 }
 $29 = (HEAPU8[$18 >> 0] | 0) + $$0$i$i | 0;
 HEAP8[$18 >> 0] = $29;
 if (($29 & 128) >>> 0 < 128) {
  HEAP8[$0 >> 0] = (HEAP8[$0 >> 0] | 0) + 1 << 24 >> 24;
  STACKTOP = sp;
  return $this | 0;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(47372, 0, 46803, 37, 46868);
  _abort();
 }
 return 0;
}

function __ZN11ImFontAtlas14ClearInputDataEv($this) {
 $this = $this | 0;
 var $$phi$trans$insert = 0, $$pre$phiZ2D = 0, $$pre10 = 0, $$pre11 = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $13 = 0, $18 = 0, $20 = 0, $24 = 0, $26 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $39 = 0, $40 = 0, $5 = 0, $8 = 0, $9 = 0, $i$09 = 0, $i1$08 = 0;
 $0 = $this + 44 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 L1 : do if (($1 | 0) > 0) {
  $3 = $this + 52 | 0;
  $12 = HEAP32[$3 >> 2] | 0;
  $39 = $1;
  $i$09 = 0;
  while (1) {
   $13 = HEAP32[$12 + ($i$09 * 84 | 0) >> 2] | 0;
   if (!$13) {
    $24 = $39;
    $40 = $12;
   } else if (!(HEAP8[$12 + ($i$09 * 84 | 0) + 8 >> 0] | 0)) {
    $24 = $39;
    $40 = $12;
   } else {
    __ZN5ImGui7MemFreeEPv($13);
    $18 = HEAP32[$0 >> 2] | 0;
    if (($18 | 0) <= ($i$09 | 0)) break;
    $20 = HEAP32[$3 >> 2] | 0;
    HEAP32[$20 + ($i$09 * 84 | 0) >> 2] = 0;
    $24 = $18;
    $40 = $20;
   }
   $i$09 = $i$09 + 1 | 0;
   if (($i$09 | 0) >= ($24 | 0)) {
    $10 = $24;
    break L1;
   } else {
    $12 = $40;
    $39 = $24;
   }
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } else $10 = $1; while (0);
 $5 = HEAP32[$this + 32 >> 2] | 0;
 L12 : do if (($5 | 0) > 0) {
  $8 = $this + 52 | 0;
  $$pre10 = HEAP32[$this + 40 >> 2] | 0;
  $$pre11 = HEAP32[$8 >> 2] | 0;
  $9 = $$pre11 + ($10 * 84 | 0) | 0;
  $i1$08 = 0;
  while (1) {
   $28 = $$pre10 + ($i1$08 << 2) | 0;
   $30 = (HEAP32[$28 >> 2] | 0) + 20 | 0;
   $31 = HEAP32[$30 >> 2] | 0;
   if ($31 >>> 0 >= $$pre11 >>> 0 & $31 >>> 0 < $9 >>> 0) {
    HEAP32[$30 >> 2] = 0;
    if (($5 | 0) <= ($i1$08 | 0)) break;
    HEAP32[(HEAP32[$28 >> 2] | 0) + 24 >> 2] = 0;
   }
   $i1$08 = $i1$08 + 1 | 0;
   if (($i1$08 | 0) >= ($5 | 0)) {
    $$pre$phiZ2D = $8;
    $26 = $$pre11;
    break L12;
   }
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } else {
  $$phi$trans$insert = $this + 52 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $26 = HEAP32[$$phi$trans$insert >> 2] | 0;
 } while (0);
 if (!$26) return;
 HEAP32[$this + 48 >> 2] = 0;
 HEAP32[$0 >> 2] = 0;
 __ZN5ImGui7MemFreeEPv($26);
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 return;
}

function __ZN5ImGui12TextWrappedVEPKcPi($fmt, $args) {
 $fmt = $fmt | 0;
 $args = $args | 0;
 var $1 = 0, $14 = 0, $15 = 0, $18 = 0, $23 = 0, $24 = 0, $28 = 0, $30 = 0, $36 = 0, $4 = 0, $41 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $57 = 0, $6 = 0, $64 = 0, $65 = 0.0, $9 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 HEAPF32[$1 + 272 >> 2] = 0.0;
 $4 = $1 + 292 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $1 + 296 | 0;
 if (($5 | 0) == (HEAP32[$6 >> 2] | 0)) {
  $9 = $5 + 1 | 0;
  if (!$5) $14 = 8; else $14 = (($5 | 0) / 2 | 0) + $5 | 0;
  $15 = ($14 | 0) > ($9 | 0) ? $14 : $9;
  if (($5 | 0) < ($15 | 0)) {
   $18 = 147664;
   HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
   $23 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($15 << 2) | 0;
   $24 = $1 + 300 | 0;
   _memcpy($23 | 0, HEAP32[$24 >> 2] | 0, HEAP32[$4 >> 2] << 2 | 0) | 0;
   $28 = HEAP32[$24 >> 2] | 0;
   if ($28 | 0) {
    $30 = 147664;
    HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($28);
   HEAP32[$24 >> 2] = $23;
   HEAP32[$6 >> 2] = $15;
   $36 = HEAP32[$4 >> 2] | 0;
   $41 = HEAP32[38201] | 0;
   $46 = 146892;
  } else {
   $36 = $5;
   $41 = $1;
   $46 = 146892;
  }
 } else {
  $36 = $5;
  $41 = $1;
  $46 = 146892;
 }
 HEAP32[$4 >> 2] = $36 + 1;
 HEAPF32[(HEAP32[$1 + 300 >> 2] | 0) + ($36 << 2) >> 2] = 0.0;
 HEAP8[$41 + 114 >> 0] = 1;
 if (!(HEAP8[$41 + 116 >> 0] | 0)) {
  $45 = $46 + 11614 | 0;
  $47 = _vsnprintf($45, 3073, $fmt, $args) | 0;
  HEAP8[$46 + 14686 >> 0] = 0;
  __ZN5ImGui15TextUnformattedEPKcS1_($45, (($47 | 0) == -1 ? 3073 : $47) + ($46 + 11614) | 0);
  $53 = HEAP32[38201] | 0;
 } else $53 = $41;
 HEAP8[$53 + 114 >> 0] = 1;
 $54 = $53 + 292 | 0;
 $55 = HEAP32[$54 >> 2] | 0;
 if (($55 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 $57 = $55 + -1 | 0;
 HEAP32[$54 >> 2] = $57;
 if (!$57) {
  $65 = -1.0;
  $64 = $53 + 272 | 0;
  HEAPF32[$64 >> 2] = $65;
  return;
 }
 $65 = +HEAPF32[(HEAP32[$53 + 300 >> 2] | 0) + ($55 + -2 << 2) >> 2];
 $64 = $53 + 272 | 0;
 HEAPF32[$64 >> 2] = $65;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE14moveInsertBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $10 = 0, $13 = 0, $16 = 0, $2 = 0, $21 = 0, $22 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $42 = 0, $44 = 0, $i$0 = 0, $i$0$in2 = 0, $i$0$in2$phi = 0, $i$03 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 114113);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 114113);
  _abort();
 }
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 114113);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 114113);
  _abort();
 }
 $10 = HEAP32[$this + 8 >> 2] | 0;
 if (($3 - $10 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 114113);
  _abort();
 }
 $13 = $3 + -1 | 0;
 $16 = $0 + ($13 << 4) | 0;
 $21 = HEAP32[$16 + 4 >> 2] | 0;
 $22 = $0 + ($3 << 4) | 0;
 HEAP32[$22 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$22 + 4 >> 2] = $21;
 HEAP32[$0 + ($3 << 4) + 8 >> 2] = HEAP32[$0 + ($13 << 4) + 8 >> 2];
 $29 = $10 + $index | 0;
 if (($13 | 0) <= ($29 | 0)) {
  $32 = $3 + 1 | 0;
  HEAP32[$2 >> 2] = $32;
  $33 = HEAP32[$this >> 2] | 0;
  $34 = $33 + ($29 << 4) | 0;
  return $34 | 0;
 }
 $31 = HEAP32[$this >> 2] | 0;
 $i$0$in2 = $3;
 $i$03 = $13;
 while (1) {
  $35 = $i$0$in2 + -2 | 0;
  $37 = $31 + ($35 << 4) | 0;
  $42 = HEAP32[$37 + 4 >> 2] | 0;
  $44 = $31 + ($i$03 << 4) | 0;
  HEAP32[$44 >> 2] = HEAP32[$37 >> 2];
  HEAP32[$44 + 4 >> 2] = $42;
  HEAP32[$31 + ($i$03 << 4) + 8 >> 2] = HEAP32[$31 + ($35 << 4) + 8 >> 2];
  $i$0 = $i$03 + -1 | 0;
  if (($i$0 | 0) > ($29 | 0)) {
   $i$0$in2$phi = $i$03;
   $i$03 = $i$0;
   $i$0$in2 = $i$0$in2$phi;
  } else break;
 }
 $32 = $3 + 1 | 0;
 HEAP32[$2 >> 2] = $32;
 $33 = HEAP32[$this >> 2] | 0;
 $34 = $33 + ($29 << 4) | 0;
 return $34 | 0;
}

function __ZN5Oryol8IOStatus8ToStringENS0_4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0;
 do switch ($c | 0) {
 case 100:
  {
   $$0 = 102058;
   break;
  }
 case 101:
  {
   $$0 = 102039;
   break;
  }
 case 200:
  {
   $$0 = 102036;
   break;
  }
 case 201:
  {
   $$0 = 102028;
   break;
  }
 case 202:
  {
   $$0 = 102019;
   break;
  }
 case 203:
  {
   $$0 = 101993;
   break;
  }
 case 204:
  {
   $$0 = 101983;
   break;
  }
 case 205:
  {
   $$0 = 101970;
   break;
  }
 case 206:
  {
   $$0 = 101955;
   break;
  }
 case 300:
  {
   $$0 = 101939;
   break;
  }
 case 301:
  {
   $$0 = 101922;
   break;
  }
 case 302:
  {
   $$0 = 101916;
   break;
  }
 case 303:
  {
   $$0 = 101907;
   break;
  }
 case 304:
  {
   $$0 = 101895;
   break;
  }
 case 305:
  {
   $$0 = 101886;
   break;
  }
 case 306:
  {
   $$0 = 101868;
   break;
  }
 case 400:
  {
   $$0 = 101857;
   break;
  }
 case 401:
  {
   $$0 = 101844;
   break;
  }
 case 402:
  {
   $$0 = 101828;
   break;
  }
 case 403:
  {
   $$0 = 101818;
   break;
  }
 case 404:
  {
   $$0 = 101809;
   break;
  }
 case 405:
  {
   $$0 = 101792;
   break;
  }
 case 406:
  {
   $$0 = 101778;
   break;
  }
 case 407:
  {
   $$0 = 101750;
   break;
  }
 case 408:
  {
   $$0 = 101735;
   break;
  }
 case 409:
  {
   $$0 = 101726;
   break;
  }
 case 410:
  {
   $$0 = 101721;
   break;
  }
 case 411:
  {
   $$0 = 101706;
   break;
  }
 case 412:
  {
   $$0 = 101687;
   break;
  }
 case 413:
  {
   $$0 = 101665;
   break;
  }
 case 414:
  {
   $$0 = 101646;
   break;
  }
 case 415:
  {
   $$0 = 101625;
   break;
  }
 case 416:
  {
   $$0 = 101596;
   break;
  }
 case 417:
  {
   $$0 = 101578;
   break;
  }
 case 500:
  {
   $$0 = 101558;
   break;
  }
 case 501:
  {
   $$0 = 101543;
   break;
  }
 case 502:
  {
   $$0 = 101532;
   break;
  }
 case 503:
  {
   $$0 = 101513;
   break;
  }
 case 504:
  {
   $$0 = 101498;
   break;
  }
 case 505:
  {
   $$0 = 101474;
   break;
  }
 case 1e3:
  {
   $$0 = 101464;
   break;
  }
 case 1001:
  {
   $$0 = 101450;
   break;
  }
 default:
  $$0 = 101434;
 } while (0);
 return $$0 | 0;
}

function __ZN5Oryol5_priv13elementBufferIiE13prepareInsertEiRb($this, $index, $outSlotConstructed) {
 $this = $this | 0;
 $index = $index | 0;
 $outSlotConstructed = $outSlotConstructed | 0;
 var $$1 = 0, $0 = 0, $1 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0;
 HEAP8[$outSlotConstructed >> 0] = 1;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 if (($4 | 0) == ($index | 0)) {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   HEAP32[$0 >> 2] = $1 + 1;
   $$1 = (HEAP32[$this >> 2] | 0) + ($1 << 2) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 527, 120334);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferIiE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 if (!$index) {
  if (($3 | 0) > 0) {
   HEAP8[$outSlotConstructed >> 0] = 0;
   $16 = $3 + -1 | 0;
   HEAP32[$2 >> 2] = $16;
   $$1 = (HEAP32[$this >> 2] | 0) + ($16 << 2) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 123391, 543, 120334);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferIiE14moveInsertBackEi($this, 0) | 0;
  return $$1 | 0;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  if (($3 | 0) > 0) {
   $$1 = __ZN5Oryol5_priv13elementBufferIiE15moveInsertFrontEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($1 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123198, 0, 123391, 557, 120334);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferIiE14moveInsertBackEi($this, $index) | 0;
  return $$1 | 0;
 } else {
  if (($1 | 0) < (HEAP32[$this + 4 >> 2] | 0)) {
   $$1 = __ZN5Oryol5_priv13elementBufferIiE14moveInsertBackEi($this, $index) | 0;
   return $$1 | 0;
  }
  if (($3 | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123220, 0, 123391, 569, 120334);
   _abort();
  }
  $$1 = __ZN5Oryol5_priv13elementBufferIiE15moveInsertFrontEi($this, $index) | 0;
  return $$1 | 0;
 }
 return 0;
}

function __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_9MeshSetupEEENS_2IdERKT_($agg$result, $this, $setup) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $setup = $setup | 0;
 var $0 = 0, $1 = 0, $10 = 0, $12 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $28 = 0, $30 = 0, $33 = 0, $37 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 if (!(__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 48725, 69, 53084);
  _abort();
 }
 if (__ZNK5Oryol9MeshSetup19ShouldSetupFromFileEv($setup) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53167, 0, 48725, 70, 53084);
  _abort();
 }
 $5 = $this + 24 | 0;
 $6 = $setup + 92 | 0;
 __ZNK5Oryol5_priv16resourceRegistry6LookupERKNS_7LocatorE($agg$result, $5, $6);
 if ((HEAP32[$agg$result + 4 >> 2] | 0) != -1) {
  STACKTOP = sp;
  return;
 }
 $10 = $this + 272 | 0;
 __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE7AllocIdEv($0, $10);
 if (($0 | 0) == ($agg$result | 0)) {
  $12 = $agg$result;
  $30 = HEAP32[$12 >> 2] | 0;
  $33 = HEAP32[$12 + 4 >> 2] | 0;
 } else {
  $18 = $0;
  $20 = HEAP32[$18 >> 2] | 0;
  $23 = HEAP32[$18 + 4 >> 2] | 0;
  $24 = $agg$result;
  HEAP32[$24 >> 2] = $20;
  HEAP32[$24 + 4 >> 2] = $23;
  $30 = $20;
  $33 = $23;
 }
 $28 = $1;
 HEAP32[$28 >> 2] = $30;
 HEAP32[$28 + 4 >> 2] = $33;
 HEAP32[$2 >> 2] = __ZNK5Oryol21resourceContainerBase9peekLabelEv($this) | 0;
 __ZN5Oryol5_priv16resourceRegistry3AddERKNS_7LocatorENS_2IdENS_13ResourceLabelE($5, $6, $1, $2);
 $37 = __ZN5Oryol5_priv13glMeshFactory13SetupResourceERNS0_4meshE($this + 144 | 0, __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6AssignERKNS_2IdERKS3_NS_13ResourceState4CodeE($10, $agg$result, $setup, 1) | 0) | 0;
 if (($37 + -3 | 0) >>> 0 >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53885, 0, 48725, 81, 53084);
  _abort();
 }
 __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE11UpdateStateERKNS_2IdENS_13ResourceState4CodeE($10, $agg$result, $37);
 STACKTOP = sp;
 return;
}

function __ZN14HexInputWidget4DrawEv($this) {
 $this = $this | 0;
 var $$0$i1 = 0, $$0$i3 = 0, $0 = 0, $10 = 0, $11 = 0, $13 = 0, $27 = 0, $3 = 0, $39 = 0, $6 = 0, $res$i2 = 0, $retval$0$off0 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $res$i2 = sp + 12 | 0;
 $0 = $this + 12 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) __ZN5ImGui13PushItemWidthEf(22.0); else __ZN5ImGui13PushItemWidthEf(38.0);
 $3 = HEAP32[$this >> 2] | 0;
 $6 = $this + 4 | 0;
 if (!(__ZN5ImGui9InputTextEPKcPcjiPFiP25ImGuiTextEditCallbackDataEPv(HEAP32[(($3 | 0) == 0 ? 13684 : $3 + 12 | 0) >> 2] | 0, $6, 5, 38, 0, 0) | 0)) {
  $retval$0$off0 = 0;
  __ZN5ImGui12PopItemWidthEv();
  STACKTOP = sp;
  return $retval$0$off0 | 0;
 }
 $10 = $this + 10 | 0;
 $11 = HEAP16[$10 >> 1] | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  HEAP32[$res$i2 >> 2] = 0;
  HEAP32[$vararg_buffer1 >> 2] = $res$i2;
  $39 = (_sscanf($6, 35565, $vararg_buffer1) | 0) == 1;
  $$0$i1 = $39 ? HEAP32[$res$i2 >> 2] & 255 : $11 & 255;
  HEAP8[$0 >> 0] = 0;
  HEAP16[$10 >> 1] = $$0$i1 & 255;
  HEAP8[$6 >> 0] = HEAP8[35768 + (($$0$i1 & 255) >>> 4 & 255) >> 0] | 0;
  HEAP8[$this + 5 >> 0] = HEAP8[35768 + ($$0$i1 & 15) >> 0] | 0;
  HEAP8[$this + 6 >> 0] = 0;
  $retval$0$off0 = 1;
  __ZN5ImGui12PopItemWidthEv();
  STACKTOP = sp;
  return $retval$0$off0 | 0;
 } else {
  HEAP32[$res$i2 >> 2] = 0;
  HEAP32[$vararg_buffer >> 2] = $res$i2;
  $13 = (_sscanf($6, 35565, $vararg_buffer) | 0) == 1;
  $$0$i3 = $13 ? HEAP32[$res$i2 >> 2] & 65535 : $11;
  HEAP8[$0 >> 0] = 1;
  HEAP16[$10 >> 1] = $$0$i3;
  HEAP8[$6 >> 0] = HEAP8[35768 + (($$0$i3 & 65535) >>> 12 & 65535) >> 0] | 0;
  HEAP8[$this + 5 >> 0] = HEAP8[35768 + (($$0$i3 & 65535) >>> 8 & 15) >> 0] | 0;
  $27 = $$0$i3 & 65535;
  HEAP8[$this + 6 >> 0] = HEAP8[35768 + ($27 >>> 4 & 15) >> 0] | 0;
  HEAP8[$this + 7 >> 0] = HEAP8[35768 + ($27 & 15) >> 0] | 0;
  HEAP8[$this + 8 >> 0] = 0;
  $retval$0$off0 = 1;
  __ZN5ImGui12PopItemWidthEv();
  STACKTOP = sp;
  return $retval$0$off0 | 0;
 }
 return 0;
}

function __ZN6SoLoud6SoloudC2Ev($this) {
 $this = $this | 0;
 var $13 = 0, $17 = 0, $28 = 0, $32 = 0, $6 = 0, $7 = 0, $i$13 = 0, dest = 0, stop = 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 __ZN6SoLoud5FaderC2Ev($this + 4184 | 0);
 $6 = $this + 105812 | 0;
 $7 = $this + 7508 | 0;
 do {
  __ZN6SoLoud25AudioSourceInstance3dDataC2Ev($7);
  $7 = $7 + 96 | 0;
 } while (($7 | 0) != ($6 | 0));
 HEAP32[$this + 28 >> 2] = 0;
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 4140 >> 2] = 0;
 $13 = $this + 4156 | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP32[$13 + 12 >> 2] = 0;
 HEAP32[$13 + 16 >> 2] = 0;
 HEAP32[$this + 4144 >> 2] = 2;
 $17 = $this + 4232 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$this + 4176 >> 2] = 1;
 HEAP32[$this + 4152 >> 2] = 0;
 HEAP32[$this + 4148 >> 2] = 0;
 dest = $this + 4248 | 0;
 stop = dest + 64 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $i$13 = 0;
 do {
  HEAPF32[$this + 5336 + ($i$13 << 2) >> 2] = 0.0;
  HEAPF32[$this + 4312 + ($i$13 << 2) >> 2] = 0.0;
  HEAPF32[$this + 6360 + ($i$13 << 2) >> 2] = 0.0;
  $i$13 = $i$13 + 1 | 0;
 } while (($i$13 | 0) != 256);
 _memset($this + 44 | 0, 0, 4096) | 0;
 HEAP32[$this + 105812 >> 2] = 0;
 HEAP32[$this + 105816 >> 2] = 0;
 $28 = $this + 7384 | 0;
 HEAP32[$28 >> 2] = 0;
 HEAP32[$28 + 4 >> 2] = 0;
 HEAP32[$28 + 8 >> 2] = 0;
 HEAP32[$28 + 12 >> 2] = 0;
 HEAP32[$28 + 16 >> 2] = 0;
 HEAPF32[$this + 7404 >> 2] = -1.0;
 HEAPF32[$this + 7408 >> 2] = 0.0;
 HEAPF32[$this + 7412 >> 2] = 1.0;
 $32 = $this + 7416 | 0;
 HEAP32[$32 >> 2] = 0;
 HEAP32[$32 + 4 >> 2] = 0;
 HEAP32[$32 + 8 >> 2] = 0;
 HEAP32[$32 + 12 >> 2] = 0;
 HEAPF32[$this + 7432 >> 2] = 343.29998779296875;
 HEAP32[$this + 12 >> 2] = 16;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP8[$this + 109920 >> 0] = 1;
 return;
}

function __ZN5Oryol2IO4LoadERKNS_3URLENSt3__18functionIFvNS_9loadQueue6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($url, $onSuccess, $onFailed) {
 $url = $url | 0;
 $onSuccess = $onSuccess | 0;
 $onFailed = $onFailed | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $32 = 0, $33 = 0, $4 = 0, $43 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp + 24 | 0;
 $1 = sp;
 $2 = HEAP32[36715] | 0;
 if (!$2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 100720, 130, 101295);
  _abort();
 }
 $4 = $2 + 528 | 0;
 $6 = HEAP32[$onSuccess + 16 >> 2] | 0;
 do if (!$6) HEAP32[$0 + 16 >> 2] = 0; else if (($6 | 0) == ($onSuccess | 0)) {
  HEAP32[$0 + 16 >> 2] = $0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$6 >> 2] | 0) + 12 >> 2] & 63]($6, $0);
  break;
 } else {
  HEAP32[$0 + 16 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 8 >> 2] & 63]($6) | 0;
  break;
 } while (0);
 $20 = HEAP32[$onFailed + 16 >> 2] | 0;
 do if (!$20) {
  $22 = $1 + 16 | 0;
  HEAP32[$22 >> 2] = 0;
  $$pre$phiZ2D = $22;
 } else if (($20 | 0) == ($onFailed | 0)) {
  $24 = $1 + 16 | 0;
  HEAP32[$24 >> 2] = $1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$20 >> 2] | 0) + 12 >> 2] & 63]($20, $1);
  $$pre$phiZ2D = $24;
  break;
 } else {
  $32 = $1 + 16 | 0;
  HEAP32[$32 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 8 >> 2] & 63]($20) | 0;
  $$pre$phiZ2D = $32;
  break;
 } while (0);
 __ZN5Oryol9loadQueue3addERKNS_3URLENSt3__18functionIFvNS0_6resultEEEENS5_IFvS3_NS_8IOStatus4CodeEEEE($4, $url, $0, $1);
 $33 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if (($33 | 0) == ($1 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 255]($1); else if ($33 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$33 >> 2] | 0) + 20 >> 2] & 255]($33);
 $43 = HEAP32[$0 + 16 >> 2] | 0;
 if (($43 | 0) == ($0 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 255]($0);
  STACKTOP = sp;
  return;
 }
 if (!$43) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$43 >> 2] | 0) + 20 >> 2] & 255]($43);
 STACKTOP = sp;
 return;
}

function __ZN7YakcAppC2Ev($this) {
 $this = $this | 0;
 var $17 = 0, $22 = 0, $29 = 0, $40 = 0;
 __ZN5Oryol3AppC2Ev($this);
 HEAP32[$this >> 2] = 272;
 HEAP8[$this + 38 >> 0] = 0;
 __ZN4yakc4kc85C2Ev($this + 40 | 0);
 _memset($this + 725592 | 0, -1, 176) | 0;
 HEAPF32[$this + 725768 >> 2] = 0.0;
 HEAPF32[$this + 725772 >> 2] = 0.0;
 _memset($this + 725784 | 0, -1, 168) | 0;
 HEAPF32[$this + 725952 >> 2] = 0.0;
 HEAPF32[$this + 725956 >> 2] = 0.0;
 _memset($this + 725964 | 0, 0, 588) | 0;
 __ZN6SoLoud6SoloudC2Ev($this + 726552 | 0);
 __ZN6SoLoud20BiquadResonantFilterC2Ev($this + 836480 | 0);
 __ZN16kc85_audiosourceC2Ev($this + 836504 | 0);
 HEAP32[$this + 853048 >> 2] = 0;
 HEAP8[$this + 853056 >> 0] = 0;
 HEAP8[$this + 853057 >> 0] = 1;
 HEAPF32[$this + 853060 >> 2] = .015625;
 HEAP32[$this + 853064 >> 2] = 1;
 $17 = $this + 853068 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 HEAP32[$this + 853084 >> 2] = 16;
 HEAP32[$this + 853088 >> 2] = 65536;
 HEAP32[$this + 853092 >> 2] = 0;
 __ZN5Oryol6StringC2Ev($this + 853096 | 0);
 $22 = $this + 853104 | 0;
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 HEAP32[$22 + 12 >> 2] = 0;
 __ZN5Oryol3URLC2Ev($this + 853120 | 0);
 HEAP32[$this + 853160 >> 2] = 200;
 HEAP32[$this + 853164 >> 2] = 0;
 HEAP32[$this + 853168 >> 2] = 0;
 HEAP32[$this + 853172 >> 2] = 0;
 __ZN15SnapshotStorageC2Ev($this + 853176 | 0);
 $29 = $this + 1902488 | 0;
 HEAP32[$29 >> 2] = 0;
 HEAP32[$29 + 4 >> 2] = 0;
 HEAP32[$29 + 8 >> 2] = 0;
 HEAP32[$29 + 12 >> 2] = 0;
 HEAP32[$29 + 16 >> 2] = 0;
 HEAP32[$29 + 20 >> 2] = 0;
 HEAP32[$this + 1902512 >> 2] = 16;
 HEAP32[$this + 1902516 >> 2] = 65536;
 HEAP8[$this + 1902520 >> 0] = 0;
 HEAP8[$this + 1902521 >> 0] = 1;
 HEAP8[$this + 1902522 >> 0] = 1;
 HEAP8[$this + 1902523 >> 0] = 0;
 HEAP8[$this + 1902524 >> 0] = 1;
 __ZN10ImGuiStyleC2Ev($this + 1902528 | 0);
 __ZN10ImGuiStyleC2Ev($this + 1903336 | 0);
 $40 = $this + 1904152 | 0;
 HEAP32[$40 >> 2] = 0;
 HEAP32[$40 + 4 >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE15moveInsertFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $10 = 0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $37 = 0, $i$01 = 0, $i$01$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 113209);
  _abort();
 }
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 113209);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 113209);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - $3 | 0) < ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 113209);
  _abort();
 }
 $10 = $3 + -1 | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($0 + ($10 * 12 | 0) | 0, $0 + ($3 * 12 | 0) | 0);
 HEAP32[$0 + ($10 * 12 | 0) + 4 >> 2] = HEAP32[$0 + ($3 * 12 | 0) + 4 >> 2];
 HEAP32[$0 + ($10 * 12 | 0) + 8 >> 2] = HEAP32[$0 + ($3 * 12 | 0) + 8 >> 2];
 $19 = HEAP32[$2 >> 2] | 0;
 $20 = $index + -1 | 0;
 if (($19 | 0) < ($20 + $19 | 0)) $i$01 = $19; else {
  $$lcssa = $19;
  $23 = $$lcssa + -1 | 0;
  HEAP32[$2 >> 2] = $23;
  $24 = $23 + $index | 0;
  $25 = HEAP32[$this >> 2] | 0;
  $26 = $25 + ($24 * 12 | 0) | 0;
  return $26 | 0;
 }
 do {
  $27 = HEAP32[$this >> 2] | 0;
  $28 = $27 + ($i$01 * 12 | 0) | 0;
  $i$01$looptemp = $i$01;
  $i$01 = $i$01 + 1 | 0;
  HEAP32[$28 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($28, $27 + ($i$01 * 12 | 0) | 0);
  HEAP32[$27 + ($i$01$looptemp * 12 | 0) + 4 >> 2] = HEAP32[$27 + ($i$01 * 12 | 0) + 4 >> 2];
  HEAP32[$27 + ($i$01$looptemp * 12 | 0) + 8 >> 2] = HEAP32[$27 + ($i$01 * 12 | 0) + 8 >> 2];
  $37 = HEAP32[$2 >> 2] | 0;
 } while (($i$01 | 0) < ($20 + $37 | 0));
 $$lcssa = $37;
 $23 = $$lcssa + -1 | 0;
 HEAP32[$2 >> 2] = $23;
 $24 = $23 + $index | 0;
 $25 = HEAP32[$this >> 2] | 0;
 $26 = $25 + ($24 * 12 | 0) | 0;
 return $26 | 0;
}

function __ZN15ImGuiTextBuffer7appendvEPKcPi($this, $fmt, $args) {
 $this = $this | 0;
 $fmt = $fmt | 0;
 $args = $args | 0;
 var $0 = 0, $11 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $22 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $4 = 0, $40 = 0, $41 = 0, $44 = 0, $46 = 0, $5 = 0, $54 = 0, $7 = 0, $9 = 0, $args_copy = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args_copy = sp;
 HEAP32[$args_copy >> 2] = HEAP32[$args >> 2];
 $0 = _vsnprintf(0, 0, $fmt, $args) | 0;
 if (($0 | 0) < 1) {
  STACKTOP = sp;
  return;
 }
 $2 = HEAP32[$this >> 2] | 0;
 $3 = $2 + $0 | 0;
 $4 = $this + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($3 | 0) < ($5 | 0)) label = 7; else {
  $7 = $5 << 1;
  $9 = ($3 | 0) > ($7 | 0) ? $3 : $7;
  if (($5 | 0) < ($9 | 0)) {
   $11 = 147664;
   HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 1;
   $16 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($9) | 0;
   $17 = $this + 8 | 0;
   _memcpy($16 | 0, HEAP32[$17 >> 2] | 0, HEAP32[$this >> 2] | 0) | 0;
   $20 = HEAP32[$17 >> 2] | 0;
   if ($20 | 0) {
    $22 = 147664;
    HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($20);
   HEAP32[$17 >> 2] = $16;
   HEAP32[$4 >> 2] = $9;
  } else label = 7;
 }
 if ((label | 0) == 7) if (($5 | 0) < ($3 | 0)) {
  if (!$5) $32 = 8; else $32 = (($5 | 0) / 2 | 0) + $5 | 0;
  $33 = ($32 | 0) > ($3 | 0) ? $32 : $3;
  if (($5 | 0) < ($33 | 0)) {
   $35 = 147664;
   HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + 1;
   $40 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($33) | 0;
   $41 = $this + 8 | 0;
   _memcpy($40 | 0, HEAP32[$41 >> 2] | 0, HEAP32[$this >> 2] | 0) | 0;
   $44 = HEAP32[$41 >> 2] | 0;
   if ($44 | 0) {
    $46 = 147664;
    HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($44);
   HEAP32[$41 >> 2] = $40;
   HEAP32[$4 >> 2] = $33;
  }
 }
 HEAP32[$this >> 2] = $3;
 $54 = (HEAP32[$this + 8 >> 2] | 0) + $2 + -1 | 0;
 _vsnprintf($54, $0 + 1 | 0, $fmt, $args_copy) | 0;
 HEAP8[$54 + $0 >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZN4yakc8kc85_exp13insert_moduleEhNS0_11module_typeE($this, $slot_addr, $type) {
 $this = $this | 0;
 $slot_addr = $slot_addr | 0;
 $type = $type | 0;
 var $1 = 0, $11 = 0, $15 = 0, $18 = 0, $22 = 0, $23 = 0, $25 = 0, $28 = 0, $6 = 0, $__begin$0$$0$lcssa$i = 0;
 if ($type >>> 0 >= 8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15976, 0, 40519, 192, 16017);
  _abort();
 }
 $1 = $this + ($type << 5) | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15812, 0, 40519, 262, 15845);
  _abort();
 }
 $6 = (HEAP8[$this + 256 >> 0] | 0) == $slot_addr << 24 >> 24;
 if ($6) $11 = 0; else if ((HEAP8[$this + 296 >> 0] | 0) == $slot_addr << 24 >> 24) $11 = 1; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 if ((HEAP8[$this + 256 + ($11 * 40 | 0) + 12 >> 0] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15916, 0, 40519, 263, 15845);
  _abort();
 }
 $15 = $this + 296 | 0;
 if ($6) $__begin$0$$0$lcssa$i = $this + 256 | 0; else if ((HEAP8[$15 >> 0] | 0) == $slot_addr << 24 >> 24) $__begin$0$$0$lcssa$i = $15; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 $18 = $__begin$0$$0$lcssa$i + 4 | 0;
 HEAP32[$18 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$18 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$18 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$18 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 HEAP32[$18 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
 HEAP32[$18 + 20 >> 2] = HEAP32[$1 + 20 >> 2];
 HEAP32[$18 + 24 >> 2] = HEAP32[$1 + 24 >> 2];
 HEAP16[$18 + 28 >> 1] = HEAP16[$1 + 28 >> 1] | 0;
 HEAP8[$18 + 30 >> 0] = HEAP8[$1 + 30 >> 0] | 0;
 if (!(HEAP8[$__begin$0$$0$lcssa$i + 33 >> 0] | 0)) return;
 $22 = $__begin$0$$0$lcssa$i + 28 | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 if (!$23) return;
 $25 = $__begin$0$$0$lcssa$i + 24 | 0;
 if (HEAP32[$25 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15948, 0, 40519, 268, 15845);
  _abort();
 }
 $28 = __ZN5Oryol6Memory5AllocEi($23) | 0;
 HEAP32[$25 >> 2] = $28;
 _memset($28 | 0, 0, HEAP32[$22 >> 2] | 0) | 0;
 return;
}

function __ZN5Oryol11StaticArrayINS_11ShaderSetup17uniformBlockEntryELi8EEC2ERKS3_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 HEAP32[$this >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 8 | 0);
 HEAP32[$this + 280 >> 2] = -1;
 HEAP32[$this + 284 >> 2] = -1;
 HEAP32[$this + 288 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 296 | 0);
 HEAP32[$this + 568 >> 2] = -1;
 HEAP32[$this + 572 >> 2] = -1;
 HEAP32[$this + 576 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 584 | 0);
 HEAP32[$this + 856 >> 2] = -1;
 HEAP32[$this + 860 >> 2] = -1;
 HEAP32[$this + 864 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 872 | 0);
 HEAP32[$this + 1144 >> 2] = -1;
 HEAP32[$this + 1148 >> 2] = -1;
 HEAP32[$this + 1152 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 1160 | 0);
 HEAP32[$this + 1432 >> 2] = -1;
 HEAP32[$this + 1436 >> 2] = -1;
 HEAP32[$this + 1440 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 1448 | 0);
 HEAP32[$this + 1720 >> 2] = -1;
 HEAP32[$this + 1724 >> 2] = -1;
 HEAP32[$this + 1728 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 1736 | 0);
 HEAP32[$this + 2008 >> 2] = -1;
 HEAP32[$this + 2012 >> 2] = -1;
 HEAP32[$this + 2016 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 2024 | 0);
 HEAP32[$this + 2296 >> 2] = -1;
 HEAP32[$this + 2300 >> 2] = -1;
 __ZN5Oryol11ShaderSetup17uniformBlockEntryaSERKS1_($this, $rhs) | 0;
 __ZN5Oryol11ShaderSetup17uniformBlockEntryaSERKS1_($this + 288 | 0, $rhs + 288 | 0) | 0;
 __ZN5Oryol11ShaderSetup17uniformBlockEntryaSERKS1_($this + 576 | 0, $rhs + 576 | 0) | 0;
 __ZN5Oryol11ShaderSetup17uniformBlockEntryaSERKS1_($this + 864 | 0, $rhs + 864 | 0) | 0;
 __ZN5Oryol11ShaderSetup17uniformBlockEntryaSERKS1_($this + 1152 | 0, $rhs + 1152 | 0) | 0;
 __ZN5Oryol11ShaderSetup17uniformBlockEntryaSERKS1_($this + 1440 | 0, $rhs + 1440 | 0) | 0;
 __ZN5Oryol11ShaderSetup17uniformBlockEntryaSERKS1_($this + 1728 | 0, $rhs + 1728 | 0) | 0;
 __ZN5Oryol11ShaderSetup17uniformBlockEntryaSERKS1_($this + 2016 | 0, $rhs + 2016 | 0) | 0;
 return;
}

function __ZN5Oryol5_priv10glRenderer13applyTexturesENS_11ShaderStage4CodeEPPNS0_7textureEi($this, $bindStage, $textures, $numTextures) {
 $this = $this | 0;
 $bindStage = $bindStage | 0;
 $textures = $textures | 0;
 $numTextures = $numTextures | 0;
 var $16 = 0, $18 = 0, $20 = 0, $21 = 0, $24 = 0, $27 = 0, $6 = 0, $7 = 0, $9 = 0, $i$06 = 0, $i1$05 = 0, label = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 1163, 71511);
  _abort();
 }
 if (!(($bindStage | 0) == 0 & ($numTextures | 0) < 5)) if (!(($bindStage | 0) == 1 & ($numTextures | 0) < 13)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71606, 0, 66399, 1165, 71511);
  _abort();
 }
 $6 = $this + 212 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (!$7) return;
 $9 = ($numTextures | 0) > 0;
 L11 : do if ($9) {
  $i$06 = 0;
  while (1) {
   if (!(HEAP32[$textures + ($i$06 << 2) >> 2] | 0)) break;
   $i$06 = $i$06 + 1 | 0;
   if (($i$06 | 0) >= ($numTextures | 0)) break L11;
  }
  HEAP32[$6 >> 2] = 0;
  return;
 } while (0);
 $16 = HEAP32[$7 + 344 >> 2] | 0;
 if (!$16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71108, 0, 66399, 1182, 71511);
  _abort();
 }
 if (!$9) return;
 $18 = $bindStage << 4;
 $i1$05 = 0;
 while (1) {
  $20 = HEAP32[$textures + ($i1$05 << 2) >> 2] | 0;
  $21 = $i1$05 + $18 | 0;
  if ($21 >>> 0 >= 32) {
   label = 16;
   break;
  }
  $24 = HEAP32[$16 + 3580 + ($21 << 2) >> 2] | 0;
  if (($24 | 0) != -1) {
   $27 = HEAP8[$20 + 765 >> 0] | 0;
   if (($27 & 255) >= 2) {
    label = 19;
    break;
   }
   __ZN5Oryol5_priv10glRenderer11bindTextureEijj($this, $24, HEAP32[$20 + 748 >> 2] | 0, HEAP32[$20 + 768 + (($27 & 255) << 2) >> 2] | 0);
  }
  $i1$05 = $i1$05 + 1 | 0;
  if (($i1$05 | 0) >= ($numTextures | 0)) {
   label = 22;
   break;
  }
 }
 if ((label | 0) == 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 71781);
  _abort();
 } else if ((label | 0) == 19) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 67423);
  _abort();
 } else if ((label | 0) == 22) return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE5SetupEti($this, $resType, $poolSize) {
 $this = $this | 0;
 $resType = $resType | 0;
 $poolSize = $poolSize | 0;
 var $11 = 0, $17 = 0, $18 = 0, $23 = 0, $24 = 0, $28 = 0, $30 = 0, $5 = 0, $i$02 = 0, $storemerge1 = 0, label = 0;
 if (HEAP8[$this >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48917, 98, 50729);
  _abort();
 }
 if ($resType << 16 >> 16 == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(49130, 0, 48917, 99, 50729);
  _abort();
 }
 if (($poolSize | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(49157, 0, 48917, 100, 50729);
  _abort();
 }
 HEAP16[$this + 12 >> 1] = $resType;
 $5 = $this + 16 | 0;
 $11 = (HEAP32[$this + 28 >> 2] | 0) - (HEAP32[$this + 24 >> 2] | 0) + $poolSize | 0;
 if (($11 | 0) > (HEAP32[$this + 20 >> 2] | 0)) __ZN5Oryol5_priv13elementBufferINS0_8pipelineEE5allocEii($5, $11, 0);
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 $17 = $this + 40 | 0;
 $18 = $this + 52 | 0;
 $23 = (HEAP32[$18 >> 2] | 0) - (HEAP32[$this + 48 >> 2] | 0) + $poolSize | 0;
 $24 = $this + 44 | 0;
 if (($23 | 0) > (HEAP32[$24 >> 2] | 0)) {
  __ZN5Oryol5_priv13elementBufferItE5allocEii($17, $23, 0);
  $i$02 = 0;
 } else $i$02 = 0;
 do {
  __ZN5Oryol5ArrayINS_5_priv8pipelineEE3AddIJEEEvDpOT_($5);
  $i$02 = $i$02 + 1 | 0;
 } while (($i$02 | 0) != ($poolSize | 0));
 $storemerge1 = 0;
 while (1) {
  __ZN5Oryol5QueueItE12checkEnqueueEv($17);
  $28 = HEAP32[$17 >> 2] | 0;
  if (!$28) {
   label = 16;
   break;
  }
  $30 = HEAP32[$18 >> 2] | 0;
  if (($30 | 0) >= (HEAP32[$24 >> 2] | 0)) {
   label = 16;
   break;
  }
  HEAP32[$18 >> 2] = $30 + 1;
  HEAP16[$28 + ($30 << 1) >> 1] = $storemerge1;
  $storemerge1 = $storemerge1 + 1 << 16 >> 16;
  if (($storemerge1 & 65535 | 0) >= ($poolSize | 0)) {
   label = 13;
   break;
  }
 }
 if ((label | 0) == 13) {
  HEAP8[$this >> 0] = 1;
  return;
 } else if ((label | 0) == 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
}

function __ZN4yakc13kc85_snapshot15apply_exp_stateERKNS0_7state_tERNS_4kc85E($state, $kc) {
 $state = $state | 0;
 $kc = $kc | 0;
 var $0 = 0, $1 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $33 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $48 = 0, $5 = 0, label = 0;
 $0 = $kc + 462872 | 0;
 $1 = $kc + 463128 | 0;
 $2 = $kc + 463168 | 0;
 $3 = $kc + 65908 | 0;
 $4 = $state + 176 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 if ((HEAP8[$1 >> 0] | 0) == $5 << 24 >> 24) $11 = 0; else if ((HEAP8[$2 >> 0] | 0) == $5 << 24 >> 24) $11 = 1; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 if ((HEAP8[$kc + 463128 + ($11 * 40 | 0) + 12 >> 0] | 0) == -1) $17 = $5; else {
  __ZN4yakc8kc85_exp13remove_moduleEhRNS_6memoryE($0, $5, $3);
  $17 = HEAP8[$4 >> 0] | 0;
 }
 __ZN4yakc8kc85_exp13insert_moduleEhNS0_11module_typeE($0, $17, HEAPU8[$state + 177 >> 0] | 0);
 $18 = HEAP8[$4 >> 0] | 0;
 $20 = HEAP8[$state + 178 >> 0] | 0;
 $21 = HEAP8[$1 >> 0] | 0;
 if ($21 << 24 >> 24 == $18 << 24 >> 24) {
  $26 = 0;
  label = 8;
 } else if ((HEAP8[$2 >> 0] | 0) == $18 << 24 >> 24) {
  $26 = 1;
  label = 8;
 }
 if ((label | 0) == 8) HEAP8[$kc + 463128 + ($26 * 40 | 0) + 38 >> 0] = $20;
 $27 = $state + 180 | 0;
 $28 = HEAP8[$27 >> 0] | 0;
 if ($21 << 24 >> 24 == $28 << 24 >> 24) $33 = 0; else if ((HEAP8[$2 >> 0] | 0) == $28 << 24 >> 24) $33 = 1; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 if ((HEAP8[$kc + 463128 + ($33 * 40 | 0) + 12 >> 0] | 0) == -1) $39 = $28; else {
  __ZN4yakc8kc85_exp13remove_moduleEhRNS_6memoryE($0, $28, $3);
  $39 = HEAP8[$27 >> 0] | 0;
 }
 __ZN4yakc8kc85_exp13insert_moduleEhNS0_11module_typeE($0, $39, HEAPU8[$state + 181 >> 0] | 0);
 $40 = HEAP8[$27 >> 0] | 0;
 $42 = HEAP8[$state + 182 >> 0] | 0;
 if ((HEAP8[$1 >> 0] | 0) == $40 << 24 >> 24) $48 = 0; else if ((HEAP8[$2 >> 0] | 0) == $40 << 24 >> 24) $48 = 1; else return;
 HEAP8[$kc + 463128 + ($48 * 40 | 0) + 38 >> 0] = $42;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE5SetupEti($this, $resType, $poolSize) {
 $this = $this | 0;
 $resType = $resType | 0;
 $poolSize = $poolSize | 0;
 var $11 = 0, $17 = 0, $18 = 0, $23 = 0, $24 = 0, $28 = 0, $30 = 0, $5 = 0, $i$02 = 0, $storemerge1 = 0, label = 0;
 if (HEAP8[$this >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48917, 98, 50266);
  _abort();
 }
 if ($resType << 16 >> 16 == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(49130, 0, 48917, 99, 50266);
  _abort();
 }
 if (($poolSize | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(49157, 0, 48917, 100, 50266);
  _abort();
 }
 HEAP16[$this + 12 >> 1] = $resType;
 $5 = $this + 16 | 0;
 $11 = (HEAP32[$this + 28 >> 2] | 0) - (HEAP32[$this + 24 >> 2] | 0) + $poolSize | 0;
 if (($11 | 0) > (HEAP32[$this + 20 >> 2] | 0)) __ZN5Oryol5_priv13elementBufferINS0_7textureEE5allocEii($5, $11, 0);
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 $17 = $this + 40 | 0;
 $18 = $this + 52 | 0;
 $23 = (HEAP32[$18 >> 2] | 0) - (HEAP32[$this + 48 >> 2] | 0) + $poolSize | 0;
 $24 = $this + 44 | 0;
 if (($23 | 0) > (HEAP32[$24 >> 2] | 0)) {
  __ZN5Oryol5_priv13elementBufferItE5allocEii($17, $23, 0);
  $i$02 = 0;
 } else $i$02 = 0;
 do {
  __ZN5Oryol5ArrayINS_5_priv7textureEE3AddIJEEEvDpOT_($5);
  $i$02 = $i$02 + 1 | 0;
 } while (($i$02 | 0) != ($poolSize | 0));
 $storemerge1 = 0;
 while (1) {
  __ZN5Oryol5QueueItE12checkEnqueueEv($17);
  $28 = HEAP32[$17 >> 2] | 0;
  if (!$28) {
   label = 16;
   break;
  }
  $30 = HEAP32[$18 >> 2] | 0;
  if (($30 | 0) >= (HEAP32[$24 >> 2] | 0)) {
   label = 16;
   break;
  }
  HEAP32[$18 >> 2] = $30 + 1;
  HEAP16[$28 + ($30 << 1) >> 1] = $storemerge1;
  $storemerge1 = $storemerge1 + 1 << 16 >> 16;
  if (($storemerge1 & 65535 | 0) >= ($poolSize | 0)) {
   label = 13;
   break;
  }
 }
 if ((label | 0) == 13) {
  HEAP8[$this >> 0] = 1;
  return;
 } else if ((label | 0) == 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
}

function __ZL23AddWindowToSortedBufferR8ImVectorIP11ImGuiWindowES1_($out_sorted_windows, $window) {
 $out_sorted_windows = $out_sorted_windows | 0;
 $window = $window | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $24 = 0, $26 = 0, $32 = 0, $39 = 0, $40 = 0, $45 = 0, $5 = 0, $50 = 0, $i$01 = 0, label = 0;
 $0 = $window;
 $1 = HEAP32[$out_sorted_windows >> 2] | 0;
 $2 = $out_sorted_windows + 4 | 0;
 if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 + 1 | 0;
  if (!$1) $10 = 8; else $10 = (($1 | 0) / 2 | 0) + $1 | 0;
  $11 = ($10 | 0) > ($5 | 0) ? $10 : $5;
  if (($1 | 0) < ($11 | 0)) {
   $14 = 147664;
   HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 1;
   $19 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($11 << 2) | 0;
   $20 = $out_sorted_windows + 8 | 0;
   _memcpy($19 | 0, HEAP32[$20 >> 2] | 0, HEAP32[$out_sorted_windows >> 2] << 2 | 0) | 0;
   $24 = HEAP32[$20 >> 2] | 0;
   if ($24 | 0) {
    $26 = 147664;
    HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($24);
   HEAP32[$20 >> 2] = $19;
   HEAP32[$2 >> 2] = $11;
   $32 = HEAP32[$out_sorted_windows >> 2] | 0;
  } else $32 = $1;
 } else $32 = $1;
 HEAP32[$out_sorted_windows >> 2] = $32 + 1;
 HEAP32[(HEAP32[$out_sorted_windows + 8 >> 2] | 0) + ($32 << 2) >> 2] = $0;
 if (!(HEAP8[$window + 112 >> 0] | 0)) return;
 $39 = $window + 248 | 0;
 $40 = HEAP32[$39 >> 2] | 0;
 if (($40 | 0) > 1) _qsort(HEAP32[$window + 256 >> 2] | 0, $40, 4, 20); else if (($40 | 0) <= 0) return;
 $45 = $window + 256 | 0;
 $i$01 = 0;
 while (1) {
  if ((HEAP32[$39 >> 2] | 0) <= ($i$01 | 0)) {
   label = 14;
   break;
  }
  $50 = HEAP32[(HEAP32[$45 >> 2] | 0) + ($i$01 << 2) >> 2] | 0;
  if (HEAP8[$50 + 112 >> 0] | 0) __ZL23AddWindowToSortedBufferR8ImVectorIP11ImGuiWindowES1_($out_sorted_windows, $50);
  $i$01 = $i$01 + 1 | 0;
  if (($i$01 | 0) >= ($40 | 0)) {
   label = 18;
   break;
  }
 }
 if ((label | 0) == 14) ___assert_fail(127217, 127226, 805, 127272); else if ((label | 0) == 18) return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE5SetupEti($this, $resType, $poolSize) {
 $this = $this | 0;
 $resType = $resType | 0;
 $poolSize = $poolSize | 0;
 var $11 = 0, $17 = 0, $18 = 0, $23 = 0, $24 = 0, $28 = 0, $30 = 0, $5 = 0, $i$02 = 0, $storemerge1 = 0, label = 0;
 if (HEAP8[$this >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48917, 98, 49813);
  _abort();
 }
 if ($resType << 16 >> 16 == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(49130, 0, 48917, 99, 49813);
  _abort();
 }
 if (($poolSize | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(49157, 0, 48917, 100, 49813);
  _abort();
 }
 HEAP16[$this + 12 >> 1] = $resType;
 $5 = $this + 16 | 0;
 $11 = (HEAP32[$this + 28 >> 2] | 0) - (HEAP32[$this + 24 >> 2] | 0) + $poolSize | 0;
 if (($11 | 0) > (HEAP32[$this + 20 >> 2] | 0)) __ZN5Oryol5_priv13elementBufferINS0_6shaderEE5allocEii($5, $11, 0);
 HEAP32[$this + 32 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 $17 = $this + 40 | 0;
 $18 = $this + 52 | 0;
 $23 = (HEAP32[$18 >> 2] | 0) - (HEAP32[$this + 48 >> 2] | 0) + $poolSize | 0;
 $24 = $this + 44 | 0;
 if (($23 | 0) > (HEAP32[$24 >> 2] | 0)) {
  __ZN5Oryol5_priv13elementBufferItE5allocEii($17, $23, 0);
  $i$02 = 0;
 } else $i$02 = 0;
 do {
  __ZN5Oryol5ArrayINS_5_priv6shaderEE3AddIJEEEvDpOT_($5);
  $i$02 = $i$02 + 1 | 0;
 } while (($i$02 | 0) != ($poolSize | 0));
 $storemerge1 = 0;
 while (1) {
  __ZN5Oryol5QueueItE12checkEnqueueEv($17);
  $28 = HEAP32[$17 >> 2] | 0;
  if (!$28) {
   label = 16;
   break;
  }
  $30 = HEAP32[$18 >> 2] | 0;
  if (($30 | 0) >= (HEAP32[$24 >> 2] | 0)) {
   label = 16;
   break;
  }
  HEAP32[$18 >> 2] = $30 + 1;
  HEAP16[$28 + ($30 << 1) >> 1] = $storemerge1;
  $storemerge1 = $storemerge1 + 1 << 16 >> 16;
  if (($storemerge1 & 65535 | 0) >= ($poolSize | 0)) {
   label = 13;
   break;
  }
 }
 if ((label | 0) == 13) {
  HEAP8[$this >> 0] = 1;
  return;
 } else if ((label | 0) == 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
}

function __ZN5Oryol5_priv13elementBufferINS_3PtrINS_14ResourceLoaderEEEE13moveEraseBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $37 = 0, $4 = 0, $6 = 0, $9 = 0, $i$04 = 0, $i$04$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 52288);
  _abort();
 }
 $3 = $this + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$this + 8 >> 2] | 0;
 if (($4 - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 52288);
  _abort();
 }
 $9 = $6 + $index | 0;
 $10 = $4 + -1 | 0;
 if (($9 | 0) < ($10 | 0)) {
  $23 = $0;
  $37 = $4;
  $i$04 = $9;
  while (1) {
   $i$04$looptemp = $i$04;
   $i$04 = $i$04 + 1 | 0;
   $22 = $23 + ($i$04 << 2) | 0;
   $24 = HEAP32[$22 >> 2] | 0;
   $25 = $23 + ($i$04$looptemp << 2) | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   if (($24 | 0) == ($26 | 0)) $29 = $37; else {
    if (!$26) $$pre6 = $37; else {
     $32 = $26 + 4 | 0;
     $33 = HEAP32[$32 >> 2] | 0;
     HEAP32[$32 >> 2] = $33 - 1;
     if (($33 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$26 >> 2] >> 2] & 255]($26);
     HEAP32[$25 >> 2] = 0;
     $$pre6 = HEAP32[$3 >> 2] | 0;
    }
    HEAP32[$25 >> 2] = $24;
    HEAP32[$22 >> 2] = 0;
    $29 = $$pre6;
   }
   $28 = $29 + -1 | 0;
   $$pre = HEAP32[$this >> 2] | 0;
   if (($i$04 | 0) >= ($28 | 0)) {
    $$lcssa = $28;
    $13 = $$pre;
    break;
   } else {
    $23 = $$pre;
    $37 = $29;
   }
  }
 } else {
  $$lcssa = $10;
  $13 = $0;
 }
 HEAP32[$3 >> 2] = $$lcssa;
 $12 = $13 + ($$lcssa << 2) | 0;
 $14 = HEAP32[$12 >> 2] | 0;
 if (!$14) return;
 $16 = $14 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = $17 - 1;
 if (($17 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$14 >> 2] >> 2] & 255]($14);
 HEAP32[$12 >> 2] = 0;
 return;
}

function __ZN15MemoryMapWindow8drawRectEitjPKcNS_4typeE($this, $layer, $addr, $len, $tooltip, $t) {
 $this = $this | 0;
 $layer = $layer | 0;
 $addr = $addr | 0;
 $len = $len | 0;
 $tooltip = $tooltip | 0;
 $t = $t | 0;
 var $21 = 0.0, $26 = 0.0, $a = 0, $b = 0, $canvas_pos = 0, $color$0 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $canvas_pos = sp + 24 | 0;
 $a = sp + 16 | 0;
 $b = sp + 8 | 0;
 if (!(HEAP8[146488] | 0)) if (___cxa_guard_acquire(146488) | 0) {
  HEAPF32[36680] = .25;
  HEAPF32[36681] = .25;
  HEAPF32[36682] = .25;
  HEAPF32[36683] = 1.0;
 }
 if (!(HEAP8[146496] | 0)) if (___cxa_guard_acquire(146496) | 0) {
  HEAPF32[36684] = 0.0;
  HEAPF32[36685] = 1.0;
  HEAPF32[36686] = 0.0;
  HEAPF32[36687] = 1.0;
 }
 if (!(HEAP8[146504] | 0)) if (___cxa_guard_acquire(146504) | 0) {
  HEAPF32[36688] = 0.0;
  HEAPF32[36689] = .5;
  HEAPF32[36690] = 0.0;
  HEAPF32[36691] = 1.0;
 }
 switch ($t | 0) {
 case 0:
  {
   $color$0 = __ZN5ImGui23ColorConvertFloat4ToU32ERK6ImVec4(146720) | 0;
   break;
  }
 case 1:
  {
   $color$0 = __ZN5ImGui23ColorConvertFloat4ToU32ERK6ImVec4(146736) | 0;
   break;
  }
 case 2:
  {
   $color$0 = __ZN5ImGui23ColorConvertFloat4ToU32ERK6ImVec4(146752) | 0;
   break;
  }
 default:
  $color$0 = 0;
 }
 __ZN5ImGui18GetCursorScreenPosEv($canvas_pos);
 $21 = +((($addr & 65535) / 160 | 0) & 65535) + +HEAPF32[$canvas_pos >> 2] + 80.0 + 3.0;
 $26 = +($layer * 20 | 0) + +HEAPF32[$canvas_pos + 4 >> 2] + 2.0;
 HEAPF32[$a >> 2] = $21;
 HEAPF32[$a + 4 >> 2] = $26;
 HEAPF32[$b >> 2] = +(($len >>> 0) / 160 | 0 | 0) + $21 + -5.0;
 HEAPF32[$b + 4 >> 2] = $26 + 20.0 + -4.0;
 __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi(__ZN5ImGui17GetWindowDrawListEv() | 0, $a, $b, $color$0, 0.0, 15);
 if (!(($tooltip | 0) != 0 & (__ZN5ImGui19IsMouseHoveringRectERK6ImVec2S2_b($a, $b, 1) | 0))) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$vararg_buffer >> 2] = $tooltip;
 __ZN5ImGui10SetTooltipEPKcz(124291, $vararg_buffer);
 STACKTOP = sp;
 return;
}

function __Z6ImHashPKvij($data, $data_size, $seed) {
 $data = $data | 0;
 $data_size = $data_size | 0;
 $seed = $seed | 0;
 var $$09 = 0, $$pn = 0, $12 = 0, $17 = 0, $2 = 0, $22 = 0, $27 = 0, $32 = 0, $44 = 0, $46 = 0, $57 = 0, $61 = 0, $63 = 0, $7 = 0, $73 = 0, $75 = 0, $76 = 0, $crc1$07 = 0, $crc1$110 = 0, $crc1$2 = 0, $crc1$4 = 0, $current$08 = 0, $i$016 = 0, $$pn$looptemp = 0;
 if (!(HEAP32[40410] | 0)) {
  $i$016 = 0;
  do {
   $2 = $i$016 >>> 1;
   $7 = (0 - ($i$016 & 1) & -306674912 ^ $2) >>> 1;
   $12 = (0 - ($2 & 1) & -306674912 ^ $7) >>> 1;
   $17 = (0 - ($7 & 1) & -306674912 ^ $12) >>> 1;
   $22 = (0 - ($12 & 1) & -306674912 ^ $17) >>> 1;
   $27 = (0 - ($17 & 1) & -306674912 ^ $22) >>> 1;
   $32 = (0 - ($22 & 1) & -306674912 ^ $27) >>> 1;
   HEAP32[161636 + ($i$016 << 2) >> 2] = 0 - ($32 & 1) & -306674912 ^ (0 - ($27 & 1) & -306674912 ^ $32) >>> 1;
   $i$016 = $i$016 + 1 | 0;
  } while (($i$016 | 0) != 256);
 }
 $44 = ~$seed;
 if (($data_size | 0) > 0) {
  $$09 = $data_size;
  $crc1$07 = $44;
  $current$08 = $data;
  while (1) {
   $$09 = $$09 + -1 | 0;
   $57 = HEAP32[161636 + ((HEAPU8[$current$08 >> 0] ^ $crc1$07 & 255) << 2) >> 2] ^ $crc1$07 >>> 8;
   if (!$$09) {
    $crc1$4 = $57;
    break;
   } else {
    $crc1$07 = $57;
    $current$08 = $current$08 + 1 | 0;
   }
  }
  $76 = ~$crc1$4;
  return $76 | 0;
 }
 $46 = HEAP8[$data >> 0] | 0;
 if (!($46 << 24 >> 24)) {
  $crc1$4 = $44;
  $76 = ~$crc1$4;
  return $76 | 0;
 } else {
  $$pn = $data;
  $61 = $46;
  $crc1$110 = $44;
 }
 while (1) {
  $$pn$looptemp = $$pn;
  $$pn = $$pn + 1 | 0;
  $63 = HEAP8[$$pn >> 0] | 0;
  if ($61 << 24 >> 24 == 35 & $63 << 24 >> 24 == 35) {
   $75 = 35;
   $crc1$2 = (HEAP8[$$pn$looptemp + 2 >> 0] | 0) == 35 ? $44 : $crc1$110;
  } else {
   $75 = $63;
   $crc1$2 = $crc1$110;
  }
  $73 = $crc1$2 >>> 8 ^ HEAP32[161636 + (($crc1$2 & 255 ^ $61 & 255) << 2) >> 2];
  if (!($75 << 24 >> 24)) {
   $crc1$4 = $73;
   break;
  } else {
   $61 = $75;
   $crc1$110 = $73;
  }
 }
 $76 = ~$crc1$4;
 return $76 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_3PtrI10WindowBaseEEE13moveEraseBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $37 = 0, $4 = 0, $6 = 0, $9 = 0, $i$04 = 0, $i$04$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 34820);
  _abort();
 }
 $3 = $this + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$this + 8 >> 2] | 0;
 if (($4 - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 34820);
  _abort();
 }
 $9 = $6 + $index | 0;
 $10 = $4 + -1 | 0;
 if (($9 | 0) < ($10 | 0)) {
  $23 = $0;
  $37 = $4;
  $i$04 = $9;
  while (1) {
   $i$04$looptemp = $i$04;
   $i$04 = $i$04 + 1 | 0;
   $22 = $23 + ($i$04 << 2) | 0;
   $24 = HEAP32[$22 >> 2] | 0;
   $25 = $23 + ($i$04$looptemp << 2) | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   if (($24 | 0) == ($26 | 0)) $29 = $37; else {
    if (!$26) $$pre6 = $37; else {
     $32 = $26 + 4 | 0;
     $33 = HEAP32[$32 >> 2] | 0;
     HEAP32[$32 >> 2] = $33 - 1;
     if (($33 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$26 >> 2] >> 2] & 255]($26);
     HEAP32[$25 >> 2] = 0;
     $$pre6 = HEAP32[$3 >> 2] | 0;
    }
    HEAP32[$25 >> 2] = $24;
    HEAP32[$22 >> 2] = 0;
    $29 = $$pre6;
   }
   $28 = $29 + -1 | 0;
   $$pre = HEAP32[$this >> 2] | 0;
   if (($i$04 | 0) >= ($28 | 0)) {
    $$lcssa = $28;
    $13 = $$pre;
    break;
   } else {
    $23 = $$pre;
    $37 = $29;
   }
  }
 } else {
  $$lcssa = $10;
  $13 = $0;
 }
 HEAP32[$3 >> 2] = $$lcssa;
 $12 = $13 + ($$lcssa << 2) | 0;
 $14 = HEAP32[$12 >> 2] | 0;
 if (!$14) return;
 $16 = $14 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = $17 - 1;
 if (($17 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$14 >> 2] >> 2] & 255]($14);
 HEAP32[$12 >> 2] = 0;
 return;
}

function __ZN7YakcApp11handleInputEv($this) {
 $this = $this | 0;
 var $$lcssa30 = 0, $0 = 0, $1 = 0, $15 = 0, $17 = 0, $40 = 0, $51 = 0, $__begin$09 = 0, $__begin$09$lcssa28 = 0, $ascii$0 = 0, $ascii$0$in = 0, $ascii$1 = 0, $ascii$5 = 0, label = 0;
 $0 = __ZN5Oryol5Input8KeyboardEv() | 0;
 $1 = __ZN5Oryol5Input8TouchpadEv() | 0;
 if (HEAP8[(__ZN5ImGui5GetIOEv() | 0) + 759 >> 0] | 0) return;
 if (!(HEAP32[$0 + 8 >> 2] & 2097152)) {
  if (HEAP8[$1 + 2 >> 0] | 0) label = 4;
 } else label = 4;
 if ((label | 0) == 4) __ZN2UI6ToggleEv($this + 853056 | 0);
 $15 = HEAP32[$0 + 72 >> 2] | 0;
 if (($15 + -32 | 0) >>> 0 < 95) {
  $17 = $15 & 255;
  if (!(_islower($17) | 0)) if (!(_isupper($17) | 0)) $ascii$0$in = $15; else $ascii$0$in = _tolower($17) | 0; else $ascii$0$in = _toupper($17) | 0;
  $ascii$0 = $ascii$0$in & 255;
  if (!($ascii$0 << 24 >> 24)) label = 11; else $ascii$1 = $ascii$0;
 } else label = 11;
 do if ((label | 0) == 11) {
  if (!(HEAP32[$0 + 36 >> 2] | 0)) if (!(HEAP32[$0 + 40 >> 2] | 0)) if (!(HEAP32[$0 + 44 >> 2] | 0)) if (!(HEAP32[$0 + 48 >> 2] & 33554431)) {
   $ascii$1 = 0;
   break;
  }
  $ascii$1 = HEAP8[$this + 38 >> 0] | 0;
 } while (0);
 HEAP8[$this + 38 >> 0] = $ascii$1;
 $__begin$09 = 112;
 while (1) {
  $40 = HEAP32[$__begin$09 >> 2] | 0;
  if ($40 >>> 0 >= 121) {
   label = 18;
   break;
  }
  if (HEAP32[$0 + 36 + ($40 >>> 5 << 2) >> 2] & 1 << ($40 & 31) | 0) {
   $$lcssa30 = $40;
   $__begin$09$lcssa28 = $__begin$09;
   label = 20;
   break;
  }
  $__begin$09 = $__begin$09 + 8 | 0;
  if (($__begin$09 | 0) == 264) {
   $ascii$5 = $ascii$1;
   break;
  }
 }
 if ((label | 0) == 18) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(81122, 0, 81157, 118, 16350);
  _abort();
 }
 if ((label | 0) == 20) {
  $51 = HEAP32[$0 + 48 >> 2] & 65536;
  if (($$lcssa30 | 0) == 54 & ($51 | 0) != 0) $ascii$5 = 12; else if (($51 | 0) != 0 & ($$lcssa30 | 0) == 51) $ascii$5 = 19; else $ascii$5 = HEAP8[$__begin$09$lcssa28 + 4 >> 0] | 0;
 }
 HEAP8[$this + 725564 >> 0] = $ascii$5;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE15moveInsertFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $10 = 0, $13 = 0, $18 = 0, $19 = 0, $2 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $43 = 0, $45 = 0, $i$01 = 0, $i$01$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 113829);
  _abort();
 }
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 113829);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 113829);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - $3 | 0) < ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 113829);
  _abort();
 }
 $10 = $3 + -1 | 0;
 $13 = $0 + ($3 << 4) | 0;
 $18 = HEAP32[$13 + 4 >> 2] | 0;
 $19 = $0 + ($10 << 4) | 0;
 HEAP32[$19 >> 2] = HEAP32[$13 >> 2];
 HEAP32[$19 + 4 >> 2] = $18;
 HEAP32[$0 + ($10 << 4) + 8 >> 2] = HEAP32[$0 + ($3 << 4) + 8 >> 2];
 $26 = $index + -1 | 0;
 if (($3 | 0) >= ($26 + $3 | 0)) {
  $$lcssa = $3;
  $32 = $$lcssa + -1 | 0;
  HEAP32[$2 >> 2] = $32;
  $33 = $32 + $index | 0;
  $34 = HEAP32[$this >> 2] | 0;
  $35 = $34 + ($33 << 4) | 0;
  return $35 | 0;
 }
 $29 = HEAP32[$this >> 2] | 0;
 $30 = HEAP32[$2 >> 2] | 0;
 $31 = $26 + $30 | 0;
 $i$01 = $3;
 do {
  $i$01$looptemp = $i$01;
  $i$01 = $i$01 + 1 | 0;
  $38 = $29 + ($i$01 << 4) | 0;
  $43 = HEAP32[$38 + 4 >> 2] | 0;
  $45 = $29 + ($i$01$looptemp << 4) | 0;
  HEAP32[$45 >> 2] = HEAP32[$38 >> 2];
  HEAP32[$45 + 4 >> 2] = $43;
  HEAP32[$29 + ($i$01$looptemp << 4) + 8 >> 2] = HEAP32[$29 + ($i$01 << 4) + 8 >> 2];
 } while (($i$01 | 0) < ($31 | 0));
 $$lcssa = $30;
 $32 = $$lcssa + -1 | 0;
 HEAP32[$2 >> 2] = $32;
 $33 = $32 + $index | 0;
 $34 = HEAP32[$this >> 2] | 0;
 $35 = $34 + ($33 << 4) | 0;
 return $35 | 0;
}

function __ZN5Oryol5QueueINS_3PtrINS_5_priv5ioMsgEEEE12checkEnqueueEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $22 = 0, $23 = 0, $3 = 0, $30 = 0, $32 = 0, $35 = 0, $8 = 0, $from$01$i4 = 0, $growBy$0$i = 0, $i$03$i2 = 0, $to$02$i3 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($1 | 0) == ($3 | 0)) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  $10 = 0;
  $8 = 0;
 } else {
  $10 = $3;
  $8 = $1;
 }
 if ((HEAP32[$this + 4 >> 2] | 0) != ($8 | 0)) return;
 if (($10 | 0) <= 0) {
  $30 = $8 >> 1;
  $32 = HEAP32[$this + 16 >> 2] | 0;
  if (($30 | 0) < ($32 | 0)) $growBy$0$i = $32; else {
   $35 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($30 | 0) > ($35 | 0) ? $35 : $30;
  }
  if (($growBy$0$i | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 105992, 136, 106164);
   _abort();
  }
  __ZN5Oryol5_priv13elementBufferINS_3PtrINS0_5ioMsgEEEE5allocEii($this, $growBy$0$i + $8 | 0, 0);
  return;
 }
 $11 = $8 - $10 | 0;
 if (($11 | 0) > 0) {
  $13 = HEAP32[$this >> 2] | 0;
  if (!$13) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105975, 0, 105992, 146, 106056);
   _abort();
  }
  $from$01$i4 = $13 + ($10 << 2) | 0;
  $i$03$i2 = 0;
  $to$02$i3 = $13;
  while (1) {
   $16 = HEAP32[$from$01$i4 >> 2] | 0;
   HEAP32[$to$02$i3 >> 2] = $16;
   if ($16 | 0) {
    $18 = $16 + 4 | 0;
    HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
   }
   $20 = HEAP32[$from$01$i4 >> 2] | 0;
   if ($20 | 0) {
    $22 = $20 + 4 | 0;
    $23 = HEAP32[$22 >> 2] | 0;
    HEAP32[$22 >> 2] = $23 - 1;
    if (($23 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$20 >> 2] >> 2] & 255]($20);
    HEAP32[$from$01$i4 >> 2] = 0;
   }
   $i$03$i2 = $i$03$i2 + 1 | 0;
   if (($i$03$i2 | 0) == ($11 | 0)) break; else {
    $from$01$i4 = $from$01$i4 + 4 | 0;
    $to$02$i3 = $to$02$i3 + 4 | 0;
   }
  }
 }
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 >> 2] = $11;
 return;
}

function __ZN5Oryol5_priv14displayMgrBase12SetupDisplayERKNS_8GfxSetupERKNS0_11gfxPointersE($this, $setup, $ptrs) {
 $this = $this | 0;
 $setup = $setup | 0;
 $ptrs = $ptrs | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 $1 = $this + 228 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  HEAP8[$1 >> 0] = 1;
  HEAP32[$this >> 2] = HEAP32[$setup >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$setup + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$setup + 8 >> 2];
  HEAP32[$this + 12 >> 2] = HEAP32[$setup + 12 >> 2];
  HEAP32[$this + 16 >> 2] = HEAP32[$setup + 16 >> 2];
  HEAP32[$this + 20 >> 2] = HEAP32[$setup + 20 >> 2];
  HEAP32[$this + 24 >> 2] = HEAP32[$setup + 24 >> 2];
  __ZN5Oryol6StringaSERKS0_($this + 28 | 0, $setup + 28 | 0);
  dest = $this + 36 | 0;
  src = $setup + 36 | 0;
  stop = dest + 80 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  __ZNK5Oryol8GfxSetup15GetDisplayAttrsEv($0, $setup);
  dest = $this + 116 | 0;
  src = $0;
  stop = dest + 44 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  $10 = $0 + 44 | 0;
  __ZN5Oryol6StringaSEOS0_($this + 160 | 0, $10);
  __ZN5Oryol6StringD2Ev($10);
  $11 = $this + 200 | 0;
  HEAP32[$11 >> 2] = HEAP32[$ptrs >> 2];
  HEAP32[$11 + 4 >> 2] = HEAP32[$ptrs + 4 >> 2];
  HEAP32[$11 + 8 >> 2] = HEAP32[$ptrs + 8 >> 2];
  HEAP32[$11 + 12 >> 2] = HEAP32[$ptrs + 12 >> 2];
  HEAP32[$11 + 16 >> 2] = HEAP32[$ptrs + 16 >> 2];
  HEAP32[$11 + 20 >> 2] = HEAP32[$ptrs + 20 >> 2];
  HEAP32[$11 + 24 >> 2] = HEAP32[$ptrs + 24 >> 2];
  HEAP32[$this + 232 >> 2] = HEAP32[$this + 132 >> 2];
  HEAP32[$this + 236 >> 2] = HEAP32[$this + 136 >> 2];
  STACKTOP = sp;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(46432, 0, 46452, 34, 46567);
  _abort();
 }
}

function __ZN5Oryol5_priv13elementBufferIiE14moveInsertBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $32 = 0, $9 = 0, $i$0 = 0, $i$0$in2 = 0, $i$0$in2$phi = 0, $i$01 = 0, $i$03 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 120414);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 120414);
  _abort();
 }
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 120414);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 120414);
  _abort();
 }
 $9 = $this + 8 | 0;
 if (($3 - (HEAP32[$9 >> 2] | 0) | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 120414);
  _abort();
 }
 HEAP32[$0 + ($3 << 2) >> 2] = HEAP32[$0 + ($3 + -1 << 2) >> 2];
 $17 = HEAP32[$2 >> 2] | 0;
 $i$01 = $17 + -1 | 0;
 $18 = HEAP32[$9 >> 2] | 0;
 if (($i$01 | 0) <= ($18 + $index | 0)) {
  $23 = $17;
  $25 = $18;
  $22 = $23 + 1 | 0;
  HEAP32[$2 >> 2] = $22;
  $24 = $25 + $index | 0;
  $26 = HEAP32[$this >> 2] | 0;
  $27 = $26 + ($24 << 2) | 0;
  return $27 | 0;
 }
 $21 = HEAP32[$this >> 2] | 0;
 $i$0$in2 = $17;
 $i$03 = $i$01;
 while (1) {
  HEAP32[$21 + ($i$03 << 2) >> 2] = HEAP32[$21 + ($i$0$in2 + -2 << 2) >> 2];
  $i$0 = $i$03 + -1 | 0;
  $32 = HEAP32[$9 >> 2] | 0;
  if (($i$0 | 0) > ($32 + $index | 0)) {
   $i$0$in2$phi = $i$03;
   $i$03 = $i$0;
   $i$0$in2 = $i$0$in2$phi;
  } else {
   $$lcssa = $32;
   break;
  }
 }
 $23 = HEAP32[$2 >> 2] | 0;
 $25 = $$lcssa;
 $22 = $23 + 1 | 0;
 HEAP32[$2 >> 2] = $22;
 $24 = $25 + $index | 0;
 $26 = HEAP32[$this >> 2] | 0;
 $27 = $26 + ($24 << 2) | 0;
 return $27 | 0;
}

function __ZN5ImGui11RenderFrameE6ImVec2S0_jbf($p_min, $p_max, $fill_col, $border, $rounding) {
 $p_min = $p_min | 0;
 $p_max = $p_max | 0;
 $fill_col = $fill_col | 0;
 $border = $border | 0;
 $rounding = +$rounding;
 var $0 = 0, $1 = 0, $11 = 0, $13 = 0.0, $16 = 0.0, $19 = 0.0, $21 = 0.0, $23 = 0.0, $28 = 0.0, $3 = 0, $5 = 0, $54 = 0.0, $56 = 0.0, $58 = 0.0, $63 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $3 = HEAP32[38201] | 0;
 HEAP8[$3 + 114 >> 0] = 1;
 $5 = $3 + 572 | 0;
 __ZN10ImDrawList13AddRectFilledERK6ImVec2S2_jfi(HEAP32[$5 >> 2] | 0, $p_min, $p_max, $fill_col, $rounding, 15);
 if (!$border) {
  STACKTOP = sp;
  return;
 }
 if (!(HEAP32[$3 + 8 >> 2] & 128)) {
  STACKTOP = sp;
  return;
 }
 $11 = HEAP32[$5 >> 2] | 0;
 $13 = +HEAPF32[$p_min + 4 >> 2] + 1.0;
 HEAPF32[$0 >> 2] = +HEAPF32[$p_min >> 2] + 1.0;
 HEAPF32[$0 + 4 >> 2] = $13;
 $16 = +HEAPF32[$p_max + 4 >> 2] + 1.0;
 HEAPF32[$1 >> 2] = +HEAPF32[$p_max >> 2] + 1.0;
 HEAPF32[$1 + 4 >> 2] = $16;
 $19 = +HEAPF32[38034];
 $21 = +HEAPF32[38035];
 $23 = +HEAPF32[38036];
 $28 = +HEAPF32[38037] * +HEAPF32[37984];
 __ZN10ImDrawList7AddRectERK6ImVec2S2_jfi($11, $0, $1, ($21 < 0.0 ? 0 : ~~(($21 > 1.0 ? 1.0 : $21) * 255.0 + .5) << 8) | ($19 < 0.0 ? 0 : ~~(($19 > 1.0 ? 1.0 : $19) * 255.0 + .5)) | ($23 < 0.0 ? 0 : ~~(($23 > 1.0 ? 1.0 : $23) * 255.0 + .5) << 16) | ($28 < 0.0 ? 0 : ~~(($28 > 1.0 ? 1.0 : $28) * 255.0 + .5) << 24), $rounding, 15);
 $54 = +HEAPF32[38030];
 $56 = +HEAPF32[38031];
 $58 = +HEAPF32[38032];
 $63 = +HEAPF32[38033] * +HEAPF32[37984];
 __ZN10ImDrawList7AddRectERK6ImVec2S2_jfi(HEAP32[$5 >> 2] | 0, $p_min, $p_max, ($56 < 0.0 ? 0 : ~~(($56 > 1.0 ? 1.0 : $56) * 255.0 + .5) << 8) | ($54 < 0.0 ? 0 : ~~(($54 > 1.0 ? 1.0 : $54) * 255.0 + .5)) | ($58 < 0.0 ? 0 : ~~(($58 > 1.0 ? 1.0 : $58) * 255.0 + .5) << 16) | ($63 < 0.0 ? 0 : ~~(($63 > 1.0 ? 1.0 : $63) * 255.0 + .5) << 24), $rounding, 15);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_13PipelineSetupEEENS_2IdERKT_($agg$result, $this, $setup) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $setup = $setup | 0;
 var $0 = 0, $1 = 0, $10 = 0, $16 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $26 = 0, $28 = 0, $31 = 0, $35 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 if (!(__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 48725, 272, 56042);
  _abort();
 }
 $4 = $this + 24 | 0;
 __ZNK5Oryol5_priv16resourceRegistry6LookupERKNS_7LocatorE($agg$result, $4, $setup);
 if ((HEAP32[$agg$result + 4 >> 2] | 0) != -1) {
  STACKTOP = sp;
  return;
 }
 $8 = $this + 464 | 0;
 __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE7AllocIdEv($0, $8);
 if (($0 | 0) == ($agg$result | 0)) {
  $10 = $agg$result;
  $28 = HEAP32[$10 >> 2] | 0;
  $31 = HEAP32[$10 + 4 >> 2] | 0;
 } else {
  $16 = $0;
  $18 = HEAP32[$16 >> 2] | 0;
  $21 = HEAP32[$16 + 4 >> 2] | 0;
  $22 = $agg$result;
  HEAP32[$22 >> 2] = $18;
  HEAP32[$22 + 4 >> 2] = $21;
  $28 = $18;
  $31 = $21;
 }
 $26 = $1;
 HEAP32[$26 >> 2] = $28;
 HEAP32[$26 + 4 >> 2] = $31;
 HEAP32[$2 >> 2] = __ZNK5Oryol21resourceContainerBase9peekLabelEv($this) | 0;
 __ZN5Oryol5_priv16resourceRegistry3AddERKNS_7LocatorENS_2IdENS_13ResourceLabelE($4, $setup, $1, $2);
 $35 = __ZN5Oryol5_priv17glPipelineFactory13SetupResourceERNS0_8pipelineE($this + 240 | 0, __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE6AssignERKNS_2IdERKS3_NS_13ResourceState4CodeE($8, $agg$result, $setup, 1) | 0) | 0;
 if (($35 + -3 | 0) >>> 0 >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53885, 0, 48725, 283, 56042);
  _abort();
 }
 __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE11UpdateStateERKNS_2IdENS_13ResourceState4CodeE($8, $agg$result, $35);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv14emscDisplayMgr12SetupDisplayERKNS_8GfxSetupERKNS0_11gfxPointersE($this, $renderSetup, $ptrs) {
 $this = $this | 0;
 $renderSetup = $renderSetup | 0;
 $ptrs = $ptrs | 0;
 var $$0$i = 0, $11 = 0, $16 = 0, $20 = 0, $7 = 0, $9 = 0, $ctxAttrs = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $vararg_buffer = sp;
 $ctxAttrs = sp + 16 | 0;
 if (__ZNK5Oryol5_priv14displayMgrBase14IsDisplayValidEv($this) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(74994, 0, 74860, 35, 75018);
  _abort();
 }
 __ZN5Oryol5_priv14displayMgrBase12SetupDisplayERKNS_8GfxSetupERKNS0_11gfxPointersE($this, $renderSetup, $ptrs);
 _emscripten_set_canvas_size(HEAP32[$renderSetup >> 2] | 0, HEAP32[$renderSetup + 4 >> 2] | 0);
 _emscripten_webgl_init_context_attributes($ctxAttrs | 0);
 switch (HEAP32[$renderSetup + 8 >> 2] | 0) {
 case 4:
 case 2:
 case 0:
 case 6:
 case 5:
  {
   $$0$i = 1;
   break;
  }
 case 12:
  {
   $$0$i = 0;
   break;
  }
 default:
  $$0$i = 0;
 }
 HEAP32[$ctxAttrs >> 2] = $$0$i;
 $7 = HEAP32[$renderSetup + 12 >> 2] | 0;
 $9 = ($7 + -11 | 0) >>> 0 < 2 & 1;
 HEAP32[$ctxAttrs + 4 >> 2] = $9;
 $11 = ($7 | 0) == 12 & 1;
 HEAP32[$ctxAttrs + 8 >> 2] = $11;
 $16 = (HEAP32[$renderSetup + 16 >> 2] | 0) > 1 & 1;
 HEAP32[$ctxAttrs + 12 >> 2] = $16;
 HEAP32[$ctxAttrs + 16 >> 2] = 0;
 HEAP32[$ctxAttrs + 20 >> 2] = 0;
 HEAP32[$vararg_buffer >> 2] = $$0$i;
 HEAP32[$vararg_buffer + 4 >> 2] = $9;
 HEAP32[$vararg_buffer + 8 >> 2] = $11;
 HEAP32[$vararg_buffer + 12 >> 2] = $16;
 __ZN5Oryol3Log4InfoEPKcz(75126, $vararg_buffer);
 $20 = _emscripten_webgl_create_context(0, $ctxAttrs | 0) | 0;
 HEAP32[$this + 248 >> 2] = $20;
 if (($20 | 0) > 0) {
  _emscripten_webgl_make_context_current($20 | 0) | 0;
  __ZN5Oryol5_priv6glInfo5SetupEv();
  __ZN5Oryol5_priv5glExt5SetupEv();
  STACKTOP = sp;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75188, 75202, 74860, 51, 75018);
  _abort();
 }
}

function __ZN5Oryol9loadQueue4itemaSEOS1_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $22 = 0, $23 = 0, $26 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $42 = 0, $43 = 0, $46 = 0, $5 = 0, $6 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = HEAP32[$this >> 2] | 0;
 if (($1 | 0) != ($2 | 0)) {
  if ($2 | 0) {
   $5 = $2 + 4 | 0;
   $6 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $6 - 1;
   if (($6 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$2 >> 2] >> 2] & 255]($2);
   HEAP32[$this >> 2] = 0;
  }
  HEAP32[$this >> 2] = $1;
  HEAP32[$0 >> 2] = 0;
 }
 $10 = $this + 8 | 0;
 $11 = $0 + 8 | 0;
 $12 = $this + 24 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 if (($13 | 0) == ($10 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 16 >> 2] & 255]($13); else if ($13 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 20 >> 2] & 255]($13);
 HEAP32[$12 >> 2] = 0;
 $22 = $0 + 24 | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 do if (!$23) HEAP32[$12 >> 2] = 0; else if (($23 | 0) == ($11 | 0)) {
  HEAP32[$12 >> 2] = $10;
  $26 = HEAP32[$22 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$26 >> 2] | 0) + 12 >> 2] & 63]($26, $10);
  break;
 } else {
  HEAP32[$12 >> 2] = $23;
  HEAP32[$22 >> 2] = 0;
  break;
 } while (0);
 $30 = $this + 32 | 0;
 $31 = $0 + 32 | 0;
 $32 = $this + 48 | 0;
 $33 = HEAP32[$32 >> 2] | 0;
 if (($33 | 0) == ($30 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$33 >> 2] | 0) + 16 >> 2] & 255]($33); else if ($33 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$33 >> 2] | 0) + 20 >> 2] & 255]($33);
 HEAP32[$32 >> 2] = 0;
 $42 = $0 + 48 | 0;
 $43 = HEAP32[$42 >> 2] | 0;
 if (!$43) {
  HEAP32[$32 >> 2] = 0;
  return $this | 0;
 }
 if (($43 | 0) == ($31 | 0)) {
  HEAP32[$32 >> 2] = $30;
  $46 = HEAP32[$42 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$46 >> 2] | 0) + 12 >> 2] & 63]($46, $30);
  return $this | 0;
 } else {
  HEAP32[$32 >> 2] = $43;
  HEAP32[$42 >> 2] = 0;
  return $this | 0;
 }
 return 0;
}

function __ZN5Oryol8Touchpad9onPanningERKN3glm5tvec2IfLNS1_9precisionE0EEES6_($this, $p, $start) {
 $this = $this | 0;
 $p = $p | 0;
 $start = $start | 0;
 var $1 = 0, $10 = 0.0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $34 = 0, $36 = 0, $40 = 0, $45 = 0, $50 = 0, $51 = 0, $56 = 0, $61 = 0, $63 = 0, $66 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 4 >> 0] = 1;
 $1 = $this + 28 | 0;
 $2 = $this + 12 | 0;
 $10 = +HEAPF32[$p + 4 >> 2] - +HEAPF32[$this + 16 >> 2];
 HEAPF32[$1 >> 2] = +HEAPF32[$p >> 2] - +HEAPF32[$2 >> 2];
 HEAPF32[$this + 32 >> 2] = $10;
 $12 = $p;
 $14 = HEAP32[$12 >> 2] | 0;
 $17 = HEAP32[$12 + 4 >> 2] | 0;
 $18 = $2;
 HEAP32[$18 >> 2] = $14;
 HEAP32[$18 + 4 >> 2] = $17;
 $23 = $start;
 $25 = HEAP32[$23 >> 2] | 0;
 $28 = HEAP32[$23 + 4 >> 2] | 0;
 $29 = $this + 44 | 0;
 HEAP32[$29 >> 2] = $25;
 HEAP32[$29 + 4 >> 2] = $28;
 $34 = HEAP32[$this + 76 >> 2] | 0;
 $36 = HEAP32[$this + 72 >> 2] | 0;
 if (($34 | 0) == ($36 | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $event + 4 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$event >> 2] = 3;
 $40 = $event + 4 | 0;
 HEAP32[$40 >> 2] = $14;
 HEAP32[$40 + 4 >> 2] = $17;
 $45 = $1;
 $50 = HEAP32[$45 + 4 >> 2] | 0;
 $51 = $event + 36 | 0;
 HEAP32[$51 >> 2] = HEAP32[$45 >> 2];
 HEAP32[$51 + 4 >> 2] = $50;
 $56 = $event + 20 | 0;
 HEAP32[$56 >> 2] = $25;
 HEAP32[$56 + 4 >> 2] = $28;
 $61 = HEAP32[$this + 64 >> 2] | 0;
 if ($61 | 0) {
  $63 = $61 + ($34 << 5) | 0;
  $__begin$03$i = $61 + ($36 << 5) | 0;
  do {
   $66 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$66 >> 2] | 0) + 24 >> 2] & 63]($66, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($63 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN7YakcApp9OnRunningEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $12 = 0, $14 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $4 = 0, $40 = 0, $41 = 0, $46 = 0, $48 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp + 24 | 0;
 $1 = sp + 8 | 0;
 $2 = sp;
 $3 = __ZN5Oryol5Clock3NowEv() | 0;
 $4 = tempRet0;
 $5 = $this + 1904152 | 0;
 $6 = $5;
 $12 = _i64Subtract($3 | 0, $4 | 0, HEAP32[$6 >> 2] | 0, HEAP32[$6 + 4 >> 2] | 0) | 0;
 $14 = $5;
 HEAP32[$14 >> 2] = $3;
 HEAP32[$14 + 4 >> 2] = $4;
 HEAPF32[$1 >> 2] = 0.0;
 HEAPF32[$1 + 4 >> 2] = 0.0;
 HEAPF32[$1 + 8 >> 2] = 0.0;
 HEAPF32[$1 + 12 >> 2] = 1.0;
 __ZN5Oryol10ClearState10ClearColorERKN3glm5tvec4IfLNS1_9precisionE0EEE($0, $1);
 __ZN5Oryol3Gfx24ApplyDefaultRenderTargetERKNS_10ClearStateE($0);
 __ZN7YakcApp11handleInputEv($this);
 $21 = $this + 40 | 0;
 $23 = HEAP32[$this + 65576 >> 2] | 0;
 $24 = $23 * 10 | 0;
 $27 = $23 * 40 | 0;
 $30 = $this + 726552 | 0;
 $31 = __ZNK5Audio18GetProcessedCyclesEv($30) | 0;
 $32 = tempRet0;
 $33 = _i64Add($24 | 0, (($24 | 0) < 0) << 31 >> 31 | 0, $31 | 0, $32 | 0) | 0;
 $34 = tempRet0;
 $35 = _i64Add($27 | 0, (($27 | 0) < 0) << 31 >> 31 | 0, $31 | 0, $32 | 0) | 0;
 $37 = $this + 853056 | 0;
 __ZN4yakc4kc857onframeEiiyy($21, HEAP32[$this + 853064 >> 2] | 0, $12, $33, $34, $35, tempRet0);
 $40 = $this + 725584 | 0;
 $41 = HEAP16[$37 >> 1] | 0;
 $46 = HEAP32[$this + 853060 >> 2] | 0;
 HEAP32[$2 >> 2] = $46;
 HEAP32[$2 + 4 >> 2] = $46;
 __ZN4Draw12UpdateParamsEbbRKN3glm5tvec2IfLNS0_9precisionE0EEE($40, ($41 & 255) << 24 >> 24 != 0, ($41 & 65535) > 255, $2);
 __ZN5Audio6UpdateERN4yakc4kc85E($30, $21);
 __ZN4Draw6RenderERKN4yakc4kc85E($40, $21);
 __ZN2UI7OnFrameERN4yakc4kc85E($37, $21);
 __ZN5Oryol3Gfx11CommitFrameEv();
 $48 = __ZN5Oryol3Gfx13QuitRequestedEv() | 0;
 STACKTOP = sp;
 return ($48 ? 5 : 4) | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_3PtrINS_14ResourceLoaderEEEE14moveEraseFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $31 = 0, $32 = 0, $36 = 0, $5 = 0, $6 = 0, $i$04 = 0, $i$04$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 52155);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (((HEAP32[$this + 12 >> 2] | 0) - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 52155);
  _abort();
 }
 if (($index | 0) > 0) {
  $23 = $0;
  $36 = $6;
  $i$04 = $6 + $index | 0;
  while (1) {
   $i$04$looptemp = $i$04;
   $i$04 = $i$04 + -1 | 0;
   $22 = $23 + ($i$04 << 2) | 0;
   $24 = HEAP32[$22 >> 2] | 0;
   $25 = $23 + ($i$04$looptemp << 2) | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   if (($24 | 0) == ($26 | 0)) $29 = $36; else {
    if (!$26) $$pre6 = $36; else {
     $31 = $26 + 4 | 0;
     $32 = HEAP32[$31 >> 2] | 0;
     HEAP32[$31 >> 2] = $32 - 1;
     if (($32 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$26 >> 2] >> 2] & 255]($26);
     HEAP32[$25 >> 2] = 0;
     $$pre6 = HEAP32[$5 >> 2] | 0;
    }
    HEAP32[$25 >> 2] = $24;
    HEAP32[$22 >> 2] = 0;
    $29 = $$pre6;
   }
   $$pre = HEAP32[$this >> 2] | 0;
   if (($i$04 | 0) <= ($29 | 0)) {
    $$lcssa = $29;
    $13 = $$pre;
    break;
   } else {
    $23 = $$pre;
    $36 = $29;
   }
  }
 } else {
  $$lcssa = $6;
  $13 = $0;
 }
 HEAP32[$5 >> 2] = $$lcssa + 1;
 $12 = $13 + ($$lcssa << 2) | 0;
 $14 = HEAP32[$12 >> 2] | 0;
 if (!$14) return;
 $16 = $14 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = $17 - 1;
 if (($17 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$14 >> 2] >> 2] & 255]($14);
 HEAP32[$12 >> 2] = 0;
 return;
}

function __ZN5Oryol3Gfx16validateTexturesENS_11ShaderStage4CodeEPNS_5_priv8pipelineEPPNS3_7textureEi($stage, $pip, $textures, $numTextures) {
 $stage = $stage | 0;
 $pip = $pip | 0;
 $textures = $textures | 0;
 $numTextures = $numTextures | 0;
 var $$lcssa7 = 0, $12 = 0, $2 = 0, $21 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, $i$02 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!$pip) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67766, 0, 42914, 436, 45314);
  _abort();
 }
 $2 = HEAP32[$pip + 344 >> 2] | 0;
 if (!$2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71108, 0, 42914, 440, 45314);
  _abort();
 }
 $4 = $2 + 16 | 0;
 $5 = __ZNK5Oryol11ShaderSetup24TextureBlockIndexByStageENS_11ShaderStage4CodeE($4, $stage) | 0;
 if (($5 | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(45431, 0, 42914, 442, 45314);
  _abort();
 }
 $7 = __ZNK5Oryol11ShaderSetup18TextureBlockLayoutEi($4, $5) | 0;
 if (($numTextures | 0) > 0) $i$02 = 0; else {
  STACKTOP = sp;
  return;
 }
 while (1) {
  $9 = $textures + ($i$02 << 2) | 0;
  if (HEAP32[$9 >> 2] | 0) {
   $12 = __ZNK5Oryol18TextureBlockLayout25ComponentIndexForBindSlotEi($7, $i$02) | 0;
   if ($12 >>> 0 >= 16) {
    label = 11;
    break;
   }
   if ((HEAP32[$7 + 4 + ($12 * 12 | 0) + 4 >> 2] | 0) != (HEAP32[(HEAP32[$9 >> 2] | 0) + 712 >> 2] | 0)) {
    $$lcssa7 = $12;
    label = 13;
    break;
   }
  }
  $i$02 = $i$02 + 1 | 0;
  if (($i$02 | 0) >= ($numTextures | 0)) {
   label = 8;
   break;
  }
 }
 if ((label | 0) == 8) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 66121);
  _abort();
 } else if ((label | 0) == 13) {
  $21 = HEAP32[$7 + 4 + ($$lcssa7 * 12 | 0) >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[(($21 | 0) == 0 ? 13684 : $21 + 12 | 0) >> 2];
  __ZN5Oryol3Log5ErrorEPKcz(45461, $vararg_buffer);
  _abort();
 }
}

function __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_11ShaderSetupEEENS_2IdERKT_($agg$result, $this, $setup) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $setup = $setup | 0;
 var $0 = 0, $1 = 0, $10 = 0, $16 = 0, $18 = 0, $2 = 0, $21 = 0, $22 = 0, $26 = 0, $28 = 0, $31 = 0, $35 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 $2 = sp + 16 | 0;
 if (!(__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 48725, 252, 55330);
  _abort();
 }
 $4 = $this + 24 | 0;
 __ZNK5Oryol5_priv16resourceRegistry6LookupERKNS_7LocatorE($agg$result, $4, $setup);
 if ((HEAP32[$agg$result + 4 >> 2] | 0) != -1) {
  STACKTOP = sp;
  return;
 }
 $8 = $this + 336 | 0;
 __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE7AllocIdEv($0, $8);
 if (($0 | 0) == ($agg$result | 0)) {
  $10 = $agg$result;
  $28 = HEAP32[$10 >> 2] | 0;
  $31 = HEAP32[$10 + 4 >> 2] | 0;
 } else {
  $16 = $0;
  $18 = HEAP32[$16 >> 2] | 0;
  $21 = HEAP32[$16 + 4 >> 2] | 0;
  $22 = $agg$result;
  HEAP32[$22 >> 2] = $18;
  HEAP32[$22 + 4 >> 2] = $21;
  $28 = $18;
  $31 = $21;
 }
 $26 = $1;
 HEAP32[$26 >> 2] = $28;
 HEAP32[$26 + 4 >> 2] = $31;
 HEAP32[$2 >> 2] = __ZNK5Oryol21resourceContainerBase9peekLabelEv($this) | 0;
 __ZN5Oryol5_priv16resourceRegistry3AddERKNS_7LocatorENS_2IdENS_13ResourceLabelE($4, $setup, $1, $2);
 $35 = __ZN5Oryol5_priv15glShaderFactory13SetupResourceERNS0_6shaderE($this + 176 | 0, __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE6AssignERKNS_2IdERKS3_NS_13ResourceState4CodeE($8, $agg$result, $setup, 1) | 0) | 0;
 if (($35 + -3 | 0) >>> 0 >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53885, 0, 48725, 263, 55330);
  _abort();
 }
 __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE11UpdateStateERKNS_2IdENS_13ResourceState4CodeE($8, $agg$result, $35);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_3PtrI10WindowBaseEEE14moveEraseFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $$pre6 = 0, $0 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $31 = 0, $32 = 0, $36 = 0, $5 = 0, $6 = 0, $i$04 = 0, $i$04$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 34709);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (((HEAP32[$this + 12 >> 2] | 0) - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 34709);
  _abort();
 }
 if (($index | 0) > 0) {
  $23 = $0;
  $36 = $6;
  $i$04 = $6 + $index | 0;
  while (1) {
   $i$04$looptemp = $i$04;
   $i$04 = $i$04 + -1 | 0;
   $22 = $23 + ($i$04 << 2) | 0;
   $24 = HEAP32[$22 >> 2] | 0;
   $25 = $23 + ($i$04$looptemp << 2) | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   if (($24 | 0) == ($26 | 0)) $29 = $36; else {
    if (!$26) $$pre6 = $36; else {
     $31 = $26 + 4 | 0;
     $32 = HEAP32[$31 >> 2] | 0;
     HEAP32[$31 >> 2] = $32 - 1;
     if (($32 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$26 >> 2] >> 2] & 255]($26);
     HEAP32[$25 >> 2] = 0;
     $$pre6 = HEAP32[$5 >> 2] | 0;
    }
    HEAP32[$25 >> 2] = $24;
    HEAP32[$22 >> 2] = 0;
    $29 = $$pre6;
   }
   $$pre = HEAP32[$this >> 2] | 0;
   if (($i$04 | 0) <= ($29 | 0)) {
    $$lcssa = $29;
    $13 = $$pre;
    break;
   } else {
    $23 = $$pre;
    $36 = $29;
   }
  }
 } else {
  $$lcssa = $6;
  $13 = $0;
 }
 HEAP32[$5 >> 2] = $$lcssa + 1;
 $12 = $13 + ($$lcssa << 2) | 0;
 $14 = HEAP32[$12 >> 2] | 0;
 if (!$14) return;
 $16 = $14 + 4 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 HEAP32[$16 >> 2] = $17 - 1;
 if (($17 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$14 >> 2] >> 2] & 255]($14);
 HEAP32[$12 >> 2] = 0;
 return;
}

function __ZN10FileLoader5patchEPN4yakc4kc85ERKNS_8FileInfoE($kc, $info) {
 $kc = $kc | 0;
 $info = $info | 0;
 var $1 = 0, $10 = 0, $21 = 0, $24 = 0, $37 = 0, $4 = 0, $40 = 0;
 if (__ZN5OryoleqERKNS_6StringEPKc($info, 40324) | 0) {
  $1 = $kc + 66984 | 0;
  if (HEAP8[$1 >> 0] | 0) {
   $4 = $kc + 66980 | 0;
   HEAP8[(HEAP32[$4 >> 2] | 0) + 1719 >> 0] = 1;
   if (HEAP8[$1 >> 0] | 0) HEAP8[(HEAP32[$4 >> 2] | 0) + 1687 >> 0] = 1;
  }
  $10 = $kc + 66952 | 0;
  if (HEAP8[$10 >> 0] | 0) {
   HEAP8[(HEAP32[$kc + 66948 >> 2] | 0) + 1904 >> 0] = HEAP8[(HEAP32[$kc + 66980 >> 2] | 0) + 1718 >> 0] | 0;
   if (HEAP8[$10 >> 0] | 0) {
    HEAP8[(HEAP32[$kc + 66948 >> 2] | 0) + 1905 >> 0] = HEAP8[(HEAP32[$kc + 66980 >> 2] | 0) + 1719 >> 0] | 0;
    if (HEAP8[$10 >> 0] | 0) {
     HEAP8[(HEAP32[$kc + 66948 >> 2] | 0) + 1906 >> 0] = HEAP8[(HEAP32[$kc + 66980 >> 2] | 0) + 1720 >> 0] | 0;
     if (HEAP8[$10 >> 0] | 0) {
      HEAP8[(HEAP32[$kc + 66948 >> 2] | 0) + 1907 >> 0] = HEAP8[(HEAP32[$kc + 66980 >> 2] | 0) + 1721 >> 0] | 0;
      if (HEAP8[$10 >> 0] | 0) HEAP8[(HEAP32[$kc + 66948 >> 2] | 0) + 1908 >> 0] = HEAP8[(HEAP32[$kc + 66980 >> 2] | 0) + 1722 >> 0] | 0;
     }
    }
   }
  }
 }
 if (__ZN5OryoleqERKNS_6StringEPKc($info, 40336) | 0) {
  $21 = $kc + 66944 | 0;
  if (HEAP8[$21 >> 0] | 0) {
   $24 = $kc + 66940 | 0;
   HEAP8[(HEAP32[$24 >> 2] | 0) + 426 >> 0] = 96;
   if (HEAP8[$21 >> 0] | 0) HEAP8[(HEAP32[$24 >> 2] | 0) + 427 >> 0] = 1;
  }
  if (HEAP8[$kc + 66992 >> 0] | 0) HEAP8[(HEAP32[$kc + 66988 >> 2] | 0) + 1338 >> 0] = -75;
 }
 if (!(__ZN5OryoleqERKNS_6StringEPKc($info, 40349) | 0)) return;
 $37 = $kc + 66944 | 0;
 if (HEAP8[$37 >> 0] | 0) {
  $40 = $kc + 66940 | 0;
  HEAP8[(HEAP32[$40 >> 2] | 0) + 426 >> 0] = 96;
  if (HEAP8[$37 >> 0] | 0) HEAP8[(HEAP32[$40 >> 2] | 0) + 427 >> 0] = 2;
 }
 if (!(HEAP8[$kc + 66992 >> 0] | 0)) return;
 HEAP8[(HEAP32[$kc + 66988 >> 2] | 0) + 1338 >> 0] = -75;
 return;
}

function ___stpcpy($d, $s) {
 $d = $d | 0;
 $s = $s | 0;
 var $$0$lcssa = 0, $$01$lcssa = 0, $$0115 = 0, $$016 = 0, $$03 = 0, $$1$ph = 0, $$12$ph = 0, $$128 = 0, $$19 = 0, $0 = 0, $10 = 0, $14 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0, $32 = 0, $33 = 0, $7 = 0, $9 = 0, $wd$0$lcssa = 0, $wd$010 = 0, $ws$0$lcssa = 0, $ws$011 = 0, label = 0;
 $0 = $s;
 L1 : do if (!(($0 ^ $d) & 3)) {
  if (!($0 & 3)) {
   $$0$lcssa = $s;
   $$01$lcssa = $d;
  } else {
   $$0115 = $d;
   $$016 = $s;
   while (1) {
    $7 = HEAP8[$$016 >> 0] | 0;
    HEAP8[$$0115 >> 0] = $7;
    if (!($7 << 24 >> 24)) {
     $$03 = $$0115;
     break L1;
    }
    $9 = $$016 + 1 | 0;
    $10 = $$0115 + 1 | 0;
    if (!($9 & 3)) {
     $$0$lcssa = $9;
     $$01$lcssa = $10;
     break;
    } else {
     $$0115 = $10;
     $$016 = $9;
    }
   }
  }
  $14 = HEAP32[$$0$lcssa >> 2] | 0;
  if (!(($14 & -2139062144 ^ -2139062144) & $14 + -16843009)) {
   $22 = $14;
   $wd$010 = $$01$lcssa;
   $ws$011 = $$0$lcssa;
   while (1) {
    $20 = $ws$011 + 4 | 0;
    $21 = $wd$010 + 4 | 0;
    HEAP32[$wd$010 >> 2] = $22;
    $22 = HEAP32[$20 >> 2] | 0;
    if (($22 & -2139062144 ^ -2139062144) & $22 + -16843009 | 0) {
     $wd$0$lcssa = $21;
     $ws$0$lcssa = $20;
     break;
    } else {
     $wd$010 = $21;
     $ws$011 = $20;
    }
   }
  } else {
   $wd$0$lcssa = $$01$lcssa;
   $ws$0$lcssa = $$0$lcssa;
  }
  $$1$ph = $ws$0$lcssa;
  $$12$ph = $wd$0$lcssa;
  label = 8;
 } else {
  $$1$ph = $s;
  $$12$ph = $d;
  label = 8;
 } while (0);
 if ((label | 0) == 8) {
  $29 = HEAP8[$$1$ph >> 0] | 0;
  HEAP8[$$12$ph >> 0] = $29;
  if (!($29 << 24 >> 24)) $$03 = $$12$ph; else {
   $$128 = $$12$ph;
   $$19 = $$1$ph;
   while (1) {
    $$19 = $$19 + 1 | 0;
    $32 = $$128 + 1 | 0;
    $33 = HEAP8[$$19 >> 0] | 0;
    HEAP8[$32 >> 0] = $33;
    if (!($33 << 24 >> 24)) {
     $$03 = $32;
     break;
    } else $$128 = $32;
   }
  }
 }
 return $$03 | 0;
}

function ___dynamic_cast($static_ptr, $static_type, $dst_type, $src2dst_offset) {
 $static_ptr = $static_ptr | 0;
 $static_type = $static_type | 0;
 $dst_type = $dst_type | 0;
 $src2dst_offset = $src2dst_offset | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $5 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 $0 = HEAP32[$static_ptr >> 2] | 0;
 $3 = $static_ptr + (HEAP32[$0 + -8 >> 2] | 0) | 0;
 $5 = HEAP32[$0 + -4 >> 2] | 0;
 HEAP32[$info >> 2] = $dst_type;
 HEAP32[$info + 4 >> 2] = $static_ptr;
 HEAP32[$info + 8 >> 2] = $static_type;
 HEAP32[$info + 12 >> 2] = $src2dst_offset;
 $9 = $info + 16 | 0;
 $10 = $info + 20 | 0;
 $11 = $info + 24 | 0;
 $12 = $info + 28 | 0;
 $13 = $info + 32 | 0;
 $14 = $info + 40 | 0;
 $15 = ($5 | 0) == ($dst_type | 0);
 dest = $9;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$9 + 36 >> 1] = 0;
 HEAP8[$9 + 38 >> 0] = 0;
 L1 : do if ($15) {
  HEAP32[$info + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$dst_type >> 2] | 0) + 20 >> 2] & 3]($dst_type, $info, $3, $3, 1, 0);
  $dst_ptr$0 = (HEAP32[$11 >> 2] | 0) == 1 ? $3 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 24 >> 2] & 3]($5, $info, $3, 1, 0);
  switch (HEAP32[$info + 36 >> 2] | 0) {
  case 0:
   {
    $dst_ptr$0 = (HEAP32[$14 >> 2] | 0) == 1 & (HEAP32[$12 >> 2] | 0) == 1 & (HEAP32[$13 >> 2] | 0) == 1 ? HEAP32[$10 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    $dst_ptr$0 = 0;
    break L1;
   }
  }
  if ((HEAP32[$11 >> 2] | 0) != 1) if (!((HEAP32[$14 >> 2] | 0) == 0 & (HEAP32[$12 >> 2] | 0) == 1 & (HEAP32[$13 >> 2] | 0) == 1)) {
   $dst_ptr$0 = 0;
   break;
  }
  $dst_ptr$0 = HEAP32[$9 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $dst_ptr$0 | 0;
}

function __ZN5ImGui14PushStyleColorEiRK6ImVec4($idx, $col) {
 $idx = $idx | 0;
 $col = $col | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $27 = 0, $3 = 0, $33 = 0, $35 = 0, $37 = 0, $6 = 0, $backup$sroa$4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $backup$sroa$4 = sp;
 $0 = 152056 + ($idx << 4) | 0;
 HEAP32[$backup$sroa$4 >> 2] = HEAP32[$0 >> 2];
 HEAP32[$backup$sroa$4 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$backup$sroa$4 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$backup$sroa$4 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
 $1 = 152880;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = 152884;
 if (($2 | 0) == (HEAP32[$3 >> 2] | 0)) {
  $6 = $2 + 1 | 0;
  if (!$2) $11 = 8; else $11 = (($2 | 0) / 2 | 0) + $2 | 0;
  $12 = ($11 | 0) > ($6 | 0) ? $11 : $6;
  if (($2 | 0) < ($12 | 0)) {
   $15 = 147664;
   HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 1;
   $20 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($12 * 20 | 0) | 0;
   $21 = 152888;
   _memcpy($20 | 0, HEAP32[$21 >> 2] | 0, (HEAP32[$1 >> 2] | 0) * 20 | 0) | 0;
   $25 = HEAP32[$21 >> 2] | 0;
   if ($25 | 0) {
    $27 = 147664;
    HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($25);
   HEAP32[$21 >> 2] = $20;
   HEAP32[$3 >> 2] = $12;
   $33 = HEAP32[$1 >> 2] | 0;
  } else $33 = $2;
 } else $33 = $2;
 HEAP32[$1 >> 2] = $33 + 1;
 $35 = HEAP32[38222] | 0;
 HEAP32[$35 + ($33 * 20 | 0) >> 2] = $idx;
 $37 = $35 + ($33 * 20 | 0) + 4 | 0;
 HEAP32[$37 >> 2] = HEAP32[$backup$sroa$4 >> 2];
 HEAP32[$37 + 4 >> 2] = HEAP32[$backup$sroa$4 + 4 >> 2];
 HEAP32[$37 + 8 >> 2] = HEAP32[$backup$sroa$4 + 8 >> 2];
 HEAP32[$37 + 12 >> 2] = HEAP32[$backup$sroa$4 + 12 >> 2];
 HEAP32[$0 >> 2] = HEAP32[$col >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$col + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$col + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[$col + 12 >> 2];
 STACKTOP = sp;
 return;
}

function __ZL26stbtt__handle_clipped_edgePfiP18stbtt__active_edgeffff($scanline, $x, $e, $x0, $y0, $x1, $y1) {
 $scanline = $scanline | 0;
 $x = $x | 0;
 $e = $e | 0;
 $x0 = +$x0;
 $y0 = +$y0;
 $x1 = +$x1;
 $y1 = +$y1;
 var $$0 = 0.0, $$01 = 0.0, $$02 = 0.0, $$03 = 0.0, $23 = 0.0, $26 = 0.0, $3 = 0.0, $42 = 0, $5 = 0.0, $61 = 0;
 if ($y0 == $y1) return;
 if (!($y0 < $y1)) ___assert_fail(140851, 140438, 1863, 140859);
 $3 = +HEAPF32[$e + 20 >> 2];
 $5 = +HEAPF32[$e + 24 >> 2];
 if (!($3 <= $5)) ___assert_fail(140886, 140438, 1864, 140859);
 if ($3 > $y1 | $5 < $y0) return;
 if ($3 > $y0) {
  $$02 = $3;
  $$03 = ($x1 - $x0) * ($3 - $y0) / ($y1 - $y0) + $x0;
 } else {
  $$02 = $y0;
  $$03 = $x0;
 }
 if ($5 < $y1) {
  $$0 = $5;
  $$01 = ($x1 - $$03) * ($5 - $y1) / ($y1 - $$02) + $x1;
 } else {
  $$0 = $y1;
  $$01 = $x1;
 }
 $23 = +($x | 0);
 $26 = +($x + 1 | 0);
 do if ($$03 == $23) {
  if (!($$01 <= $26)) ___assert_fail(140901, 140438, 1877, 140859);
 } else {
  if ($$03 == $26) {
   if ($$01 >= $23) break;
   ___assert_fail(140911, 140438, 1879, 140859);
  }
  if ($$03 <= $23) {
   if ($$01 <= $23) break;
   ___assert_fail(140919, 140438, 1881, 140859);
  }
  if (!($$03 >= $26)) {
   if (!(!($$01 >= $23) | !($$01 <= $26))) break;
   ___assert_fail(140937, 140438, 1885, 140859);
  } else {
   if ($$01 >= $26) break;
   ___assert_fail(140927, 140438, 1883, 140859);
  }
 } while (0);
 if (!(!($$03 <= $23) | !($$01 <= $23))) {
  $42 = $scanline + ($x << 2) | 0;
  HEAPF32[$42 >> 2] = +HEAPF32[$42 >> 2] + ($$0 - $$02) * +HEAPF32[$e + 16 >> 2];
  return;
 }
 if (!(!($$03 >= $26) | !($$01 >= $26))) return;
 if (!($$01 <= $26) | (!($$03 >= $23) | !($$03 <= $26) | !($$01 >= $23))) ___assert_fail(140958, 140438, 1892, 140859);
 $61 = $scanline + ($x << 2) | 0;
 HEAPF32[$61 >> 2] = +HEAPF32[$61 >> 2] + (1.0 - ($$03 - $23 + ($$01 - $23)) * .5) * (($$0 - $$02) * +HEAPF32[$e + 16 >> 2]);
 return;
}

function __ZN4yakc4kc855in_cbEPvt($userdata, $port) {
 $userdata = $userdata | 0;
 $port = $port | 0;
 var $$0 = 0, $12 = 0, $2 = 0, $20 = 0, $22 = 0, $31 = 0, $34 = 0, $4 = 0, $43 = 0, $46 = 0, $55 = 0, $58 = 0, $val$0$i = 0, $val$0$i1 = 0, $val$0$i3 = 0, $val$0$i5 = 0;
 switch ($port & 255 | 0) {
 case 128:
  {
   $2 = $userdata + 462872 | 0;
   $4 = ($port & 65535) >>> 8 & 255;
   if ((HEAP8[$userdata + 463128 >> 0] | 0) == $4 << 24 >> 24) $12 = 0; else if ((HEAP8[$userdata + 463168 >> 0] | 0) == $4 << 24 >> 24) $12 = 1; else {
    $$0 = -1;
    return $$0 | 0;
   }
   $$0 = HEAP8[$2 + 256 + ($12 * 40 | 0) + 12 >> 0] | 0;
   return $$0 | 0;
  }
 case 136:
  {
   $$0 = HEAP8[$userdata + 69262 >> 0] | 0;
   return $$0 | 0;
  }
 case 137:
  {
   $$0 = HEAP8[$userdata + 69263 >> 0] | 0;
   return $$0 | 0;
  }
 case 140:
  {
   $20 = HEAP32[$userdata + 69288 >> 2] | 0;
   $22 = HEAPU8[$userdata + 69284 >> 0] | 0;
   if (!($22 & 64)) $val$0$i5 = ($20 | 0) / (($22 & 32 | 0 ? 256 : 16) | 0) | 0; else $val$0$i5 = $20;
   $$0 = $val$0$i5 & 255;
   return $$0 | 0;
  }
 case 141:
  {
   $31 = HEAP32[$userdata + 69336 >> 2] | 0;
   $34 = HEAPU8[$userdata + 69332 >> 0] | 0;
   if (!($34 & 64)) $val$0$i3 = ($31 | 0) / (($34 & 32 | 0 ? 256 : 16) | 0) | 0; else $val$0$i3 = $31;
   $$0 = $val$0$i3 & 255;
   return $$0 | 0;
  }
 case 142:
  {
   $43 = HEAP32[$userdata + 69384 >> 2] | 0;
   $46 = HEAPU8[$userdata + 69380 >> 0] | 0;
   if (!($46 & 64)) $val$0$i1 = ($43 | 0) / (($46 & 32 | 0 ? 256 : 16) | 0) | 0; else $val$0$i1 = $43;
   $$0 = $val$0$i1 & 255;
   return $$0 | 0;
  }
 case 143:
  {
   $55 = HEAP32[$userdata + 69432 >> 2] | 0;
   $58 = HEAPU8[$userdata + 69428 >> 0] | 0;
   if (!($58 & 64)) $val$0$i = ($55 | 0) / (($58 & 32 | 0 ? 256 : 16) | 0) | 0; else $val$0$i = $55;
   $$0 = $val$0$i & 255;
   return $$0 | 0;
  }
 default:
  {
   $$0 = -1;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZN11ImFontAtlas36AddFontFromMemoryCompressedBase85TTFEPKcfPK12ImFontConfigPKt($this, $compressed_ttf_data_base85, $size_pixels, $font_cfg, $glyph_ranges) {
 $this = $this | 0;
 $compressed_ttf_data_base85 = $compressed_ttf_data_base85 | 0;
 $size_pixels = +$size_pixels;
 $font_cfg = $font_cfg | 0;
 $glyph_ranges = $glyph_ranges | 0;
 var $$016$i = 0, $$07$i = 0, $12 = 0, $17 = 0, $22 = 0, $27 = 0, $3 = 0, $38 = 0, $4 = 0, $5 = 0, $53 = 0, $8 = 0;
 $3 = (((_strlen($compressed_ttf_data_base85) | 0) + 4 | 0) / 5 | 0) << 2;
 $4 = __ZN5ImGui8MemAllocEj($3) | 0;
 $5 = HEAP8[$compressed_ttf_data_base85 >> 0] | 0;
 if (!($5 << 24 >> 24)) {
  $53 = __ZN11ImFontAtlas30AddFontFromMemoryCompressedTTFEPKvifPK12ImFontConfigPKt($this, $4, $3, $size_pixels, $font_cfg, $glyph_ranges) | 0;
  __ZN5ImGui7MemFreeEPv($4);
  return $53 | 0;
 } else {
  $$016$i = $4;
  $$07$i = $compressed_ttf_data_base85;
  $8 = $5;
 }
 while (1) {
  $12 = HEAP8[$$07$i + 1 >> 0] | 0;
  $17 = HEAP8[$$07$i + 2 >> 0] | 0;
  $22 = HEAP8[$$07$i + 3 >> 0] | 0;
  $27 = HEAP8[$$07$i + 4 >> 0] | 0;
  $38 = ($8 << 24 >> 24 > 91 ? -36 : -35) + ($8 << 24 >> 24) + ((($12 << 24 >> 24 > 91 ? -36 : -35) + ($12 << 24 >> 24) + ((($17 << 24 >> 24 > 91 ? -36 : -35) + ($17 << 24 >> 24) + ((($22 << 24 >> 24 > 91 ? -36 : -35) + ($22 << 24 >> 24) + ((($27 << 24 >> 24 > 91 ? -36 : -35) + ($27 << 24 >> 24) | 0) * 85 | 0) | 0) * 85 | 0) | 0) * 85 | 0) | 0) * 85 | 0) | 0;
  HEAP8[$$016$i >> 0] = $38;
  HEAP8[$$016$i + 1 >> 0] = $38 >>> 8;
  HEAP8[$$016$i + 2 >> 0] = $38 >>> 16;
  HEAP8[$$016$i + 3 >> 0] = $38 >>> 24;
  $$07$i = $$07$i + 5 | 0;
  $8 = HEAP8[$$07$i >> 0] | 0;
  if (!($8 << 24 >> 24)) break; else $$016$i = $$016$i + 4 | 0;
 }
 $53 = __ZN11ImFontAtlas30AddFontFromMemoryCompressedTTFEPKvifPK12ImFontConfigPKt($this, $4, $3, $size_pixels, $font_cfg, $glyph_ranges) | 0;
 __ZN5ImGui7MemFreeEPv($4);
 return $53 | 0;
}

function __ZN11ImFontAtlas18GetTexDataAsAlpha8EPPhPiS2_S2_($this, $out_pixels, $out_width, $out_height, $out_bytes_per_pixel) {
 $this = $this | 0;
 $out_pixels = $out_pixels | 0;
 $out_width = $out_width | 0;
 $out_height = $out_height | 0;
 $out_bytes_per_pixel = $out_bytes_per_pixel | 0;
 var $0 = 0, $1 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $7 = 0, $font_cfg$i = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 $font_cfg$i = sp;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) {
  if (!(HEAP32[$this + 44 >> 2] | 0)) {
   $7 = $font_cfg$i + 32 | 0;
   HEAP32[$font_cfg$i >> 2] = 0;
   HEAP32[$font_cfg$i + 4 >> 2] = 0;
   HEAP8[$font_cfg$i + 8 >> 0] = 1;
   HEAP32[$font_cfg$i + 12 >> 2] = 0;
   HEAPF32[$font_cfg$i + 16 >> 2] = 0.0;
   $12 = $font_cfg$i + 20 | 0;
   $13 = $font_cfg$i + 24 | 0;
   $14 = $font_cfg$i + 28 | 0;
   HEAP32[$font_cfg$i + 80 >> 2] = 0;
   dest = $7;
   stop = dest + 44 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP16[$7 + 44 >> 1] = 0;
   HEAP32[$13 >> 2] = 1;
   HEAP32[$12 >> 2] = 1;
   HEAP8[$14 >> 0] = 1;
   dest = $font_cfg$i + 46 | 0;
   src = 127645;
   stop = dest + 10 | 0;
   do {
    HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
    dest = dest + 1 | 0;
    src = src + 1 | 0;
   } while ((dest | 0) < (stop | 0));
   __ZN11ImFontAtlas36AddFontFromMemoryCompressedBase85TTFEPKcfPK12ImFontConfigPKt($this, 127655, 13.0, $font_cfg$i, 14324) | 0;
  }
  __ZN11ImFontAtlas5BuildEv($this) | 0;
  $16 = HEAP32[$0 >> 2] | 0;
 } else $16 = $1;
 HEAP32[$out_pixels >> 2] = $16;
 if ($out_width | 0) HEAP32[$out_width >> 2] = HEAP32[$this + 12 >> 2];
 if ($out_height | 0) HEAP32[$out_height >> 2] = HEAP32[$this + 16 >> 2];
 if (!$out_bytes_per_pixel) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$out_bytes_per_pixel >> 2] = 1;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol11StaticArrayINS_11ShaderSetup17textureBlockEntryELi2EEC2ERKS3_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $10 = 0, $14 = 0, $19 = 0, $20 = 0, $28 = 0, $33 = 0, $37 = 0, $42 = 0, $43 = 0, $i$01$i$i$i = 0, $i$01$i$i$i$1 = 0;
 HEAP32[$this >> 2] = 0;
 __ZN5Oryol18TextureBlockLayoutC2Ev($this + 4 | 0);
 HEAP32[$this + 200 >> 2] = -1;
 HEAP32[$this + 204 >> 2] = 0;
 __ZN5Oryol18TextureBlockLayoutC2Ev($this + 208 | 0);
 HEAP32[$this + 404 >> 2] = -1;
 if (($rhs | 0) == ($this | 0)) {
  HEAP32[$this + 404 >> 2] = -1;
  return;
 }
 HEAP32[$this >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($this, $rhs);
 HEAP32[$this + 4 >> 2] = HEAP32[$rhs + 4 >> 2];
 $i$01$i$i$i = 0;
 do {
  $10 = $this + 8 + ($i$01$i$i$i * 12 | 0) | 0;
  HEAP32[$10 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($10, $rhs + 8 + ($i$01$i$i$i * 12 | 0) | 0);
  $14 = $rhs + 8 + ($i$01$i$i$i * 12 | 0) + 4 | 0;
  $19 = HEAP32[$14 + 4 >> 2] | 0;
  $20 = $this + 8 + ($i$01$i$i$i * 12 | 0) + 4 | 0;
  HEAP32[$20 >> 2] = HEAP32[$14 >> 2];
  HEAP32[$20 + 4 >> 2] = $19;
  $i$01$i$i$i = $i$01$i$i$i + 1 | 0;
 } while (($i$01$i$i$i | 0) != 16);
 HEAP32[$this + 200 >> 2] = HEAP32[$rhs + 200 >> 2];
 $28 = $this + 204 | 0;
 HEAP32[$28 >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($28, $rhs + 204 | 0);
 HEAP32[$this + 208 >> 2] = HEAP32[$rhs + 208 >> 2];
 $i$01$i$i$i$1 = 0;
 do {
  $33 = $this + 212 + ($i$01$i$i$i$1 * 12 | 0) | 0;
  HEAP32[$33 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($33, $rhs + 212 + ($i$01$i$i$i$1 * 12 | 0) | 0);
  $37 = $rhs + 212 + ($i$01$i$i$i$1 * 12 | 0) + 4 | 0;
  $42 = HEAP32[$37 + 4 >> 2] | 0;
  $43 = $this + 212 + ($i$01$i$i$i$1 * 12 | 0) + 4 | 0;
  HEAP32[$43 >> 2] = HEAP32[$37 >> 2];
  HEAP32[$43 + 4 >> 2] = $42;
  $i$01$i$i$i$1 = $i$01$i$i$i$1 + 1 | 0;
 } while (($i$01$i$i$i$1 | 0) != 16);
 HEAP32[$this + 404 >> 2] = HEAP32[$rhs + 404 >> 2];
 return;
}

function __ZNSt3__18functionIFN5Oryol3PtrINS1_10FileSystemEEEvEE4swapERS6_($this, $__f) {
 $this = $this | 0;
 $__f = $__f | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $18 = 0, $3 = 0, $31 = 0, $35 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $__tempbuf = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__tempbuf = sp;
 $0 = $this + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = $1;
 $4 = $__f + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = ($5 | 0) == ($__f | 0);
 if (($1 | 0) == ($this | 0)) if ($6) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($1, $__tempbuf);
  $10 = HEAP32[$0 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 255]($10);
  HEAP32[$0 >> 2] = 0;
  $14 = HEAP32[$4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 12 >> 2] & 63]($14, $1);
  $18 = HEAP32[$4 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$18 >> 2] | 0) + 16 >> 2] & 255]($18);
  HEAP32[$4 >> 2] = 0;
  HEAP32[$0 >> 2] = $this;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$__tempbuf >> 2] | 0) + 12 >> 2] & 63]($__tempbuf, $5);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__tempbuf >> 2] | 0) + 16 >> 2] & 255]($__tempbuf);
  HEAP32[$4 >> 2] = $__f;
  STACKTOP = sp;
  return;
 } else {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($1, $__f);
  $31 = HEAP32[$0 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$31 >> 2] | 0) + 16 >> 2] & 255]($31);
  $35 = $__f + 16 | 0;
  HEAP32[$0 >> 2] = HEAP32[$35 >> 2];
  HEAP32[$35 >> 2] = $__f;
  STACKTOP = sp;
  return;
 } else if ($6) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$__f >> 2] | 0) + 12 >> 2] & 63]($__f, $this);
  $40 = HEAP32[$4 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$40 >> 2] | 0) + 16 >> 2] & 255]($40);
  HEAP32[$4 >> 2] = HEAP32[$0 >> 2];
  HEAP32[$0 >> 2] = $this;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$0 >> 2] = $5;
  HEAP32[$4 >> 2] = $3;
  STACKTOP = sp;
  return;
 }
}

function __ZN8ImGuiStbL16is_word_boundaryEP18ImGuiTextEditStatei($_str, $_idx) {
 $_str = $_str | 0;
 $_idx = $_idx | 0;
 var $14 = 0, $15 = 0, $2 = 0, $27 = 0, $28 = 0, $6 = 0, $9 = 0, label = 0;
 if (($_idx | 0) <= 0) {
  $28 = 1;
  return $28 | 0;
 }
 $2 = HEAP32[$_str + 4 >> 2] | 0;
 if (($2 | 0) < ($_idx | 0)) ___assert_fail(127217, 127226, 806, 127272);
 $6 = HEAP32[$_str + 12 >> 2] | 0;
 $9 = HEAPU16[$6 + ($_idx + -1 << 1) >> 1] | 0;
 L7 : do if (($9 | 0) < 32) switch ($9 | 0) {
 case 9:
  {
   label = 7;
   break;
  }
 default:
  label = 5;
 } else if (($9 | 0) < 12288) switch ($9 | 0) {
 case 32:
  {
   label = 7;
   break L7;
   break;
  }
 default:
  {
   label = 5;
   break L7;
  }
 } else switch ($9 | 0) {
 case 12288:
  {
   label = 7;
   break L7;
   break;
  }
 default:
  {
   label = 5;
   break L7;
  }
 } while (0);
 if ((label | 0) == 5) if (($9 | 4 | 0) == 44) label = 7; else switch ($9 | 0) {
 case 41:
 case 59:
 case 91:
 case 93:
 case 123:
 case 124:
 case 125:
  {
   label = 7;
   break;
  }
 default:
  $27 = 0;
 }
 L16 : do if ((label | 0) == 7) {
  if (($2 | 0) <= ($_idx | 0)) ___assert_fail(127217, 127226, 806, 127272);
  $14 = HEAP16[$6 + ($_idx << 1) >> 1] | 0;
  $15 = $14 & 65535;
  L21 : do if (($15 | 0) < 32) switch ($15 | 0) {
  case 9:
   {
    $27 = 0;
    break L16;
    break;
   }
  default:
   {}
  } else if (($15 | 0) < 12288) switch ($15 | 0) {
  case 32:
   {
    $27 = 0;
    break L16;
    break;
   }
  default:
   break L21;
  } else switch ($15 | 0) {
  case 12288:
   {
    $27 = 0;
    break L16;
    break;
   }
  default:
   break L21;
  } while (0);
  $27 = ($14 << 16 >> 16 == 124 | ($14 << 16 >> 16 == 93 | ($14 << 16 >> 16 == 91 | ($14 << 16 >> 16 == 125 | ($14 << 16 >> 16 == 123 | ($14 << 16 >> 16 == 41 | ($14 << 16 >> 16 == 59 | ($15 | 4 | 0) == 44))))))) ^ 1;
 } while (0);
 $28 = $27 & 1;
 return $28 | 0;
}

function __ZN5ImGui5DummyERK6ImVec2($size) {
 $size = $size | 0;
 var $$idx1 = 0, $$idx1$val = 0.0, $1 = 0, $11 = 0, $14 = 0, $15 = 0, $2 = 0, $22 = 0.0, $24 = 0, $25 = 0.0, $27 = 0.0, $28 = 0, $29 = 0.0, $33 = 0.0, $51 = 0.0, $52 = 0, $53 = 0.0, $56 = 0, $57 = 0.0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0, $bb = 0, $bitcast = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $bb = sp;
 $1 = HEAP32[38201] | 0;
 $2 = $1 + 114 | 0;
 HEAP8[$2 >> 0] = 1;
 if (HEAP8[$1 + 116 >> 0] | 0) {
  STACKTOP = sp;
  return;
 }
 $6 = $1 + 164 | 0;
 $$idx1 = $1 + 168 | 0;
 $$idx1$val = +HEAPF32[$$idx1 >> 2];
 $7 = +HEAPF32[$6 >> 2] + +HEAPF32[$size >> 2];
 $8 = $$idx1$val + +HEAPF32[$size + 4 >> 2];
 $9 = $6;
 $11 = HEAP32[$9 >> 2] | 0;
 $14 = HEAP32[$9 + 4 >> 2] | 0;
 $15 = $bb;
 HEAP32[$15 >> 2] = $11;
 HEAP32[$15 + 4 >> 2] = $14;
 HEAPF32[$bb + 8 >> 2] = $7;
 HEAPF32[$bb + 12 >> 2] = $8;
 $bitcast = (HEAP32[tempDoublePtr >> 2] = $11, +HEAPF32[tempDoublePtr >> 2]);
 $22 = $8 - (HEAP32[tempDoublePtr >> 2] = $14, +HEAPF32[tempDoublePtr >> 2]);
 HEAP8[$2 >> 0] = 1;
 $24 = $1 + 196 | 0;
 $25 = +HEAPF32[$24 >> 2];
 $27 = $25 >= $22 ? $25 : $22;
 $28 = $1 + 200 | 0;
 $29 = +HEAPF32[$28 >> 2];
 $33 = $7 - $bitcast + $bitcast;
 HEAPF32[$1 + 172 >> 2] = $33;
 HEAPF32[$1 + 176 >> 2] = $$idx1$val;
 $51 = +(~~($27 + $$idx1$val + +HEAPF32[37996]) | 0);
 HEAPF32[$1 + 164 >> 2] = +(~~(+HEAPF32[$1 + 20 >> 2] + +HEAPF32[$1 + 368 >> 2] + +HEAPF32[$1 + 372 >> 2]) | 0);
 HEAPF32[$$idx1 >> 2] = $51;
 $52 = $1 + 188 | 0;
 $53 = +HEAPF32[$52 >> 2];
 HEAPF32[$52 >> 2] = $53 >= $33 ? $53 : $33;
 $56 = $1 + 192 | 0;
 $57 = +HEAPF32[$56 >> 2];
 HEAPF32[$56 >> 2] = $57 >= $51 ? $57 : $51;
 HEAPF32[$1 + 204 >> 2] = $27;
 HEAPF32[$1 + 208 >> 2] = $29 >= 0.0 ? $29 : 0.0;
 HEAPF32[$28 >> 2] = 0.0;
 HEAPF32[$24 >> 2] = 0.0;
 __ZN5ImGui7ItemAddERK6ImRectPKj($bb, 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv5glExt5SetupEv() {
 var $11 = 0, $14 = 0, $8 = 0, $strBuilder = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 $strBuilder = sp + 4 | 0;
 if (HEAP8[163328] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75735, 0, 75295, 19, 75351);
  _abort();
 }
 HEAP8[163328] = 1;
 HEAP8[163329] = 0;
 HEAP8[163330] = 0;
 HEAP8[163331] = 0;
 HEAP8[163332] = 0;
 HEAP8[163333] = 0;
 HEAP8[163334] = 0;
 HEAP8[163335] = 0;
 __ZN5Oryol13StringBuilderC2EPKc($strBuilder, _glGetString(7939) | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75295, 28, 75351);
  _abort();
 }
 if (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75392) | 0) $8 = 1; else if (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75418) | 0) $8 = 1; else $8 = (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75443) | 0) & 1;
 HEAP8[163329] = $8;
 if (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75469) | 0) $11 = 1; else $11 = (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75496) | 0) & 1;
 HEAP8[163330] = $11;
 if (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75522) | 0) $14 = 1; else $14 = (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75546) | 0) & 1;
 HEAP8[163331] = $14;
 HEAP8[163332] = (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75570) | 0) & 1;
 HEAP8[163334] = (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75585) | 0) & 1;
 HEAP8[163335] = (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75603) | 0) & 1;
 HEAP8[163333] = (__ZNK5Oryol13StringBuilder8ContainsEPKc($strBuilder, 75617) | 0) & 1;
 if (HEAP8[163334] | 0) {
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol3Log4WarnEPKcz(75637, $vararg_buffer);
 __ZN5Oryol13StringBuilderD2Ev($strBuilder);
 STACKTOP = sp;
 return;
}

function __ZN5ImGui12BeginMenuBarEv() {
 var $$0 = 0, $0 = 0, $11 = 0, $16 = 0, $2 = 0, $28 = 0.0, $29 = 0.0, $31 = 0.0, $47 = 0.0, $48 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0.0, $56 = 0, $59 = 0.0, $61 = 0.0, $69 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $2 = HEAP32[38201] | 0;
 HEAP8[$2 + 114 >> 0] = 1;
 if (HEAP8[$2 + 116 >> 0] | 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $7 = $2 + 8 | 0;
 if (!(HEAP32[$7 >> 2] & 1024)) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $11 = $2 + 242 | 0;
 if (HEAP8[$11 >> 0] | 0) ___assert_fail(127051, 124187, 8341, 127080);
 __ZN5ImGui10BeginGroupEv();
 __ZN5ImGui6PushIDEPKc(127093);
 $16 = HEAP32[$7 >> 2] | 0;
 if (!($16 & 1)) $29 = +HEAPF32[38188] * +HEAPF32[$2 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $29 = 0.0;
 $28 = +HEAPF32[$2 + 24 >> 2] + $29;
 $31 = +HEAPF32[$2 + 20 >> 2];
 if (!($16 & 1024)) $47 = 0.0; else $47 = +HEAPF32[38188] * +HEAPF32[$2 + 568 >> 2] + +HEAPF32[37993] * 2.0;
 $48 = $31 + .5;
 $52 = $28 + -.5 + +HEAPF32[$2 + 108 >> 2];
 $53 = $31 + +HEAPF32[$2 + 36 >> 2] + .5;
 $54 = $28 + $47 + -.5;
 $56 = HEAP32[38201] | 0;
 HEAP8[$56 + 114 >> 0] = 1;
 $59 = $48 >= $53 ? $48 : $53;
 $61 = $52 >= $54 ? $52 : $54;
 if (!($48 <= $59) | !($52 <= $61)) ___assert_fail(124844, 124187, 2338, 124889);
 HEAPF32[$56 + 436 >> 2] = $48;
 HEAPF32[$56 + 440 >> 2] = $52;
 HEAPF32[$56 + 444 >> 2] = $59;
 HEAPF32[$56 + 448 >> 2] = $61;
 $69 = HEAP32[$56 + 572 >> 2] | 0;
 HEAPF32[$0 >> 2] = $48;
 HEAPF32[$0 + 4 >> 2] = $52;
 HEAPF32[$0 + 8 >> 2] = $59;
 HEAPF32[$0 + 12 >> 2] = $61;
 __ZN10ImDrawList12PushClipRectERK6ImVec4($69, $0);
 HEAPF32[$2 + 164 >> 2] = $31 + +HEAPF32[$2 + 244 >> 2];
 HEAPF32[$2 + 168 >> 2] = $28;
 HEAP32[$2 + 264 >> 2] = 1;
 HEAP8[$11 >> 0] = 1;
 __ZN5ImGui29AlignFirstTextHeightToWidgetsEv();
 $$0 = 1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__18functionIFvvEE4swapERS2_($this, $__f) {
 $this = $this | 0;
 $__f = $__f | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $18 = 0, $3 = 0, $31 = 0, $35 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $__tempbuf = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $__tempbuf = sp;
 $0 = $this + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = $1;
 $4 = $__f + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = ($5 | 0) == ($__f | 0);
 if (($1 | 0) == ($this | 0)) if ($6) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($1, $__tempbuf);
  $10 = HEAP32[$0 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 255]($10);
  HEAP32[$0 >> 2] = 0;
  $14 = HEAP32[$4 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$14 >> 2] | 0) + 12 >> 2] & 63]($14, $1);
  $18 = HEAP32[$4 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$18 >> 2] | 0) + 16 >> 2] & 255]($18);
  HEAP32[$4 >> 2] = 0;
  HEAP32[$0 >> 2] = $this;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$__tempbuf >> 2] | 0) + 12 >> 2] & 63]($__tempbuf, $5);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$__tempbuf >> 2] | 0) + 16 >> 2] & 255]($__tempbuf);
  HEAP32[$4 >> 2] = $__f;
  STACKTOP = sp;
  return;
 } else {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 12 >> 2] & 63]($1, $__f);
  $31 = HEAP32[$0 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$31 >> 2] | 0) + 16 >> 2] & 255]($31);
  $35 = $__f + 16 | 0;
  HEAP32[$0 >> 2] = HEAP32[$35 >> 2];
  HEAP32[$35 >> 2] = $__f;
  STACKTOP = sp;
  return;
 } else if ($6) {
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$__f >> 2] | 0) + 12 >> 2] & 63]($__f, $this);
  $40 = HEAP32[$4 >> 2] | 0;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$40 >> 2] | 0) + 16 >> 2] & 255]($40);
  HEAP32[$4 >> 2] = HEAP32[$0 >> 2];
  HEAP32[$0 >> 2] = $this;
  STACKTOP = sp;
  return;
 } else {
  HEAP32[$0 >> 2] = $5;
  HEAP32[$4 >> 2] = $3;
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol5_priv10glRenderer20applyRasterizerStateERKNS_15RasterizerStateE($this, $newState) {
 $this = $this | 0;
 $newState = $newState | 0;
 var $11 = 0, $12 = 0, $13 = 0, $20 = 0, $21 = 0, $23 = 0, $28 = 0, $3 = 0, $35 = 0, $4 = 0, $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 992, 69117);
  _abort();
 }
 $3 = HEAP16[$newState >> 1] & 1;
 $4 = $this + 240 | 0;
 do if ($3 << 16 >> 16 != (HEAP16[$4 >> 1] & 1)) if (!($3 << 16 >> 16)) {
  _glDisable(2884);
  break;
 } else {
  _glEnable(2884);
  break;
 } while (0);
 $9 = HEAP16[$newState >> 1] | 0;
 $11 = ($9 & 65535) >>> 5 & 7;
 $12 = $11 & 65535;
 $13 = HEAP16[$4 >> 1] | 0;
 do if ($11 << 16 >> 16 == (($13 & 65535) >>> 5 & 7)) {
  $21 = $9;
  $23 = $13;
 } else if (($11 & 65535) < 3) {
  _glCullFace(HEAP32[13152 + ($12 << 2) >> 2] | 0);
  $21 = HEAP16[$newState >> 1] | 0;
  $23 = HEAP16[$4 >> 1] | 0;
  break;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69201, 0, 66399, 1007, 69117);
  _abort();
 } while (0);
 $20 = $21 & 2;
 do if (($20 & 65535) >>> 1 << 16 >> 16 != (($23 & 65535) >>> 1 & 1)) if (!($20 << 16 >> 16)) {
  _glDisable(32823);
  break;
 } else {
  _glEnable(32823);
  break;
 } while (0);
 $28 = HEAP16[$newState >> 1] & 4;
 do if (($28 & 65535) >>> 2 << 16 >> 16 != ((HEAPU16[$4 >> 1] | 0) >>> 2 & 1)) if (!($28 << 16 >> 16)) {
  _glDisable(3089);
  break;
 } else {
  _glEnable(3089);
  break;
 } while (0);
 $35 = HEAP16[$newState >> 1] & 8;
 do if (($35 & 65535) >>> 3 << 16 >> 16 != ((HEAPU16[$4 >> 1] | 0) >>> 3 & 1)) if (!($35 << 16 >> 16)) {
  _glDisable(3024);
  break;
 } else {
  _glEnable(3024);
  break;
 } while (0);
 HEAP16[$4 >> 1] = HEAP16[$newState >> 1] | 0;
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 1049, 69117);
  _abort();
 }
}

function __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE14moveInsertBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $10 = 0, $14 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $9 = 0, $i$0 = 0, $i$0$in2 = 0, $i$0$in2$phi = 0, $i$03 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 123034);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 123034);
  _abort();
 }
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 123034);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 123034);
  _abort();
 }
 $9 = $this + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (($3 - $10 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 123034);
  _abort();
 }
 $14 = $3 + -1 | 0;
 HEAP32[$0 + ($3 << 2) >> 2] = HEAP32[$0 + ($14 << 2) >> 2];
 if (($14 | 0) <= ($10 + $index | 0)) {
  $21 = $3 + 1 | 0;
  HEAP32[$2 >> 2] = $21;
  $22 = HEAP32[$9 >> 2] | 0;
  $23 = $22 + $index | 0;
  $24 = HEAP32[$this >> 2] | 0;
  $25 = $24 + ($23 << 2) | 0;
  return $25 | 0;
 }
 $20 = (HEAP32[$9 >> 2] | 0) + $index | 0;
 $i$0$in2 = $3;
 $i$03 = $14;
 while (1) {
  $26 = HEAP32[$this >> 2] | 0;
  HEAP32[$26 + ($i$03 << 2) >> 2] = HEAP32[$26 + ($i$0$in2 + -2 << 2) >> 2];
  $i$0 = $i$03 + -1 | 0;
  if (($i$0 | 0) > ($20 | 0)) {
   $i$0$in2$phi = $i$03;
   $i$03 = $i$0;
   $i$0$in2 = $i$0$in2$phi;
  } else break;
 }
 $21 = $3 + 1 | 0;
 HEAP32[$2 >> 2] = $21;
 $22 = HEAP32[$9 >> 2] | 0;
 $23 = $22 + $index | 0;
 $24 = HEAP32[$this >> 2] | 0;
 $25 = $24 + ($23 << 2) | 0;
 return $25 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS0_16resourceRegistry5EntryEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $25 = 0, $30 = 0, $31 = 0, $4 = 0, $40 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 111502);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 111502);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 24 | 0) | 0;
 $13 = $12 + ($newStart * 24 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 111502);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 24 | 0) | 0;
  while (1) {
   __ZN5Oryol10StringAtom4copyERKS0_($dst$02, $src$01);
   HEAP32[$dst$02 + 4 >> 2] = HEAP32[$src$01 + 4 >> 2];
   $25 = $src$01 + 8 | 0;
   $30 = HEAP32[$25 + 4 >> 2] | 0;
   $31 = $dst$02 + 8 | 0;
   HEAP32[$31 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$31 + 4 >> 2] = $30;
   HEAP32[$dst$02 + 16 >> 2] = HEAP32[$src$01 + 16 >> 2];
   HEAP32[$src$01 >> 2] = 0;
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 24 | 0;
    $src$01 = $src$01 + 24 | 0;
   }
  }
 }
 $40 = HEAP32[$this >> 2] | 0;
 if ($40 | 0) __ZN5Oryol6Memory4FreeEPv($40);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5ImGui8EndPopupEv() {
 var $$0$i$ph$i = 0, $$0$i1$ph$i = 0, $$pre$i = 0, $1 = 0, $13 = 0, $27 = 0, $28 = 0, $3 = 0, $34 = 0, $39 = 0, $40 = 0, $44 = 0, label = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $3 = $1 + 8 | 0;
 if (!(HEAP32[$3 >> 2] & 33554432)) ___assert_fail(126685, 124187, 3292, 126724);
 if ((HEAP32[38232] | 0) <= 0) ___assert_fail(126733, 124187, 3293, 126724);
 __ZN5ImGui3EndEv();
 if (HEAP32[$3 >> 2] & 67108864 | 0) return;
 $13 = 152892;
 $$pre$i = HEAP32[$13 >> 2] | 0;
 if (($$pre$i | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $27 = $$pre$i + -1 | 0;
 $28 = HEAP32[38225] | 0;
 switch (HEAP32[$28 + ($27 * 12 | 0) >> 2] | 0) {
 case 0:
  {
   $$0$i$ph$i = 151936;
   label = 14;
   break;
  }
 case 2:
  {
   $$0$i$ph$i = 151956;
   label = 14;
   break;
  }
 case 4:
  {
   $$0$i$ph$i = 151964;
   label = 14;
   break;
  }
 case 6:
  {
   $$0$i$ph$i = 151976;
   label = 14;
   break;
  }
 case 9:
  {
   $$0$i$ph$i = 152008;
   label = 14;
   break;
  }
 case 10:
  {
   $$0$i$ph$i = 152024;
   label = 14;
   break;
  }
 case 1:
  {
   $$0$i1$ph$i = 151940;
   label = 19;
   break;
  }
 case 3:
  {
   $$0$i1$ph$i = 151948;
   label = 19;
   break;
  }
 case 5:
  {
   $$0$i1$ph$i = 151968;
   label = 19;
   break;
  }
 case 7:
  {
   $$0$i1$ph$i = 151980;
   label = 19;
   break;
  }
 case 8:
  {
   $$0$i1$ph$i = 151988;
   label = 19;
   break;
  }
 default:
  {}
 }
 if ((label | 0) == 14) HEAP32[$$0$i$ph$i >> 2] = HEAP32[$28 + ($27 * 12 | 0) + 4 >> 2]; else if ((label | 0) == 19) {
  $34 = $28 + ($27 * 12 | 0) + 4 | 0;
  $39 = HEAP32[$34 + 4 >> 2] | 0;
  $40 = $$0$i1$ph$i;
  HEAP32[$40 >> 2] = HEAP32[$34 >> 2];
  HEAP32[$40 + 4 >> 2] = $39;
 }
 $44 = HEAP32[$13 >> 2] | 0;
 if (($44 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 HEAP32[$13 >> 2] = $44 + -1;
 return;
}

function __ZL17AddWindowSettingsPKc($name) {
 $name = $name | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $19 = 0, $2 = 0, $20 = 0, $24 = 0, $26 = 0, $3 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $41 = 0, $46 = 0;
 $0 = 152864;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $1 + 1 | 0;
 $3 = 152868;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) > ($1 | 0)) $32 = 146892; else {
  if (!$4) $10 = 8; else $10 = (($4 | 0) / 2 | 0) + $4 | 0;
  $11 = ($10 | 0) > ($2 | 0) ? $10 : $2;
  if (($4 | 0) < ($11 | 0)) {
   $14 = 147664;
   HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 1;
   $19 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($11 * 28 | 0) | 0;
   $20 = 152872;
   _memcpy($19 | 0, HEAP32[$20 >> 2] | 0, (HEAP32[$0 >> 2] | 0) * 28 | 0) | 0;
   $24 = HEAP32[$20 >> 2] | 0;
   if ($24 | 0) {
    $26 = 147664;
    HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($24);
   HEAP32[$20 >> 2] = $19;
   HEAP32[$3 >> 2] = $11;
   $32 = 146892;
  } else $32 = 146892;
 }
 HEAP32[$0 >> 2] = $2;
 $33 = HEAP32[$32 + 5972 >> 2] | 0;
 if (($33 | 0) > 0) {
  $35 = $33 + -1 | 0;
  $37 = HEAP32[$32 + 5980 >> 2] | 0;
  $38 = $37 + ($35 * 28 | 0) | 0;
  $40 = (_strlen($name) | 0) + 1 | 0;
  $41 = $32 + 772 | 0;
  HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 1;
  $46 = FUNCTION_TABLE_ii[HEAP32[$32 + 176 >> 2] & 63]($40) | 0;
  _memcpy($46 | 0, $name | 0, $40 | 0) | 0;
  HEAP32[$38 >> 2] = $46;
  HEAP32[$37 + ($35 * 28 | 0) + 4 >> 2] = __Z6ImHashPKvij($name, 0, 0) | 0;
  HEAP8[$37 + ($35 * 28 | 0) + 24 >> 0] = 0;
  HEAP32[$37 + ($35 * 28 | 0) + 8 >> 2] = 2139095039;
  HEAP32[$37 + ($35 * 28 | 0) + 12 >> 2] = 2139095039;
  HEAP32[$37 + ($35 * 28 | 0) + 16 >> 2] = 0;
  HEAP32[$37 + ($35 * 28 | 0) + 20 >> 2] = 0;
  return $38 | 0;
 } else ___assert_fail(127436, 127226, 815, 127445);
 return 0;
}

function __ZN5Oryol16stringAtomBuffer9AddStringEPNS_15stringAtomTableEiPKc($this, $table, $hash, $str) {
 $this = $this | 0;
 $table = $table | 0;
 $hash = $hash | 0;
 $str = $str | 0;
 var $11 = 0, $15 = 0, $17 = 0, $2 = 0, $24 = 0, $26 = 0, $29 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $newChunk$i1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $newChunk$i1 = sp;
 if (!$table) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123755, 0, 123772, 38, 123844);
  _abort();
 }
 if (!$str) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123960, 0, 123772, 39, 123844);
  _abort();
 }
 $2 = $this + 24 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (!$3) {
  $5 = __ZN5Oryol6Memory5AllocEi(16384) | 0;
  HEAP32[$newChunk$i1 >> 2] = $5;
  __ZN5Oryol5ArrayIPaE3AddIJRS1_EEEvDpOT_($this, $newChunk$i1);
  HEAP32[$2 >> 2] = $5;
  $11 = $5;
 } else $11 = $3;
 $7 = _strlen($str) | 0;
 $8 = $7 + 17 | 0;
 if ($8 >>> 0 >= 16384) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123975, 0, 123772, 49, 123844);
  _abort();
 }
 $15 = HEAP32[$this + 12 >> 2] | 0;
 if ((HEAP32[$this + 8 >> 2] | 0) == ($15 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(124006, 0, 123391, 286, 124046);
  _abort();
 }
 $17 = HEAP32[$this >> 2] | 0;
 if (!$17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(124006, 0, 123391, 286, 124046);
  _abort();
 }
 if (($11 + $8 | 0) >>> 0 < ((HEAP32[$17 + ($15 + -1 << 2) >> 2] | 0) + 16384 | 0) >>> 0) $26 = $11; else {
  $24 = __ZN5Oryol6Memory5AllocEi(16384) | 0;
  HEAP32[$newChunk$i1 >> 2] = $24;
  __ZN5Oryol5ArrayIPaE3AddIJRS1_EEEvDpOT_($this, $newChunk$i1);
  HEAP32[$2 >> 2] = $24;
  $26 = $24;
 }
 HEAP32[$26 >> 2] = $table;
 HEAP32[$26 + 4 >> 2] = $hash;
 HEAP32[$26 + 8 >> 2] = $7;
 $29 = $26 + 16 | 0;
 HEAP32[$26 + 12 >> 2] = $29;
 _strcpy($29, $str) | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + $8 + 3 & -4;
 STACKTOP = sp;
 return $26 | 0;
}

function __ZN5ImGui6PushIDEi($int_id) {
 $int_id = $int_id | 0;
 var $0 = 0, $13 = 0, $18 = 0, $19 = 0, $22 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $36 = 0, $40 = 0, $42 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $3 = HEAP32[38201] | 0;
 HEAP8[$3 + 114 >> 0] = 1;
 HEAP32[$0 >> 2] = $int_id;
 $5 = $3 + 424 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (($6 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $9 = $3 + 432 | 0;
 $13 = __Z6ImHashPKvij($0, 4, HEAP32[(HEAP32[$9 >> 2] | 0) + ($6 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($13 | 0)) HEAP8[152852] = 1;
 $18 = HEAP32[$5 >> 2] | 0;
 $19 = $3 + 428 | 0;
 if (($18 | 0) != (HEAP32[$19 >> 2] | 0)) {
  $48 = $18;
  $47 = $48 + 1 | 0;
  HEAP32[$5 >> 2] = $47;
  $49 = HEAP32[$9 >> 2] | 0;
  $50 = $49 + ($48 << 2) | 0;
  HEAP32[$50 >> 2] = $13;
  STACKTOP = sp;
  return;
 }
 $22 = $18 + 1 | 0;
 if (!$18) $27 = 8; else $27 = (($18 | 0) / 2 | 0) + $18 | 0;
 $28 = ($27 | 0) > ($22 | 0) ? $27 : $22;
 if (($18 | 0) >= ($28 | 0)) {
  $48 = $18;
  $47 = $48 + 1 | 0;
  HEAP32[$5 >> 2] = $47;
  $49 = HEAP32[$9 >> 2] | 0;
  $50 = $49 + ($48 << 2) | 0;
  HEAP32[$50 >> 2] = $13;
  STACKTOP = sp;
  return;
 }
 $31 = 147664;
 HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 1;
 $36 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($28 << 2) | 0;
 _memcpy($36 | 0, HEAP32[$9 >> 2] | 0, HEAP32[$5 >> 2] << 2 | 0) | 0;
 $40 = HEAP32[$9 >> 2] | 0;
 if ($40 | 0) {
  $42 = 147664;
  HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + -1;
 }
 FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($40);
 HEAP32[$9 >> 2] = $36;
 HEAP32[$19 >> 2] = $28;
 $48 = HEAP32[$5 >> 2] | 0;
 $47 = $48 + 1 | 0;
 HEAP32[$5 >> 2] = $47;
 $49 = HEAP32[$9 >> 2] | 0;
 $50 = $49 + ($48 << 2) | 0;
 HEAP32[$50 >> 2] = $13;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE14moveInsertBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $10 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $9 = 0, $i$0 = 0, $i$0$in2 = 0, $i$0$in2$phi = 0, $i$03 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 116714);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 116714);
  _abort();
 }
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122978, 0, 123391, 471, 116714);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 116714);
  _abort();
 }
 $9 = $this + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (($3 - $10 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 472, 116714);
  _abort();
 }
 $14 = $3 + -1 | 0;
 HEAP32[$0 + ($3 << 2) >> 2] = HEAP32[$0 + ($14 << 2) >> 2];
 if (($14 | 0) <= ($10 + $index | 0)) {
  $22 = $3 + 1 | 0;
  HEAP32[$2 >> 2] = $22;
  $23 = HEAP32[$9 >> 2] | 0;
  $24 = $23 + $index | 0;
  $25 = HEAP32[$this >> 2] | 0;
  $26 = $25 + ($24 << 2) | 0;
  return $26 | 0;
 }
 $19 = HEAP32[$this >> 2] | 0;
 $21 = (HEAP32[$9 >> 2] | 0) + $index | 0;
 $i$0$in2 = $3;
 $i$03 = $14;
 while (1) {
  HEAP32[$19 + ($i$03 << 2) >> 2] = HEAP32[$19 + ($i$0$in2 + -2 << 2) >> 2];
  $i$0 = $i$03 + -1 | 0;
  if (($i$0 | 0) > ($21 | 0)) {
   $i$0$in2$phi = $i$03;
   $i$03 = $i$0;
   $i$0$in2 = $i$0$in2$phi;
  } else break;
 }
 $22 = $3 + 1 | 0;
 HEAP32[$2 >> 2] = $22;
 $23 = HEAP32[$9 >> 2] | 0;
 $24 = $23 + $index | 0;
 $25 = HEAP32[$this >> 2] | 0;
 $26 = $25 + ($24 << 2) | 0;
 return $26 | 0;
}

function __ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi($points, $num_points, $x0, $y0, $x1, $y1, $x2, $y2, $objspace_flatness_squared, $n) {
 $points = $points | 0;
 $num_points = $num_points | 0;
 $x0 = +$x0;
 $y0 = +$y0;
 $x1 = +$x1;
 $y1 = +$y1;
 $x2 = +$x2;
 $y2 = +$y2;
 $objspace_flatness_squared = +$objspace_flatness_squared;
 $n = $n | 0;
 var $16 = 0.0, $18 = 0.0, $26 = 0.0, $27 = 0.0, $3 = 0.0, $35 = 0.0, $39 = 0.0, $47 = 0, $7 = 0.0, $n$tr5 = 0, $x0$tr1 = 0.0, $x0$tr1$phi = 0.0, $x1$tr3 = 0.0, $y0$tr2 = 0.0, $y0$tr2$phi = 0.0, $y1$tr4 = 0.0, label = 0, $n$tr5$looptemp = 0;
 $3 = ($x1 * 2.0 + $x0 + $x2) * .25;
 $7 = ($y1 * 2.0 + $y0 + $y2) * .25;
 if (($n | 0) > 16) return;
 $16 = ($x2 + $x0) * .5 - $3;
 $18 = ($y2 + $y0) * .5 - $7;
 $26 = $3;
 $27 = $7;
 $n$tr5 = $n;
 $x0$tr1 = $x0;
 $x1$tr3 = $x1;
 $y0$tr2 = $y0;
 $y1$tr4 = $y1;
 while (1) {
  if (!($16 * $16 + $18 * $18 > $objspace_flatness_squared)) break;
  $n$tr5$looptemp = $n$tr5;
  $n$tr5 = $n$tr5 + 1 | 0;
  __ZL22stbtt__tesselate_curveP12stbtt__pointPifffffffi($points, $num_points, $x0$tr1, $y0$tr2, ($x0$tr1 + $x1$tr3) * .5, ($y0$tr2 + $y1$tr4) * .5, $26, $27, $objspace_flatness_squared, $n$tr5);
  $x1$tr3 = ($x1$tr3 + $x2) * .5;
  $y1$tr4 = ($y1$tr4 + $y2) * .5;
  $35 = ($26 + $x1$tr3 * 2.0 + $x2) * .25;
  $39 = ($27 + $y1$tr4 * 2.0 + $y2) * .25;
  if (($n$tr5$looptemp | 0) > 15) {
   label = 8;
   break;
  } else {
   $y0$tr2$phi = $27;
   $x0$tr1$phi = $26;
   $16 = ($26 + $x2) * .5 - $35;
   $18 = ($27 + $y2) * .5 - $39;
   $26 = $35;
   $27 = $39;
   $y0$tr2 = $y0$tr2$phi;
   $x0$tr1 = $x0$tr1$phi;
  }
 }
 if ((label | 0) == 8) return;
 $47 = HEAP32[$num_points >> 2] | 0;
 if ($points | 0) {
  HEAPF32[$points + ($47 << 3) >> 2] = $x2;
  HEAPF32[$points + ($47 << 3) + 4 >> 2] = $y2;
 }
 HEAP32[$num_points >> 2] = $47 + 1;
 return;
}

function _vfprintf($f, $fmt, $ap) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$ = 0, $$0 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $28 = 0, $33 = 0, $6 = 0, $7 = 0, $ap2 = 0, $internal_buf = 0, $nl_arg = 0, $nl_type = 0, $ret$1 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 $ap2 = sp + 120 | 0;
 $nl_type = sp + 80 | 0;
 $nl_arg = sp;
 $internal_buf = sp + 136 | 0;
 dest = $nl_type;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$ap2 >> 2] = HEAP32[$ap >> 2];
 if ((_printf_core(0, $fmt, $ap2, $nl_arg, $nl_type) | 0) < 0) $$0 = -1; else {
  if ((HEAP32[$f + 76 >> 2] | 0) > -1) $33 = ___lockfile($f) | 0; else $33 = 0;
  $6 = HEAP32[$f >> 2] | 0;
  $7 = $6 & 32;
  if ((HEAP8[$f + 74 >> 0] | 0) < 1) HEAP32[$f >> 2] = $6 & -33;
  $12 = $f + 48 | 0;
  if (!(HEAP32[$12 >> 2] | 0)) {
   $16 = $f + 44 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   HEAP32[$16 >> 2] = $internal_buf;
   $18 = $f + 28 | 0;
   HEAP32[$18 >> 2] = $internal_buf;
   $19 = $f + 20 | 0;
   HEAP32[$19 >> 2] = $internal_buf;
   HEAP32[$12 >> 2] = 80;
   $21 = $f + 16 | 0;
   HEAP32[$21 >> 2] = $internal_buf + 80;
   $22 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
   if (!$17) $ret$1 = $22; else {
    FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, 0, 0) | 0;
    $$ = (HEAP32[$19 >> 2] | 0) == 0 ? -1 : $22;
    HEAP32[$16 >> 2] = $17;
    HEAP32[$12 >> 2] = 0;
    HEAP32[$21 >> 2] = 0;
    HEAP32[$18 >> 2] = 0;
    HEAP32[$19 >> 2] = 0;
    $ret$1 = $$;
   }
  } else $ret$1 = _printf_core($f, $fmt, $ap2, $nl_arg, $nl_type) | 0;
  $28 = HEAP32[$f >> 2] | 0;
  HEAP32[$f >> 2] = $28 | $7;
  if ($33 | 0) ___unlockfile($f);
  $$0 = ($28 & 32 | 0) == 0 ? $ret$1 : -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE7destroyEv($this) {
 $this = $this | 0;
 var $$pre$phi6Z2D = 0, $$pre4 = 0, $0 = 0, $10 = 0, $2 = 0, $21 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $38 = 0, $41 = 0, $6 = 0, $8 = 0, $i$01 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $$pre4 = $this + 8 | 0;
 if (!$0) {
  $$pre$phi6Z2D = $this + 12 | 0;
  HEAP32[$this >> 2] = 0;
  $41 = $this + 4 | 0;
  HEAP32[$41 >> 2] = 0;
  HEAP32[$$pre4 >> 2] = 0;
  HEAP32[$$pre$phi6Z2D >> 2] = 0;
  return;
 }
 $2 = HEAP32[$$pre4 >> 2] | 0;
 $3 = $this + 12 | 0;
 if (($2 | 0) < (HEAP32[$3 >> 2] | 0)) {
  $8 = $0;
  $i$01 = $2;
  while (1) {
   $10 = HEAP32[$8 + ($i$01 * 56 | 0) + 48 >> 2] | 0;
   if (($10 | 0) == ($8 + ($i$01 * 56 | 0) + 32 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 255]($10); else if ($10 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 255]($10);
   $21 = HEAP32[$8 + ($i$01 * 56 | 0) + 24 >> 2] | 0;
   if (($21 | 0) == ($8 + ($i$01 * 56 | 0) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 16 >> 2] & 255]($21); else if ($21 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 20 >> 2] & 255]($21);
   $30 = $8 + ($i$01 * 56 | 0) | 0;
   $31 = HEAP32[$30 >> 2] | 0;
   if ($31 | 0) {
    $33 = $31 + 4 | 0;
    $34 = HEAP32[$33 >> 2] | 0;
    HEAP32[$33 >> 2] = $34 - 1;
    if (($34 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$31 >> 2] >> 2] & 255]($31);
    HEAP32[$30 >> 2] = 0;
   }
   $38 = $i$01 + 1 | 0;
   if (($38 | 0) >= (HEAP32[$3 >> 2] | 0)) break;
   $8 = HEAP32[$this >> 2] | 0;
   $i$01 = $38;
  }
  $6 = HEAP32[$this >> 2] | 0;
 } else $6 = $0;
 __ZN5Oryol6Memory4FreeEPv($6);
 $$pre$phi6Z2D = $3;
 HEAP32[$this >> 2] = 0;
 $41 = $this + 4 | 0;
 HEAP32[$41 >> 2] = 0;
 HEAP32[$$pre4 >> 2] = 0;
 HEAP32[$$pre$phi6Z2D >> 2] = 0;
 return;
}

function __ZN2UID2Ev($this) {
 $this = $this | 0;
 var $$pre5$i$i$i = 0, $$pre6$i$i2$pre$phi$iZZZZ2D = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $19 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $i$01$i$i$i = 0;
 $0 = $this + 1049440 | 0;
 HEAP32[$this + 1049456 >> 2] = 0;
 HEAP32[$this + 1049460 >> 2] = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $$pre5$i$i$i = $this + 1049448 | 0;
 if (!$3) $$pre6$i$i2$pre$phi$iZZZZ2D = $this + 1049452 | 0; else {
  $5 = HEAP32[$$pre5$i$i$i >> 2] | 0;
  $6 = $this + 1049452 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) {
   $11 = $3;
   $31 = $7;
   $i$01$i$i$i = $5;
   while (1) {
    $10 = $11 + ($i$01$i$i$i << 2) | 0;
    $12 = HEAP32[$10 >> 2] | 0;
    if (!$12) $21 = $31; else {
     $14 = $12 + 4 | 0;
     $15 = HEAP32[$14 >> 2] | 0;
     HEAP32[$14 >> 2] = $15 - 1;
     if (($15 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$12 >> 2] >> 2] & 255]($12);
     HEAP32[$10 >> 2] = 0;
     $21 = HEAP32[$6 >> 2] | 0;
    }
    $19 = $i$01$i$i$i + 1 | 0;
    if (($19 | 0) >= ($21 | 0)) break;
    $11 = HEAP32[$0 >> 2] | 0;
    $31 = $21;
    $i$01$i$i$i = $19;
   }
   $9 = HEAP32[$0 >> 2] | 0;
  } else $9 = $3;
  __ZN5Oryol6Memory4FreeEPv($9);
  $$pre6$i$i2$pre$phi$iZZZZ2D = $6;
 }
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 1049444 >> 2] = 0;
 HEAP32[$$pre5$i$i$i >> 2] = 0;
 HEAP32[$$pre6$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
 $23 = $this + 12 | 0;
 $24 = $this + 116 | 0;
 $25 = HEAP32[$24 >> 2] | 0;
 if ($25 | 0) __ZN5Oryol6Memory4FreeEPv($25);
 HEAP32[$24 >> 2] = 0;
 HEAP32[$this + 108 >> 2] = 0;
 HEAP32[$this + 112 >> 2] = 0;
 HEAP32[$this + 64 >> 2] = 0;
 __ZN5Oryol6StringD2Ev($this + 40 | 0);
 __ZN5Oryol5ArrayIN10FileLoader4ItemEE7destroyEv($23);
 __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEED2Ev($23);
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE5eraseEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $1 = 0, $2 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $46 = 0, $48 = 0, $5 = 0, $i$02$i = 0, $i$02$i4 = 0, $i$02$i$looptemp = 0, $i$02$i4$looptemp = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 610, 115471);
  _abort();
 }
 if (!$index) {
  HEAP32[$2 >> 2] = $3 + 1;
  return;
 }
 if (($4 + -1 | 0) == ($index | 0)) {
  HEAP32[$0 >> 2] = $1 + -1;
  return;
 }
 if (($4 >> 1 | 0) <= ($index | 0)) {
  $36 = $3 + $index | 0;
  $37 = $1 + -1 | 0;
  if (($36 | 0) < ($37 | 0)) {
   $i$02$i = $36;
   do {
    $i$02$i$looptemp = $i$02$i;
    $i$02$i = $i$02$i + 1 | 0;
    $41 = $5 + ($i$02$i << 4) | 0;
    $46 = HEAP32[$41 + 4 >> 2] | 0;
    $48 = $5 + ($i$02$i$looptemp << 4) | 0;
    HEAP32[$48 >> 2] = HEAP32[$41 >> 2];
    HEAP32[$48 + 4 >> 2] = $46;
    HEAP32[$5 + ($i$02$i$looptemp << 4) + 8 >> 2] = HEAP32[$5 + ($i$02$i << 4) + 8 >> 2];
   } while (($i$02$i | 0) != ($37 | 0));
  }
  HEAP32[$0 >> 2] = $37;
  return;
 }
 if (($index | 0) > 0) {
  $i$02$i4 = $3 + $index | 0;
  do {
   $i$02$i4$looptemp = $i$02$i4;
   $i$02$i4 = $i$02$i4 + -1 | 0;
   $20 = $5 + ($i$02$i4 << 4) | 0;
   $25 = HEAP32[$20 + 4 >> 2] | 0;
   $27 = $5 + ($i$02$i4$looptemp << 4) | 0;
   HEAP32[$27 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$27 + 4 >> 2] = $25;
   HEAP32[$5 + ($i$02$i4$looptemp << 4) + 8 >> 2] = HEAP32[$5 + ($i$02$i4 << 4) + 8 >> 2];
  } while (($i$02$i4 | 0) > ($3 | 0));
 }
 HEAP32[$2 >> 2] = $3 + 1;
 return;
}

function __ZN5ImGui7PopFontEv() {
 var $$in = 0, $10 = 0, $20 = 0, $23 = 0, $26 = 0.0, $36 = 0, $4 = 0, $43 = 0, $44 = 0.0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $7 = 0;
 __ZN10ImDrawList12PopTextureIDEv(HEAP32[(HEAP32[38201] | 0) + 572 >> 2] | 0);
 $4 = 152904;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($5 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 $7 = $5 + -1 | 0;
 HEAP32[$4 >> 2] = $7;
 do if (!$7) {
  $10 = HEAP32[36755] | 0;
  if ((HEAP32[$10 + 32 >> 2] | 0) > 0) {
   $$in = HEAP32[$10 + 40 >> 2] | 0;
   break;
  } else ___assert_fail(127217, 127226, 805, 127272);
 } else $$in = (HEAP32[38228] | 0) + ($5 + -2 << 2) | 0; while (0);
 $20 = HEAP32[$$in >> 2] | 0;
 if (!$20) ___assert_fail(125406, 124187, 4320, 125431);
 $23 = HEAP32[$20 + 36 >> 2] | 0;
 if (!$23) ___assert_fail(125406, 124187, 4320, 125431);
 $26 = +HEAPF32[$20 + 4 >> 2];
 if (!($26 > 0.0)) ___assert_fail(125446, 124187, 4321, 125431);
 HEAP32[38186] = $20;
 HEAPF32[38188] = $26 * (+HEAPF32[36756] * +HEAPF32[$20 >> 2]);
 $36 = HEAP32[38201] | 0;
 if (!$36) {
  $44 = 0.0;
  $43 = 152748;
  HEAPF32[$43 >> 2] = $44;
  $45 = 152756;
  $46 = $23 + 24 | 0;
  $47 = $46;
  $48 = $47;
  $49 = HEAP32[$48 >> 2] | 0;
  $50 = $47 + 4 | 0;
  $51 = $50;
  $52 = HEAP32[$51 >> 2] | 0;
  $53 = $45;
  $54 = $53;
  HEAP32[$54 >> 2] = $49;
  $55 = $53 + 4 | 0;
  $56 = $55;
  HEAP32[$56 >> 2] = $52;
  return;
 }
 $44 = +HEAPF32[38188] * +HEAPF32[$36 + 568 >> 2];
 $43 = 152748;
 HEAPF32[$43 >> 2] = $44;
 $45 = 152756;
 $46 = $23 + 24 | 0;
 $47 = $46;
 $48 = $47;
 $49 = HEAP32[$48 >> 2] | 0;
 $50 = $47 + 4 | 0;
 $51 = $50;
 $52 = HEAP32[$51 >> 2] | 0;
 $53 = $45;
 $54 = $53;
 HEAP32[$54 >> 2] = $49;
 $55 = $53 + 4 | 0;
 $56 = $55;
 HEAP32[$56 >> 2] = $52;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE15moveInsertFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $10 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $29 = 0, $3 = 0, $i$01 = 0, $i$01$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 19025);
  _abort();
 }
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 19025);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 19025);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - $3 | 0) < ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 19025);
  _abort();
 }
 $10 = $3 + -1 | 0;
 __ZN5Oryol6StringC2EOS0_($0 + ($10 << 4) | 0, $0 + ($3 << 4) | 0);
 __ZN5Oryol6StringC2EOS0_($0 + ($10 << 4) + 8 | 0, $0 + ($3 << 4) + 8 | 0);
 $15 = HEAP32[$2 >> 2] | 0;
 $16 = $index + -1 | 0;
 if (($15 | 0) < ($16 + $15 | 0)) $i$01 = $15; else {
  $$lcssa = $15;
  $19 = $$lcssa + -1 | 0;
  HEAP32[$2 >> 2] = $19;
  $20 = $19 + $index | 0;
  $21 = HEAP32[$this >> 2] | 0;
  $22 = $21 + ($20 << 4) | 0;
  return $22 | 0;
 }
 do {
  $23 = HEAP32[$this >> 2] | 0;
  $i$01$looptemp = $i$01;
  $i$01 = $i$01 + 1 | 0;
  __ZN5Oryol6StringaSEOS0_($23 + ($i$01$looptemp << 4) | 0, $23 + ($i$01 << 4) | 0);
  __ZN5Oryol6StringaSEOS0_($23 + ($i$01$looptemp << 4) + 8 | 0, $23 + ($i$01 << 4) + 8 | 0);
  $29 = HEAP32[$2 >> 2] | 0;
 } while (($i$01 | 0) < ($16 + $29 | 0));
 $$lcssa = $29;
 $19 = $$lcssa + -1 | 0;
 HEAP32[$2 >> 2] = $19;
 $20 = $19 + $index | 0;
 $21 = HEAP32[$this >> 2] | 0;
 $22 = $21 + ($20 << 4) | 0;
 return $22 | 0;
}

function __ZN5Oryol11ShaderSetupC2ERKNS_7LocatorE($this, $locator) {
 $this = $this | 0;
 $locator = $locator | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($this, $locator);
 HEAP32[$this + 4 >> 2] = HEAP32[$locator + 4 >> 2];
 __ZN5Oryol11ShaderSetup12programEntryC2Ev($this + 16 | 0);
 HEAP32[$this + 324 >> 2] = 0;
 HEAP32[$this + 328 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 336 | 0);
 HEAP32[$this + 608 >> 2] = -1;
 HEAP32[$this + 612 >> 2] = -1;
 HEAP32[$this + 616 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 624 | 0);
 HEAP32[$this + 896 >> 2] = -1;
 HEAP32[$this + 900 >> 2] = -1;
 HEAP32[$this + 904 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 912 | 0);
 HEAP32[$this + 1184 >> 2] = -1;
 HEAP32[$this + 1188 >> 2] = -1;
 HEAP32[$this + 1192 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 1200 | 0);
 HEAP32[$this + 1472 >> 2] = -1;
 HEAP32[$this + 1476 >> 2] = -1;
 HEAP32[$this + 1480 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 1488 | 0);
 HEAP32[$this + 1760 >> 2] = -1;
 HEAP32[$this + 1764 >> 2] = -1;
 HEAP32[$this + 1768 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 1776 | 0);
 HEAP32[$this + 2048 >> 2] = -1;
 HEAP32[$this + 2052 >> 2] = -1;
 HEAP32[$this + 2056 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 2064 | 0);
 HEAP32[$this + 2336 >> 2] = -1;
 HEAP32[$this + 2340 >> 2] = -1;
 HEAP32[$this + 2344 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 2352 | 0);
 HEAP32[$this + 2624 >> 2] = -1;
 HEAP32[$this + 2628 >> 2] = -1;
 HEAP32[$this + 2632 >> 2] = 0;
 HEAP32[$this + 2636 >> 2] = 0;
 __ZN5Oryol18TextureBlockLayoutC2Ev($this + 2640 | 0);
 HEAP32[$this + 2836 >> 2] = -1;
 HEAP32[$this + 2840 >> 2] = 0;
 __ZN5Oryol18TextureBlockLayoutC2Ev($this + 2844 | 0);
 HEAP32[$this + 3040 >> 2] = -1;
 return;
}

function __ZN5ImGui12PushStyleVarEiRK6ImVec2($idx, $val) {
 $idx = $idx | 0;
 $val = $val | 0;
 var $$0$i$ph = 0, $10 = 0, $13 = 0, $18 = 0, $19 = 0, $22 = 0, $27 = 0, $28 = 0, $32 = 0, $34 = 0, $40 = 0, $42 = 0, $46 = 0, $5 = 0, $51 = 0, $52 = 0, $7 = 0, $8 = 0, $9 = 0;
 switch ($idx | 0) {
 case 1:
  {
   $$0$i$ph = 151940;
   break;
  }
 case 3:
  {
   $$0$i$ph = 151948;
   break;
  }
 case 5:
  {
   $$0$i$ph = 151968;
   break;
  }
 case 7:
  {
   $$0$i$ph = 151980;
   break;
  }
 case 8:
  {
   $$0$i$ph = 151988;
   break;
  }
 default:
  ___assert_fail(126768, 124187, 4456, 126779);
 }
 $5 = HEAP32[$$0$i$ph >> 2] | 0;
 $7 = HEAP32[$$0$i$ph + 4 >> 2] | 0;
 $8 = 152892;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = 152896;
 if (($9 | 0) == (HEAP32[$10 >> 2] | 0)) {
  $13 = $9 + 1 | 0;
  if (!$9) $18 = 8; else $18 = (($9 | 0) / 2 | 0) + $9 | 0;
  $19 = ($18 | 0) > ($13 | 0) ? $18 : $13;
  if (($9 | 0) < ($19 | 0)) {
   $22 = 147664;
   HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1;
   $27 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($19 * 12 | 0) | 0;
   $28 = 152900;
   _memcpy($27 | 0, HEAP32[$28 >> 2] | 0, (HEAP32[$8 >> 2] | 0) * 12 | 0) | 0;
   $32 = HEAP32[$28 >> 2] | 0;
   if ($32 | 0) {
    $34 = 147664;
    HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($32);
   HEAP32[$28 >> 2] = $27;
   HEAP32[$10 >> 2] = $19;
   $40 = HEAP32[$8 >> 2] | 0;
  } else $40 = $9;
 } else $40 = $9;
 HEAP32[$8 >> 2] = $40 + 1;
 $42 = HEAP32[38225] | 0;
 HEAP32[$42 + ($40 * 12 | 0) >> 2] = $idx;
 HEAP32[$42 + ($40 * 12 | 0) + 4 >> 2] = $5;
 HEAP32[$42 + ($40 * 12 | 0) + 8 >> 2] = $7;
 $46 = $val;
 $51 = HEAP32[$46 + 4 >> 2] | 0;
 $52 = $$0$i$ph;
 HEAP32[$52 >> 2] = HEAP32[$46 >> 2];
 HEAP32[$52 + 4 >> 2] = $51;
 return;
}

function __ZN5Oryol5_priv14displayMgrBaseD2Ev($this) {
 $this = $this | 0;
 var $$pre4$i$i$i = 0, $$pre5$i$i2$pre$phi$iZZZZ2D = 0, $12 = 0, $14 = 0, $16 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $6 = 0, $8 = 0, $9 = 0, $i$01$i$i$i = 0;
 if (HEAP8[$this + 228 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(46432, 0, 46452, 21, 46519);
  _abort();
 }
 $3 = $this + 172 | 0;
 HEAP32[$this + 188 >> 2] = 0;
 HEAP32[$this + 192 >> 2] = 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $$pre4$i$i$i = $this + 180 | 0;
 if (!$6) {
  $$pre5$i$i2$pre$phi$iZZZZ2D = $this + 184 | 0;
  $28 = $this + 176 | 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$28 >> 2] = 0;
  HEAP32[$$pre4$i$i$i >> 2] = 0;
  HEAP32[$$pre5$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
  $29 = $this + 160 | 0;
  __ZN5Oryol6StringD2Ev($29);
  $30 = $this + 28 | 0;
  __ZN5Oryol6StringD2Ev($30);
  return;
 }
 $8 = HEAP32[$$pre4$i$i$i >> 2] | 0;
 $9 = $this + 184 | 0;
 if (($8 | 0) < (HEAP32[$9 >> 2] | 0)) {
  $14 = $6;
  $i$01$i$i$i = $8;
  while (1) {
   $16 = HEAP32[$14 + ($i$01$i$i$i << 5) + 24 >> 2] | 0;
   if (($16 | 0) == ($14 + ($i$01$i$i$i << 5) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$16 >> 2] | 0) + 16 >> 2] & 255]($16); else if ($16 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$16 >> 2] | 0) + 20 >> 2] & 255]($16);
   $25 = $i$01$i$i$i + 1 | 0;
   if (($25 | 0) >= (HEAP32[$9 >> 2] | 0)) break;
   $14 = HEAP32[$3 >> 2] | 0;
   $i$01$i$i$i = $25;
  }
  $12 = HEAP32[$3 >> 2] | 0;
 } else $12 = $6;
 __ZN5Oryol6Memory4FreeEPv($12);
 $$pre5$i$i2$pre$phi$iZZZZ2D = $9;
 $28 = $this + 176 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$28 >> 2] = 0;
 HEAP32[$$pre4$i$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
 $29 = $this + 160 | 0;
 __ZN5Oryol6StringD2Ev($29);
 $30 = $this + 28 | 0;
 __ZN5Oryol6StringD2Ev($30);
 return;
}

function __ZN5ImGui10BeginChildEPKcRK6ImVec2bi($str_id, $size_arg, $border, $extra_flags) {
 $str_id = $str_id | 0;
 $size_arg = $size_arg | 0;
 $border = $border | 0;
 $extra_flags = $extra_flags | 0;
 var $0 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $2 = 0, $32 = 0, $38 = 0, $40 = 0, $6 = 0.0, $7 = 0.0, $flags$1 = 0, $flags$3 = 0, $title = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 $vararg_buffer = sp;
 $0 = sp + 8 | 0;
 $title = sp + 16 | 0;
 $2 = HEAP32[38201] | 0;
 HEAP8[$2 + 114 >> 0] = 1;
 __ZN5ImGui19GetContentRegionMaxEv($0);
 $6 = +HEAPF32[$0 >> 2] - (+HEAPF32[$2 + 164 >> 2] - +HEAPF32[$2 + 20 >> 2]);
 $7 = +HEAPF32[$0 + 4 >> 2] - (+HEAPF32[$2 + 168 >> 2] - +HEAPF32[$2 + 24 >> 2]);
 $11 = ~~+HEAPF32[$size_arg >> 2];
 $12 = +($11 | 0);
 $13 = ~~+HEAPF32[$size_arg + 4 >> 2];
 $14 = +($13 | 0);
 HEAPF32[$0 >> 2] = $12;
 $15 = $0 + 4 | 0;
 HEAPF32[$15 >> 2] = $14;
 if (($11 | 0) > 0) $flags$1 = 1048835; else {
  HEAPF32[$0 >> 2] = ($6 >= 4.0 ? $6 : 4.0) - +Math_abs(+$12);
  $flags$1 = ($11 | 0) == 0 ? 3145987 : 1048835;
 }
 if (($13 | 0) > 0) $flags$3 = $flags$1; else {
  HEAPF32[$15 >> 2] = ($7 >= 4.0 ? $7 : 4.0) - +Math_abs(+$14);
  $flags$3 = ($13 | 0) == 0 ? $flags$1 | 4194304 : $flags$1;
 }
 HEAP32[$vararg_buffer >> 2] = HEAP32[$2 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = $str_id;
 __Z14ImFormatStringPciPKcz($title, 256, 124669, $vararg_buffer) | 0;
 $32 = __ZN5ImGui5BeginEPKcPbRK6ImVec2fi($title, 0, $0, 1.0, ($border ? $flags$3 | 128 : $flags$3) | $extra_flags) | 0;
 if (HEAP32[$2 + 8 >> 2] & 128 | 0) {
  STACKTOP = sp;
  return $32 | 0;
 }
 $38 = HEAP32[38201] | 0;
 HEAP8[$38 + 114 >> 0] = 1;
 $40 = $38 + 8 | 0;
 HEAP32[$40 >> 2] = HEAP32[$40 >> 2] & -129;
 STACKTOP = sp;
 return $32 | 0;
}

function __ZN5Oryol11StaticArrayINS_11ShaderSetup17textureBlockEntryELi2EEaSEOS3_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $13 = 0, $14 = 0, $22 = 0, $23 = 0, $27 = 0, $28 = 0, $31 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $8 = 0, $i$01$i$i$i = 0, $i$01$i$i$i$1 = 0;
 if (($rhs | 0) == ($this | 0)) return;
 HEAP32[$this >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($this, $rhs);
 HEAP32[$rhs >> 2] = 0;
 HEAP32[$this + 4 >> 2] = HEAP32[$rhs + 4 >> 2];
 $i$01$i$i$i = 0;
 do {
  $4 = $this + 8 + ($i$01$i$i$i * 12 | 0) | 0;
  $5 = $rhs + 8 + ($i$01$i$i$i * 12 | 0) | 0;
  HEAP32[$4 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($4, $5);
  HEAP32[$5 >> 2] = 0;
  $8 = $rhs + 8 + ($i$01$i$i$i * 12 | 0) + 4 | 0;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $this + 8 + ($i$01$i$i$i * 12 | 0) + 4 | 0;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $i$01$i$i$i = $i$01$i$i$i + 1 | 0;
 } while (($i$01$i$i$i | 0) != 16);
 HEAP32[$this + 200 >> 2] = HEAP32[$rhs + 200 >> 2];
 $22 = $this + 204 | 0;
 $23 = $rhs + 204 | 0;
 HEAP32[$22 >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($22, $23);
 HEAP32[$23 >> 2] = 0;
 HEAP32[$this + 208 >> 2] = HEAP32[$rhs + 208 >> 2];
 $i$01$i$i$i$1 = 0;
 do {
  $27 = $this + 212 + ($i$01$i$i$i$1 * 12 | 0) | 0;
  $28 = $rhs + 212 + ($i$01$i$i$i$1 * 12 | 0) | 0;
  HEAP32[$27 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($27, $28);
  HEAP32[$28 >> 2] = 0;
  $31 = $rhs + 212 + ($i$01$i$i$i$1 * 12 | 0) + 4 | 0;
  $36 = HEAP32[$31 + 4 >> 2] | 0;
  $37 = $this + 212 + ($i$01$i$i$i$1 * 12 | 0) + 4 | 0;
  HEAP32[$37 >> 2] = HEAP32[$31 >> 2];
  HEAP32[$37 + 4 >> 2] = $36;
  $i$01$i$i$i$1 = $i$01$i$i$i$1 + 1 | 0;
 } while (($i$01$i$i$i$1 | 0) != 16);
 HEAP32[$this + 404 >> 2] = HEAP32[$rhs + 404 >> 2];
 return;
}

function __ZN4yakc6z80ctc21down_counter_callbackERNS0_13channel_stateE($this, $chn) {
 $this = $this | 0;
 $chn = $chn | 0;
 var $$$i = 0, $12 = 0, $15 = 0, $19 = 0, $25 = 0, $3 = 0, $30 = 0, $34 = 0, $4 = 0, $41 = 0, $5 = 0, $7 = 0, $c$0$i = 0, $this$tr$i$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 do if ((HEAP8[$chn >> 0] | 0) < 0) {
  $3 = HEAP8[$chn + 9 >> 0] | 0;
  $4 = $chn + 36 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (!$5) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(15638, 0, 15651, 104, 15695);
   _abort();
  }
  $7 = $chn + 28 | 0;
  $12 = (HEAP8[$chn + 32 >> 0] | 0) != 0;
  if (!(HEAP8[$7 >> 0] | 0)) {
   if (!$12) break;
   __ZN5Oryol3Log4InfoEPKcz(15768, $vararg_buffer1);
   break;
  }
  if ($12) {
   __ZN5Oryol3Log4InfoEPKcz(15739, $vararg_buffer);
   $15 = HEAP32[$4 >> 2] | 0;
  } else $15 = $5;
  HEAP8[$7 >> 0] = 0;
  FUNCTION_TABLE_vi[$15 & 255](HEAP32[$chn + 40 >> 2] | 0);
  HEAP8[$chn + 29 >> 0] = 1;
  HEAP8[$chn + 30 >> 0] = $3;
  $19 = HEAP32[$chn + 44 >> 2] | 0;
  if ($19 | 0) {
   $this$tr$i$i = $19;
   do {
    HEAP8[$this$tr$i$i >> 0] = 0;
    $this$tr$i$i = HEAP32[$this$tr$i$i + 16 >> 2] | 0;
   } while (($this$tr$i$i | 0) != 0);
  }
 } while (0);
 $25 = HEAP32[$chn + 12 >> 2] | 0;
 if ($25 | 0) FUNCTION_TABLE_vi[$25 & 255](HEAP32[$chn + 16 >> 2] | 0);
 $30 = HEAP8[$chn + 1 >> 0] | 0;
 $$$i = $30 << 24 >> 24 == 0 ? 256 : $30 & 255;
 $34 = HEAPU8[$chn >> 0] | 0;
 if ($34 & 64 | 0) {
  $c$0$i = $$$i;
  $41 = $chn + 4 | 0;
  HEAP32[$41 >> 2] = $c$0$i;
  STACKTOP = sp;
  return;
 }
 $c$0$i = Math_imul($34 & 32 | 0 ? 256 : 16, $$$i) | 0;
 $41 = $chn + 4 | 0;
 HEAP32[$41 >> 2] = $c$0$i;
 STACKTOP = sp;
 return;
}

function __ZN10ImDrawList14UpdateClipRectEv($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $12 = 0, $13 = 0, $23 = 0, $25 = 0, $32 = 0, $40 = 0, $44 = 0, $7 = 0, $8 = 0, $curr_clip_rect = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $curr_clip_rect = sp;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 if (!$1) $7 = 13728; else $7 = (HEAP32[$this + 60 >> 2] | 0) + ($1 + -1 << 4) | 0;
 HEAP32[$curr_clip_rect >> 2] = HEAP32[$7 >> 2];
 HEAP32[$curr_clip_rect + 4 >> 2] = HEAP32[$7 + 4 >> 2];
 HEAP32[$curr_clip_rect + 8 >> 2] = HEAP32[$7 + 8 >> 2];
 HEAP32[$curr_clip_rect + 12 >> 2] = HEAP32[$7 + 12 >> 2];
 $8 = HEAP32[$this >> 2] | 0;
 do if (($8 | 0) > 0) {
  $10 = $8 + -1 | 0;
  $12 = HEAP32[$this + 8 >> 2] | 0;
  $13 = $12 + ($10 << 5) | 0;
  if ($13 | 0) {
   if (HEAP32[$13 >> 2] | 0) if (_memcmp($12 + ($10 << 5) + 4 | 0, $curr_clip_rect, 16) | 0) break;
   if (!(HEAP32[$12 + ($10 << 5) + 24 >> 2] | 0)) {
    $23 = ($8 | 0) > 1;
    $25 = $23 ? $13 + -32 | 0 : 0;
    if ($23) if (!(_memcmp($25 + 4 | 0, $curr_clip_rect, 16) | 0)) {
     $32 = HEAP32[$this + 64 >> 2] | 0;
     if (!$32) $40 = 0; else $40 = HEAP32[(HEAP32[$this + 72 >> 2] | 0) + ($32 + -1 << 2) >> 2] | 0;
     if ((HEAP32[$25 + 20 >> 2] | 0) == ($40 | 0)) if (!(HEAP32[$25 + 24 >> 2] | 0)) {
      HEAP32[$this >> 2] = $10;
      STACKTOP = sp;
      return;
     }
    }
    $44 = $12 + ($10 << 5) + 4 | 0;
    HEAP32[$44 >> 2] = HEAP32[$curr_clip_rect >> 2];
    HEAP32[$44 + 4 >> 2] = HEAP32[$curr_clip_rect + 4 >> 2];
    HEAP32[$44 + 8 >> 2] = HEAP32[$curr_clip_rect + 8 >> 2];
    HEAP32[$44 + 12 >> 2] = HEAP32[$curr_clip_rect + 12 >> 2];
    STACKTOP = sp;
    return;
   }
  }
 } while (0);
 __ZN10ImDrawList10AddDrawCmdEv($this);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol11ShaderSetupC2Ev($this) {
 $this = $this | 0;
 __ZN5Oryol7Locator9NonSharedEv($this);
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol11ShaderSetup12programEntryC2Ev($this + 16 | 0);
 HEAP32[$this + 324 >> 2] = 0;
 HEAP32[$this + 328 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 336 | 0);
 HEAP32[$this + 608 >> 2] = -1;
 HEAP32[$this + 612 >> 2] = -1;
 HEAP32[$this + 616 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 624 | 0);
 HEAP32[$this + 896 >> 2] = -1;
 HEAP32[$this + 900 >> 2] = -1;
 HEAP32[$this + 904 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 912 | 0);
 HEAP32[$this + 1184 >> 2] = -1;
 HEAP32[$this + 1188 >> 2] = -1;
 HEAP32[$this + 1192 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 1200 | 0);
 HEAP32[$this + 1472 >> 2] = -1;
 HEAP32[$this + 1476 >> 2] = -1;
 HEAP32[$this + 1480 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 1488 | 0);
 HEAP32[$this + 1760 >> 2] = -1;
 HEAP32[$this + 1764 >> 2] = -1;
 HEAP32[$this + 1768 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 1776 | 0);
 HEAP32[$this + 2048 >> 2] = -1;
 HEAP32[$this + 2052 >> 2] = -1;
 HEAP32[$this + 2056 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 2064 | 0);
 HEAP32[$this + 2336 >> 2] = -1;
 HEAP32[$this + 2340 >> 2] = -1;
 HEAP32[$this + 2344 >> 2] = 0;
 __ZN5Oryol18UniformBlockLayoutC2Ev($this + 2352 | 0);
 HEAP32[$this + 2624 >> 2] = -1;
 HEAP32[$this + 2628 >> 2] = -1;
 HEAP32[$this + 2632 >> 2] = 0;
 HEAP32[$this + 2636 >> 2] = 0;
 __ZN5Oryol18TextureBlockLayoutC2Ev($this + 2640 | 0);
 HEAP32[$this + 2836 >> 2] = -1;
 HEAP32[$this + 2840 >> 2] = 0;
 __ZN5Oryol18TextureBlockLayoutC2Ev($this + 2844 | 0);
 HEAP32[$this + 3040 >> 2] = -1;
 return;
}

function __ZN6SoLoud19AudioSourceInstanceC2Ev($this) {
 $this = $this | 0;
 var $24 = 0, $26 = 0, $scevgep = 0, $scevgep7 = 0;
 HEAP32[$this >> 2] = 13376;
 __ZN6SoLoud5FaderC2Ev($this + 80 | 0);
 __ZN6SoLoud5FaderC2Ev($this + 128 | 0);
 __ZN6SoLoud5FaderC2Ev($this + 176 | 0);
 __ZN6SoLoud5FaderC2Ev($this + 224 | 0);
 __ZN6SoLoud5FaderC2Ev($this + 272 | 0);
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAPF32[$this + 16 >> 2] = 0.0;
 HEAPF32[$this + 20 >> 2] = 1.0;
 HEAPF32[$this + 24 >> 2] = 1.0;
 HEAPF32[$this + 28 >> 2] = 1.0;
 HEAPF32[$this + 32 >> 2] = 1.0;
 HEAPF32[$this + 36 >> 2] = 1.0;
 HEAPF32[$this + 40 >> 2] = 1.0;
 HEAPF32[$this + 44 >> 2] = 1.0;
 HEAPF32[$this + 52 >> 2] = 44100.0;
 HEAPF32[$this + 56 >> 2] = 44100.0;
 HEAPF32[$this + 64 >> 2] = 1.0;
 HEAPF64[$this + 72 >> 3] = 0.0;
 HEAP32[$this + 348 >> 2] = 0;
 HEAP32[$this + 320 >> 2] = 0;
 HEAP32[$this + 60 >> 2] = 1;
 HEAP32[$this + 352 >> 2] = -1;
 HEAP32[$this + 8 >> 2] = 0;
 $scevgep7 = $this + 356 | 0;
 HEAP32[$scevgep7 >> 2] = 0;
 HEAP32[$scevgep7 + 4 >> 2] = 0;
 HEAP32[$scevgep7 + 8 >> 2] = 0;
 HEAP32[$scevgep7 + 12 >> 2] = 0;
 HEAP32[$scevgep7 + 16 >> 2] = 0;
 HEAP32[$scevgep7 + 20 >> 2] = 0;
 HEAP32[$scevgep7 + 24 >> 2] = 0;
 HEAP32[$scevgep7 + 28 >> 2] = 0;
 $scevgep = $this + 324 | 0;
 HEAP32[$scevgep >> 2] = 0;
 HEAP32[$scevgep + 4 >> 2] = 0;
 HEAP32[$scevgep + 8 >> 2] = 0;
 HEAP32[$scevgep + 12 >> 2] = 0;
 HEAP32[$scevgep + 16 >> 2] = 0;
 HEAP32[$scevgep + 20 >> 2] = 0;
 $24 = __Znwj(4) | 0;
 HEAP32[$24 >> 2] = 0;
 HEAP32[$this + 388 >> 2] = $24;
 $26 = __Znwj(4) | 0;
 HEAP32[$26 >> 2] = 0;
 HEAP32[$this + 392 >> 2] = $26;
 HEAP32[$this + 396 >> 2] = 0;
 HEAP32[$this + 400 >> 2] = 0;
 HEAP32[$this + 404 >> 2] = 0;
 return;
}

function ___stdio_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $$0 = 0, $$cast = 0, $0 = 0, $1 = 0, $15 = 0, $2 = 0, $27 = 0, $30 = 0, $31 = 0, $7 = 0, $cnt$0 = 0, $iov = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $iov = sp + 32 | 0;
 HEAP32[$iov >> 2] = $buf;
 $0 = $iov + 4 | 0;
 $1 = $f + 48 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$0 >> 2] = $len - (($2 | 0) != 0 & 1);
 $7 = $f + 44 | 0;
 HEAP32[$iov + 8 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$iov + 12 >> 2] = $2;
 if (!(HEAP32[40694] | 0)) {
  HEAP32[$vararg_buffer3 >> 2] = HEAP32[$f + 60 >> 2];
  HEAP32[$vararg_buffer3 + 4 >> 2] = $iov;
  HEAP32[$vararg_buffer3 + 8 >> 2] = 2;
  $cnt$0 = ___syscall_ret(___syscall145(145, $vararg_buffer3 | 0) | 0) | 0;
 } else {
  _pthread_cleanup_push(135, $f | 0);
  HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = $iov;
  HEAP32[$vararg_buffer + 8 >> 2] = 2;
  $15 = ___syscall_ret(___syscall145(145, $vararg_buffer | 0) | 0) | 0;
  _pthread_cleanup_pop(0);
  $cnt$0 = $15;
 }
 if (($cnt$0 | 0) < 1) {
  HEAP32[$f >> 2] = HEAP32[$f >> 2] | $cnt$0 & 48 ^ 16;
  HEAP32[$f + 8 >> 2] = 0;
  HEAP32[$f + 4 >> 2] = 0;
  $$0 = $cnt$0;
 } else {
  $27 = HEAP32[$0 >> 2] | 0;
  if ($cnt$0 >>> 0 > $27 >>> 0) {
   $30 = HEAP32[$7 >> 2] | 0;
   $31 = $f + 4 | 0;
   HEAP32[$31 >> 2] = $30;
   $$cast = $30;
   HEAP32[$f + 8 >> 2] = $$cast + ($cnt$0 - $27);
   if (!(HEAP32[$1 >> 2] | 0)) $$0 = $len; else {
    HEAP32[$31 >> 2] = $$cast + 1;
    HEAP8[$buf + ($len + -1) >> 0] = HEAP8[$$cast >> 0] | 0;
    $$0 = $len;
   }
  } else $$0 = $cnt$0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5ImGui29AlignFirstTextHeightToWidgetsEv() {
 var $$pre1 = 0, $1 = 0, $11 = 0.0, $12 = 0, $13 = 0.0, $15 = 0.0, $16 = 0, $17 = 0.0, $2 = 0, $20 = 0, $22 = 0.0, $23 = 0, $24 = 0, $43 = 0.0, $44 = 0, $45 = 0.0, $48 = 0, $49 = 0.0, $57 = 0.0, $9 = 0.0, $phitmp = 0, $y$01$i = 0;
 $1 = HEAP32[38201] | 0;
 $2 = $1 + 114 | 0;
 HEAP8[$2 >> 0] = 1;
 if (HEAP8[$1 + 116 >> 0] | 0) return;
 $9 = +HEAPF32[37993];
 $11 = +HEAPF32[38187] + $9 * 2.0;
 HEAP8[$2 >> 0] = 1;
 $12 = $1 + 196 | 0;
 $13 = +HEAPF32[$12 >> 2];
 $15 = $13 >= $11 ? $13 : $11;
 $16 = $1 + 200 | 0;
 $17 = +HEAPF32[$16 >> 2];
 $20 = $1 + 164 | 0;
 $22 = +HEAPF32[$20 >> 2] + 0.0;
 $23 = $1 + 168 | 0;
 $24 = HEAP32[$23 >> 2] | 0;
 HEAPF32[$1 + 172 >> 2] = $22;
 HEAP32[$1 + 176 >> 2] = $24;
 $43 = +(~~($15 + (HEAP32[tempDoublePtr >> 2] = $24, +HEAPF32[tempDoublePtr >> 2]) + +HEAPF32[37996]) | 0);
 HEAPF32[$20 >> 2] = +(~~(+HEAPF32[$1 + 20 >> 2] + +HEAPF32[$1 + 368 >> 2] + +HEAPF32[$1 + 372 >> 2]) | 0);
 HEAPF32[$23 >> 2] = $43;
 $44 = $1 + 188 | 0;
 $45 = +HEAPF32[$44 >> 2];
 HEAPF32[$44 >> 2] = $45 >= $22 ? $45 : $22;
 $48 = $1 + 192 | 0;
 $49 = +HEAPF32[$48 >> 2];
 HEAPF32[$48 >> 2] = $49 >= $43 ? $49 : $43;
 HEAPF32[$1 + 204 >> 2] = $15;
 HEAPF32[$1 + 208 >> 2] = $17 >= $9 ? $17 : $9;
 HEAPF32[$16 >> 2] = 0.0;
 HEAPF32[$12 >> 2] = 0.0;
 $$pre1 = HEAP32[38201] | 0;
 $phitmp = (HEAP8[$$pre1 + 116 >> 0] | 0) == 0;
 HEAP8[$$pre1 + 114 >> 0] = 1;
 if (!$phitmp) return;
 $57 = +HEAPF32[$$pre1 + 172 >> 2] + 0.0;
 $y$01$i = HEAP32[$$pre1 + 176 >> 2] | 0;
 HEAP32[$$pre1 + 196 >> 2] = HEAP32[$$pre1 + 204 >> 2];
 HEAP32[$$pre1 + 200 >> 2] = HEAP32[$$pre1 + 208 >> 2];
 HEAPF32[$$pre1 + 164 >> 2] = $57;
 HEAP32[$$pre1 + 168 >> 2] = $y$01$i;
 return;
}

function __ZN5Oryol18UniformBlockLayout3AddERKNS0_9ComponentE($this, $comp) {
 $this = $this | 0;
 $comp = $comp | 0;
 var $$0$i$i = 0, $0 = 0, $1 = 0, $12 = 0, $13 = 0, $17 = 0, $18 = 0, $24 = 0, $3 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 >>> 0 >= 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 47393);
  _abort();
 }
 $3 = $this + 16 + ($1 * 12 | 0) | 0;
 if (($3 | 0) != ($comp | 0)) {
  HEAP32[$3 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($3, $comp);
 }
 $6 = $comp + 4 | 0;
 $7 = $6;
 $12 = HEAP32[$7 + 4 >> 2] | 0;
 $13 = $this + 16 + ($1 * 12 | 0) + 4 | 0;
 HEAP32[$13 >> 2] = HEAP32[$7 >> 2];
 HEAP32[$13 + 4 >> 2] = $12;
 $17 = $this + 12 | 0;
 $18 = HEAP32[$0 >> 2] | 0;
 if ($18 >>> 0 >= 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 47534);
  _abort();
 }
 HEAP32[$this + 208 + ($18 << 2) >> 2] = HEAP32[$17 >> 2];
 $24 = HEAP32[$comp + 8 >> 2] | 0;
 do switch (HEAPU8[$6 >> 0] | 0 | 0) {
 case 0:
  {
   $$0$i$i = $24 << 2;
   break;
  }
 case 1:
  {
   $$0$i$i = $24 << 3;
   break;
  }
 case 2:
  {
   $$0$i$i = $24 << 4;
   break;
  }
 case 3:
  {
   $$0$i$i = $24 << 4;
   break;
  }
 case 4:
  {
   $$0$i$i = $24 << 4;
   break;
  }
 case 5:
  {
   $$0$i$i = $24 * 36 | 0;
   break;
  }
 case 6:
  {
   $$0$i$i = $24 << 6;
   break;
  }
 case 7:
  {
   $$0$i$i = $24 << 2;
   break;
  }
 case 8:
  {
   $$0$i$i = $24 << 2;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(47609, sp);
   _abort();
  }
 } while (0);
 HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + $$0$i$i;
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
 STACKTOP = sp;
 return $this | 0;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $$idx$val$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 __ZN5Oryol3URLC2Ev($0);
 $1 = $0 + 40 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 44 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 48 | 0;
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($0, $__arg);
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5Oryol6Memory4FreeEPv($4);
 $6 = $__arg + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$1 >> 2] = $7;
 $8 = $__arg + 44 | 0;
 HEAP32[$2 >> 2] = HEAP32[$8 >> 2];
 $10 = $__arg + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $$idx$val$i = HEAP32[$this + 4 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 209, 19358);
  _abort();
 }
 $13 = $$idx$val$i + 463296 | 0;
 if ((HEAP32[$13 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $16 = $$idx$val$i + 463352 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 + $7 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($$idx$val$i + 463356 + $17 | 0, $11 | 0, $7 | 0) | 0;
 $21 = HEAP32[$16 >> 2] | 0;
 HEAP32[$13 >> 2] = $21;
 HEAP32[$$idx$val$i + 463300 >> 2] = $7;
 HEAP32[$16 >> 2] = $21 + $7;
 $24 = HEAP32[$3 >> 2] | 0;
 if (!$24) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($24);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $$idx$val$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 __ZN5Oryol3URLC2Ev($0);
 $1 = $0 + 40 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 44 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 48 | 0;
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($0, $__arg);
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5Oryol6Memory4FreeEPv($4);
 $6 = $__arg + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$1 >> 2] = $7;
 $8 = $__arg + 44 | 0;
 HEAP32[$2 >> 2] = HEAP32[$8 >> 2];
 $10 = $__arg + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $$idx$val$i = HEAP32[$this + 4 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 209, 19358);
  _abort();
 }
 $13 = $$idx$val$i + 463304 | 0;
 if ((HEAP32[$13 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $16 = $$idx$val$i + 463352 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 + $7 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($$idx$val$i + 463356 + $17 | 0, $11 | 0, $7 | 0) | 0;
 $21 = HEAP32[$16 >> 2] | 0;
 HEAP32[$13 >> 2] = $21;
 HEAP32[$$idx$val$i + 463308 >> 2] = $7;
 HEAP32[$16 >> 2] = $21 + $7;
 $24 = HEAP32[$3 >> 2] | 0;
 if (!$24) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($24);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $$idx$val$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 __ZN5Oryol3URLC2Ev($0);
 $1 = $0 + 40 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 44 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 48 | 0;
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($0, $__arg);
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5Oryol6Memory4FreeEPv($4);
 $6 = $__arg + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$1 >> 2] = $7;
 $8 = $__arg + 44 | 0;
 HEAP32[$2 >> 2] = HEAP32[$8 >> 2];
 $10 = $__arg + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $$idx$val$i = HEAP32[$this + 4 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 209, 19358);
  _abort();
 }
 $13 = $$idx$val$i + 463272 | 0;
 if ((HEAP32[$13 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $16 = $$idx$val$i + 463352 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 + $7 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($$idx$val$i + 463356 + $17 | 0, $11 | 0, $7 | 0) | 0;
 $21 = HEAP32[$16 >> 2] | 0;
 HEAP32[$13 >> 2] = $21;
 HEAP32[$$idx$val$i + 463276 >> 2] = $7;
 HEAP32[$16 >> 2] = $21 + $7;
 $24 = HEAP32[$3 >> 2] | 0;
 if (!$24) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($24);
 STACKTOP = sp;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $$idx$val$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 __ZN5Oryol3URLC2Ev($0);
 $1 = $0 + 40 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 44 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 48 | 0;
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($0, $__arg);
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5Oryol6Memory4FreeEPv($4);
 $6 = $__arg + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$1 >> 2] = $7;
 $8 = $__arg + 44 | 0;
 HEAP32[$2 >> 2] = HEAP32[$8 >> 2];
 $10 = $__arg + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $$idx$val$i = HEAP32[$this + 4 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 209, 19358);
  _abort();
 }
 $13 = $$idx$val$i + 463248 | 0;
 if ((HEAP32[$13 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $16 = $$idx$val$i + 463352 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 + $7 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($$idx$val$i + 463356 + $17 | 0, $11 | 0, $7 | 0) | 0;
 $21 = HEAP32[$16 >> 2] | 0;
 HEAP32[$13 >> 2] = $21;
 HEAP32[$$idx$val$i + 463252 >> 2] = $7;
 HEAP32[$16 >> 2] = $21 + $7;
 $24 = HEAP32[$3 >> 2] | 0;
 if (!$24) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($24);
 STACKTOP = sp;
 return;
}
function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_($this, $__arg) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 var $$idx$val$i = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 __ZN5Oryol3URLC2Ev($0);
 $1 = $0 + 40 | 0;
 HEAP32[$1 >> 2] = 0;
 $2 = $0 + 44 | 0;
 HEAP32[$2 >> 2] = 0;
 $3 = $0 + 48 | 0;
 HEAP32[$3 >> 2] = 0;
 __ZN5Oryol3URLaSEOS0_($0, $__arg);
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5Oryol6Memory4FreeEPv($4);
 $6 = $__arg + 40 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$1 >> 2] = $7;
 $8 = $__arg + 44 | 0;
 HEAP32[$2 >> 2] = HEAP32[$8 >> 2];
 $10 = $__arg + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 $$idx$val$i = HEAP32[$this + 4 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 209, 19358);
  _abort();
 }
 $13 = $$idx$val$i + 463256 | 0;
 if ((HEAP32[$13 >> 2] | 0) != -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16468, 0, 15094, 57, 16400);
  _abort();
 }
 $16 = $$idx$val$i + 463352 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (($17 + $7 | 0) >= 262145) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(16485, 0, 15094, 58, 16400);
  _abort();
 }
 _memcpy($$idx$val$i + 463356 + $17 | 0, $11 | 0, $7 | 0) | 0;
 $21 = HEAP32[$16 >> 2] | 0;
 HEAP32[$13 >> 2] = $21;
 HEAP32[$$idx$val$i + 463260 >> 2] = $7;
 HEAP32[$16 >> 2] = $21 + $7;
 $24 = HEAP32[$3 >> 2] | 0;
 if (!$24) {
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($24);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $21 = 0, $27 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 37925);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 37925);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 20 | 0) | 0;
 $13 = $12 + ($newStart * 20 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 37925);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 20 | 0) | 0;
  while (1) {
   __ZN5Oryol6StringC2EOS0_($dst$02, $src$01);
   $21 = $src$01 + 8 | 0;
   __ZN5Oryol6StringC2EOS0_($dst$02 + 8 | 0, $21);
   HEAP32[$dst$02 + 16 >> 2] = HEAP32[$src$01 + 16 >> 2];
   __ZN5Oryol6StringD2Ev($21);
   __ZN5Oryol6StringD2Ev($src$01);
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 20 | 0;
    $src$01 = $src$01 + 20 | 0;
   }
  }
 }
 $27 = HEAP32[$this >> 2] | 0;
 if ($27 | 0) __ZN5Oryol6Memory4FreeEPv($27);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5ImGui14GetColumnWidthEi($column_index) {
 $column_index = $column_index | 0;
 var $$01$i = 0, $$01$i1 = 0, $$010 = 0, $$1$i = 0.0, $$1$i4 = 0.0, $11 = 0, $17 = 0.0, $2 = 0, $26 = 0.0, $36 = 0, $39 = 0, $40 = 0, $5 = 0, $55 = 0.0, $63 = 0.0, label = 0;
 $2 = HEAP32[38201] | 0;
 if (($column_index | 0) < 0) {
  $5 = HEAP32[$2 + 376 >> 2] | 0;
  if (($5 | 0) < -1) {
   $$01$i1 = HEAP32[$2 + 376 >> 2] | 0;
   $$010 = $5;
  } else {
   $$01$i1 = $5 + 1 | 0;
   $$010 = $5;
  }
 } else {
  $$01$i1 = $column_index + 1 | 0;
  $$010 = $column_index;
 }
 $11 = HEAP32[38211] | 0;
 if (!$11) label = 8; else if (($11 | 0) == ((HEAP32[$2 + 408 >> 2] | 0) + $$01$i1 | 0)) {
  $17 = +__ZL22GetDraggedColumnOffseti($$01$i1);
  $$1$i4 = $17;
  $36 = HEAP32[38201] | 0;
  $39 = 146892;
 } else label = 8;
 do if ((label | 0) == 8) if (($$01$i1 | 0) < (HEAP32[$2 + 412 >> 2] | 0)) {
  $26 = +HEAPF32[$2 + 384 >> 2];
  $$1$i4 = +(~~($26 + +HEAPF32[(HEAP32[$2 + 420 >> 2] | 0) + ($$01$i1 << 2) >> 2] * (+HEAPF32[$2 + 388 >> 2] - $26)) | 0);
  $36 = $2;
  $39 = 146892;
  break;
 } else ___assert_fail(124599, 124187, 8883, 124642); while (0);
 if (($$010 | 0) < 0) $$01$i = HEAP32[$36 + 376 >> 2] | 0; else $$01$i = $$010;
 $40 = HEAP32[$39 + 5952 >> 2] | 0;
 if ($40 | 0) if (($40 | 0) == ((HEAP32[$36 + 408 >> 2] | 0) + $$01$i | 0)) {
  $$1$i = +__ZL22GetDraggedColumnOffseti($$01$i);
  $63 = $$1$i4 - $$1$i;
  return +$63;
 }
 if (($$01$i | 0) >= (HEAP32[$36 + 412 >> 2] | 0)) ___assert_fail(124599, 124187, 8883, 124642);
 $55 = +HEAPF32[$36 + 384 >> 2];
 $$1$i = +(~~($55 + +HEAPF32[(HEAP32[$36 + 420 >> 2] | 0) + ($$01$i << 2) >> 2] * (+HEAPF32[$36 + 388 >> 2] - $55)) | 0);
 $63 = $$1$i4 - $$1$i;
 return +$63;
}

function __ZN5Oryol5_priv13glMeshFactory15DestroyResourceERNS0_4meshE($this, $mesh) {
 $this = $this | 0;
 $mesh = $mesh | 0;
 var $1 = 0, $13 = 0, $17 = 0, $2 = 0, $21 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0, $9 = 0, $glBuf = 0, $i$01 = 0, $i$01$1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $glBuf = sp;
 __ZN5Oryol5_priv10glRenderer19invalidateMeshStateEv(HEAP32[$this >> 2] | 0);
 $1 = $mesh + 368 | 0;
 $2 = HEAP8[$1 >> 0] | 0;
 L1 : do if ($2 << 24 >> 24) {
  $23 = $2;
  $i$01 = 0;
  while (1) {
   if ($i$01 >>> 0 >= 2) break;
   $9 = HEAP32[$mesh + 372 + ($i$01 << 2) >> 2] | 0;
   HEAP32[$glBuf >> 2] = $9;
   if (!$9) $13 = $23; else {
    _glDeleteBuffers(1, $glBuf | 0);
    $13 = HEAP8[$1 >> 0] | 0;
   }
   $i$01 = $i$01 + 1 | 0;
   if (($i$01 | 0) >= ($13 & 255 | 0)) break L1; else $23 = $13;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 73407);
  _abort();
 } while (0);
 $4 = $mesh + 384 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 if (!($5 << 24 >> 24)) {
  __ZN5Oryol5_priv6glMesh5ClearEv($mesh);
  STACKTOP = sp;
  return;
 } else {
  $24 = $5;
  $i$01$1 = 0;
 }
 while (1) {
  if ($i$01$1 >>> 0 >= 2) {
   label = 4;
   break;
  }
  $17 = HEAP32[$mesh + 388 + ($i$01$1 << 2) >> 2] | 0;
  HEAP32[$glBuf >> 2] = $17;
  if (!$17) $21 = $24; else {
   _glDeleteBuffers(1, $glBuf | 0);
   $21 = HEAP8[$4 >> 0] | 0;
  }
  $i$01$1 = $i$01$1 + 1 | 0;
  if (($i$01$1 | 0) >= ($21 & 255 | 0)) {
   label = 12;
   break;
  } else $24 = $21;
 }
 if ((label | 0) == 4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 73407);
  _abort();
 } else if ((label | 0) == 12) {
  __ZN5Oryol5_priv6glMesh5ClearEv($mesh);
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE5eraseEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $2 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 610, 109404);
  _abort();
 }
 if (!$index) {
  HEAP32[$2 >> 2] = $3 + 1;
  $11 = $5 + ($3 << 3) + 4 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if ($12 | 0) {
   $14 = $12 + 4 | 0;
   $15 = HEAP32[$14 >> 2] | 0;
   HEAP32[$14 >> 2] = $15 - 1;
   if (($15 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$12 >> 2] >> 2] & 255]($12);
   HEAP32[$11 >> 2] = 0;
  }
  HEAP32[$5 + ($3 << 3) >> 2] = 0;
  return;
 }
 if (($4 + -1 | 0) != ($index | 0)) if (($4 >> 1 | 0) > ($index | 0)) {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE14moveEraseFrontEi($this, $index);
  return;
 } else {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE13moveEraseBackEi($this, $index);
  return;
 }
 $22 = $1 + -1 | 0;
 HEAP32[$0 >> 2] = $22;
 $23 = $5 + ($22 << 3) + 4 | 0;
 $24 = HEAP32[$23 >> 2] | 0;
 if ($24 | 0) {
  $26 = $24 + 4 | 0;
  $27 = HEAP32[$26 >> 2] | 0;
  HEAP32[$26 >> 2] = $27 - 1;
  if (($27 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$24 >> 2] >> 2] & 255]($24);
  HEAP32[$23 >> 2] = 0;
 }
 HEAP32[$5 + ($22 << 3) >> 2] = 0;
 return;
}

function __ZN5ImGui6PushIDEPKc($str_id) {
 $str_id = $str_id | 0;
 var $1 = 0, $11 = 0, $16 = 0, $17 = 0, $20 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $34 = 0, $38 = 0, $4 = 0, $40 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $7 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $3 = $1 + 424 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $7 = $1 + 432 | 0;
 $11 = __Z6ImHashPKvij($str_id, 0, HEAP32[(HEAP32[$7 >> 2] | 0) + ($4 + -1 << 2) >> 2] | 0) | 0;
 if ((HEAP32[38211] | 0) == ($11 | 0)) HEAP8[152852] = 1;
 $16 = HEAP32[$3 >> 2] | 0;
 $17 = $1 + 428 | 0;
 if (($16 | 0) != (HEAP32[$17 >> 2] | 0)) {
  $46 = $16;
  $45 = $46 + 1 | 0;
  HEAP32[$3 >> 2] = $45;
  $47 = HEAP32[$7 >> 2] | 0;
  $48 = $47 + ($46 << 2) | 0;
  HEAP32[$48 >> 2] = $11;
  return;
 }
 $20 = $16 + 1 | 0;
 if (!$16) $25 = 8; else $25 = (($16 | 0) / 2 | 0) + $16 | 0;
 $26 = ($25 | 0) > ($20 | 0) ? $25 : $20;
 if (($16 | 0) >= ($26 | 0)) {
  $46 = $16;
  $45 = $46 + 1 | 0;
  HEAP32[$3 >> 2] = $45;
  $47 = HEAP32[$7 >> 2] | 0;
  $48 = $47 + ($46 << 2) | 0;
  HEAP32[$48 >> 2] = $11;
  return;
 }
 $29 = 147664;
 HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 1;
 $34 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($26 << 2) | 0;
 _memcpy($34 | 0, HEAP32[$7 >> 2] | 0, HEAP32[$3 >> 2] << 2 | 0) | 0;
 $38 = HEAP32[$7 >> 2] | 0;
 if ($38 | 0) {
  $40 = 147664;
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + -1;
 }
 FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($38);
 HEAP32[$7 >> 2] = $34;
 HEAP32[$17 >> 2] = $26;
 $46 = HEAP32[$3 >> 2] | 0;
 $45 = $46 + 1 | 0;
 HEAP32[$3 >> 2] = $45;
 $47 = HEAP32[$7 >> 2] | 0;
 $48 = $47 + ($46 << 2) | 0;
 HEAP32[$48 >> 2] = $11;
 return;
}

function __ZN5Oryol13PipelineSetup19FromLayoutAndShaderERKNS_12VertexLayoutERKNS_2IdE($agg$result, $layout, $shd) {
 $agg$result = $agg$result | 0;
 $layout = $layout | 0;
 $shd = $shd | 0;
 var $17 = 0, $20 = 0, $26 = 0, $30 = 0, $32 = 0, $37 = 0, $38 = 0, $6 = 0, $7 = 0;
 if (!(HEAP8[$layout + 66 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(61392, 0, 60083, 30, 60150);
  _abort();
 }
 if ((HEAP32[$shd + 4 >> 2] | 0) == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(60069, 0, 60083, 31, 60150);
  _abort();
 }
 __ZN5Oryol7Locator9NonSharedEv($agg$result);
 $6 = $agg$result + 8 | 0;
 $7 = $6;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$6 >> 2] = 2013282306;
 HEAP16[$6 + 4 >> 1] = 192;
 HEAPF32[$agg$result + 16 >> 2] = 1.0;
 HEAPF32[$agg$result + 20 >> 2] = 1.0;
 HEAPF32[$agg$result + 24 >> 2] = 1.0;
 HEAPF32[$agg$result + 28 >> 2] = 1.0;
 HEAP16[$agg$result + 32 >> 1] = 28672;
 HEAP16[$agg$result + 34 >> 1] = 28672;
 $17 = $agg$result + 36 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP16[$17 >> 1] = 32647;
 HEAP16[$17 + 2 >> 1] = 255;
 HEAP16[$agg$result + 40 >> 1] = 296;
 $20 = $agg$result + 42 | 0;
 __ZN5Oryol12VertexLayoutC2Ev($20);
 __ZN5Oryol12VertexLayoutC2Ev($agg$result + 110 | 0);
 __ZN5Oryol12VertexLayoutC2Ev($agg$result + 178 | 0);
 __ZN5Oryol12VertexLayoutC2Ev($agg$result + 246 | 0);
 HEAP32[$agg$result + 316 >> 2] = 3;
 $26 = $agg$result + 320 | 0;
 HEAP32[$26 >> 2] = -1;
 HEAP32[$26 + 4 >> 2] = -1;
 __ZN5Oryol12VertexLayoutaSERKS0_($20, $layout) | 0;
 $30 = $agg$result + 320 | 0;
 if (($30 | 0) == ($shd | 0)) return;
 $32 = $shd;
 $37 = HEAP32[$32 + 4 >> 2] | 0;
 $38 = $30;
 HEAP32[$38 >> 2] = HEAP32[$32 >> 2];
 HEAP32[$38 + 4 >> 2] = $37;
 return;
}

function __ZN6SoLoud6Soloud13findFreeVoiceEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $11 = 0, $18 = 0, $19 = 0, $3 = 0, $8 = 0, $i$03 = 0, $i$03$lcssa = 0, $lowest_play_index$05 = 0, $lowest_play_index$1 = 0, $lowest_play_index$1$lcssa = 0, $lowest_play_index_value$04 = 0, $lowest_play_index_value$1 = 0, label = 0;
 $0 = $this + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) $11 = 0; else {
  $3 = $1 + -1 | 0;
  if (!(HEAP32[$this + 44 + ($3 << 2) >> 2] | 0)) {
   HEAP32[$0 >> 2] = $3;
   $11 = $3;
  } else $11 = $1;
 }
 $i$03 = 0;
 $lowest_play_index$05 = -1;
 $lowest_play_index_value$04 = -1;
 while (1) {
  $8 = HEAP32[$this + 44 + ($i$03 << 2) >> 2] | 0;
  if (!$8) {
   $i$03$lcssa = $i$03;
   break;
  }
  if (!(HEAP32[$8 + 12 >> 2] & 2)) {
   $18 = HEAP32[$8 + 4 >> 2] | 0;
   $19 = $18 >>> 0 < $lowest_play_index_value$04 >>> 0;
   $lowest_play_index$1 = $19 ? $i$03 : $lowest_play_index$05;
   $lowest_play_index_value$1 = $19 ? $18 : $lowest_play_index_value$04;
  } else {
   $lowest_play_index$1 = $lowest_play_index$05;
   $lowest_play_index_value$1 = $lowest_play_index_value$04;
  }
  $i$03 = $i$03 + 1 | 0;
  if (($i$03 | 0) >= 1024) {
   $lowest_play_index$1$lcssa = $lowest_play_index$1;
   label = 11;
   break;
  } else {
   $lowest_play_index$05 = $lowest_play_index$1;
   $lowest_play_index_value$04 = $lowest_play_index_value$1;
  }
 }
 if ((label | 0) == 11) {
  __ZN6SoLoud6Soloud9stopVoiceEj($this, $lowest_play_index$1$lcssa);
  $$0 = $lowest_play_index$1$lcssa;
  return $$0 | 0;
 }
 if (($i$03$lcssa | 0) < ($11 | 0)) {
  $$0 = $i$03$lcssa;
  return $$0 | 0;
 }
 HEAP32[$0 >> 2] = $i$03$lcssa + 1;
 $$0 = $i$03$lcssa;
 return $$0 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $21 = 0, $25 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 108327);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 108327);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 3) | 0;
 $13 = $12 + ($newStart << 3) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 108327);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 3) | 0;
  while (1) {
   __ZN5Oryol10StringAtom4copyERKS0_($dst$02, $src$01);
   $21 = $src$01 + 4 | 0;
   HEAP32[$dst$02 + 4 >> 2] = HEAP32[$21 >> 2];
   HEAP32[$21 >> 2] = 0;
   HEAP32[$src$01 >> 2] = 0;
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 8 | 0;
    $src$01 = $src$01 + 8 | 0;
   }
  }
 }
 $25 = HEAP32[$this >> 2] | 0;
 if ($25 | 0) __ZN5Oryol6Memory4FreeEPv($25);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol5ArrayINS_5_priv16resourceRegistry5EntryEE3AddIJRKNS_7LocatorERNS_2IdERNS_13ResourceLabelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $32 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS0_16resourceRegistry5EntryEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 112387);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 112499);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = $args1;
  $22 = HEAP32[$20 >> 2] | 0;
  $25 = HEAP32[$20 + 4 >> 2] | 0;
  $26 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol10StringAtom4copyERKS0_($14 + ($16 * 24 | 0) | 0, $args);
  HEAP32[$14 + ($16 * 24 | 0) + 4 >> 2] = HEAP32[$args + 4 >> 2];
  $32 = $14 + ($16 * 24 | 0) + 8 | 0;
  HEAP32[$32 >> 2] = $22;
  HEAP32[$32 + 4 >> 2] = $25;
  HEAP32[$14 + ($16 * 24 | 0) + 16 >> 2] = $26;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 112499);
  _abort();
 }
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $28 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 111732);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 111732);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 12 | 0) | 0;
 $13 = $12 + ($newStart * 12 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 111732);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 12 | 0) | 0;
  while (1) {
   __ZN5Oryol10StringAtom4copyERKS0_($dst$02, $src$01);
   HEAP32[$dst$02 + 4 >> 2] = HEAP32[$src$01 + 4 >> 2];
   HEAP32[$dst$02 + 8 >> 2] = HEAP32[$src$01 + 8 >> 2];
   HEAP32[$src$01 >> 2] = 0;
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 12 | 0;
    $src$01 = $src$01 + 12 | 0;
   }
  }
 }
 $28 = HEAP32[$this >> 2] | 0;
 if ($28 | 0) __ZN5Oryol6Memory4FreeEPv($28);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol18UniformBlockLayoutaSEOS0_($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 var $11 = 0, $12 = 0, $2 = 0, $3 = 0, $6 = 0, $i$01$i = 0;
 HEAP32[$this >> 2] = HEAP32[$0 >> 2];
 HEAP32[$this + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$this + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 HEAP32[$this + 12 >> 2] = HEAP32[$0 + 12 >> 2];
 if (($0 | 0) != ($this | 0)) {
  $i$01$i = 0;
  do {
   $2 = $this + 16 + ($i$01$i * 12 | 0) | 0;
   $3 = $0 + 16 + ($i$01$i * 12 | 0) | 0;
   HEAP32[$2 >> 2] = 0;
   __ZN5Oryol10StringAtom4copyERKS0_($2, $3);
   HEAP32[$3 >> 2] = 0;
   $6 = $0 + 16 + ($i$01$i * 12 | 0) + 4 | 0;
   $11 = HEAP32[$6 + 4 >> 2] | 0;
   $12 = $this + 16 + ($i$01$i * 12 | 0) + 4 | 0;
   HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$12 + 4 >> 2] = $11;
   $i$01$i = $i$01$i + 1 | 0;
  } while (($i$01$i | 0) != 16);
 }
 HEAP32[$this + 208 >> 2] = HEAP32[$0 + 208 >> 2];
 HEAP32[$this + 212 >> 2] = HEAP32[$0 + 212 >> 2];
 HEAP32[$this + 216 >> 2] = HEAP32[$0 + 216 >> 2];
 HEAP32[$this + 220 >> 2] = HEAP32[$0 + 220 >> 2];
 HEAP32[$this + 224 >> 2] = HEAP32[$0 + 224 >> 2];
 HEAP32[$this + 228 >> 2] = HEAP32[$0 + 228 >> 2];
 HEAP32[$this + 232 >> 2] = HEAP32[$0 + 232 >> 2];
 HEAP32[$this + 236 >> 2] = HEAP32[$0 + 236 >> 2];
 HEAP32[$this + 240 >> 2] = HEAP32[$0 + 240 >> 2];
 HEAP32[$this + 244 >> 2] = HEAP32[$0 + 244 >> 2];
 HEAP32[$this + 248 >> 2] = HEAP32[$0 + 248 >> 2];
 HEAP32[$this + 252 >> 2] = HEAP32[$0 + 252 >> 2];
 HEAP32[$this + 256 >> 2] = HEAP32[$0 + 256 >> 2];
 HEAP32[$this + 260 >> 2] = HEAP32[$0 + 260 >> 2];
 HEAP32[$this + 264 >> 2] = HEAP32[$0 + 264 >> 2];
 HEAP32[$this + 268 >> 2] = HEAP32[$0 + 268 >> 2];
 return $this | 0;
}

function __ZNK5Oryol3MapINS_6StringES1_EixERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i1 = 0, $$0$ph$i$i$i = 0, $$0$ph$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa19 = 0, $13 = 0, $14 = 0, $18 = 0, $3 = 0, $6 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa18 = 0, $__len$0$ph$i$i$i = 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 254, 102617);
  _abort();
 }
 $3 = HEAP32[$this >> 2] | 0;
 if (!$3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105975, 0, 118102, 255, 102617);
  _abort();
 }
 $6 = HEAP32[$this + 8 >> 2] | 0;
 $$0$ph$i$i$i = $3 + ($6 << 4) | 0;
 $__len$0$ph$i$i$i = (HEAP32[$this + 12 >> 2] | 0) - $6 << 4 >> 4;
 L7 : while (1) {
  $__len$0$i$i$i = $__len$0$ph$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i) {
    $$0$ph$i$i$i$lcssa = $$0$ph$i$i$i;
    break L7;
   }
   $13 = ($__len$0$i$i$i | 0) / 2 | 0;
   $14 = $$0$ph$i$i$i + ($13 << 4) | 0;
   if (__ZNK5Oryol6StringltERKS0_($14, $key) | 0) {
    $$lcssa = $13;
    $$lcssa19 = $14;
    $__len$0$i$i$i$lcssa18 = $__len$0$i$i$i;
    break;
   } else $__len$0$i$i$i = $13;
  }
  $$0$ph$i$i$i = $$lcssa19 + 16 | 0;
  $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa18 + -1 - $$lcssa | 0;
 }
 $18 = HEAP32[$this >> 2] | 0;
 if (!$18) $$0$i1 = 0; else $$0$i1 = $18 + (HEAP32[$this + 12 >> 2] << 4) | 0;
 if (($$0$ph$i$i$i$lcssa | 0) == ($$0$i1 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(107554, 0, 118102, 257, 102617);
  _abort();
 }
 if (__ZNK5Oryol6StringeqERKS0_($key, $$0$ph$i$i$i$lcssa) | 0) return $$0$ph$i$i$i$lcssa + 8 | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(107554, 0, 118102, 257, 102617);
  _abort();
 }
 return 0;
}

function __ZN5Oryol3MapINS_6StringES1_EixERKS1_($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $$0$i1 = 0, $$0$ph$i$i$i = 0, $$0$ph$i$i$i$lcssa = 0, $$lcssa = 0, $$lcssa19 = 0, $13 = 0, $14 = 0, $18 = 0, $3 = 0, $6 = 0, $__len$0$i$i$i = 0, $__len$0$i$i$i$lcssa18 = 0, $__len$0$ph$i$i$i = 0;
 if (HEAP8[$this + 24 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118084, 0, 118102, 244, 102499);
  _abort();
 }
 $3 = HEAP32[$this >> 2] | 0;
 if (!$3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105975, 0, 118102, 245, 102499);
  _abort();
 }
 $6 = HEAP32[$this + 8 >> 2] | 0;
 $$0$ph$i$i$i = $3 + ($6 << 4) | 0;
 $__len$0$ph$i$i$i = (HEAP32[$this + 12 >> 2] | 0) - $6 << 4 >> 4;
 L7 : while (1) {
  $__len$0$i$i$i = $__len$0$ph$i$i$i;
  while (1) {
   if (!$__len$0$i$i$i) {
    $$0$ph$i$i$i$lcssa = $$0$ph$i$i$i;
    break L7;
   }
   $13 = ($__len$0$i$i$i | 0) / 2 | 0;
   $14 = $$0$ph$i$i$i + ($13 << 4) | 0;
   if (__ZNK5Oryol6StringltERKS0_($14, $key) | 0) {
    $$lcssa = $13;
    $$lcssa19 = $14;
    $__len$0$i$i$i$lcssa18 = $__len$0$i$i$i;
    break;
   } else $__len$0$i$i$i = $13;
  }
  $$0$ph$i$i$i = $$lcssa19 + 16 | 0;
  $__len$0$ph$i$i$i = $__len$0$i$i$i$lcssa18 + -1 - $$lcssa | 0;
 }
 $18 = HEAP32[$this >> 2] | 0;
 if (!$18) $$0$i1 = 0; else $$0$i1 = $18 + (HEAP32[$this + 12 >> 2] << 4) | 0;
 if (($$0$ph$i$i$i$lcssa | 0) == ($$0$i1 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(107554, 0, 118102, 247, 102499);
  _abort();
 }
 if (__ZNK5Oryol6StringeqERKS0_($key, $$0$ph$i$i$i$lcssa) | 0) return $$0$ph$i$i$i$lcssa + 8 | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(107554, 0, 118102, 247, 102499);
  _abort();
 }
 return 0;
}

function __ZN10ImDrawList10AddDrawCmdEv($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0.0, $12 = 0.0, $14 = 0.0, $16 = 0, $25 = 0, $26 = 0, $29 = 0, $34 = 0, $35 = 0, $38 = 0, $39 = 0, $45 = 0, $47 = 0, $54 = 0, $7 = 0.0, $8 = 0;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 if (!$1) $8 = 13728; else $8 = (HEAP32[$this + 60 >> 2] | 0) + ($1 + -1 << 4) | 0;
 $7 = +HEAPF32[$8 >> 2];
 $10 = +HEAPF32[$8 + 4 >> 2];
 $12 = +HEAPF32[$8 + 8 >> 2];
 $14 = +HEAPF32[$8 + 12 >> 2];
 $16 = HEAP32[$this + 64 >> 2] | 0;
 if (!$16) $54 = 0; else $54 = HEAP32[(HEAP32[$this + 72 >> 2] | 0) + ($16 + -1 << 2) >> 2] | 0;
 if (!($7 <= $12) | !($10 <= $14)) ___assert_fail(127283, 127372, 156, 127425);
 $25 = HEAP32[$this >> 2] | 0;
 $26 = $this + 4 | 0;
 if (($25 | 0) == (HEAP32[$26 >> 2] | 0)) {
  $29 = $25 + 1 | 0;
  if (!$25) $34 = 8; else $34 = (($25 | 0) / 2 | 0) + $25 | 0;
  $35 = ($34 | 0) > ($29 | 0) ? $34 : $29;
  if (($25 | 0) < ($35 | 0)) {
   $38 = __ZN5ImGui8MemAllocEj($35 << 5) | 0;
   $39 = $this + 8 | 0;
   _memcpy($38 | 0, HEAP32[$39 >> 2] | 0, HEAP32[$this >> 2] << 5 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$39 >> 2] | 0);
   HEAP32[$39 >> 2] = $38;
   HEAP32[$26 >> 2] = $35;
   $45 = HEAP32[$this >> 2] | 0;
  } else $45 = $25;
 } else $45 = $25;
 HEAP32[$this >> 2] = $45 + 1;
 $47 = HEAP32[$this + 8 >> 2] | 0;
 HEAP32[$47 + ($45 << 5) >> 2] = 0;
 HEAPF32[$47 + ($45 << 5) + 4 >> 2] = $7;
 HEAPF32[$47 + ($45 << 5) + 8 >> 2] = $10;
 HEAPF32[$47 + ($45 << 5) + 12 >> 2] = $12;
 HEAPF32[$47 + ($45 << 5) + 16 >> 2] = $14;
 HEAP32[$47 + ($45 << 5) + 20 >> 2] = $54;
 HEAP32[$47 + ($45 << 5) + 24 >> 2] = 0;
 HEAP32[$47 + ($45 << 5) + 28 >> 2] = 0;
 return;
}

function __ZN5Oryol18UniformBlockLayoutC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP8[$this + 20 >> 0] = 10;
 HEAP32[$this + 24 >> 2] = 1;
 HEAP32[$this + 28 >> 2] = 0;
 HEAP8[$this + 32 >> 0] = 10;
 HEAP32[$this + 36 >> 2] = 1;
 HEAP32[$this + 40 >> 2] = 0;
 HEAP8[$this + 44 >> 0] = 10;
 HEAP32[$this + 48 >> 2] = 1;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP8[$this + 56 >> 0] = 10;
 HEAP32[$this + 60 >> 2] = 1;
 HEAP32[$this + 64 >> 2] = 0;
 HEAP8[$this + 68 >> 0] = 10;
 HEAP32[$this + 72 >> 2] = 1;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP8[$this + 80 >> 0] = 10;
 HEAP32[$this + 84 >> 2] = 1;
 HEAP32[$this + 88 >> 2] = 0;
 HEAP8[$this + 92 >> 0] = 10;
 HEAP32[$this + 96 >> 2] = 1;
 HEAP32[$this + 100 >> 2] = 0;
 HEAP8[$this + 104 >> 0] = 10;
 HEAP32[$this + 108 >> 2] = 1;
 HEAP32[$this + 112 >> 2] = 0;
 HEAP8[$this + 116 >> 0] = 10;
 HEAP32[$this + 120 >> 2] = 1;
 HEAP32[$this + 124 >> 2] = 0;
 HEAP8[$this + 128 >> 0] = 10;
 HEAP32[$this + 132 >> 2] = 1;
 HEAP32[$this + 136 >> 2] = 0;
 HEAP8[$this + 140 >> 0] = 10;
 HEAP32[$this + 144 >> 2] = 1;
 HEAP32[$this + 148 >> 2] = 0;
 HEAP8[$this + 152 >> 0] = 10;
 HEAP32[$this + 156 >> 2] = 1;
 HEAP32[$this + 160 >> 2] = 0;
 HEAP8[$this + 164 >> 0] = 10;
 HEAP32[$this + 168 >> 2] = 1;
 HEAP32[$this + 172 >> 2] = 0;
 HEAP8[$this + 176 >> 0] = 10;
 HEAP32[$this + 180 >> 2] = 1;
 HEAP32[$this + 184 >> 2] = 0;
 HEAP8[$this + 188 >> 0] = 10;
 HEAP32[$this + 192 >> 2] = 1;
 HEAP32[$this + 196 >> 2] = 0;
 HEAP8[$this + 200 >> 0] = 10;
 HEAP32[$this + 204 >> 2] = 1;
 return;
}

function __ZN5Oryol5_priv10glRenderer4drawERKNS_14PrimitiveGroupE($this, $primGroup) {
 $this = $this | 0;
 $primGroup = $primGroup | 0;
 var $$0$i = 0, $11 = 0, $14 = 0, $17 = 0, $20 = 0, $21 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 483, 69302);
  _abort();
 }
 if (!(HEAP8[$this + 32 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69369, 69383, 66399, 484, 69302);
  _abort();
 }
 $5 = $this + 212 | 0;
 if (!(HEAP32[$5 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 }
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 488, 69302);
  _abort();
 }
 $11 = HEAP32[$this + 216 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67606, 0, 66399, 490, 69302);
  _abort();
 }
 $14 = HEAP32[$11 + 288 >> 2] | 0;
 $17 = HEAP32[(HEAP32[$5 >> 2] | 0) + 604 >> 2] | 0;
 switch ($14 | 0) {
 case 0:
  {
   _glDrawArrays($17 | 0, HEAP32[$primGroup >> 2] | 0, HEAP32[$primGroup + 4 >> 2] | 0);
   break;
  }
 case 2:
  {
   $$0$i = 4;
   label = 13;
   break;
  }
 case 1:
  {
   $$0$i = 2;
   label = 13;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(69405, sp);
   _abort();
  }
 }
 if ((label | 0) == 13) {
  $20 = Math_imul(HEAP32[$primGroup >> 2] | 0, $$0$i) | 0;
  $21 = __ZN5Oryol5_priv7glTypes13asGLIndexTypeENS_9IndexType4CodeE($14) | 0;
  _glDrawElements($17 | 0, HEAP32[$primGroup + 4 >> 2] | 0, $21 | 0, $20 | 0);
 }
 if (!(_glGetError() | 0)) {
  STACKTOP = sp;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 504, 69302);
  _abort();
 }
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $21 = 0, $24 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 18691);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 18691);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 4) | 0;
 $13 = $12 + ($newStart << 4) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 18691);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 4) | 0;
  while (1) {
   __ZN5Oryol6StringC2EOS0_($dst$02, $src$01);
   $21 = $src$01 + 8 | 0;
   __ZN5Oryol6StringC2EOS0_($dst$02 + 8 | 0, $21);
   __ZN5Oryol6StringD2Ev($21);
   __ZN5Oryol6StringD2Ev($src$01);
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 16 | 0;
    $src$01 = $src$01 + 16 | 0;
   }
  }
 }
 $24 = HEAP32[$this >> 2] | 0;
 if ($24 | 0) __ZN5Oryol6Memory4FreeEPv($24);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Audio8cb_soundEPvyii($userdata, $0, $1, $channel, $hz) {
 $userdata = $userdata | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $channel = $channel | 0;
 $hz = $hz | 0;
 var $$sink$i = 0, $10 = 0, $11 = 0, $14 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 if ($channel >>> 0 >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(20373, 0, 20405, 44, 20449);
  _abort();
 }
 if (($hz | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(20505, 0, 20405, 45, 20449);
  _abort();
 }
 $4 = $userdata + 110064 | 0;
 $5 = $4 + ($channel * 8216 | 0) | 0;
 do {
  $6 = HEAP8[$5 >> 0] | 0;
  HEAP8[$5 >> 0] = 1;
 } while (($6 & 1) != 0);
 $7 = $4 + ($channel * 8216 | 0) + 4 | 0;
 do {} while ((HEAP32[$7 >> 2] | 0) > 0);
 $10 = $4 + ($channel * 8216 | 0) + 8 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$10 >> 2] = $11 + 1;
 $14 = $4 + ($channel * 8216 | 0) + 24 + ($11 << 4) | 0;
 HEAP32[$14 >> 2] = $0;
 HEAP32[$14 + 4 >> 2] = $1;
 HEAP32[$4 + ($channel * 8216 | 0) + 24 + ($11 << 4) + 8 >> 2] = $hz;
 HEAP32[$4 + ($channel * 8216 | 0) + 24 + ($11 << 4) + 12 >> 2] = 31;
 $20 = HEAP32[$10 >> 2] | 0;
 $21 = $20 & 511;
 HEAP32[$10 >> 2] = $21;
 $22 = $4 + ($channel * 8216 | 0) + 12 | 0;
 if (($21 | 0) == (HEAP32[$22 >> 2] | 0)) {
  HEAP32[$22 >> 2] = $20 + 1 & 511;
  $$sink$i = 1;
 } else $$sink$i = 0;
 HEAP8[$4 + ($channel * 8216 | 0) + 18 >> 0] = $$sink$i;
 $29 = $4 + ($channel * 8216 | 0) + 24 + ($21 << 4) | 0;
 HEAP32[$29 >> 2] = -1;
 HEAP32[$29 + 4 >> 2] = -1;
 HEAP32[$4 + ($channel * 8216 | 0) + 24 + ($21 << 4) + 8 >> 2] = 0;
 HEAP32[$4 + ($channel * 8216 | 0) + 24 + ($21 << 4) + 12 >> 2] = 0;
 HEAP8[$5 >> 0] = 0;
 return;
}

function __ZN5ImGui12PushStyleVarEif($idx, $val) {
 $idx = $idx | 0;
 $val = +$val;
 var $$0$i$ph = 0, $12 = 0, $17 = 0, $18 = 0, $21 = 0, $26 = 0, $27 = 0, $31 = 0, $33 = 0, $39 = 0, $41 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 switch ($idx | 0) {
 case 0:
  {
   $$0$i$ph = 151936;
   break;
  }
 case 2:
  {
   $$0$i$ph = 151956;
   break;
  }
 case 4:
  {
   $$0$i$ph = 151964;
   break;
  }
 case 6:
  {
   $$0$i$ph = 151976;
   break;
  }
 case 9:
  {
   $$0$i$ph = 152008;
   break;
  }
 case 10:
  {
   $$0$i$ph = 152024;
   break;
  }
 default:
  ___assert_fail(126768, 124187, 4443, 126779);
 }
 $6 = HEAP32[$$0$i$ph >> 2] | 0;
 $7 = 152892;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = 152896;
 if (($8 | 0) == (HEAP32[$9 >> 2] | 0)) {
  $12 = $8 + 1 | 0;
  if (!$8) $17 = 8; else $17 = (($8 | 0) / 2 | 0) + $8 | 0;
  $18 = ($17 | 0) > ($12 | 0) ? $17 : $12;
  if (($8 | 0) < ($18 | 0)) {
   $21 = 147664;
   HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 1;
   $26 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($18 * 12 | 0) | 0;
   $27 = 152900;
   _memcpy($26 | 0, HEAP32[$27 >> 2] | 0, (HEAP32[$7 >> 2] | 0) * 12 | 0) | 0;
   $31 = HEAP32[$27 >> 2] | 0;
   if ($31 | 0) {
    $33 = 147664;
    HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($31);
   HEAP32[$27 >> 2] = $26;
   HEAP32[$9 >> 2] = $18;
   $39 = HEAP32[$7 >> 2] | 0;
  } else $39 = $8;
 } else $39 = $8;
 HEAP32[$7 >> 2] = $39 + 1;
 $41 = HEAP32[38225] | 0;
 HEAP32[$41 + ($39 * 12 | 0) >> 2] = $idx;
 HEAP32[$41 + ($39 * 12 | 0) + 4 >> 2] = $6;
 HEAP32[$41 + ($39 * 12 | 0) + 8 >> 2] = 0;
 HEAPF32[$$0$i$ph >> 2] = $val;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $20 = 0, $25 = 0, $26 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 111959);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 111959);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 4) | 0;
 $13 = $12 + ($newStart << 4) | 0;
 $15 = HEAP32[$this >> 2] | 0;
 if (($8 | 0) > 0) {
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 111959);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 4) | 0;
  while (1) {
   $20 = $src$01;
   $25 = HEAP32[$20 + 4 >> 2] | 0;
   $26 = $dst$02;
   HEAP32[$26 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$26 + 4 >> 2] = $25;
   HEAP32[$dst$02 + 8 >> 2] = HEAP32[$src$01 + 8 >> 2];
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 16 | 0;
    $src$01 = $src$01 + 16 | 0;
   }
  }
 }
 if ($15 | 0) __ZN5Oryol6Memory4FreeEPv($15);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol8GfxSetup6WindowEiiNS_6StringE($agg$result, $w, $h, $title) {
 $agg$result = $agg$result | 0;
 $w = $w | 0;
 $h = $h | 0;
 $title = $title | 0;
 var $2 = 0, $6 = 0, $8 = 0;
 if (($w | 0) > 0 & ($h | 0) > 0) {
  HEAP32[$agg$result >> 2] = 640;
  $2 = $agg$result + 4 | 0;
  HEAP32[$2 >> 2] = 400;
  HEAP32[$agg$result + 8 >> 2] = 0;
  HEAP32[$agg$result + 12 >> 2] = 12;
  HEAP32[$agg$result + 16 >> 2] = 1;
  $6 = $agg$result + 20 | 0;
  HEAP8[$6 >> 0] = 1;
  HEAP32[$agg$result + 24 >> 2] = 1;
  $8 = $agg$result + 28 | 0;
  __ZN5Oryol6StringC2EPKc($8, 60268);
  HEAPF32[$agg$result + 36 >> 2] = 0.0;
  HEAPF32[$agg$result + 40 >> 2] = 0.0;
  HEAPF32[$agg$result + 44 >> 2] = 0.0;
  HEAPF32[$agg$result + 48 >> 2] = 1.0;
  HEAPF32[$agg$result + 52 >> 2] = 1.0;
  HEAP8[$agg$result + 56 >> 0] = 0;
  HEAP8[$agg$result + 57 >> 0] = 3;
  HEAP8[$agg$result + 60 >> 0] = 0;
  HEAP32[$agg$result + 64 >> 2] = 256;
  HEAP32[$agg$result + 68 >> 2] = 256;
  HEAP32[$agg$result + 72 >> 2] = 4194304;
  HEAP32[$agg$result + 76 >> 2] = 65536;
  HEAP32[$agg$result + 80 >> 2] = 4096;
  HEAP32[$agg$result + 84 >> 2] = 128;
  HEAP32[$agg$result + 100 >> 2] = 0;
  HEAP32[$agg$result + 88 >> 2] = 128;
  HEAP32[$agg$result + 104 >> 2] = 0;
  HEAP32[$agg$result + 92 >> 2] = 128;
  HEAP32[$agg$result + 108 >> 2] = 0;
  HEAP32[$agg$result + 96 >> 2] = 128;
  HEAP32[$agg$result + 112 >> 2] = 0;
  HEAP32[$agg$result >> 2] = $w;
  HEAP32[$2 >> 2] = $h;
  HEAP8[$6 >> 0] = 1;
  __ZN5Oryol6StringaSERKS0_($8, $title);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(60274, 0, 60293, 21, 60355);
  _abort();
 }
}

function __ZN5Oryol5_priv10glRenderer5setupERKNS_8GfxSetupERKNS0_11gfxPointersE($this, $setup, $ptrs) {
 $this = $this | 0;
 $setup = $setup | 0;
 $ptrs = $ptrs | 0;
 var $2 = 0, $3 = 0, dest = 0, src = 0, stop = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  HEAP8[$this >> 0] = 1;
  $2 = $this + 4 | 0;
  HEAP32[$2 >> 2] = HEAP32[$ptrs >> 2];
  HEAP32[$2 + 4 >> 2] = HEAP32[$ptrs + 4 >> 2];
  HEAP32[$2 + 8 >> 2] = HEAP32[$ptrs + 8 >> 2];
  HEAP32[$2 + 12 >> 2] = HEAP32[$ptrs + 12 >> 2];
  HEAP32[$2 + 16 >> 2] = HEAP32[$ptrs + 16 >> 2];
  HEAP32[$2 + 20 >> 2] = HEAP32[$ptrs + 20 >> 2];
  HEAP32[$2 + 24 >> 2] = HEAP32[$ptrs + 24 >> 2];
  $3 = $this + 88 | 0;
  HEAP32[$3 >> 2] = HEAP32[$setup >> 2];
  HEAP32[$3 + 4 >> 2] = HEAP32[$setup + 4 >> 2];
  HEAP32[$3 + 8 >> 2] = HEAP32[$setup + 8 >> 2];
  HEAP32[$3 + 12 >> 2] = HEAP32[$setup + 12 >> 2];
  HEAP32[$3 + 16 >> 2] = HEAP32[$setup + 16 >> 2];
  HEAP32[$3 + 20 >> 2] = HEAP32[$setup + 20 >> 2];
  HEAP32[$3 + 24 >> 2] = HEAP32[$setup + 24 >> 2];
  __ZN5Oryol6StringaSERKS0_($this + 116 | 0, $setup + 28 | 0);
  dest = $this + 124 | 0;
  src = $setup + 36 | 0;
  stop = dest + 80 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  __ZN5Oryol5_priv10glRenderer22setupDepthStencilStateEv($this);
  __ZN5Oryol5_priv10glRenderer15setupBlendStateEv($this);
  __ZN5Oryol5_priv10glRenderer20setupRasterizerStateEv($this);
  __ZN5Oryol5_priv10glRenderer19invalidateMeshStateEv($this);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110015, 0, 66399, 120, 66500);
  _abort();
 }
}

function __ZN5Oryol11StaticArrayINS_11ShaderSetup17textureBlockEntryELi2EEaSERKS3_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $13 = 0, $14 = 0, $22 = 0, $27 = 0, $31 = 0, $36 = 0, $37 = 0, $4 = 0, $8 = 0, $i$01$i$i$i = 0, $i$01$i$i$i$1 = 0;
 if (($rhs | 0) == ($this | 0)) return;
 HEAP32[$this >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($this, $rhs);
 HEAP32[$this + 4 >> 2] = HEAP32[$rhs + 4 >> 2];
 $i$01$i$i$i = 0;
 do {
  $4 = $this + 8 + ($i$01$i$i$i * 12 | 0) | 0;
  HEAP32[$4 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($4, $rhs + 8 + ($i$01$i$i$i * 12 | 0) | 0);
  $8 = $rhs + 8 + ($i$01$i$i$i * 12 | 0) + 4 | 0;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $this + 8 + ($i$01$i$i$i * 12 | 0) + 4 | 0;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $i$01$i$i$i = $i$01$i$i$i + 1 | 0;
 } while (($i$01$i$i$i | 0) != 16);
 HEAP32[$this + 200 >> 2] = HEAP32[$rhs + 200 >> 2];
 $22 = $this + 204 | 0;
 HEAP32[$22 >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($22, $rhs + 204 | 0);
 HEAP32[$this + 208 >> 2] = HEAP32[$rhs + 208 >> 2];
 $i$01$i$i$i$1 = 0;
 do {
  $27 = $this + 212 + ($i$01$i$i$i$1 * 12 | 0) | 0;
  HEAP32[$27 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($27, $rhs + 212 + ($i$01$i$i$i$1 * 12 | 0) | 0);
  $31 = $rhs + 212 + ($i$01$i$i$i$1 * 12 | 0) + 4 | 0;
  $36 = HEAP32[$31 + 4 >> 2] | 0;
  $37 = $this + 212 + ($i$01$i$i$i$1 * 12 | 0) + 4 | 0;
  HEAP32[$37 >> 2] = HEAP32[$31 >> 2];
  HEAP32[$37 + 4 >> 2] = $36;
  $i$01$i$i$i$1 = $i$01$i$i$i$1 + 1 | 0;
 } while (($i$01$i$i$i$1 | 0) != 16);
 HEAP32[$this + 404 >> 2] = HEAP32[$rhs + 404 >> 2];
 return;
}

function __ZN5Oryol13StringBuilder6formatEibPKcPi($this, $maxLength, $append, $fmt, $args) {
 $this = $this | 0;
 $maxLength = $maxLength | 0;
 $append = $append | 0;
 $fmt = $fmt | 0;
 $args = $args | 0;
 var $$0 = 0, $$phi$trans$insert = 0, $$pre$phi5Z2D = 0, $$pre$phiZ2D = 0, $0 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0;
 if ($append) {
  $$phi$trans$insert = $this + 8 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $5 = HEAP32[$$phi$trans$insert >> 2] | 0;
 } else {
  $0 = HEAP32[$this >> 2] | 0;
  if ($0 | 0) HEAP8[$0 >> 0] = 0;
  $2 = $this + 8 | 0;
  HEAP32[$2 >> 2] = 0;
  $$pre$phiZ2D = $2;
  $5 = 0;
 }
 $3 = $maxLength + 1 | 0;
 $6 = $this + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (($5 + $3 | 0) < ($7 | 0)) {
  $$pre$phi5Z2D = $this;
  $17 = HEAP32[$this >> 2] | 0;
  $18 = $5;
 } else {
  $11 = $7 + (($3 | 0) < 128 ? 128 : $3) | 0;
  $12 = __ZN5Oryol6Memory5AllocEi($11) | 0;
  $13 = HEAP32[$this >> 2] | 0;
  if (!$13) HEAP8[$12 >> 0] = 0; else {
   _strcpy($12, $13) | 0;
   __ZN5Oryol6Memory4FreeEPv(HEAP32[$this >> 2] | 0);
   HEAP32[$this >> 2] = 0;
  }
  HEAP32[$this >> 2] = $12;
  HEAP32[$6 >> 2] = $11;
  $$pre$phi5Z2D = $this;
  $17 = $12;
  $18 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 }
 $19 = _vsnprintf($17 + $18 | 0, $maxLength, $fmt, $args) | 0;
 $23 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if (($19 | 0) > -1 & ($19 | 0) < ($maxLength + -1 | 0)) {
  HEAP32[$$pre$phiZ2D >> 2] = $23 + $19;
  $$0 = 1;
  return $$0 | 0;
 } else {
  HEAP8[(HEAP32[$$pre$phi5Z2D >> 2] | 0) + $23 >> 0] = 0;
  $$0 = 0;
  return $$0 | 0;
 }
 return 0;
}

function __ZN4yakc10kc85_audio10ctc_write1EPv($userdata) {
 $userdata = $userdata | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $12 = 0, $15 = 0, $18 = 0, $2 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $37 = 0, $4 = 0, $40 = 0, $49 = 0, $5 = 0, $55 = 0, $56 = 0, $8 = 0, $9 = 0;
 $0 = HEAP32[$userdata >> 2] | 0;
 $1 = $0 + 48 | 0;
 $2 = $0 + 49 | 0;
 $3 = HEAP8[$2 >> 0] | 0;
 $4 = $userdata + 38 | 0;
 $5 = $userdata + 39 | 0;
 if ($3 << 24 >> 24 == (HEAP8[$5 >> 0] | 0)) {
  $8 = HEAP8[$1 >> 0] | 0;
  $9 = HEAP8[$4 >> 0] | 0;
  if ($8 << 24 >> 24 == $9 << 24 >> 24) return; else {
   $$pre$phiZ2D = $1;
   $12 = $9;
   $15 = $8;
  }
 } else {
  $$pre$phiZ2D = $1;
  $12 = HEAP8[$4 >> 0] | 0;
  $15 = HEAP8[$1 >> 0] | 0;
 }
 if (!(($12 & 2) != 0 | ($15 & 2) == 0)) {
  $18 = HEAP32[$userdata + 28 >> 2] | 0;
  if (!$18) $29 = $15; else {
   $23 = $userdata + 8 | 0;
   FUNCTION_TABLE_viiii[$18 & 7](HEAP32[$userdata + 32 >> 2] | 0, HEAP32[$23 >> 2] | 0, HEAP32[$23 + 4 >> 2] | 0, 1);
   $29 = HEAP8[$$pre$phiZ2D >> 0] | 0;
  }
  HEAP8[$4 >> 0] = $29;
  return;
 }
 $30 = $15 & 255;
 if ($30 & 2 | 0) return;
 $37 = Math_imul($30 & 32 | 0 ? 256 : 16, $3 & 255) | 0;
 if (!$37) {
  $55 = $3;
  $56 = $15;
 } else {
  $40 = HEAP32[$userdata + 20 >> 2] | 0;
  if (!$40) {
   $55 = $3;
   $56 = $15;
  } else {
   $49 = $userdata + 8 | 0;
   FUNCTION_TABLE_viiiii[$40 & 3](HEAP32[$userdata + 32 >> 2] | 0, HEAP32[$49 >> 2] | 0, HEAP32[$49 + 4 >> 2] | 0, 1, ~~(175.0e4 / +($37 | 0) * .5));
   $55 = HEAP8[$2 >> 0] | 0;
   $56 = HEAP8[$$pre$phiZ2D >> 0] | 0;
  }
 }
 HEAP8[$5 >> 0] = $55;
 HEAP8[$4 >> 0] = $56;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE7AllocIdEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $10 = 0, $11 = 0, $14 = 0, $17 = 0, $21 = 0, $25 = 0, $29 = 0, $3 = 0, $5 = 0, $6 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 148, 56129);
  _abort();
 }
 $3 = HEAP16[$this + 12 >> 1] | 0;
 if ($3 << 16 >> 16 == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53333, 0, 48917, 149, 56129);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$5 >> 2] = $6 + 1;
 $10 = $this + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ((HEAP32[$this + 52 >> 2] | 0) <= ($11 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106560, 0, 105992, 315, 53371);
  _abort();
 }
 $14 = HEAP32[$this + 40 >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106688, 0, 123391, 705, 53440);
  _abort();
 }
 $17 = HEAP16[$14 + ($11 << 1) >> 1] | 0;
 HEAP32[$10 >> 2] = $11 + 1;
 HEAP16[$agg$result >> 1] = $17;
 HEAP16[$agg$result + 2 >> 1] = $3;
 HEAP32[$agg$result + 4 >> 2] = $6;
 $21 = $17 & 65535;
 $25 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $25 | 0) <= ($21 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 56282);
  _abort();
 }
 $29 = HEAP32[$this + 16 >> 2] | 0;
 if (!$29) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 56282);
  _abort();
 }
 if (!(HEAP32[$29 + (($25 + $21 | 0) * 608 | 0) + 8 >> 2] | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53624, 0, 48917, 153, 56129);
  _abort();
 }
}

function __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE7AllocIdEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $10 = 0, $11 = 0, $14 = 0, $17 = 0, $21 = 0, $25 = 0, $29 = 0, $3 = 0, $5 = 0, $6 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 148, 54326);
  _abort();
 }
 $3 = HEAP16[$this + 12 >> 1] | 0;
 if ($3 << 16 >> 16 == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53333, 0, 48917, 149, 54326);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$5 >> 2] = $6 + 1;
 $10 = $this + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ((HEAP32[$this + 52 >> 2] | 0) <= ($11 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106560, 0, 105992, 315, 53371);
  _abort();
 }
 $14 = HEAP32[$this + 40 >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106688, 0, 123391, 705, 53440);
  _abort();
 }
 $17 = HEAP16[$14 + ($11 << 1) >> 1] | 0;
 HEAP32[$10 >> 2] = $11 + 1;
 HEAP16[$agg$result >> 1] = $17;
 HEAP16[$agg$result + 2 >> 1] = $3;
 HEAP32[$agg$result + 4 >> 2] = $6;
 $21 = $17 & 65535;
 $25 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $25 | 0) <= ($21 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 54475);
  _abort();
 }
 $29 = HEAP32[$this + 16 >> 2] | 0;
 if (!$29) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 54475);
  _abort();
 }
 if (!(HEAP32[$29 + (($25 + $21 | 0) * 776 | 0) + 8 >> 2] | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53624, 0, 48917, 153, 54326);
  _abort();
 }
}

function __ZN5Oryol5_priv13elementBufferIN13CommandWindow3CmdEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $25 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 37267);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 37267);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 12 | 0) | 0;
 $13 = $12 + ($newStart * 12 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 37267);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 12 | 0) | 0;
  while (1) {
   __ZN5Oryol6StringC2EOS0_($dst$02, $src$01);
   HEAP16[$dst$02 + 8 >> 1] = HEAP16[$src$01 + 8 >> 1] | 0;
   __ZN5Oryol6StringD2Ev($src$01);
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 12 | 0;
    $src$01 = $src$01 + 12 | 0;
   }
  }
 }
 $25 = HEAP32[$this >> 2] | 0;
 if ($25 | 0) __ZN5Oryol6Memory4FreeEPv($25);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE7AllocIdEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $10 = 0, $11 = 0, $14 = 0, $17 = 0, $21 = 0, $25 = 0, $29 = 0, $3 = 0, $5 = 0, $6 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 148, 55415);
  _abort();
 }
 $3 = HEAP16[$this + 12 >> 1] | 0;
 if ($3 << 16 >> 16 == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53333, 0, 48917, 149, 55415);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$5 >> 2] = $6 + 1;
 $10 = $this + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ((HEAP32[$this + 52 >> 2] | 0) <= ($11 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106560, 0, 105992, 315, 53371);
  _abort();
 }
 $14 = HEAP32[$this + 40 >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106688, 0, 123391, 705, 53440);
  _abort();
 }
 $17 = HEAP16[$14 + ($11 << 1) >> 1] | 0;
 HEAP32[$10 >> 2] = $11 + 1;
 HEAP16[$agg$result >> 1] = $17;
 HEAP16[$agg$result + 2 >> 1] = $3;
 HEAP32[$agg$result + 4 >> 2] = $6;
 $21 = $17 & 65535;
 $25 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $25 | 0) <= ($21 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 55560);
  _abort();
 }
 $29 = HEAP32[$this + 16 >> 2] | 0;
 if (!$29) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 55560);
  _abort();
 }
 if (!(HEAP32[$29 + (($25 + $21 | 0) * 3712 | 0) + 8 >> 2] | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53624, 0, 48917, 153, 55415);
  _abort();
 }
}

function __ZN5Oryol18TextureBlockLayoutC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = -1;
 HEAP32[$this + 12 >> 2] = -1;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = -1;
 HEAP32[$this + 24 >> 2] = -1;
 HEAP32[$this + 28 >> 2] = 0;
 HEAP32[$this + 32 >> 2] = -1;
 HEAP32[$this + 36 >> 2] = -1;
 HEAP32[$this + 40 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = -1;
 HEAP32[$this + 48 >> 2] = -1;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP32[$this + 56 >> 2] = -1;
 HEAP32[$this + 60 >> 2] = -1;
 HEAP32[$this + 64 >> 2] = 0;
 HEAP32[$this + 68 >> 2] = -1;
 HEAP32[$this + 72 >> 2] = -1;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP32[$this + 80 >> 2] = -1;
 HEAP32[$this + 84 >> 2] = -1;
 HEAP32[$this + 88 >> 2] = 0;
 HEAP32[$this + 92 >> 2] = -1;
 HEAP32[$this + 96 >> 2] = -1;
 HEAP32[$this + 100 >> 2] = 0;
 HEAP32[$this + 104 >> 2] = -1;
 HEAP32[$this + 108 >> 2] = -1;
 HEAP32[$this + 112 >> 2] = 0;
 HEAP32[$this + 116 >> 2] = -1;
 HEAP32[$this + 120 >> 2] = -1;
 HEAP32[$this + 124 >> 2] = 0;
 HEAP32[$this + 128 >> 2] = -1;
 HEAP32[$this + 132 >> 2] = -1;
 HEAP32[$this + 136 >> 2] = 0;
 HEAP32[$this + 140 >> 2] = -1;
 HEAP32[$this + 144 >> 2] = -1;
 HEAP32[$this + 148 >> 2] = 0;
 HEAP32[$this + 152 >> 2] = -1;
 HEAP32[$this + 156 >> 2] = -1;
 HEAP32[$this + 160 >> 2] = 0;
 HEAP32[$this + 164 >> 2] = -1;
 HEAP32[$this + 168 >> 2] = -1;
 HEAP32[$this + 172 >> 2] = 0;
 HEAP32[$this + 176 >> 2] = -1;
 HEAP32[$this + 180 >> 2] = -1;
 HEAP32[$this + 184 >> 2] = 0;
 HEAP32[$this + 188 >> 2] = -1;
 HEAP32[$this + 192 >> 2] = -1;
 return;
}

function __ZN5Oryol11ShaderSetup15AddTextureBlockERKNS_10StringAtomERKNS_18TextureBlockLayoutENS_11ShaderStage4CodeE($this, $name, $layout, $bindStage) {
 $this = $this | 0;
 $name = $name | 0;
 $layout = $layout | 0;
 $bindStage = $bindStage | 0;
 var $11 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $26 = 0, $3 = 0, $6 = 0, $8 = 0, $i$01$i$i = 0;
 if (!(HEAP32[$name >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(61251, 0, 60953, 77, 61584);
  _abort();
 }
 $2 = $this + 2632 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAP32[$2 >> 2] = $3 + 1;
 if ($3 >>> 0 >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 61705);
  _abort();
 }
 $6 = $this + 2636 + ($3 * 204 | 0) | 0;
 if (($6 | 0) != ($name | 0)) {
  HEAP32[$6 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($6, $name);
 }
 $8 = $this + 2636 + ($3 * 204 | 0) + 4 | 0;
 HEAP32[$8 >> 2] = HEAP32[$layout >> 2];
 if (($8 | 0) == ($layout | 0)) {
  $26 = $this + 2636 + ($3 * 204 | 0) + 200 | 0;
  HEAP32[$26 >> 2] = $bindStage;
  return;
 } else $i$01$i$i = 0;
 do {
  $11 = $this + 2636 + ($3 * 204 | 0) + 8 + ($i$01$i$i * 12 | 0) | 0;
  HEAP32[$11 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($11, $layout + 4 + ($i$01$i$i * 12 | 0) | 0);
  $15 = $layout + 4 + ($i$01$i$i * 12 | 0) + 4 | 0;
  $20 = HEAP32[$15 + 4 >> 2] | 0;
  $21 = $this + 2636 + ($3 * 204 | 0) + 8 + ($i$01$i$i * 12 | 0) + 4 | 0;
  HEAP32[$21 >> 2] = HEAP32[$15 >> 2];
  HEAP32[$21 + 4 >> 2] = $20;
  $i$01$i$i = $i$01$i$i + 1 | 0;
 } while (($i$01$i$i | 0) != 16);
 $26 = $this + 2636 + ($3 * 204 | 0) + 200 | 0;
 HEAP32[$26 >> 2] = $bindStage;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE7AllocIdEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $10 = 0, $11 = 0, $14 = 0, $17 = 0, $21 = 0, $25 = 0, $29 = 0, $3 = 0, $5 = 0, $6 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 148, 53196);
  _abort();
 }
 $3 = HEAP16[$this + 12 >> 1] | 0;
 if ($3 << 16 >> 16 == -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53333, 0, 48917, 149, 53196);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$5 >> 2] = $6 + 1;
 $10 = $this + 48 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ((HEAP32[$this + 52 >> 2] | 0) <= ($11 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106560, 0, 105992, 315, 53371);
  _abort();
 }
 $14 = HEAP32[$this + 40 >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(106688, 0, 123391, 705, 53440);
  _abort();
 }
 $17 = HEAP16[$14 + ($11 << 1) >> 1] | 0;
 HEAP32[$10 >> 2] = $11 + 1;
 HEAP16[$agg$result >> 1] = $17;
 HEAP16[$agg$result + 2 >> 1] = $3;
 HEAP32[$agg$result + 4 >> 2] = $6;
 $21 = $17 & 65535;
 $25 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $25 | 0) <= ($21 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 53525);
  _abort();
 }
 $29 = HEAP32[$this + 16 >> 2] | 0;
 if (!$29) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 53525);
  _abort();
 }
 if (!(HEAP32[$29 + (($25 + $21 | 0) * 400 | 0) + 8 >> 2] | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(53624, 0, 48917, 153, 53196);
  _abort();
 }
}

function __ZN5Oryol5_priv13emscURLLoader8onLoadedEPvS2_i($userData, $buffer, $size) {
 $userData = $userData | 0;
 $buffer = $buffer | 0;
 $size = $size | 0;
 var $10 = 0, $12 = 0, $13 = 0, $17 = 0, $19 = 0, $27 = 0, $3 = 0, $5 = 0;
 if (!$userData) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76762, 0, 76558, 43, 76776);
  _abort();
 }
 if (!$buffer) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76847, 0, 76558, 44, 76776);
  _abort();
 }
 if (($size | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80935, 0, 76558, 45, 76776);
  _abort();
 }
 $3 = $userData + 4 | 0;
 HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
 $5 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = $5 - 1;
 if (($5 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$userData >> 2] >> 2] & 255]($userData);
 HEAP32[$userData + 72 >> 2] = 200;
 $10 = $userData + 60 | 0;
 $12 = (HEAP32[$10 >> 2] | 0) + $size | 0;
 $13 = $userData + 64 | 0;
 if (($12 | 0) > (HEAP32[$13 >> 2] | 0)) __ZN5Oryol6Buffer5allocEi($10, $12);
 $17 = HEAP32[$userData + 68 >> 2] | 0;
 if (!$17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 125, 77020);
  _abort();
 }
 $19 = HEAP32[$10 >> 2] | 0;
 if (($19 + $size | 0) > (HEAP32[$13 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77067, 0, 76888, 126, 77020);
  _abort();
 }
 __ZN5Oryol6Memory4CopyEPKvPvi($buffer, $17 + $19 | 0, $size);
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + $size;
 HEAP8[$userData + 8 >> 0] = 1;
 $27 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = $27 - 1;
 if (($27 | 0) != 1) return;
 FUNCTION_TABLE_vi[HEAP32[HEAP32[$userData >> 2] >> 2] & 255]($userData);
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE8UnassignERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $12 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $3 = 0, $31 = 0, $34 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 183, 58880);
  _abort();
 }
 $2 = HEAP32[$id >> 2] | 0;
 $3 = $2 & 65535;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 56282);
  _abort();
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 56282);
  _abort();
 }
 $14 = $7 + $3 | 0;
 $15 = $id;
 $21 = $12 + ($14 * 608 | 0) | 0;
 $22 = $21;
 if (!((HEAP32[$15 >> 2] | 0) == (HEAP32[$22 >> 2] | 0) ? (HEAP32[$15 + 4 >> 2] | 0) == (HEAP32[$22 + 4 >> 2] | 0) : 0)) {
  HEAP32[$vararg_buffer >> 2] = $2 >>> 16;
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  __ZN5Oryol3Log4WarnEPKcz(57424, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
 $31 = $12 + ($14 * 608 | 0) + 8 | 0;
 if (!(HEAP32[$31 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(54133, 0, 48917, 187, 58880);
  _abort();
 }
 $34 = $21;
 HEAP32[$34 >> 2] = -1;
 HEAP32[$34 + 4 >> 2] = -1;
 HEAP32[$31 >> 2] = 0;
 HEAP32[$12 + ($14 * 608 | 0) + 12 >> 2] = 0;
 __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE6freeIdERKNS_2IdE($this, $id);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8Touchpad16onPanningStartedERKN3glm5tvec2IfLNS1_9precisionE0EEES6_($this, $p, $start) {
 $this = $this | 0;
 $p = $p | 0;
 $start = $start | 0;
 var $14 = 0, $16 = 0, $19 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $31 = 0, $36 = 0, $41 = 0, $43 = 0, $46 = 0, $5 = 0, $8 = 0, $9 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 3 >> 0] = 1;
 HEAP8[$this + 4 >> 0] = 1;
 $3 = $p;
 $5 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $this + 12 | 0;
 HEAP32[$9 >> 2] = $5;
 HEAP32[$9 + 4 >> 2] = $8;
 $14 = $start;
 $16 = HEAP32[$14 >> 2] | 0;
 $19 = HEAP32[$14 + 4 >> 2] | 0;
 $20 = $this + 44 | 0;
 HEAP32[$20 >> 2] = $16;
 HEAP32[$20 + 4 >> 2] = $19;
 $25 = HEAP32[$this + 76 >> 2] | 0;
 $27 = HEAP32[$this + 72 >> 2] | 0;
 if (($25 | 0) == ($27 | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $event + 4 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$event >> 2] = 2;
 $31 = $event + 4 | 0;
 HEAP32[$31 >> 2] = $5;
 HEAP32[$31 + 4 >> 2] = $8;
 $36 = $event + 20 | 0;
 HEAP32[$36 >> 2] = $16;
 HEAP32[$36 + 4 >> 2] = $19;
 $41 = HEAP32[$this + 64 >> 2] | 0;
 if ($41 | 0) {
  $43 = $41 + ($25 << 5) | 0;
  $__begin$03$i = $41 + ($27 << 5) | 0;
  do {
   $46 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$46 >> 2] | 0) + 24 >> 2] & 63]($46, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($43 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8Touchpad14onPanningEndedERKN3glm5tvec2IfLNS1_9precisionE0EEES6_($this, $p, $start) {
 $this = $this | 0;
 $p = $p | 0;
 $start = $start | 0;
 var $14 = 0, $16 = 0, $19 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $31 = 0, $36 = 0, $41 = 0, $43 = 0, $46 = 0, $5 = 0, $8 = 0, $9 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 5 >> 0] = 1;
 HEAP8[$this + 4 >> 0] = 0;
 $3 = $p;
 $5 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $this + 12 | 0;
 HEAP32[$9 >> 2] = $5;
 HEAP32[$9 + 4 >> 2] = $8;
 $14 = $start;
 $16 = HEAP32[$14 >> 2] | 0;
 $19 = HEAP32[$14 + 4 >> 2] | 0;
 $20 = $this + 44 | 0;
 HEAP32[$20 >> 2] = $16;
 HEAP32[$20 + 4 >> 2] = $19;
 $25 = HEAP32[$this + 76 >> 2] | 0;
 $27 = HEAP32[$this + 72 >> 2] | 0;
 if (($25 | 0) == ($27 | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $event + 4 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$event >> 2] = 4;
 $31 = $event + 4 | 0;
 HEAP32[$31 >> 2] = $5;
 HEAP32[$31 + 4 >> 2] = $8;
 $36 = $event + 20 | 0;
 HEAP32[$36 >> 2] = $16;
 HEAP32[$36 + 4 >> 2] = $19;
 $41 = HEAP32[$this + 64 >> 2] | 0;
 if ($41 | 0) {
  $43 = $41 + ($25 << 5) | 0;
  $__begin$03$i = $41 + ($27 << 5) | 0;
  do {
   $46 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$46 >> 2] | 0) + 24 >> 2] & 63]($46, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($43 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE8UnassignERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $12 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $3 = 0, $31 = 0, $34 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 183, 57044);
  _abort();
 }
 $2 = HEAP32[$id >> 2] | 0;
 $3 = $2 & 65535;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 54475);
  _abort();
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 54475);
  _abort();
 }
 $14 = $7 + $3 | 0;
 $15 = $id;
 $21 = $12 + ($14 * 776 | 0) | 0;
 $22 = $21;
 if (!((HEAP32[$15 >> 2] | 0) == (HEAP32[$22 >> 2] | 0) ? (HEAP32[$15 + 4 >> 2] | 0) == (HEAP32[$22 + 4 >> 2] | 0) : 0)) {
  HEAP32[$vararg_buffer >> 2] = $2 >>> 16;
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  __ZN5Oryol3Log4WarnEPKcz(57424, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
 $31 = $12 + ($14 * 776 | 0) + 8 | 0;
 if (!(HEAP32[$31 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(54133, 0, 48917, 187, 57044);
  _abort();
 }
 $34 = $21;
 HEAP32[$34 >> 2] = -1;
 HEAP32[$34 + 4 >> 2] = -1;
 HEAP32[$31 >> 2] = 0;
 HEAP32[$12 + ($14 * 776 | 0) + 12 >> 2] = 0;
 __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6freeIdERKNS_2IdE($this, $id);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv14displayMgrBase19ProcessSystemEventsEv($this) {
 $this = $this | 0;
 var $$pre$phi2Z2D = 0, $0 = 0, $1 = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $20 = 0, $22 = 0, $23 = 0, $27 = 0, $3 = 0, $5 = 0, $7 = 0, $__begin$03$i = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $0 = sp;
 $1 = $this + 232 | 0;
 $3 = $this + 116 | 0;
 $5 = HEAP32[$this + 132 >> 2] | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($5 | 0)) {
  $7 = $this + 236 | 0;
  $10 = HEAP32[$this + 136 >> 2] | 0;
  if ((HEAP32[$7 >> 2] | 0) == ($10 | 0)) {
   STACKTOP = sp;
   return;
  } else {
   $$pre$phi2Z2D = $7;
   $12 = $10;
  }
 } else {
  $$pre$phi2Z2D = $this + 236 | 0;
  $12 = HEAP32[$this + 136 >> 2] | 0;
 }
 HEAP32[$1 >> 2] = $5;
 HEAP32[$$pre$phi2Z2D >> 2] = $12;
 HEAP32[$0 >> 2] = 0;
 dest = $0 + 4 | 0;
 src = $3;
 stop = dest + 44 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $14 = $0 + 48 | 0;
 __ZN5Oryol6StringC2ERKS0_($14, $this + 160 | 0);
 $17 = HEAP32[$this + 172 >> 2] | 0;
 if ($17 | 0) {
  $20 = HEAP32[$this + 180 >> 2] | 0;
  $22 = HEAP32[$this + 184 >> 2] | 0;
  $23 = $17 + ($22 << 5) | 0;
  if (($20 | 0) != ($22 | 0)) {
   $__begin$03$i = $17 + ($20 << 5) | 0;
   do {
    $27 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$27 >> 2] | 0) + 24 >> 2] & 63]($27, $0);
    $__begin$03$i = $__begin$03$i + 32 | 0;
   } while (($__begin$03$i | 0) != ($23 | 0));
  }
 }
 __ZN5Oryol6StringD2Ev($14);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE8UnassignERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $12 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $3 = 0, $31 = 0, $34 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 183, 58258);
  _abort();
 }
 $2 = HEAP32[$id >> 2] | 0;
 $3 = $2 & 65535;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 55560);
  _abort();
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 55560);
  _abort();
 }
 $14 = $7 + $3 | 0;
 $15 = $id;
 $21 = $12 + ($14 * 3712 | 0) | 0;
 $22 = $21;
 if (!((HEAP32[$15 >> 2] | 0) == (HEAP32[$22 >> 2] | 0) ? (HEAP32[$15 + 4 >> 2] | 0) == (HEAP32[$22 + 4 >> 2] | 0) : 0)) {
  HEAP32[$vararg_buffer >> 2] = $2 >>> 16;
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  __ZN5Oryol3Log4WarnEPKcz(57424, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
 $31 = $12 + ($14 * 3712 | 0) + 8 | 0;
 if (!(HEAP32[$31 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(54133, 0, 48917, 187, 58258);
  _abort();
 }
 $34 = $21;
 HEAP32[$34 >> 2] = -1;
 HEAP32[$34 + 4 >> 2] = -1;
 HEAP32[$31 >> 2] = 0;
 HEAP32[$12 + ($14 * 3712 | 0) + 12 >> 2] = 0;
 __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE6freeIdERKNS_2IdE($this, $id);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE15moveInsertFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $i$01 = 0, $i$01$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 122674);
  _abort();
 }
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 122674);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 122674);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - $3 | 0) < ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 122674);
  _abort();
 }
 HEAP32[$0 + ($3 + -1 << 2) >> 2] = HEAP32[$0 + ($3 << 2) >> 2];
 $14 = $index + -1 | 0;
 if (($3 | 0) >= ($14 + $3 | 0)) {
  $$lcssa = $3;
  $19 = $$lcssa + -1 | 0;
  HEAP32[$2 >> 2] = $19;
  $20 = $19 + $index | 0;
  $21 = HEAP32[$this >> 2] | 0;
  $22 = $21 + ($20 << 2) | 0;
  return $22 | 0;
 }
 $17 = HEAP32[$2 >> 2] | 0;
 $18 = $14 + $17 | 0;
 $i$01 = $3;
 do {
  $23 = HEAP32[$this >> 2] | 0;
  $i$01$looptemp = $i$01;
  $i$01 = $i$01 + 1 | 0;
  HEAP32[$23 + ($i$01$looptemp << 2) >> 2] = HEAP32[$23 + ($i$01 << 2) >> 2];
 } while (($i$01 | 0) < ($18 | 0));
 $$lcssa = $17;
 $19 = $$lcssa + -1 | 0;
 HEAP32[$2 >> 2] = $19;
 $20 = $19 + $index | 0;
 $21 = HEAP32[$this >> 2] | 0;
 $22 = $21 + ($20 << 2) | 0;
 return $22 | 0;
}

function __ZN4yakc10kc85_audio10ctc_write0EPv($userdata) {
 $userdata = $userdata | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $11 = 0, $14 = 0, $17 = 0, $2 = 0, $22 = 0, $28 = 0, $29 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $48 = 0, $54 = 0, $55 = 0, $7 = 0, $8 = 0;
 $0 = HEAP32[$userdata >> 2] | 0;
 $1 = $0 + 1 | 0;
 $2 = HEAP8[$1 >> 0] | 0;
 $3 = $userdata + 36 | 0;
 $4 = $userdata + 37 | 0;
 if ($2 << 24 >> 24 == (HEAP8[$4 >> 0] | 0)) {
  $7 = HEAP8[$0 >> 0] | 0;
  $8 = HEAP8[$3 >> 0] | 0;
  if ($7 << 24 >> 24 == $8 << 24 >> 24) return; else {
   $$pre$phiZ2D = $0;
   $11 = $8;
   $14 = $7;
  }
 } else {
  $$pre$phiZ2D = $0;
  $11 = HEAP8[$3 >> 0] | 0;
  $14 = HEAP8[$0 >> 0] | 0;
 }
 if (!(($11 & 2) != 0 | ($14 & 2) == 0)) {
  $17 = HEAP32[$userdata + 28 >> 2] | 0;
  if (!$17) $28 = $14; else {
   $22 = $userdata + 8 | 0;
   FUNCTION_TABLE_viiii[$17 & 7](HEAP32[$userdata + 32 >> 2] | 0, HEAP32[$22 >> 2] | 0, HEAP32[$22 + 4 >> 2] | 0, 0);
   $28 = HEAP8[$$pre$phiZ2D >> 0] | 0;
  }
  HEAP8[$3 >> 0] = $28;
  return;
 }
 $29 = $14 & 255;
 if ($29 & 2 | 0) return;
 $36 = Math_imul($29 & 32 | 0 ? 256 : 16, $2 & 255) | 0;
 if (!$36) {
  $54 = $2;
  $55 = $14;
 } else {
  $39 = HEAP32[$userdata + 20 >> 2] | 0;
  if (!$39) {
   $54 = $2;
   $55 = $14;
  } else {
   $48 = $userdata + 8 | 0;
   FUNCTION_TABLE_viiiii[$39 & 3](HEAP32[$userdata + 32 >> 2] | 0, HEAP32[$48 >> 2] | 0, HEAP32[$48 + 4 >> 2] | 0, 0, ~~(175.0e4 / +($36 | 0) * .5));
   $54 = HEAP8[$1 >> 0] | 0;
   $55 = HEAP8[$$pre$phiZ2D >> 0] | 0;
  }
 }
 HEAP8[$4 >> 0] = $54;
 HEAP8[$3 >> 0] = $55;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE13moveEraseBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $0 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $25 = 0, $3 = 0, $4 = 0, $6 = 0, $9 = 0, $i$02 = 0, $i$02$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 116028);
  _abort();
 }
 $3 = $this + 12 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $6 = HEAP32[$this + 8 >> 2] | 0;
 if (($4 - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 498, 116028);
  _abort();
 }
 $9 = $6 + $index | 0;
 $10 = $4 + -1 | 0;
 if (($9 | 0) < ($10 | 0)) {
  $15 = $0;
  $i$02 = $9;
 } else {
  $$lcssa = $10;
  $13 = $0;
  HEAP32[$3 >> 2] = $$lcssa;
  $12 = $13 + ($$lcssa * 12 | 0) | 0;
  HEAP32[$12 >> 2] = 0;
  return;
 }
 while (1) {
  $14 = $15 + ($i$02 * 12 | 0) | 0;
  $i$02$looptemp = $i$02;
  $i$02 = $i$02 + 1 | 0;
  HEAP32[$14 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($14, $15 + ($i$02 * 12 | 0) | 0);
  HEAP32[$15 + ($i$02$looptemp * 12 | 0) + 4 >> 2] = HEAP32[$15 + ($i$02 * 12 | 0) + 4 >> 2];
  HEAP32[$15 + ($i$02$looptemp * 12 | 0) + 8 >> 2] = HEAP32[$15 + ($i$02 * 12 | 0) + 8 >> 2];
  $25 = (HEAP32[$3 >> 2] | 0) + -1 | 0;
  $$pre = HEAP32[$this >> 2] | 0;
  if (($i$02 | 0) >= ($25 | 0)) {
   $$lcssa = $25;
   $13 = $$pre;
   break;
  } else $15 = $$pre;
 }
 HEAP32[$3 >> 2] = $$lcssa;
 $12 = $13 + ($$lcssa * 12 | 0) | 0;
 HEAP32[$12 >> 2] = 0;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE8UnassignERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $12 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $3 = 0, $31 = 0, $34 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 183, 57664);
  _abort();
 }
 $2 = HEAP32[$id >> 2] | 0;
 $3 = $2 & 65535;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 53525);
  _abort();
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 53525);
  _abort();
 }
 $14 = $7 + $3 | 0;
 $15 = $id;
 $21 = $12 + ($14 * 400 | 0) | 0;
 $22 = $21;
 if (!((HEAP32[$15 >> 2] | 0) == (HEAP32[$22 >> 2] | 0) ? (HEAP32[$15 + 4 >> 2] | 0) == (HEAP32[$22 + 4 >> 2] | 0) : 0)) {
  HEAP32[$vararg_buffer >> 2] = $2 >>> 16;
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  __ZN5Oryol3Log4WarnEPKcz(57424, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
 $31 = $12 + ($14 * 400 | 0) + 8 | 0;
 if (!(HEAP32[$31 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(54133, 0, 48917, 187, 57664);
  _abort();
 }
 $34 = $21;
 HEAP32[$34 >> 2] = -1;
 HEAP32[$34 + 4 >> 2] = -1;
 HEAP32[$31 >> 2] = 0;
 HEAP32[$12 + ($14 * 400 | 0) + 12 >> 2] = 0;
 __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6freeIdERKNS_2IdE($this, $id);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferIiE15moveInsertFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $3 = 0, $i$01 = 0, $i$01$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 120260);
  _abort();
 }
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 120260);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 120260);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - $3 | 0) < ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 120260);
  _abort();
 }
 HEAP32[$0 + ($3 + -1 << 2) >> 2] = HEAP32[$0 + ($3 << 2) >> 2];
 $14 = HEAP32[$2 >> 2] | 0;
 $15 = $index + -1 | 0;
 if (($14 | 0) >= ($15 + $14 | 0)) {
  $$lcssa = $14;
  $19 = $$lcssa + -1 | 0;
  HEAP32[$2 >> 2] = $19;
  $20 = $19 + $index | 0;
  $21 = HEAP32[$this >> 2] | 0;
  $22 = $21 + ($20 << 2) | 0;
  return $22 | 0;
 }
 $18 = HEAP32[$this >> 2] | 0;
 $i$01 = $14;
 do {
  $i$01$looptemp = $i$01;
  $i$01 = $i$01 + 1 | 0;
  HEAP32[$18 + ($i$01$looptemp << 2) >> 2] = HEAP32[$18 + ($i$01 << 2) >> 2];
  $27 = HEAP32[$2 >> 2] | 0;
 } while (($i$01 | 0) < ($15 + $27 | 0));
 $$lcssa = $27;
 $19 = $$lcssa + -1 | 0;
 HEAP32[$2 >> 2] = $19;
 $20 = $19 + $index | 0;
 $21 = HEAP32[$this >> 2] | 0;
 $22 = $21 + ($20 << 2) | 0;
 return $22 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE15moveInsertFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $0 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $i$01 = 0, $i$01$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 116488);
  _abort();
 }
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122643, 0, 123391, 454, 116488);
  _abort();
 }
 if (($index | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 116488);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - $3 | 0) < ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122800, 0, 123391, 455, 116488);
  _abort();
 }
 HEAP32[$0 + ($3 + -1 << 2) >> 2] = HEAP32[$0 + ($3 << 2) >> 2];
 $14 = $index + -1 | 0;
 if (($3 | 0) >= ($14 + $3 | 0)) {
  $$lcssa = $3;
  $20 = $$lcssa + -1 | 0;
  HEAP32[$2 >> 2] = $20;
  $21 = $20 + $index | 0;
  $22 = HEAP32[$this >> 2] | 0;
  $23 = $22 + ($21 << 2) | 0;
  return $23 | 0;
 }
 $17 = HEAP32[$this >> 2] | 0;
 $18 = HEAP32[$2 >> 2] | 0;
 $19 = $14 + $18 | 0;
 $i$01 = $3;
 do {
  $i$01$looptemp = $i$01;
  $i$01 = $i$01 + 1 | 0;
  HEAP32[$17 + ($i$01$looptemp << 2) >> 2] = HEAP32[$17 + ($i$01 << 2) >> 2];
 } while (($i$01 | 0) < ($19 | 0));
 $$lcssa = $18;
 $20 = $$lcssa + -1 | 0;
 HEAP32[$2 >> 2] = $20;
 $21 = $20 + $index | 0;
 $22 = HEAP32[$this >> 2] | 0;
 $23 = $22 + ($21 << 2) | 0;
 return $23 | 0;
}

function __ZN5Oryol5_priv10glRenderer7discardEv($this) {
 $this = $this | 0;
 var $0 = 0, $13 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 145, 66809);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer19invalidateMeshStateEv($this);
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 758, 66850);
  _abort();
 }
 _glUseProgram(0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 761, 66850);
  _abort();
 }
 HEAP32[$this + 300 >> 2] = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 779, 66905);
  _abort();
 } else {
  dest = $this + 304 | 0;
  stop = dest + 128 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP32[$this + 208 >> 2] = 0;
  HEAP32[$this + 212 >> 2] = 0;
  $13 = $this + 4 | 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$0 + 20 >> 2] = 0;
  HEAP32[$0 + 24 >> 2] = 0;
  HEAP32[$13 >> 2] = HEAP32[$0 >> 2];
  HEAP32[$13 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$13 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$13 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$13 + 16 >> 2] = HEAP32[$0 + 16 >> 2];
  HEAP32[$13 + 20 >> 2] = HEAP32[$0 + 20 >> 2];
  HEAP32[$13 + 24 >> 2] = HEAP32[$0 + 24 >> 2];
  HEAP8[$this >> 0] = 0;
  STACKTOP = sp;
  return;
 }
}

function _fread($destv, $size, $nmemb, $f) {
 $destv = $destv | 0;
 $size = $size | 0;
 $nmemb = $nmemb | 0;
 $f = $f | 0;
 var $$ = 0, $$0 = 0, $0 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $23 = 0, $27 = 0, $31 = 0, $5 = 0, $7 = 0, $dest$0$ph = 0, $dest$02 = 0, $l$0$ph = 0, $l$03 = 0, $l$03$lcssa = 0, label = 0;
 $0 = Math_imul($nmemb, $size) | 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) $31 = ___lockfile($f) | 0; else $31 = 0;
 $5 = $f + 74 | 0;
 $7 = HEAP8[$5 >> 0] | 0;
 HEAP8[$5 >> 0] = $7 + 255 | $7;
 $13 = $f + 4 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = (HEAP32[$f + 8 >> 2] | 0) - $14 | 0;
 $17 = $14;
 if (($15 | 0) > 0) {
  $$ = $15 >>> 0 < $0 >>> 0 ? $15 : $0;
  _memcpy($destv | 0, $17 | 0, $$ | 0) | 0;
  HEAP32[$13 >> 2] = $17 + $$;
  $dest$0$ph = $destv + $$ | 0;
  $l$0$ph = $0 - $$ | 0;
 } else {
  $dest$0$ph = $destv;
  $l$0$ph = $0;
 }
 L7 : do if (!$l$0$ph) label = 13; else {
  $23 = $f + 32 | 0;
  $dest$02 = $dest$0$ph;
  $l$03 = $l$0$ph;
  while (1) {
   if (___toread($f) | 0) {
    $l$03$lcssa = $l$03;
    break;
   }
   $27 = FUNCTION_TABLE_iiii[HEAP32[$23 >> 2] & 31]($f, $dest$02, $l$03) | 0;
   if (($27 + 1 | 0) >>> 0 < 2) {
    $l$03$lcssa = $l$03;
    break;
   }
   if (($l$03 | 0) == ($27 | 0)) {
    label = 13;
    break L7;
   } else {
    $dest$02 = $dest$02 + $27 | 0;
    $l$03 = $l$03 - $27 | 0;
   }
  }
  if ($31 | 0) ___unlockfile($f);
  $$0 = (($0 - $l$03$lcssa | 0) >>> 0) / ($size >>> 0) | 0;
 } while (0);
 if ((label | 0) == 13) if (!$31) $$0 = $nmemb; else {
  ___unlockfile($f);
  $$0 = $nmemb;
 }
 return $$0 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS0_8pipelineEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $22 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 50889);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 50889);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity * 608 | 0) | 0;
 $13 = $12 + ($newStart * 608 | 0) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 50889);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + ((HEAP32[$6 >> 2] | 0) * 608 | 0) | 0;
  while (1) {
   __ZN5Oryol5_priv10glPipelineC2EOS1_($dst$02, $src$01);
   __ZN5Oryol5_priv12pipelineBaseD2Ev($src$01);
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 608 | 0;
    $src$01 = $src$01 + 608 | 0;
   }
  }
 }
 $22 = HEAP32[$this >> 2] | 0;
 if ($22 | 0) __ZN5Oryol6Memory4FreeEPv($22);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5ImGui10EndMenuBarEv() {
 var $1 = 0, $10 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $27 = 0, $29 = 0, $35 = 0, $37 = 0, $38 = 0, $48 = 0;
 $1 = HEAP32[38201] | 0;
 $2 = $1 + 114 | 0;
 HEAP8[$2 >> 0] = 1;
 if (HEAP8[$1 + 116 >> 0] | 0) return;
 if (!(HEAP32[$1 + 8 >> 2] & 1024)) ___assert_fail(127103, 124187, 8359, 127144);
 $10 = $1 + 242 | 0;
 if (!(HEAP8[$10 >> 0] | 0)) ___assert_fail(127155, 124187, 8360, 127144);
 HEAP8[$2 >> 0] = 1;
 $13 = $1 + 572 | 0;
 __ZN10ImDrawList11PopClipRectEv(HEAP32[$13 >> 2] | 0);
 $15 = HEAP32[$13 >> 2] | 0;
 $17 = HEAP32[$15 + 52 >> 2] | 0;
 if (($17 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 $19 = $17 + -1 | 0;
 $21 = HEAP32[$15 + 60 >> 2] | 0;
 $25 = HEAP32[$21 + ($19 << 4) + 4 >> 2] | 0;
 $27 = HEAP32[$21 + ($19 << 4) + 8 >> 2] | 0;
 $29 = HEAP32[$21 + ($19 << 4) + 12 >> 2] | 0;
 HEAP32[$1 + 436 >> 2] = HEAP32[$21 + ($19 << 4) >> 2];
 HEAP32[$1 + 440 >> 2] = $25;
 HEAP32[$1 + 444 >> 2] = $27;
 HEAP32[$1 + 448 >> 2] = $29;
 $35 = HEAP32[38201] | 0;
 HEAP8[$35 + 114 >> 0] = 1;
 $37 = $35 + 424 | 0;
 $38 = HEAP32[$37 >> 2] | 0;
 if (($38 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 HEAP32[$37 >> 2] = $38 + -1;
 HEAPF32[$1 + 244 >> 2] = +HEAPF32[$1 + 164 >> 2] - +HEAPF32[$1 + 20 >> 2];
 $48 = HEAP32[$1 + 328 >> 2] | 0;
 if (($48 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
 HEAP8[(HEAP32[$1 + 336 >> 2] | 0) + (($48 + -1 | 0) * 36 | 0) + 32 >> 0] = 0;
 __ZN5ImGui8EndGroupEv();
 HEAP32[$1 + 264 >> 2] = 0;
 HEAP8[$10 >> 0] = 0;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_2IdEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $20 = 0, $25 = 0, $26 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 114815);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 114815);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 3) | 0;
 $13 = $12 + ($newStart << 3) | 0;
 $15 = HEAP32[$this >> 2] | 0;
 if (($8 | 0) > 0) {
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 114815);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 3) | 0;
  while (1) {
   $20 = $src$01;
   $25 = HEAP32[$20 + 4 >> 2] | 0;
   $26 = $dst$02;
   HEAP32[$26 >> 2] = HEAP32[$20 >> 2];
   HEAP32[$26 + 4 >> 2] = $25;
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 8 | 0;
    $src$01 = $src$01 + 8 | 0;
   }
  }
 }
 if ($15 | 0) __ZN5Oryol6Memory4FreeEPv($15);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol5ArrayINS_9loadQueue6resultEE3AddIJRNS_3URLENS_6BufferEEEEvDpOT_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $24 = 0, $27 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS_9loadQueue6resultEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 104808);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 104894);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  __ZN5Oryol3URLC2ERKS0_($14 + ($16 * 52 | 0) | 0, $args);
  HEAP32[$14 + ($16 * 52 | 0) + 40 >> 2] = HEAP32[$args1 >> 2];
  $24 = $args1 + 4 | 0;
  HEAP32[$14 + ($16 * 52 | 0) + 44 >> 2] = HEAP32[$24 >> 2];
  $27 = $args1 + 8 | 0;
  HEAP32[$14 + ($16 * 52 | 0) + 48 >> 2] = HEAP32[$27 >> 2];
  HEAP32[$args1 >> 2] = 0;
  HEAP32[$24 >> 2] = 0;
  HEAP32[$27 >> 2] = 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 104894);
  _abort();
 }
}

function __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE8pushBackEOS3_($this, $elm) {
 $this = $this | 0;
 $elm = $elm | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $31 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 408, 103998);
  _abort();
 }
 $2 = $this + 12 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) >= (HEAP32[$this + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 408, 103998);
  _abort();
 }
 HEAP32[$2 >> 2] = $3 + 1;
 HEAP32[$0 + ($3 * 56 | 0) >> 2] = HEAP32[$elm >> 2];
 HEAP32[$elm >> 2] = 0;
 $10 = $0 + ($3 * 56 | 0) + 8 | 0;
 $11 = $elm + 24 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 do if (!$12) HEAP32[$0 + ($3 * 56 | 0) + 24 >> 2] = 0; else if (($12 | 0) == ($elm + 8 | 0)) {
  HEAP32[$0 + ($3 * 56 | 0) + 24 >> 2] = $10;
  $18 = HEAP32[$11 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$18 >> 2] | 0) + 12 >> 2] & 63]($18, $10);
  break;
 } else {
  HEAP32[$0 + ($3 * 56 | 0) + 24 >> 2] = $12;
  HEAP32[$11 >> 2] = 0;
  break;
 } while (0);
 $23 = $0 + ($3 * 56 | 0) + 32 | 0;
 $24 = $elm + 48 | 0;
 $25 = HEAP32[$24 >> 2] | 0;
 if (!$25) {
  HEAP32[$0 + ($3 * 56 | 0) + 48 >> 2] = 0;
  return;
 }
 if (($25 | 0) == ($elm + 32 | 0)) {
  HEAP32[$0 + ($3 * 56 | 0) + 48 >> 2] = $23;
  $31 = HEAP32[$24 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$31 >> 2] | 0) + 12 >> 2] & 63]($31, $23);
  return;
 } else {
  HEAP32[$0 + ($3 * 56 | 0) + 48 >> 2] = $25;
  HEAP32[$24 >> 2] = 0;
  return;
 }
}

function __ZN5Oryol13StringBuilder6AppendEPKcii($this, $ptr, $startIndex, $endIndex) {
 $this = $this | 0;
 $ptr = $ptr | 0;
 $startIndex = $startIndex | 0;
 $endIndex = $endIndex | 0;
 var $$0 = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $17 = 0, $21 = 0, $26 = 0, $3 = 0, $6 = 0, $7 = 0;
 if (($endIndex | 0) == -1) $$0 = _strlen($ptr) | 0; else $$0 = $endIndex;
 if (($$0 | 0) < ($startIndex | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120907, 0, 120930, 183, 120999);
  _abort();
 }
 $3 = $$0 - $startIndex | 0;
 if (($3 | 0) <= 0) return;
 if (!$ptr) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121057, 0, 120930, 186, 120999);
  _abort();
 }
 $6 = $3 + 1 | 0;
 $7 = $this + 8 | 0;
 $10 = $this + 4 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (((HEAP32[$7 >> 2] | 0) + $6 | 0) < ($11 | 0)) {
  $$pre$phiZ2D = $this;
  $21 = HEAP32[$this >> 2] | 0;
 } else {
  $15 = $11 + (($6 | 0) < 128 ? 128 : $6) | 0;
  $16 = __ZN5Oryol6Memory5AllocEi($15) | 0;
  $17 = HEAP32[$this >> 2] | 0;
  if (!$17) HEAP8[$16 >> 0] = 0; else {
   _strcpy($16, $17) | 0;
   __ZN5Oryol6Memory4FreeEPv(HEAP32[$this >> 2] | 0);
   HEAP32[$this >> 2] = 0;
  }
  HEAP32[$this >> 2] = $16;
  HEAP32[$10 >> 2] = $15;
  $$pre$phiZ2D = $this;
  $21 = $16;
 }
 if (!$21) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121061, 0, 120930, 188, 120999);
  _abort();
 }
 _strncpy($21 + (HEAP32[$7 >> 2] | 0) | 0, $ptr + $startIndex | 0, $3) | 0;
 $26 = (HEAP32[$7 >> 2] | 0) + $3 | 0;
 HEAP32[$7 >> 2] = $26;
 HEAP8[(HEAP32[$$pre$phiZ2D >> 2] | 0) + $26 >> 0] = 0;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE14moveEraseFrontEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$lcssa = 0, $$pre = 0, $0 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $24 = 0, $5 = 0, $6 = 0, $i$02 = 0, $i$02$looptemp = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!(($index | 0) > -1 & ($0 | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 115881);
  _abort();
 }
 $5 = $this + 8 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (((HEAP32[$this + 12 >> 2] | 0) - $6 | 0) <= ($index | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118628, 0, 123391, 486, 115881);
  _abort();
 }
 if (($index | 0) <= 0) {
  $$lcssa = $6;
  $13 = $0;
  $11 = $$lcssa + 1 | 0;
  HEAP32[$5 >> 2] = $11;
  $12 = $13 + ($$lcssa * 12 | 0) | 0;
  HEAP32[$12 >> 2] = 0;
  return;
 }
 $15 = $0;
 $i$02 = $6 + $index | 0;
 while (1) {
  $14 = $15 + ($i$02 * 12 | 0) | 0;
  $i$02$looptemp = $i$02;
  $i$02 = $i$02 + -1 | 0;
  HEAP32[$14 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($14, $15 + ($i$02 * 12 | 0) | 0);
  HEAP32[$15 + ($i$02$looptemp * 12 | 0) + 4 >> 2] = HEAP32[$15 + ($i$02 * 12 | 0) + 4 >> 2];
  HEAP32[$15 + ($i$02$looptemp * 12 | 0) + 8 >> 2] = HEAP32[$15 + ($i$02 * 12 | 0) + 8 >> 2];
  $24 = HEAP32[$5 >> 2] | 0;
  $$pre = HEAP32[$this >> 2] | 0;
  if (($i$02 | 0) <= ($24 | 0)) {
   $$lcssa = $24;
   $13 = $$pre;
   break;
  } else $15 = $$pre;
 }
 $11 = $$lcssa + 1 | 0;
 HEAP32[$5 >> 2] = $11;
 $12 = $13 + ($$lcssa * 12 | 0) | 0;
 HEAP32[$12 >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE5eraseEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $1 = 0, $13 = 0, $2 = 0, $24 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 610, 118478);
  _abort();
 }
 if (!$index) {
  HEAP32[$2 >> 2] = $3 + 1;
  $13 = HEAP32[$5 + ($3 * 40 | 0) + 24 >> 2] | 0;
  if (($13 | 0) == ($5 + ($3 * 40 | 0) + 8 | 0)) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 16 >> 2] & 255]($13);
   return;
  }
  if (!$13) return;
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 20 >> 2] & 255]($13);
  return;
 }
 if (($4 + -1 | 0) != ($index | 0)) if (($4 >> 1 | 0) > ($index | 0)) {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE14moveEraseFrontEi($this, $index);
  return;
 } else {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE13moveEraseBackEi($this, $index);
  return;
 }
 $24 = $1 + -1 | 0;
 HEAP32[$0 >> 2] = $24;
 $27 = HEAP32[$5 + ($24 * 40 | 0) + 24 >> 2] | 0;
 if (($27 | 0) == ($5 + ($24 * 40 | 0) + 8 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$27 >> 2] | 0) + 16 >> 2] & 255]($27);
  return;
 }
 if (!$27) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$27 >> 2] | 0) + 20 >> 2] & 255]($27);
 return;
}

function __ZN5Oryol8Touchpad14onDoubleTappedERKN3glm5tvec2IfLNS1_9precisionE0EEE($this, $p) {
 $this = $this | 0;
 $p = $p | 0;
 var $13 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $30 = 0, $35 = 0, $4 = 0, $40 = 0, $42 = 0, $45 = 0, $7 = 0, $8 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 2 >> 0] = 1;
 $2 = $p;
 $4 = HEAP32[$2 >> 2] | 0;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $8 = $this + 12 | 0;
 HEAP32[$8 >> 2] = $4;
 HEAP32[$8 + 4 >> 2] = $7;
 $13 = $p;
 $15 = HEAP32[$13 >> 2] | 0;
 $18 = HEAP32[$13 + 4 >> 2] | 0;
 $19 = $this + 44 | 0;
 HEAP32[$19 >> 2] = $15;
 HEAP32[$19 + 4 >> 2] = $18;
 $24 = HEAP32[$this + 76 >> 2] | 0;
 $26 = HEAP32[$this + 72 >> 2] | 0;
 if (($24 | 0) == ($26 | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $event + 4 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$event >> 2] = 1;
 $30 = $event + 4 | 0;
 HEAP32[$30 >> 2] = $4;
 HEAP32[$30 + 4 >> 2] = $7;
 $35 = $event + 20 | 0;
 HEAP32[$35 >> 2] = $15;
 HEAP32[$35 + 4 >> 2] = $18;
 $40 = HEAP32[$this + 64 >> 2] | 0;
 if ($40 | 0) {
  $42 = $40 + ($24 << 5) | 0;
  $__begin$03$i = $40 + ($26 << 5) | 0;
  do {
   $45 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$45 >> 2] | 0) + 24 >> 2] & 63]($45, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($42 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_3PtrINS_14ResourceLoaderEEEE5eraseEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 610, 52031);
  _abort();
 }
 if (!$index) {
  HEAP32[$2 >> 2] = $3 + 1;
  $11 = $5 + ($3 << 2) | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if (!$12) return;
  $14 = $12 + 4 | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  HEAP32[$14 >> 2] = $15 - 1;
  if (($15 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$12 >> 2] >> 2] & 255]($12);
  HEAP32[$11 >> 2] = 0;
  return;
 }
 if (($4 + -1 | 0) != ($index | 0)) if (($4 >> 1 | 0) > ($index | 0)) {
  __ZN5Oryol5_priv13elementBufferINS_3PtrINS_14ResourceLoaderEEEE14moveEraseFrontEi($this, $index);
  return;
 } else {
  __ZN5Oryol5_priv13elementBufferINS_3PtrINS_14ResourceLoaderEEEE13moveEraseBackEi($this, $index);
  return;
 }
 $21 = $1 + -1 | 0;
 HEAP32[$0 >> 2] = $21;
 $22 = $5 + ($21 << 2) | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 if (!$23) return;
 $25 = $23 + 4 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 HEAP32[$25 >> 2] = $26 - 1;
 if (($26 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$23 >> 2] >> 2] & 255]($23);
 HEAP32[$22 >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv8glShaderD2Ev($this) {
 $this = $this | 0;
 if (!(HEAP32[$this + 3064 >> 2] | 0)) {
  HEAP32[$this + 3044 >> 2] = 0;
  HEAP32[$this + 3032 >> 2] = 0;
  HEAP32[$this + 3020 >> 2] = 0;
  HEAP32[$this + 3008 >> 2] = 0;
  HEAP32[$this + 2996 >> 2] = 0;
  HEAP32[$this + 2984 >> 2] = 0;
  HEAP32[$this + 2972 >> 2] = 0;
  HEAP32[$this + 2960 >> 2] = 0;
  HEAP32[$this + 2948 >> 2] = 0;
  HEAP32[$this + 2936 >> 2] = 0;
  HEAP32[$this + 2924 >> 2] = 0;
  HEAP32[$this + 2912 >> 2] = 0;
  HEAP32[$this + 2900 >> 2] = 0;
  HEAP32[$this + 2888 >> 2] = 0;
  HEAP32[$this + 2876 >> 2] = 0;
  HEAP32[$this + 2864 >> 2] = 0;
  HEAP32[$this + 2856 >> 2] = 0;
  HEAP32[$this + 2840 >> 2] = 0;
  HEAP32[$this + 2828 >> 2] = 0;
  HEAP32[$this + 2816 >> 2] = 0;
  HEAP32[$this + 2804 >> 2] = 0;
  HEAP32[$this + 2792 >> 2] = 0;
  HEAP32[$this + 2780 >> 2] = 0;
  HEAP32[$this + 2768 >> 2] = 0;
  HEAP32[$this + 2756 >> 2] = 0;
  HEAP32[$this + 2744 >> 2] = 0;
  HEAP32[$this + 2732 >> 2] = 0;
  HEAP32[$this + 2720 >> 2] = 0;
  HEAP32[$this + 2708 >> 2] = 0;
  HEAP32[$this + 2696 >> 2] = 0;
  HEAP32[$this + 2684 >> 2] = 0;
  HEAP32[$this + 2672 >> 2] = 0;
  HEAP32[$this + 2660 >> 2] = 0;
  HEAP32[$this + 2652 >> 2] = 0;
  __ZN5Oryol11StaticArrayINS_11ShaderSetup17uniformBlockEntryELi8EED2Ev($this + 344 | 0);
  __ZN5Oryol11ShaderSetup12programEntryD2Ev($this + 32 | 0);
  HEAP32[$this + 16 >> 2] = 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64934, 0, 64955, 18, 65014);
  _abort();
 }
}

function __ZN5Oryol5_priv13elementBufferINS_6StringEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $22 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 117323);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 117323);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 3) | 0;
 $13 = $12 + ($newStart << 3) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 117323);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 3) | 0;
  while (1) {
   __ZN5Oryol6StringC2EOS0_($dst$02, $src$01);
   __ZN5Oryol6StringD2Ev($src$01);
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 8 | 0;
    $src$01 = $src$01 + 8 | 0;
   }
  }
 }
 $22 = HEAP32[$this >> 2] | 0;
 if ($22 | 0) __ZN5Oryol6Memory4FreeEPv($22);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol9MeshSetup5EmptyEiNS_5Usage4CodeENS_9IndexType4CodeEiS2_($agg$result, $numVertices, $vertexUsage, $indexType, $numIndices, $indexUsage) {
 $agg$result = $agg$result | 0;
 $numVertices = $numVertices | 0;
 $vertexUsage = $vertexUsage | 0;
 $indexType = $indexType | 0;
 $numIndices = $numIndices | 0;
 $indexUsage = $indexUsage | 0;
 var $1 = 0, $10 = 0, $11 = 0, $13 = 0, $3 = 0, $6 = 0, dest = 0, stop = 0;
 if (($numVertices | 0) > 0) {
  HEAP32[$agg$result >> 2] = -1;
  $1 = $agg$result + 4 | 0;
  HEAP32[$1 >> 2] = -1;
  __ZN5Oryol12VertexLayoutC2Ev($agg$result + 8 | 0);
  $3 = $agg$result + 76 | 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  HEAP8[$3 + 12 >> 0] = 0;
  __ZN5Oryol7Locator9NonSharedEv($agg$result + 92 | 0);
  $6 = $agg$result + 104 | 0;
  HEAP32[$6 >> 2] = -1;
  HEAP32[$6 + 4 >> 2] = -1;
  $10 = $agg$result + 112 | 0;
  $11 = $agg$result + 116 | 0;
  $13 = $agg$result + 188 | 0;
  dest = $agg$result + 120 | 0;
  stop = dest + 68 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP8[$13 >> 0] = HEAP8[$13 >> 0] & -16 | 4;
  HEAP32[$agg$result >> 2] = $vertexUsage;
  HEAP32[$1 >> 2] = $indexUsage;
  HEAP32[$3 >> 2] = $numVertices;
  HEAP32[$agg$result + 80 >> 2] = $numIndices;
  HEAP32[$agg$result + 84 >> 2] = $indexType;
  HEAP32[$10 >> 2] = -1;
  HEAP32[$11 >> 2] = -1;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(60606, 0, 60622, 66, 60685);
  _abort();
 }
}

function __ZN5Audio7cb_stopEPvyi($userdata, $0, $1, $channel) {
 $userdata = $userdata | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $channel = $channel | 0;
 var $$sink$i = 0, $10 = 0, $13 = 0, $19 = 0, $20 = 0, $21 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0;
 if ($channel >>> 0 >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(20373, 0, 20405, 57, 20513);
  _abort();
 }
 $3 = $userdata + 110064 | 0;
 $4 = $3 + ($channel * 8216 | 0) | 0;
 do {
  $5 = HEAP8[$4 >> 0] | 0;
  HEAP8[$4 >> 0] = 1;
 } while (($5 & 1) != 0);
 $6 = $3 + ($channel * 8216 | 0) + 4 | 0;
 do {} while ((HEAP32[$6 >> 2] | 0) > 0);
 $9 = $3 + ($channel * 8216 | 0) + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 HEAP32[$9 >> 2] = $10 + 1;
 $13 = $3 + ($channel * 8216 | 0) + 24 + ($10 << 4) | 0;
 HEAP32[$13 >> 2] = $0;
 HEAP32[$13 + 4 >> 2] = $1;
 HEAP32[$3 + ($channel * 8216 | 0) + 24 + ($10 << 4) + 8 >> 2] = 0;
 HEAP32[$3 + ($channel * 8216 | 0) + 24 + ($10 << 4) + 12 >> 2] = 0;
 $19 = HEAP32[$9 >> 2] | 0;
 $20 = $19 & 511;
 HEAP32[$9 >> 2] = $20;
 $21 = $3 + ($channel * 8216 | 0) + 12 | 0;
 if (($20 | 0) == (HEAP32[$21 >> 2] | 0)) {
  HEAP32[$21 >> 2] = $19 + 1 & 511;
  $$sink$i = 1;
 } else $$sink$i = 0;
 HEAP8[$3 + ($channel * 8216 | 0) + 18 >> 0] = $$sink$i;
 $28 = $3 + ($channel * 8216 | 0) + 24 + ($20 << 4) | 0;
 HEAP32[$28 >> 2] = -1;
 HEAP32[$28 + 4 >> 2] = -1;
 HEAP32[$3 + ($channel * 8216 | 0) + 24 + ($20 << 4) + 8 >> 2] = 0;
 HEAP32[$3 + ($channel * 8216 | 0) + 24 + ($20 << 4) + 12 >> 2] = 0;
 HEAP8[$4 >> 0] = 0;
 return;
}

function __ZN5Oryol5QueueItE12checkEnqueueEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $3 = 0, $8 = 0, $from$01$i4 = 0, $growBy$0$i = 0, $i$03$i2 = 0, $to$02$i3 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($1 | 0) == ($3 | 0)) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  $10 = 0;
  $8 = 0;
 } else {
  $10 = $3;
  $8 = $1;
 }
 if ((HEAP32[$this + 4 >> 2] | 0) != ($8 | 0)) return;
 if (($10 | 0) <= 0) {
  $20 = $8 >> 1;
  $22 = HEAP32[$this + 16 >> 2] | 0;
  if (($20 | 0) < ($22 | 0)) $growBy$0$i = $22; else {
   $25 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($20 | 0) > ($25 | 0) ? $25 : $20;
  }
  if (($growBy$0$i | 0) <= 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 105992, 136, 49622);
   _abort();
  }
  __ZN5Oryol5_priv13elementBufferItE5allocEii($this, $growBy$0$i + $8 | 0, 0);
  return;
 }
 $11 = $8 - $10 | 0;
 if (($11 | 0) > 0) {
  $13 = HEAP32[$this >> 2] | 0;
  if (!$13) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105975, 0, 105992, 146, 49549);
   _abort();
  }
  $from$01$i4 = $13 + ($10 << 1) | 0;
  $i$03$i2 = 0;
  $to$02$i3 = $13;
  while (1) {
   HEAP16[$to$02$i3 >> 1] = HEAP16[$from$01$i4 >> 1] | 0;
   $i$03$i2 = $i$03$i2 + 1 | 0;
   if (($i$03$i2 | 0) == ($11 | 0)) break; else {
    $from$01$i4 = $from$01$i4 + 2 | 0;
    $to$02$i3 = $to$02$i3 + 2 | 0;
   }
  }
 }
 HEAP32[$2 >> 2] = 0;
 HEAP32[$0 >> 2] = $11;
 return;
}

function __ZN4yakc13kc85_snapshot18apply_memory_stateERKNS0_7state_tERNS_4kc85E($state, $kc) {
 $state = $state | 0;
 $kc = $kc | 0;
 var $10 = 0, $19 = 0, $23 = 0, $3 = 0, $4 = 0, $6 = 0, $__begin$0$$0$lcssa$i = 0, $__begin$0$$0$lcssa$i1 = 0;
 _memcpy($kc | 0, $state + 184 | 0, 65536) | 0;
 _memcpy($kc + 69476 | 0, $state + 65720 | 0, 65536) | 0;
 $3 = $kc + 463128 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $6 = $kc + 463168 | 0;
 if ($4 << 24 >> 24 == 8) $__begin$0$$0$lcssa$i = $3; else if ((HEAP8[$6 >> 0] | 0) == 8) $__begin$0$$0$lcssa$i = $6; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 $10 = HEAP32[$__begin$0$$0$lcssa$i + 24 >> 2] | 0;
 if (!$10) $19 = $4; else if (!(HEAP8[$__begin$0$$0$lcssa$i + 33 >> 0] | 0)) $19 = $4; else {
  _memcpy($10 | 0, $state + 131256 | 0, HEAP32[$__begin$0$$0$lcssa$i + 28 >> 2] | 0) | 0;
  $19 = HEAP8[$3 >> 0] | 0;
 }
 if ($19 << 24 >> 24 == 12) $__begin$0$$0$lcssa$i1 = $3; else if ((HEAP8[$6 >> 0] | 0) == 12) $__begin$0$$0$lcssa$i1 = $6; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 40519, 222, 40565);
  _abort();
 }
 $23 = HEAP32[$__begin$0$$0$lcssa$i1 + 24 >> 2] | 0;
 if (!$23) {
  __ZN4yakc4kc8521update_bank_switchingEv($kc);
  return;
 }
 if (!(HEAP8[$__begin$0$$0$lcssa$i1 + 33 >> 0] | 0)) {
  __ZN4yakc4kc8521update_bank_switchingEv($kc);
  return;
 }
 _memcpy($23 | 0, $state + 196792 | 0, HEAP32[$__begin$0$$0$lcssa$i1 + 28 >> 2] | 0) | 0;
 __ZN4yakc4kc8521update_bank_switchingEv($kc);
 return;
}

function __ZN5Oryol5Mouse8onPosMovERKN3glm5tvec2IfLNS1_9precisionE0EEE($this, $pos) {
 $this = $this | 0;
 $pos = $pos | 0;
 var $0 = 0, $1 = 0, $10 = 0.0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $23 = 0, $25 = 0, $28 = 0, $33 = 0, $34 = 0, $39 = 0, $46 = 0, $48 = 0, $51 = 0, $__begin$03$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $1 = $this + 12 | 0;
 $2 = $this + 4 | 0;
 $10 = +HEAPF32[$pos + 4 >> 2] - +HEAPF32[$this + 8 >> 2];
 HEAPF32[$1 >> 2] = +HEAPF32[$pos >> 2] - +HEAPF32[$2 >> 2];
 HEAPF32[$this + 16 >> 2] = $10;
 $12 = $pos;
 $14 = HEAP32[$12 >> 2] | 0;
 $17 = HEAP32[$12 + 4 >> 2] | 0;
 $18 = $2;
 HEAP32[$18 >> 2] = $14;
 HEAP32[$18 + 4 >> 2] = $17;
 $23 = HEAP32[$this + 48 >> 2] | 0;
 $25 = HEAP32[$this + 44 >> 2] | 0;
 if (($23 | 0) == ($25 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = 0;
 $28 = $1;
 $33 = HEAP32[$28 + 4 >> 2] | 0;
 $34 = $0 + 4 | 0;
 HEAP32[$34 >> 2] = HEAP32[$28 >> 2];
 HEAP32[$34 + 4 >> 2] = $33;
 $39 = $0 + 12 | 0;
 HEAP32[$39 >> 2] = $14;
 HEAP32[$39 + 4 >> 2] = $17;
 HEAPF32[$0 + 20 >> 2] = 0.0;
 HEAPF32[$0 + 24 >> 2] = 0.0;
 $46 = HEAP32[$this + 36 >> 2] | 0;
 if (!$46) {
  STACKTOP = sp;
  return;
 }
 $48 = $46 + ($23 << 5) | 0;
 $__begin$03$i = $46 + ($25 << 5) | 0;
 do {
  $51 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$51 >> 2] | 0) + 24 >> 2] & 63]($51, $0);
  $__begin$03$i = $__begin$03$i + 32 | 0;
 } while (($__begin$03$i | 0) != ($48 | 0));
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8Touchpad8onTappedERKN3glm5tvec2IfLNS1_9precisionE0EEE($this, $p) {
 $this = $this | 0;
 $p = $p | 0;
 var $13 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $34 = 0, $39 = 0, $4 = 0, $41 = 0, $44 = 0, $7 = 0, $8 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 1 >> 0] = 1;
 $2 = $p;
 $4 = HEAP32[$2 >> 2] | 0;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $8 = $this + 12 | 0;
 HEAP32[$8 >> 2] = $4;
 HEAP32[$8 + 4 >> 2] = $7;
 $13 = $p;
 $15 = HEAP32[$13 >> 2] | 0;
 $18 = HEAP32[$13 + 4 >> 2] | 0;
 $19 = $this + 44 | 0;
 HEAP32[$19 >> 2] = $15;
 HEAP32[$19 + 4 >> 2] = $18;
 $24 = HEAP32[$this + 76 >> 2] | 0;
 $26 = HEAP32[$this + 72 >> 2] | 0;
 if (($24 | 0) == ($26 | 0)) {
  STACKTOP = sp;
  return;
 }
 $28 = $event + 4 | 0;
 dest = $event;
 stop = dest + 52 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 $29 = $28;
 HEAP32[$29 >> 2] = $4;
 HEAP32[$29 + 4 >> 2] = $7;
 $34 = $event + 20 | 0;
 HEAP32[$34 >> 2] = $15;
 HEAP32[$34 + 4 >> 2] = $18;
 $39 = HEAP32[$this + 64 >> 2] | 0;
 if ($39 | 0) {
  $41 = $39 + ($24 << 5) | 0;
  $__begin$03$i = $39 + ($26 << 5) | 0;
  do {
   $44 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$44 >> 2] | 0) + 24 >> 2] & 63]($44, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($41 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_15stringAtomTable5EntryEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $23 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 122523);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 122523);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 2) | 0;
 $13 = $12 + ($newStart << 2) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 122523);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 2) | 0;
  while (1) {
   HEAP32[$dst$02 >> 2] = HEAP32[$src$01 >> 2];
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 4 | 0;
    $src$01 = $src$01 + 4 | 0;
   }
  }
 }
 $23 = HEAP32[$this >> 2] | 0;
 if ($23 | 0) __ZN5Oryol6Memory4FreeEPv($23);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE11UpdateStateERKNS_2IdENS_13ResourceState4CodeE($this, $id, $newState) {
 $this = $this | 0;
 $id = $id | 0;
 $newState = $newState | 0;
 var $12 = 0, $14 = 0, $15 = 0, $2 = 0, $22 = 0, $3 = 0, $31 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 233, 56594);
  _abort();
 }
 $2 = HEAP32[$id >> 2] | 0;
 $3 = $2 & 65535;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 56282);
  _abort();
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 56282);
  _abort();
 }
 $14 = $7 + $3 | 0;
 $15 = $id;
 $22 = $12 + ($14 * 608 | 0) | 0;
 if (!((HEAP32[$15 >> 2] | 0) == (HEAP32[$22 >> 2] | 0) ? (HEAP32[$15 + 4 >> 2] | 0) == (HEAP32[$22 + 4 >> 2] | 0) : 0)) {
  HEAP32[$vararg_buffer >> 2] = $2 >>> 16;
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  __ZN5Oryol3Log4WarnEPKcz(54170, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
 $31 = $12 + ($14 * 608 | 0) + 8 | 0;
 if (!(HEAP32[$31 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(54133, 0, 48917, 236, 56594);
  _abort();
 }
 HEAP32[$31 >> 2] = $newState;
 HEAP32[$12 + ($14 * 608 | 0) + 12 >> 2] = HEAP32[$this + 4 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE11UpdateStateERKNS_2IdENS_13ResourceState4CodeE($this, $id, $newState) {
 $this = $this | 0;
 $id = $id | 0;
 $newState = $newState | 0;
 var $12 = 0, $14 = 0, $15 = 0, $2 = 0, $22 = 0, $3 = 0, $31 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 233, 55860);
  _abort();
 }
 $2 = HEAP32[$id >> 2] | 0;
 $3 = $2 & 65535;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 55560);
  _abort();
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 55560);
  _abort();
 }
 $14 = $7 + $3 | 0;
 $15 = $id;
 $22 = $12 + ($14 * 3712 | 0) | 0;
 if (!((HEAP32[$15 >> 2] | 0) == (HEAP32[$22 >> 2] | 0) ? (HEAP32[$15 + 4 >> 2] | 0) == (HEAP32[$22 + 4 >> 2] | 0) : 0)) {
  HEAP32[$vararg_buffer >> 2] = $2 >>> 16;
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  __ZN5Oryol3Log4WarnEPKcz(54170, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
 $31 = $12 + ($14 * 3712 | 0) + 8 | 0;
 if (!(HEAP32[$31 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(54133, 0, 48917, 236, 55860);
  _abort();
 }
 HEAP32[$31 >> 2] = $newState;
 HEAP32[$12 + ($14 * 3712 | 0) + 12 >> 2] = HEAP32[$this + 4 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE11UpdateStateERKNS_2IdENS_13ResourceState4CodeE($this, $id, $newState) {
 $this = $this | 0;
 $id = $id | 0;
 $newState = $newState | 0;
 var $12 = 0, $14 = 0, $15 = 0, $2 = 0, $22 = 0, $3 = 0, $31 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 233, 54781);
  _abort();
 }
 $2 = HEAP32[$id >> 2] | 0;
 $3 = $2 & 65535;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 54475);
  _abort();
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 54475);
  _abort();
 }
 $14 = $7 + $3 | 0;
 $15 = $id;
 $22 = $12 + ($14 * 776 | 0) | 0;
 if (!((HEAP32[$15 >> 2] | 0) == (HEAP32[$22 >> 2] | 0) ? (HEAP32[$15 + 4 >> 2] | 0) == (HEAP32[$22 + 4 >> 2] | 0) : 0)) {
  HEAP32[$vararg_buffer >> 2] = $2 >>> 16;
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  __ZN5Oryol3Log4WarnEPKcz(54170, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
 $31 = $12 + ($14 * 776 | 0) + 8 | 0;
 if (!(HEAP32[$31 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(54133, 0, 48917, 236, 54781);
  _abort();
 }
 HEAP32[$31 >> 2] = $newState;
 HEAP32[$12 + ($14 * 776 | 0) + 12 >> 2] = HEAP32[$this + 4 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_3PtrI10WindowBaseEEE5eraseEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 610, 34607);
  _abort();
 }
 if (!$index) {
  HEAP32[$2 >> 2] = $3 + 1;
  $11 = $5 + ($3 << 2) | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if (!$12) return;
  $14 = $12 + 4 | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  HEAP32[$14 >> 2] = $15 - 1;
  if (($15 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$12 >> 2] >> 2] & 255]($12);
  HEAP32[$11 >> 2] = 0;
  return;
 }
 if (($4 + -1 | 0) != ($index | 0)) if (($4 >> 1 | 0) > ($index | 0)) {
  __ZN5Oryol5_priv13elementBufferINS_3PtrI10WindowBaseEEE14moveEraseFrontEi($this, $index);
  return;
 } else {
  __ZN5Oryol5_priv13elementBufferINS_3PtrI10WindowBaseEEE13moveEraseBackEi($this, $index);
  return;
 }
 $21 = $1 + -1 | 0;
 HEAP32[$0 >> 2] = $21;
 $22 = $5 + ($21 << 2) | 0;
 $23 = HEAP32[$22 >> 2] | 0;
 if (!$23) return;
 $25 = $23 + 4 | 0;
 $26 = HEAP32[$25 >> 2] | 0;
 HEAP32[$25 >> 2] = $26 - 1;
 if (($26 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$23 >> 2] >> 2] & 255]($23);
 HEAP32[$22 >> 2] = 0;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE11UpdateStateERKNS_2IdENS_13ResourceState4CodeE($this, $id, $newState) {
 $this = $this | 0;
 $id = $id | 0;
 $newState = $newState | 0;
 var $12 = 0, $14 = 0, $15 = 0, $2 = 0, $22 = 0, $3 = 0, $31 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 233, 53959);
  _abort();
 }
 $2 = HEAP32[$id >> 2] | 0;
 $3 = $2 & 65535;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 53525);
  _abort();
 }
 $12 = HEAP32[$this + 16 >> 2] | 0;
 if (!$12) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 53525);
  _abort();
 }
 $14 = $7 + $3 | 0;
 $15 = $id;
 $22 = $12 + ($14 * 400 | 0) | 0;
 if (!((HEAP32[$15 >> 2] | 0) == (HEAP32[$22 >> 2] | 0) ? (HEAP32[$15 + 4 >> 2] | 0) == (HEAP32[$22 + 4 >> 2] | 0) : 0)) {
  HEAP32[$vararg_buffer >> 2] = $2 >>> 16;
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  __ZN5Oryol3Log4WarnEPKcz(54170, $vararg_buffer);
  STACKTOP = sp;
  return;
 }
 $31 = $12 + ($14 * 400 | 0) + 8 | 0;
 if (!(HEAP32[$31 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(54133, 0, 48917, 236, 53959);
  _abort();
 }
 HEAP32[$31 >> 2] = $newState;
 HEAP32[$12 + ($14 * 400 | 0) + 12 >> 2] = HEAP32[$this + 4 >> 2];
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv6glInfo11printStringEjPKcb($glEnum, $name, $replaceSpaceWithNewLine) {
 $glEnum = $glEnum | 0;
 $name = $name | 0;
 $replaceSpaceWithNewLine = $replaceSpaceWithNewLine | 0;
 var $0 = 0, $2 = 0, $6 = 0, $str = 0, $strBuilder = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer = sp;
 $str = sp + 40 | 0;
 $strBuilder = sp + 24 | 0;
 $0 = sp + 16 | 0;
 if (!$name) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75882, 0, 75744, 102, 75887);
  _abort();
 }
 $2 = _glGetString($glEnum | 0) | 0;
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 104, 75887);
  _abort();
 }
 if (!$2) {
  __ZN5Oryol3Log4WarnEPKcz(75971, sp + 8 | 0);
  STACKTOP = sp;
  return;
 }
 __ZN5Oryol6StringC2EPKc($str, $2);
 if ($replaceSpaceWithNewLine) {
  __ZN5Oryol13StringBuilderC2Ev($strBuilder);
  __ZN5Oryol13StringBuilder6AppendEPKc($strBuilder, 75961);
  __ZN5Oryol13StringBuilder6AppendERKNS_6StringE($strBuilder, $str);
  __ZN5Oryol13StringBuilder13SubstituteAllEPKcS2_($strBuilder, 75961, 125213) | 0;
  __ZNK5Oryol13StringBuilder9GetStringEv($0, $strBuilder);
  __ZN5Oryol6StringaSEOS0_($str, $0);
  __ZN5Oryol6StringD2Ev($0);
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
 }
 $6 = __ZNK5Oryol6String6AsCStrEv($str) | 0;
 HEAP32[$vararg_buffer >> 2] = $name;
 HEAP32[$vararg_buffer + 4 >> 2] = $6;
 __ZN5Oryol3Log4InfoEPKcz(75963, $vararg_buffer);
 __ZN5Oryol6StringD2Ev($str);
 STACKTOP = sp;
 return;
}

function __ZN6SoLoud5Fader3getEd($this, $aCurrentTime) {
 $this = $this | 0;
 $aCurrentTime = +$aCurrentTime;
 var $$0 = 0.0, $0 = 0, $11 = 0.0, $13 = 0.0, $22 = 0.0, $25 = 0, $27 = 0.0, $28 = 0, $3 = 0, $32 = 0.0, $36 = 0.0, $39 = 0.0, $4 = 0.0, $48 = 0.0, $5 = 0, $54 = 0.0, $7 = 0.0;
 $0 = $this + 44 | 0;
 $3 = $this + 24 | 0;
 $4 = +HEAPF64[$3 >> 3];
 $5 = $4 > $aCurrentTime;
 if ((HEAP32[$0 >> 2] | 0) == 2) {
  if ($5) {
   HEAPF64[$3 >> 3] = $aCurrentTime;
   $7 = $aCurrentTime;
  } else $7 = $4;
  $11 = +Math_sin(+(($aCurrentTime - $7) * +HEAPF64[$this + 32 >> 3]));
  $13 = +HEAPF32[$this + 8 >> 2];
  $$0 = $11 * $13 + ($13 + +HEAPF32[$this >> 2]);
  return +$$0;
 }
 if ($5) {
  $22 = +HEAPF32[$this + 40 >> 2];
  $25 = $this + 8 | 0;
  $27 = ($22 - +HEAPF32[$this >> 2]) / +HEAPF32[$25 >> 2];
  HEAPF32[$this >> 2] = $22;
  HEAPF64[$3 >> 3] = $aCurrentTime;
  $28 = $this + 16 | 0;
  $32 = +HEAPF64[$28 >> 3] * (1.0 - $27);
  HEAPF64[$28 >> 3] = $32;
  HEAPF32[$25 >> 2] = +HEAPF32[$this + 4 >> 2] - $22;
  $36 = $32 + $aCurrentTime;
  HEAPF64[$this + 32 >> 3] = $36;
  $39 = $36;
  $48 = $aCurrentTime;
 } else {
  $39 = +HEAPF64[$this + 32 >> 3];
  $48 = $4;
 }
 if ($39 < $aCurrentTime) {
  HEAP32[$0 >> 2] = -1;
  $$0 = +HEAPF32[$this + 4 >> 2];
  return +$$0;
 } else {
  $54 = +HEAPF32[$this >> 2] + +HEAPF32[$this + 8 >> 2] * (($aCurrentTime - $48) / +HEAPF64[$this + 16 >> 3]);
  HEAPF32[$this + 40 >> 2] = $54;
  $$0 = $54;
  return +$$0;
 }
 return +(0.0);
}

function __ZN5Oryol5_priv13elementBufferINS_3PtrINS0_5ioMsgEEEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 106265);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 106265);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 2) | 0;
 $13 = $12 + ($newStart << 2) | 0;
 $15 = HEAP32[$this >> 2] | 0;
 if (($8 | 0) > 0) {
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 106265);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 2) | 0;
  while (1) {
   HEAP32[$dst$02 >> 2] = HEAP32[$src$01 >> 2];
   HEAP32[$src$01 >> 2] = 0;
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 4 | 0;
    $src$01 = $src$01 + 4 | 0;
   }
  }
 }
 if ($15 | 0) __ZN5Oryol6Memory4FreeEPv($15);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_3PtrI10WindowBaseEEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 33682);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 33682);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 2) | 0;
 $13 = $12 + ($newStart << 2) | 0;
 $15 = HEAP32[$this >> 2] | 0;
 if (($8 | 0) > 0) {
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 33682);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 2) | 0;
  while (1) {
   HEAP32[$dst$02 >> 2] = HEAP32[$src$01 >> 2];
   HEAP32[$src$01 >> 2] = 0;
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 4 | 0;
    $src$01 = $src$01 + 4 | 0;
   }
  }
 }
 if ($15 | 0) __ZN5Oryol6Memory4FreeEPv($15);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5ImGui21FocusableItemRegisterEP11ImGuiWindowbb($window, $is_active, $tab_stop) {
 $window = $window | 0;
 $is_active = $is_active | 0;
 $tab_stop = $tab_stop | 0;
 var $$0 = 0, $12 = 0, $15 = 0, $19 = 0.0, $2 = 0, $22 = 0.0, $25 = 0.0, $26 = 0.0, $28 = 0.0, $29 = 0, $3 = 0, $5 = 0, $6 = 0;
 $2 = (HEAP8[$window + 276 >> 0] | 0) != 0;
 $3 = $window + 584 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) + 1 | 0;
 HEAP32[$3 >> 2] = $5;
 if ($2) {
  $6 = $window + 588 | 0;
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
 }
 do if ($tab_stop) if ((HEAP32[$window + 600 >> 2] | 0) == 2147483647) {
  $12 = $window + 604 | 0;
  if (!((HEAP32[$12 >> 2] | 0) != 2147483647 | $is_active ^ 1)) {
   $15 = HEAP32[36733] | 0;
   if (($15 | 0) >= 0) {
    if ($15 >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
    $19 = +HEAPF32[147840 + ($15 << 2) >> 2];
    if (!($19 == 0.0)) {
     $22 = +HEAPF32[36752];
     if (!($19 > $22)) break;
     $25 = +HEAPF32[36753];
     $26 = $19 - $22;
     $28 = $25 * .5;
     $29 = +_fmodf($26, $25) > $28;
     if (!($29 ^ +_fmodf($26 - +HEAPF32[36726], $25) > $28)) break;
    }
    HEAP32[$12 >> 2] = ((HEAP8[147106] | 0) == 0 ? 1 : $2 << 31 >> 31) + (HEAP32[$window + 588 >> 2] | 0);
   }
  }
 } while (0);
 if (($5 | 0) == (HEAP32[$window + 592 >> 2] | 0)) {
  $$0 = 1;
  return $$0 | 0;
 }
 if ($2) if ((HEAP32[$window + 588 >> 2] | 0) == (HEAP32[$window + 596 >> 2] | 0)) {
  $$0 = 1;
  return $$0 | 0;
 }
 $$0 = 0;
 return $$0 | 0;
}

function __ZN5Oryol5_priv13elementBufferIPaE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $23 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 123463);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 123463);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 2) | 0;
 $13 = $12 + ($newStart << 2) | 0;
 if (($8 | 0) > 0) {
  $15 = HEAP32[$this >> 2] | 0;
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 123463);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 2) | 0;
  while (1) {
   HEAP32[$dst$02 >> 2] = HEAP32[$src$01 >> 2];
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 4 | 0;
    $src$01 = $src$01 + 4 | 0;
   }
  }
 }
 $23 = HEAP32[$this >> 2] | 0;
 if ($23 | 0) __ZN5Oryol6Memory4FreeEPv($23);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol5_priv16resourceRegistry5SetupEi($this, $reserveSize) {
 $this = $this | 0;
 $reserveSize = $reserveSize | 0;
 var $12 = 0, $14 = 0, $16 = 0, $18 = 0, $24 = 0, $28 = 0, $30 = 0, $32 = 0, $38 = 0, $7 = 0;
 if (HEAP8[$this >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 111306, 25, 111454);
  _abort();
 }
 HEAP8[$this >> 0] = 1;
 $7 = (HEAP32[$this + 16 >> 2] | 0) - (HEAP32[$this + 12 >> 2] | 0) + $reserveSize | 0;
 if (($7 | 0) > (HEAP32[$this + 8 >> 2] | 0)) __ZN5Oryol5_priv13elementBufferINS0_16resourceRegistry5EntryEE5allocEii($this + 4 | 0, $7, 0);
 $12 = $this + 28 | 0;
 $14 = HEAP32[$this + 40 >> 2] | 0;
 $16 = HEAP32[$this + 36 >> 2] | 0;
 $18 = $14 - $16 + $reserveSize | 0;
 do if (($18 | 0) > (HEAP32[$this + 32 >> 2] | 0)) {
  $24 = $16 - $14 + $18 >> 1;
  if (($24 | 0) > -1) {
   __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE5allocEii($12, $18, $24);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(119209, 0, 118102, 535, 111638);
   _abort();
  }
 } while (0);
 $28 = HEAP32[$this + 68 >> 2] | 0;
 $30 = HEAP32[$this + 64 >> 2] | 0;
 $32 = $28 - $30 + $reserveSize | 0;
 if (($32 | 0) <= (HEAP32[$this + 60 >> 2] | 0)) return;
 $38 = $30 - $28 + $32 >> 1;
 if (($38 | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(119209, 0, 118102, 535, 111875);
  _abort();
 }
 __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE5allocEii($this + 56 | 0, $32, $38);
 return;
}

function __ZN5ImGui19GetContentRegionMaxEv($agg$result) {
 $agg$result = $agg$result | 0;
 var $$ = 0, $$1$i = 0.0, $$idx2 = 0, $$idx2$val = 0.0, $1 = 0, $11 = 0.0, $19 = 0.0, $21 = 0.0, $23 = 0.0, $29 = 0, $3 = 0.0, $32 = 0, $38 = 0.0, $47 = 0.0, $56 = 0.0, label = 0;
 $1 = HEAP32[38201] | 0;
 $3 = +HEAPF32[$1 + 52 >> 2];
 if ($3 != 0.0) $19 = $3; else $19 = +HEAPF32[$1 + 28 >> 2] - +HEAPF32[$1 + 100 >> 2];
 $11 = +HEAPF32[$1 + 56 >> 2];
 if ($11 != 0.0) $21 = $11; else $21 = +HEAPF32[$1 + 32 >> 2] - +HEAPF32[$1 + 104 >> 2];
 $$idx2 = $1 + 60 | 0;
 $$idx2$val = +HEAPF32[$$idx2 >> 2];
 $23 = $21 - +HEAPF32[$1 + 76 >> 2] - +HEAPF32[$1 + 64 >> 2];
 HEAPF32[$agg$result >> 2] = $19 - +HEAPF32[$1 + 72 >> 2] - $$idx2$val;
 HEAPF32[$agg$result + 4 >> 2] = $23;
 if ((HEAP32[$1 + 380 >> 2] | 0) == 1) return;
 $29 = HEAP32[$1 + 376 >> 2] | 0;
 $$ = $29 + (($29 | 0) > -2 & 1) | 0;
 $32 = HEAP32[38211] | 0;
 if (!$32) label = 9; else if (($32 | 0) == ((HEAP32[$1 + 408 >> 2] | 0) + $$ | 0)) {
  $38 = +__ZL22GetDraggedColumnOffseti($$);
  $$1$i = $38;
  $56 = +HEAPF32[$$idx2 >> 2];
 } else label = 9;
 do if ((label | 0) == 9) if (($$ | 0) < (HEAP32[$1 + 412 >> 2] | 0)) {
  $47 = +HEAPF32[$1 + 384 >> 2];
  $$1$i = +(~~($47 + +HEAPF32[(HEAP32[$1 + 420 >> 2] | 0) + ($$ << 2) >> 2] * (+HEAPF32[$1 + 388 >> 2] - $47)) | 0);
  $56 = $$idx2$val;
  break;
 } else ___assert_fail(124599, 124187, 8883, 124642); while (0);
 HEAPF32[$agg$result >> 2] = $$1$i - $56;
 return;
}

function ___strchrnul($s, $c) {
 $s = $s | 0;
 $c = $c | 0;
 var $$0 = 0, $$02$lcssa = 0, $$0211 = 0, $$1 = 0, $0 = 0, $11 = 0, $15 = 0, $16 = 0, $22 = 0, $23 = 0, $29 = 0, $36 = 0, $37 = 0, $5 = 0, $8 = 0, $w$0$lcssa = 0, $w$08 = 0;
 $0 = $c & 255;
 L1 : do if (!$0) $$0 = $s + (_strlen($s) | 0) | 0; else {
  if (!($s & 3)) $$02$lcssa = $s; else {
   $5 = $c & 255;
   $$0211 = $s;
   while (1) {
    $8 = HEAP8[$$0211 >> 0] | 0;
    if ($8 << 24 >> 24 == 0 ? 1 : $8 << 24 >> 24 == $5 << 24 >> 24) {
     $$0 = $$0211;
     break L1;
    }
    $11 = $$0211 + 1 | 0;
    if (!($11 & 3)) {
     $$02$lcssa = $11;
     break;
    } else $$0211 = $11;
   }
  }
  $15 = Math_imul($0, 16843009) | 0;
  $16 = HEAP32[$$02$lcssa >> 2] | 0;
  L10 : do if (!(($16 & -2139062144 ^ -2139062144) & $16 + -16843009)) {
   $23 = $16;
   $w$08 = $$02$lcssa;
   while (1) {
    $22 = $23 ^ $15;
    if (($22 & -2139062144 ^ -2139062144) & $22 + -16843009 | 0) {
     $w$0$lcssa = $w$08;
     break L10;
    }
    $29 = $w$08 + 4 | 0;
    $23 = HEAP32[$29 >> 2] | 0;
    if (($23 & -2139062144 ^ -2139062144) & $23 + -16843009 | 0) {
     $w$0$lcssa = $29;
     break;
    } else $w$08 = $29;
   }
  } else $w$0$lcssa = $$02$lcssa; while (0);
  $36 = $c & 255;
  $$1 = $w$0$lcssa;
  while (1) {
   $37 = HEAP8[$$1 >> 0] | 0;
   if ($37 << 24 >> 24 == 0 ? 1 : $37 << 24 >> 24 == $36 << 24 >> 24) {
    $$0 = $$1;
    break;
   } else $$1 = $$1 + 1 | 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZN6SoLoud28BiquadResonantFilterInstance13calcBQRParamsEv($this) {
 $this = $this | 0;
 var $12 = 0.0, $14 = 0.0, $16 = 0.0, $2 = 0, $20 = 0.0, $22 = 0.0, $23 = 0, $26 = 0.0, $28 = 0.0, $39 = 0.0, $41 = 0.0, $53 = 0.0;
 HEAP32[$this + 76 >> 2] = 0;
 $2 = HEAP32[$this + 12 >> 2] | 0;
 $12 = +HEAPF32[$2 + 8 >> 2] * 6.283185307179586 / +HEAPF32[$2 + 4 >> 2];
 $14 = +Math_sin(+$12);
 $16 = +Math_cos(+$12);
 $20 = $14 / (+HEAPF32[$2 + 12 >> 2] * 2.0);
 $22 = 1.0 / ($20 + 1.0);
 $23 = $this + 20 | 0;
 HEAP32[$23 >> 2] = 1;
 switch (HEAP32[$this + 80 >> 2] | 0) {
 case 0:
  {
   HEAP32[$23 >> 2] = 0;
   return;
  }
 case 1:
  {
   $26 = 1.0 - $16;
   $28 = $26 * .5 * $22;
   HEAPF32[$this + 56 >> 2] = $28;
   HEAPF32[$this + 60 >> 2] = $26 * $22;
   HEAPF32[$this + 64 >> 2] = $28;
   HEAPF32[$this + 68 >> 2] = $16 * -2.0 * $22;
   HEAPF32[$this + 72 >> 2] = (1.0 - $20) * $22;
   return;
  }
 case 2:
  {
   $39 = $16 + 1.0;
   $41 = $39 * .5 * $22;
   HEAPF32[$this + 56 >> 2] = $41;
   HEAPF32[$this + 60 >> 2] = -($39 * $22);
   HEAPF32[$this + 64 >> 2] = $41;
   HEAPF32[$this + 68 >> 2] = $16 * -2.0 * $22;
   HEAPF32[$this + 72 >> 2] = (1.0 - $20) * $22;
   return;
  }
 case 3:
  {
   $53 = $20 * $22;
   HEAPF32[$this + 56 >> 2] = $53;
   HEAPF32[$this + 60 >> 2] = 0.0;
   HEAPF32[$this + 64 >> 2] = -$53;
   HEAPF32[$this + 68 >> 2] = $16 * -2.0 * $22;
   HEAPF32[$this + 72 >> 2] = (1.0 - $20) * $22;
   return;
  }
 default:
  return;
 }
}

function __ZN5Oryol5_priv14schemeRegistryD2Ev($this) {
 $this = $this | 0;
 var $$pre4$i$i$i = 0, $$pre5$i$i2$pre$phi$iZZZZ2D = 0, $0 = 0, $11 = 0, $13 = 0, $23 = 0, $26 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0, $i$01$i$i$i = 0;
 $0 = $this + 8 | 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP32[$this + 28 >> 2] = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $$pre4$i$i$i = $this + 16 | 0;
 if (!$3) {
  $$pre5$i$i2$pre$phi$iZZZZ2D = $this + 20 | 0;
  $26 = $this + 12 | 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$26 >> 2] = 0;
  HEAP32[$$pre4$i$i$i >> 2] = 0;
  HEAP32[$$pre5$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
  return;
 }
 $5 = HEAP32[$$pre4$i$i$i >> 2] | 0;
 $6 = $this + 20 | 0;
 if (($5 | 0) < (HEAP32[$6 >> 2] | 0)) {
  $11 = $3;
  $i$01$i$i$i = $5;
  while (1) {
   $13 = HEAP32[$11 + ($i$01$i$i$i << 5) + 24 >> 2] | 0;
   if (($13 | 0) == ($11 + ($i$01$i$i$i << 5) + 8 | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 16 >> 2] & 255]($13); else if ($13 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13 >> 2] | 0) + 20 >> 2] & 255]($13);
   HEAP32[$11 + ($i$01$i$i$i << 5) >> 2] = 0;
   $23 = $i$01$i$i$i + 1 | 0;
   if (($23 | 0) >= (HEAP32[$6 >> 2] | 0)) break;
   $11 = HEAP32[$0 >> 2] | 0;
   $i$01$i$i$i = $23;
  }
  $9 = HEAP32[$0 >> 2] | 0;
 } else $9 = $3;
 __ZN5Oryol6Memory4FreeEPv($9);
 $$pre5$i$i2$pre$phi$iZZZZ2D = $6;
 $26 = $this + 12 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$26 >> 2] = 0;
 HEAP32[$$pre4$i$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
 return;
}

function __ZN5Oryol12VertexLayoutC2Ev($this) {
 $this = $this | 0;
 var $36 = 0, dest = 0, stop = 0;
 HEAP8[$this + 2 >> 0] = 17;
 HEAP8[$this + 3 >> 0] = 13;
 HEAP8[$this + 4 >> 0] = 17;
 HEAP8[$this + 5 >> 0] = 13;
 HEAP8[$this + 6 >> 0] = 17;
 HEAP8[$this + 7 >> 0] = 13;
 HEAP8[$this + 8 >> 0] = 17;
 HEAP8[$this + 9 >> 0] = 13;
 HEAP8[$this + 10 >> 0] = 17;
 HEAP8[$this + 11 >> 0] = 13;
 HEAP8[$this + 12 >> 0] = 17;
 HEAP8[$this + 13 >> 0] = 13;
 HEAP8[$this + 14 >> 0] = 17;
 HEAP8[$this + 15 >> 0] = 13;
 HEAP8[$this + 16 >> 0] = 17;
 HEAP8[$this + 17 >> 0] = 13;
 HEAP8[$this + 18 >> 0] = 17;
 HEAP8[$this + 19 >> 0] = 13;
 HEAP8[$this + 20 >> 0] = 17;
 HEAP8[$this + 21 >> 0] = 13;
 HEAP8[$this + 22 >> 0] = 17;
 HEAP8[$this + 23 >> 0] = 13;
 HEAP8[$this + 24 >> 0] = 17;
 HEAP8[$this + 25 >> 0] = 13;
 HEAP8[$this + 26 >> 0] = 17;
 HEAP8[$this + 27 >> 0] = 13;
 HEAP8[$this + 28 >> 0] = 17;
 HEAP8[$this + 29 >> 0] = 13;
 HEAP8[$this + 30 >> 0] = 17;
 HEAP8[$this + 31 >> 0] = 13;
 HEAP8[$this + 32 >> 0] = 17;
 HEAP8[$this + 33 >> 0] = 13;
 HEAP8[$this >> 0] = 0;
 HEAP8[$this + 1 >> 0] = 1;
 HEAP8[$this + 66 >> 0] = 0;
 HEAP8[$this + 67 >> 0] = 0;
 $36 = $this + 34 | 0;
 dest = $this + 50 | 0;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = 255;
  dest = dest + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $36;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = 0;
  dest = dest + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZN6SoLoud19AudioSourceInstanceD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $13 = 0, $15 = 0, $21 = 0, $27 = 0, $33 = 0, $39 = 0, $45 = 0, $51 = 0, $7 = 0, $9 = 0;
 HEAP32[$this >> 2] = 13376;
 $1 = HEAP32[$this + 356 >> 2] | 0;
 if ($1 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 36 >> 2] & 255]($1);
 $7 = HEAP32[$this + 360 >> 2] | 0;
 if ($7 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$7 >> 2] | 0) + 36 >> 2] & 255]($7);
 $21 = HEAP32[$this + 364 >> 2] | 0;
 if ($21 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 255]($21);
 $27 = HEAP32[$this + 368 >> 2] | 0;
 if ($27 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$27 >> 2] | 0) + 36 >> 2] & 255]($27);
 $33 = HEAP32[$this + 372 >> 2] | 0;
 if ($33 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] & 255]($33);
 $39 = HEAP32[$this + 376 >> 2] | 0;
 if ($39 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$39 >> 2] | 0) + 36 >> 2] & 255]($39);
 $45 = HEAP32[$this + 380 >> 2] | 0;
 if ($45 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 255]($45);
 $51 = HEAP32[$this + 384 >> 2] | 0;
 if ($51 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$51 >> 2] | 0) + 36 >> 2] & 255]($51);
 $10 = HEAP32[$this + 388 >> 2] | 0;
 if ($10 | 0) {
  $9 = HEAP32[$10 >> 2] | 0;
  if ($9 | 0) __ZdaPv($9);
  __ZdlPv($10);
 }
 $13 = HEAP32[$this + 392 >> 2] | 0;
 if (!$13) return;
 $15 = HEAP32[$13 >> 2] | 0;
 if ($15 | 0) __ZdaPv($15);
 __ZdlPv($13);
 return;
}

function _strcspn($s, $c) {
 $s = $s | 0;
 $c = $c | 0;
 var $$0 = 0, $$027 = 0, $$03$lcssa = 0, $$035 = 0, $0 = 0, $10 = 0, $13 = 0, $17 = 0, $23 = 0, $32 = 0, $byteset = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $byteset = sp;
 $0 = HEAP8[$c >> 0] | 0;
 if (!($0 << 24 >> 24)) label = 3; else if (!(HEAP8[$c + 1 >> 0] | 0)) label = 3; else {
  HEAP32[$byteset >> 2] = 0;
  HEAP32[$byteset + 4 >> 2] = 0;
  HEAP32[$byteset + 8 >> 2] = 0;
  HEAP32[$byteset + 12 >> 2] = 0;
  HEAP32[$byteset + 16 >> 2] = 0;
  HEAP32[$byteset + 20 >> 2] = 0;
  HEAP32[$byteset + 24 >> 2] = 0;
  HEAP32[$byteset + 28 >> 2] = 0;
  $$027 = $c;
  $13 = $0;
  do {
   $17 = $byteset + ((($13 & 255) >>> 5 & 255) << 2) | 0;
   HEAP32[$17 >> 2] = HEAP32[$17 >> 2] | 1 << ($13 & 31);
   $$027 = $$027 + 1 | 0;
   $13 = HEAP8[$$027 >> 0] | 0;
  } while ($13 << 24 >> 24 != 0);
  $10 = HEAP8[$s >> 0] | 0;
  L7 : do if (!($10 << 24 >> 24)) $$03$lcssa = $s; else {
   $$035 = $s;
   $23 = $10;
   while (1) {
    if (HEAP32[$byteset + ((($23 & 255) >>> 5 & 255) << 2) >> 2] & 1 << ($23 & 31) | 0) {
     $$03$lcssa = $$035;
     break L7;
    }
    $32 = $$035 + 1 | 0;
    $23 = HEAP8[$32 >> 0] | 0;
    if (!($23 << 24 >> 24)) {
     $$03$lcssa = $32;
     break;
    } else $$035 = $32;
   }
  } while (0);
  $$0 = $$03$lcssa - $s | 0;
 }
 if ((label | 0) == 3) $$0 = (___strchrnul($s, $0 << 24 >> 24) | 0) - $s | 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol5_priv13elementBufferINS_13ResourceLabelEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 110213);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 110213);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 2) | 0;
 $13 = $12 + ($newStart << 2) | 0;
 $15 = HEAP32[$this >> 2] | 0;
 if (($8 | 0) > 0) {
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 110213);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 2) | 0;
  while (1) {
   HEAP32[$dst$02 >> 2] = HEAP32[$src$01 >> 2];
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 4 | 0;
    $src$01 = $src$01 + 4 | 0;
   }
  }
 }
 if ($15 | 0) __ZN5Oryol6Memory4FreeEPv($15);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5ImGui13PushItemWidthEf($item_width) {
 $item_width = +$item_width;
 var $1 = 0, $10 = 0, $13 = 0, $14 = 0, $19 = 0, $20 = 0, $23 = 0, $28 = 0, $29 = 0, $33 = 0, $35 = 0, $41 = 0, $45 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 if ($item_width == 0.0) $7 = +HEAPF32[$1 + 472 >> 2]; else $7 = $item_width;
 $6 = $1 + 268 | 0;
 HEAPF32[$6 >> 2] = $7;
 $8 = $1 + 280 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 $10 = $1 + 284 | 0;
 $13 = (HEAPF32[tempDoublePtr >> 2] = $7, HEAP32[tempDoublePtr >> 2] | 0);
 if (($9 | 0) == (HEAP32[$10 >> 2] | 0)) {
  $14 = $9 + 1 | 0;
  if (!$9) $19 = 8; else $19 = (($9 | 0) / 2 | 0) + $9 | 0;
  $20 = ($19 | 0) > ($14 | 0) ? $19 : $14;
  if (($9 | 0) < ($20 | 0)) {
   $23 = 147664;
   HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 1;
   $28 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($20 << 2) | 0;
   $29 = $1 + 288 | 0;
   _memcpy($28 | 0, HEAP32[$29 >> 2] | 0, HEAP32[$8 >> 2] << 2 | 0) | 0;
   $33 = HEAP32[$29 >> 2] | 0;
   if ($33 | 0) {
    $35 = 147664;
    HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($33);
   HEAP32[$29 >> 2] = $28;
   HEAP32[$10 >> 2] = $20;
   $41 = HEAP32[$8 >> 2] | 0;
   $45 = HEAP32[$6 >> 2] | 0;
  } else {
   $41 = $9;
   $45 = $13;
  }
 } else {
  $41 = $9;
  $45 = $13;
 }
 HEAP32[$8 >> 2] = $41 + 1;
 HEAP32[(HEAP32[$1 + 288 >> 2] | 0) + ($41 << 2) >> 2] = $45;
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_8AppState4CodeEE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 116384);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 116384);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 2) | 0;
 $13 = $12 + ($newStart << 2) | 0;
 $15 = HEAP32[$this >> 2] | 0;
 if (($8 | 0) > 0) {
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 116384);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 2) | 0;
  while (1) {
   HEAP32[$dst$02 >> 2] = HEAP32[$src$01 >> 2];
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 4 | 0;
    $src$01 = $src$01 + 4 | 0;
   }
  }
 }
 if ($15 | 0) __ZN5Oryol6Memory4FreeEPv($15);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZL31stbtt_GetGlyphBitmapBoxSubpixelPK14stbtt_fontinfoiffffPiS2_S2_S2_($font, $glyph, $scale_x, $scale_y, $ix0, $iy0, $ix1, $iy1) {
 $font = $font | 0;
 $glyph = $glyph | 0;
 $scale_x = +$scale_x;
 $scale_y = +$scale_y;
 $ix0 = $ix0 | 0;
 $iy0 = $iy0 | 0;
 $ix1 = $ix1 | 0;
 $iy1 = $iy1 | 0;
 var $0 = 0, $10 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $27 = 0, $8 = 0, $9 = 0;
 $0 = __ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi($font, $glyph) | 0;
 if (($0 | 0) < 0) {
  if ($ix0 | 0) HEAP32[$ix0 >> 2] = 0;
  if ($iy0 | 0) HEAP32[$iy0 >> 2] = 0;
  if ($ix1 | 0) HEAP32[$ix1 >> 2] = 0;
  if (!$iy1) return;
  HEAP32[$iy1 >> 2] = 0;
  return;
 } else {
  $8 = (HEAP32[$font + 4 >> 2] | 0) + $0 | 0;
  $9 = $8 + 2 | 0;
  $10 = $8 + 4 | 0;
  $15 = ((HEAPU8[$10 >> 0] | 0) << 8 | (HEAPU8[$10 + 1 >> 0] | 0)) << 16 >> 16;
  $16 = $8 + 6 | 0;
  $21 = ((HEAPU8[$16 >> 0] | 0) << 8 | (HEAPU8[$16 + 1 >> 0] | 0)) << 16 >> 16;
  $22 = $8 + 8 | 0;
  $27 = ((HEAPU8[$22 >> 0] | 0) << 8 | (HEAPU8[$22 + 1 >> 0] | 0)) << 16 >> 16;
  if ($ix0 | 0) HEAP32[$ix0 >> 2] = ~~+Math_floor(+(+(((HEAPU8[$9 >> 0] | 0) << 8 | (HEAPU8[$9 + 1 >> 0] | 0)) << 16 >> 16 | 0) * $scale_x + 0.0));
  if ($iy0 | 0) HEAP32[$iy0 >> 2] = ~~+Math_floor(+(+(0 - $27 | 0) * $scale_y + 0.0));
  if ($ix1 | 0) HEAP32[$ix1 >> 2] = ~~+Math_ceil(+(+($21 | 0) * $scale_x + 0.0));
  if (!$iy1) return;
  HEAP32[$iy1 >> 2] = ~~+Math_ceil(+(+(0 - $15 | 0) * $scale_y + 0.0));
  return;
 }
}

function __ZN5Oryol5_priv13elementBufferINS0_16resourceRegistry5EntryEE13eraseSwapBackEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $$sink = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $21 = 0, $23 = 0, $28 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = HEAP32[$this + 8 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 666, 115198);
  _abort();
 }
 if (($4 + -1 | 0) == ($index | 0)) {
  $11 = $1 + -1 | 0;
  HEAP32[$0 >> 2] = $11;
  HEAP32[$5 + ($11 * 24 | 0) >> 2] = 0;
  return;
 }
 $13 = $3 + $index | 0;
 $14 = $5 + ($13 * 24 | 0) | 0;
 $15 = $1 + -1 | 0;
 HEAP32[$0 >> 2] = $15;
 if (($15 | 0) == ($13 | 0)) $$sink = HEAP32[$5 + ($15 * 24 | 0) + 4 >> 2] | 0; else {
  HEAP32[$14 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($14, $5 + ($15 * 24 | 0) | 0);
  $21 = HEAP32[$5 + ($15 * 24 | 0) + 4 >> 2] | 0;
  $23 = $5 + ($15 * 24 | 0) + 8 | 0;
  $28 = HEAP32[$23 + 4 >> 2] | 0;
  $30 = $5 + ($13 * 24 | 0) + 8 | 0;
  HEAP32[$30 >> 2] = HEAP32[$23 >> 2];
  HEAP32[$30 + 4 >> 2] = $28;
  $$sink = $21;
 }
 HEAP32[$5 + ($13 * 24 | 0) + 4 >> 2] = $$sink;
 HEAP32[$5 + ($13 * 24 | 0) + 16 >> 2] = HEAP32[$5 + ($15 * 24 | 0) + 16 >> 2];
 HEAP32[(HEAP32[$this >> 2] | 0) + ((HEAP32[$0 >> 2] | 0) * 24 | 0) >> 2] = 0;
 return;
}

function __ZN10ImDrawListD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $17 = 0, $19 = 0, $25 = 0, $27 = 0, $3 = 0, $33 = 0, $35 = 0, $41 = 0, $43 = 0, $49 = 0, $51 = 0, $9 = 0;
 __ZN10ImDrawList15ClearFreeMemoryEv($this);
 $1 = HEAP32[$this + 104 >> 2] | 0;
 if ($1 | 0) {
  $3 = 147664;
  HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($1);
 }
 $9 = HEAP32[$this + 84 >> 2] | 0;
 if ($9 | 0) {
  $11 = 147664;
  HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($9);
 }
 $17 = HEAP32[$this + 72 >> 2] | 0;
 if ($17 | 0) {
  $19 = 147664;
  HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($17);
 }
 $25 = HEAP32[$this + 60 >> 2] | 0;
 if ($25 | 0) {
  $27 = 147664;
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($25);
 }
 $33 = HEAP32[$this + 32 >> 2] | 0;
 if ($33 | 0) {
  $35 = 147664;
  HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($33);
 }
 $41 = HEAP32[$this + 20 >> 2] | 0;
 if ($41 | 0) {
  $43 = 147664;
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($41);
 }
 $49 = HEAP32[$this + 8 >> 2] | 0;
 if (!$49) return;
 $51 = 147664;
 HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + -1;
 FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($49);
 return;
}

function ___fwritex($s, $l, $f) {
 $s = $s | 0;
 $l = $l | 0;
 $f = $f | 0;
 var $$0 = 0, $$01 = 0, $$02 = 0, $0 = 0, $1 = 0, $11 = 0, $19 = 0, $29 = 0, $6 = 0, $7 = 0, $9 = 0, $i$0 = 0, $i$0$lcssa12 = 0, $i$1 = 0, label = 0;
 $0 = $f + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) if (!(___towrite($f) | 0)) {
  $9 = HEAP32[$0 >> 2] | 0;
  label = 5;
 } else $$0 = 0; else {
  $9 = $1;
  label = 5;
 }
 L5 : do if ((label | 0) == 5) {
  $6 = $f + 20 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $11 = $7;
  if (($9 - $7 | 0) >>> 0 < $l >>> 0) {
   $$0 = FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, $s, $l) | 0;
   break;
  }
  L10 : do if ((HEAP8[$f + 75 >> 0] | 0) > -1) {
   $i$0 = $l;
   while (1) {
    if (!$i$0) {
     $$01 = $l;
     $$02 = $s;
     $29 = $11;
     $i$1 = 0;
     break L10;
    }
    $19 = $i$0 + -1 | 0;
    if ((HEAP8[$s + $19 >> 0] | 0) == 10) {
     $i$0$lcssa12 = $i$0;
     break;
    } else $i$0 = $19;
   }
   if ((FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, $s, $i$0$lcssa12) | 0) >>> 0 < $i$0$lcssa12 >>> 0) {
    $$0 = $i$0$lcssa12;
    break L5;
   }
   $$01 = $l - $i$0$lcssa12 | 0;
   $$02 = $s + $i$0$lcssa12 | 0;
   $29 = HEAP32[$6 >> 2] | 0;
   $i$1 = $i$0$lcssa12;
  } else {
   $$01 = $l;
   $$02 = $s;
   $29 = $11;
   $i$1 = 0;
  } while (0);
  _memcpy($29 | 0, $$02 | 0, $$01 | 0) | 0;
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + $$01;
  $$0 = $i$1 + $$01 | 0;
 } while (0);
 return $$0 | 0;
}

function __ZN10FileLoader11parseHeaderERKN5Oryol6BufferE($agg$result, $data) {
 $agg$result = $agg$result | 0;
 $data = $data | 0;
 var $0 = 0, $1 = 0, $16 = 0, $25 = 0, $3 = 0, $7 = 0, $ptr$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZN5Oryol6StringC2Ev($agg$result);
 $1 = $agg$result + 8 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 $3 = HEAP32[$data + 8 >> 2] | 0;
 if (!$3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 202, 40264);
  _abort();
 }
 $7 = $agg$result + 16 | 0;
 if (!(_memcmp($3, 40307, 16) | 0)) {
  HEAP32[$7 >> 2] = 2;
  $ptr$0 = $3 + 17 | 0;
 } else {
  HEAP32[$7 >> 2] = 1;
  $ptr$0 = $3;
 }
 __ZN5Oryol6StringC2EPKcii($0, $ptr$0, 0, 16);
 __ZN5Oryol6StringaSEOS0_($agg$result, $0);
 __ZN5Oryol6StringD2Ev($0);
 $16 = (HEAPU8[$ptr$0 + 18 >> 0] | 0) << 8 | (HEAPU8[$ptr$0 + 17 >> 0] | 0);
 HEAP16[$1 >> 1] = $16;
 $25 = (HEAPU8[$ptr$0 + 20 >> 0] | 0) << 8 | (HEAPU8[$ptr$0 + 19 >> 0] | 0);
 HEAP16[$agg$result + 10 >> 1] = $25;
 HEAP16[$agg$result + 12 >> 1] = (HEAPU8[$ptr$0 + 22 >> 0] | 0) << 8 | (HEAPU8[$ptr$0 + 21 >> 0] | 0);
 HEAP8[$agg$result + 14 >> 0] = (HEAPU8[$ptr$0 + 16 >> 0] | 0) > 2 & 1;
 HEAP32[$agg$result + 20 >> 2] = $ptr$0 + 128 - $3;
 if (($25 - $16 | 0) <= ((HEAP32[$data >> 2] | 0) + -128 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP8[$agg$result + 15 >> 0] = 1;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferItE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 49268);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 49268);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 1) | 0;
 $13 = $12 + ($newStart << 1) | 0;
 $15 = HEAP32[$this >> 2] | 0;
 if (($8 | 0) > 0) {
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 49268);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 1) | 0;
  while (1) {
   HEAP16[$dst$02 >> 1] = HEAP16[$src$01 >> 1] | 0;
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 2 | 0;
    $src$01 = $src$01 + 2 | 0;
   }
  }
 }
 if ($15 | 0) __ZN5Oryol6Memory4FreeEPv($15);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol5_priv13elementBufferIiE5allocEii($this, $newCapacity, $newStart) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 $newStart = $newStart | 0;
 var $1 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $dst$02 = 0, $i$03 = 0, $src$01 = 0;
 if (($newCapacity | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123375, 0, 123391, 300, 120192);
  _abort();
 }
 $1 = $this + 4 | 0;
 if ((HEAP32[$1 >> 2] | 0) == ($newCapacity | 0)) return;
 $4 = $this + 12 | 0;
 $6 = $this + 8 | 0;
 $8 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) | 0;
 $9 = $8 + $newStart | 0;
 if (($9 | 0) > ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123551, 0, 123391, 305, 120192);
  _abort();
 }
 $12 = __ZN5Oryol6Memory5AllocEi($newCapacity << 2) | 0;
 $13 = $12 + ($newStart << 2) | 0;
 $15 = HEAP32[$this >> 2] | 0;
 if (($8 | 0) > 0) {
  if (!$15) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 315, 120192);
   _abort();
  }
  $dst$02 = $13;
  $i$03 = 0;
  $src$01 = $15 + (HEAP32[$6 >> 2] << 2) | 0;
  while (1) {
   HEAP32[$dst$02 >> 2] = HEAP32[$src$01 >> 2];
   $i$03 = $i$03 + 1 | 0;
   if (($i$03 | 0) == ($8 | 0)) break; else {
    $dst$02 = $dst$02 + 4 | 0;
    $src$01 = $src$01 + 4 | 0;
   }
  }
 }
 if ($15 | 0) __ZN5Oryol6Memory4FreeEPv($15);
 HEAP32[$this >> 2] = $12;
 HEAP32[$1 >> 2] = $newCapacity;
 HEAP32[$6 >> 2] = $newStart;
 HEAP32[$4 >> 2] = $9;
 return;
}

function __ZN5Oryol5_priv12imguiWrapper16setupFontTextureEv($this) {
 $this = $this | 0;
 var $0 = 0, $13 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $height = 0, $pixels = 0, $tex = 0, $texSetup = 0, $width = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1408 | 0;
 $pixels = sp + 1392 | 0;
 $width = sp + 1388 | 0;
 $height = sp + 1384 | 0;
 $texSetup = sp + 696 | 0;
 $0 = sp;
 $tex = sp + 688 | 0;
 $2 = (__ZN5ImGui5GetIOEv() | 0) + 124 | 0;
 __ZN11ImFontAtlas18GetTexDataAsAlpha8EPPhPiS2_S2_(HEAP32[$2 >> 2] | 0, $pixels, $width, $height, 0);
 $4 = HEAP32[$width >> 2] | 0;
 $5 = HEAP32[$height >> 2] | 0;
 $6 = Math_imul($5, $4) | 0;
 __ZN5Oryol12TextureSetupC2Ev($0);
 __ZN5Oryol12TextureSetup13FromPixelDataEiiiNS_11TextureType4CodeENS_11PixelFormat4CodeERKS0_($texSetup, $4, $5, 1, 0, 7, $0);
 HEAP32[$0 + 76 >> 2] = 0;
 $8 = $texSetup + 48 | 0;
 HEAP16[$8 >> 1] = HEAP16[$8 >> 1] & -4048;
 HEAP32[$texSetup + 392 >> 2] = $6;
 __ZN5Oryol3Gfx14CreateResourceINS_12TextureSetupEEENS_2IdERKT_PKvi($tex, $texSetup, HEAP32[$pixels >> 2] | 0, $6);
 $13 = $this + 80 | 0;
 if (($13 | 0) == ($tex | 0)) {
  $25 = HEAP32[$2 >> 2] | 0;
  HEAP32[$25 >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $15 = $tex;
 $20 = HEAP32[$15 + 4 >> 2] | 0;
 $21 = $13;
 HEAP32[$21 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$21 + 4 >> 2] = $20;
 $25 = HEAP32[$2 >> 2] | 0;
 HEAP32[$25 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __Z18ImLoadFileToMemoryPKcS0_Pii($filename, $file_open_mode, $out_file_size, $padding_bytes) {
 $filename = $filename | 0;
 $file_open_mode = $file_open_mode | 0;
 $out_file_size = $out_file_size | 0;
 $padding_bytes = $padding_bytes | 0;
 var $$2 = 0, $12 = 0, $17 = 0, $2 = 0, $21 = 0, $3 = 0, $7 = 0;
 if (!(($filename | 0) != 0 & ($file_open_mode | 0) != 0)) ___assert_fail(124160, 124187, 1183, 124235);
 $2 = ($out_file_size | 0) != 0;
 if ($2) HEAP32[$out_file_size >> 2] = 0;
 $3 = _fopen($filename, $file_open_mode) | 0;
 if (!$3) {
  $$2 = 0;
  return $$2 | 0;
 }
 if (!(_fseek($3, 0, 2) | 0)) {
  $7 = _ftell($3) | 0;
  if (($7 | 0) != -1) if (!(_fseek($3, 0, 0) | 0)) {
   $12 = 147664;
   HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 1;
   $17 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($7 + $padding_bytes | 0) | 0;
   if (!$17) {
    _fclose($3) | 0;
    $$2 = 0;
    return $$2 | 0;
   }
   if ((_fread($17, 1, $7, $3) | 0) != ($7 | 0)) {
    _fclose($3) | 0;
    $21 = 147664;
    HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + -1;
    FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($17);
    $$2 = 0;
    return $$2 | 0;
   }
   if (($padding_bytes | 0) > 0) _memset($17 + $7 | 0, 0, $padding_bytes | 0) | 0;
   _fclose($3) | 0;
   if (!$2) {
    $$2 = $17;
    return $$2 | 0;
   }
   HEAP32[$out_file_size >> 2] = $7;
   $$2 = $17;
   return $$2 | 0;
  }
 }
 _fclose($3) | 0;
 $$2 = 0;
 return $$2 | 0;
}

function __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE7DiscardEv($this) {
 $this = $this | 0;
 var $10 = 0, $13 = 0, $14 = 0, $18 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 123, 52475);
  _abort();
 }
 $2 = $this + 52 | 0;
 $4 = $this + 48 | 0;
 $7 = $this + 28 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $this + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (((HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) != ($8 - $10 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(52623, 0, 48917, 125, 52475);
  _abort();
 }
 HEAP8[$this >> 0] = 0;
 $13 = $this + 16 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (!(($14 | 0) != 0 & ($8 | 0) > ($10 | 0))) {
  $26 = HEAP32[$9 >> 2] | 0;
  HEAP32[$7 >> 2] = $26;
  $27 = HEAP32[$4 >> 2] | 0;
  HEAP32[$2 >> 2] = $27;
  return;
 }
 __ZN5Oryol5_priv12pipelineBaseD2Ev($14 + ($10 * 608 | 0) | 0);
 $18 = $10 + 1 | 0;
 if (($18 | 0) < (HEAP32[$7 >> 2] | 0)) $22 = $18; else {
  $26 = HEAP32[$9 >> 2] | 0;
  HEAP32[$7 >> 2] = $26;
  $27 = HEAP32[$4 >> 2] | 0;
  HEAP32[$2 >> 2] = $27;
  return;
 }
 do {
  __ZN5Oryol5_priv12pipelineBaseD2Ev((HEAP32[$13 >> 2] | 0) + ($22 * 608 | 0) | 0);
  $22 = $22 + 1 | 0;
 } while (($22 | 0) < (HEAP32[$7 >> 2] | 0));
 $26 = HEAP32[$9 >> 2] | 0;
 HEAP32[$7 >> 2] = $26;
 $27 = HEAP32[$4 >> 2] | 0;
 HEAP32[$2 >> 2] = $27;
 return;
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA12_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 39559);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 39559);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA11_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 40002);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 40002);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA10_KcRA14_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38571);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38571);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA9_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 39173);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 39173);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA13_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 39810);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 39810);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA12_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38965);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38965);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA7_KcRA11_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38785);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38785);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA11_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38198);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38198);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA6_KcRA10_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38019);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38019);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA5_KcRA9_S5_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38380);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 38380);
  _abort();
 }
}

function __ZNK5Oryol5_priv16resourceRegistry18findEntryByLocatorERKNS_7LocatorE($this, $loc) {
 $this = $this | 0;
 $loc = $loc | 0;
 var $$1 = 0, $10 = 0, $13 = 0, $17 = 0, $22 = 0, $26 = 0, $3 = 0, $4 = 0;
 if ((HEAP32[$loc + 4 >> 2] | 0) == -1) {
  $$1 = 0;
  return $$1 | 0;
 }
 $3 = $this + 28 | 0;
 $4 = __ZNK5Oryol3MapINS_7LocatorEiE9FindIndexERKS1_($3, $loc) | 0;
 if (($4 | 0) == -1) {
  $$1 = 0;
  return $$1 | 0;
 }
 if (($4 | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 114353);
  _abort();
 }
 $10 = HEAP32[$this + 36 >> 2] | 0;
 if (((HEAP32[$this + 40 >> 2] | 0) - $10 | 0) <= ($4 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 114353);
  _abort();
 }
 $13 = HEAP32[$3 >> 2] | 0;
 if (!$13) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 114353);
  _abort();
 }
 $17 = HEAP32[$13 + (($10 + $4 | 0) * 12 | 0) + 8 >> 2] | 0;
 if (($17 | 0) <= -1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 114509);
  _abort();
 }
 $22 = HEAP32[$this + 12 >> 2] | 0;
 if (((HEAP32[$this + 16 >> 2] | 0) - $22 | 0) <= ($17 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 114509);
  _abort();
 }
 $26 = HEAP32[$this + 4 >> 2] | 0;
 if (!$26) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 114509);
  _abort();
 }
 $$1 = $26 + (($22 + $17 | 0) * 24 | 0) | 0;
 return $$1 | 0;
}

function __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE7DiscardEv($this) {
 $this = $this | 0;
 var $10 = 0, $13 = 0, $14 = 0, $18 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 123, 52668);
  _abort();
 }
 $2 = $this + 52 | 0;
 $4 = $this + 48 | 0;
 $7 = $this + 28 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $this + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (((HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) != ($8 - $10 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(52623, 0, 48917, 125, 52668);
  _abort();
 }
 HEAP8[$this >> 0] = 0;
 $13 = $this + 16 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (!(($14 | 0) != 0 & ($8 | 0) > ($10 | 0))) {
  $26 = HEAP32[$9 >> 2] | 0;
  HEAP32[$7 >> 2] = $26;
  $27 = HEAP32[$4 >> 2] | 0;
  HEAP32[$2 >> 2] = $27;
  return;
 }
 __ZN5Oryol5_priv9glTextureD2Ev($14 + ($10 * 776 | 0) | 0);
 $18 = $10 + 1 | 0;
 if (($18 | 0) < (HEAP32[$7 >> 2] | 0)) $22 = $18; else {
  $26 = HEAP32[$9 >> 2] | 0;
  HEAP32[$7 >> 2] = $26;
  $27 = HEAP32[$4 >> 2] | 0;
  HEAP32[$2 >> 2] = $27;
  return;
 }
 do {
  __ZN5Oryol5_priv9glTextureD2Ev((HEAP32[$13 >> 2] | 0) + ($22 * 776 | 0) | 0);
  $22 = $22 + 1 | 0;
 } while (($22 | 0) < (HEAP32[$7 >> 2] | 0));
 $26 = HEAP32[$9 >> 2] | 0;
 HEAP32[$7 >> 2] = $26;
 $27 = HEAP32[$4 >> 2] | 0;
 HEAP32[$2 >> 2] = $27;
 return;
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE3AddIJRA12_KcS7_N4yakc10kc85_modelEEEEvDpOT_($this, $args, $args1, $args2) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args2 = $args2 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37855);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 39365);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = HEAP32[$args2 >> 2] | 0;
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) | 0, $args);
  __ZN5Oryol6StringC2EPKc($14 + ($16 * 20 | 0) + 8 | 0, $args1);
  HEAP32[$14 + ($16 * 20 | 0) + 16 >> 2] = $20;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 39365);
  _abort();
 }
}

function __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE7DiscardEv($this) {
 $this = $this | 0;
 var $10 = 0, $13 = 0, $14 = 0, $18 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 123, 52812);
  _abort();
 }
 $2 = $this + 52 | 0;
 $4 = $this + 48 | 0;
 $7 = $this + 28 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $this + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (((HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) != ($8 - $10 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(52623, 0, 48917, 125, 52812);
  _abort();
 }
 HEAP8[$this >> 0] = 0;
 $13 = $this + 16 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (!(($14 | 0) != 0 & ($8 | 0) > ($10 | 0))) {
  $26 = HEAP32[$9 >> 2] | 0;
  HEAP32[$7 >> 2] = $26;
  $27 = HEAP32[$4 >> 2] | 0;
  HEAP32[$2 >> 2] = $27;
  return;
 }
 __ZN5Oryol5_priv8glShaderD2Ev($14 + ($10 * 3712 | 0) | 0);
 $18 = $10 + 1 | 0;
 if (($18 | 0) < (HEAP32[$7 >> 2] | 0)) $22 = $18; else {
  $26 = HEAP32[$9 >> 2] | 0;
  HEAP32[$7 >> 2] = $26;
  $27 = HEAP32[$4 >> 2] | 0;
  HEAP32[$2 >> 2] = $27;
  return;
 }
 do {
  __ZN5Oryol5_priv8glShaderD2Ev((HEAP32[$13 >> 2] | 0) + ($22 * 3712 | 0) | 0);
  $22 = $22 + 1 | 0;
 } while (($22 | 0) < (HEAP32[$7 >> 2] | 0));
 $26 = HEAP32[$9 >> 2] | 0;
 HEAP32[$7 >> 2] = $26;
 $27 = HEAP32[$4 >> 2] | 0;
 HEAP32[$2 >> 2] = $27;
 return;
}

function __ZN16ImGuiDrawContextD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $17 = 0, $19 = 0, $25 = 0, $27 = 0, $3 = 0, $33 = 0, $35 = 0, $41 = 0, $43 = 0, $49 = 0, $51 = 0, $9 = 0;
 $1 = HEAP32[$this + 256 >> 2] | 0;
 if ($1 | 0) {
  $3 = 147664;
  HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($1);
 }
 $9 = HEAP32[$this + 172 >> 2] | 0;
 if ($9 | 0) {
  $11 = 147664;
  HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($9);
 }
 $17 = HEAP32[$this + 160 >> 2] | 0;
 if ($17 | 0) {
  $19 = 147664;
  HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($17);
 }
 $25 = HEAP32[$this + 148 >> 2] | 0;
 if ($25 | 0) {
  $27 = 147664;
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($25);
 }
 $33 = HEAP32[$this + 136 >> 2] | 0;
 if ($33 | 0) {
  $35 = 147664;
  HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($33);
 }
 $41 = HEAP32[$this + 124 >> 2] | 0;
 if ($41 | 0) {
  $43 = 147664;
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($41);
 }
 $49 = HEAP32[$this + 92 >> 2] | 0;
 if (!$49) return;
 $51 = 147664;
 HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + -1;
 FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($49);
 return;
}

function __ZN5Oryol5Mouse10onButtonUpENS0_6ButtonE($this, $btn) {
 $this = $this | 0;
 $btn = $btn | 0;
 var $$0$i = 0, $1 = 0, $10 = 0, $12 = 0, $15 = 0, $17 = 0, $20 = 0, $27 = 0, $7 = 0, $__begin$03$i = 0, $event = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $event = sp;
 if ($btn >>> 0 >= 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77865, 0, 77805, 84, 77970);
  _abort();
 }
 $1 = $this + 28 + $btn | 0;
 HEAP8[$1 >> 0] = (HEAPU8[$1 >> 0] | 0) & 249 | 2;
 HEAP32[$event >> 2] = 2;
 $7 = $event + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$7 + 16 >> 2] = 0;
 HEAP32[$7 + 20 >> 2] = 0;
 HEAP32[$event + 28 >> 2] = $btn;
 $10 = HEAP32[$this + 48 >> 2] | 0;
 $12 = HEAP32[$this + 44 >> 2] | 0;
 if (($10 | 0) != ($12 | 0)) {
  $15 = HEAP32[$this + 36 >> 2] | 0;
  if ($15 | 0) {
   $17 = $15 + ($10 << 5) | 0;
   $__begin$03$i = $15 + ($12 << 5) | 0;
   do {
    $20 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$20 >> 2] | 0) + 24 >> 2] & 63]($20, $event);
    $__begin$03$i = $__begin$03$i + 32 | 0;
   } while (($__begin$03$i | 0) != ($17 | 0));
  }
 }
 $27 = HEAP32[$this + 80 >> 2] | 0;
 if (!$27) {
  $$0$i = 0;
  STACKTOP = sp;
  return $$0$i | 0;
 }
 $$0$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 24 >> 2] & 31]($27, $event) | 0;
 STACKTOP = sp;
 return $$0$i | 0;
}

function __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE7DiscardEv($this) {
 $this = $this | 0;
 var $10 = 0, $13 = 0, $14 = 0, $18 = 0, $2 = 0, $22 = 0, $26 = 0, $27 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 123, 52952);
  _abort();
 }
 $2 = $this + 52 | 0;
 $4 = $this + 48 | 0;
 $7 = $this + 28 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $this + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (((HEAP32[$2 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) | 0) != ($8 - $10 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(52623, 0, 48917, 125, 52952);
  _abort();
 }
 HEAP8[$this >> 0] = 0;
 $13 = $this + 16 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 if (!(($14 | 0) != 0 & ($8 | 0) > ($10 | 0))) {
  $26 = HEAP32[$9 >> 2] | 0;
  HEAP32[$7 >> 2] = $26;
  $27 = HEAP32[$4 >> 2] | 0;
  HEAP32[$2 >> 2] = $27;
  return;
 }
 __ZN5Oryol5_priv6glMeshD2Ev($14 + ($10 * 400 | 0) | 0);
 $18 = $10 + 1 | 0;
 if (($18 | 0) < (HEAP32[$7 >> 2] | 0)) $22 = $18; else {
  $26 = HEAP32[$9 >> 2] | 0;
  HEAP32[$7 >> 2] = $26;
  $27 = HEAP32[$4 >> 2] | 0;
  HEAP32[$2 >> 2] = $27;
  return;
 }
 do {
  __ZN5Oryol5_priv6glMeshD2Ev((HEAP32[$13 >> 2] | 0) + ($22 * 400 | 0) | 0);
  $22 = $22 + 1 | 0;
 } while (($22 | 0) < (HEAP32[$7 >> 2] | 0));
 $26 = HEAP32[$9 >> 2] | 0;
 HEAP32[$7 >> 2] = $26;
 $27 = HEAP32[$4 >> 2] | 0;
 HEAP32[$2 >> 2] = $27;
 return;
}

function __ZN10ImDrawList7AddRectERK6ImVec2S2_jfi($this, $a, $b, $col, $rounding, $rounding_corners) {
 $this = $this | 0;
 $a = $a | 0;
 $b = $b | 0;
 $col = $col | 0;
 $rounding = +$rounding;
 $rounding_corners = $rounding_corners | 0;
 var $0 = 0, $1 = 0, $13 = 0, $14 = 0, $15 = 0, $18 = 0, $20 = 0, $23 = 0, $4 = 0.0, $7 = 0.0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 8 | 0;
 $1 = sp;
 if ($col >>> 0 < 16777216) {
  STACKTOP = sp;
  return;
 }
 $4 = +HEAPF32[$a + 4 >> 2] + .5;
 HEAPF32[$0 >> 2] = +HEAPF32[$a >> 2] + .5;
 HEAPF32[$0 + 4 >> 2] = $4;
 $7 = +HEAPF32[$b + 4 >> 2] + -.5;
 HEAPF32[$1 >> 2] = +HEAPF32[$b >> 2] + -.5;
 HEAPF32[$1 + 4 >> 2] = $7;
 __ZN10ImDrawList8PathRectERK6ImVec2S2_fi($this, $0, $1, $rounding, $rounding_corners);
 $9 = $this + 84 | 0;
 __ZN10ImDrawList11AddPolylineEPK6ImVec2ijbfb($this, HEAP32[$9 >> 2] | 0, HEAP32[$this + 76 >> 2] | 0, $col, 1, 1.0, 1);
 $13 = $this + 76 | 0;
 $14 = $this + 80 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 if (($15 | 0) < 0) {
  $18 = (($15 | 0) / 2 | 0) + $15 | 0;
  $20 = ($18 | 0) > 0 ? $18 : 0;
  if (($15 | 0) < ($20 | 0)) {
   $23 = __ZN5ImGui8MemAllocEj($20 << 3) | 0;
   _memcpy($23 | 0, HEAP32[$9 >> 2] | 0, HEAP32[$13 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$9 >> 2] | 0);
   HEAP32[$9 >> 2] = $23;
   HEAP32[$14 >> 2] = $20;
  }
 }
 HEAP32[$13 >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv16glTextureFactory15DestroyResourceERNS0_7textureE($this, $tex) {
 $this = $this | 0;
 $tex = $tex | 0;
 var $14 = 0, $17 = 0, $4 = 0, $9 = 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 72053, 89, 74123);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer22invalidateTextureStateEv(HEAP32[$this >> 2] | 0);
 $4 = $tex + 752 | 0;
 if (HEAP32[$4 >> 2] | 0) {
  _glDeleteFramebuffers(1, $4 | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 95, 74123);
   _abort();
  }
 }
 $9 = $tex + 768 | 0;
 if (HEAP32[$9 >> 2] | 0) {
  _glDeleteTextures(1, $9 | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 101, 74123);
   _abort();
  }
 }
 $14 = $tex + 772 | 0;
 if (HEAP32[$14 >> 2] | 0) {
  _glDeleteTextures(1, $14 | 0);
  if (_glGetError() | 0) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 101, 74123);
   _abort();
  }
 }
 if (HEAP8[$tex + 746 >> 0] | 0) {
  __ZN5Oryol5_priv9glTexture5ClearEv($tex);
  return;
 }
 $17 = $tex + 756 | 0;
 if (!(HEAP32[$17 >> 2] | 0)) {
  __ZN5Oryol5_priv9glTexture5ClearEv($tex);
  return;
 }
 _glDeleteRenderbuffers(1, $17 | 0);
 if (!(_glGetError() | 0)) {
  __ZN5Oryol5_priv9glTexture5ClearEv($tex);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 108, 74123);
  _abort();
 }
}

function __ZN5Oryol5Mouse12onButtonDownENS0_6ButtonE($this, $btn) {
 $this = $this | 0;
 $btn = $btn | 0;
 var $$0$i = 0, $1 = 0, $11 = 0, $14 = 0, $16 = 0, $19 = 0, $26 = 0, $6 = 0, $9 = 0, $__begin$03$i = 0, $event = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $event = sp;
 if ($btn >>> 0 >= 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77865, 0, 77805, 72, 77898);
  _abort();
 }
 $1 = $this + 28 + $btn | 0;
 HEAP8[$1 >> 0] = HEAPU8[$1 >> 0] | 0 | 5;
 HEAP32[$event >> 2] = 1;
 $6 = $event + 4 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$6 + 16 >> 2] = 0;
 HEAP32[$6 + 20 >> 2] = 0;
 HEAP32[$event + 28 >> 2] = $btn;
 $9 = HEAP32[$this + 48 >> 2] | 0;
 $11 = HEAP32[$this + 44 >> 2] | 0;
 if (($9 | 0) != ($11 | 0)) {
  $14 = HEAP32[$this + 36 >> 2] | 0;
  if ($14 | 0) {
   $16 = $14 + ($9 << 5) | 0;
   $__begin$03$i = $14 + ($11 << 5) | 0;
   do {
    $19 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$19 >> 2] | 0) + 24 >> 2] & 63]($19, $event);
    $__begin$03$i = $__begin$03$i + 32 | 0;
   } while (($__begin$03$i | 0) != ($16 | 0));
  }
 }
 $26 = HEAP32[$this + 80 >> 2] | 0;
 if (!$26) {
  $$0$i = 0;
  STACKTOP = sp;
  return $$0$i | 0;
 }
 $$0$i = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$26 >> 2] | 0) + 24 >> 2] & 31]($26, $event) | 0;
 STACKTOP = sp;
 return $$0$i | 0;
}

function __ZN5Oryol5ArrayINS_6StringEE4moveEOS2_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $$pre$phi$iZ2D = 0, $$pre4$i$i = 0, $10 = 0, $14 = 0, $17 = 0, $19 = 0, $23 = 0, $7 = 0, $9 = 0;
 HEAP32[$this + 16 >> 2] = HEAP32[$rhs + 16 >> 2];
 HEAP32[$this + 20 >> 2] = HEAP32[$rhs + 20 >> 2];
 if (($rhs | 0) == ($this | 0)) return;
 $7 = HEAP32[$this >> 2] | 0;
 $$pre4$i$i = $this + 8 | 0;
 if (!$7) $$pre$phi$iZ2D = $this + 12 | 0; else {
  $9 = HEAP32[$$pre4$i$i >> 2] | 0;
  $10 = $this + 12 | 0;
  if (($9 | 0) < (HEAP32[$10 >> 2] | 0)) {
   __ZN5Oryol6StringD2Ev($7 + ($9 << 3) | 0);
   $14 = $9 + 1 | 0;
   if (($14 | 0) < (HEAP32[$10 >> 2] | 0)) {
    $19 = $14;
    do {
     __ZN5Oryol6StringD2Ev((HEAP32[$this >> 2] | 0) + ($19 << 3) | 0);
     $19 = $19 + 1 | 0;
    } while (($19 | 0) < (HEAP32[$10 >> 2] | 0));
   }
   $17 = HEAP32[$this >> 2] | 0;
  } else $17 = $7;
  __ZN5Oryol6Memory4FreeEPv($17);
  $$pre$phi$iZ2D = $10;
 }
 HEAP32[$this >> 2] = 0;
 $23 = $this + 4 | 0;
 HEAP32[$23 >> 2] = 0;
 HEAP32[$$pre4$i$i >> 2] = 0;
 HEAP32[$$pre$phi$iZ2D >> 2] = 0;
 HEAP32[$this >> 2] = HEAP32[$rhs >> 2];
 HEAP32[$23 >> 2] = HEAP32[$rhs + 4 >> 2];
 HEAP32[$$pre4$i$i >> 2] = HEAP32[$rhs + 8 >> 2];
 HEAP32[$$pre$phi$iZ2D >> 2] = HEAP32[$rhs + 12 >> 2];
 HEAP32[$rhs >> 2] = 0;
 HEAP32[$rhs + 4 >> 2] = 0;
 HEAP32[$rhs + 8 >> 2] = 0;
 HEAP32[$rhs + 12 >> 2] = 0;
 return;
}

function ___shgetc($f) {
 $f = $f | 0;
 var $$0 = 0, $$phi$trans$insert3 = 0, $$pre = 0, $0 = 0, $1 = 0, $13 = 0, $18 = 0, $20 = 0, $26 = 0, $27 = 0, $29 = 0, $35 = 0, $36 = 0, $41 = 0, $6 = 0, $9 = 0, label = 0;
 $0 = $f + 104 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) label = 3; else if ((HEAP32[$f + 108 >> 2] | 0) < ($1 | 0)) label = 3; else label = 4;
 if ((label | 0) == 3) {
  $6 = ___uflow($f) | 0;
  if (($6 | 0) < 0) label = 4; else {
   $9 = HEAP32[$0 >> 2] | 0;
   $$pre = HEAP32[$f + 8 >> 2] | 0;
   if (!$9) {
    $41 = $$pre;
    label = 9;
   } else {
    $13 = HEAP32[$f + 4 >> 2] | 0;
    $18 = $9 - (HEAP32[$f + 108 >> 2] | 0) | 0;
    $20 = $$pre;
    if (($$pre - $13 | 0) < ($18 | 0)) {
     $41 = $20;
     label = 9;
    } else {
     HEAP32[$f + 100 >> 2] = $13 + ($18 + -1);
     $26 = $20;
    }
   }
   if ((label | 0) == 9) {
    HEAP32[$f + 100 >> 2] = $$pre;
    $26 = $41;
   }
   $$phi$trans$insert3 = $f + 4 | 0;
   if (!$26) $36 = HEAP32[$$phi$trans$insert3 >> 2] | 0; else {
    $27 = HEAP32[$$phi$trans$insert3 >> 2] | 0;
    $29 = $f + 108 | 0;
    HEAP32[$29 >> 2] = $26 + 1 - $27 + (HEAP32[$29 >> 2] | 0);
    $36 = $27;
   }
   $35 = $36 + -1 | 0;
   if ((HEAPU8[$35 >> 0] | 0 | 0) == ($6 | 0)) $$0 = $6; else {
    HEAP8[$35 >> 0] = $6;
    $$0 = $6;
   }
  }
 }
 if ((label | 0) == 4) {
  HEAP32[$f + 100 >> 2] = 0;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZN5Oryol13StringBuilder16substituteCommonEPciiPKc($this, $occur, $matchLen, $substLen, $subst) {
 $this = $this | 0;
 $occur = $occur | 0;
 $matchLen = $matchLen | 0;
 $substLen = $substLen | 0;
 $subst = $subst | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $2 = 0, $22 = 0, $3 = 0, $6 = 0, $7 = 0;
 $0 = $substLen - $matchLen | 0;
 if (($0 | 0) > 0) {
  $2 = $0 + 1 | 0;
  $3 = $this + 8 | 0;
  $6 = $this + 4 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if (((HEAP32[$3 >> 2] | 0) + $2 | 0) < ($7 | 0)) $$pre$phiZ2D = $3; else {
   $11 = $7 + (($2 | 0) < 128 ? 128 : $2) | 0;
   $12 = __ZN5Oryol6Memory5AllocEi($11) | 0;
   $13 = HEAP32[$this >> 2] | 0;
   if (!$13) HEAP8[$12 >> 0] = 0; else {
    _strcpy($12, $13) | 0;
    __ZN5Oryol6Memory4FreeEPv(HEAP32[$this >> 2] | 0);
    HEAP32[$this >> 2] = 0;
   }
   HEAP32[$this >> 2] = $12;
   HEAP32[$6 >> 2] = $11;
   $$pre$phiZ2D = $3;
  }
 } else $$pre$phiZ2D = $this + 8 | 0;
 $16 = $occur + $matchLen | 0;
 $17 = $occur + $substLen | 0;
 $22 = (HEAP32[$this >> 2] | 0) - $16 + (HEAP32[$$pre$phiZ2D >> 2] | 0) | 0;
 if (($substLen | 0) != ($matchLen | 0) & ($22 | 0) > 0) _memmove($17 | 0, $16 | 0, $22 | 0) | 0;
 HEAP8[$17 + $22 >> 0] = 0;
 HEAP32[$$pre$phiZ2D >> 2] = (HEAP32[$$pre$phiZ2D >> 2] | 0) + $0;
 if (($substLen | 0) <= 0) return;
 _strncpy($occur, $subst, $substLen) | 0;
 return;
}

function __ZN5Oryol5_priv6glInfo5SetupEv() {
 if (HEAP8[163336] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75735, 0, 75744, 20, 75801);
  _abort();
 }
 HEAP8[163336] = 1;
 _glGetIntegerv(3379, 146784);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 25, 75801);
  _abort();
 }
 _glGetIntegerv(34076, 146788);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 27, 75801);
  _abort();
 }
 _glGetIntegerv(3386, 146792);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 29, 75801);
  _abort();
 }
 _glGetIntegerv(34921, 146800);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 31, 75801);
  _abort();
 }
 _glGetIntegerv(35661, 146812);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 33, 75801);
  _abort();
 }
 _glGetIntegerv(35660, 146816);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 35, 75801);
  _abort();
 }
 _glGetIntegerv(36347, 146804);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 38, 75801);
  _abort();
 }
 _glGetIntegerv(36349, 146820);
 if (!(_glGetError() | 0)) {
  __ZN5Oryol5_priv6glInfo9printInfoEv();
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 75744, 40, 75801);
  _abort();
 }
}

function __ZN6SoLoud6Soloud4initEjjjjj($this, $aFlags, $aBackend, $aSamplerate, $aBufferSize, $aChannels) {
 $this = $this | 0;
 $aFlags = $aFlags | 0;
 $aBackend = $aBackend | 0;
 $aSamplerate = $aSamplerate | 0;
 $aBufferSize = $aBufferSize | 0;
 $aChannels = $aChannels | 0;
 var $$19 = 0, $$2 = 0, $11 = 0, $17 = 0, $19 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0;
 if ($aChannels >>> 0 > 6 | (($aChannels | 0) == 5 | ($aBackend >>> 0 > 12 | ($aChannels | 0) == 3))) {
  $$2 = 1;
  return $$2 | 0;
 }
 $4 = $this + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 | 0) FUNCTION_TABLE_vi[$5 & 255]($this);
 HEAP32[$4 >> 2] = 0;
 $7 = $this + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 if ($8 | 0) __ZN6SoLoud6Thread12destroyMutexEPv($8);
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 >> 2] = __ZN6SoLoud6Thread11createMutexEv() | 0;
 $11 = $this + 4148 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$this + 4152 >> 2] = 0;
 if (($aBackend | 1 | 0) != 1) {
  $19 = ($aBackend | 0) != 0;
  $$19 = $19 ? 6 : 7;
  return $$19 | 0;
 }
 $17 = __ZN6SoLoud14sdlstatic_initEPNS_6SoloudEjjjj($this, $aFlags, ($aSamplerate | 0) == 0 ? 44100 : $aSamplerate, ($aBufferSize | 0) == 0 ? 2048 : $aBufferSize, $aChannels) | 0;
 if (!$17) {
  HEAP32[$11 >> 2] = 1;
  $$2 = 0;
  return $$2 | 0;
 }
 if (!$aBackend) {
  $19 = ($aBackend | 0) != 0;
  $$19 = $19 ? 6 : 7;
  return $$19 | 0;
 } else {
  $$2 = $17;
  return $$2 | 0;
 }
 return 0;
}

function __ZN5Oryol3URLaSEOS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $1 = 0, $49 = 0, dest = 0, stop = 0;
 if (($rhs | 0) == ($this | 0)) return;
 HEAP32[$this >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($this, $rhs);
 $1 = $rhs + 4 | 0;
 HEAP16[$this + 4 >> 1] = HEAP16[$1 >> 1] | 0;
 HEAP16[$this + 6 >> 1] = HEAP16[$rhs + 6 >> 1] | 0;
 HEAP16[$this + 8 >> 1] = HEAP16[$rhs + 8 >> 1] | 0;
 HEAP16[$this + 10 >> 1] = HEAP16[$rhs + 10 >> 1] | 0;
 HEAP16[$this + 12 >> 1] = HEAP16[$rhs + 12 >> 1] | 0;
 HEAP16[$this + 14 >> 1] = HEAP16[$rhs + 14 >> 1] | 0;
 HEAP16[$this + 16 >> 1] = HEAP16[$rhs + 16 >> 1] | 0;
 HEAP16[$this + 18 >> 1] = HEAP16[$rhs + 18 >> 1] | 0;
 HEAP16[$this + 20 >> 1] = HEAP16[$rhs + 20 >> 1] | 0;
 HEAP16[$this + 22 >> 1] = HEAP16[$rhs + 22 >> 1] | 0;
 HEAP16[$this + 24 >> 1] = HEAP16[$rhs + 24 >> 1] | 0;
 HEAP16[$this + 26 >> 1] = HEAP16[$rhs + 26 >> 1] | 0;
 HEAP16[$this + 28 >> 1] = HEAP16[$rhs + 28 >> 1] | 0;
 HEAP16[$this + 30 >> 1] = HEAP16[$rhs + 30 >> 1] | 0;
 HEAP16[$this + 32 >> 1] = HEAP16[$rhs + 32 >> 1] | 0;
 HEAP16[$this + 34 >> 1] = HEAP16[$rhs + 34 >> 1] | 0;
 $49 = $rhs + 36 | 0;
 HEAP8[$this + 36 >> 0] = HEAP8[$49 >> 0] | 0;
 HEAP32[$rhs >> 2] = 0;
 dest = $1;
 stop = dest + 32 | 0;
 do {
  HEAP16[dest >> 1] = 65535;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$49 >> 0] = 0;
 return;
}

function __ZNK15SnapshotStorage12HasSnapshotsEv($this) {
 $this = $this | 0;
 var $13 = 0, $16 = 0, $2 = 0, $20 = 0, $23 = 0, $6 = 0, $9 = 0;
 $2 = $this + 4 | 0;
 if ((HEAPU8[$this >> 0] | HEAPU8[$this + 1 >> 0] << 8 | HEAPU8[$this + 2 >> 0] << 16 | HEAPU8[$this + 3 >> 0] << 24 | 0) == 1497451331 ? (HEAPU8[$2 >> 0] | HEAPU8[$2 + 1 >> 0] << 8 | HEAPU8[$2 + 2 >> 0] << 16 | HEAPU8[$2 + 3 >> 0] << 24 | 0) == 1 : 0) return 1;
 $6 = $this + 262328 | 0;
 $9 = $this + 262332 | 0;
 if ((HEAPU8[$6 >> 0] | HEAPU8[$6 + 1 >> 0] << 8 | HEAPU8[$6 + 2 >> 0] << 16 | HEAPU8[$6 + 3 >> 0] << 24 | 0) == 1497451331 ? (HEAPU8[$9 >> 0] | HEAPU8[$9 + 1 >> 0] << 8 | HEAPU8[$9 + 2 >> 0] << 16 | HEAPU8[$9 + 3 >> 0] << 24 | 0) == 1 : 0) return 1;
 $13 = $this + 524656 | 0;
 $16 = $this + 524660 | 0;
 if ((HEAPU8[$13 >> 0] | HEAPU8[$13 + 1 >> 0] << 8 | HEAPU8[$13 + 2 >> 0] << 16 | HEAPU8[$13 + 3 >> 0] << 24 | 0) == 1497451331 ? (HEAPU8[$16 >> 0] | HEAPU8[$16 + 1 >> 0] << 8 | HEAPU8[$16 + 2 >> 0] << 16 | HEAPU8[$16 + 3 >> 0] << 24 | 0) == 1 : 0) return 1; else {
  $20 = $this + 786984 | 0;
  $23 = $this + 786988 | 0;
  return ((HEAPU8[$20 >> 0] | HEAPU8[$20 + 1 >> 0] << 8 | HEAPU8[$20 + 2 >> 0] << 16 | HEAPU8[$20 + 3 >> 0] << 24 | 0) == 1497451331 ? (HEAPU8[$23 >> 0] | HEAPU8[$23 + 1 >> 0] << 8 | HEAPU8[$23 + 2 >> 0] << 16 | HEAPU8[$23 + 3 >> 0] << 24 | 0) == 1 : 0) | 0;
 }
 return 0;
}

function __ZN5Oryol5_priv13elementBufferINS_13ResourceLabelEE5eraseEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $1 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $i$02$i = 0, $i$02$i5 = 0, $i$02$i$looptemp = 0, $i$02$i5$looptemp = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 610, 110778);
  _abort();
 }
 if (!$index) {
  HEAP32[$2 >> 2] = $3 + 1;
  return;
 }
 if (($4 + -1 | 0) == ($index | 0)) {
  HEAP32[$0 >> 2] = $1 + -1;
  return;
 }
 if (($4 >> 1 | 0) <= ($index | 0)) {
  $24 = $3 + $index | 0;
  $25 = $1 + -1 | 0;
  if (($24 | 0) < ($25 | 0)) {
   $i$02$i = $24;
   do {
    $i$02$i$looptemp = $i$02$i;
    $i$02$i = $i$02$i + 1 | 0;
    HEAP32[$5 + ($i$02$i$looptemp << 2) >> 2] = HEAP32[$5 + ($i$02$i << 2) >> 2];
   } while (($i$02$i | 0) != ($25 | 0));
  }
  HEAP32[$0 >> 2] = $25;
  return;
 }
 if (($index | 0) > 0) {
  $i$02$i5 = $3 + $index | 0;
  do {
   $i$02$i5$looptemp = $i$02$i5;
   $i$02$i5 = $i$02$i5 + -1 | 0;
   HEAP32[$5 + ($i$02$i5$looptemp << 2) >> 2] = HEAP32[$5 + ($i$02$i5 << 2) >> 2];
  } while (($i$02$i5 | 0) > ($3 | 0));
 }
 HEAP32[$2 >> 2] = $3 + 1;
 return;
}

function __ZN5Oryol5_priv10glRenderer11bindTextureEijj($this, $samplerIndex, $target, $tex) {
 $this = $this | 0;
 $samplerIndex = $samplerIndex | 0;
 $target = $target | 0;
 $tex = $tex | 0;
 var $3 = 0, $7 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 790, 70765);
  _abort();
 }
 if ($samplerIndex >>> 0 >= 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70829, 0, 66399, 791, 70765);
  _abort();
 }
 $3 = ($target | 0) == 3553;
 L7 : do if (($target | 0) < 34067) {
  switch ($target | 0) {
  case 3553:
   {
    break L7;
    break;
   }
  default:
   {}
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70888, 0, 66399, 792, 70765);
  _abort();
 } else {
  switch ($target | 0) {
  case 34067:
   {
    break L7;
    break;
   }
  default:
   {}
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(70888, 0, 66399, 792, 70765);
  _abort();
 } while (0);
 $7 = ($3 ? $this + 304 | 0 : $this + 368 | 0) + ($samplerIndex << 2) | 0;
 if ((HEAP32[$7 >> 2] | 0) == ($tex | 0)) return;
 HEAP32[$7 >> 2] = $tex;
 _glActiveTexture($samplerIndex + 33984 | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 798, 70765);
  _abort();
 }
 _glBindTexture($target | 0, $tex | 0);
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 800, 70765);
  _abort();
 }
}

function __ZNK5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE17QueryResourceInfoERKNS_2IdE($agg$result, $this, $id) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $id = $id | 0;
 var $13 = 0, $17 = 0, $19 = 0, $20 = 0, $27 = 0, $7 = 0, $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 271, 59873);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 272, 59873);
  _abort();
 }
 HEAP32[$agg$result >> 2] = 6;
 $7 = $agg$result + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 $9 = HEAPU16[$id >> 1] | 0;
 $13 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $13 | 0) <= ($9 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 58761);
  _abort();
 }
 $17 = HEAP32[$this + 16 >> 2] | 0;
 if (!$17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 58761);
  _abort();
 }
 $19 = $13 + $9 | 0;
 $20 = $id;
 $27 = $17 + ($19 * 608 | 0) | 0;
 if (!((HEAP32[$20 >> 2] | 0) == (HEAP32[$27 >> 2] | 0) ? (HEAP32[$20 + 4 >> 2] | 0) == (HEAP32[$27 + 4 >> 2] | 0) : 0)) return;
 HEAP32[$agg$result >> 2] = HEAP32[$17 + ($19 * 608 | 0) + 8 >> 2];
 HEAP32[$7 >> 2] = (HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$17 + ($19 * 608 | 0) + 12 >> 2] | 0);
 return;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE17QueryResourceInfoERKNS_2IdE($agg$result, $this, $id) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $id = $id | 0;
 var $13 = 0, $17 = 0, $19 = 0, $20 = 0, $27 = 0, $7 = 0, $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 271, 59685);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 272, 59685);
  _abort();
 }
 HEAP32[$agg$result >> 2] = 6;
 $7 = $agg$result + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 $9 = HEAPU16[$id >> 1] | 0;
 $13 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $13 | 0) <= ($9 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 58143);
  _abort();
 }
 $17 = HEAP32[$this + 16 >> 2] | 0;
 if (!$17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 58143);
  _abort();
 }
 $19 = $13 + $9 | 0;
 $20 = $id;
 $27 = $17 + ($19 * 3712 | 0) | 0;
 if (!((HEAP32[$20 >> 2] | 0) == (HEAP32[$27 >> 2] | 0) ? (HEAP32[$20 + 4 >> 2] | 0) == (HEAP32[$27 + 4 >> 2] | 0) : 0)) return;
 HEAP32[$agg$result >> 2] = HEAP32[$17 + ($19 * 3712 | 0) + 8 >> 2];
 HEAP32[$7 >> 2] = (HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$17 + ($19 * 3712 | 0) + 12 >> 2] | 0);
 return;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE17QueryResourceInfoERKNS_2IdE($agg$result, $this, $id) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $id = $id | 0;
 var $13 = 0, $17 = 0, $19 = 0, $20 = 0, $27 = 0, $7 = 0, $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 271, 59313);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 272, 59313);
  _abort();
 }
 HEAP32[$agg$result >> 2] = 6;
 $7 = $agg$result + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 $9 = HEAPU16[$id >> 1] | 0;
 $13 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $13 | 0) <= ($9 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 55213);
  _abort();
 }
 $17 = HEAP32[$this + 16 >> 2] | 0;
 if (!$17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 55213);
  _abort();
 }
 $19 = $13 + $9 | 0;
 $20 = $id;
 $27 = $17 + ($19 * 776 | 0) | 0;
 if (!((HEAP32[$20 >> 2] | 0) == (HEAP32[$27 >> 2] | 0) ? (HEAP32[$20 + 4 >> 2] | 0) == (HEAP32[$27 + 4 >> 2] | 0) : 0)) return;
 HEAP32[$agg$result >> 2] = HEAP32[$17 + ($19 * 776 | 0) + 8 >> 2];
 HEAP32[$7 >> 2] = (HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$17 + ($19 * 776 | 0) + 12 >> 2] | 0);
 return;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE17QueryResourceInfoERKNS_2IdE($agg$result, $this, $id) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $id = $id | 0;
 var $13 = 0, $17 = 0, $19 = 0, $20 = 0, $27 = 0, $7 = 0, $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 271, 59505);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 272, 59505);
  _abort();
 }
 HEAP32[$agg$result >> 2] = 6;
 $7 = $agg$result + 4 | 0;
 HEAP32[$7 >> 2] = 0;
 $9 = HEAPU16[$id >> 1] | 0;
 $13 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $13 | 0) <= ($9 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 55102);
  _abort();
 }
 $17 = HEAP32[$this + 16 >> 2] | 0;
 if (!$17) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 55102);
  _abort();
 }
 $19 = $13 + $9 | 0;
 $20 = $id;
 $27 = $17 + ($19 * 400 | 0) | 0;
 if (!((HEAP32[$20 >> 2] | 0) == (HEAP32[$27 >> 2] | 0) ? (HEAP32[$20 + 4 >> 2] | 0) == (HEAP32[$27 + 4 >> 2] | 0) : 0)) return;
 HEAP32[$agg$result >> 2] = HEAP32[$17 + ($19 * 400 | 0) + 8 >> 2];
 HEAP32[$7 >> 2] = (HEAP32[$this + 4 >> 2] | 0) - (HEAP32[$17 + ($19 * 400 | 0) + 12 >> 2] | 0);
 return;
}

function __ZN6SoLoud14FilterInstance10initParamsEi($this, $aNumParams) {
 $this = $this | 0;
 $aNumParams = $aNumParams | 0;
 var $$0 = 0, $$pre = 0, $0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $18 = 0, $2 = 0, $21 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, $i$01 = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = $aNumParams;
 $1 = $this + 12 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 | 0) __ZdaPv($2);
 $4 = $this + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 | 0) __ZdaPv($5);
 $7 = HEAP32[$0 >> 2] | 0;
 $9 = __Znaj($7 >>> 0 > 1073741823 ? -1 : $7 << 2) | 0;
 HEAP32[$1 >> 2] = $9;
 $11 = __Znaj($7 >>> 0 > 89478485 ? -1 : $7 * 48 | 0) | 0;
 if (!$7) {
  HEAP32[$4 >> 2] = $11;
  $21 = $9;
 } else {
  $13 = $11 + ($7 * 48 | 0) | 0;
  $14 = $11;
  do {
   __ZN6SoLoud5FaderC2Ev($14);
   $14 = $14 + 48 | 0;
  } while (($14 | 0) != ($13 | 0));
  $$pre = HEAP32[$1 >> 2] | 0;
  HEAP32[$4 >> 2] = $11;
  if (!$$pre) {
   __ZdaPv($11);
   HEAP32[$1 >> 2] = 0;
   HEAP32[$4 >> 2] = 0;
   HEAP32[$0 >> 2] = 0;
   $$0 = 5;
   return $$0 | 0;
  } else $21 = $$pre;
 }
 $18 = HEAP32[$0 >> 2] | 0;
 if ($18 | 0) {
  $i$01 = 0;
  do {
   HEAPF32[$21 + ($i$01 << 2) >> 2] = 0.0;
   HEAP32[$11 + ($i$01 * 48 | 0) + 44 >> 2] = 0;
   $i$01 = $i$01 + 1 | 0;
  } while ($i$01 >>> 0 < $18 >>> 0);
 }
 HEAPF32[$21 >> 2] = 1.0;
 $$0 = 0;
 return $$0 | 0;
}

function __ZN5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE6freeIdERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $11 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $7 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 161, 59046);
  _abort();
 }
 $3 = HEAPU16[$id >> 1] | 0;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 56282);
  _abort();
 }
 $11 = HEAP32[$this + 16 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 56282);
  _abort();
 }
 if (HEAP32[$11 + (($7 + $3 | 0) * 608 | 0) + 8 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(57366, 0, 48917, 162, 59046);
  _abort();
 }
 $17 = $this + 40 | 0;
 __ZN5Oryol5QueueItE12checkEnqueueEv($17);
 $18 = HEAP32[$17 >> 2] | 0;
 if (!$18) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
 $20 = $this + 52 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) < (HEAP32[$this + 44 >> 2] | 0)) {
  HEAP32[$20 >> 2] = $21 + 1;
  HEAP16[$18 + ($21 << 1) >> 1] = HEAP16[$id >> 1] | 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
}

function __ZN5Oryol5ArrayIN13CommandWindow3CmdEE3AddIJNS_6StringERjEEEvDpOT_($this, $args, $args1) {
 $this = $this | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $21 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIN13CommandWindow3CmdEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 37193);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 37365);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $21 = HEAP32[$args1 >> 2] & 65535;
  __ZN5Oryol6StringC2ERKS0_($14 + ($16 * 12 | 0) | 0, $args);
  HEAP16[$14 + ($16 * 12 | 0) + 8 >> 1] = $21;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 37365);
  _abort();
 }
}

function __ZN5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6freeIdERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $11 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $7 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 161, 57206);
  _abort();
 }
 $3 = HEAPU16[$id >> 1] | 0;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 54475);
  _abort();
 }
 $11 = HEAP32[$this + 16 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 54475);
  _abort();
 }
 if (HEAP32[$11 + (($7 + $3 | 0) * 776 | 0) + 8 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(57366, 0, 48917, 162, 57206);
  _abort();
 }
 $17 = $this + 40 | 0;
 __ZN5Oryol5QueueItE12checkEnqueueEv($17);
 $18 = HEAP32[$17 >> 2] | 0;
 if (!$18) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
 $20 = $this + 52 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) < (HEAP32[$this + 44 >> 2] | 0)) {
  HEAP32[$20 >> 2] = $21 + 1;
  HEAP16[$18 + ($21 << 1) >> 1] = HEAP16[$id >> 1] | 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
}

function __ZN5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE6freeIdERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $11 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $7 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 161, 58416);
  _abort();
 }
 $3 = HEAPU16[$id >> 1] | 0;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 55560);
  _abort();
 }
 $11 = HEAP32[$this + 16 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 55560);
  _abort();
 }
 if (HEAP32[$11 + (($7 + $3 | 0) * 3712 | 0) + 8 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(57366, 0, 48917, 162, 58416);
  _abort();
 }
 $17 = $this + 40 | 0;
 __ZN5Oryol5QueueItE12checkEnqueueEv($17);
 $18 = HEAP32[$17 >> 2] | 0;
 if (!$18) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
 $20 = $this + 52 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) < (HEAP32[$this + 44 >> 2] | 0)) {
  HEAP32[$20 >> 2] = $21 + 1;
  HEAP16[$18 + ($21 << 1) >> 1] = HEAP16[$id >> 1] | 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
}

function __ZN5Oryol5_priv16glTextureFactory18setupTextureParamsERKNS_12TextureSetupEj($this, $setup, $glTex) {
 $this = $this | 0;
 $setup = $setup | 0;
 $glTex = $glTex | 0;
 var $0 = 0, $10 = 0, $14 = 0, $5 = 0, $glMinFilter$0 = 0;
 $0 = $setup + 48 | 0;
 $5 = __ZN5Oryol5_priv7glTypes17asGLTexFilterModeENS_17TextureFilterMode4CodeE((HEAPU16[$0 >> 1] | 0) >>> 9 & 7) | 0;
 $10 = __ZN5Oryol5_priv7glTypes17asGLTexFilterModeENS_17TextureFilterMode4CodeE((HEAPU16[$0 >> 1] | 0) >>> 6 & 7) | 0;
 if ((HEAP32[$setup + 24 >> 2] | 0) == 1) {
  $14 = $5 | 2;
  if (($14 | 0) == 9986) $glMinFilter$0 = 9728; else $glMinFilter$0 = ($14 | 0) == 9987 ? 9729 : $5;
 } else $glMinFilter$0 = $5;
 _glTexParameteri(3553, 10241, $glMinFilter$0 | 0);
 _glTexParameteri(3553, 10240, $10 | 0);
 if ((HEAP32[$setup + 4 >> 2] | 0) == 2) {
  _glTexParameteri(3553, 10242, 33071);
  _glTexParameteri(3553, 10243, 33071);
 } else {
  _glTexParameteri(3553, 10242, __ZN5Oryol5_priv7glTypes15asGLTexWrapModeENS_15TextureWrapMode4CodeE(HEAP16[$0 >> 1] & 3) | 0);
  _glTexParameteri(3553, 10243, __ZN5Oryol5_priv7glTypes15asGLTexWrapModeENS_15TextureWrapMode4CodeE((HEAPU16[$0 >> 1] | 0) >>> 2 & 3) | 0);
 }
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 290, 73498);
  _abort();
 }
}

function _sift($head, $width, $cmp, $pshift, $lp) {
 $head = $head | 0;
 $width = $width | 0;
 $cmp = $cmp | 0;
 $pshift = $pshift | 0;
 $lp = $lp | 0;
 var $$0$be = 0, $$01$be = 0, $$012 = 0, $$03 = 0, $1 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $7 = 0, $8 = 0, $ar = 0, $i$0$lcssa = 0, $i$04 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 $ar = sp;
 HEAP32[$ar >> 2] = $head;
 L1 : do if (($pshift | 0) > 1) {
  $1 = 0 - $width | 0;
  $$012 = $pshift;
  $$03 = $head;
  $8 = $head;
  $i$04 = 1;
  while (1) {
   $2 = $$03 + $1 | 0;
   $3 = $$012 + -2 | 0;
   $7 = $2 + (0 - (HEAP32[$lp + ($3 << 2) >> 2] | 0)) | 0;
   if ((FUNCTION_TABLE_iii[$cmp & 31]($8, $7) | 0) > -1) if ((FUNCTION_TABLE_iii[$cmp & 31]($8, $2) | 0) > -1) {
    $i$0$lcssa = $i$04;
    break L1;
   }
   $15 = $i$04 + 1 | 0;
   $16 = $ar + ($i$04 << 2) | 0;
   if ((FUNCTION_TABLE_iii[$cmp & 31]($7, $2) | 0) > -1) {
    HEAP32[$16 >> 2] = $7;
    $$0$be = $7;
    $$01$be = $$012 + -1 | 0;
   } else {
    HEAP32[$16 >> 2] = $2;
    $$0$be = $2;
    $$01$be = $3;
   }
   if (($$01$be | 0) <= 1) {
    $i$0$lcssa = $15;
    break L1;
   }
   $$012 = $$01$be;
   $$03 = $$0$be;
   $8 = HEAP32[$ar >> 2] | 0;
   $i$04 = $15;
  }
 } else $i$0$lcssa = 1; while (0);
 _cycle($width, $ar, $i$0$lcssa);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6freeIdERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $11 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $3 = 0, $7 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 161, 57814);
  _abort();
 }
 $3 = HEAPU16[$id >> 1] | 0;
 $7 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $7 | 0) <= ($3 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 256, 53525);
  _abort();
 }
 $11 = HEAP32[$this + 16 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 257, 53525);
  _abort();
 }
 if (HEAP32[$11 + (($7 + $3 | 0) * 400 | 0) + 8 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(57366, 0, 48917, 162, 57814);
  _abort();
 }
 $17 = $this + 40 | 0;
 __ZN5Oryol5QueueItE12checkEnqueueEv($17);
 $18 = HEAP32[$17 >> 2] | 0;
 if (!$18) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
 $20 = $this + 52 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) < (HEAP32[$this + 44 >> 2] | 0)) {
  HEAP32[$20 >> 2] = $21 + 1;
  HEAP16[$18 + ($21 << 1) >> 1] = HEAP16[$id >> 1] | 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 49688);
  _abort();
 }
}

function __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_($cond, $msg, $file, $line, $func) {
 $cond = $cond | 0;
 $msg = $msg | 0;
 $file = $file | 0;
 $line = $line | 0;
 $func = $func | 0;
 var $7 = 0, $__begin$03 = 0, $callstack = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4128 | 0;
 $vararg_buffer = sp;
 $callstack = sp + 24 | 0;
 do {} while ((HEAP8[146880] & 1) != 0);
 HEAP32[36721] = (HEAP32[36721] | 0) + 1;
 L4 : do if (!0) {
  __ZN5Oryol10StackTrace4DumpEPci($callstack, 4096);
  HEAP32[$vararg_buffer >> 2] = $cond;
  HEAP32[$vararg_buffer + 4 >> 2] = $msg | 0 ? $msg : 117864;
  HEAP32[$vararg_buffer + 8 >> 2] = $file;
  HEAP32[$vararg_buffer + 12 >> 2] = $line;
  HEAP32[$vararg_buffer + 16 >> 2] = $func;
  HEAP32[$vararg_buffer + 20 >> 2] = $callstack;
  _printf(117869, $vararg_buffer) | 0;
 } else if (0) if (0) {
  $__begin$03 = 0;
  while (1) {
   $7 = HEAP32[$__begin$03 >> 2] | 0;
   if (!$7) break;
   FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 3]($7, $cond, $msg, $file, $line, $func);
   $__begin$03 = $__begin$03 + 4 | 0;
   if (!$__begin$03) break L4;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 118012);
  _abort();
 } while (0);
 HEAP32[36721] = (HEAP32[36721] | 0) - 1;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5Mouse5onMovERKN3glm5tvec2IfLNS1_9precisionE0EEE($this, $mov) {
 $this = $this | 0;
 $mov = $mov | 0;
 var $0 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $29 = 0, $30 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $7 = 0, $8 = 0, $__begin$03$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $2 = $mov;
 $4 = HEAP32[$2 >> 2] | 0;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $8 = $this + 12 | 0;
 HEAP32[$8 >> 2] = $4;
 HEAP32[$8 + 4 >> 2] = $7;
 $13 = HEAP32[$this + 48 >> 2] | 0;
 $15 = HEAP32[$this + 44 >> 2] | 0;
 if (($13 | 0) == ($15 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = 0;
 $19 = $0 + 4 | 0;
 HEAP32[$19 >> 2] = $4;
 HEAP32[$19 + 4 >> 2] = $7;
 $24 = $this + 4 | 0;
 $29 = HEAP32[$24 + 4 >> 2] | 0;
 $30 = $0 + 12 | 0;
 HEAP32[$30 >> 2] = HEAP32[$24 >> 2];
 HEAP32[$30 + 4 >> 2] = $29;
 HEAPF32[$0 + 20 >> 2] = 0.0;
 HEAPF32[$0 + 24 >> 2] = 0.0;
 $37 = HEAP32[$this + 36 >> 2] | 0;
 if (!$37) {
  STACKTOP = sp;
  return;
 }
 $39 = $37 + ($13 << 5) | 0;
 $__begin$03$i = $37 + ($15 << 5) | 0;
 do {
  $42 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$42 >> 2] | 0) + 24 >> 2] & 63]($42, $0);
  $__begin$03$i = $__begin$03$i + 32 | 0;
 } while (($__begin$03$i | 0) != ($39 | 0));
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13glMeshFactory18createVertexBufferEPKvjNS_5Usage4CodeE($this, $vertexData, $vertexDataSize, $usage) {
 $this = $this | 0;
 $vertexData = $vertexData | 0;
 $vertexDataSize = $vertexDataSize | 0;
 $usage = $usage | 0;
 var $4 = 0, $vb = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vb = sp;
 if (!$vertexDataSize) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64177, 0, 63465, 95, 64196);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer19invalidateMeshStateEv(HEAP32[$this >> 2] | 0);
 HEAP32[$vb >> 2] = 0;
 _glGenBuffers(1, $vb | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 63465, 100, 64196);
  _abort();
 }
 $4 = HEAP32[$vb >> 2] | 0;
 if (!$4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64288, 0, 63465, 101, 64196);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer16bindVertexBufferEj(HEAP32[$this >> 2] | 0, $4);
 _glBufferData(34962, $vertexDataSize | 0, $vertexData | 0, __ZN5Oryol5_priv7glTypes15asGLBufferUsageENS_5Usage4CodeE($usage) | 0);
 if (!(_glGetError() | 0)) {
  __ZN5Oryol5_priv10glRenderer19invalidateMeshStateEv(HEAP32[$this >> 2] | 0);
  STACKTOP = sp;
  return HEAP32[$vb >> 2] | 0;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 63465, 104, 64196);
  _abort();
 }
 return 0;
}

function __ZN5Oryol5ArrayIN10FileLoader4ItemEE7destroyEv($this) {
 $this = $this | 0;
 var $$pre$i = 0, $$pre$phi6$iZ2D = 0, $$pre4$i = 0, $10 = 0, $13 = 0, $15 = 0, $2 = 0, $20 = 0, $4 = 0, $5 = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 $2 = HEAP32[$this >> 2] | 0;
 $$pre4$i = $this + 8 | 0;
 if (!$2) {
  $$pre$phi6$iZ2D = $this + 12 | 0;
  HEAP32[$this >> 2] = 0;
  $20 = $this + 4 | 0;
  HEAP32[$20 >> 2] = 0;
  HEAP32[$$pre4$i >> 2] = 0;
  HEAP32[$$pre$phi6$iZ2D >> 2] = 0;
  return;
 }
 $4 = HEAP32[$$pre4$i >> 2] | 0;
 $5 = $this + 12 | 0;
 if (($4 | 0) < (HEAP32[$5 >> 2] | 0)) {
  __ZN5Oryol6StringD2Ev($2 + ($4 * 20 | 0) + 8 | 0);
  __ZN5Oryol6StringD2Ev($2 + ($4 * 20 | 0) | 0);
  $10 = $4 + 1 | 0;
  if (($10 | 0) < (HEAP32[$5 >> 2] | 0)) {
   $15 = $10;
   do {
    $$pre$i = HEAP32[$this >> 2] | 0;
    __ZN5Oryol6StringD2Ev($$pre$i + ($15 * 20 | 0) + 8 | 0);
    __ZN5Oryol6StringD2Ev($$pre$i + ($15 * 20 | 0) | 0);
    $15 = $15 + 1 | 0;
   } while (($15 | 0) < (HEAP32[$5 >> 2] | 0));
  }
  $13 = HEAP32[$this >> 2] | 0;
 } else $13 = $2;
 __ZN5Oryol6Memory4FreeEPv($13);
 $$pre$phi6$iZ2D = $5;
 HEAP32[$this >> 2] = 0;
 $20 = $this + 4 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$$pre4$i >> 2] = 0;
 HEAP32[$$pre$phi6$iZ2D >> 2] = 0;
 return;
}

function __ZN5Oryol5ArrayINS_3PtrI10WindowBaseEEE3AddERKS3_($this, $elm) {
 $this = $this | 0;
 $elm = $elm | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $23 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS_3PtrI10WindowBaseEEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 33599);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 399, 33789);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) >= (HEAP32[$0 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 399, 33789);
  _abort();
 }
 HEAP32[$2 >> 2] = $16 + 1;
 $20 = HEAP32[$elm >> 2] | 0;
 HEAP32[$14 + ($16 << 2) >> 2] = $20;
 if (!$20) return;
 $23 = $20 + 4 | 0;
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 1;
 return;
}

function __ZN5Oryol5_priv13glMeshFactory17createIndexBufferEPKvjNS_5Usage4CodeE($this, $indexData, $indexDataSize, $usage) {
 $this = $this | 0;
 $indexData = $indexData | 0;
 $indexDataSize = $indexDataSize | 0;
 $usage = $usage | 0;
 var $4 = 0, $ib = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ib = sp;
 if (!$indexDataSize) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64296, 0, 63465, 116, 64314);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer19invalidateMeshStateEv(HEAP32[$this >> 2] | 0);
 HEAP32[$ib >> 2] = 0;
 _glGenBuffers(1, $ib | 0);
 if (_glGetError() | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 63465, 121, 64314);
  _abort();
 }
 $4 = HEAP32[$ib >> 2] | 0;
 if (!$4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(64405, 0, 63465, 122, 64314);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer15bindIndexBufferEj(HEAP32[$this >> 2] | 0, $4);
 _glBufferData(34963, $indexDataSize | 0, $indexData | 0, __ZN5Oryol5_priv7glTypes15asGLBufferUsageENS_5Usage4CodeE($usage) | 0);
 if (!(_glGetError() | 0)) {
  __ZN5Oryol5_priv10glRenderer19invalidateMeshStateEv(HEAP32[$this >> 2] | 0);
  STACKTOP = sp;
  return HEAP32[$ib >> 2] | 0;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 63465, 125, 64314);
  _abort();
 }
 return 0;
}

function __ZN5Oryol5ArrayINS_2IdEE3AddIJRS1_EEEvDpOT_($this, $args) {
 $this = $this | 0;
 $args = $args | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $21 = 0, $26 = 0, $27 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS_2IdEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 115032);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 115088);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $21 = $args;
  $26 = HEAP32[$21 + 4 >> 2] | 0;
  $27 = $14 + ($16 << 3) | 0;
  HEAP32[$27 >> 2] = HEAP32[$21 >> 2];
  HEAP32[$27 + 4 >> 2] = $26;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 115088);
  _abort();
 }
}

function _vsnprintf($s, $n, $fmt, $ap) {
 $s = $s | 0;
 $n = $n | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $$$02 = 0, $$0 = 0, $$01 = 0, $$02 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $5 = 0, $8 = 0, $b = 0, $f = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 $b = sp + 112 | 0;
 $f = sp;
 dest = $f;
 src = 14068;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 if (($n + -1 | 0) >>> 0 > 2147483646) if (!$n) {
  $$01 = $b;
  $$02 = 1;
  label = 4;
 } else {
  HEAP32[(___errno_location() | 0) >> 2] = 75;
  $$0 = -1;
 } else {
  $$01 = $s;
  $$02 = $n;
  label = 4;
 }
 if ((label | 0) == 4) {
  $5 = -2 - $$01 | 0;
  $$$02 = $$02 >>> 0 > $5 >>> 0 ? $5 : $$02;
  HEAP32[$f + 48 >> 2] = $$$02;
  $8 = $f + 20 | 0;
  HEAP32[$8 >> 2] = $$01;
  HEAP32[$f + 44 >> 2] = $$01;
  $10 = $$01 + $$$02 | 0;
  $11 = $f + 16 | 0;
  HEAP32[$11 >> 2] = $10;
  HEAP32[$f + 28 >> 2] = $10;
  $13 = _vfprintf($f, $fmt, $ap) | 0;
  if (!$$$02) $$0 = $13; else {
   $15 = HEAP32[$8 >> 2] | 0;
   HEAP8[$15 + ((($15 | 0) == (HEAP32[$11 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
   $$0 = $13;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol7GamepadC2Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 HEAP8[$this >> 0] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAPF32[$this + 20 >> 2] = 0.0;
 HEAPF32[$this + 24 >> 2] = 0.0;
 HEAPF32[$this + 28 >> 2] = 0.0;
 HEAPF32[$this + 32 >> 2] = 0.0;
 HEAPF32[$this + 36 >> 2] = 0.0;
 HEAPF32[$this + 40 >> 2] = 0.0;
 HEAPF32[$this + 44 >> 2] = 0.0;
 HEAPF32[$this + 48 >> 2] = 0.0;
 HEAPF32[$this + 52 >> 2] = 0.0;
 HEAPF32[$this + 56 >> 2] = 0.0;
 HEAPF32[$this + 60 >> 2] = 0.0;
 HEAPF32[$this + 64 >> 2] = 0.0;
 HEAPF32[$this + 68 >> 2] = 0.0;
 HEAPF32[$this + 72 >> 2] = 0.0;
 HEAPF32[$this + 76 >> 2] = 0.0;
 HEAPF32[$this + 80 >> 2] = 0.0;
 HEAPF32[$this + 84 >> 2] = 0.0;
 HEAPF32[$this + 88 >> 2] = 0.0;
 HEAPF32[$this + 92 >> 2] = 0.0;
 HEAPF32[$this + 96 >> 2] = 0.0;
 HEAPF32[$this + 100 >> 2] = 0.0;
 HEAPF32[$this + 104 >> 2] = 0.0;
 HEAPF32[$this + 108 >> 2] = 0.0;
 HEAPF32[$this + 112 >> 2] = 0.0;
 HEAPF32[$this + 116 >> 2] = 0.0;
 HEAPF32[$this + 120 >> 2] = 0.0;
 HEAPF32[$this + 124 >> 2] = 0.0;
 HEAPF32[$this + 128 >> 2] = 0.0;
 HEAPF32[$this + 132 >> 2] = 0.0;
 HEAPF32[$this + 136 >> 2] = 0.0;
 HEAPF32[$this + 140 >> 2] = 0.0;
 return;
}

function __ZNK5Oryol8GfxSetup15GetDisplayAttrsEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0;
 $0 = $agg$result + 28 | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 HEAP32[$agg$result + 12 >> 2] = 0;
 HEAP32[$agg$result + 16 >> 2] = 0;
 HEAP32[$agg$result + 20 >> 2] = 0;
 HEAP32[$agg$result + 24 >> 2] = 0;
 HEAP32[$0 >> 2] = 12;
 $1 = $agg$result + 32 | 0;
 HEAP32[$1 >> 2] = 1;
 $2 = $agg$result + 36 | 0;
 HEAP8[$2 >> 0] = 1;
 $3 = $agg$result + 40 | 0;
 HEAP32[$3 >> 2] = 1;
 $4 = $agg$result + 44 | 0;
 __ZN5Oryol6StringC2Ev($4);
 $5 = HEAP32[$this >> 2] | 0;
 HEAP32[$agg$result >> 2] = $5;
 $7 = HEAP32[$this + 4 >> 2] | 0;
 HEAP32[$agg$result + 4 >> 2] = $7;
 HEAP32[$agg$result + 8 >> 2] = 0;
 HEAP32[$agg$result + 12 >> 2] = 0;
 HEAP32[$agg$result + 16 >> 2] = $5;
 HEAP32[$agg$result + 20 >> 2] = $7;
 HEAP32[$agg$result + 24 >> 2] = HEAP32[$this + 8 >> 2];
 HEAP32[$0 >> 2] = HEAP32[$this + 12 >> 2];
 HEAP32[$1 >> 2] = HEAP32[$this + 16 >> 2];
 HEAP8[$2 >> 0] = HEAP8[$this + 20 >> 0] | 0;
 __ZN5Oryol6StringaSERKS0_($4, $this + 28 | 0);
 HEAP32[$3 >> 2] = HEAP32[$this + 24 >> 2];
 return;
}

function __ZN5Oryol3MapINS_6StringES1_E7destroyEv($this) {
 $this = $this | 0;
 var $$pre$i = 0, $$pre$phi6$iZ2D = 0, $$pre4$i = 0, $10 = 0, $13 = 0, $15 = 0, $2 = 0, $20 = 0, $4 = 0, $5 = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 $2 = HEAP32[$this >> 2] | 0;
 $$pre4$i = $this + 8 | 0;
 if (!$2) {
  $$pre$phi6$iZ2D = $this + 12 | 0;
  HEAP32[$this >> 2] = 0;
  $20 = $this + 4 | 0;
  HEAP32[$20 >> 2] = 0;
  HEAP32[$$pre4$i >> 2] = 0;
  HEAP32[$$pre$phi6$iZ2D >> 2] = 0;
  return;
 }
 $4 = HEAP32[$$pre4$i >> 2] | 0;
 $5 = $this + 12 | 0;
 if (($4 | 0) < (HEAP32[$5 >> 2] | 0)) {
  __ZN5Oryol6StringD2Ev($2 + ($4 << 4) + 8 | 0);
  __ZN5Oryol6StringD2Ev($2 + ($4 << 4) | 0);
  $10 = $4 + 1 | 0;
  if (($10 | 0) < (HEAP32[$5 >> 2] | 0)) {
   $15 = $10;
   do {
    $$pre$i = HEAP32[$this >> 2] | 0;
    __ZN5Oryol6StringD2Ev($$pre$i + ($15 << 4) + 8 | 0);
    __ZN5Oryol6StringD2Ev($$pre$i + ($15 << 4) | 0);
    $15 = $15 + 1 | 0;
   } while (($15 | 0) < (HEAP32[$5 >> 2] | 0));
  }
  $13 = HEAP32[$this >> 2] | 0;
 } else $13 = $2;
 __ZN5Oryol6Memory4FreeEPv($13);
 $$pre$phi6$iZ2D = $5;
 HEAP32[$this >> 2] = 0;
 $20 = $this + 4 | 0;
 HEAP32[$20 >> 2] = 0;
 HEAP32[$$pre4$i >> 2] = 0;
 HEAP32[$$pre$phi6$iZ2D >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv16resourceRegistry7DiscardEv($this) {
 $this = $this | 0;
 var $$pre$i$i = 0, $$pre$i$i2 = 0, $$pre2$i$i = 0, $$pre2$i$i3 = 0, $10 = 0, $12 = 0, $3 = 0, $5 = 0, $i$01$i$i = 0, $i$01$i$i4 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 111306, 36, 112106);
  _abort();
 }
 $3 = HEAP32[$this + 4 >> 2] | 0;
 $$pre$i$i = HEAP32[$this + 12 >> 2] | 0;
 $$pre2$i$i = $this + 16 | 0;
 if ($3 | 0) {
  $5 = HEAP32[$$pre2$i$i >> 2] | 0;
  if (($$pre$i$i | 0) < ($5 | 0)) {
   $i$01$i$i = $$pre$i$i;
   do {
    HEAP32[$3 + ($i$01$i$i * 24 | 0) >> 2] = 0;
    $i$01$i$i = $i$01$i$i + 1 | 0;
   } while (($i$01$i$i | 0) != ($5 | 0));
  }
 }
 HEAP32[$$pre2$i$i >> 2] = $$pre$i$i;
 $10 = HEAP32[$this + 28 >> 2] | 0;
 $$pre$i$i2 = HEAP32[$this + 36 >> 2] | 0;
 $$pre2$i$i3 = $this + 40 | 0;
 if ($10 | 0) {
  $12 = HEAP32[$$pre2$i$i3 >> 2] | 0;
  if (($$pre$i$i2 | 0) < ($12 | 0)) {
   $i$01$i$i4 = $$pre$i$i2;
   do {
    HEAP32[$10 + ($i$01$i$i4 * 12 | 0) >> 2] = 0;
    $i$01$i$i4 = $i$01$i$i4 + 1 | 0;
   } while (($i$01$i$i4 | 0) != ($12 | 0));
  }
 }
 HEAP32[$$pre2$i$i3 >> 2] = $$pre$i$i2;
 HEAP32[$this + 68 >> 2] = HEAP32[$this + 64 >> 2];
 HEAP8[$this >> 0] = 0;
 return;
}

function __ZN5ImGui22PushAllowKeyboardFocusEb($allow_keyboard_focus) {
 $allow_keyboard_focus = $allow_keyboard_focus | 0;
 var $0 = 0, $10 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, $27 = 0, $29 = 0, $35 = 0, $5 = 0, $6 = 0, $7 = 0;
 $0 = $allow_keyboard_focus & 1;
 $2 = HEAP32[38201] | 0;
 HEAP8[$2 + 114 >> 0] = 1;
 HEAP8[$2 + 276 >> 0] = $0;
 $5 = $2 + 304 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $2 + 308 | 0;
 if (($6 | 0) == (HEAP32[$7 >> 2] | 0)) {
  $10 = $6 + 1 | 0;
  if (!$6) $15 = 8; else $15 = (($6 | 0) / 2 | 0) + $6 | 0;
  $16 = ($15 | 0) > ($10 | 0) ? $15 : $10;
  if (($6 | 0) < ($16 | 0)) {
   $18 = 147664;
   HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
   $23 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($16) | 0;
   $24 = $2 + 312 | 0;
   _memcpy($23 | 0, HEAP32[$24 >> 2] | 0, HEAP32[$5 >> 2] | 0) | 0;
   $27 = HEAP32[$24 >> 2] | 0;
   if ($27 | 0) {
    $29 = 147664;
    HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + -1;
   }
   FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($27);
   HEAP32[$24 >> 2] = $23;
   HEAP32[$7 >> 2] = $16;
   $35 = HEAP32[$5 >> 2] | 0;
  } else $35 = $6;
 } else $35 = $6;
 HEAP32[$5 >> 2] = $35 + 1;
 HEAP8[(HEAP32[$2 + 312 >> 2] | 0) + $35 >> 0] = $0;
 return;
}

function __ZN9PIOWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $1 = 0, $2 = 0, $20 = 0, $22 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZN10WindowBase7setNameEPKc($this, 35731);
 $2 = $this + 20 | 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35745);
 $4 = HEAP8[$kc + 69262 >> 0] | 0;
 if (($2 | 0) != ($0 | 0)) {
  HEAP32[$2 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($2, $0);
 }
 HEAP8[$this + 32 >> 0] = 0;
 HEAP16[$this + 30 >> 1] = $4 & 255;
 HEAP8[$this + 24 >> 0] = HEAP8[35768 + (($4 & 255) >>> 4 & 255) >> 0] | 0;
 HEAP8[$this + 25 >> 0] = HEAP8[35768 + ($4 & 15) >> 0] | 0;
 HEAP8[$this + 26 >> 0] = 0;
 HEAP32[$0 >> 2] = 0;
 $20 = $this + 36 | 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 35785);
 $22 = HEAP8[$kc + 69263 >> 0] | 0;
 if (($20 | 0) != ($1 | 0)) {
  HEAP32[$20 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($20, $1);
 }
 HEAP8[$this + 48 >> 0] = 0;
 HEAP16[$this + 46 >> 1] = $22 & 255;
 HEAP8[$this + 40 >> 0] = HEAP8[35768 + (($22 & 255) >>> 4 & 255) >> 0] | 0;
 HEAP8[$this + 41 >> 0] = HEAP8[35768 + ($22 & 15) >> 0] | 0;
 HEAP8[$this + 42 >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv13elementBufferIN10FileLoader4ItemEED2Ev($this) {
 $this = $this | 0;
 var $$pre$i = 0, $$pre$phi6$iZ2D = 0, $$pre4$i = 0, $0 = 0, $11 = 0, $13 = 0, $18 = 0, $2 = 0, $3 = 0, $8 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $$pre4$i = $this + 8 | 0;
 if (!$0) {
  $$pre$phi6$iZ2D = $this + 12 | 0;
  HEAP32[$this >> 2] = 0;
  $18 = $this + 4 | 0;
  HEAP32[$18 >> 2] = 0;
  HEAP32[$$pre4$i >> 2] = 0;
  HEAP32[$$pre$phi6$iZ2D >> 2] = 0;
  return;
 }
 $2 = HEAP32[$$pre4$i >> 2] | 0;
 $3 = $this + 12 | 0;
 if (($2 | 0) < (HEAP32[$3 >> 2] | 0)) {
  __ZN5Oryol6StringD2Ev($0 + ($2 * 20 | 0) + 8 | 0);
  __ZN5Oryol6StringD2Ev($0 + ($2 * 20 | 0) | 0);
  $8 = $2 + 1 | 0;
  if (($8 | 0) < (HEAP32[$3 >> 2] | 0)) {
   $13 = $8;
   do {
    $$pre$i = HEAP32[$this >> 2] | 0;
    __ZN5Oryol6StringD2Ev($$pre$i + ($13 * 20 | 0) + 8 | 0);
    __ZN5Oryol6StringD2Ev($$pre$i + ($13 * 20 | 0) | 0);
    $13 = $13 + 1 | 0;
   } while (($13 | 0) < (HEAP32[$3 >> 2] | 0));
  }
  $11 = HEAP32[$this >> 2] | 0;
 } else $11 = $0;
 __ZN5Oryol6Memory4FreeEPv($11);
 $$pre$phi6$iZ2D = $3;
 HEAP32[$this >> 2] = 0;
 $18 = $this + 4 | 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$$pre4$i >> 2] = 0;
 HEAP32[$$pre$phi6$iZ2D >> 2] = 0;
 return;
}

function __ZN2UI7DiscardEv($this) {
 $this = $this | 0;
 var $$pre$phi5$i$iZ2D = 0, $$pre3$i$i = 0, $0 = 0, $1 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $i$01$i$i = 0;
 $0 = $this + 1049440 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $$pre3$i$i = $this + 1049448 | 0;
 L1 : do if (!$1) $$pre$phi5$i$iZ2D = $this + 1049452 | 0; else {
  $3 = HEAP32[$$pre3$i$i >> 2] | 0;
  $4 = $this + 1049452 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($3 | 0) < ($5 | 0)) {
   $20 = $5;
   $8 = $1;
   $i$01$i$i = $3;
   while (1) {
    $7 = $8 + ($i$01$i$i << 2) | 0;
    $9 = HEAP32[$7 >> 2] | 0;
    if (!$9) $18 = $20; else {
     $11 = $9 + 4 | 0;
     $12 = HEAP32[$11 >> 2] | 0;
     HEAP32[$11 >> 2] = $12 - 1;
     if (($12 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$9 >> 2] >> 2] & 255]($9);
     HEAP32[$7 >> 2] = 0;
     $18 = HEAP32[$4 >> 2] | 0;
    }
    $16 = $i$01$i$i + 1 | 0;
    if (($16 | 0) >= ($18 | 0)) {
     $$pre$phi5$i$iZ2D = $4;
     break L1;
    }
    $20 = $18;
    $8 = HEAP32[$0 >> 2] | 0;
    $i$01$i$i = $16;
   }
  } else $$pre$phi5$i$iZ2D = $4;
 } while (0);
 HEAP32[$$pre$phi5$i$iZ2D >> 2] = HEAP32[$$pre3$i$i >> 2];
 __ZN5Oryol4IMUI7DiscardEv();
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEED2Ev($this) {
 $this = $this | 0;
 var $$pre$i = 0, $$pre$phi6$iZ2D = 0, $$pre4$i = 0, $0 = 0, $11 = 0, $13 = 0, $18 = 0, $2 = 0, $3 = 0, $8 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $$pre4$i = $this + 8 | 0;
 if (!$0) {
  $$pre$phi6$iZ2D = $this + 12 | 0;
  HEAP32[$this >> 2] = 0;
  $18 = $this + 4 | 0;
  HEAP32[$18 >> 2] = 0;
  HEAP32[$$pre4$i >> 2] = 0;
  HEAP32[$$pre$phi6$iZ2D >> 2] = 0;
  return;
 }
 $2 = HEAP32[$$pre4$i >> 2] | 0;
 $3 = $this + 12 | 0;
 if (($2 | 0) < (HEAP32[$3 >> 2] | 0)) {
  __ZN5Oryol6StringD2Ev($0 + ($2 << 4) + 8 | 0);
  __ZN5Oryol6StringD2Ev($0 + ($2 << 4) | 0);
  $8 = $2 + 1 | 0;
  if (($8 | 0) < (HEAP32[$3 >> 2] | 0)) {
   $13 = $8;
   do {
    $$pre$i = HEAP32[$this >> 2] | 0;
    __ZN5Oryol6StringD2Ev($$pre$i + ($13 << 4) + 8 | 0);
    __ZN5Oryol6StringD2Ev($$pre$i + ($13 << 4) | 0);
    $13 = $13 + 1 | 0;
   } while (($13 | 0) < (HEAP32[$3 >> 2] | 0));
  }
  $11 = HEAP32[$this >> 2] | 0;
 } else $11 = $0;
 __ZN5Oryol6Memory4FreeEPv($11);
 $$pre$phi6$iZ2D = $3;
 HEAP32[$this >> 2] = 0;
 $18 = $this + 4 | 0;
 HEAP32[$18 >> 2] = 0;
 HEAP32[$$pre4$i >> 2] = 0;
 HEAP32[$$pre$phi6$iZ2D >> 2] = 0;
 return;
}

function __ZN5Oryol5Mouse8onScrollERKN3glm5tvec2IfLNS1_9precisionE0EEE($this, $scroll) {
 $this = $this | 0;
 $scroll = $scroll | 0;
 var $0 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $29 = 0, $4 = 0, $7 = 0, $8 = 0, $__begin$03$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $2 = $scroll;
 $4 = HEAP32[$2 >> 2] | 0;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $8 = $this + 20 | 0;
 HEAP32[$8 >> 2] = $4;
 HEAP32[$8 + 4 >> 2] = $7;
 $13 = HEAP32[$this + 48 >> 2] | 0;
 $15 = HEAP32[$this + 44 >> 2] | 0;
 if (($13 | 0) == ($15 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = 3;
 $17 = $0 + 4 | 0;
 HEAP32[$17 >> 2] = 0;
 HEAP32[$17 + 4 >> 2] = 0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$17 + 12 >> 2] = 0;
 $19 = $0 + 20 | 0;
 HEAP32[$19 >> 2] = $4;
 HEAP32[$19 + 4 >> 2] = $7;
 $24 = HEAP32[$this + 36 >> 2] | 0;
 if (!$24) {
  STACKTOP = sp;
  return;
 }
 $26 = $24 + ($13 << 5) | 0;
 $__begin$03$i = $24 + ($15 << 5) | 0;
 do {
  $29 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$29 >> 2] | 0) + 24 >> 2] & 63]($29, $0);
  $__begin$03$i = $__begin$03$i + 32 | 0;
 } while (($__begin$03$i | 0) != ($26 | 0));
 STACKTOP = sp;
 return;
}

function _atoi($s) {
 $s = $s | 0;
 var $$0 = 0, $$0$lcssa = 0, $$1$ph = 0, $$13 = 0, $$lcssa9 = 0, $11 = 0, $4 = 0, $5 = 0, $8 = 0, $isdigittmp1 = 0, $isdigittmp5 = 0, $n$0$lcssa = 0, $n$04 = 0, $neg$0 = 0, $neg$1$ph = 0, label = 0;
 $$0 = $s;
 while (1) {
  $4 = $$0 + 1 | 0;
  if (!(_isspace(HEAP8[$$0 >> 0] | 0) | 0)) {
   $$0$lcssa = $$0;
   $$lcssa9 = $4;
   break;
  } else $$0 = $4;
 }
 $5 = HEAP8[$$0$lcssa >> 0] | 0;
 switch ($5 << 24 >> 24 | 0) {
 case 45:
  {
   $neg$0 = 1;
   label = 5;
   break;
  }
 case 43:
  {
   $neg$0 = 0;
   label = 5;
   break;
  }
 default:
  {
   $$1$ph = $$0$lcssa;
   $8 = $5;
   $neg$1$ph = 0;
  }
 }
 if ((label | 0) == 5) {
  $$1$ph = $$lcssa9;
  $8 = HEAP8[$$lcssa9 >> 0] | 0;
  $neg$1$ph = $neg$0;
 }
 $isdigittmp1 = ($8 << 24 >> 24) + -48 | 0;
 if ($isdigittmp1 >>> 0 < 10) {
  $$13 = $$1$ph;
  $isdigittmp5 = $isdigittmp1;
  $n$04 = 0;
  while (1) {
   $$13 = $$13 + 1 | 0;
   $11 = ($n$04 * 10 | 0) - $isdigittmp5 | 0;
   $isdigittmp5 = (HEAP8[$$13 >> 0] | 0) + -48 | 0;
   if ($isdigittmp5 >>> 0 >= 10) {
    $n$0$lcssa = $11;
    break;
   } else $n$04 = $11;
  }
 } else $n$0$lcssa = 0;
 return ($neg$1$ph | 0 ? $n$0$lcssa : 0 - $n$0$lcssa | 0) | 0;
}

function __ZN5Oryol5ArrayINS_5_priv8pipelineEE3AddIJEEEvDpOT_($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS0_8pipelineEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 50995);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 51077);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = $14 + ($16 * 608 | 0) | 0;
  _memset($20 | 0, 0, 608) | 0;
  __ZN5Oryol5_priv10glPipelineC2Ev($20);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 51077);
  _abort();
 }
}

function __ZL20stbtt__GetGlyfOffsetPK14stbtt_fontinfoi($info, $glyph_index) {
 $info = $info | 0;
 $glyph_index = $glyph_index | 0;
 var $$0 = 0, $$pn = 0, $$sink = 0, $13 = 0, $15 = 0, $21 = 0, $28 = 0, $4 = 0, $46 = 0, $8 = 0, $g1$0 = 0;
 if ((HEAP32[$info + 12 >> 2] | 0) <= ($glyph_index | 0)) {
  $$0 = -1;
  return $$0 | 0;
 }
 $4 = HEAP32[$info + 44 >> 2] | 0;
 if (($4 | 0) > 1) {
  $$0 = -1;
  return $$0 | 0;
 }
 $8 = HEAP32[$info + 24 >> 2] | 0;
 $13 = (HEAP32[$info + 4 >> 2] | 0) + (HEAP32[$info + 16 >> 2] | 0) | 0;
 if (!$4) {
  $15 = $13 + ($glyph_index << 1) | 0;
  $21 = $15 + 2 | 0;
  $$pn = ((HEAPU8[$15 >> 0] | 0) << 8 | (HEAPU8[$15 + 1 >> 0] | 0)) << 1;
  $$sink = ((HEAPU8[$21 >> 0] | 0) << 8 | (HEAPU8[$21 + 1 >> 0] | 0)) << 1;
 } else {
  $28 = $13 + ($glyph_index << 2) | 0;
  $46 = $28 + 4 | 0;
  $$pn = (HEAPU8[$28 + 1 >> 0] | 0) << 16 | (HEAPU8[$28 >> 0] | 0) << 24 | (HEAPU8[$28 + 2 >> 0] | 0) << 8 | (HEAPU8[$28 + 3 >> 0] | 0);
  $$sink = (HEAPU8[$46 + 1 >> 0] | 0) << 16 | (HEAPU8[$46 >> 0] | 0) << 24 | (HEAPU8[$46 + 2 >> 0] | 0) << 8 | (HEAPU8[$46 + 3 >> 0] | 0);
 }
 $g1$0 = $$pn + $8 | 0;
 $$0 = ($g1$0 | 0) == ($$sink + $8 | 0) ? -1 : $g1$0;
 return $$0 | 0;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 var $16 = 0, $17 = 0, $23 = 0, $25 = 0, $5 = 0, $6 = 0;
 HEAP8[$info + 53 >> 0] = 1;
 do if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
  HEAP8[$info + 52 >> 0] = 1;
  $5 = $info + 16 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (!$6) {
   HEAP32[$5 >> 2] = $dst_ptr;
   HEAP32[$info + 24 >> 2] = $path_below;
   HEAP32[$info + 36 >> 2] = 1;
   if (!(($path_below | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  if (($6 | 0) != ($dst_ptr | 0)) {
   $25 = $info + 36 | 0;
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $16 = $info + 24 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == 2) {
   HEAP32[$16 >> 2] = $path_below;
   $23 = $path_below;
  } else $23 = $17;
  if (($23 | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0) HEAP8[$info + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZN5Oryol5ArrayINS_5_priv7textureEE3AddIJEEEvDpOT_($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS0_7textureEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 50526);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 50606);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = $14 + ($16 * 776 | 0) | 0;
  _memset($20 | 0, 0, 776) | 0;
  __ZN5Oryol5_priv9glTextureC2Ev($20);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 50606);
  _abort();
 }
}

function __ZN5Oryol5ArrayINS_5_priv6shaderEE3AddIJEEEvDpOT_($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $20 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS0_6shaderEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 50067);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 50145);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  $20 = $14 + ($16 * 3712 | 0) | 0;
  _memset($20 | 0, 0, 3712) | 0;
  __ZN5Oryol5_priv8glShaderC2Ev($20);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 50145);
  _abort();
 }
}

function __ZN11ImFontAtlas5ClearEv($this) {
 $this = $this | 0;
 var $$lcssa5$i = 0, $0 = 0, $1 = 0, $10 = 0, $14 = 0, $24 = 0, $3 = 0, $4 = 0, $6 = 0, $9 = 0, $i$07$i = 0;
 __ZN11ImFontAtlas14ClearInputDataEv($this);
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) __ZN5ImGui7MemFreeEPv($1);
 $3 = $this + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) __ZN5ImGui7MemFreeEPv($4);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$3 >> 2] = 0;
 $6 = $this + 32 | 0;
 $9 = $this + 40 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 L7 : do if ((HEAP32[$6 >> 2] | 0) > 0) {
  $14 = $10;
  $i$07$i = 0;
  while (1) {
   __ZN6ImFontD2Ev(HEAP32[$14 + ($i$07$i << 2) >> 2] | 0);
   if ((HEAP32[$6 >> 2] | 0) <= ($i$07$i | 0)) break;
   __ZN5ImGui7MemFreeEPv(HEAP32[(HEAP32[$9 >> 2] | 0) + ($i$07$i << 2) >> 2] | 0);
   $i$07$i = $i$07$i + 1 | 0;
   $24 = HEAP32[$9 >> 2] | 0;
   if (($i$07$i | 0) >= (HEAP32[$6 >> 2] | 0)) {
    $$lcssa5$i = $24;
    break L7;
   } else $14 = $24;
  }
  ___assert_fail(127217, 127226, 805, 127272);
 } else $$lcssa5$i = $10; while (0);
 if (!$$lcssa5$i) return;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 __ZN5ImGui7MemFreeEPv($$lcssa5$i);
 HEAP32[$9 >> 2] = 0;
 return;
}

function __ZN10ImDrawList15UpdateTextureIDEv($this) {
 $this = $this | 0;
 var $1 = 0, $11 = 0, $13 = 0, $14 = 0, $21 = 0, $25 = 0, $27 = 0, $33 = 0, $39 = 0, $8 = 0;
 $1 = HEAP32[$this + 64 >> 2] | 0;
 if (!$1) $21 = 0; else $21 = HEAP32[(HEAP32[$this + 72 >> 2] | 0) + ($1 + -1 << 2) >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 do if ($8 | 0) {
  if (($8 | 0) <= 0) ___assert_fail(127436, 127226, 815, 127445);
  $11 = $8 + -1 | 0;
  $13 = HEAP32[$this + 8 >> 2] | 0;
  $14 = $13 + ($11 << 5) | 0;
  if ($14 | 0) {
   if (HEAP32[$14 >> 2] | 0) if ((HEAP32[$13 + ($11 << 5) + 20 >> 2] | 0) != ($21 | 0)) break;
   if (!(HEAP32[$13 + ($11 << 5) + 24 >> 2] | 0)) {
    $25 = ($8 | 0) > 1;
    $27 = $25 ? $14 + -32 | 0 : 0;
    if ($25) if ((HEAP32[$27 + 20 >> 2] | 0) == ($21 | 0)) {
     $33 = HEAP32[$this + 52 >> 2] | 0;
     if (!$33) $39 = 13728; else $39 = (HEAP32[$this + 60 >> 2] | 0) + ($33 + -1 << 4) | 0;
     if (!(_memcmp($27 + 4 | 0, $39, 16) | 0)) if (!(HEAP32[$27 + 24 >> 2] | 0)) {
      HEAP32[$this >> 2] = $11;
      return;
     }
    }
    HEAP32[$13 + ($11 << 5) + 20 >> 2] = $21;
    return;
   }
  }
 } while (0);
 __ZN10ImDrawList10AddDrawCmdEv($this);
 return;
}

function __ZN5Oryol8Keyboard9onKeyDownENS_3Key4CodeE($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $0 = 0, $12 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $5 = 0, $8 = 0, $__begin$03$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if ($key >>> 0 >= 121) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(81122, 0, 77551, 46, 77614);
  _abort();
 }
 $2 = $key >>> 5;
 $3 = $this + 4 + ($2 << 2) | 0;
 $5 = 1 << ($key & 31);
 HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | $5;
 $8 = $this + 36 + ($2 << 2) | 0;
 HEAP32[$8 >> 2] = HEAP32[$8 >> 2] | $5;
 $12 = HEAP32[$this + 608 >> 2] | 0;
 $14 = HEAP32[$this + 604 >> 2] | 0;
 if (($12 | 0) == ($14 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = $key;
 HEAP32[$0 + 8 >> 2] = 0;
 $19 = HEAP32[$this + 596 >> 2] | 0;
 if (!$19) {
  STACKTOP = sp;
  return;
 }
 $21 = $19 + ($12 << 5) | 0;
 $__begin$03$i = $19 + ($14 << 5) | 0;
 do {
  $24 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] & 63]($24, $0);
  $__begin$03$i = $__begin$03$i + 32 | 0;
 } while (($__begin$03$i | 0) != ($21 | 0));
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8Keyboard7onKeyUpENS_3Key4CodeE($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $0 = 0, $13 = 0, $15 = 0, $2 = 0, $20 = 0, $22 = 0, $25 = 0, $3 = 0, $5 = 0, $8 = 0, $__begin$03$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if ($key >>> 0 >= 121) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(81122, 0, 77551, 57, 77657);
  _abort();
 }
 $2 = $key >>> 5;
 $3 = $this + 20 + ($2 << 2) | 0;
 $5 = 1 << ($key & 31);
 HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | $5;
 $8 = $this + 36 + ($2 << 2) | 0;
 HEAP32[$8 >> 2] = HEAP32[$8 >> 2] & ~$5;
 $13 = HEAP32[$this + 608 >> 2] | 0;
 $15 = HEAP32[$this + 604 >> 2] | 0;
 if (($13 | 0) == ($15 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = 1;
 HEAP32[$0 + 4 >> 2] = $key;
 HEAP32[$0 + 8 >> 2] = 0;
 $20 = HEAP32[$this + 596 >> 2] | 0;
 if (!$20) {
  STACKTOP = sp;
  return;
 }
 $22 = $20 + ($13 << 5) | 0;
 $__begin$03$i = $20 + ($15 << 5) | 0;
 do {
  $25 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$25 >> 2] | 0) + 24 >> 2] & 63]($25, $0);
  $__begin$03$i = $__begin$03$i + 32 | 0;
 } while (($__begin$03$i | 0) != ($22 | 0));
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5ArrayINS_6StringEE3AddIJRPKcEEEvDpOT_($this, $args) {
 $this = $this | 0;
 $args = $args | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS_6StringEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 117259);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 117411);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  __ZN5Oryol6StringC2EPKc($14 + ($16 << 3) | 0, HEAP32[$args >> 2] | 0);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 117411);
  _abort();
 }
}

function __ZN5Oryol5ArrayINS_13ResourceLabelEE3AddIJRS1_EEEvDpOT_($this, $args) {
 $this = $this | 0;
 $args = $args | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS_13ResourceLabelEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 110315);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 110393);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  HEAP32[$14 + ($16 << 2) >> 2] = HEAP32[$args >> 2];
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 110393);
  _abort();
 }
}

function __ZN5Oryol5ArrayINS_13ResourceLabelEE3AddIJjEEEvDpOT_($this, $args) {
 $this = $this | 0;
 $args = $args | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferINS_13ResourceLabelEE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 110315);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 110983);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  HEAP32[$14 + ($16 << 2) >> 2] = HEAP32[$args >> 2];
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 110983);
  _abort();
 }
}

function __ZN6ImFontD2Ev($this) {
 $this = $this | 0;
 var $$pre = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $2 = 0, $21 = 0, $3 = 0, $4 = 0;
 HEAPF32[$this >> 2] = 0.0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 1065353216;
 $2 = $this + 20 | 0;
 $3 = $this + 48 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if ($4 | 0) {
  HEAP32[$this + 44 >> 2] = 0;
  HEAP32[$this + 40 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($4);
  HEAP32[$3 >> 2] = 0;
 }
 HEAP32[$this + 52 >> 2] = 0;
 HEAPF32[$this + 56 >> 2] = 0.0;
 $10 = $this + 68 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if ($11 | 0) {
  HEAP32[$this + 64 >> 2] = 0;
  HEAP32[$this + 60 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($11);
  HEAP32[$10 >> 2] = 0;
 }
 $15 = $this + 80 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 if ($16 | 0) {
  HEAP32[$this + 76 >> 2] = 0;
  HEAP32[$this + 72 >> 2] = 0;
  __ZN5ImGui7MemFreeEPv($16);
  HEAP32[$15 >> 2] = 0;
 }
 $$pre = HEAP32[$10 >> 2] | 0;
 if ($$pre | 0) __ZN5ImGui7MemFreeEPv($$pre);
 $21 = HEAP32[$3 >> 2] | 0;
 if (!$21) return;
 __ZN5ImGui7MemFreeEPv($21);
 return;
}

function __ZN5Oryol2IO7DiscardEv() {
 var $12 = 0, $18 = 0, $2 = 0, $8 = 0;
 if (!(HEAP32[36715] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 100720, 43, 101262);
  _abort();
 } else {
  $2 = __ZN5Oryol4Core10PreRunLoopEv() | 0;
  __ZN5Oryol7RunLoop6RemoveEi($2, HEAP32[(HEAP32[36715] | 0) + 524 >> 2] | 0);
  __ZN5Oryol5_priv8ioRouter7discardEv((HEAP32[36715] | 0) + 72 | 0);
  $8 = HEAP32[36715] | 0;
  __ZN5Oryol5ArrayINS_9loadQueue9groupItemEED2Ev($8 + 552 | 0);
  HEAP32[$8 + 544 >> 2] = 0;
  HEAP32[$8 + 548 >> 2] = 0;
  $12 = $8 + 528 | 0;
  __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE7destroyEv($12);
  __ZN5Oryol5_priv13elementBufferINS_9loadQueue4itemEE7destroyEv($12);
  __ZN5Oryol5_priv8ioWorkerD2Ev($8 + 412 | 0);
  __ZN5Oryol5_priv8ioWorkerD2Ev($8 + 300 | 0);
  __ZN5Oryol5_priv8ioWorkerD2Ev($8 + 188 | 0);
  __ZN5Oryol5_priv8ioWorkerD2Ev($8 + 76 | 0);
  __ZN5Oryol5_priv14schemeRegistryD2Ev($8 + 36 | 0);
  $18 = $8 + 8 | 0;
  __ZN5Oryol3MapINS_6StringES1_E7destroyEv($18);
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEED2Ev($18);
  __ZN5Oryol6Memory4FreeEPv($8);
  HEAP32[36715] = 0;
  return;
 }
}

function __ZNK5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE6LookupERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $26 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 201, 44427);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 202, 44427);
  _abort();
 }
 $8 = HEAPU16[$id >> 1] | 0;
 $12 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $12 | 0) <= ($8 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 58761);
  _abort();
 }
 $16 = HEAP32[$this + 16 >> 2] | 0;
 if (!$16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 58761);
  _abort();
 }
 $18 = $12 + $8 | 0;
 $19 = $16 + ($18 * 608 | 0) | 0;
 $20 = $id;
 $26 = $19;
 if ((HEAP32[$20 >> 2] | 0) == (HEAP32[$26 >> 2] | 0) ? (HEAP32[$20 + 4 >> 2] | 0) == (HEAP32[$26 + 4 >> 2] | 0) : 0) if ((HEAP32[$16 + ($18 * 608 | 0) + 8 >> 2] | 0) == 3) {
  $$0 = $19;
  return $$0 | 0;
 }
 $$0 = 0;
 return $$0 | 0;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6LookupERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $26 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 201, 44040);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 202, 44040);
  _abort();
 }
 $8 = HEAPU16[$id >> 1] | 0;
 $12 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $12 | 0) <= ($8 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 55213);
  _abort();
 }
 $16 = HEAP32[$this + 16 >> 2] | 0;
 if (!$16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 55213);
  _abort();
 }
 $18 = $12 + $8 | 0;
 $19 = $16 + ($18 * 776 | 0) | 0;
 $20 = $id;
 $26 = $19;
 if ((HEAP32[$20 >> 2] | 0) == (HEAP32[$26 >> 2] | 0) ? (HEAP32[$20 + 4 >> 2] | 0) == (HEAP32[$26 + 4 >> 2] | 0) : 0) if ((HEAP32[$16 + ($18 * 776 | 0) + 8 >> 2] | 0) == 3) {
  $$0 = $19;
  return $$0 | 0;
 }
 $$0 = 0;
 return $$0 | 0;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE6LookupERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $26 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 201, 48506);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 202, 48506);
  _abort();
 }
 $8 = HEAPU16[$id >> 1] | 0;
 $12 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $12 | 0) <= ($8 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 58143);
  _abort();
 }
 $16 = HEAP32[$this + 16 >> 2] | 0;
 if (!$16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 58143);
  _abort();
 }
 $18 = $12 + $8 | 0;
 $19 = $16 + ($18 * 3712 | 0) | 0;
 $20 = $id;
 $26 = $19;
 if ((HEAP32[$20 >> 2] | 0) == (HEAP32[$26 >> 2] | 0) ? (HEAP32[$20 + 4 >> 2] | 0) == (HEAP32[$26 + 4 >> 2] | 0) : 0) if ((HEAP32[$16 + ($18 * 3712 | 0) + 8 >> 2] | 0) == 3) {
  $$0 = $19;
  return $$0 | 0;
 }
 $$0 = 0;
 return $$0 | 0;
}

function __ZN13CommandWindowD0Ev($this) {
 $this = $this | 0;
 var $$pre4$i$i$i$i = 0, $$pre5$i$i2$pre$phi$i$iZZZZ2D = 0, $0 = 0, $10 = 0, $13 = 0, $15 = 0, $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 1888;
 $0 = $this + 36 | 0;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP32[$this + 56 >> 2] = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $$pre4$i$i$i$i = $this + 44 | 0;
 if (!$3) $$pre5$i$i2$pre$phi$i$iZZZZ2D = $this + 48 | 0; else {
  $5 = HEAP32[$$pre4$i$i$i$i >> 2] | 0;
  $6 = $this + 48 | 0;
  if (($5 | 0) < (HEAP32[$6 >> 2] | 0)) {
   __ZN5Oryol6StringD2Ev($3 + ($5 * 12 | 0) | 0);
   $10 = $5 + 1 | 0;
   if (($10 | 0) < (HEAP32[$6 >> 2] | 0)) {
    $15 = $10;
    do {
     __ZN5Oryol6StringD2Ev((HEAP32[$0 >> 2] | 0) + ($15 * 12 | 0) | 0);
     $15 = $15 + 1 | 0;
    } while (($15 | 0) < (HEAP32[$6 >> 2] | 0));
   }
   $13 = HEAP32[$0 >> 2] | 0;
  } else $13 = $3;
  __ZN5Oryol6Memory4FreeEPv($13);
  $$pre5$i$i2$pre$phi$i$iZZZZ2D = $6;
 }
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 HEAP32[$$pre4$i$i$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$i$iZZZZ2D >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZN6SoLoud14sdlstatic_initEPNS_6SoloudEjjjj($aSoloud, $aFlags, $aSamplerate, $aBuffer, $aChannels) {
 $aSoloud = $aSoloud | 0;
 $aFlags = $aFlags | 0;
 $aSamplerate = $aSamplerate | 0;
 $aBuffer = $aBuffer | 0;
 $aChannels = $aChannels | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $20 = 0, $as = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $as = sp;
 HEAP32[$as >> 2] = $aSamplerate;
 $0 = $as + 4 | 0;
 HEAP16[$0 >> 1] = -32480;
 HEAP8[$as + 6 >> 0] = $aChannels;
 HEAP16[$as + 8 >> 1] = $aBuffer;
 HEAP32[$as + 16 >> 2] = 7;
 HEAP32[$as + 20 >> 2] = $aSoloud;
 if ((_SDL_OpenAudio($as | 0, 146836) | 0) < 0) {
  HEAP16[$0 >> 1] = -32752;
  $10 = (_SDL_OpenAudio($as | 0, 146836) | 0) > -1;
  $11 = HEAP32[36710] | 0;
  if ($10 & ($11 & 65535) << 16 >> 16 == -32752) $20 = $11 >>> 16 & 255; else {
   $$0 = 7;
   STACKTOP = sp;
   return $$0 | 0;
  }
 } else $20 = HEAP8[146842] | 0;
 __ZN6SoLoud6Soloud8postinitEjjjj($aSoloud, HEAP32[36709] | 0, HEAPU16[73422] | 0, $aFlags, $20 & 255);
 HEAP32[$aSoloud + 8 >> 2] = 131;
 _SDL_PauseAudio(0);
 HEAP32[$aSoloud + 4152 >> 2] = 84323;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6LookupERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $26 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 201, 45497);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 202, 45497);
  _abort();
 }
 $8 = HEAPU16[$id >> 1] | 0;
 $12 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $12 | 0) <= ($8 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 55102);
  _abort();
 }
 $16 = HEAP32[$this + 16 >> 2] | 0;
 if (!$16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 55102);
  _abort();
 }
 $18 = $12 + $8 | 0;
 $19 = $16 + ($18 * 400 | 0) | 0;
 $20 = $id;
 $26 = $19;
 if ((HEAP32[$20 >> 2] | 0) == (HEAP32[$26 >> 2] | 0) ? (HEAP32[$20 + 4 >> 2] | 0) == (HEAP32[$26 + 4 >> 2] | 0) : 0) if ((HEAP32[$16 + ($18 * 400 | 0) + 8 >> 2] | 0) == 3) {
  $$0 = $19;
  return $$0 | 0;
 }
 $$0 = 0;
 return $$0 | 0;
}

function __ZN5Oryol5ArrayIPaE3AddIJRS1_EEEvDpOT_($this, $args) {
 $this = $this | 0;
 $args = $args | 0;
 var $0 = 0, $1 = 0, $10 = 0, $14 = 0, $16 = 0, $2 = 0, $5 = 0, $7 = 0, $growBy$0$i = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 12 | 0;
 do if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 >> 1;
  $7 = HEAP32[$this + 16 >> 2] | 0;
  if (($5 | 0) < ($7 | 0)) $growBy$0$i = $7; else {
   $10 = HEAP32[$this + 20 >> 2] | 0;
   $growBy$0$i = ($5 | 0) > ($10 | 0) ? $10 : $5;
  }
  if (($growBy$0$i | 0) > 0) {
   __ZN5Oryol5_priv13elementBufferIPaE5allocEii($this, $growBy$0$i + $1 | 0, 0);
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 123247, 478, 123311);
   _abort();
  }
 } while (0);
 $14 = HEAP32[$this >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 123634);
  _abort();
 }
 $16 = HEAP32[$2 >> 2] | 0;
 if (($16 | 0) < (HEAP32[$0 >> 2] | 0)) {
  HEAP32[$2 >> 2] = $16 + 1;
  HEAP32[$14 + ($16 << 2) >> 2] = HEAP32[$args >> 2];
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 417, 123634);
  _abort();
 }
}

function __ZNK5Oryol5_priv24gfxResourceContainerBase17QueryResourceInfoERKNS_2IdE($agg$result, $this, $resId) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $resId = $resId | 0;
 if (!(__ZNK5Oryol21resourceContainerBase7isValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 48725, 392, 59210);
  _abort();
 }
 switch (HEAPU16[$resId + 2 >> 1] | 0 | 0) {
 case 0:
  {
   __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE17QueryResourceInfoERKNS_2IdE($agg$result, $this + 400 | 0, $resId);
   return;
  }
 case 1:
  {
   __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE17QueryResourceInfoERKNS_2IdE($agg$result, $this + 272 | 0, $resId);
   return;
  }
 case 2:
  {
   __ZNK5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE17QueryResourceInfoERKNS_2IdE($agg$result, $this + 336 | 0, $resId);
   return;
  }
 case 3:
  {
   __ZNK5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE17QueryResourceInfoERKNS_2IdE($agg$result, $this + 464 | 0, $resId);
   return;
  }
 default:
  {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122840, 0, 48725, 404, 59210);
   _abort();
  }
 }
}

function __ZN5Oryol3URLaSERKS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 if (($rhs | 0) == ($this | 0)) return;
 HEAP32[$this >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($this, $rhs);
 HEAP16[$this + 4 >> 1] = HEAP16[$rhs + 4 >> 1] | 0;
 HEAP16[$this + 6 >> 1] = HEAP16[$rhs + 6 >> 1] | 0;
 HEAP16[$this + 8 >> 1] = HEAP16[$rhs + 8 >> 1] | 0;
 HEAP16[$this + 10 >> 1] = HEAP16[$rhs + 10 >> 1] | 0;
 HEAP16[$this + 12 >> 1] = HEAP16[$rhs + 12 >> 1] | 0;
 HEAP16[$this + 14 >> 1] = HEAP16[$rhs + 14 >> 1] | 0;
 HEAP16[$this + 16 >> 1] = HEAP16[$rhs + 16 >> 1] | 0;
 HEAP16[$this + 18 >> 1] = HEAP16[$rhs + 18 >> 1] | 0;
 HEAP16[$this + 20 >> 1] = HEAP16[$rhs + 20 >> 1] | 0;
 HEAP16[$this + 22 >> 1] = HEAP16[$rhs + 22 >> 1] | 0;
 HEAP16[$this + 24 >> 1] = HEAP16[$rhs + 24 >> 1] | 0;
 HEAP16[$this + 26 >> 1] = HEAP16[$rhs + 26 >> 1] | 0;
 HEAP16[$this + 28 >> 1] = HEAP16[$rhs + 28 >> 1] | 0;
 HEAP16[$this + 30 >> 1] = HEAP16[$rhs + 30 >> 1] | 0;
 HEAP16[$this + 32 >> 1] = HEAP16[$rhs + 32 >> 1] | 0;
 HEAP16[$this + 34 >> 1] = HEAP16[$rhs + 34 >> 1] | 0;
 HEAP8[$this + 36 >> 0] = HEAP8[$rhs + 36 >> 0] | 0;
 return;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv8pipelineENS_13PipelineSetupEE10QueryStateERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 256, 58572);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 257, 58572);
  _abort();
 }
 $8 = HEAPU16[$id >> 1] | 0;
 $12 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $12 | 0) <= ($8 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 58761);
  _abort();
 }
 $16 = HEAP32[$this + 16 >> 2] | 0;
 if (!$16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 58761);
  _abort();
 }
 $18 = $12 + $8 | 0;
 $19 = $id;
 $26 = $16 + ($18 * 608 | 0) | 0;
 if (!((HEAP32[$19 >> 2] | 0) == (HEAP32[$26 >> 2] | 0) ? (HEAP32[$19 + 4 >> 2] | 0) == (HEAP32[$26 + 4 >> 2] | 0) : 0)) {
  $$0 = 6;
  return $$0 | 0;
 }
 $$0 = HEAP32[$16 + ($18 * 608 | 0) + 8 >> 2] | 0;
 return $$0 | 0;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $6 = 0;
 do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else if (($this | 0) == (HEAP32[$info >> 2] | 0)) {
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    HEAP32[$14 >> 2] = $current_ptr;
    $20 = $info + 40 | 0;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
    if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) HEAP8[$info + 54 >> 0] = 1;
    HEAP32[$info + 44 >> 2] = 4;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN10ImDrawList12PushClipRectERK6ImVec4($this, $clip_rect) {
 $this = $this | 0;
 $clip_rect = $clip_rect | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $24 = 0, $5 = 0;
 $0 = $this + 52 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 56 | 0;
 if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 + 1 | 0;
  if (!$1) $10 = 8; else $10 = (($1 | 0) / 2 | 0) + $1 | 0;
  $11 = ($10 | 0) > ($5 | 0) ? $10 : $5;
  if (($1 | 0) < ($11 | 0)) {
   $14 = __ZN5ImGui8MemAllocEj($11 << 4) | 0;
   $15 = $this + 60 | 0;
   _memcpy($14 | 0, HEAP32[$15 >> 2] | 0, HEAP32[$0 >> 2] << 4 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$15 >> 2] | 0);
   HEAP32[$15 >> 2] = $14;
   HEAP32[$2 >> 2] = $11;
   $21 = HEAP32[$0 >> 2] | 0;
  } else $21 = $1;
 } else $21 = $1;
 HEAP32[$0 >> 2] = $21 + 1;
 $24 = (HEAP32[$this + 60 >> 2] | 0) + ($21 << 4) | 0;
 HEAP32[$24 >> 2] = HEAP32[$clip_rect >> 2];
 HEAP32[$24 + 4 >> 2] = HEAP32[$clip_rect + 4 >> 2];
 HEAP32[$24 + 8 >> 2] = HEAP32[$clip_rect + 8 >> 2];
 HEAP32[$24 + 12 >> 2] = HEAP32[$clip_rect + 12 >> 2];
 __ZN10ImDrawList14UpdateClipRectEv($this);
 return;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE10QueryStateERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 256, 56859);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 257, 56859);
  _abort();
 }
 $8 = HEAPU16[$id >> 1] | 0;
 $12 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $12 | 0) <= ($8 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 55213);
  _abort();
 }
 $16 = HEAP32[$this + 16 >> 2] | 0;
 if (!$16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 55213);
  _abort();
 }
 $18 = $12 + $8 | 0;
 $19 = $id;
 $26 = $16 + ($18 * 776 | 0) | 0;
 if (!((HEAP32[$19 >> 2] | 0) == (HEAP32[$26 >> 2] | 0) ? (HEAP32[$19 + 4 >> 2] | 0) == (HEAP32[$26 + 4 >> 2] | 0) : 0)) {
  $$0 = 6;
  return $$0 | 0;
 }
 $$0 = HEAP32[$16 + ($18 * 776 | 0) + 8 >> 2] | 0;
 return $$0 | 0;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE10QueryStateERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 256, 57962);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 257, 57962);
  _abort();
 }
 $8 = HEAPU16[$id >> 1] | 0;
 $12 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $12 | 0) <= ($8 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 58143);
  _abort();
 }
 $16 = HEAP32[$this + 16 >> 2] | 0;
 if (!$16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 58143);
  _abort();
 }
 $18 = $12 + $8 | 0;
 $19 = $id;
 $26 = $16 + ($18 * 3712 | 0) | 0;
 if (!((HEAP32[$19 >> 2] | 0) == (HEAP32[$26 >> 2] | 0) ? (HEAP32[$19 + 4 >> 2] | 0) == (HEAP32[$26 + 4 >> 2] | 0) : 0)) {
  $$0 = 6;
  return $$0 | 0;
 }
 $$0 = HEAP32[$16 + ($18 * 3712 | 0) + 8 >> 2] | 0;
 return $$0 | 0;
}

function __ZN5ImGui9PlotLinesEPKcPKfiiS1_ff6ImVec2i($label, $values, $values_count, $values_offset, $overlay_text, $scale_min, $scale_max, $graph_size, $stride) {
 $label = $label | 0;
 $values = $values | 0;
 $values_count = $values_count | 0;
 $values_offset = $values_offset | 0;
 $overlay_text = $overlay_text | 0;
 $scale_min = +$scale_min;
 $scale_max = +$scale_max;
 $graph_size = $graph_size | 0;
 $stride = $stride | 0;
 var $0 = 0, $2 = 0, $7 = 0, $8 = 0, $data = 0, $tmpcast$byval_copy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $tmpcast$byval_copy = sp + 16 | 0;
 $data = sp + 8 | 0;
 $0 = sp;
 HEAP32[$data >> 2] = $values;
 HEAP32[$data + 4 >> 2] = $stride;
 $2 = $graph_size;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $8 = $0;
 HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$8 + 4 >> 2] = $7;
 HEAP32[$tmpcast$byval_copy >> 2] = HEAP32[$0 >> 2];
 HEAP32[$tmpcast$byval_copy + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 __ZN5ImGui6PlotExE13ImGuiPlotTypePKcPFfPviES3_iiS2_ff6ImVec2(0, $label, 3, $data, $values_count, $values_offset, $overlay_text, $scale_min, $scale_max, $tmpcast$byval_copy);
 STACKTOP = sp;
 return;
}

function _fmt_u($0, $1, $s) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $s = $s | 0;
 var $$0$lcssa = 0, $$01$lcssa$off0 = 0, $$05 = 0, $$1$lcssa = 0, $$12 = 0, $$lcssa19 = 0, $13 = 0, $14 = 0, $25 = 0, $28 = 0, $7 = 0, $8 = 0, $9 = 0, $y$03 = 0;
 if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 4294967295) {
  $$05 = $s;
  $7 = $0;
  $8 = $1;
  while (1) {
   $9 = ___uremdi3($7 | 0, $8 | 0, 10, 0) | 0;
   $13 = $$05 + -1 | 0;
   HEAP8[$13 >> 0] = $9 | 48;
   $14 = ___udivdi3($7 | 0, $8 | 0, 10, 0) | 0;
   if ($8 >>> 0 > 9 | ($8 | 0) == 9 & $7 >>> 0 > 4294967295) {
    $$05 = $13;
    $7 = $14;
    $8 = tempRet0;
   } else {
    $$lcssa19 = $13;
    $28 = $14;
    break;
   }
  }
  $$0$lcssa = $$lcssa19;
  $$01$lcssa$off0 = $28;
 } else {
  $$0$lcssa = $s;
  $$01$lcssa$off0 = $0;
 }
 if (!$$01$lcssa$off0) $$1$lcssa = $$0$lcssa; else {
  $$12 = $$0$lcssa;
  $y$03 = $$01$lcssa$off0;
  while (1) {
   $25 = $$12 + -1 | 0;
   HEAP8[$25 >> 0] = ($y$03 >>> 0) % 10 | 0 | 48;
   if ($y$03 >>> 0 < 10) {
    $$1$lcssa = $25;
    break;
   } else {
    $$12 = $25;
    $y$03 = ($y$03 >>> 0) / 10 | 0;
   }
  }
 }
 return $$1$lcssa | 0;
}

function __ZN13CommandWindowD2Ev($this) {
 $this = $this | 0;
 var $$pre4$i$i$i = 0, $$pre5$i$i2$pre$phi$iZZZZ2D = 0, $0 = 0, $10 = 0, $13 = 0, $15 = 0, $3 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 1888;
 $0 = $this + 36 | 0;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP32[$this + 56 >> 2] = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 $$pre4$i$i$i = $this + 44 | 0;
 if (!$3) $$pre5$i$i2$pre$phi$iZZZZ2D = $this + 48 | 0; else {
  $5 = HEAP32[$$pre4$i$i$i >> 2] | 0;
  $6 = $this + 48 | 0;
  if (($5 | 0) < (HEAP32[$6 >> 2] | 0)) {
   __ZN5Oryol6StringD2Ev($3 + ($5 * 12 | 0) | 0);
   $10 = $5 + 1 | 0;
   if (($10 | 0) < (HEAP32[$6 >> 2] | 0)) {
    $15 = $10;
    do {
     __ZN5Oryol6StringD2Ev((HEAP32[$0 >> 2] | 0) + ($15 * 12 | 0) | 0);
     $15 = $15 + 1 | 0;
    } while (($15 | 0) < (HEAP32[$6 >> 2] | 0));
   }
   $13 = HEAP32[$0 >> 2] | 0;
  } else $13 = $3;
  __ZN5Oryol6Memory4FreeEPv($13);
  $$pre5$i$i2$pre$phi$iZZZZ2D = $6;
 }
 HEAP32[$0 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 HEAP32[$$pre4$i$i$i >> 2] = 0;
 HEAP32[$$pre5$i$i2$pre$phi$iZZZZ2D >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 __ZN10WindowBaseD2Ev($this);
 return;
}

function __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE10QueryStateERKNS_2IdE($this, $id) {
 $this = $this | 0;
 $id = $id | 0;
 var $$0 = 0, $12 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48917, 256, 57491);
  _abort();
 }
 if ((HEAP16[$id + 2 >> 1] | 0) != (HEAP16[$this + 12 >> 1] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(55072, 0, 48917, 257, 57491);
  _abort();
 }
 $8 = HEAPU16[$id >> 1] | 0;
 $12 = HEAP32[$this + 24 >> 2] | 0;
 if (((HEAP32[$this + 28 >> 2] | 0) - $12 | 0) <= ($8 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123159, 0, 123391, 264, 55102);
  _abort();
 }
 $16 = HEAP32[$this + 16 >> 2] | 0;
 if (!$16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123587, 0, 123391, 265, 55102);
  _abort();
 }
 $18 = $12 + $8 | 0;
 $19 = $id;
 $26 = $16 + ($18 * 400 | 0) | 0;
 if (!((HEAP32[$19 >> 2] | 0) == (HEAP32[$26 >> 2] | 0) ? (HEAP32[$19 + 4 >> 2] | 0) == (HEAP32[$26 + 4 >> 2] | 0) : 0)) {
  $$0 = 6;
  return $$0 | 0;
 }
 $$0 = HEAP32[$16 + ($18 * 400 | 0) + 8 >> 2] | 0;
 return $$0 | 0;
}

function __ZN5Oryol11ShaderSetup12programEntryC2Ev($this) {
 $this = $this | 0;
 var $20 = 0, dest = 0, stop = 0;
 __ZN5Oryol6StringC2Ev($this);
 __ZN5Oryol6StringC2Ev($this + 8 | 0);
 __ZN5Oryol6StringC2Ev($this + 16 | 0);
 __ZN5Oryol6StringC2Ev($this + 24 | 0);
 __ZN5Oryol6StringC2Ev($this + 32 | 0);
 __ZN5Oryol6StringC2Ev($this + 40 | 0);
 __ZN5Oryol6StringC2Ev($this + 48 | 0);
 __ZN5Oryol6StringC2Ev($this + 56 | 0);
 __ZN5Oryol6StringC2Ev($this + 64 | 0);
 __ZN5Oryol6StringC2Ev($this + 72 | 0);
 __ZN5Oryol6StringC2Ev($this + 80 | 0);
 __ZN5Oryol6StringC2Ev($this + 88 | 0);
 __ZN5Oryol6StringC2Ev($this + 96 | 0);
 __ZN5Oryol6StringC2Ev($this + 104 | 0);
 __ZN5Oryol6StringC2Ev($this + 112 | 0);
 __ZN5Oryol6StringC2Ev($this + 120 | 0);
 __ZN5Oryol6StringC2Ev($this + 128 | 0);
 __ZN5Oryol6StringC2Ev($this + 136 | 0);
 __ZN5Oryol6StringC2Ev($this + 144 | 0);
 __ZN5Oryol6StringC2Ev($this + 152 | 0);
 $20 = $this + 240 | 0;
 dest = $this + 160 | 0;
 stop = dest + 80 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN5Oryol12VertexLayoutC2Ev($20);
 return;
}

function __ZN6SoLoud19AudioSourceInstance4seekEdPfj($this, $aSeconds, $mScratch, $mScratchSize) {
 $this = $this | 0;
 $aSeconds = +$aSeconds;
 $mScratch = $mScratch | 0;
 $mScratchSize = $mScratchSize | 0;
 var $0 = 0, $14 = 0, $16 = 0, $2 = 0.0, $offset$0 = 0.0, $samples_to_discard$0$ = 0, $samples_to_discard$01 = 0;
 $0 = $this + 72 | 0;
 $2 = $aSeconds - +HEAPF64[$0 >> 3];
 if ($2 < 0.0) if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$this >> 2] | 0) + 20 >> 2] & 63]($this) | 0)) $offset$0 = $aSeconds; else return; else $offset$0 = $2;
 $14 = ~~+Math_floor(+($offset$0 * +HEAPF32[$this + 56 >> 2]));
 if ($14 | 0) {
  $16 = $mScratchSize >>> 1;
  $samples_to_discard$01 = $14;
  while (1) {
   $samples_to_discard$0$ = ($16 | 0) > ($samples_to_discard$01 | 0) ? $samples_to_discard$01 : $16;
   FUNCTION_TABLE_viii[HEAP32[(HEAP32[$this >> 2] | 0) + 8 >> 2] & 7]($this, $mScratch, $samples_to_discard$0$);
   if (($samples_to_discard$01 | 0) == ($samples_to_discard$0$ | 0)) break; else $samples_to_discard$01 = $samples_to_discard$01 - $samples_to_discard$0$ | 0;
  }
 }
 HEAPF64[$0 >> 3] = $aSeconds;
 return;
}

function __ZN5Oryol5_priv8ioWorker16fileSystemForURLERKNS_3URLE($this, $url) {
 $this = $this | 0;
 $url = $url | 0;
 var $$sroa$0$0 = 0, $0 = 0, $1 = 0, $4 = 0, $6 = 0, $8 = 0, $scheme = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $scheme = sp + 16 | 0;
 $0 = sp + 8 | 0;
 __ZNK5Oryol3URL6SchemeEv($0, $url);
 __ZN5Oryol10StringAtomC2ERKNS_6StringE($scheme, $0);
 __ZN5Oryol6StringD2Ev($0);
 $1 = $this + 8 | 0;
 if (!(__ZNK5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE8ContainsERKS1_($1, $scheme) | 0)) {
  $8 = HEAP32[$scheme >> 2] | 0;
  HEAP32[$vararg_buffer >> 2] = HEAP32[(($8 | 0) == 0 ? 13684 : $8 + 12 | 0) >> 2];
  __ZN5Oryol3Log4WarnEPKcz(107604, $vararg_buffer);
  $$sroa$0$0 = 0;
  STACKTOP = sp;
  return $$sroa$0$0 | 0;
 }
 $4 = HEAP32[(__ZN5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEEixERKS1_($1, $scheme) | 0) >> 2] | 0;
 if (!$4) {
  $$sroa$0$0 = 0;
  STACKTOP = sp;
  return $$sroa$0$0 | 0;
 }
 $6 = $4 + 4 | 0;
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
 $$sroa$0$0 = $4;
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZN5Oryol5_priv12imguiWrapper5SetupEv($this) {
 $this = $this | 0;
 var $2 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  HEAP32[36708] = $this;
  $2 = __ZN5ImGui5GetIOEv() | 0;
  HEAP32[$2 + 16 >> 2] = 0;
  HEAP32[$2 + 36 >> 2] = 53;
  HEAP32[$2 + 40 >> 2] = 58;
  HEAP32[$2 + 44 >> 2] = 57;
  HEAP32[$2 + 48 >> 2] = 60;
  HEAP32[$2 + 52 >> 2] = 59;
  HEAP32[$2 + 64 >> 2] = 63;
  HEAP32[$2 + 68 >> 2] = 64;
  HEAP32[$2 + 72 >> 2] = 56;
  HEAP32[$2 + 76 >> 2] = 54;
  HEAP32[$2 + 80 >> 2] = 52;
  HEAP32[$2 + 84 >> 2] = 51;
  HEAP32[$2 + 88 >> 2] = 19;
  HEAP32[$2 + 92 >> 2] = 21;
  HEAP32[$2 + 96 >> 2] = 40;
  HEAP32[$2 + 100 >> 2] = 42;
  HEAP32[$2 + 104 >> 2] = 43;
  HEAP32[$2 + 108 >> 2] = 44;
  HEAP32[$2 + 160 >> 2] = 130;
  HEAP32[$this + 4 >> 2] = __ZN5Oryol3Gfx17PushResourceLabelEv() | 0;
  __ZN5Oryol5_priv12imguiWrapper21setupMeshAndDrawStateEv($this);
  __ZN5Oryol5_priv12imguiWrapper16setupFontTextureEv($this);
  __ZN5Oryol3Gfx16PopResourceLabelEv() | 0;
  HEAP8[$this >> 0] = 1;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(79985, 0, 80002, 21, 80060);
  _abort();
 }
}

function __ZN16kc85_audiosourceC2Ev($this) {
 $this = $this | 0;
 var $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0;
 __ZN6SoLoud11AudioSourceC2Ev($this);
 HEAP32[$this >> 2] = 708;
 HEAP32[$this + 104 >> 2] = 44100;
 HEAP8[$this + 112 >> 0] = 0;
 $2 = $this + 116 | 0;
 $4 = $this + 8328 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP16[$2 + 12 >> 1] = 0;
 HEAP8[$2 + 14 >> 0] = 0;
 $6 = $this + 136 | 0;
 do {
  $5 = $6;
  HEAP32[$5 >> 2] = -1;
  HEAP32[$5 + 4 >> 2] = -1;
  HEAP32[$6 + 8 >> 2] = 0;
  HEAP32[$6 + 12 >> 2] = 0;
  $6 = $6 + 16 | 0;
 } while (($6 | 0) != ($4 | 0));
 HEAP8[$this + 8328 >> 0] = 0;
 $15 = $this + 8332 | 0;
 $17 = $this + 16544 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP16[$15 + 12 >> 1] = 0;
 HEAP8[$15 + 14 >> 0] = 0;
 $19 = $this + 8352 | 0;
 do {
  $18 = $19;
  HEAP32[$18 >> 2] = -1;
  HEAP32[$18 + 4 >> 2] = -1;
  HEAP32[$19 + 8 >> 2] = 0;
  HEAP32[$19 + 12 >> 2] = 0;
  $19 = $19 + 16 | 0;
 } while (($19 | 0) != ($17 | 0));
 HEAP32[$this + 16 >> 2] = 2;
 return;
}

function __ZN5Oryol9MeshSetupC2Ev($this) {
 $this = $this | 0;
 var $2 = 0, $28 = 0, $5 = 0;
 HEAP32[$this >> 2] = -1;
 HEAP32[$this + 4 >> 2] = -1;
 __ZN5Oryol12VertexLayoutC2Ev($this + 8 | 0);
 $2 = $this + 76 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP8[$2 + 12 >> 0] = 0;
 __ZN5Oryol7Locator9NonSharedEv($this + 92 | 0);
 $5 = $this + 104 | 0;
 HEAP32[$5 >> 2] = -1;
 HEAP32[$5 + 4 >> 2] = -1;
 HEAP32[$this + 112 >> 2] = 0;
 HEAP32[$this + 116 >> 2] = -1;
 HEAP32[$this + 120 >> 2] = 0;
 HEAP32[$this + 124 >> 2] = 0;
 HEAP32[$this + 128 >> 2] = 0;
 HEAP32[$this + 132 >> 2] = 0;
 HEAP32[$this + 136 >> 2] = 0;
 HEAP32[$this + 140 >> 2] = 0;
 HEAP32[$this + 144 >> 2] = 0;
 HEAP32[$this + 148 >> 2] = 0;
 HEAP32[$this + 152 >> 2] = 0;
 HEAP32[$this + 156 >> 2] = 0;
 HEAP32[$this + 160 >> 2] = 0;
 HEAP32[$this + 164 >> 2] = 0;
 HEAP32[$this + 168 >> 2] = 0;
 HEAP32[$this + 172 >> 2] = 0;
 HEAP32[$this + 176 >> 2] = 0;
 HEAP32[$this + 180 >> 2] = 0;
 HEAP32[$this + 184 >> 2] = 0;
 $28 = $this + 188 | 0;
 HEAP8[$28 >> 0] = HEAP8[$28 >> 0] & -16;
 return;
}

function _fflush($f) {
 $f = $f | 0;
 var $$0 = 0, $$012 = 0, $$014 = 0, $24 = 0, $27 = 0, $6 = 0, $phitmp = 0, $r$0$lcssa = 0, $r$03 = 0, $r$1 = 0;
 do if (!$f) {
  if (!(HEAP32[3516] | 0)) $27 = 0; else $27 = _fflush(HEAP32[3516] | 0) | 0;
  ___lock(162804);
  $$012 = HEAP32[40700] | 0;
  if (!$$012) $r$0$lcssa = $27; else {
   $$014 = $$012;
   $r$03 = $27;
   while (1) {
    if ((HEAP32[$$014 + 76 >> 2] | 0) > -1) $24 = ___lockfile($$014) | 0; else $24 = 0;
    if ((HEAP32[$$014 + 20 >> 2] | 0) >>> 0 > (HEAP32[$$014 + 28 >> 2] | 0) >>> 0) $r$1 = ___fflush_unlocked($$014) | 0 | $r$03; else $r$1 = $r$03;
    if ($24 | 0) ___unlockfile($$014);
    $$014 = HEAP32[$$014 + 56 >> 2] | 0;
    if (!$$014) {
     $r$0$lcssa = $r$1;
     break;
    } else $r$03 = $r$1;
   }
  }
  ___unlock(162804);
  $$0 = $r$0$lcssa;
 } else {
  if ((HEAP32[$f + 76 >> 2] | 0) <= -1) {
   $$0 = ___fflush_unlocked($f) | 0;
   break;
  }
  $phitmp = (___lockfile($f) | 0) == 0;
  $6 = ___fflush_unlocked($f) | 0;
  if ($phitmp) $$0 = $6; else {
   ___unlockfile($f);
   $$0 = $6;
  }
 } while (0);
 return $$0 | 0;
}

function __ZN5Oryol9MeshSetup14FullScreenQuadEb($agg$result, $flipV) {
 $agg$result = $agg$result | 0;
 $flipV = $flipV | 0;
 var $1 = 0, $12 = 0, $2 = 0, $5 = 0, dest = 0, stop = 0;
 HEAP32[$agg$result >> 2] = -1;
 HEAP32[$agg$result + 4 >> 2] = -1;
 $1 = $agg$result + 8 | 0;
 __ZN5Oryol12VertexLayoutC2Ev($1);
 $2 = $agg$result + 76 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP8[$2 + 12 >> 0] = 0;
 __ZN5Oryol7Locator9NonSharedEv($agg$result + 92 | 0);
 $5 = $agg$result + 104 | 0;
 HEAP32[$5 >> 2] = -1;
 HEAP32[$5 + 4 >> 2] = -1;
 HEAP32[$agg$result + 112 >> 2] = 0;
 HEAP32[$agg$result + 116 >> 2] = -1;
 $12 = $agg$result + 188 | 0;
 dest = $agg$result + 120 | 0;
 stop = dest + 68 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP8[$12 >> 0] = HEAP8[$12 >> 0] & -16 | 8;
 HEAP8[$agg$result + 88 >> 0] = $flipV & 1;
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($1, 0, 2) | 0;
 __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($1, 2, 1) | 0;
 return;
}

function __ZN12DisasmWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $1 = 0, $2 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 4 | 0;
 $1 = sp;
 __ZN10WindowBase7setNameEPKc($this, 35628);
 $2 = $this + 20 | 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 35641);
 if (($2 | 0) != ($0 | 0)) {
  HEAP32[$2 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($2, $0);
 }
 HEAP8[$this + 32 >> 0] = 1;
 HEAP16[$this + 30 >> 1] = 0;
 $6 = $this + 24 | 0;
 HEAP8[$6 >> 0] = 48;
 HEAP8[$6 + 1 >> 0] = 48;
 HEAP8[$6 + 2 >> 0] = 48;
 HEAP8[$6 + 3 >> 0] = 48;
 HEAP8[$this + 28 >> 0] = 0;
 HEAP32[$0 >> 2] = 0;
 $8 = $this + 36 | 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($1, 35647);
 if (($8 | 0) != ($1 | 0)) {
  HEAP32[$8 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($8, $1);
 }
 HEAP8[$this + 48 >> 0] = 1;
 HEAP16[$this + 46 >> 1] = 64;
 HEAP8[$this + 40 >> 0] = 48;
 HEAP8[$this + 41 >> 0] = 48;
 HEAP8[$this + 42 >> 0] = 52;
 HEAP8[$this + 43 >> 0] = 48;
 HEAP8[$this + 44 >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8Keyboard6onCharEw($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $0 = 0, $12 = 0, $14 = 0, $19 = 0, $21 = 0, $24 = 0, $4 = 0, $5 = 0, $__begin$03$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (HEAP8[$this + 588 >> 0] | 0) {
  $4 = $this + 68 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (($5 | 0) < 128) {
   HEAP32[$4 >> 2] = $5 + 1;
   HEAP32[$this + 72 + ($5 << 2) >> 2] = $c;
   HEAP32[$this + 72 + (HEAP32[$4 >> 2] << 2) >> 2] = 0;
  }
 }
 $12 = HEAP32[$this + 608 >> 2] | 0;
 $14 = HEAP32[$this + 604 >> 2] | 0;
 if (($12 | 0) == ($14 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = 3;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = $c;
 $19 = HEAP32[$this + 596 >> 2] | 0;
 if (!$19) {
  STACKTOP = sp;
  return;
 }
 $21 = $19 + ($12 << 5) | 0;
 $__begin$03$i = $19 + ($14 << 5) | 0;
 do {
  $24 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] & 63]($24, $0);
  $__begin$03$i = $__begin$03$i + 32 | 0;
 } while (($__begin$03$i | 0) != ($21 | 0));
 STACKTOP = sp;
 return;
}

function __ZN5ImGui16CalcListClippingEifPiS0_($items_count, $items_height, $out_items_display_start, $out_items_display_end) {
 $items_count = $items_count | 0;
 $items_height = +$items_height;
 $out_items_display_start = $out_items_display_start | 0;
 $out_items_display_end = $out_items_display_end | 0;
 var $1 = 0, $11 = 0, $20 = 0, $21 = 0, $6 = 0.0, $storemerge = 0, $storemerge1 = 0;
 $1 = HEAP32[38201] | 0;
 if (HEAP8[157996] | 0) {
  $storemerge = $items_count;
  $storemerge1 = 0;
  HEAP32[$out_items_display_start >> 2] = $storemerge1;
  HEAP32[$out_items_display_end >> 2] = $storemerge;
  return;
 }
 $6 = +HEAPF32[$1 + 168 >> 2];
 $11 = ~~((+HEAPF32[$1 + 440 >> 2] - $6) / $items_height);
 $20 = ($11 | 0) < 0 ? 0 : ($11 | 0) > ($items_count | 0) ? $items_count : $11;
 $21 = ~~((+HEAPF32[$1 + 448 >> 2] - $6) / $items_height) + 1 | 0;
 $storemerge = ($21 | 0) < ($20 | 0) ? $20 : ($21 | 0) > ($items_count | 0) ? $items_count : $21;
 $storemerge1 = $20;
 HEAP32[$out_items_display_start >> 2] = $storemerge1;
 HEAP32[$out_items_display_end >> 2] = $storemerge;
 return;
}

function __ZN10ImDrawList15AddCircleFilledERK6ImVec2fji($this, $centre, $radius, $col, $num_segments) {
 $this = $this | 0;
 $centre = $centre | 0;
 $radius = +$radius;
 $col = $col | 0;
 $num_segments = $num_segments | 0;
 var $1 = 0.0, $10 = 0, $11 = 0, $14 = 0, $16 = 0, $19 = 0, $5 = 0, $9 = 0;
 if ($col >>> 0 < 16777216) return;
 $1 = +($num_segments | 0);
 __ZN10ImDrawList9PathArcToERK6ImVec2fffi($this, $centre, $radius, 0.0, ($1 + -1.0) * 6.2831854820251465 / $1, $num_segments);
 $5 = $this + 84 | 0;
 __ZN10ImDrawList19AddConvexPolyFilledEPK6ImVec2ijb($this, HEAP32[$5 >> 2] | 0, HEAP32[$this + 76 >> 2] | 0, $col, 1);
 $9 = $this + 76 | 0;
 $10 = $this + 80 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 if (($11 | 0) < 0) {
  $14 = (($11 | 0) / 2 | 0) + $11 | 0;
  $16 = ($14 | 0) > 0 ? $14 : 0;
  if (($11 | 0) < ($16 | 0)) {
   $19 = __ZN5ImGui8MemAllocEj($16 << 3) | 0;
   _memcpy($19 | 0, HEAP32[$5 >> 2] | 0, HEAP32[$9 >> 2] << 3 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$5 >> 2] | 0);
   HEAP32[$5 >> 2] = $19;
   HEAP32[$10 >> 2] = $16;
  }
 }
 HEAP32[$9 >> 2] = 0;
 return;
}

function __ZN5Oryol3Gfx7DiscardEv() {
 var $0 = 0, $1 = 0, $14 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP32[36694] | 0;
 if (!$1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 43, 43019);
  _abort();
 } else {
  HEAP32[$0 >> 2] = -2;
  __ZN5Oryol5_priv24gfxResourceContainerBase7DestroyENS_13ResourceLabelE($1 + 1168 | 0, $0);
  $4 = __ZN5Oryol4Core10PreRunLoopEv() | 0;
  __ZN5Oryol7RunLoop6RemoveEi($4, HEAP32[(HEAP32[36694] | 0) + 156 >> 2] | 0);
  __ZN5Oryol5_priv10glRenderer7discardEv((HEAP32[36694] | 0) + 416 | 0);
  __ZN5Oryol5_priv24gfxResourceContainerBase7discardEv((HEAP32[36694] | 0) + 1168 | 0);
  __ZN5Oryol5_priv14emscDisplayMgr14DiscardDisplayEv((HEAP32[36694] | 0) + 160 | 0);
  $14 = HEAP32[36694] | 0;
  __ZN5Oryol5_priv24gfxResourceContainerBaseD2Ev($14 + 1168 | 0);
  __ZN5Oryol5_priv10glRendererD2Ev($14 + 416 | 0);
  __ZN5Oryol5_priv14emscDisplayMgrD2Ev($14 + 160 | 0);
  __ZN5Oryol6StringD2Ev($14 + 28 | 0);
  __ZN5Oryol6Memory4FreeEPv($14);
  HEAP32[36694] = 0;
  STACKTOP = sp;
  return;
 }
}

function __ZNK5Oryol15stringAtomTable5EntryeqERKS1_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $$0 = 0, $0 = 0, $11 = 0, $14 = 0, $2 = 0, $5 = 0, $8 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121753, 0, 121790, 100, 122048);
  _abort();
 }
 $2 = HEAP32[$rhs >> 2] | 0;
 if (!$2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121753, 0, 121790, 100, 122048);
  _abort();
 }
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 if (!$5) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121952, 0, 121790, 101, 122048);
  _abort();
 }
 $8 = HEAP32[$2 + 4 >> 2] | 0;
 if (!$8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121952, 0, 121790, 101, 122048);
  _abort();
 }
 $11 = HEAP32[$0 + 12 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122001, 0, 121790, 102, 122048);
  _abort();
 }
 $14 = HEAP32[$2 + 12 >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122001, 0, 121790, 102, 122048);
  _abort();
 }
 if (($5 | 0) != ($8 | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$0 = (_strcmp($11, $14) | 0) == 0;
 return $$0 | 0;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $$0 = 0, $$2 = 0, $2 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 if (($this | 0) == ($thrown_type | 0)) $$2 = 1; else if (!$thrown_type) $$2 = 0; else {
  $2 = ___dynamic_cast($thrown_type, 48, 16, 0) | 0;
  if (!$2) $$2 = 0; else {
   dest = $info;
   stop = dest + 56 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$info >> 2] = $2;
   HEAP32[$info + 8 >> 2] = $this;
   HEAP32[$info + 12 >> 2] = -1;
   HEAP32[$info + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 7]($2, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
   if ((HEAP32[$info + 24 >> 2] | 0) == 1) {
    HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$2 = $$0;
  }
 }
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN5Oryol14HTTPFileSystem5onMsgERKNS_3PtrINS_9IORequestEEE($this, $ioReq) {
 $this = $this | 0;
 $ioReq = $ioReq | 0;
 var $$pre = 0, $0 = 0, $10 = 0, $11 = 0, $6 = 0, $ioReadRequest = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ioReadRequest = sp;
 $0 = HEAP32[$ioReq >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107159);
  _abort();
 }
 if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 31]($0, 163337) | 0)) {
  HEAP32[$ioReadRequest >> 2] = 0;
  STACKTOP = sp;
  return;
 }
 $6 = $0 + 4 | 0;
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
 HEAP32[$ioReadRequest >> 2] = $0;
 __ZN5Oryol5_priv13emscURLLoader9doRequestERKNS_3PtrINS_6IOReadEEE($this + 12 | 0, $ioReadRequest) | 0;
 $$pre = HEAP32[$ioReadRequest >> 2] | 0;
 if (!$$pre) {
  STACKTOP = sp;
  return;
 }
 $10 = $$pre + 4 | 0;
 $11 = HEAP32[$10 >> 2] | 0;
 HEAP32[$10 >> 2] = $11 - 1;
 if (($11 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$$pre >> 2] >> 2] & 255]($$pre);
 HEAP32[$ioReadRequest >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZN5ImGui17RenderTextWrappedE6ImVec2PKcS2_f($pos, $text, $text_end, $wrap_width) {
 $pos = $pos | 0;
 $text = $text | 0;
 $text_end = $text_end | 0;
 $wrap_width = +$wrap_width;
 var $$0 = 0, $1 = 0, $17 = 0.0, $19 = 0.0, $21 = 0.0, $26 = 0.0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 if (!$text_end) $$0 = $text + (_strlen($text) | 0) | 0; else $$0 = $text_end;
 if (($$0 - $text | 0) <= 0) return;
 $17 = +HEAPF32[38014];
 $19 = +HEAPF32[38015];
 $21 = +HEAPF32[38016];
 $26 = +HEAPF32[38017] * +HEAPF32[37984];
 __ZN10ImDrawList7AddTextEPK6ImFontfRK6ImVec2jPKcS7_fPK6ImVec4(HEAP32[$1 + 572 >> 2] | 0, HEAP32[38186] | 0, +HEAPF32[38187], $pos, ($19 < 0.0 ? 0 : ~~(($19 > 1.0 ? 1.0 : $19) * 255.0 + .5) << 8) | ($17 < 0.0 ? 0 : ~~(($17 > 1.0 ? 1.0 : $17) * 255.0 + .5)) | ($21 < 0.0 ? 0 : ~~(($21 > 1.0 ? 1.0 : $21) * 255.0 + .5) << 16) | ($26 < 0.0 ? 0 : ~~(($26 > 1.0 ? 1.0 : $26) * 255.0 + .5) << 24), $text, $$0, $wrap_width, 0);
 if (!(HEAP8[157996] | 0)) return;
 __ZL15LogRenderedTextRK6ImVec2PKcS3_(+HEAPF32[$pos + 4 >> 2], $text, $$0);
 return;
}

function __ZN5Oryol3URLC2ERKS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($this, $rhs);
 HEAP8[$this + 36 >> 0] = HEAP8[$rhs + 36 >> 0] | 0;
 HEAP16[$this + 4 >> 1] = HEAP16[$rhs + 4 >> 1] | 0;
 HEAP16[$this + 6 >> 1] = HEAP16[$rhs + 6 >> 1] | 0;
 HEAP16[$this + 8 >> 1] = HEAP16[$rhs + 8 >> 1] | 0;
 HEAP16[$this + 10 >> 1] = HEAP16[$rhs + 10 >> 1] | 0;
 HEAP16[$this + 12 >> 1] = HEAP16[$rhs + 12 >> 1] | 0;
 HEAP16[$this + 14 >> 1] = HEAP16[$rhs + 14 >> 1] | 0;
 HEAP16[$this + 16 >> 1] = HEAP16[$rhs + 16 >> 1] | 0;
 HEAP16[$this + 18 >> 1] = HEAP16[$rhs + 18 >> 1] | 0;
 HEAP16[$this + 20 >> 1] = HEAP16[$rhs + 20 >> 1] | 0;
 HEAP16[$this + 22 >> 1] = HEAP16[$rhs + 22 >> 1] | 0;
 HEAP16[$this + 24 >> 1] = HEAP16[$rhs + 24 >> 1] | 0;
 HEAP16[$this + 26 >> 1] = HEAP16[$rhs + 26 >> 1] | 0;
 HEAP16[$this + 28 >> 1] = HEAP16[$rhs + 28 >> 1] | 0;
 HEAP16[$this + 30 >> 1] = HEAP16[$rhs + 30 >> 1] | 0;
 HEAP16[$this + 32 >> 1] = HEAP16[$rhs + 32 >> 1] | 0;
 HEAP16[$this + 34 >> 1] = HEAP16[$rhs + 34 >> 1] | 0;
 return;
}

function __ZN11ImGuiWindowD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0, $17 = 0, $19 = 0, $2 = 0, $25 = 0, $27 = 0, $32 = 0, $4 = 0, $9 = 0;
 $0 = $this + 572 | 0;
 __ZN10ImDrawListD2Ev(HEAP32[$0 >> 2] | 0);
 $2 = HEAP32[$0 >> 2] | 0;
 if ($2 | 0) {
  $4 = 147664;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + -1;
 }
 FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($2);
 HEAP32[$0 >> 2] = 0;
 $9 = HEAP32[$this >> 2] | 0;
 if ($9 | 0) {
  $11 = 147664;
  HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + -1;
 }
 FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($9);
 HEAP32[$this >> 2] = 0;
 $17 = HEAP32[$this + 564 >> 2] | 0;
 if ($17 | 0) {
  $19 = 147664;
  HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($17);
 }
 $25 = HEAP32[$this + 432 >> 2] | 0;
 if (!$25) {
  $32 = $this + 164 | 0;
  __ZN16ImGuiDrawContextD2Ev($32);
  return;
 }
 $27 = 147664;
 HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + -1;
 FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($25);
 $32 = $this + 164 | 0;
 __ZN16ImGuiDrawContextD2Ev($32);
 return;
}

function __ZN5Oryol5_priv14displayMgrBaseC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $10 = 0, $6 = 0;
 __ZN5Oryol8GfxSetupC2Ev($this);
 $0 = $this + 116 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 HEAP32[$this + 144 >> 2] = 12;
 HEAP32[$this + 148 >> 2] = 1;
 HEAP8[$this + 152 >> 0] = 1;
 HEAP32[$this + 156 >> 2] = 1;
 __ZN5Oryol6StringC2Ev($this + 160 | 0);
 $6 = $this + 168 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 0;
 HEAP32[$6 + 16 >> 2] = 0;
 HEAP32[$this + 188 >> 2] = 16;
 HEAP32[$this + 192 >> 2] = 65536;
 HEAP8[$this + 196 >> 0] = 0;
 $10 = $this + 200 | 0;
 HEAP32[$this + 232 >> 2] = 0;
 HEAP32[$this + 236 >> 2] = 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$10 + 16 >> 2] = 0;
 HEAP32[$10 + 20 >> 2] = 0;
 HEAP32[$10 + 24 >> 2] = 0;
 HEAP8[$10 + 28 >> 0] = 0;
 return;
}

function __ZN5Oryol5_priv12emscInputMgr5setupERKNS_10InputSetupE($this, $setup) {
 $this = $this | 0;
 $setup = $setup | 0;
 var $0 = 0, $10 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 __ZN5Oryol5_priv12inputMgrBase5setupERKNS_10InputSetupE($this, $setup);
 __ZN5Oryol5_priv12emscInputMgr13setupKeyTableEv($this);
 HEAP8[$this >> 0] = 1;
 HEAP8[$this + 624 >> 0] = 1;
 HEAP8[$this + 1288 >> 0] = 1;
 HEAP8[$this + 1380 >> 0] = 1;
 __ZN5Oryol5_priv12emscInputMgr14setupCallbacksEv($this);
 $4 = __ZN5Oryol4Core11PostRunLoopEv() | 0;
 $6 = $0 + 16 | 0;
 HEAP32[$6 >> 2] = $0;
 HEAP32[$0 >> 2] = 13204;
 HEAP32[$0 + 4 >> 2] = $this;
 HEAP32[$this + 2128 >> 2] = __ZN5Oryol7RunLoop3AddENSt3__18functionIFvvEEE($4, $0) | 0;
 $10 = HEAP32[$6 >> 2] | 0;
 if (($10 | 0) == ($0 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 255]($10);
  STACKTOP = sp;
  return;
 }
 if (!$10) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 255]($10);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8Keyboard11onKeyRepeatENS_3Key4CodeE($this, $key) {
 $this = $this | 0;
 $key = $key | 0;
 var $0 = 0, $11 = 0, $16 = 0, $18 = 0, $21 = 0, $3 = 0, $9 = 0, $__begin$03$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if ($key >>> 0 >= 121) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(81122, 0, 77551, 68, 77698);
  _abort();
 }
 $3 = $this + 52 + ($key >>> 5 << 2) | 0;
 HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 1 << ($key & 31);
 $9 = HEAP32[$this + 608 >> 2] | 0;
 $11 = HEAP32[$this + 604 >> 2] | 0;
 if (($9 | 0) == ($11 | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$0 >> 2] = 2;
 HEAP32[$0 + 4 >> 2] = $key;
 HEAP32[$0 + 8 >> 2] = 0;
 $16 = HEAP32[$this + 596 >> 2] | 0;
 if (!$16) {
  STACKTOP = sp;
  return;
 }
 $18 = $16 + ($9 << 5) | 0;
 $__begin$03$i = $16 + ($11 << 5) | 0;
 do {
  $21 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$21 >> 2] | 0) + 24 >> 2] & 63]($21, $0);
  $__begin$03$i = $__begin$03$i + 32 | 0;
 } while (($__begin$03$i | 0) != ($18 | 0));
 STACKTOP = sp;
 return;
}

function _strlen($s) {
 $s = $s | 0;
 var $$01$lcssa = 0, $$014 = 0, $$1$lcssa = 0, $$lcssa20 = 0, $$pn = 0, $$pn15 = 0, $0 = 0, $18 = 0, $21 = 0, $5 = 0, $9 = 0, $w$0 = 0, $w$0$lcssa = 0, label = 0;
 $0 = $s;
 L1 : do if (!($0 & 3)) {
  $$01$lcssa = $s;
  label = 4;
 } else {
  $$014 = $s;
  $21 = $0;
  while (1) {
   if (!(HEAP8[$$014 >> 0] | 0)) {
    $$pn = $21;
    break L1;
   }
   $5 = $$014 + 1 | 0;
   $21 = $5;
   if (!($21 & 3)) {
    $$01$lcssa = $5;
    label = 4;
    break;
   } else $$014 = $5;
  }
 } while (0);
 if ((label | 0) == 4) {
  $w$0 = $$01$lcssa;
  while (1) {
   $9 = HEAP32[$w$0 >> 2] | 0;
   if (!(($9 & -2139062144 ^ -2139062144) & $9 + -16843009)) $w$0 = $w$0 + 4 | 0; else {
    $$lcssa20 = $9;
    $w$0$lcssa = $w$0;
    break;
   }
  }
  if (!(($$lcssa20 & 255) << 24 >> 24)) $$1$lcssa = $w$0$lcssa; else {
   $$pn15 = $w$0$lcssa;
   while (1) {
    $18 = $$pn15 + 1 | 0;
    if (!(HEAP8[$18 >> 0] | 0)) {
     $$1$lcssa = $18;
     break;
    } else $$pn15 = $18;
   }
  }
  $$pn = $$1$lcssa;
 }
 return $$pn - $0 | 0;
}

function __ZN5Oryol5_priv8ioWorker3putERKNS_3PtrINS0_5ioMsgEEE($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $1 = 0, $10 = 0, $15 = 0, $18 = 0, $6 = 0, $7 = 0, $9 = 0;
 $1 = HEAP32[$this + 108 >> 2] | 0;
 if (!(($1 & 255) << 24 >> 24)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105824, 0, 105697, 39, 105887);
  _abort();
 }
 if ($1 & 16711680 | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105954, 0, 105697, 40, 105887);
  _abort();
 }
 $6 = $this + 36 | 0;
 __ZN5Oryol5QueueINS_3PtrINS_5_priv5ioMsgEEEE12checkEnqueueEv($6);
 $7 = HEAP32[$6 >> 2] | 0;
 if (!$7) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 399, 106390);
  _abort();
 }
 $9 = $this + 48 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (($10 | 0) >= (HEAP32[$this + 40 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123597, 0, 123391, 399, 106390);
  _abort();
 }
 HEAP32[$9 >> 2] = $10 + 1;
 $15 = HEAP32[$msg >> 2] | 0;
 HEAP32[$7 + ($10 << 2) >> 2] = $15;
 if (!$15) return;
 $18 = $15 + 4 | 0;
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1;
 return;
}

function __ZN5Oryol13StringBuilder13SubstituteAllEPKcS2_($this, $match, $subst) {
 $this = $this | 0;
 $match = $match | 0;
 $subst = $subst | 0;
 var $10 = 0, $11 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $numSubst$02 = 0, $numSubst$1 = 0;
 if (!(($match | 0) != 0 & ($subst | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121309, 0, 120930, 357, 121324);
  _abort();
 }
 if (!(HEAP8[$match >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121392, 0, 120930, 358, 121324);
  _abort();
 }
 $4 = HEAP32[$this >> 2] | 0;
 if (!$4) {
  $numSubst$1 = 0;
  return $numSubst$1 | 0;
 }
 $6 = _strlen($match) | 0;
 $7 = _strlen($subst) | 0;
 $8 = _strstr($4, $match) | 0;
 if (!$8) {
  $numSubst$1 = 0;
  return $numSubst$1 | 0;
 } else {
  $10 = $8;
  $numSubst$02 = 0;
 }
 while (1) {
  __ZN5Oryol13StringBuilder16substituteCommonEPciiPKc($this, $10, $6, $7, $subst);
  $11 = $numSubst$02 + 1 | 0;
  $10 = _strstr($10, $match) | 0;
  if (!$10) {
   $numSubst$1 = $11;
   break;
  } else $numSubst$02 = $11;
 }
 return $numSubst$1 | 0;
}

function __ZN5Oryol5_priv13emscURLLoader12startRequestERKNS_3PtrINS_6IOReadEEE($this, $req) {
 $this = $this | 0;
 $req = $req | 0;
 var $0 = 0, $4 = 0, $6 = 0, $8 = 0, $urlPath = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $urlPath = sp;
 $0 = HEAP32[$req >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76527, 0, 76558, 27, 76625);
  _abort();
 }
 if (HEAP8[$0 + 8 >> 0] & 1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76527, 0, 76558, 27, 76625);
  _abort();
 }
 $4 = HEAP32[$req >> 2] | 0;
 if (!$4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 162, 76700);
  _abort();
 }
 $6 = $4 + 4 | 0;
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
 $8 = HEAP32[$req >> 2] | 0;
 if (!$8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
  _abort();
 } else {
  __ZNK5Oryol3URL9PathToEndEv($urlPath, $8 + 12 | 0);
  _emscripten_async_wget_data(__ZNK5Oryol6String6AsCStrEv($urlPath) | 0, $4 | 0, 6, 129);
  __ZN5Oryol6StringD2Ev($urlPath);
  STACKTOP = sp;
  return;
 }
}

function __ZN5ImGui13PopStyleColorEi($count) {
 $count = $count | 0;
 var $$01 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, label = 0;
 if (($count | 0) <= 0) return;
 $1 = 152880;
 $2 = 152888;
 $$01 = $count;
 $4 = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($4 | 0) <= 0) {
   label = 4;
   break;
  }
  $5 = $4 + -1 | 0;
  $6 = HEAP32[$2 >> 2] | 0;
  $9 = 152056 + (HEAP32[$6 + ($5 * 20 | 0) >> 2] << 4) | 0;
  $10 = $6 + ($5 * 20 | 0) + 4 | 0;
  HEAP32[$9 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
  HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
  HEAP32[$9 + 12 >> 2] = HEAP32[$10 + 12 >> 2];
  $11 = HEAP32[$1 >> 2] | 0;
  if (($11 | 0) <= 0) {
   label = 6;
   break;
  }
  $4 = $11 + -1 | 0;
  HEAP32[$1 >> 2] = $4;
  if (($$01 | 0) <= 1) {
   label = 8;
   break;
  } else $$01 = $$01 + -1 | 0;
 }
 if ((label | 0) == 4) ___assert_fail(127436, 127226, 815, 127445); else if ((label | 0) == 6) ___assert_fail(127436, 127226, 833, 125180); else if ((label | 0) == 8) return;
}

function __ZN10ImDrawList22PushClipRectFullScreenEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $24 = 0, $5 = 0;
 $0 = $this + 52 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 56 | 0;
 if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 + 1 | 0;
  if (!$1) $10 = 8; else $10 = (($1 | 0) / 2 | 0) + $1 | 0;
  $11 = ($10 | 0) > ($5 | 0) ? $10 : $5;
  if (($1 | 0) < ($11 | 0)) {
   $14 = __ZN5ImGui8MemAllocEj($11 << 4) | 0;
   $15 = $this + 60 | 0;
   _memcpy($14 | 0, HEAP32[$15 >> 2] | 0, HEAP32[$0 >> 2] << 4 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$15 >> 2] | 0);
   HEAP32[$15 >> 2] = $14;
   HEAP32[$2 >> 2] = $11;
   $21 = HEAP32[$0 >> 2] | 0;
  } else $21 = $1;
 } else $21 = $1;
 HEAP32[$0 >> 2] = $21 + 1;
 $24 = (HEAP32[$this + 60 >> 2] | 0) + ($21 << 4) | 0;
 HEAP32[$24 >> 2] = HEAP32[3432];
 HEAP32[$24 + 4 >> 2] = HEAP32[3433];
 HEAP32[$24 + 8 >> 2] = HEAP32[3434];
 HEAP32[$24 + 12 >> 2] = HEAP32[3435];
 __ZN10ImDrawList14UpdateClipRectEv($this);
 return;
}

function __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE5eraseEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 var $0 = 0, $1 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 $0 = $this + 12 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 8 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $1 - $3 | 0;
 $5 = HEAP32[$this >> 2] | 0;
 if (!(($4 | 0) > ($index | 0) & (($index | 0) > -1 & ($5 | 0) != 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(118434, 0, 123391, 610, 115743);
  _abort();
 }
 if (!$index) {
  HEAP32[$2 >> 2] = $3 + 1;
  HEAP32[$5 + ($3 * 12 | 0) >> 2] = 0;
  return;
 }
 if (($4 + -1 | 0) == ($index | 0)) {
  $14 = $1 + -1 | 0;
  HEAP32[$0 >> 2] = $14;
  HEAP32[$5 + ($14 * 12 | 0) >> 2] = 0;
  return;
 }
 if (($4 >> 1 | 0) > ($index | 0)) {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE14moveEraseFrontEi($this, $index);
  return;
 } else {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE13moveEraseBackEi($this, $index);
  return;
 }
}

function __ZN5Oryol6Buffer5allocEi($this, $newCapacity) {
 $this = $this | 0;
 $newCapacity = $newCapacity | 0;
 var $0 = 0, $11 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0;
 $0 = $this + 4 | 0;
 if ((HEAP32[$0 >> 2] | 0) >= ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76859, 0, 76888, 95, 76953);
  _abort();
 }
 if ((HEAP32[$this >> 2] | 0) >= ($newCapacity | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76984, 0, 76888, 96, 76953);
  _abort();
 }
 $5 = __ZN5Oryol6Memory5AllocEi($newCapacity) | 0;
 $6 = HEAP32[$this >> 2] | 0;
 $8 = $this + 8 | 0;
 do if (($6 | 0) > 0) {
  $9 = HEAP32[$8 >> 2] | 0;
  if (!$9) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77009, 0, 76888, 100, 76953);
   _abort();
  } else {
   __ZN5Oryol6Memory4CopyEPKvPvi($9, $5, $6);
   break;
  }
 } while (0);
 $11 = HEAP32[$8 >> 2] | 0;
 if (!$11) {
  HEAP32[$8 >> 2] = $5;
  HEAP32[$0 >> 2] = $newCapacity;
  return;
 }
 __ZN5Oryol6Memory4FreeEPv($11);
 HEAP32[$8 >> 2] = $5;
 HEAP32[$0 >> 2] = $newCapacity;
 return;
}

function __ZNK5Oryol5_priv14schemeRegistry16CreateFileSystemERKNS_10StringAtomE($this, $scheme) {
 $this = $this | 0;
 $scheme = $scheme | 0;
 var $1 = 0, $11 = 0, $3 = 0, $7 = 0;
 do {} while ((HEAP8[$this >> 0] & 1) != 0);
 $1 = $this + 4 | 0;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
 $3 = $this + 8 | 0;
 if (!(__ZNK5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEE8ContainsERKS1_($3, $scheme) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(103171, 0, 102989, 56, 103203);
  _abort();
 }
 $7 = HEAP32[(__ZNK5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEixERKS1_($3, $scheme) | 0) + 16 >> 2] | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 24 >> 2] & 63]($7) | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103523);
  _abort();
 } else {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$11 >> 2] | 0) + 16 >> 2] & 255]($11);
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) - 1;
  return $11 | 0;
 }
 return 0;
}

function __ZN5Oryol5_priv12emscInputMgr14setupCallbacksEv($this) {
 $this = $this | 0;
 _emscripten_set_keydown_callback(0, $this | 0, 1, 7) | 0;
 _emscripten_set_keyup_callback(0, $this | 0, 1, 8) | 0;
 _emscripten_set_keypress_callback(0, $this | 0, 1, 9) | 0;
 _emscripten_set_mousedown_callback(79430, $this | 0, 1, 10) | 0;
 _emscripten_set_mouseup_callback(79430, $this | 0, 1, 11) | 0;
 _emscripten_set_mousemove_callback(79430, $this | 0, 1, 12) | 0;
 _emscripten_set_wheel_callback(79430, $this | 0, 0, 13) | 0;
 _emscripten_set_touchstart_callback(79430, $this | 0, 1, 14) | 0;
 _emscripten_set_touchend_callback(79430, $this | 0, 1, 14) | 0;
 _emscripten_set_touchmove_callback(79430, $this | 0, 1, 14) | 0;
 _emscripten_set_touchcancel_callback(79430, $this | 0, 1, 14) | 0;
 if (HEAP8[$this + 1413 >> 0] | 0) _emscripten_set_devicemotion_callback($this | 0, 1, 15) | 0;
 if (!(HEAP8[$this + 1414 >> 0] | 0)) return;
 _emscripten_set_deviceorientation_callback($this | 0, 1, 16) | 0;
 return;
}

function __ZN5Oryol21resourceContainerBase9PushLabelEv($this) {
 $this = $this | 0;
 var $0 = 0, $11 = 0, $13 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (!(HEAP8[$this + 112 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 110028, 52, 110875);
  _abort();
 }
 $4 = $this + 108 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if ($5 >>> 0 >= 4294967293) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110938, 0, 110028, 53, 110875);
  _abort();
 }
 HEAP32[$4 >> 2] = $5 + 1;
 HEAP32[$0 >> 2] = $5;
 __ZN5Oryol5ArrayINS_13ResourceLabelEE3AddIJjEEEvDpOT_($this, $0);
 $11 = HEAP32[$this + 12 >> 2] | 0;
 if ((HEAP32[$this + 8 >> 2] | 0) == ($11 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(124006, 0, 123391, 286, 110684);
  _abort();
 }
 $13 = HEAP32[$this >> 2] | 0;
 if (!$13) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(124006, 0, 123391, 286, 110684);
  _abort();
 } else {
  STACKTOP = sp;
  return HEAP32[$13 + ($11 + -1 << 2) >> 2] | 0;
 }
 return 0;
}

function __ZN5Oryol5_priv16glTextureFactory13SetupResourceERNS0_7textureE($this, $tex) {
 $this = $this | 0;
 $tex = $tex | 0;
 var $$0 = 0, $3 = 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 72053, 55, 72297);
  _abort();
 }
 $3 = $tex + 16 | 0;
 if (__ZNK5Oryol12TextureSetup24ShouldSetupFromPixelDataEv($3) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72388, 0, 72053, 56, 72297);
  _abort();
 }
 if (__ZNK5Oryol12TextureSetup19ShouldSetupFromFileEv($3) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72426, 0, 72053, 57, 72297);
  _abort();
 }
 if (__ZNK5Oryol12TextureSetup25ShouldSetupAsRenderTargetEv($3) | 0) {
  __ZN5Oryol5_priv16glTextureFactory18createRenderTargetERNS0_7textureE($this, $tex) | 0;
  $$0 = 3;
  return $$0 | 0;
 }
 if (!(__ZNK5Oryol12TextureSetup16ShouldSetupEmptyEv($3) | 0)) {
  $$0 = 6;
  return $$0 | 0;
 }
 $$0 = __ZN5Oryol5_priv16glTextureFactory18createEmptyTextureERNS0_7textureE($this, $tex) | 0;
 return $$0 | 0;
}

function __ZN5Oryol5_priv7glTypes26asGLTexImageInternalFormatENS_11PixelFormat4CodeE($c) {
 $c = $c | 0;
 var $$0$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 do switch ($c | 0) {
 case 6:
 case 5:
 case 2:
 case 4:
 case 0:
  {
   $$0$i = 6408;
   break;
  }
 case 3:
 case 1:
  {
   $$0$i = 6407;
   break;
  }
 case 7:
  {
   $$0$i = 6409;
   break;
  }
 case 11:
  {
   $$0$i = 6402;
   break;
  }
 case 12:
  {
   $$0$i = 34041;
   break;
  }
 case 8:
  {
   $$0$i = 33777;
   break;
  }
 case 9:
  {
   $$0$i = 33778;
   break;
  }
 case 10:
  {
   $$0$i = 33779;
   break;
  }
 case 13:
  {
   $$0$i = 35841;
   break;
  }
 case 14:
  {
   $$0$i = 35840;
   break;
  }
 case 15:
  {
   $$0$i = 35843;
   break;
  }
 case 16:
  {
   $$0$i = 35842;
   break;
  }
 case 17:
  {
   $$0$i = 37492;
   break;
  }
 case 18:
  {
   $$0$i = 37493;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74201, sp);
   _abort();
  }
 } while (0);
 STACKTOP = sp;
 return $$0$i | 0;
}

function __ZN5Oryol8GfxSetupC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 640;
 HEAP32[$this + 4 >> 2] = 400;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 12;
 HEAP32[$this + 16 >> 2] = 1;
 HEAP8[$this + 20 >> 0] = 1;
 HEAP32[$this + 24 >> 2] = 1;
 __ZN5Oryol6StringC2EPKc($this + 28 | 0, 60268);
 HEAPF32[$this + 36 >> 2] = 0.0;
 HEAPF32[$this + 40 >> 2] = 0.0;
 HEAPF32[$this + 44 >> 2] = 0.0;
 HEAPF32[$this + 48 >> 2] = 1.0;
 HEAPF32[$this + 52 >> 2] = 1.0;
 HEAP8[$this + 56 >> 0] = 0;
 HEAP8[$this + 57 >> 0] = 3;
 HEAP8[$this + 60 >> 0] = 0;
 HEAP32[$this + 64 >> 2] = 256;
 HEAP32[$this + 68 >> 2] = 256;
 HEAP32[$this + 72 >> 2] = 4194304;
 HEAP32[$this + 76 >> 2] = 65536;
 HEAP32[$this + 80 >> 2] = 4096;
 HEAP32[$this + 84 >> 2] = 128;
 HEAP32[$this + 100 >> 2] = 0;
 HEAP32[$this + 88 >> 2] = 128;
 HEAP32[$this + 104 >> 2] = 0;
 HEAP32[$this + 92 >> 2] = 128;
 HEAP32[$this + 108 >> 2] = 0;
 HEAP32[$this + 96 >> 2] = 128;
 HEAP32[$this + 112 >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv13glMeshFactory15setupPrimGroupsERNS0_4meshE($this, $msh) {
 $this = $this | 0;
 $msh = $msh | 0;
 var $0 = 0, $1 = 0, $13 = 0, $14 = 0, $2 = 0, $8 = 0, $i$01 = 0, label = 0;
 $0 = $msh + 16 | 0;
 $1 = __ZNK5Oryol9MeshSetup18NumPrimitiveGroupsEv($0) | 0;
 $2 = $msh + 296 | 0;
 HEAP32[$2 >> 2] = $1;
 if (($1 | 0) >= 8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(63948, 0, 63465, 201, 63996);
  _abort();
 }
 if (($1 | 0) > 0) $i$01 = 0; else return;
 while (1) {
  if ($i$01 >>> 0 >= 8) {
   label = 6;
   break;
  }
  $8 = __ZNK5Oryol9MeshSetup14PrimitiveGroupEi($0, $i$01) | 0;
  $13 = HEAP32[$8 + 4 >> 2] | 0;
  $14 = $msh + 300 + ($i$01 << 3) | 0;
  HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$14 + 4 >> 2] = $13;
  $i$01 = $i$01 + 1 | 0;
  if (($i$01 | 0) >= (HEAP32[$2 >> 2] | 0)) {
   label = 4;
   break;
  }
 }
 if ((label | 0) == 4) return; else if ((label | 0) == 6) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 64068);
  _abort();
 }
}

function __ZN5Oryol5_priv8ioRouter3putERKNS_3PtrINS0_5ioMsgEEE($this, $msg) {
 $this = $this | 0;
 $msg = $msg | 0;
 var $0 = 0, $12 = 0;
 $0 = HEAP32[$msg >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 107078);
  _abort();
 }
 if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 31]($0, 163338) | 0) {
  __ZN5Oryol5_priv8ioWorker3putERKNS_3PtrINS0_5ioMsgEEE($this + 4 | 0, $msg);
  __ZN5Oryol5_priv8ioWorker3putERKNS_3PtrINS0_5ioMsgEEE($this + 116 | 0, $msg);
  __ZN5Oryol5_priv8ioWorker3putERKNS_3PtrINS0_5ioMsgEEE($this + 228 | 0, $msg);
  __ZN5Oryol5_priv8ioWorker3putERKNS_3PtrINS0_5ioMsgEEE($this + 340 | 0, $msg);
  return;
 }
 $12 = ((HEAP32[$this >> 2] | 0) + 1 | 0) % 4 | 0;
 HEAP32[$this >> 2] = $12;
 if ($12 >>> 0 >= 4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 105558);
  _abort();
 }
 __ZN5Oryol5_priv8ioWorker3putERKNS_3PtrINS0_5ioMsgEEE($this + 4 + ($12 * 112 | 0) | 0, $msg);
 return;
}

function __ZNK5Oryol15stringAtomTable5EntryltERKS1_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $11 = 0, $14 = 0, $2 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121753, 0, 121790, 120, 121861);
  _abort();
 }
 $2 = HEAP32[$rhs >> 2] | 0;
 if (!$2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121753, 0, 121790, 120, 121861);
  _abort();
 }
 if (!(HEAP32[$0 + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121952, 0, 121790, 121, 121861);
  _abort();
 }
 if (!(HEAP32[$2 + 4 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121952, 0, 121790, 121, 121861);
  _abort();
 }
 $11 = HEAP32[$0 + 12 >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122001, 0, 121790, 122, 121861);
  _abort();
 }
 $14 = HEAP32[$2 + 12 >> 2] | 0;
 if (!$14) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122001, 0, 121790, 122, 121861);
  _abort();
 } else return (_strcmp($11, $14) | 0) < 0 | 0;
 return 0;
}

function __ZN5Oryol18TextureBlockLayout3AddERKNS_10StringAtomENS_11TextureType4CodeEi($this, $name, $type, $bindSlot) {
 $this = $this | 0;
 $name = $name | 0;
 $type = $type | 0;
 $bindSlot = $bindSlot | 0;
 var $0 = 0, $1 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = $1 + 1;
 if ($1 >>> 0 >= 16) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 47871);
  _abort();
 }
 $4 = $this + 4 + ($1 * 12 | 0) | 0;
 __ZN5Oryol10StringAtom4copyERKS0_($0, $name);
 $5 = $0 + 4 | 0;
 HEAP32[$5 >> 2] = $type;
 HEAP32[$0 + 8 >> 2] = $bindSlot;
 if (($0 | 0) != ($4 | 0)) {
  HEAP32[$4 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($4, $0);
  HEAP32[$0 >> 2] = 0;
 }
 $9 = $5;
 $14 = HEAP32[$9 + 4 >> 2] | 0;
 $15 = $this + 4 + ($1 * 12 | 0) + 4 | 0;
 HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$15 + 4 >> 2] = $14;
 STACKTOP = sp;
 return $this | 0;
}

function __ZN6SoLoud19AudioSourceInstance4initERNS_11AudioSourceEi($this, $aSource, $aPlayIndex) {
 $this = $this | 0;
 $aSource = $aSource | 0;
 $aPlayIndex = $aPlayIndex | 0;
 var $10 = 0, $13 = 0, $18 = 0, $2 = 0, $23 = 0, $28 = 0, $33 = 0;
 HEAP32[$this + 4 >> 2] = $aPlayIndex;
 $2 = HEAP32[$aSource + 8 >> 2] | 0;
 HEAP32[$this + 52 >> 2] = $2;
 HEAP32[$this + 56 >> 2] = $2;
 HEAP32[$this + 60 >> 2] = HEAP32[$aSource + 16 >> 2];
 HEAPF64[$this + 72 >> 3] = 0.0;
 $10 = HEAP32[$aSource + 4 >> 2] | 0;
 if ($10 & 1 | 0) {
  $13 = $this + 12 | 0;
  HEAP32[$13 >> 2] = HEAP32[$13 >> 2] | 1;
 }
 if ($10 & 8 | 0) {
  $18 = $this + 12 | 0;
  HEAP32[$18 >> 2] = HEAP32[$18 >> 2] | 8;
 }
 if ($10 & 16 | 0) {
  $23 = $this + 12 | 0;
  HEAP32[$23 >> 2] = HEAP32[$23 >> 2] | 16;
 }
 if ($10 & 64 | 0) {
  $28 = $this + 12 | 0;
  HEAP32[$28 >> 2] = HEAP32[$28 >> 2] | 64;
 }
 if (!($10 & 128)) return;
 $33 = $this + 12 | 0;
 HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 128;
 return;
}

function __ZN6SoLoud6Soloud11mixSigned16EPsj($this, $aBuffer, $aSamples) {
 $this = $this | 0;
 $aBuffer = $aBuffer | 0;
 $aSamples = $aSamples | 0;
 var $1 = 0, $12 = 0, $3 = 0, $5 = 0, $c$04$i = 0, $c$1$lcssa$i = 0, $c$12$i = 0, $i$01$i = 0, $j$03$i = 0;
 __ZN6SoLoud6Soloud12mix_internalEj($this, $aSamples);
 $1 = HEAP32[$this + 20 >> 2] | 0;
 $3 = HEAP32[$this + 4144 >> 2] | 0;
 if (!$3) return;
 $5 = Math_imul($3, $aSamples) | 0;
 $c$04$i = 0;
 $j$03$i = 0;
 while (1) {
  if ($j$03$i >>> 0 < $5 >>> 0) {
   $c$12$i = $c$04$i;
   $i$01$i = $j$03$i;
   while (1) {
    HEAP16[$aBuffer + ($i$01$i << 1) >> 1] = ~~(+HEAPF32[$1 + ($c$12$i << 2) >> 2] * 32767.0);
    $12 = $c$12$i + 1 | 0;
    $i$01$i = $i$01$i + $3 | 0;
    if ($i$01$i >>> 0 >= $5 >>> 0) {
     $c$1$lcssa$i = $12;
     break;
    } else $c$12$i = $12;
   }
  } else $c$1$lcssa$i = $c$04$i;
  $j$03$i = $j$03$i + 1 | 0;
  if (($j$03$i | 0) == ($3 | 0)) break; else $c$04$i = $c$1$lcssa$i;
 }
 return;
}

function __ZN5Oryol6String6createEPKci($this, $ptr, $len) {
 $this = $this | 0;
 $ptr = $ptr | 0;
 $len = $len | 0;
 var $10 = 0, $13 = 0, $15 = 0, $16 = 0, $5 = 0, $6 = 0;
 if (!$ptr) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120516, 0, 120525, 117, 120587);
  _abort();
 }
 if (!(($len | 0) > 0 & (HEAP8[$ptr >> 0] | 0) != 0)) {
  HEAP32[$this >> 2] = 0;
  HEAP32[$this + 4 >> 2] = 0;
  return;
 }
 $5 = __ZN5Oryol6Memory5AllocEi($len + 9 | 0) | 0;
 HEAP32[$this >> 2] = $5;
 $6 = $5;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$5 >> 2] = 0;
 $10 = HEAP32[$this >> 2] | 0;
 if (!$10) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120633, 0, 120525, 133, 120655);
  _abort();
 }
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
 $13 = HEAP32[$this >> 2] | 0;
 HEAP32[$13 + 4 >> 2] = $len;
 $15 = $13 + 8 | 0;
 $16 = $this + 4 | 0;
 HEAP32[$16 >> 2] = $15;
 __ZN5Oryol6Memory4CopyEPKvPvi($ptr, $15, $len);
 HEAP8[(HEAP32[$16 >> 2] | 0) + $len >> 0] = 0;
 return;
}

function __ZN10ImDrawList13PushTextureIDERKPv($this, $texture_id) {
 $this = $this | 0;
 $texture_id = $texture_id | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $2 = 0, $20 = 0, $22 = 0, $5 = 0;
 $0 = $this + 64 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $this + 68 | 0;
 if (($1 | 0) == (HEAP32[$2 >> 2] | 0)) {
  $5 = $1 + 1 | 0;
  if (!$1) $10 = 8; else $10 = (($1 | 0) / 2 | 0) + $1 | 0;
  $11 = ($10 | 0) > ($5 | 0) ? $10 : $5;
  if (($1 | 0) < ($11 | 0)) {
   $14 = __ZN5ImGui8MemAllocEj($11 << 2) | 0;
   $15 = $this + 72 | 0;
   _memcpy($14 | 0, HEAP32[$15 >> 2] | 0, HEAP32[$0 >> 2] << 2 | 0) | 0;
   __ZN5ImGui7MemFreeEPv(HEAP32[$15 >> 2] | 0);
   HEAP32[$15 >> 2] = $14;
   HEAP32[$2 >> 2] = $11;
   $22 = HEAP32[$0 >> 2] | 0;
  } else $22 = $1;
 } else $22 = $1;
 $20 = HEAP32[$texture_id >> 2] | 0;
 HEAP32[$0 >> 2] = $22 + 1;
 HEAP32[(HEAP32[$this + 72 >> 2] | 0) + ($22 << 2) >> 2] = $20;
 __ZN10ImDrawList15UpdateTextureIDEv($this);
 return;
}

function _pad($f, $c, $w, $l, $fl) {
 $f = $f | 0;
 $c = $c | 0;
 $w = $w | 0;
 $l = $l | 0;
 $fl = $fl | 0;
 var $$0$lcssa6 = 0, $$02 = 0, $10 = 0, $14 = 0, $17 = 0, $18 = 0, $3 = 0, $7 = 0, $9 = 0, $pad = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $pad = sp;
 do if (($w | 0) > ($l | 0) & ($fl & 73728 | 0) == 0) {
  $3 = $w - $l | 0;
  _memset($pad | 0, $c | 0, ($3 >>> 0 > 256 ? 256 : $3) | 0) | 0;
  $7 = HEAP32[$f >> 2] | 0;
  $9 = ($7 & 32 | 0) == 0;
  if ($3 >>> 0 > 255) {
   $10 = $w - $l | 0;
   $$02 = $3;
   $17 = $7;
   $18 = $9;
   while (1) {
    if ($18) {
     ___fwritex($pad, 256, $f) | 0;
     $14 = HEAP32[$f >> 2] | 0;
    } else $14 = $17;
    $$02 = $$02 + -256 | 0;
    $18 = ($14 & 32 | 0) == 0;
    if ($$02 >>> 0 <= 255) break; else $17 = $14;
   }
   if ($18) $$0$lcssa6 = $10 & 255; else break;
  } else if ($9) $$0$lcssa6 = $3; else break;
  ___fwritex($pad, $$0$lcssa6, $f) | 0;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNK5Oryol13StringBuilder13FindSubStringEiiPKc($this, $startIndex, $endIndex, $subStr) {
 $this = $this | 0;
 $startIndex = $startIndex | 0;
 $endIndex = $endIndex | 0;
 $subStr = $subStr | 0;
 var $$0 = 0, $14 = 0, $3 = 0, $8 = 0, $9 = 0;
 if (!$subStr) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121615, 0, 120930, 643, 121627);
  _abort();
 }
 if (($endIndex | 0) != -1 & ($endIndex | 0) < ($startIndex | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121493, 0, 120930, 644, 121627);
  _abort();
 }
 $3 = HEAP32[$this >> 2] | 0;
 if (!$3) {
  $$0 = -1;
  return $$0 | 0;
 }
 if ((HEAP32[$this + 8 >> 2] | 0) <= ($startIndex | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121285, 0, 120930, 646, 121627);
  _abort();
 }
 $8 = $3 + $startIndex | 0;
 $9 = _strstr($8, $subStr) | 0;
 if (!$9) {
  $$0 = -1;
  return $$0 | 0;
 }
 $14 = $9 - $8 + $startIndex | 0;
 $$0 = ($endIndex | 0) == -1 | ($14 | 0) < ($endIndex | 0) ? $14 : -1;
 return $$0 | 0;
}

function __ZN5Oryol5_priv7glTypes18asGLTexImageFormatENS_11PixelFormat4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 do switch ($c | 0) {
 case 6:
 case 5:
 case 2:
 case 4:
 case 0:
  {
   $$0 = 6408;
   break;
  }
 case 3:
 case 1:
  {
   $$0 = 6407;
   break;
  }
 case 7:
  {
   $$0 = 6409;
   break;
  }
 case 11:
  {
   $$0 = 6402;
   break;
  }
 case 12:
  {
   $$0 = 34041;
   break;
  }
 case 8:
  {
   $$0 = 33777;
   break;
  }
 case 9:
  {
   $$0 = 33778;
   break;
  }
 case 10:
  {
   $$0 = 33779;
   break;
  }
 case 13:
  {
   $$0 = 35841;
   break;
  }
 case 14:
  {
   $$0 = 35840;
   break;
  }
 case 15:
  {
   $$0 = 35843;
   break;
  }
 case 16:
  {
   $$0 = 35842;
   break;
  }
 case 17:
  {
   $$0 = 37492;
   break;
  }
 case 18:
  {
   $$0 = 37493;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74201, sp);
   _abort();
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6SoLoud6Soloud3mixEPfj($this, $aBuffer, $aSamples) {
 $this = $this | 0;
 $aBuffer = $aBuffer | 0;
 $aSamples = $aSamples | 0;
 var $1 = 0, $10 = 0, $3 = 0, $5 = 0, $c$04$i = 0, $c$1$lcssa$i = 0, $c$12$i = 0, $i$01$i = 0, $j$03$i = 0;
 __ZN6SoLoud6Soloud12mix_internalEj($this, $aSamples);
 $1 = HEAP32[$this + 20 >> 2] | 0;
 $3 = HEAP32[$this + 4144 >> 2] | 0;
 if (!$3) return;
 $5 = Math_imul($3, $aSamples) | 0;
 $c$04$i = 0;
 $j$03$i = 0;
 while (1) {
  if ($j$03$i >>> 0 < $5 >>> 0) {
   $c$12$i = $c$04$i;
   $i$01$i = $j$03$i;
   while (1) {
    HEAP32[$aBuffer + ($i$01$i << 2) >> 2] = HEAP32[$1 + ($c$12$i << 2) >> 2];
    $10 = $c$12$i + 1 | 0;
    $i$01$i = $i$01$i + $3 | 0;
    if ($i$01$i >>> 0 >= $5 >>> 0) {
     $c$1$lcssa$i = $10;
     break;
    } else $c$12$i = $10;
   }
  } else $c$1$lcssa$i = $c$04$i;
  $j$03$i = $j$03$i + 1 | 0;
  if (($j$03$i | 0) == ($3 | 0)) break; else $c$04$i = $c$1$lcssa$i;
 }
 return;
}

function __ZN5Oryol5_priv13emscURLLoader8onFailedEPv($userData) {
 $userData = $userData | 0;
 var $1 = 0, $11 = 0, $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 if (!$userData) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76762, 0, 76558, 57, 77109);
  _abort();
 }
 $1 = $userData + 4 | 0;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
 $3 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = $3 - 1;
 if (($3 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$userData >> 2] >> 2] & 255]($userData);
 HEAP32[$vararg_buffer >> 2] = __ZNK5Oryol3URL6AsCStrEv($userData + 12 | 0) | 0;
 __ZN5Oryol3Log3DbgEPKcz(77167, $vararg_buffer);
 HEAP32[$userData + 72 >> 2] = 404;
 HEAP8[$userData + 8 >> 0] = 1;
 $11 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = $11 - 1;
 if (($11 | 0) != 1) {
  STACKTOP = sp;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[HEAP32[$userData >> 2] >> 2] & 255]($userData);
 STACKTOP = sp;
 return;
}

function __ZL21AddWindowToRenderListR8ImVectorIP10ImDrawListEP11ImGuiWindow($out_render_list, $window) {
 $out_render_list = $out_render_list | 0;
 $window = $window | 0;
 var $2 = 0, $21 = 0, $22 = 0, $3 = 0, $5 = 0, $8 = 0, $i$01 = 0;
 __ZL23AddDrawListToRenderListR8ImVectorIP10ImDrawListES1_($out_render_list, HEAP32[$window + 572 >> 2] | 0);
 $2 = $window + 248 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (($3 | 0) <= 0) return;
 $5 = $window + 256 | 0;
 $22 = $3;
 $i$01 = 0;
 while (1) {
  $8 = HEAP32[(HEAP32[$5 >> 2] | 0) + ($i$01 << 2) >> 2] | 0;
  do if (!(HEAP8[$8 + 112 >> 0] | 0)) $21 = $22; else {
   if (HEAP32[$8 + 8 >> 2] & 33554432 | 0) if ((HEAP32[$8 + 144 >> 2] | 0) > 0) {
    $21 = $22;
    break;
   }
   __ZL21AddWindowToRenderListR8ImVectorIP10ImDrawListEP11ImGuiWindow($out_render_list, $8);
   $21 = HEAP32[$2 >> 2] | 0;
  } while (0);
  $i$01 = $i$01 + 1 | 0;
  if (($i$01 | 0) >= ($21 | 0)) break; else $22 = $21;
 }
 return;
}

function __ZN5Oryol6StringC2EPKc($this, $str) {
 $this = $this | 0;
 $str = $str | 0;
 var $1 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $6 = 0, $7 = 0;
 if (!$str) {
  HEAP32[$this >> 2] = 0;
  HEAP32[$this + 4 >> 2] = 0;
  return;
 }
 $1 = _strlen($str) | 0;
 if (!(($1 | 0) > 0 & (HEAP8[$str >> 0] | 0) != 0)) {
  HEAP32[$this >> 2] = 0;
  HEAP32[$this + 4 >> 2] = 0;
  return;
 }
 $6 = __ZN5Oryol6Memory5AllocEi($1 + 9 | 0) | 0;
 HEAP32[$this >> 2] = $6;
 $7 = $6;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 $11 = HEAP32[$this >> 2] | 0;
 if (!$11) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120633, 0, 120525, 133, 120655);
  _abort();
 }
 HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 1;
 $14 = HEAP32[$this >> 2] | 0;
 HEAP32[$14 + 4 >> 2] = $1;
 $16 = $14 + 8 | 0;
 $17 = $this + 4 | 0;
 HEAP32[$17 >> 2] = $16;
 __ZN5Oryol6Memory4CopyEPKvPvi($str, $16, $1);
 HEAP8[(HEAP32[$17 >> 2] | 0) + $1 >> 0] = 0;
 return;
}

function __ZN12DisasmWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $13 = 0, $14 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAPF32[$0 >> 2] = 400.0;
 HEAPF32[$0 + 4 >> 2] = 400.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 2);
 $4 = $this + 8 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $4, 128) | 0)) {
  __ZN5ImGui3EndEv();
  $13 = HEAP8[$4 >> 0] | 0;
  $14 = $13 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $14 | 0;
 }
 __ZN12DisasmWindow15drawMainContentERKN4yakc4kc85Eti(0, $kc, HEAP16[$this + 30 >> 1] | 0, HEAPU16[$this + 46 >> 1] | 0);
 __ZN5ImGui9SeparatorEv();
 __ZN14HexInputWidget4DrawEv($this + 20 | 0) | 0;
 __ZN5ImGui8SameLineEff(0.0, -1.0);
 __ZN14HexInputWidget4DrawEv($this + 36 | 0) | 0;
 __ZN5ImGui3EndEv();
 $13 = HEAP8[$4 >> 0] | 0;
 $14 = $13 << 24 >> 24 != 0;
 STACKTOP = sp;
 return $14 | 0;
}

function __ZN5Oryol5_priv12emscInputMgr13emscMouseMoveEiPK20EmscriptenMouseEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 var $17 = 0.0, $9 = 0.0, $mov = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $mov = sp;
 if (!$userData) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80101, 0, 79073, 198, 79628);
  _abort();
 }
 if (!(HEAP8[$userData + 2132 >> 0] | 0)) {
  $17 = +(HEAP32[$e + 64 >> 2] | 0);
  HEAPF32[$mov >> 2] = +(HEAP32[$e + 60 >> 2] | 0);
  HEAPF32[$mov + 4 >> 2] = $17;
  __ZN5Oryol5Mouse8onPosMovERKN3glm5tvec2IfLNS1_9precisionE0EEE($userData + 624 | 0, $mov);
  STACKTOP = sp;
  return 1;
 } else {
  $9 = +(HEAP32[$e + 48 >> 2] | 0);
  HEAPF32[$mov >> 2] = +(HEAP32[$e + 44 >> 2] | 0);
  HEAPF32[$mov + 4 >> 2] = $9;
  __ZN5Oryol5Mouse5onMovERKN3glm5tvec2IfLNS1_9precisionE0EEE($userData + 624 | 0, $mov);
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZN5Oryol8Touchpad19onPinchingCancelledEv($this) {
 $this = $this | 0;
 var $10 = 0, $13 = 0, $2 = 0, $4 = 0, $8 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 7 >> 0] = 0;
 $2 = HEAP32[$this + 76 >> 2] | 0;
 $4 = HEAP32[$this + 72 >> 2] | 0;
 if (($2 | 0) == ($4 | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $event + 4 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$event >> 2] = 9;
 $8 = HEAP32[$this + 64 >> 2] | 0;
 if ($8 | 0) {
  $10 = $8 + ($2 << 5) | 0;
  $__begin$03$i = $8 + ($4 << 5) | 0;
  do {
   $13 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 63]($13, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($10 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8Touchpad18onPanningCancelledEv($this) {
 $this = $this | 0;
 var $10 = 0, $13 = 0, $2 = 0, $4 = 0, $8 = 0, $__begin$03$i = 0, $event = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $event = sp;
 HEAP8[$this + 4 >> 0] = 0;
 $2 = HEAP32[$this + 76 >> 2] | 0;
 $4 = HEAP32[$this + 72 >> 2] | 0;
 if (($2 | 0) == ($4 | 0)) {
  STACKTOP = sp;
  return;
 }
 dest = $event + 4 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$event >> 2] = 5;
 $8 = HEAP32[$this + 64 >> 2] | 0;
 if ($8 | 0) {
  $10 = $8 + ($2 << 5) | 0;
  $__begin$03$i = $8 + ($4 << 5) | 0;
  do {
   $13 = HEAP32[$__begin$03$i + 24 >> 2] | 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 63]($13, $event);
   $__begin$03$i = $__begin$03$i + 32 | 0;
  } while (($__begin$03$i | 0) != ($10 | 0));
 }
 STACKTOP = sp;
 return;
}

function __ZN5Oryol3Log6vprintENS0_5LevelEPKcPi($lvl, $msg, $args) {
 $lvl = $lvl | 0;
 $msg = $msg | 0;
 $args = $args | 0;
 var $12 = 0, $5 = 0, $7 = 0, $__begin$03 = 0;
 do {} while ((HEAP8[146880] & 1) != 0);
 HEAP32[36721] = (HEAP32[36721] | 0) + 1;
 L4 : do if (!0) _vprintf($msg, $args) | 0; else if (0) if (0) {
  $__begin$03 = 0;
  while (1) {
   $5 = HEAP32[$__begin$03 >> 2] | 0;
   if (!$5) break;
   $7 = $5 + 4 | 0;
   HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 4 >> 2] & 7]($5, $lvl, $msg, $args);
   $12 = HEAP32[$7 >> 2] | 0;
   HEAP32[$7 >> 2] = $12 - 1;
   if (($12 | 0) == 1) FUNCTION_TABLE_vi[HEAP32[HEAP32[$5 >> 2] >> 2] & 255]($5);
   $__begin$03 = $__begin$03 + 4 | 0;
   if (!$__begin$03) break L4;
  }
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 118012);
  _abort();
 } while (0);
 HEAP32[36721] = (HEAP32[36721] | 0) - 1;
 return;
}

function __ZN5Oryol11ShaderSetup21SetProgramFromSourcesENS_10ShaderLang4CodeERKNS_12VertexLayoutERKNS_6StringES8_($this, $slang, $vsInputLayout, $vsSource, $fsSource) {
 $this = $this | 0;
 $slang = $slang | 0;
 $vsInputLayout = $vsInputLayout | 0;
 $vsSource = $vsSource | 0;
 $fsSource = $fsSource | 0;
 if (!(__ZNK5Oryol6String7IsValidEv($vsSource) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(60912, 0, 60953, 31, 61018);
  _abort();
 }
 if (!(__ZNK5Oryol6String7IsValidEv($fsSource) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(60912, 0, 60953, 31, 61018);
  _abort();
 }
 if ($slang >>> 0 < 5) {
  __ZN5Oryol6StringaSERKS0_($this + 16 + ($slang << 3) | 0, $vsSource);
  __ZN5Oryol6StringaSERKS0_($this + 56 + ($slang << 3) | 0, $fsSource);
  __ZN5Oryol12VertexLayoutaSERKS0_($this + 256 | 0, $vsInputLayout) | 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 61158);
  _abort();
 }
}

function _fputc($c, $f) {
 $c = $c | 0;
 $f = $f | 0;
 var $$0 = 0, $10 = 0, $22 = 0, $23 = 0, $31 = 0, $9 = 0, label = 0;
 if ((HEAP32[$f + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($f) | 0)) label = 3; else {
  if ((HEAP8[$f + 75 >> 0] | 0) == ($c | 0)) label = 10; else {
   $22 = $f + 20 | 0;
   $23 = HEAP32[$22 >> 2] | 0;
   if ($23 >>> 0 < (HEAP32[$f + 16 >> 2] | 0) >>> 0) {
    HEAP32[$22 >> 2] = $23 + 1;
    HEAP8[$23 >> 0] = $c;
    $31 = $c & 255;
   } else label = 10;
  }
  if ((label | 0) == 10) $31 = ___overflow($f, $c) | 0;
  ___unlockfile($f);
  $$0 = $31;
 }
 do if ((label | 0) == 3) {
  if ((HEAP8[$f + 75 >> 0] | 0) != ($c | 0)) {
   $9 = $f + 20 | 0;
   $10 = HEAP32[$9 >> 2] | 0;
   if ($10 >>> 0 < (HEAP32[$f + 16 >> 2] | 0) >>> 0) {
    HEAP32[$9 >> 2] = $10 + 1;
    HEAP8[$10 >> 0] = $c;
    $$0 = $c & 255;
    break;
   }
  }
  $$0 = ___overflow($f, $c) | 0;
 } while (0);
 return $$0 | 0;
}

function __ZN5Oryol13PipelineSetupC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $11 = 0, $20 = 0;
 __ZN5Oryol7Locator9NonSharedEv($this);
 $0 = $this + 8 | 0;
 $1 = $0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$0 >> 2] = 2013282306;
 HEAP16[$0 + 4 >> 1] = 192;
 HEAPF32[$this + 16 >> 2] = 1.0;
 HEAPF32[$this + 20 >> 2] = 1.0;
 HEAPF32[$this + 24 >> 2] = 1.0;
 HEAPF32[$this + 28 >> 2] = 1.0;
 HEAP16[$this + 32 >> 1] = 28672;
 HEAP16[$this + 34 >> 1] = 28672;
 $11 = $this + 36 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP16[$11 >> 1] = 32647;
 HEAP16[$11 + 2 >> 1] = 255;
 HEAP16[$this + 40 >> 1] = 296;
 __ZN5Oryol12VertexLayoutC2Ev($this + 42 | 0);
 __ZN5Oryol12VertexLayoutC2Ev($this + 110 | 0);
 __ZN5Oryol12VertexLayoutC2Ev($this + 178 | 0);
 __ZN5Oryol12VertexLayoutC2Ev($this + 246 | 0);
 HEAP32[$this + 316 >> 2] = 3;
 $20 = $this + 320 | 0;
 HEAP32[$20 >> 2] = -1;
 HEAP32[$20 + 4 >> 2] = -1;
 return;
}

function __ZN5Oryol12TextureSetupC2Ev($this) {
 $this = $this | 0;
 var $18 = 0, $23 = 0, $4 = 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 1;
 HEAP32[$this + 28 >> 2] = 0;
 HEAP32[$this + 32 >> 2] = 20;
 $4 = $this + 40 | 0;
 HEAP32[$4 >> 2] = -1;
 HEAP32[$4 + 4 >> 2] = -1;
 HEAP16[$this + 48 >> 1] = 21;
 HEAPF32[$this + 52 >> 2] = 0.0;
 HEAPF32[$this + 56 >> 2] = 0.0;
 HEAPF32[$this + 60 >> 2] = 0.0;
 HEAPF32[$this + 64 >> 2] = 1.0;
 HEAPF32[$this + 68 >> 2] = 1.0;
 HEAP8[$this + 72 >> 0] = 0;
 HEAP8[$this + 73 >> 0] = 3;
 __ZN5Oryol7Locator9NonSharedEv($this + 76 | 0);
 $18 = $this + 88 | 0;
 HEAP32[$18 >> 2] = -1;
 HEAP32[$18 + 4 >> 2] = -1;
 $23 = $this + 680 | 0;
 _memset($this + 96 | 0, 0, 584) | 0;
 HEAP8[$23 >> 0] = HEAP8[$23 >> 0] & -128;
 return;
}

function __ZNK5Oryol13StringBuilder11FindFirstOfEiiPKc($this, $startIndex, $endIndex, $delims) {
 $this = $this | 0;
 $startIndex = $startIndex | 0;
 $endIndex = $endIndex | 0;
 $delims = $delims | 0;
 var $$0 = 0, $10 = 0, $4 = 0, $6 = 0;
 if (!$delims) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121477, 0, 120930, 446, 121547);
  _abort();
 }
 if (($endIndex | 0) != -1 & ($endIndex | 0) < ($startIndex | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121493, 0, 120930, 447, 121547);
  _abort();
 }
 $4 = HEAP32[$this + 8 >> 2] | 0;
 if (($4 | 0) <= ($startIndex | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121285, 0, 120930, 448, 121547);
  _abort();
 }
 $6 = HEAP32[$this >> 2] | 0;
 if (!$6) {
  $$0 = -1;
  return $$0 | 0;
 }
 $10 = (_strcspn($6 + $startIndex | 0, $delims) | 0) + $startIndex | 0;
 $$0 = ($10 | 0) < ($4 | 0) & (($endIndex | 0) == -1 | ($10 | 0) < ($endIndex | 0)) ? $10 : -1;
 return $$0 | 0;
}

function __ZN11DebugWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAPF32[$0 >> 2] = 400.0;
 HEAPF32[$0 + 4 >> 2] = 400.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 2);
 $4 = $this + 8 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $4, 128) | 0)) {
  __ZN5ImGui3EndEv();
  $8 = HEAP8[$4 >> 0] | 0;
  $9 = $8 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $9 | 0;
 }
 __ZN11DebugWindow17drawRegisterTableERN4yakc4kc85E($this, $kc);
 __ZN5ImGui9SeparatorEv();
 __ZN11DebugWindow15drawMainContentERN4yakc4kc85Eti($this, $kc, HEAP16[$kc + 65642 >> 1] | 0, 48);
 __ZN5ImGui9SeparatorEv();
 __ZN11DebugWindow12drawControlsERN4yakc4kc85E($this, $kc);
 __ZN5ImGui3EndEv();
 $8 = HEAP8[$4 >> 0] | 0;
 $9 = $8 << 24 >> 24 != 0;
 STACKTOP = sp;
 return $9 | 0;
}

function __ZN5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEE4growEv($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $growBy$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 1;
 $4 = HEAP32[$this + 16 >> 2] | 0;
 if (($2 | 0) < ($4 | 0)) $growBy$0 = $4; else {
  $7 = HEAP32[$this + 20 >> 2] | 0;
  $growBy$0 = ($2 | 0) > ($7 | 0) ? $7 : $2;
 }
 if (($growBy$0 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 118102, 550, 16951);
  _abort();
 }
 $10 = $growBy$0 + $1 | 0;
 $17 = $10 - (HEAP32[$this + 12 >> 2] | 0) + (HEAP32[$this + 8 >> 2] | 0) >> 1;
 if (($17 | 0) > -1) {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEEEE5allocEii($this, $10, $17);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(119209, 0, 118102, 535, 17137);
  _abort();
 }
}

function __ZN5Oryol5_priv10glRenderer16applyScissorRectEiiiib($this, $x, $y, $width, $height, $originTopLeft) {
 $this = $this | 0;
 $x = $x | 0;
 $y = $y | 0;
 $width = $width | 0;
 $height = $height | 0;
 $originTopLeft = $originTopLeft | 0;
 var $11 = 0, $5 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 253, 67077);
  _abort();
 }
 if ($originTopLeft) $11 = (HEAP32[$this + 56 >> 2] | 0) - ($height + $y) | 0; else $11 = $y;
 $5 = $this + 244 | 0;
 $8 = $this + 248 | 0;
 if ((HEAP32[$5 >> 2] | 0) == ($x | 0)) if (($11 | 0) == (HEAP32[$8 >> 2] | 0)) if ((HEAP32[$this + 252 >> 2] | 0) == ($width | 0)) if ((HEAP32[$this + 256 >> 2] | 0) == ($height | 0)) return;
 HEAP32[$5 >> 2] = $x;
 HEAP32[$8 >> 2] = $11;
 HEAP32[$this + 252 >> 2] = $width;
 HEAP32[$this + 256 >> 2] = $height;
 _glScissor($x | 0, $11 | 0, $width | 0, $height | 0);
 return;
}

function _scalbn($x, $n) {
 $x = +$x;
 $n = $n | 0;
 var $$0 = 0, $1 = 0.0, $12 = 0, $15 = 0, $16 = 0, $2 = 0, $5 = 0, $8 = 0.0, $9 = 0, $y$0 = 0.0;
 if (($n | 0) > 1023) {
  $1 = $x * 8988465674311579538646525.0e283;
  $2 = $n + -1023 | 0;
  if (($2 | 0) > 1023) {
   $5 = $n + -2046 | 0;
   $$0 = ($5 | 0) > 1023 ? 1023 : $5;
   $y$0 = $1 * 8988465674311579538646525.0e283;
  } else {
   $$0 = $2;
   $y$0 = $1;
  }
 } else if (($n | 0) < -1022) {
  $8 = $x * 2.2250738585072014e-308;
  $9 = $n + 1022 | 0;
  if (($9 | 0) < -1022) {
   $12 = $n + 2044 | 0;
   $$0 = ($12 | 0) < -1022 ? -1022 : $12;
   $y$0 = $8 * 2.2250738585072014e-308;
  } else {
   $$0 = $9;
   $y$0 = $8;
  }
 } else {
  $$0 = $n;
  $y$0 = $x;
 }
 $15 = _bitshift64Shl($$0 + 1023 | 0, 0, 52) | 0;
 $16 = tempRet0;
 HEAP32[tempDoublePtr >> 2] = $15;
 HEAP32[tempDoublePtr + 4 >> 2] = $16;
 return +($y$0 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZN5Oryol5_priv10glRenderer13applyViewPortEiiiib($this, $x, $y, $width, $height, $originTopLeft) {
 $this = $this | 0;
 $x = $x | 0;
 $y = $y | 0;
 $width = $width | 0;
 $height = $height | 0;
 $originTopLeft = $originTopLeft | 0;
 var $11 = 0, $5 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 226, 67006);
  _abort();
 }
 if ($originTopLeft) $11 = (HEAP32[$this + 56 >> 2] | 0) - ($height + $y) | 0; else $11 = $y;
 $5 = $this + 276 | 0;
 $8 = $this + 280 | 0;
 if ((HEAP32[$5 >> 2] | 0) == ($x | 0)) if (($11 | 0) == (HEAP32[$8 >> 2] | 0)) if ((HEAP32[$this + 284 >> 2] | 0) == ($width | 0)) if ((HEAP32[$this + 288 >> 2] | 0) == ($height | 0)) return;
 HEAP32[$5 >> 2] = $x;
 HEAP32[$8 >> 2] = $11;
 HEAP32[$this + 284 >> 2] = $width;
 HEAP32[$this + 288 >> 2] = $height;
 _glViewport($x | 0, $11 | 0, $width | 0, $height | 0);
 return;
}

function __ZN5Oryol5_priv14displayMgrBase14DiscardDisplayEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $1 = $this + 228 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(46675, 0, 46452, 47, 46694);
  _abort();
 } else {
  HEAP8[$1 >> 0] = 0;
  $4 = $this + 200 | 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$0 + 20 >> 2] = 0;
  HEAP32[$0 + 24 >> 2] = 0;
  HEAP32[$4 >> 2] = HEAP32[$0 >> 2];
  HEAP32[$4 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$4 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$4 + 12 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$4 + 16 >> 2] = HEAP32[$0 + 16 >> 2];
  HEAP32[$4 + 20 >> 2] = HEAP32[$0 + 20 >> 2];
  HEAP32[$4 + 24 >> 2] = HEAP32[$0 + 24 >> 2];
  STACKTOP = sp;
  return;
 }
}

function __ZNK5Oryol11ShaderSetup31UniformBlockIndexByStageAndSlotENS_11ShaderStage4CodeEi($this, $bindStage, $bindSlot) {
 $this = $this | 0;
 $bindStage = $bindStage | 0;
 $bindSlot = $bindSlot | 0;
 var $$12 = 0, $1 = 0, $i$05 = 0, label = 0;
 $1 = HEAP32[$this + 324 >> 2] | 0;
 if (($1 | 0) > 0) $i$05 = 0; else {
  $$12 = -1;
  return $$12 | 0;
 }
 while (1) {
  if ($i$05 >>> 0 >= 8) {
   label = 3;
   break;
  }
  if ((HEAP32[$this + 328 + ($i$05 * 288 | 0) + 280 >> 2] | 0) == ($bindStage | 0)) if ((HEAP32[$this + 328 + ($i$05 * 288 | 0) + 284 >> 2] | 0) == ($bindSlot | 0)) {
   $$12 = $i$05;
   label = 7;
   break;
  }
  $i$05 = $i$05 + 1 | 0;
  if (($i$05 | 0) >= ($1 | 0)) {
   $$12 = -1;
   label = 7;
   break;
  }
 }
 if ((label | 0) == 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 61951);
  _abort();
 } else if ((label | 0) == 7) return $$12 | 0;
 return 0;
}

function __ZN5Oryol5_priv19pipelineFactoryBase7DiscardEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $1 = $this + 28 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48146, 34, 48361);
  _abort();
 } else {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$0 + 20 >> 2] = 0;
  HEAP32[$0 + 24 >> 2] = 0;
  HEAP32[$this >> 2] = HEAP32[$0 >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$this + 12 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$this + 16 >> 2] = HEAP32[$0 + 16 >> 2];
  HEAP32[$this + 20 >> 2] = HEAP32[$0 + 20 >> 2];
  HEAP32[$this + 24 >> 2] = HEAP32[$0 + 24 >> 2];
  HEAP8[$1 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol13StringBuilder6AppendEc($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $1 = 0, $12 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $3 = $this + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($1 + 2 | 0) < ($4 | 0)) {
  $$pre$phiZ2D = $this;
  $12 = $1;
  $14 = HEAP32[$this >> 2] | 0;
 } else {
  $6 = $4 + 128 | 0;
  $7 = __ZN5Oryol6Memory5AllocEi($6) | 0;
  $8 = HEAP32[$this >> 2] | 0;
  if (!$8) HEAP8[$7 >> 0] = 0; else {
   _strcpy($7, $8) | 0;
   __ZN5Oryol6Memory4FreeEPv(HEAP32[$this >> 2] | 0);
   HEAP32[$this >> 2] = 0;
  }
  HEAP32[$this >> 2] = $7;
  HEAP32[$3 >> 2] = $6;
  $$pre$phiZ2D = $this;
  $12 = HEAP32[$0 >> 2] | 0;
  $14 = $7;
 }
 HEAP32[$0 >> 2] = $12 + 1;
 HEAP8[$14 + $12 >> 0] = $c;
 HEAP8[(HEAP32[$$pre$phiZ2D >> 2] | 0) + (HEAP32[$0 >> 2] | 0) >> 0] = 0;
 return;
}

function __ZN5Oryol5_priv16glTextureFactory7DiscardEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $1 = $this + 28 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 72053, 41, 72250);
  _abort();
 } else {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$0 + 20 >> 2] = 0;
  HEAP32[$0 + 24 >> 2] = 0;
  HEAP32[$this >> 2] = HEAP32[$0 >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$this + 12 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$this + 16 >> 2] = HEAP32[$0 + 16 >> 2];
  HEAP32[$this + 20 >> 2] = HEAP32[$0 + 20 >> 2];
  HEAP32[$this + 24 >> 2] = HEAP32[$0 + 24 >> 2];
  HEAP8[$1 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol5_priv15glShaderFactory7DiscardEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $1 = $this + 28 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 65202, 32, 65395);
  _abort();
 } else {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$0 + 20 >> 2] = 0;
  HEAP32[$0 + 24 >> 2] = 0;
  HEAP32[$this >> 2] = HEAP32[$0 >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$this + 12 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$this + 16 >> 2] = HEAP32[$0 + 16 >> 2];
  HEAP32[$this + 20 >> 2] = HEAP32[$0 + 20 >> 2];
  HEAP32[$this + 24 >> 2] = HEAP32[$0 + 24 >> 2];
  HEAP8[$1 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
}

function _wcrtomb($s, $wc, $st) {
 $s = $s | 0;
 $wc = $wc | 0;
 $st = $st | 0;
 var $$0 = 0;
 do if (!$s) $$0 = 1; else {
  if ($wc >>> 0 < 128) {
   HEAP8[$s >> 0] = $wc;
   $$0 = 1;
   break;
  }
  if ($wc >>> 0 < 2048) {
   HEAP8[$s >> 0] = $wc >>> 6 | 192;
   HEAP8[$s + 1 >> 0] = $wc & 63 | 128;
   $$0 = 2;
   break;
  }
  if ($wc >>> 0 < 55296 | ($wc & -8192 | 0) == 57344) {
   HEAP8[$s >> 0] = $wc >>> 12 | 224;
   HEAP8[$s + 1 >> 0] = $wc >>> 6 & 63 | 128;
   HEAP8[$s + 2 >> 0] = $wc & 63 | 128;
   $$0 = 3;
   break;
  }
  if (($wc + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[$s >> 0] = $wc >>> 18 | 240;
   HEAP8[$s + 1 >> 0] = $wc >>> 12 & 63 | 128;
   HEAP8[$s + 2 >> 0] = $wc >>> 6 & 63 | 128;
   HEAP8[$s + 3 >> 0] = $wc & 63 | 128;
   $$0 = 4;
   break;
  } else {
   HEAP32[(___errno_location() | 0) >> 2] = 84;
   $$0 = -1;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZN5Oryol5_priv13glMeshFactory7DiscardEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $0 = sp;
 $1 = $this + 28 | 0;
 if (!(HEAP8[$1 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 63465, 39, 63650);
  _abort();
 } else {
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 12 >> 2] = 0;
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$0 + 20 >> 2] = 0;
  HEAP32[$0 + 24 >> 2] = 0;
  HEAP32[$this >> 2] = HEAP32[$0 >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$0 + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$0 + 8 >> 2];
  HEAP32[$this + 12 >> 2] = HEAP32[$0 + 12 >> 2];
  HEAP32[$this + 16 >> 2] = HEAP32[$0 + 16 >> 2];
  HEAP32[$this + 20 >> 2] = HEAP32[$0 + 20 >> 2];
  HEAP32[$this + 24 >> 2] = HEAP32[$0 + 24 >> 2];
  HEAP8[$1 >> 0] = 0;
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol11ShaderSetup12programEntryD2Ev($this) {
 $this = $this | 0;
 __ZN5Oryol6StringD2Ev($this + 152 | 0);
 __ZN5Oryol6StringD2Ev($this + 144 | 0);
 __ZN5Oryol6StringD2Ev($this + 136 | 0);
 __ZN5Oryol6StringD2Ev($this + 128 | 0);
 __ZN5Oryol6StringD2Ev($this + 120 | 0);
 __ZN5Oryol6StringD2Ev($this + 112 | 0);
 __ZN5Oryol6StringD2Ev($this + 104 | 0);
 __ZN5Oryol6StringD2Ev($this + 96 | 0);
 __ZN5Oryol6StringD2Ev($this + 88 | 0);
 __ZN5Oryol6StringD2Ev($this + 80 | 0);
 __ZN5Oryol6StringD2Ev($this + 72 | 0);
 __ZN5Oryol6StringD2Ev($this + 64 | 0);
 __ZN5Oryol6StringD2Ev($this + 56 | 0);
 __ZN5Oryol6StringD2Ev($this + 48 | 0);
 __ZN5Oryol6StringD2Ev($this + 40 | 0);
 __ZN5Oryol6StringD2Ev($this + 32 | 0);
 __ZN5Oryol6StringD2Ev($this + 24 | 0);
 __ZN5Oryol6StringD2Ev($this + 16 | 0);
 __ZN5Oryol6StringD2Ev($this + 8 | 0);
 __ZN5Oryol6StringD2Ev($this);
 return;
}

function __ZN11DebugWindowD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 852;
 HEAP32[$this + 388 >> 2] = 0;
 HEAP32[$this + 372 >> 2] = 0;
 HEAP32[$this + 356 >> 2] = 0;
 HEAP32[$this + 340 >> 2] = 0;
 HEAP32[$this + 324 >> 2] = 0;
 HEAP32[$this + 308 >> 2] = 0;
 HEAP32[$this + 292 >> 2] = 0;
 HEAP32[$this + 276 >> 2] = 0;
 HEAP32[$this + 260 >> 2] = 0;
 HEAP32[$this + 244 >> 2] = 0;
 HEAP32[$this + 228 >> 2] = 0;
 HEAP32[$this + 212 >> 2] = 0;
 HEAP32[$this + 196 >> 2] = 0;
 HEAP32[$this + 180 >> 2] = 0;
 HEAP32[$this + 164 >> 2] = 0;
 HEAP32[$this + 148 >> 2] = 0;
 HEAP32[$this + 132 >> 2] = 0;
 HEAP32[$this + 116 >> 2] = 0;
 HEAP32[$this + 100 >> 2] = 0;
 HEAP32[$this + 84 >> 2] = 0;
 HEAP32[$this + 68 >> 2] = 0;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZN5Oryol21resourceContainerBase5setupEii($this, $labelStackCapacity, $registryCapacity) {
 $this = $this | 0;
 $labelStackCapacity = $labelStackCapacity | 0;
 $registryCapacity = $registryCapacity | 0;
 var $0 = 0, $1 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = $this + 112 | 0;
 if (HEAP8[$1 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110015, 0, 110028, 26, 110162);
  _abort();
 }
 $9 = (HEAP32[$this + 12 >> 2] | 0) - (HEAP32[$this + 8 >> 2] | 0) + $labelStackCapacity | 0;
 if (($9 | 0) > (HEAP32[$this + 4 >> 2] | 0)) __ZN5Oryol5_priv13elementBufferINS_13ResourceLabelEE5allocEii($this, $9, 0);
 __ZN5Oryol5_priv16resourceRegistry5SetupEi($this + 24 | 0, $registryCapacity);
 HEAP8[$1 >> 0] = 1;
 HEAP32[$0 >> 2] = -3;
 __ZN5Oryol5ArrayINS_13ResourceLabelEE3AddIJRS1_EEEvDpOT_($this, $0);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glRenderer4drawEi($this, $primGroupIndex) {
 $this = $this | 0;
 $primGroupIndex = $primGroupIndex | 0;
 var $9 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 510, 69454);
  _abort();
 }
 if (!(HEAP8[$this + 32 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(69369, 69383, 66399, 511, 69454);
  _abort();
 }
 if (!(HEAP32[$this + 212 >> 2] | 0)) return;
 $9 = HEAP32[$this + 216 >> 2] | 0;
 if (!$9) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(67606, 0, 66399, 516, 69454);
  _abort();
 }
 if ((HEAP32[$9 + 296 >> 2] | 0) <= ($primGroupIndex | 0)) return;
 if ($primGroupIndex >>> 0 >= 8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 69495);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer4drawERKNS_14PrimitiveGroupE($this, $9 + 300 + ($primGroupIndex << 3) | 0);
 return;
}

function _cycle($width, $ar, $n) {
 $width = $width | 0;
 $ar = $ar | 0;
 $n = $n | 0;
 var $$02 = 0, $1 = 0, $4 = 0, $6 = 0, $7 = 0, $i$01 = 0, $tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 $tmp = sp;
 L1 : do if (($n | 0) >= 2) {
  $1 = $ar + ($n << 2) | 0;
  HEAP32[$1 >> 2] = $tmp;
  if ($width | 0) {
   $$02 = $width;
   $6 = $tmp;
   while (1) {
    $4 = $$02 >>> 0 > 256 ? 256 : $$02;
    _memcpy($6 | 0, HEAP32[$ar >> 2] | 0, $4 | 0) | 0;
    $i$01 = 0;
    do {
     $7 = $ar + ($i$01 << 2) | 0;
     $i$01 = $i$01 + 1 | 0;
     _memcpy(HEAP32[$7 >> 2] | 0, HEAP32[$ar + ($i$01 << 2) >> 2] | 0, $4 | 0) | 0;
     HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + $4;
    } while (($i$01 | 0) != ($n | 0));
    if (($$02 | 0) == ($4 | 0)) break L1;
    $$02 = $$02 - $4 | 0;
    $6 = HEAP32[$1 >> 2] | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol3MapINS_10StringAtomENS_3PtrINS_10FileSystemEEEE4growEv($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $growBy$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 1;
 $4 = HEAP32[$this + 16 >> 2] | 0;
 if (($2 | 0) < ($4 | 0)) $growBy$0 = $4; else {
  $7 = HEAP32[$this + 20 >> 2] | 0;
  $growBy$0 = ($2 | 0) > ($7 | 0) ? $7 : $2;
 }
 if (($growBy$0 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 118102, 550, 108034);
  _abort();
 }
 $10 = $growBy$0 + $1 | 0;
 $17 = $10 - (HEAP32[$this + 12 >> 2] | 0) + (HEAP32[$this + 8 >> 2] | 0) >> 1;
 if (($17 | 0) > -1) {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_10StringAtomENS_3PtrINS_10FileSystemEEEEEE5allocEii($this, $10, $17);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(119209, 0, 118102, 535, 108174);
  _abort();
 }
}

function _fopen($filename, $mode) {
 $filename = $filename | 0;
 $mode = $mode | 0;
 var $$0 = 0, $5 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 if (!(_memchr(146293, HEAP8[$mode >> 0] | 0, 4) | 0)) {
  HEAP32[(___errno_location() | 0) >> 2] = 22;
  $$0 = 0;
 } else {
  $5 = ___fmodeflags($mode) | 0 | 32768;
  HEAP32[$vararg_buffer >> 2] = $filename;
  HEAP32[$vararg_buffer + 4 >> 2] = $5;
  HEAP32[$vararg_buffer + 8 >> 2] = 438;
  $7 = ___syscall_ret(___syscall5(5, $vararg_buffer | 0) | 0) | 0;
  if (($7 | 0) < 0) $$0 = 0; else {
   $9 = ___fdopen($7, $mode) | 0;
   if (!$9) {
    HEAP32[$vararg_buffer3 >> 2] = $7;
    ___syscall6(6, $vararg_buffer3 | 0) | 0;
    $$0 = 0;
   } else $$0 = $9;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _strerror($e) {
 $e = $e | 0;
 var $$lcssa = 0, $9 = 0, $i$03 = 0, $i$03$lcssa = 0, $i$12 = 0, $s$0$lcssa = 0, $s$01 = 0, $s$1 = 0, label = 0;
 $i$03 = 0;
 while (1) {
  if ((HEAPU8[144348 + $i$03 >> 0] | 0) == ($e | 0)) {
   $i$03$lcssa = $i$03;
   label = 2;
   break;
  }
  $i$03 = $i$03 + 1 | 0;
  if (($i$03 | 0) == 87) {
   $i$12 = 87;
   $s$01 = 144436;
   label = 5;
   break;
  }
 }
 if ((label | 0) == 2) if (!$i$03$lcssa) $s$0$lcssa = 144436; else {
  $i$12 = $i$03$lcssa;
  $s$01 = 144436;
  label = 5;
 }
 if ((label | 0) == 5) while (1) {
  label = 0;
  $s$1 = $s$01;
  while (1) {
   $9 = $s$1 + 1 | 0;
   if (!(HEAP8[$s$1 >> 0] | 0)) {
    $$lcssa = $9;
    break;
   } else $s$1 = $9;
  }
  $i$12 = $i$12 + -1 | 0;
  if (!$i$12) {
   $s$0$lcssa = $$lcssa;
   break;
  } else {
   $s$01 = $$lcssa;
   label = 5;
  }
 }
 return $s$0$lcssa | 0;
}

function __ZN5Oryol10StringAtom4copyERKS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0;
 $0 = HEAP32[$rhs >> 2] | 0;
 if (!$0) {
  HEAP32[$this >> 2] = 0;
  return;
 }
 $2 = HEAP32[$0 >> 2] | 0;
 $4 = ($2 | 0) == (__ZN5Oryol15stringAtomTable14threadLocalPtrEv() | 0);
 $5 = HEAP32[$rhs >> 2] | 0;
 if ($4) {
  HEAP32[$this >> 2] = $5;
  return;
 }
 $7 = HEAP32[$5 + 12 >> 2] | 0;
 if ($7 | 0) if (HEAP8[$7 >> 0] | 0) {
  $11 = __ZN5Oryol15stringAtomTable14threadLocalPtrEv() | 0;
  $12 = __ZN5Oryol15stringAtomTable13HashForStringEPKc($7) | 0;
  $13 = __ZNK5Oryol15stringAtomTable4FindEiPKc($11, $12, $7) | 0;
  HEAP32[$this >> 2] = $13;
  if ($13 | 0) return;
  HEAP32[$this >> 2] = __ZN5Oryol15stringAtomTable3AddEiPKc($11, $12, $7) | 0;
  return;
 }
 HEAP32[$this >> 2] = 0;
 return;
}

function __ZN11DebugWindowD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 852;
 HEAP32[$this + 388 >> 2] = 0;
 HEAP32[$this + 372 >> 2] = 0;
 HEAP32[$this + 356 >> 2] = 0;
 HEAP32[$this + 340 >> 2] = 0;
 HEAP32[$this + 324 >> 2] = 0;
 HEAP32[$this + 308 >> 2] = 0;
 HEAP32[$this + 292 >> 2] = 0;
 HEAP32[$this + 276 >> 2] = 0;
 HEAP32[$this + 260 >> 2] = 0;
 HEAP32[$this + 244 >> 2] = 0;
 HEAP32[$this + 228 >> 2] = 0;
 HEAP32[$this + 212 >> 2] = 0;
 HEAP32[$this + 196 >> 2] = 0;
 HEAP32[$this + 180 >> 2] = 0;
 HEAP32[$this + 164 >> 2] = 0;
 HEAP32[$this + 148 >> 2] = 0;
 HEAP32[$this + 132 >> 2] = 0;
 HEAP32[$this + 116 >> 2] = 0;
 HEAP32[$this + 100 >> 2] = 0;
 HEAP32[$this + 84 >> 2] = 0;
 HEAP32[$this + 68 >> 2] = 0;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 __ZN10WindowBaseD2Ev($this);
 return;
}

function ___overflow($f, $_c) {
 $f = $f | 0;
 $_c = $_c | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $2 = 0, $6 = 0, $7 = 0, $9 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp;
 $0 = $_c & 255;
 HEAP8[$c >> 0] = $0;
 $1 = $f + 16 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) if (!(___towrite($f) | 0)) {
  $9 = HEAP32[$1 >> 2] | 0;
  label = 4;
 } else $$0 = -1; else {
  $9 = $2;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $6 = $f + 20 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ($7 >>> 0 < $9 >>> 0) {
   $10 = $_c & 255;
   if (($10 | 0) != (HEAP8[$f + 75 >> 0] | 0)) {
    HEAP32[$6 >> 2] = $7 + 1;
    HEAP8[$7 >> 0] = $0;
    $$0 = $10;
    break;
   }
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, $c, 1) | 0) == 1) $$0 = HEAPU8[$c >> 0] | 0; else $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__111this_thread9sleep_forERKNS_6chrono8durationIxNS_5ratioILx1ELx1000000000EEEEE($ns) {
 $ns = $ns | 0;
 var $0 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $5 = 0, $ts = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ts = sp;
 $0 = $ns;
 $2 = HEAP32[$0 >> 2] | 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 if (($5 | 0) > 0 | ($5 | 0) == 0 & $2 >>> 0 > 0) {
  $11 = ___divdi3($2 | 0, $5 | 0, 1e9, 0) | 0;
  $17 = ($5 | 0) < 499999999 | ($5 | 0) == 499999999 & $2 >>> 0 < 3294967296;
  $18 = ___muldi3($11 | 0, tempRet0 | 0, -1e9, -1) | 0;
  $20 = _i64Add($2 | 0, $5 | 0, $18 | 0, tempRet0 | 0) | 0;
  HEAP32[$ts >> 2] = $17 ? $11 : 2147483647;
  HEAP32[$ts + 4 >> 2] = $17 ? $20 : 999999999;
  do if ((_nanosleep($ts | 0, $ts | 0) | 0) != -1) break; while ((HEAP32[(___errno_location() | 0) >> 2] | 0) == 4);
 }
 STACKTOP = sp;
 return;
}

function __ZN10WindowBase7setNameEPKc($this, $str) {
 $this = $this | 0;
 $str = $str | 0;
 var $0 = 0, $3 = 0, $strBuilder = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $strBuilder = sp + 16 | 0;
 $0 = sp + 8 | 0;
 if (!$str) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121489, 0, 35230, 20, 35277);
  _abort();
 } else {
  __ZN5Oryol13StringBuilderC2Ev($strBuilder);
  $3 = (HEAP32[36692] | 0) + 1 | 0;
  HEAP32[36692] = $3;
  HEAP32[$vararg_buffer >> 2] = $str;
  HEAP32[$vararg_buffer + 4 >> 2] = $3;
  __ZN5Oryol13StringBuilder6FormatEiPKcz($strBuilder, 32, 35316, $vararg_buffer) | 0;
  __ZNK5Oryol13StringBuilder9GetStringEv($0, $strBuilder);
  __ZN5Oryol6StringaSEOS0_($this + 12 | 0, $0);
  __ZN5Oryol6StringD2Ev($0);
  __ZN5Oryol13StringBuilderD2Ev($strBuilder);
  STACKTOP = sp;
  return;
 }
}

function _frexp($x, $e) {
 $x = +$x;
 $e = $e | 0;
 var $$0 = 0.0, $$01 = 0.0, $0 = 0, $1 = 0, $2 = 0, $4 = 0, $7 = 0.0, $storemerge = 0;
 HEAPF64[tempDoublePtr >> 3] = $x;
 $0 = HEAP32[tempDoublePtr >> 2] | 0;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $2 = _bitshift64Lshr($0 | 0, $1 | 0, 52) | 0;
 $4 = $2 & 2047;
 switch ($4 | 0) {
 case 0:
  {
   if ($x != 0.0) {
    $7 = +_frexp($x * 18446744073709551616.0, $e);
    $$01 = $7;
    $storemerge = (HEAP32[$e >> 2] | 0) + -64 | 0;
   } else {
    $$01 = $x;
    $storemerge = 0;
   }
   HEAP32[$e >> 2] = $storemerge;
   $$0 = $$01;
   break;
  }
 case 2047:
  {
   $$0 = $x;
   break;
  }
 default:
  {
   HEAP32[$e >> 2] = $4 + -1022;
   HEAP32[tempDoublePtr >> 2] = $0;
   HEAP32[tempDoublePtr + 4 >> 2] = $1 & -2146435073 | 1071644672;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +$$0;
}

function __ZN6SoLoud11AudioSourceC2Ev($this) {
 $this = $this | 0;
 var $scevgep = 0;
 HEAP32[$this >> 2] = 13412;
 $scevgep = $this + 44 | 0;
 HEAP32[$scevgep >> 2] = 0;
 HEAP32[$scevgep + 4 >> 2] = 0;
 HEAP32[$scevgep + 8 >> 2] = 0;
 HEAP32[$scevgep + 12 >> 2] = 0;
 HEAP32[$scevgep + 16 >> 2] = 0;
 HEAP32[$scevgep + 20 >> 2] = 0;
 HEAP32[$scevgep + 24 >> 2] = 0;
 HEAP32[$scevgep + 28 >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAPF32[$this + 8 >> 2] = 44100.0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 76 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 1;
 HEAPF32[$this + 24 >> 2] = 1.0;
 HEAPF32[$this + 28 >> 2] = 1.0e6;
 HEAPF32[$this + 32 >> 2] = 1.0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAPF32[$this + 40 >> 2] = 1.0;
 HEAP32[$this + 80 >> 2] = 0;
 HEAP32[$this + 84 >> 2] = 0;
 HEAP32[$this + 88 >> 2] = 0;
 HEAPF32[$this + 12 >> 2] = 1.0;
 return;
}

function __ZN5Oryol15stringAtomTable3AddEiPKc($this, $hash, $str) {
 $this = $this | 0;
 $hash = $hash | 0;
 $str = $str | 0;
 var $0 = 0, $3 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (__ZNK5Oryol15stringAtomTable4FindEiPKc($this, $hash, $str) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122253, 0, 121790, 56, 122286);
  _abort();
 }
 $3 = __ZN5Oryol16stringAtomBuffer9AddStringEPNS_15stringAtomTableEiPKc($this, $this, $hash, $str) | 0;
 if (!$3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(122369, 0, 121790, 64, 122286);
  _abort();
 } else {
  HEAP32[$0 >> 2] = $3;
  $5 = $this + 28 | 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
  __ZN5Oryol3SetINS_15stringAtomTable5EntryEE3AddERKS2_($this + 32 + ((HEAP32[$3 + 4 >> 2] & 1023) * 24 | 0) | 0, $0);
  STACKTOP = sp;
  return $3 | 0;
 }
 return 0;
}

function ___fseeko_unlocked($f, $off, $whence) {
 $f = $f | 0;
 $off = $off | 0;
 $whence = $whence | 0;
 var $$0 = 0, $$01 = 0, $7 = 0, $9 = 0, label = 0;
 if (($whence | 0) == 1) $$01 = $off - (HEAP32[$f + 8 >> 2] | 0) + (HEAP32[$f + 4 >> 2] | 0) | 0; else $$01 = $off;
 $7 = $f + 20 | 0;
 $9 = $f + 28 | 0;
 if ((HEAP32[$7 >> 2] | 0) >>> 0 > (HEAP32[$9 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, 0, 0) | 0;
  if (!(HEAP32[$7 >> 2] | 0)) $$0 = -1; else label = 5;
 } else label = 5;
 if ((label | 0) == 5) {
  HEAP32[$f + 16 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$7 >> 2] = 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[$f + 40 >> 2] & 31]($f, $$01, $whence) | 0) < 0) $$0 = -1; else {
   HEAP32[$f + 8 >> 2] = 0;
   HEAP32[$f + 4 >> 2] = 0;
   HEAP32[$f >> 2] = HEAP32[$f >> 2] & -17;
   $$0 = 0;
  }
 }
 return $$0 | 0;
}

function __ZN6SoLoud20BiquadResonantFilter14createInstanceEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $9 = 0;
 $0 = __Znwj(88) | 0;
 __ZN6SoLoud14FilterInstanceC2Ev($0);
 HEAP32[$0 >> 2] = 13308;
 $1 = $0 + 24 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 HEAP32[$1 + 24 >> 2] = 0;
 HEAP32[$1 + 28 >> 2] = 0;
 HEAP32[$0 + 84 >> 2] = $this;
 HEAP32[$0 + 80 >> 2] = HEAP32[$this + 4 >> 2];
 __ZN6SoLoud14FilterInstance10initParamsEi($0, 4) | 0;
 $9 = HEAP32[$0 + 12 >> 2] | 0;
 HEAP32[$9 + 4 >> 2] = HEAP32[$this + 8 >> 2];
 HEAP32[$9 + 12 >> 2] = HEAP32[$this + 16 >> 2];
 HEAP32[$9 + 8 >> 2] = HEAP32[$this + 12 >> 2];
 HEAPF32[$9 >> 2] = 1.0;
 __ZN6SoLoud28BiquadResonantFilterInstance13calcBQRParamsEv($0);
 return $0 | 0;
}

function __ZN5Audio5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $4 = 0, $5 = 0;
 HEAP32[$kc + 462864 >> 2] = $this;
 HEAP32[$kc + 462852 >> 2] = 3;
 HEAP32[$kc + 462856 >> 2] = 3;
 HEAP32[$kc + 462860 >> 2] = 4;
 $4 = $this + 109928 | 0;
 __ZN6SoLoud20BiquadResonantFilter9setParamsEifff($4, 1, 44100.0, 3.0e3, 2.0) | 0;
 __ZN6SoLoud6Soloud4initEjjjjj($this, 1, 0, 44100, 1024, 2) | 0;
 $5 = $this + 109952 | 0;
 __ZN6SoLoud11AudioSource17setSingleInstanceEb($5, 1);
 FUNCTION_TABLE_viii[HEAP32[HEAP32[$5 >> 2] >> 2] & 7]($5, 0, $4);
 HEAP32[$this + 110056 >> 2] = __ZN6SoLoud6Soloud20getBackendSamplerateEv($this) | 0;
 HEAP32[$this + 110044 >> 2] = (HEAP32[$kc + 65536 >> 2] | 0) * 1e3;
 HEAP32[$this + 126496 >> 2] = __ZN6SoLoud6Soloud4playERNS_11AudioSourceEffbj($this, $5, 1.0, 0.0, 0, 0) | 0;
 return;
}

function __ZN5Oryol3MapIiNS_7RunLoop4itemEE4growEv($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $growBy$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 1;
 $4 = HEAP32[$this + 16 >> 2] | 0;
 if (($2 | 0) < ($4 | 0)) $growBy$0 = $4; else {
  $7 = HEAP32[$this + 20 >> 2] | 0;
  $growBy$0 = ($2 | 0) > ($7 | 0) ? $7 : $2;
 }
 if (($growBy$0 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 118102, 550, 119116);
  _abort();
 }
 $10 = $growBy$0 + $1 | 0;
 $17 = $10 - (HEAP32[$this + 12 >> 2] | 0) + (HEAP32[$this + 8 >> 2] | 0) >> 1;
 if (($17 | 0) > -1) {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairIiNS_7RunLoop4itemEEEE5allocEii($this, $10, $17);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(119209, 0, 118102, 535, 119225);
  _abort();
 }
}

function __ZN12ModuleWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp + 8 | 0;
 HEAPF32[$0 >> 2] = 384.0;
 HEAPF32[$0 + 4 >> 2] = 116.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 2);
 $4 = $this + 8 | 0;
 if (!(__ZN5ImGui5BeginEPKcPbi(__ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, $4, 130) | 0)) {
  __ZN5ImGui3EndEv();
  $6 = HEAP8[$4 >> 0] | 0;
  $7 = $6 << 24 >> 24 != 0;
  STACKTOP = sp;
  return $7 | 0;
 }
 __ZN12ModuleWindow14drawModuleSlotERN4yakc4kc85Eh(0, $kc, 8);
 __ZN12ModuleWindow14drawModuleSlotERN4yakc4kc85Eh(0, $kc, 12);
 __ZN5ImGui11TextWrappedEPKcz(36498, sp);
 __ZN5ImGui3EndEv();
 $6 = HEAP8[$4 >> 0] | 0;
 $7 = $6 << 24 >> 24 != 0;
 STACKTOP = sp;
 return $7 | 0;
}

function __ZN5Oryol3MapINS_7LocatorEiE4growEv($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $growBy$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 1;
 $4 = HEAP32[$this + 16 >> 2] | 0;
 if (($2 | 0) < ($4 | 0)) $growBy$0 = $4; else {
  $7 = HEAP32[$this + 20 >> 2] | 0;
  $growBy$0 = ($2 | 0) > ($7 | 0) ? $7 : $2;
 }
 if (($growBy$0 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 118102, 550, 113128);
  _abort();
 }
 $10 = $growBy$0 + $1 | 0;
 $17 = $10 - (HEAP32[$this + 12 >> 2] | 0) + (HEAP32[$this + 8 >> 2] | 0) >> 1;
 if (($17 | 0) > -1) {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_7LocatorEiEEE5allocEii($this, $10, $17);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(119209, 0, 118102, 535, 111638);
  _abort();
 }
}

function __ZN5Oryol3MapINS_6StringES1_E4growEv($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $growBy$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 1;
 $4 = HEAP32[$this + 16 >> 2] | 0;
 if (($2 | 0) < ($4 | 0)) $growBy$0 = $4; else {
  $7 = HEAP32[$this + 20 >> 2] | 0;
  $growBy$0 = ($2 | 0) > ($7 | 0) ? $7 : $2;
 }
 if (($growBy$0 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 118102, 550, 18480);
  _abort();
 }
 $10 = $growBy$0 + $1 | 0;
 $17 = $10 - (HEAP32[$this + 12 >> 2] | 0) + (HEAP32[$this + 8 >> 2] | 0) >> 1;
 if (($17 | 0) > -1) {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_6StringES3_EEE5allocEii($this, $10, $17);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(119209, 0, 118102, 535, 18579);
  _abort();
 }
}

function __ZN5Oryol3Gfx11CommitFrameEv() {
 var $0 = 0, $1 = 0, $7 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $0 = sp;
 $1 = HEAP32[36694] | 0;
 if (!$1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 291, 46045);
  _abort();
 } else {
  __ZN5Oryol5_priv10glRenderer11commitFrameEv($1 + 416 | 0);
  __ZN5Oryol5_priv14displayMgrBase7PresentEv((HEAP32[36694] | 0) + 160 | 0);
  $7 = (HEAP32[36694] | 0) + 116 | 0;
  dest = $0;
  stop = dest + 40 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  dest = $7;
  src = $0;
  stop = dest + 40 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol5_priv12emscInputMgr16discardCallbacksEv($this) {
 $this = $this | 0;
 _emscripten_set_keydown_callback(0, 0, 1, 0) | 0;
 _emscripten_set_keyup_callback(0, 0, 1, 0) | 0;
 _emscripten_set_keypress_callback(0, 0, 1, 0) | 0;
 _emscripten_set_mousedown_callback(79430, 0, 1, 0) | 0;
 _emscripten_set_mouseup_callback(79430, 0, 1, 0) | 0;
 _emscripten_set_mousemove_callback(79430, 0, 1, 0) | 0;
 _emscripten_set_wheel_callback(79430, 0, 1, 0) | 0;
 _emscripten_set_touchstart_callback(79430, 0, 1, 0) | 0;
 _emscripten_set_touchend_callback(79430, 0, 1, 0) | 0;
 _emscripten_set_touchmove_callback(79430, 0, 1, 0) | 0;
 _emscripten_set_touchcancel_callback(79430, 0, 1, 0) | 0;
 _emscripten_set_devicemotion_callback(0, 1, 0) | 0;
 _emscripten_set_deviceorientation_callback(0, 1, 0) | 0;
 return;
}

function __ZN5ImGui13SetWindowSizeERK6ImVec2i($size, $cond) {
 $size = $size | 0;
 $cond = $cond | 0;
 var $$phi$trans$insert$i = 0, $$pre$i = 0, $1 = 0, $12 = 0.0, $14 = 0, $6 = 0.0, $8 = 0;
 $1 = HEAP32[38201] | 0;
 $$phi$trans$insert$i = $1 + 152 | 0;
 $$pre$i = HEAP32[$$phi$trans$insert$i >> 2] | 0;
 if (($cond | 0) != 0 & ($$pre$i & $cond | 0) == 0) return;
 HEAP32[$$phi$trans$insert$i >> 2] = $$pre$i & -15;
 $6 = +HEAPF32[$size >> 2];
 $8 = $1 + 128 | 0;
 if ($6 > 0.0) {
  HEAP32[$8 >> 2] = 0;
  HEAPF32[$1 + 36 >> 2] = $6;
 } else {
  HEAP32[$8 >> 2] = 2;
  HEAP8[$1 + 136 >> 0] = 0;
 }
 $12 = +HEAPF32[$size + 4 >> 2];
 $14 = $1 + 132 | 0;
 if ($12 > 0.0) {
  HEAP32[$14 >> 2] = 0;
  HEAPF32[$1 + 40 >> 2] = $12;
  return;
 } else {
  HEAP32[$14 >> 2] = 2;
  HEAP8[$1 + 136 >> 0] = 0;
  return;
 }
}

function __ZNK5Oryol5_priv10touchEvent11sameTouchesERKS1_($this, $other) {
 $this = $this | 0;
 $other = $other | 0;
 var $1 = 0, $15 = 0, $7 = 0, $i$02$i = 0, $i$04 = 0, label = 0;
 $1 = HEAP32[$other + 16 >> 2] | 0;
 if (($1 | 0) != (HEAP32[$this + 16 >> 2] | 0)) {
  $15 = 0;
  return $15 | 0;
 }
 if (($1 | 0) > 0) $i$04 = 0; else {
  $15 = 1;
  return $15 | 0;
 }
 L6 : while (1) {
  $7 = HEAP32[$other + 20 + ($i$04 << 4) >> 2] | 0;
  $i$02$i = 0;
  while (1) {
   if ((HEAP32[$this + 20 + ($i$02$i << 4) >> 2] | 0) == ($7 | 0)) break;
   $i$02$i = $i$02$i + 1 | 0;
   if (($i$02$i | 0) >= ($1 | 0)) {
    $15 = 0;
    label = 7;
    break L6;
   }
  }
  $i$04 = $i$04 + 1 | 0;
  if (($i$04 | 0) >= ($1 | 0)) {
   $15 = 1;
   label = 7;
   break;
  }
 }
 if ((label | 0) == 7) return $15 | 0;
 return 0;
}

function __ZN5Oryol3Gfx13UpdateTextureERKNS_2IdEPKvRKNS_14ImageDataAttrsE($id, $data, $offsetsAndSizes) {
 $id = $id | 0;
 $data = $data | 0;
 $offsetsAndSizes = $offsetsAndSizes | 0;
 var $0 = 0, $2 = 0, $9 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 329, 46236);
  _abort();
 }
 $2 = $0 + 144 | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
 if (!(HEAP8[$0 + 1280 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 105, 43944);
  _abort();
 } else {
  $9 = __ZNK5Oryol12ResourcePoolINS_5_priv7textureENS_12TextureSetupEE6LookupERKNS_2IdE($0 + 1568 | 0, $id) | 0;
  __ZN5Oryol5_priv10glRenderer13updateTextureEPNS0_7textureEPKvRKNS_14ImageDataAttrsE((HEAP32[36694] | 0) + 416 | 0, $9, $data, $offsetsAndSizes);
  return;
 }
}

function __ZN5Oryol7RunLoop3RunEv($this) {
 $this = $this | 0;
 var $1 = 0, $14 = 0, $4 = 0, $6 = 0, $7 = 0, $__begin$03 = 0;
 __ZN5Oryol7RunLoop12remCallbacksEv($this);
 __ZN5Oryol7RunLoop12addCallbacksEv($this);
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if ($1 | 0) {
  $4 = HEAP32[$this + 12 >> 2] | 0;
  $6 = HEAP32[$this + 16 >> 2] | 0;
  $7 = $1 + ($6 * 40 | 0) | 0;
  if (($4 | 0) != ($6 | 0)) {
   $__begin$03 = $1 + ($4 * 40 | 0) | 0;
   do {
    if (HEAP8[$__begin$03 + 32 >> 0] | 0) {
     $14 = HEAP32[$__begin$03 + 24 >> 2] | 0;
     FUNCTION_TABLE_vi[HEAP32[(HEAP32[$14 >> 2] | 0) + 24 >> 2] & 255]($14);
    }
    $__begin$03 = $__begin$03 + 40 | 0;
   } while (($__begin$03 | 0) != ($7 | 0));
  }
 }
 __ZN5Oryol7RunLoop12remCallbacksEv($this);
 __ZN5Oryol7RunLoop12addCallbacksEv($this);
 return;
}

function __ZN5Oryol3MapINS_2IdEiE4growEv($this) {
 $this = $this | 0;
 var $1 = 0, $10 = 0, $17 = 0, $2 = 0, $4 = 0, $7 = 0, $growBy$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 1;
 $4 = HEAP32[$this + 16 >> 2] | 0;
 if (($2 | 0) < ($4 | 0)) $growBy$0 = $4; else {
  $7 = HEAP32[$this + 20 >> 2] | 0;
  $growBy$0 = ($2 | 0) > ($7 | 0) ? $7 : $2;
 }
 if (($growBy$0 | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(123236, 0, 118102, 550, 113758);
  _abort();
 }
 $10 = $growBy$0 + $1 | 0;
 $17 = $10 - (HEAP32[$this + 12 >> 2] | 0) + (HEAP32[$this + 8 >> 2] | 0) >> 1;
 if (($17 | 0) > -1) {
  __ZN5Oryol5_priv13elementBufferINS_12KeyValuePairINS_2IdEiEEE5allocEii($this, $10, $17);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(119209, 0, 118102, 535, 111875);
  _abort();
 }
}

function __ZN6SoLoud6Soloud15stopAudioSourceERNS_11AudioSourceE($this, $aSound) {
 $this = $this | 0;
 $aSound = $aSound | 0;
 var $0 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $7 = 0, $i$01 = 0;
 $0 = $aSound + 20 | 0;
 if (!(HEAP32[$0 >> 2] | 0)) return;
 __ZN6SoLoud6Soloud14lockAudioMutexEv($this);
 $3 = $this + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) > 0) {
  $16 = $4;
  $i$01 = 0;
  while (1) {
   $7 = HEAP32[$this + 44 + ($i$01 << 2) >> 2] | 0;
   if (!$7) $15 = $16; else if ((HEAP32[$7 + 348 >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
    __ZN6SoLoud6Soloud9stopVoiceEj($this, $i$01);
    $15 = HEAP32[$3 >> 2] | 0;
   } else $15 = $16;
   $i$01 = $i$01 + 1 | 0;
   if (($i$01 | 0) >= ($15 | 0)) break; else $16 = $15;
  }
 }
 __ZN6SoLoud6Soloud16unlockAudioMutexEv($this);
 return;
}

function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1;
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1;
 $4$0 = _i64Subtract($1$0 ^ $a$0 | 0, $1$1 ^ $a$1 | 0, $1$0 | 0, $1$1 | 0) | 0;
 $4$1 = tempRet0;
 $7$0 = $2$0 ^ $1$0;
 $7$1 = $2$1 ^ $1$1;
 return _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0 | 0, $2$1 ^ $b$1 | 0, $2$0 | 0, $2$1 | 0) | 0, tempRet0, 0) | 0) ^ $7$0 | 0, tempRet0 ^ $7$1 | 0, $7$0 | 0, $7$1 | 0) | 0;
}

function __ZN5Oryol6String7releaseEv($this) {
 $this = $this | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $2 = 0, $4 = 0, $9 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) return;
 $2 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $2 - 1;
 do if (($2 | 0) == 1) {
  $4 = HEAP32[$this >> 2] | 0;
  if (!$4) {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120767, 0, 120525, 95, 120783);
   _abort();
  }
  if (!(HEAP32[$4 >> 2] | 0)) {
   __ZN5Oryol6Memory4FreeEPv(HEAP32[$this >> 2] | 0);
   HEAP32[$this >> 2] = 0;
   $9 = $this + 4 | 0;
   HEAP32[$9 >> 2] = 0;
   $$pre$phiZ2D = $9;
   break;
  } else {
   __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120813, 0, 120525, 96, 120783);
   _abort();
  }
 } else $$pre$phiZ2D = $this + 4 | 0; while (0);
 HEAP32[$this >> 2] = 0;
 HEAP32[$$pre$phiZ2D >> 2] = 0;
 return;
}

function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $12 = 0, $15 = 0, $20 = 0, $9 = 0, $mem$1 = 0;
 if (!$oldmem) {
  $mem$1 = _malloc($bytes) | 0;
  return $mem$1 | 0;
 }
 if ($bytes >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12;
  $mem$1 = 0;
  return $mem$1 | 0;
 }
 $9 = _try_realloc_chunk($oldmem + -8 | 0, $bytes >>> 0 < 11 ? 16 : $bytes + 11 & -8) | 0;
 if ($9 | 0) {
  $mem$1 = $9 + 8 | 0;
  return $mem$1 | 0;
 }
 $12 = _malloc($bytes) | 0;
 if (!$12) {
  $mem$1 = 0;
  return $mem$1 | 0;
 }
 $15 = HEAP32[$oldmem + -4 >> 2] | 0;
 $20 = ($15 & -8) - (($15 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($12 | 0, $oldmem | 0, ($20 >>> 0 < $bytes >>> 0 ? $20 : $bytes) | 0) | 0;
 _free($oldmem);
 $mem$1 = $12;
 return $mem$1 | 0;
}

function __ZN6SoLoud14FilterInstance12updateParamsEd($this, $aTime) {
 $this = $this | 0;
 $aTime = +$aTime;
 var $0 = 0, $1 = 0, $14 = 0.0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $i$01 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) return;
 $3 = $this + 16 | 0;
 $4 = $this + 8 | 0;
 $5 = $this + 12 | 0;
 $20 = $1;
 $i$01 = 0;
 while (1) {
  $6 = HEAP32[$3 >> 2] | 0;
  if ((HEAP32[$6 + ($i$01 * 48 | 0) + 44 >> 2] | 0) > 0) {
   HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 1 << $i$01;
   $14 = +__ZN6SoLoud5Fader3getEd($6 + ($i$01 * 48 | 0) | 0, $aTime);
   HEAPF32[(HEAP32[$5 >> 2] | 0) + ($i$01 << 2) >> 2] = $14;
   $19 = HEAP32[$0 >> 2] | 0;
  } else $19 = $20;
  $i$01 = $i$01 + 1 | 0;
  if ($i$01 >>> 0 >= $19 >>> 0) break; else $20 = $19;
 }
 return;
}

function __ZNK5Oryol11ShaderSetup24TextureBlockIndexByStageENS_11ShaderStage4CodeE($this, $bindStage) {
 $this = $this | 0;
 $bindStage = $bindStage | 0;
 var $$12 = 0, $1 = 0, $i$03 = 0, label = 0;
 $1 = HEAP32[$this + 2632 >> 2] | 0;
 if (($1 | 0) > 0) $i$03 = 0; else {
  $$12 = -1;
  return $$12 | 0;
 }
 while (1) {
  if ($i$03 >>> 0 >= 2) {
   label = 4;
   break;
  }
  if ((HEAP32[$this + 2636 + ($i$03 * 204 | 0) + 200 >> 2] | 0) == ($bindStage | 0)) {
   $$12 = $i$03;
   label = 6;
   break;
  }
  $i$03 = $i$03 + 1 | 0;
  if (($i$03 | 0) >= ($1 | 0)) {
   $$12 = -1;
   label = 6;
   break;
  }
 }
 if ((label | 0) == 4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 62104);
  _abort();
 } else if ((label | 0) == 6) return $$12 | 0;
 return 0;
}

function __ZNK5Oryol13StringBuilder12GetSubStringEii($agg$result, $this, $startIndex, $endIndex) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $startIndex = $startIndex | 0;
 $endIndex = $endIndex | 0;
 var $$0 = 0, $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  __ZN5Oryol6StringC2Ev($agg$result);
  return;
 }
 if (($endIndex | 0) == -1) $$0 = HEAP32[$this + 8 >> 2] | 0; else $$0 = $endIndex;
 if (!(($startIndex | 0) > -1 & ($$0 | 0) > ($startIndex | 0))) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121074, 0, 120930, 149, 121119);
  _abort();
 }
 if (($$0 | 0) > (HEAP32[$this + 8 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121184, 0, 120930, 150, 121119);
  _abort();
 }
 __ZN5Oryol6StringC2EPKcii($agg$result, $0, $startIndex, $$0);
 return;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $0 = 0, $1 = 0, $6 = 0, $9 = 0;
 $0 = $info + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  HEAP32[$0 >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
 } else {
  if (($1 | 0) != ($adjustedPtr | 0)) {
   $9 = $info + 36 | 0;
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
   HEAP32[$info + 24 >> 2] = 2;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $6 = $info + 24 | 0;
  if ((HEAP32[$6 >> 2] | 0) == 2) HEAP32[$6 >> 2] = $path_below;
 } while (0);
 return;
}

function __ZN5Oryol5_priv9glTextureD2Ev($this) {
 $this = $this | 0;
 if (HEAP32[$this + 748 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71868, 0, 71888, 23, 71948);
  _abort();
 }
 if (HEAP32[$this + 752 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(71986, 0, 71888, 24, 71948);
  _abort();
 }
 if (HEAP32[$this + 756 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72011, 0, 71888, 25, 71948);
  _abort();
 }
 if (HEAP32[$this + 768 >> 2] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72042, 0, 71888, 28, 71948);
  _abort();
 }
 if (!(HEAP32[$this + 772 >> 2] | 0)) {
  HEAP32[$this + 704 >> 2] = 0;
  HEAP32[$this + 92 >> 2] = 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(72042, 0, 71888, 28, 71948);
  _abort();
 }
}

function __ZL22GetDraggedColumnOffseti($column_index) {
 $column_index = $column_index | 0;
 var $1 = 0, $16 = 0.0, $18 = 0.0, $19 = 0, $21 = 0.0, $23 = 0.0, $25 = 0.0;
 $1 = HEAP32[38201] | 0;
 if (($column_index | 0) <= 0) ___assert_fail(124497, 124187, 8860, 124514);
 if ((HEAP32[38211] | 0) == ((HEAP32[$1 + 408 >> 2] | 0) + $column_index | 0)) {
  $16 = +HEAPF32[36771] + +HEAPF32[39228] - +HEAPF32[$1 + 20 >> 2];
  $18 = +__ZN5ImGui15GetColumnOffsetEi($column_index + -1 | 0);
  $19 = 152012;
  $21 = $18 + +HEAPF32[$19 >> 2];
  $23 = +__ZN5ImGui15GetColumnOffsetEi($column_index + 1 | 0);
  $25 = $23 - +HEAPF32[$19 >> 2];
  return +(+(~~($16 < $21 ? $21 : $16 > $25 ? $25 : $16) | 0));
 } else ___assert_fail(124537, 124187, 8861, 124514);
 return +(0.0);
}

function __ZN5Oryol5_priv16resourceRegistryC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $3 = 0, $7 = 0;
 HEAP8[$this >> 0] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 16;
 HEAP32[$this + 24 >> 2] = 65536;
 $3 = $this + 28 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP32[$3 + 12 >> 2] = 0;
 HEAP32[$this + 44 >> 2] = 16;
 HEAP32[$this + 48 >> 2] = 65536;
 HEAP8[$this + 52 >> 0] = 0;
 $7 = $this + 56 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$this + 72 >> 2] = 16;
 HEAP32[$this + 76 >> 2] = 65536;
 HEAP8[$this + 80 >> 0] = 0;
 return;
}

function __ZN5Oryol13StringBuilder15SubstituteFirstEPKcS2_($this, $match, $subst) {
 $this = $this | 0;
 $match = $match | 0;
 $subst = $subst | 0;
 var $$1 = 0, $4 = 0, $6 = 0, $8 = 0;
 if (!(($match | 0) != 0 & ($subst | 0) != 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121309, 0, 120930, 382, 121406);
  _abort();
 }
 if (!(HEAP8[$match >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121392, 0, 120930, 383, 121406);
  _abort();
 }
 $4 = HEAP32[$this >> 2] | 0;
 if (!$4) {
  $$1 = 0;
  return $$1 | 0;
 }
 $6 = _strstr($4, $match) | 0;
 if (!$6) {
  $$1 = 0;
  return $$1 | 0;
 }
 $8 = _strlen($match) | 0;
 __ZN5Oryol13StringBuilder16substituteCommonEPciiPKc($this, $6, $8, _strlen($subst) | 0, $subst);
 $$1 = 1;
 return $$1 | 0;
}

function __ZN6SoLoud6Soloud11setVoicePanEjf($this, $aVoice, $aPan) {
 $this = $this | 0;
 $aVoice = $aVoice | 0;
 $aPan = +$aPan;
 var $1 = 0, $11 = 0.0, $7 = 0.0, $9 = 0.0;
 $1 = HEAP32[$this + 44 + ($aVoice << 2) >> 2] | 0;
 if (!$1) return;
 HEAPF32[$1 + 16 >> 2] = $aPan;
 $7 = ($aPan + 1.0) * 3.141592653589793 * .25;
 $9 = +Math_cos(+$7);
 $11 = +Math_sin(+$7);
 HEAPF32[$1 + 20 >> 2] = $9;
 HEAPF32[$1 + 24 >> 2] = $11;
 switch (HEAP32[$1 + 60 >> 2] | 0) {
 case 4:
  {
   HEAPF32[$1 + 28 >> 2] = $9;
   HEAPF32[$1 + 32 >> 2] = $11;
   return;
  }
 case 6:
  {
   HEAPF32[$1 + 28 >> 2] = .7071067690849304;
   HEAPF32[$1 + 32 >> 2] = 1.0;
   HEAPF32[$1 + 36 >> 2] = $9;
   HEAPF32[$1 + 40 >> 2] = $11;
   return;
  }
 default:
  return;
 }
}

function __ZN5Oryol5_priv16glTextureFactory19glGenAndBindTextureEj($this, $target) {
 $this = $this | 0;
 $target = $target | 0;
 var $glTex = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $glTex = sp;
 if (!(HEAP8[$this + 28 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 72053, 467, 73340);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer22invalidateTextureStateEv(HEAP32[$this >> 2] | 0);
 HEAP32[$glTex >> 2] = 0;
 _glGenTextures(1, $glTex | 0);
 _glActiveTexture(33984);
 _glBindTexture($target | 0, HEAP32[$glTex >> 2] | 0);
 if (!(_glGetError() | 0)) {
  STACKTOP = sp;
  return HEAP32[$glTex >> 2] | 0;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 72053, 474, 73340);
  _abort();
 }
 return 0;
}

function ___fflush_unlocked($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $9 = 0, label = 0;
 $0 = $f + 20 | 0;
 $2 = $f + 28 | 0;
 if ((HEAP32[$0 >> 2] | 0) >>> 0 > (HEAP32[$2 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, 0, 0) | 0;
  if (!(HEAP32[$0 >> 2] | 0)) $$0 = -1; else label = 3;
 } else label = 3;
 if ((label | 0) == 3) {
  $9 = $f + 4 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $11 = $f + 8 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if ($10 >>> 0 < $12 >>> 0) FUNCTION_TABLE_iiii[HEAP32[$f + 40 >> 2] & 31]($f, $10 - $12 | 0, 1) | 0;
  HEAP32[$f + 16 >> 2] = 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$11 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZN5Oryol5_priv16glTextureFactory13SetupResourceERNS0_7textureEPKvi($this, $tex, $data, $size) {
 $this = $this | 0;
 $tex = $tex | 0;
 $data = $data | 0;
 $size = $size | 0;
 var $$0 = 0, $3 = 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 72053, 74, 73591);
  _abort();
 }
 $3 = $tex + 16 | 0;
 if (__ZNK5Oryol12TextureSetup25ShouldSetupAsRenderTargetEv($3) | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(73701, 0, 72053, 75, 73591);
  _abort();
 }
 if (!(__ZNK5Oryol12TextureSetup24ShouldSetupFromPixelDataEv($3) | 0)) {
  $$0 = 6;
  return $$0 | 0;
 }
 $$0 = __ZN5Oryol5_priv16glTextureFactory19createFromPixelDataERNS0_7textureEPKvi($this, $tex, $data, $size) | 0;
 return $$0 | 0;
}

function __ZN7ImGuiIO17AddInputCharacterEt($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $$01$i = 0, $$lcssa = 0, $0 = 0, $11 = 0, $4 = 0, $7 = 0, $n$0$lcssa$i1 = 0, $n$02$i = 0, $n$02$i$lcssa = 0;
 $0 = $this + 724 | 0;
 if (!(HEAP16[$0 >> 1] | 0)) {
  $11 = 1;
  $n$0$lcssa$i1 = 0;
 } else {
  $$01$i = $0;
  $n$02$i = 0;
  while (1) {
   $$01$i = $$01$i + 2 | 0;
   $4 = $n$02$i + 1 | 0;
   if (!(HEAP16[$$01$i >> 1] | 0)) {
    $$lcssa = $4;
    $n$02$i$lcssa = $n$02$i;
    break;
   } else $n$02$i = $4;
  }
  $7 = $n$02$i$lcssa + 2 | 0;
  if (($7 | 0) < 17) {
   $11 = $7;
   $n$0$lcssa$i1 = $$lcssa;
  } else return;
 }
 HEAP16[$this + 724 + ($n$0$lcssa$i1 << 1) >> 1] = $c;
 HEAP16[$this + 724 + ($11 << 1) >> 1] = 0;
 return;
}

function __ZN5Oryol5_priv13glMeshFactory13SetupResourceERNS0_4meshE($this, $msh) {
 $this = $this | 0;
 $msh = $msh | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 63465, 53, 63694);
  _abort();
 }
 $3 = $msh + 16 | 0;
 if (__ZNK5Oryol9MeshSetup16ShouldSetupEmptyEv($3) | 0) {
  __ZN5Oryol5_priv13glMeshFactory15createEmptyMeshERNS0_4meshE($this, $msh) | 0;
  STACKTOP = sp;
  return 3;
 }
 if (!(__ZNK5Oryol9MeshSetup25ShouldSetupFullScreenQuadEv($3) | 0)) {
  __ZN5Oryol3Log5ErrorEPKcz(64871, sp);
  _abort();
 }
 __ZN5Oryol5_priv13glMeshFactory20createFullscreenQuadERNS0_4meshE($this, $msh) | 0;
 STACKTOP = sp;
 return 3;
}

function __ZNK5Oryol18TextureBlockLayout25ComponentIndexForBindSlotEi($this, $bindSlot) {
 $this = $this | 0;
 $bindSlot = $bindSlot | 0;
 var $0 = 0, $8 = 0, $i$02 = 0, label = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (($0 | 0) > 0) $i$02 = 0; else {
  $8 = -1;
  return $8 | 0;
 }
 while (1) {
  if ($i$02 >>> 0 >= 16) {
   label = 3;
   break;
  }
  if ((HEAP32[$this + 4 + ($i$02 * 12 | 0) + 8 >> 2] | 0) == ($bindSlot | 0)) {
   $8 = $i$02;
   label = 6;
   break;
  }
  $i$02 = $i$02 + 1 | 0;
  if (($i$02 | 0) >= ($0 | 0)) {
   $8 = -1;
   label = 6;
   break;
  }
 }
 if ((label | 0) == 3) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 66121);
  _abort();
 } else if ((label | 0) == 6) return $8 | 0;
 return 0;
}

function __ZN5Oryol21resourceContainerBase8PopLabelEv($this) {
 $this = $this | 0;
 var $12 = 0, $4 = 0, $6 = 0, $8 = 0;
 if (!(HEAP8[$this + 112 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 110028, 68, 110622);
  _abort();
 }
 $4 = HEAP32[$this + 8 >> 2] | 0;
 $6 = HEAP32[$this + 12 >> 2] | 0;
 if (($6 | 0) == ($4 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(124006, 0, 123391, 286, 110684);
  _abort();
 }
 $8 = HEAP32[$this >> 2] | 0;
 if (!$8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(124006, 0, 123391, 286, 110684);
  _abort();
 } else {
  $12 = HEAP32[$8 + ($6 + -1 << 2) >> 2] | 0;
  __ZN5Oryol5_priv13elementBufferINS_13ResourceLabelEE5eraseEi($this, $6 + ~$4 | 0);
  return $12 | 0;
 }
 return 0;
}

function __ZNK5Oryol5_priv16resourceRegistry6LookupERKNS_7LocatorE($agg$result, $this, $loc) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $loc = $loc | 0;
 var $13 = 0, $14 = 0, $18 = 0, $5 = 0, $8 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 111306, 100, 114658);
  _abort();
 }
 if ((HEAP32[$loc + 4 >> 2] | 0) != -1) {
  $5 = __ZNK5Oryol5_priv16resourceRegistry18findEntryByLocatorERKNS_7LocatorE($this, $loc) | 0;
  if ($5 | 0) {
   $8 = $5 + 8 | 0;
   $13 = HEAP32[$8 + 4 >> 2] | 0;
   $14 = $agg$result;
   HEAP32[$14 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$14 + 4 >> 2] = $13;
   return;
  }
 }
 $18 = $agg$result;
 HEAP32[$18 >> 2] = -1;
 HEAP32[$18 + 4 >> 2] = -1;
 return;
}

function __ZN5Oryol7RunLoopC2Ev($this) {
 $this = $this | 0;
 var $3 = 0, $7 = 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 16;
 HEAP32[$this + 24 >> 2] = 65536;
 HEAP8[$this + 28 >> 0] = 0;
 $3 = $this + 32 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP32[$3 + 12 >> 2] = 0;
 HEAP32[$this + 48 >> 2] = 16;
 HEAP32[$this + 52 >> 2] = 65536;
 HEAP8[$this + 56 >> 0] = 0;
 $7 = $this + 60 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$this + 76 >> 2] = 16;
 HEAP32[$this + 80 >> 2] = 65536;
 return;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 3]($4, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
 }
 return;
}

function __ZN5Oryol3Gfx14UpdateVerticesERKNS_2IdEPKvi($id, $data, $numBytes) {
 $id = $id | 0;
 $data = $data | 0;
 $numBytes = $numBytes | 0;
 var $0 = 0, $2 = 0, $9 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 309, 46083);
  _abort();
 }
 $2 = $0 + 136 | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
 if (!(HEAP8[$0 + 1280 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 91, 44602);
  _abort();
 } else {
  $9 = __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6LookupERKNS_2IdE($0 + 1440 | 0, $id) | 0;
  __ZN5Oryol5_priv10glRenderer14updateVerticesEPNS0_4meshEPKvi((HEAP32[36694] | 0) + 416 | 0, $9, $data, $numBytes);
  return;
 }
}

function __ZN5Oryol3Gfx13UpdateIndicesERKNS_2IdEPKvi($id, $data, $numBytes) {
 $id = $id | 0;
 $data = $data | 0;
 $numBytes = $numBytes | 0;
 var $0 = 0, $2 = 0, $9 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 319, 46160);
  _abort();
 }
 $2 = $0 + 140 | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
 if (!(HEAP8[$0 + 1280 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 43864, 91, 44602);
  _abort();
 } else {
  $9 = __ZNK5Oryol12ResourcePoolINS_5_priv4meshENS_9MeshSetupEE6LookupERKNS_2IdE($0 + 1440 | 0, $id) | 0;
  __ZN5Oryol5_priv10glRenderer13updateIndicesEPNS0_4meshEPKvi((HEAP32[36694] | 0) + 416 | 0, $9, $data, $numBytes);
  return;
 }
}

function __ZN6ImFontC2Ev($this) {
 $this = $this | 0;
 var $5 = 0, $8 = 0;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this + 40 >> 2] = 0;
 HEAP32[$this + 48 >> 2] = 0;
 $5 = $this + 60 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 HEAP32[$5 + 12 >> 2] = 0;
 HEAP32[$5 + 16 >> 2] = 0;
 HEAP32[$5 + 20 >> 2] = 0;
 HEAPF32[$this + 4 >> 2] = 1.0;
 HEAP16[$this + 16 >> 1] = 63;
 HEAPF32[$this >> 2] = 0.0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 1065353216;
 $8 = $this + 20 | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 HEAP32[$8 + 12 >> 2] = 0;
 HEAP32[$8 + 16 >> 2] = 0;
 HEAP32[$this + 52 >> 2] = 0;
 HEAPF32[$this + 56 >> 2] = 0.0;
 return;
}

function __ZN5Oryol5_priv10glRenderer15setupBlendStateEv($this) {
 $this = $this | 0;
 var $3 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 909, 66653);
  _abort();
 }
 $3 = $this + 224 | 0;
 HEAP32[$3 >> 2] = 2013282306;
 HEAP32[$3 + 4 >> 2] = 192;
 _glDisable(3042);
 _glBlendFuncSeparate(1, 0, 1, 0);
 _glBlendEquationSeparate(32774, 32774);
 _glColorMask(1, 1, 1, 1);
 HEAPF32[$this + 260 >> 2] = 1.0;
 HEAPF32[$this + 264 >> 2] = 1.0;
 HEAPF32[$this + 268 >> 2] = 1.0;
 HEAPF32[$this + 272 >> 2] = 1.0;
 _glBlendColor(1.0, 1.0, 1.0, 1.0);
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 918, 66653);
  _abort();
 }
}

function __ZN5Oryol4Core5SetupEv() {
 var $6 = 0, $8 = 0, $9 = 0;
 if (HEAP32[36717] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117531, 0, 117542, 18, 117595);
  _abort();
 }
 if (HEAP32[36718] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117628, 0, 117542, 19, 117595);
  _abort();
 }
 if (!(HEAP32[36719] | 0)) {
  $6 = __ZN5Oryol6Memory5AllocEi(4) | 0;
  HEAP32[36717] = $6;
  HEAP32[$6 >> 2] = _pthread_self() | 0;
  $8 = __ZN5Oryol6Memory5AllocEi(84) | 0;
  __ZN5Oryol7RunLoopC2Ev($8);
  HEAP32[36718] = $8;
  $9 = __ZN5Oryol6Memory5AllocEi(84) | 0;
  __ZN5Oryol7RunLoopC2Ev($9);
  HEAP32[36719] = $9;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117656, 0, 117542, 20, 117595);
  _abort();
 }
}

function __ZN5Oryol3Gfx14CreateResourceINS_12TextureSetupEEENS_2IdERKT_PKvi($agg$result, $setup, $data, $size) {
 $agg$result = $agg$result | 0;
 $setup = $setup | 0;
 $data = $data | 0;
 $size = $size | 0;
 if (!(__ZN5Oryol3Gfx7IsValidEv() | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 80191, 179, 80811);
  _abort();
 }
 if (!$data) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80919, 0, 80191, 180, 80811);
  _abort();
 }
 if (($size | 0) > 0) {
  __ZN5Oryol5_priv24gfxResourceContainerBase6CreateINS_12TextureSetupEEENS_2IdERKT_PKvi($agg$result, (HEAP32[36694] | 0) + 1168 | 0, $setup, $data, $size);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80935, 0, 80191, 181, 80811);
  _abort();
 }
}

function __ZN5Oryol5_priv12inputMgrBase5setupERKNS_10InputSetupE($this, $setup) {
 $this = $this | 0;
 $setup = $setup | 0;
 var $0 = 0, $5 = 0;
 $0 = $this + 1408 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  HEAP32[$this + 1416 >> 2] = 1;
  HEAP32[$this + 1592 >> 2] = 2;
  HEAP8[$0 >> 0] = 1;
  $5 = $this + 1409 | 0;
  HEAP8[$5 >> 0] = HEAP8[$setup >> 0] | 0;
  HEAP8[$5 + 1 >> 0] = HEAP8[$setup + 1 >> 0] | 0;
  HEAP8[$5 + 2 >> 0] = HEAP8[$setup + 2 >> 0] | 0;
  HEAP8[$5 + 3 >> 0] = HEAP8[$setup + 3 >> 0] | 0;
  HEAP8[$5 + 4 >> 0] = HEAP8[$setup + 4 >> 0] | 0;
  HEAP8[$5 + 5 >> 0] = HEAP8[$setup + 5 >> 0] | 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78040, 0, 78057, 24, 78168);
  _abort();
 }
}

function __ZN5Oryol18UniformBlockLayout3AddERKNS_10StringAtomENS_11UniformType4CodeE($this, $name, $type) {
 $this = $this | 0;
 $name = $name | 0;
 $type = $type | 0;
 var $0 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZN5Oryol10StringAtom4copyERKS0_($0, $name);
 HEAP8[$0 + 4 >> 0] = $type;
 HEAP32[$0 + 8 >> 2] = 1;
 if (!(HEAP32[$0 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(47644, 0, 47665, 87, 47735);
  _abort();
 }
 if (($type & 255) < 9) {
  $6 = __ZN5Oryol18UniformBlockLayout3AddERKNS0_9ComponentE($this, $0) | 0;
  STACKTOP = sp;
  return $6 | 0;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(47829, 0, 47665, 88, 47735);
  _abort();
 }
 return 0;
}

function __ZN5Oryol5_priv17glPipelineFactory13SetupResourceERNS0_8pipelineE($this, $pip) {
 $this = $this | 0;
 $pip = $pip | 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 62779, 36, 62847);
  _abort();
 }
 __ZN5Oryol5_priv19pipelineFactoryBase13SetupResourceERNS0_8pipelineE($this, $pip) | 0;
 if (!(HEAP32[$pip + 344 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(62940, 0, 62779, 39, 62847);
  _abort();
 } else {
  __ZN5Oryol5_priv17glPipelineFactory18glSetupVertexAttrsERNS0_8pipelineE(0, $pip);
  HEAP32[$pip + 604 >> 2] = __ZN5Oryol5_priv7glTypes17asGLPrimitiveTypeENS_13PrimitiveType4CodeE(HEAP32[$pip + 332 >> 2] | 0) | 0;
  return 3;
 }
 return 0;
}

function __ZNKSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEE7__cloneEPNS0_6__baseISD_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 var $0 = 0, $1 = 0, $2 = 0, $8 = 0;
 HEAP32[$__p >> 2] = 348;
 $0 = $__p + 8 | 0;
 $1 = $this + 24 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) {
  HEAP32[$__p + 24 >> 2] = 0;
  return;
 }
 if (($2 | 0) == ($this + 8 | 0)) {
  HEAP32[$__p + 24 >> 2] = $0;
  $8 = HEAP32[$1 >> 2] | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$8 >> 2] | 0) + 12 >> 2] & 63]($8, $0);
  return;
 } else {
  HEAP32[$__p + 24 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 8 >> 2] & 63]($2) | 0;
  return;
 }
}

function __ZN5Oryol5_priv12inputMgrBase5resetEv($this) {
 $this = $this | 0;
 var $11 = 0, $14 = 0, $17 = 0, $2 = 0, $5 = 0, $8 = 0;
 if (HEAP8[$this >> 0] | 0) __ZN5Oryol8Keyboard5resetEv($this);
 $2 = $this + 624 | 0;
 if (HEAP8[$2 >> 0] | 0) __ZN5Oryol5Mouse5resetEv($2);
 $5 = $this + 1288 | 0;
 if (HEAP8[$5 >> 0] | 0) __ZN5Oryol8Touchpad5resetEv($5);
 $8 = $this + 712 | 0;
 if (HEAP8[$8 >> 0] | 0) __ZN5Oryol7Gamepad5resetEv($8);
 $11 = $this + 856 | 0;
 if (HEAP8[$11 >> 0] | 0) __ZN5Oryol7Gamepad5resetEv($11);
 $14 = $this + 1e3 | 0;
 if (HEAP8[$14 >> 0] | 0) __ZN5Oryol7Gamepad5resetEv($14);
 $17 = $this + 1144 | 0;
 if (!(HEAP8[$17 >> 0] | 0)) return;
 __ZN5Oryol7Gamepad5resetEv($17);
 return;
}

function __ZN5ImGui12IsKeyPressedEib($key_index, $repeat) {
 $key_index = $key_index | 0;
 $repeat = $repeat | 0;
 var $$2 = 0, $10 = 0.0, $12 = 0.0, $13 = 0, $3 = 0.0, $6 = 0.0, $9 = 0.0;
 if (($key_index | 0) < 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 if ($key_index >>> 0 >= 512) ___assert_fail(125465, 124187, 2875, 125549);
 $3 = +HEAPF32[147840 + ($key_index << 2) >> 2];
 if ($3 == 0.0) {
  $$2 = 1;
  return $$2 | 0;
 }
 if ($repeat) {
  $6 = +HEAPF32[36752];
  if ($3 > $6) {
   $9 = +HEAPF32[36753];
   $10 = $3 - $6;
   $12 = $9 * .5;
   $13 = +_fmodf($10, $9) > $12;
   if ($13 ^ +_fmodf($10 - +HEAPF32[36726], $9) > $12) {
    $$2 = 1;
    return $$2 | 0;
   }
  }
 }
 $$2 = 0;
 return $$2 | 0;
}

function __ZN5Oryol4Core7DiscardEv() {
 var $2 = 0, $6 = 0;
 if (!(HEAP32[36717] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 117542, 30, 117695);
  _abort();
 }
 $2 = HEAP32[36718] | 0;
 if (!$2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117730, 0, 117542, 31, 117695);
  _abort();
 }
 if (!(HEAP32[36719] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117747, 0, 117542, 32, 117695);
  _abort();
 } else {
  __ZN5Oryol7RunLoopD2Ev($2);
  __ZN5Oryol6Memory4FreeEPv($2);
  $6 = HEAP32[36719] | 0;
  __ZN5Oryol7RunLoopD2Ev($6);
  __ZN5Oryol6Memory4FreeEPv($6);
  __ZN5Oryol6Memory4FreeEPv(HEAP32[36717] | 0);
  HEAP32[36718] = 0;
  HEAP32[36719] = 0;
  HEAP32[36717] = 0;
  return;
 }
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}

function __ZN5Oryol5MouseC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $scevgep = 0;
 HEAP8[$this >> 0] = 0;
 $0 = $this + 4 | 0;
 $1 = $this + 32 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$this + 52 >> 2] = 16;
 HEAP32[$this + 56 >> 2] = 65536;
 HEAP8[$this + 60 >> 0] = 0;
 HEAP32[$this + 80 >> 2] = 0;
 $scevgep = $this + 28 | 0;
 HEAP8[$scevgep >> 0] = 0;
 HEAP8[$scevgep + 1 >> 0] = 0;
 HEAP8[$scevgep + 2 >> 0] = 0;
 return;
}

function __ZN5ImGui9InputTextEPKcPcjiPFiP25ImGuiTextEditCallbackDataEPv($label, $buf, $buf_size, $flags, $callback, $user_data) {
 $label = $label | 0;
 $buf = $buf | 0;
 $buf_size = $buf_size | 0;
 $flags = $flags | 0;
 $callback = $callback | 0;
 $user_data = $user_data | 0;
 var $0 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (!($flags & 1048576)) {
  HEAPF32[$0 >> 2] = 0.0;
  HEAPF32[$0 + 4 >> 2] = 0.0;
  $4 = __ZN5ImGui11InputTextExEPKcPciRK6ImVec2iPFiP25ImGuiTextEditCallbackDataEPv($label, $buf, $buf_size, $0, $flags, $callback, $user_data) | 0;
  STACKTOP = sp;
  return $4 | 0;
 } else ___assert_fail(125703, 124187, 7765, 125744);
 return 0;
}

function __ZN5Oryol5_priv12emscInputMgr11emscKeyDownEiPK23EmscriptenKeyboardEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 var $2 = 0, $5 = 0;
 if (!$userData) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80101, 0, 79073, 91, 79140);
  _abort();
 }
 $2 = HEAP32[$e + 156 >> 2] | 0;
 if ($2 >>> 0 >= 256) return 0;
 $5 = HEAP32[$userData + 2136 + ($2 << 2) >> 2] | 0;
 if (!$5) return 0;
 if (!(HEAP32[$e + 84 >> 2] | 0)) __ZN5Oryol8Keyboard9onKeyDownENS_3Key4CodeE($userData, $5); else __ZN5Oryol8Keyboard11onKeyRepeatENS_3Key4CodeE($userData, $5);
 return (HEAP8[$userData + 588 >> 0] ^ 1) & 255 | ($5 + -52 | 0) >>> 0 < 3 | 0;
}

function __ZN5Oryol8Keyboard5resetEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $1 = $this + 16 | 0;
 HEAP32[$1 >> 2] = HEAP32[$1 >> 2] & -33554432;
 $4 = $this + 20 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $5 = $this + 32 | 0;
 HEAP32[$5 >> 2] = HEAP32[$5 >> 2] & -33554432;
 $8 = $this + 52 | 0;
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $9 = $this + 64 | 0;
 HEAP32[$9 >> 2] = HEAP32[$9 >> 2] & -33554432;
 HEAP32[$this + 72 >> 2] = 0;
 HEAP32[$this + 68 >> 2] = 0;
 return;
}

function __ZN5Oryol15stringAtomTable14threadLocalPtrEv() {
 var $0 = 0, $14 = 0, $2 = 0, $8 = 0, $9 = 0;
 $0 = HEAP32[36722] | 0;
 if ($0 | 0) {
  $14 = $0;
  return $14 | 0;
 }
 $2 = __ZN5Oryol6Memory5AllocEi(24608) | 0;
 _memset($2 | 0, 0, 24608) | 0;
 HEAP32[$2 + 16 >> 2] = 16;
 HEAP32[$2 + 20 >> 2] = 65536;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP32[$2 + 28 >> 2] = 0;
 $8 = $2 + 24608 | 0;
 $9 = $2 + 32 | 0;
 do {
  HEAP32[$9 >> 2] = 0;
  HEAP32[$9 + 4 >> 2] = 0;
  HEAP32[$9 + 8 >> 2] = 0;
  HEAP32[$9 + 12 >> 2] = 0;
  HEAP32[$9 + 16 >> 2] = 16;
  HEAP32[$9 + 20 >> 2] = 65536;
  $9 = $9 + 24 | 0;
 } while (($9 | 0) != ($8 | 0));
 HEAP32[36722] = $2;
 $14 = $2;
 return $14 | 0;
}

function __ZN5ImGui8SameLineEff($local_pos_x, $spacing_w) {
 $local_pos_x = +$local_pos_x;
 $spacing_w = +$spacing_w;
 var $1 = 0, $7 = 0, $x$0 = 0.0, $y$01 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 if (HEAP8[$1 + 116 >> 0] | 0) return;
 $7 = $spacing_w < 0.0;
 if ($local_pos_x != 0.0) $x$0 = ($7 ? 0.0 : $spacing_w) + (+HEAPF32[$1 + 20 >> 2] - +HEAPF32[$1 + 72 >> 2] + $local_pos_x); else $x$0 = ($7 ? +HEAPF32[37995] : $spacing_w) + +HEAPF32[$1 + 172 >> 2];
 $y$01 = HEAP32[$1 + 176 >> 2] | 0;
 HEAP32[$1 + 196 >> 2] = HEAP32[$1 + 204 >> 2];
 HEAP32[$1 + 200 >> 2] = HEAP32[$1 + 208 >> 2];
 HEAPF32[$1 + 164 >> 2] = $x$0;
 HEAP32[$1 + 168 >> 2] = $y$01;
 return;
}

function __ZN5Oryol5_priv19pipelineFactoryBase13SetupResourceERNS0_8pipelineE($this, $pip) {
 $this = $this | 0;
 $pip = $pip | 0;
 var $6 = 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 48146, 48, 48411);
  _abort();
 }
 $6 = __ZNK5Oryol12ResourcePoolINS_5_priv6shaderENS_11ShaderSetupEE6LookupERKNS_2IdE(HEAP32[$this + 16 >> 2] | 0, $pip + 336 | 0) | 0;
 HEAP32[$pip + 344 >> 2] = $6;
 if (!$6) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(48673, 0, 48146, 50, 48411);
  _abort();
 }
 if ((HEAP32[$6 + 8 >> 2] | 0) == 3) return 3; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(48673, 0, 48146, 50, 48411);
  _abort();
 }
 return 0;
}

function __ZN5Oryol5_priv19pipelineFactoryBase5SetupERKNS0_11gfxPointersE($this, $ptrs) {
 $this = $this | 0;
 $ptrs = $ptrs | 0;
 var $0 = 0;
 $0 = $this + 28 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  HEAP32[$this >> 2] = HEAP32[$ptrs >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$ptrs + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$ptrs + 8 >> 2];
  HEAP32[$this + 12 >> 2] = HEAP32[$ptrs + 12 >> 2];
  HEAP32[$this + 16 >> 2] = HEAP32[$ptrs + 16 >> 2];
  HEAP32[$this + 20 >> 2] = HEAP32[$ptrs + 20 >> 2];
  HEAP32[$this + 24 >> 2] = HEAP32[$ptrs + 24 >> 2];
  HEAP8[$0 >> 0] = 1;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48146, 26, 48280);
  _abort();
 }
}

function __ZN5ImGui15GetColumnOffsetEi($column_index) {
 $column_index = $column_index | 0;
 var $$01 = 0, $$1 = 0.0, $1 = 0, $21 = 0.0, $6 = 0;
 $1 = HEAP32[38201] | 0;
 if (($column_index | 0) < 0) $$01 = HEAP32[$1 + 376 >> 2] | 0; else $$01 = $column_index;
 $6 = HEAP32[38211] | 0;
 if ($6 | 0) if (($6 | 0) == ((HEAP32[$1 + 408 >> 2] | 0) + $$01 | 0)) {
  $$1 = +__ZL22GetDraggedColumnOffseti($$01);
  return +$$1;
 }
 if (($$01 | 0) >= (HEAP32[$1 + 412 >> 2] | 0)) ___assert_fail(124599, 124187, 8883, 124642);
 $21 = +HEAPF32[$1 + 384 >> 2];
 $$1 = +(~~($21 + +HEAPF32[(HEAP32[$1 + 420 >> 2] | 0) + ($$01 << 2) >> 2] * (+HEAPF32[$1 + 388 >> 2] - $21)) | 0);
 return +$$1;
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr >> 0] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}

function __ZN5Oryol5_priv16glTextureFactory5SetupERKNS0_11gfxPointersE($this, $ptrs) {
 $this = $this | 0;
 $ptrs = $ptrs | 0;
 var $0 = 0;
 $0 = $this + 28 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  HEAP8[$0 >> 0] = 1;
  HEAP32[$this >> 2] = HEAP32[$ptrs >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$ptrs + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$ptrs + 8 >> 2];
  HEAP32[$this + 12 >> 2] = HEAP32[$ptrs + 12 >> 2];
  HEAP32[$this + 16 >> 2] = HEAP32[$ptrs + 16 >> 2];
  HEAP32[$this + 20 >> 2] = HEAP32[$ptrs + 20 >> 2];
  HEAP32[$this + 24 >> 2] = HEAP32[$ptrs + 24 >> 2];
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 72053, 33, 72172);
  _abort();
 }
}

function __ZN5Oryol5_priv15glShaderFactory5SetupERKNS0_11gfxPointersE($this, $ptrs) {
 $this = $this | 0;
 $ptrs = $ptrs | 0;
 var $0 = 0;
 $0 = $this + 28 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  HEAP8[$0 >> 0] = 1;
  HEAP32[$this >> 2] = HEAP32[$ptrs >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$ptrs + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$ptrs + 8 >> 2];
  HEAP32[$this + 12 >> 2] = HEAP32[$ptrs + 12 >> 2];
  HEAP32[$this + 16 >> 2] = HEAP32[$ptrs + 16 >> 2];
  HEAP32[$this + 20 >> 2] = HEAP32[$ptrs + 20 >> 2];
  HEAP32[$this + 24 >> 2] = HEAP32[$ptrs + 24 >> 2];
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 65202, 24, 65318);
  _abort();
 }
}

function _fclose($f) {
 $f = $f | 0;
 var $$pre = 0, $12 = 0, $18 = 0, $22 = 0, $24 = 0, $5 = 0, $7 = 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) {}
 $5 = (HEAP32[$f >> 2] & 1 | 0) != 0;
 if (!$5) {
  ___lock(162804);
  $7 = HEAP32[$f + 52 >> 2] | 0;
  $$pre = $f + 56 | 0;
  if ($7 | 0) HEAP32[$7 + 56 >> 2] = HEAP32[$$pre >> 2];
  $12 = HEAP32[$$pre >> 2] | 0;
  if ($12 | 0) HEAP32[$12 + 52 >> 2] = $7;
  if ((HEAP32[40700] | 0) == ($f | 0)) HEAP32[40700] = $12;
  ___unlock(162804);
 }
 $18 = _fflush($f) | 0;
 $22 = FUNCTION_TABLE_ii[HEAP32[$f + 12 >> 2] & 63]($f) | 0 | $18;
 $24 = HEAP32[$f + 92 >> 2] | 0;
 if ($24 | 0) _free($24);
 if (!$5) _free($f);
 return $22 | 0;
}

function __ZN5Oryol5_priv13glMeshFactory5SetupERKNS0_11gfxPointersE($this, $ptrs) {
 $this = $this | 0;
 $ptrs = $ptrs | 0;
 var $0 = 0;
 $0 = $this + 28 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  HEAP32[$this >> 2] = HEAP32[$ptrs >> 2];
  HEAP32[$this + 4 >> 2] = HEAP32[$ptrs + 4 >> 2];
  HEAP32[$this + 8 >> 2] = HEAP32[$ptrs + 8 >> 2];
  HEAP32[$this + 12 >> 2] = HEAP32[$ptrs + 12 >> 2];
  HEAP32[$this + 16 >> 2] = HEAP32[$ptrs + 16 >> 2];
  HEAP32[$this + 20 >> 2] = HEAP32[$ptrs + 20 >> 2];
  HEAP32[$this + 24 >> 2] = HEAP32[$ptrs + 24 >> 2];
  HEAP8[$0 >> 0] = 1;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 63465, 31, 63575);
  _abort();
 }
}

function ___toread($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $15 = 0, $2 = 0, $21 = 0, $6 = 0, $8 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = $f + 20 | 0;
 $8 = $f + 44 | 0;
 if ((HEAP32[$6 >> 2] | 0) >>> 0 > (HEAP32[$8 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 31]($f, 0, 0) | 0;
 HEAP32[$f + 16 >> 2] = 0;
 HEAP32[$f + 28 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 $15 = HEAP32[$f >> 2] | 0;
 if (!($15 & 20)) {
  $21 = HEAP32[$8 >> 2] | 0;
  HEAP32[$f + 8 >> 2] = $21;
  HEAP32[$f + 4 >> 2] = $21;
  $$0 = 0;
 } else if (!($15 & 4)) $$0 = -1; else {
  HEAP32[$f >> 2] = $15 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZN5Oryol5_priv11textureBaseC2Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this;
 HEAP32[$0 >> 2] = -1;
 HEAP32[$0 + 4 >> 2] = -1;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol12TextureSetupC2Ev($this + 16 | 0);
 HEAP32[$this + 704 >> 2] = 0;
 HEAP32[$this + 708 >> 2] = -2;
 HEAP32[$this + 712 >> 2] = -1;
 HEAP32[$this + 716 >> 2] = 20;
 HEAP32[$this + 720 >> 2] = 20;
 HEAP32[$this + 724 >> 2] = -1;
 HEAP32[$this + 728 >> 2] = 0;
 HEAP32[$this + 732 >> 2] = 0;
 HEAP32[$this + 736 >> 2] = 0;
 HEAP32[$this + 740 >> 2] = 1;
 HEAP8[$this + 744 >> 0] = 0;
 HEAP8[$this + 745 >> 0] = 0;
 HEAP8[$this + 746 >> 0] = 0;
 return;
}

function __ZNKSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0;
 $0 = __Znwj(32) | 0;
 HEAP32[$0 >> 2] = 348;
 $1 = $0 + 8 | 0;
 $3 = HEAP32[$this + 24 >> 2] | 0;
 if (!$3) {
  HEAP32[$0 + 24 >> 2] = 0;
  return $0 | 0;
 }
 if (($3 | 0) == ($this + 8 | 0)) {
  HEAP32[$0 + 24 >> 2] = $1;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, $1);
  return $0 | 0;
 } else {
  HEAP32[$0 + 24 >> 2] = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$3 >> 2] | 0) + 8 >> 2] & 63]($3) | 0;
  return $0 | 0;
 }
 return 0;
}

function __ZN5Oryol5_priv15glShaderFactory15DestroyResourceERNS0_6shaderE($this, $shd) {
 $this = $this | 0;
 $shd = $shd | 0;
 var $5 = 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(112092, 0, 65202, 171, 66323);
  _abort();
 }
 __ZN5Oryol5_priv10glRenderer21invalidateShaderStateEv(HEAP32[$this >> 2] | 0);
 $5 = HEAP32[$shd + 3064 >> 2] | 0;
 if (!$5) {
  __ZN5Oryol5_priv8glShader5ClearEv($shd);
  return;
 }
 _glDeleteProgram($5 | 0);
 if (!(_glGetError() | 0)) {
  __ZN5Oryol5_priv8glShader5ClearEv($shd);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 65202, 175, 66323);
  _abort();
 }
}

function __ZN5Oryol5_priv12emscInputMgr9emscWheelEiPK20EmscriptenWheelEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 var $8 = 0.0, $scroll = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $scroll = sp;
 if (!$userData) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80101, 0, 79073, 215, 79724);
  _abort();
 } else {
  $8 = +HEAPF64[$e + 80 >> 3] * -.5;
  HEAPF32[$scroll >> 2] = +HEAPF64[$e + 72 >> 3] * .5;
  HEAPF32[$scroll + 4 >> 2] = $8;
  __ZN5Oryol5Mouse8onScrollERKN3glm5tvec2IfLNS1_9precisionE0EEE($userData + 624 | 0, $scroll);
  STACKTOP = sp;
  return 1;
 }
 return 0;
}

function __ZN4Draw12UpdateParamsEbbRKN3glm5tvec2IfLNS0_9precisionE0EEE($this, $enableCrtEffect, $colorTV, $crtWarp) {
 $this = $this | 0;
 $enableCrtEffect = $enableCrtEffect | 0;
 $colorTV = $colorTV | 0;
 $crtWarp = $crtWarp | 0;
 var $1 = 0, $11 = 0, $12 = 0, $16 = 0, $6 = 0, $8 = 0;
 HEAP8[$this >> 0] = $enableCrtEffect & 1;
 $1 = $colorTV & 1;
 HEAP32[$this + 376 >> 2] = $1;
 HEAP32[$this + 192 >> 2] = $1;
 $6 = $crtWarp;
 $8 = HEAP32[$6 >> 2] | 0;
 $11 = HEAP32[$6 + 4 >> 2] | 0;
 $12 = $this + 368 | 0;
 HEAP32[$12 >> 2] = $8;
 HEAP32[$12 + 4 >> 2] = $11;
 $16 = $this + 184 | 0;
 HEAP32[$16 >> 2] = $8;
 HEAP32[$16 + 4 >> 2] = $11;
 return;
}

function __ZN6SoLoud25AudioSourceInstance3dData4initERNS_11AudioSourceE($this, $aSource) {
 $this = $this | 0;
 $aSource = $aSource | 0;
 HEAP32[$this + 36 >> 2] = HEAP32[$aSource + 36 >> 2];
 HEAP32[$this + 32 >> 2] = HEAP32[$aSource + 32 >> 2];
 HEAP32[$this + 40 >> 2] = HEAP32[$aSource + 40 >> 2];
 HEAP32[$this + 28 >> 2] = HEAP32[$aSource + 28 >> 2];
 HEAP32[$this + 24 >> 2] = HEAP32[$aSource + 24 >> 2];
 HEAP32[$this + 44 >> 2] = HEAP32[$aSource + 80 >> 2];
 HEAP32[$this + 52 >> 2] = HEAP32[$aSource + 88 >> 2];
 HEAP32[$this + 48 >> 2] = HEAP32[$aSource + 84 >> 2];
 HEAPF32[$this + 60 >> 2] = 1.0;
 HEAPF32[$this + 56 >> 2] = 1.0;
 return;
}

function __ZN5Oryol5_priv7glTypes16asGLTexImageTypeENS_11PixelFormat4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch ($c | 0) {
 case 5:
  {
   $$0 = 5126;
   break;
  }
 case 6:
  {
   $$0 = 5131;
   break;
  }
 case 7:
 case 1:
 case 0:
  {
   $$0 = 5121;
   break;
  }
 case 4:
  {
   $$0 = 32820;
   break;
  }
 case 3:
  {
   $$0 = 33635;
   break;
  }
 case 2:
  {
   $$0 = 32819;
   break;
  }
 case 11:
  {
   $$0 = 5123;
   break;
  }
 case 12:
  {
   $$0 = 34042;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74248, sp);
   _abort();
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol5_priv12emscInputMgr13emscMouseDownEiPK20EmscriptenMouseEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 var $$0$i = 0, $2 = 0;
 if (!$userData) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80101, 0, 79073, 172, 79438);
  _abort();
 }
 $2 = HEAP16[$e + 40 >> 1] | 0;
 if (($2 & 65535) > 2) return 1;
 if ((__ZN5Oryol5Mouse12onButtonDownENS0_6ButtonE($userData + 624 | 0, $2 & 65535) | 0) == 1) {
  _emscripten_request_pointerlock(0, 0) | 0;
  $$0$i = 1;
 } else {
  _emscripten_exit_pointerlock() | 0;
  $$0$i = 0;
 }
 HEAP8[$userData + 2132 >> 0] = $$0$i;
 return 1;
}

function __ZN5Oryol5_priv14emscDisplayMgr14DiscardDisplayEv($this) {
 $this = $this | 0;
 var $1 = 0;
 if (!(__ZNK5Oryol5_priv14displayMgrBase14IsDisplayValidEv($this) | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(74837, 0, 74860, 61, 74927);
  _abort();
 }
 $1 = $this + 248 | 0;
 if (!(HEAP32[$1 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(74979, 0, 74860, 62, 74927);
  _abort();
 } else {
  __ZN5Oryol5_priv5glExt7DiscardEv();
  __ZN5Oryol5_priv6glInfo7DiscardEv();
  _emscripten_webgl_destroy_context(HEAP32[$1 >> 2] | 0) | 0;
  HEAP32[$1 >> 2] = 0;
  __ZN5Oryol5_priv14displayMgrBase14DiscardDisplayEv($this);
  return;
 }
}

function _memcmp($vl, $vr, $n) {
 $vl = $vl | 0;
 $vr = $vr | 0;
 $n = $n | 0;
 var $$03 = 0, $$lcssa = 0, $$lcssa19 = 0, $1 = 0, $11 = 0, $2 = 0, $l$04 = 0, $r$05 = 0;
 L1 : do if (!$n) $11 = 0; else {
  $$03 = $n;
  $l$04 = $vl;
  $r$05 = $vr;
  while (1) {
   $1 = HEAP8[$l$04 >> 0] | 0;
   $2 = HEAP8[$r$05 >> 0] | 0;
   if ($1 << 24 >> 24 != $2 << 24 >> 24) {
    $$lcssa = $1;
    $$lcssa19 = $2;
    break;
   }
   $$03 = $$03 + -1 | 0;
   if (!$$03) {
    $11 = 0;
    break L1;
   } else {
    $l$04 = $l$04 + 1 | 0;
    $r$05 = $r$05 + 1 | 0;
   }
  }
  $11 = ($$lcssa & 255) - ($$lcssa19 & 255) | 0;
 } while (0);
 return $11 | 0;
}

function ___stdio_seek($f, $off, $whence) {
 $f = $f | 0;
 $off = $off | 0;
 $whence = $whence | 0;
 var $5 = 0, $ret = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $ret = sp + 20 | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = $off;
 HEAP32[$vararg_buffer + 12 >> 2] = $ret;
 HEAP32[$vararg_buffer + 16 >> 2] = $whence;
 if ((___syscall_ret(___syscall140(140, $vararg_buffer | 0) | 0) | 0) < 0) {
  HEAP32[$ret >> 2] = -1;
  $5 = -1;
 } else $5 = HEAP32[$ret >> 2] | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZN5Oryol5_priv12emscInputMgr11emscMouseUpEiPK20EmscriptenMouseEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 var $$0$i = 0, $2 = 0;
 if (!$userData) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80101, 0, 79073, 185, 79534);
  _abort();
 }
 $2 = HEAP16[$e + 40 >> 1] | 0;
 if (($2 & 65535) > 2) return 1;
 if ((__ZN5Oryol5Mouse10onButtonUpENS0_6ButtonE($userData + 624 | 0, $2 & 65535) | 0) == 1) {
  _emscripten_request_pointerlock(0, 0) | 0;
  $$0$i = 1;
 } else {
  _emscripten_exit_pointerlock() | 0;
  $$0$i = 0;
 }
 HEAP8[$userData + 2132 >> 0] = $$0$i;
 return 1;
}

function ___fmodeflags($mode) {
 $mode = $mode | 0;
 var $1 = 0, $2 = 0, $4 = 0, $7 = 0, $flags$0 = 0, $flags$0$ = 0, $flags$2 = 0, $flags$2$ = 0, $flags$4 = 0;
 $1 = (_strchr($mode, 43) | 0) == 0;
 $2 = HEAP8[$mode >> 0] | 0;
 $flags$0 = $1 ? $2 << 24 >> 24 != 114 & 1 : 2;
 $4 = (_strchr($mode, 120) | 0) == 0;
 $flags$0$ = $4 ? $flags$0 : $flags$0 | 128;
 $7 = (_strchr($mode, 101) | 0) == 0;
 $flags$2 = $7 ? $flags$0$ : $flags$0$ | 524288;
 $flags$2$ = $2 << 24 >> 24 == 114 ? $flags$2 : $flags$2 | 64;
 $flags$4 = $2 << 24 >> 24 == 119 ? $flags$2$ | 512 : $flags$2$;
 return ($2 << 24 >> 24 == 97 ? $flags$4 | 1024 : $flags$4) | 0;
}

function __ZL19ChildWindowComparerPKvS0_($lhs, $rhs) {
 $lhs = $lhs | 0;
 $rhs = $rhs | 0;
 var $$3 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $3 = HEAP32[(HEAP32[$lhs >> 2] | 0) + 8 >> 2] | 0;
 $4 = $3 & 33554432;
 $6 = HEAP32[(HEAP32[$rhs >> 2] | 0) + 8 >> 2] | 0;
 $7 = $6 & 33554432;
 if (($4 | 0) != ($7 | 0)) {
  $$3 = $4 - $7 | 0;
  return $$3 | 0;
 }
 $10 = $3 & 16777216;
 $11 = $6 & 16777216;
 if (($10 | 0) == ($11 | 0)) {
  $14 = $3 & 8388608;
  $15 = $6 & 8388608;
  return (($14 | 0) == ($15 | 0) ? 0 : $14 - $15 | 0) | 0;
 } else {
  $$3 = $10 - $11 | 0;
  return $$3 | 0;
 }
 return 0;
}

function __ZN5ImGui14IsMouseClickedEib($button, $repeat) {
 $button = $button | 0;
 $repeat = $repeat | 0;
 var $$1 = 0, $11 = 0.0, $12 = 0, $2 = 0.0, $5 = 0.0, $8 = 0.0, $9 = 0.0;
 if ($button >>> 0 >= 5) ___assert_fail(126559, 124187, 2909, 126639);
 $2 = +HEAPF32[147780 + ($button << 2) >> 2];
 if ($2 == 0.0) {
  $$1 = 1;
  return $$1 | 0;
 }
 if ($repeat) {
  $5 = +HEAPF32[36752];
  if ($2 > $5) {
   $8 = +HEAPF32[36753];
   $9 = $2 - $5;
   $11 = $8 * .5;
   $12 = +_fmodf($9, $8) > $11;
   if ($12 ^ +_fmodf($9 - +HEAPF32[36726], $8) > $11) {
    $$1 = 1;
    return $$1 | 0;
   }
  }
 }
 $$1 = 0;
 return $$1 | 0;
}

function __ZNK15SnapshotStorage11HasSnapshotEi($this, $slotIndex) {
 $this = $this | 0;
 $slotIndex = $slotIndex | 0;
 var $1 = 0, $4 = 0;
 if ($slotIndex >>> 0 < 4) {
  $1 = $this + ($slotIndex * 262328 | 0) | 0;
  $4 = $this + ($slotIndex * 262328 | 0) + 4 | 0;
  return ((HEAPU8[$1 >> 0] | HEAPU8[$1 + 1 >> 0] << 8 | HEAPU8[$1 + 2 >> 0] << 16 | HEAPU8[$1 + 3 >> 0] << 24 | 0) == 1497451331 ? (HEAPU8[$4 >> 0] | HEAPU8[$4 + 1 >> 0] << 8 | HEAPU8[$4 + 2 >> 0] << 16 | HEAPU8[$4 + 3 >> 0] << 24 | 0) == 1 : 0) | 0;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(40357, 0, 40407, 23, 40624);
  _abort();
 }
 return 0;
}

function __ZN5Oryol5_priv8meshBaseC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, dest = 0, stop = 0;
 $0 = $this;
 HEAP32[$0 >> 2] = -1;
 HEAP32[$0 + 4 >> 2] = -1;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol9MeshSetupC2Ev($this + 16 | 0);
 HEAP32[$this + 208 >> 2] = 0;
 __ZN5Oryol12VertexLayoutC2Ev($this + 212 | 0);
 HEAP32[$this + 280 >> 2] = -1;
 HEAP32[$this + 284 >> 2] = 0;
 HEAP32[$this + 288 >> 2] = -1;
 HEAP32[$this + 292 >> 2] = -1;
 dest = $this + 296 | 0;
 stop = dest + 68 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZN6SoLoud14FilterInstance6filterEPfjjfd($this, $aBuffer, $aSamples, $aChannels, $aSamplerate, $aTime) {
 $this = $this | 0;
 $aBuffer = $aBuffer | 0;
 $aSamples = $aSamples | 0;
 $aChannels = $aChannels | 0;
 $aSamplerate = +$aSamplerate;
 $aTime = +$aTime;
 var $5 = 0, $i$01 = 0;
 if (!$aChannels) return;
 $i$01 = 0;
 do {
  $5 = $aBuffer + ((Math_imul($i$01, $aSamples) | 0) << 2) | 0;
  FUNCTION_TABLE_viiiddii[HEAP32[(HEAP32[$this >> 2] | 0) + 12 >> 2] & 3]($this, $5, $aSamples, $aSamplerate, $aTime, $i$01, $aChannels);
  $i$01 = $i$01 + 1 | 0;
 } while (($i$01 | 0) != ($aChannels | 0));
 return;
}

function __ZN5Oryol8KeyboardC2Ev($this) {
 $this = $this | 0;
 var $2 = 0, $3 = 0, dest = 0, stop = 0;
 HEAP8[$this >> 0] = 0;
 HEAP8[$this + 588 >> 0] = 0;
 $2 = $this + 592 | 0;
 $3 = $this + 612 | 0;
 dest = $this + 4 | 0;
 stop = dest + 68 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$3 >> 2] = 16;
 HEAP32[$this + 616 >> 2] = 65536;
 HEAP8[$this + 620 >> 0] = 0;
 __ZN5Oryol6Memory5ClearEPvi($this + 72 | 0, 516);
 return;
}

function __ZN5Oryol5_priv5glExt24IsTextureFormatSupportedENS_11PixelFormat4CodeE($fmt) {
 $fmt = $fmt | 0;
 var $$0 = 0, $switch$tableidx$i = 0;
 $switch$tableidx$i = $fmt + -8 | 0;
 if ($switch$tableidx$i >>> 0 >= 11) {
  $$0 = 1;
  return $$0 | 0;
 }
 if (!(2023 >>> ($switch$tableidx$i & 2047) & 1)) {
  $$0 = 1;
  return $$0 | 0;
 }
 switch ($fmt | 0) {
 case 10:
 case 9:
 case 8:
  {
   $$0 = (HEAP8[163329] | 0) != 0;
   return $$0 | 0;
  }
 case 16:
 case 15:
 case 14:
 case 13:
  {
   $$0 = (HEAP8[163330] | 0) != 0;
   return $$0 | 0;
  }
 default:
  {
   $$0 = 0;
   return $$0 | 0;
  }
 }
 return 0;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 7]($4, $info, $adjustedPtr, $path_below);
 }
 return;
}

function __ZNK5Oryol5_priv10touchEvent8touchPosEj($this, $touchId) {
 $this = $this | 0;
 $touchId = $touchId | 0;
 var $1 = 0, $i$02$i = 0, $i$02$i$lcssa = 0;
 $1 = HEAP32[$this + 16 >> 2] | 0;
 L1 : do if (($1 | 0) > 0) {
  $i$02$i = 0;
  while (1) {
   if ((HEAP32[$this + 20 + ($i$02$i << 4) >> 2] | 0) == ($touchId | 0)) {
    $i$02$i$lcssa = $i$02$i;
    break;
   }
   $i$02$i = $i$02$i + 1 | 0;
   if (($i$02$i | 0) >= ($1 | 0)) break L1;
  }
  return $this + 20 + ($i$02$i$lcssa << 4) + 4 | 0;
 } while (0);
 __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78936, 0, 78938, 40, 79004);
 _abort();
 return 0;
}

function __ZL30SetClipboardTextFn_DefaultImplPKc($text) {
 $text = $text | 0;
 var $0 = 0, $1 = 0, $10 = 0, $15 = 0, $3 = 0, $8 = 0;
 $0 = 157976;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = 147664;
  HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
  FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($1);
  HEAP32[$0 >> 2] = 0;
 }
 $8 = _strlen($text) | 0;
 $10 = 147664;
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
 $15 = FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($8 + 1 | 0) | 0;
 HEAP32[$0 >> 2] = $15;
 _memcpy($15 | 0, $text | 0, $8 | 0) | 0;
 HEAP8[(HEAP32[$0 >> 2] | 0) + $8 >> 0] = 0;
 return;
}

function _strcmp($l, $r) {
 $l = $l | 0;
 $r = $r | 0;
 var $$014 = 0, $$05 = 0, $$lcssa = 0, $$lcssa2 = 0, $0 = 0, $1 = 0, $6 = 0, $7 = 0;
 $0 = HEAP8[$l >> 0] | 0;
 $1 = HEAP8[$r >> 0] | 0;
 if ($0 << 24 >> 24 == 0 ? 1 : $0 << 24 >> 24 != $1 << 24 >> 24) {
  $$lcssa = $0;
  $$lcssa2 = $1;
 } else {
  $$014 = $l;
  $$05 = $r;
  do {
   $$014 = $$014 + 1 | 0;
   $$05 = $$05 + 1 | 0;
   $6 = HEAP8[$$014 >> 0] | 0;
   $7 = HEAP8[$$05 >> 0] | 0;
  } while (!($6 << 24 >> 24 == 0 ? 1 : $6 << 24 >> 24 != $7 << 24 >> 24));
  $$lcssa = $6;
  $$lcssa2 = $7;
 }
 return ($$lcssa & 255) - ($$lcssa2 & 255) | 0;
}

function __ZN5Oryol10StringAtomaSERKNS_6StringE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $4 = 0, $5 = 0, $6 = 0;
 HEAP32[$this >> 2] = 0;
 $0 = __ZNK5Oryol6String6AsCStrEv($rhs) | 0;
 if ($0 | 0) if (HEAP8[$0 >> 0] | 0) {
  $4 = __ZN5Oryol15stringAtomTable14threadLocalPtrEv() | 0;
  $5 = __ZN5Oryol15stringAtomTable13HashForStringEPKc($0) | 0;
  $6 = __ZNK5Oryol15stringAtomTable4FindEiPKc($4, $5, $0) | 0;
  HEAP32[$this >> 2] = $6;
  if ($6 | 0) return;
  HEAP32[$this >> 2] = __ZN5Oryol15stringAtomTable3AddEiPKc($4, $5, $0) | 0;
  return;
 }
 HEAP32[$this >> 2] = 0;
 return;
}

function __ZN5ImGui7DragIntEPKcPifiiS1_($label, $v, $v_speed, $v_min, $v_max, $display_format) {
 $label = $label | 0;
 $v = $v | 0;
 $v_speed = +$v_speed;
 $v_min = $v_min | 0;
 $v_max = $v_max | 0;
 $display_format = $display_format | 0;
 var $5 = 0, $v_f = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $v_f = sp;
 HEAPF32[$v_f >> 2] = +(HEAP32[$v >> 2] | 0);
 $5 = __ZN5ImGui9DragFloatEPKcPffffS1_f($label, $v_f, $v_speed, +($v_min | 0), +($v_max | 0), $display_format | 0 ? $display_format : 126792, 1.0) | 0;
 HEAP32[$v >> 2] = ~~+HEAPF32[$v_f >> 2];
 STACKTOP = sp;
 return $5 | 0;
}

function __ZN5Oryol15stringAtomTable13HashForStringEPKc($str) {
 $str = $str | 0;
 var $$lcssa = 0, $0 = 0, $3 = 0, $6 = 0, $8 = 0, $h$0$lcssa = 0, $h$01 = 0, $p$02 = 0;
 $0 = HEAP8[$str >> 0] | 0;
 if (!($0 << 24 >> 24)) $h$0$lcssa = 0; else {
  $3 = $0;
  $h$01 = 0;
  $p$02 = $str;
  while (1) {
   $p$02 = $p$02 + 1 | 0;
   $6 = (($3 << 24 >> 24) + $h$01 | 0) * 1025 | 0;
   $8 = $6 >> 6 ^ $6;
   $3 = HEAP8[$p$02 >> 0] | 0;
   if (!($3 << 24 >> 24)) {
    $$lcssa = $8;
    break;
   } else $h$01 = $8;
  }
  $h$0$lcssa = $$lcssa * 9 | 0;
 }
 return ($h$0$lcssa >> 11 ^ $h$0$lcssa) * 32769 | 0;
}

function __ZN5Oryol5_priv10glRenderer22setupDepthStencilStateEv($this) {
 $this = $this | 0;
 var $3 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 807, 66597);
  _abort();
 }
 $3 = $this + 232 | 0;
 HEAP32[$3 >> 2] = 1879076864;
 HEAP32[$3 + 4 >> 2] = 16744327;
 _glEnable(2929);
 _glDepthFunc(519);
 _glDepthMask(0);
 _glDisable(2960);
 _glStencilFunc(519, 0, -1);
 _glStencilOp(7680, 7680, 7680);
 _glStencilMask(-1);
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 818, 66597);
  _abort();
 }
}

function __ZNK5Oryol21resourceContainerBase9peekLabelEv($this) {
 $this = $this | 0;
 var $6 = 0, $8 = 0;
 if (!(HEAP8[$this + 112 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 110028, 77, 111116);
  _abort();
 }
 $6 = HEAP32[$this + 12 >> 2] | 0;
 if ((HEAP32[$this + 8 >> 2] | 0) == ($6 | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(124006, 0, 123391, 293, 111185);
  _abort();
 }
 $8 = HEAP32[$this >> 2] | 0;
 if (!$8) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(124006, 0, 123391, 293, 111185);
  _abort();
 } else return HEAP32[$8 + ($6 + -1 << 2) >> 2] | 0;
 return 0;
}

function __ZN5ImGui8MenuItemEPKcS1_Pbb($label, $shortcut, $p_selected, $enabled) {
 $label = $label | 0;
 $shortcut = $shortcut | 0;
 $p_selected = $p_selected | 0;
 $enabled = $enabled | 0;
 var $$0 = 0, $0 = 0, $4 = 0;
 $0 = ($p_selected | 0) != 0;
 if (!$0) {
  $$0 = __ZN5ImGui8MenuItemEPKcS1_bb($label, $shortcut, 0, $enabled) | 0;
  return $$0 | 0;
 }
 $4 = __ZN5ImGui8MenuItemEPKcS1_bb($label, $shortcut, (HEAP8[$p_selected >> 0] | 0) != 0, $enabled) | 0;
 if (!($0 & $4)) {
  $$0 = $4;
  return $$0 | 0;
 }
 HEAP8[$p_selected >> 0] = HEAP8[$p_selected >> 0] ^ 1;
 $$0 = 1;
 return $$0 | 0;
}

function __ZN5Oryol6StringC2EPKcii($this, $ptr, $startIndex, $endIndex) {
 $this = $this | 0;
 $ptr = $ptr | 0;
 $startIndex = $startIndex | 0;
 $endIndex = $endIndex | 0;
 var $$0 = 0;
 if (!$ptr) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120684, 0, 120525, 58, 120699);
  _abort();
 }
 if (($endIndex | 0) == -1) $$0 = _strlen($ptr) | 0; else $$0 = $endIndex;
 if (($$0 | 0) > ($startIndex | 0)) {
  __ZN5Oryol6String6createEPKci($this, $ptr + $startIndex | 0, $$0 - $startIndex | 0);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120745, 0, 120525, 62, 120699);
  _abort();
 }
}

function __ZN5ImGui12PopItemWidthEv() {
 var $$in = 0, $1 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $3 = $1 + 280 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 $6 = $4 + -1 | 0;
 HEAP32[$3 >> 2] = $6;
 if (!$6) {
  $$in = $1 + 472 | 0;
  $13 = HEAP32[$$in >> 2] | 0;
  $14 = $1 + 268 | 0;
  HEAP32[$14 >> 2] = $13;
  return;
 } else {
  $$in = (HEAP32[$1 + 288 >> 2] | 0) + ($4 + -2 << 2) | 0;
  $13 = HEAP32[$$in >> 2] | 0;
  $14 = $1 + 268 | 0;
  HEAP32[$14 >> 2] = $13;
  return;
 }
}

function __ZNK5Oryol10StringAtomeqERKS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $$0 = 0, $0 = 0, $1 = 0;
 $0 = HEAP32[$rhs >> 2] | 0;
 $1 = HEAP32[$this >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  $$0 = 1;
  return $$0 | 0;
 }
 if (($0 | 0) == 0 | ($1 | 0) == 0) {
  $$0 = 0;
  return $$0 | 0;
 }
 if ((HEAP32[$0 >> 2] | 0) == (HEAP32[$1 >> 2] | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 if ((HEAP32[$0 + 4 >> 2] | 0) != (HEAP32[$1 + 4 >> 2] | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$0 = (_strcmp(HEAP32[$1 + 12 >> 2] | 0, HEAP32[$0 + 12 >> 2] | 0) | 0) == 0;
 return $$0 | 0;
}

function __ZN5Oryol5_priv12emscInputMgr9emscKeyUpEiPK23EmscriptenKeyboardEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 var $$0 = 0, $2 = 0, $5 = 0;
 if (!$userData) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80101, 0, 79073, 126, 79237);
  _abort();
 }
 $2 = HEAP32[$e + 156 >> 2] | 0;
 if ($2 >>> 0 >= 256) {
  $$0 = 0;
  return $$0 | 0;
 }
 $5 = HEAP32[$userData + 2136 + ($2 << 2) >> 2] | 0;
 if (!$5) {
  $$0 = 0;
  return $$0 | 0;
 }
 __ZN5Oryol8Keyboard7onKeyUpENS_3Key4CodeE($userData, $5);
 $$0 = 1;
 return $$0 | 0;
}

function __ZN13CommandWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZN10WindowBase7setNameEPKc($this, 37159);
 $1 = $this + 20 | 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($0, 37173);
 if (($1 | 0) != ($0 | 0)) {
  HEAP32[$1 >> 2] = 0;
  __ZN5Oryol10StringAtom4copyERKS0_($1, $0);
 }
 HEAP8[$this + 32 >> 0] = 0;
 HEAP16[$this + 30 >> 1] = 127;
 HEAP8[$this + 24 >> 0] = 55;
 HEAP8[$this + 25 >> 0] = 70;
 HEAP8[$this + 26 >> 0] = 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol10StringAtomC2ERKNS_6StringE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $4 = 0, $5 = 0, $6 = 0;
 $0 = __ZNK5Oryol6String6AsCStrEv($rhs) | 0;
 if ($0 | 0) if (HEAP8[$0 >> 0] | 0) {
  $4 = __ZN5Oryol15stringAtomTable14threadLocalPtrEv() | 0;
  $5 = __ZN5Oryol15stringAtomTable13HashForStringEPKc($0) | 0;
  $6 = __ZNK5Oryol15stringAtomTable4FindEiPKc($4, $5, $0) | 0;
  HEAP32[$this >> 2] = $6;
  if ($6 | 0) return;
  HEAP32[$this >> 2] = __ZN5Oryol15stringAtomTable3AddEiPKc($4, $5, $0) | 0;
  return;
 }
 HEAP32[$this >> 2] = 0;
 return;
}

function __ZN5Oryol4IMUI5SetupEv() {
 var $2 = 0, $5 = 0, $6 = 0;
 if (HEAP32[36707] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117531, 0, 79816, 16, 79866);
  _abort();
 }
 $2 = __ZN5Oryol6Memory5AllocEi(1573040) | 0;
 $5 = $2 + 1310896 | 0;
 _memset($2 | 0, 0, 1573040) | 0;
 _memset($2 + 4 | 0, -1, 172) | 0;
 $6 = $2 + 176 | 0;
 do {
  HEAP32[$6 >> 2] = 0;
  HEAP32[$6 + 4 >> 2] = 0;
  HEAP32[$6 + 8 >> 2] = 0;
  HEAP32[$6 + 12 >> 2] = 0;
  $6 = $6 + 20 | 0;
 } while (($6 | 0) != ($5 | 0));
 HEAP32[36707] = $2;
 __ZN5Oryol5_priv12imguiWrapper5SetupEv($2);
 return;
}

function __ZN5Oryol5_priv13baseURLLoader9doRequestERKNS_3PtrINS_6IOReadEEE($this, $ioReq) {
 $this = $this | 0;
 $ioReq = $ioReq | 0;
 var $$0 = 0, $0 = 0, $4 = 0;
 $0 = HEAP32[$ioReq >> 2] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
  _abort();
 }
 if (!(HEAP8[$0 + 9 >> 0] & 1)) {
  $$0 = 1;
  return $$0 | 0;
 }
 $4 = HEAP32[$ioReq >> 2] | 0;
 if (!$4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117948, 0, 117961, 147, 103741);
  _abort();
 }
 HEAP32[$4 + 72 >> 2] = 1e3;
 HEAP8[$4 + 8 >> 0] = 1;
 $$0 = 0;
 return $$0 | 0;
}

function __ZNK5Oryol13StringBuilder8ContainsEPKc($this, $str) {
 $this = $this | 0;
 $str = $str | 0;
 var $$0$i = 0, $1 = 0, $6 = 0;
 if (!$str) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121489, 0, 120930, 658, 121697);
  _abort();
 }
 $1 = HEAP32[$this >> 2] | 0;
 if (!$1) {
  $$0$i = 0;
  return $$0$i | 0;
 }
 if ((HEAP32[$this + 8 >> 2] | 0) <= 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121285, 0, 120930, 646, 121627);
  _abort();
 }
 $6 = _strstr($1, $str) | 0;
 if (!$6) {
  $$0$i = 0;
  return $$0$i | 0;
 }
 $$0$i = ($6 - $1 | 0) != -1;
 return $$0$i | 0;
}

function __ZN6SoLoud14FilterInstance19fadeFilterParameterEjfdd($this, $aAttributeId, $aTo, $aTime, $aStartTime) {
 $this = $this | 0;
 $aAttributeId = $aAttributeId | 0;
 $aTo = +$aTo;
 $aTime = +$aTime;
 $aStartTime = +$aStartTime;
 var $7 = 0.0;
 if ($aTime <= 0.0 ? 1 : (HEAP32[$this + 4 >> 2] | 0) >>> 0 <= $aAttributeId >>> 0) return;
 $7 = +HEAPF32[(HEAP32[$this + 12 >> 2] | 0) + ($aAttributeId << 2) >> 2];
 if ($7 == $aTo) return;
 __ZN6SoLoud5Fader3setEffdd((HEAP32[$this + 16 >> 2] | 0) + ($aAttributeId * 48 | 0) | 0, $7, $aTo, $aTime, $aStartTime);
 return;
}

function __ZN5Oryol5_priv8glShader11bindUniformENS_11ShaderStage4CodeEiii($this, $bindStage, $bindSlot, $uniformIndex, $glUniformLocation) {
 $this = $this | 0;
 $bindStage = $bindStage | 0;
 $bindSlot = $bindSlot | 0;
 $uniformIndex = $uniformIndex | 0;
 $glUniformLocation = $glUniformLocation | 0;
 var $3 = 0;
 $3 = ($bindStage << 6) + $uniformIndex + ($bindSlot << 4) | 0;
 if ($3 >>> 0 < 128) {
  HEAP32[$this + 3068 + ($3 << 2) >> 2] = $glUniformLocation;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 65050);
  _abort();
 }
}

function __ZN5Oryol21resourceContainerBase7discardEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 112 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 110028, 36, 110548);
  _abort();
 }
 if (((HEAP32[$this + 12 >> 2] | 0) - (HEAP32[$this + 8 >> 2] | 0) | 0) == 1) {
  __ZN5Oryol21resourceContainerBase8PopLabelEv($this) | 0;
  __ZN5Oryol5_priv16resourceRegistry7DiscardEv($this + 24 | 0);
  HEAP8[$0 >> 0] = 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110593, 0, 110028, 37, 110548);
  _abort();
 }
}

function __ZN6SoLoud20BiquadResonantFilter9setParamsEifff($this, $aType, $aSampleRate, $aFrequency, $aResonance) {
 $this = $this | 0;
 $aType = $aType | 0;
 $aSampleRate = +$aSampleRate;
 $aFrequency = +$aFrequency;
 $aResonance = +$aResonance;
 var $$0 = 0;
 if ($aType >>> 0 > 3 | $aSampleRate <= 0.0 | $aFrequency <= 0.0 | $aResonance <= 0.0) {
  $$0 = 1;
  return $$0 | 0;
 }
 HEAP32[$this + 4 >> 2] = $aType;
 HEAPF32[$this + 8 >> 2] = $aSampleRate;
 HEAPF32[$this + 12 >> 2] = $aFrequency;
 HEAPF32[$this + 16 >> 2] = $aResonance;
 $$0 = 0;
 return $$0 | 0;
}

function __ZN5Oryol5_priv14emscDisplayMgr21emscCanvasSizeChangedEiPKvPv($eventType, $reserved, $userData) {
 $eventType = $eventType | 0;
 $reserved = $reserved | 0;
 $userData = $userData | 0;
 var $1 = 0, $newHeight = 0, $newWidth = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $newWidth = sp + 8 | 0;
 $newHeight = sp + 4 | 0;
 _emscripten_get_canvas_size($newWidth | 0, $newHeight | 0, sp | 0);
 $1 = HEAP32[36695] | 0;
 HEAP32[$1 + 132 >> 2] = HEAP32[$newWidth >> 2];
 HEAP32[$1 + 136 >> 2] = HEAP32[$newHeight >> 2];
 STACKTOP = sp;
 return 1;
}

function __ZN6SoLoud6Soloud7getWaveEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $7 = 0, $9 = 0, $i$01 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) $i$01 = 0; else {
  __ZN6SoLoud6Thread9lockMutexEPv($1);
  $i$01 = 0;
 }
 do {
  HEAP32[$this + 6360 + ($i$01 << 2) >> 2] = HEAP32[$this + 4312 + ($i$01 << 2) >> 2];
  $i$01 = $i$01 + 1 | 0;
 } while (($i$01 | 0) != 256);
 $7 = HEAP32[$0 >> 2] | 0;
 if (!$7) {
  $9 = $this + 6360 | 0;
  return $9 | 0;
 }
 __ZN6SoLoud6Thread11unlockMutexEPv($7);
 $9 = $this + 6360 | 0;
 return $9 | 0;
}

function __ZN4yakc10kc85_video11pal_line_cbEPv($userdata) {
 $userdata = $userdata | 0;
 var $0 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0;
 $0 = $userdata + 393224 | 0;
 $1 = HEAP16[$0 >> 1] | 0;
 if (($1 & 65535) < 256) {
  if (!(HEAP8[$userdata + 393222 >> 0] | 0)) $11 = 0; else $11 = (HEAP8[$userdata + 393221 >> 0] | 0) != 0;
  __ZN4yakc10kc85_video15decode_one_lineEPjib($userdata, $userdata + 65536 | 0, $1 & 65535, $11);
  $13 = HEAP16[$0 >> 1] | 0;
 } else $13 = $1;
 $12 = $13 + 1 << 16 >> 16;
 HEAP16[$0 >> 1] = ($12 & 65535) > 325 ? 0 : $12;
 return;
}

function ___stdout_write($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer = sp;
 HEAP32[$f + 36 >> 2] = 17;
 if (!(HEAP32[$f >> 2] & 64)) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = 21505;
  HEAP32[$vararg_buffer + 8 >> 2] = sp + 12;
  if (___syscall54(54, $vararg_buffer | 0) | 0) HEAP8[$f + 75 >> 0] = -1;
 }
 $9 = ___stdio_write($f, $buf, $len) | 0;
 STACKTOP = sp;
 return $9 | 0;
}

function __ZN5Oryol5_priv12imguiWrapper7DiscardEv($this) {
 $this = $this | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80944, 0, 80002, 64, 80960);
  _abort();
 } else {
  HEAP32[HEAP32[(__ZN5ImGui5GetIOEv() | 0) + 124 >> 2] >> 2] = 0;
  __ZN5ImGui8ShutdownEv();
  HEAP32[$0 >> 2] = HEAP32[$this + 4 >> 2];
  __ZN5Oryol3Gfx16DestroyResourcesENS_13ResourceLabelE($0);
  HEAP8[$this >> 0] = 0;
  HEAP32[36708] = 0;
  STACKTOP = sp;
  return;
 }
}

function __Znwj($size) {
 $size = $size | 0;
 var $$lcssa = 0, $$size = 0, $1 = 0, $3 = 0, $5 = 0, label = 0;
 $$size = ($size | 0) == 0 ? 1 : $size;
 while (1) {
  $1 = _malloc($$size) | 0;
  if ($1 | 0) {
   $$lcssa = $1;
   label = 6;
   break;
  }
  $3 = __ZSt15get_new_handlerv() | 0;
  if (!$3) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$3 & 3]();
 }
 if ((label | 0) == 5) {
  $5 = ___cxa_allocate_exception(4) | 0;
  HEAP32[$5 >> 2] = 14300;
  ___cxa_throw($5 | 0, 72, 121);
 } else if ((label | 0) == 6) return $$lcssa | 0;
 return 0;
}

function __ZN5Oryol5_priv7glTypes17asGLTexFilterModeENS_17TextureFilterMode4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch ($c | 0) {
 case 0:
  {
   $$0 = 9728;
   break;
  }
 case 1:
  {
   $$0 = 9729;
   break;
  }
 case 2:
  {
   $$0 = 9984;
   break;
  }
 case 3:
  {
   $$0 = 9986;
   break;
  }
 case 4:
  {
   $$0 = 9985;
   break;
  }
 case 5:
  {
   $$0 = 9987;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74657, sp);
   _abort();
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6SoLoud6Soloud25setVoiceRelativePlaySpeedEjf($this, $aVoice, $aSpeed) {
 $this = $this | 0;
 $aVoice = $aVoice | 0;
 $aSpeed = +$aSpeed;
 var $$0 = 0, $2 = 0, $7 = 0.0;
 if ($aSpeed <= 0.0) {
  $$0 = 1;
  return $$0 | 0;
 }
 $2 = HEAP32[$this + 44 + ($aVoice << 2) >> 2] | 0;
 if (!$2) {
  $$0 = 0;
  return $$0 | 0;
 }
 HEAPF32[$2 + 64 >> 2] = $aSpeed;
 $7 = +HEAPF32[$this + 7508 + ($aVoice * 96 | 0) + 56 >> 2] * $aSpeed;
 HEAPF32[$2 + 68 >> 2] = $7;
 HEAPF32[$2 + 56 >> 2] = $7 * +HEAPF32[$2 + 52 >> 2];
 $$0 = 0;
 return $$0 | 0;
}

function __ZN6SoLoud5Fader6setLFOEffdd($this, $aFrom, $aTo, $aTime, $aStartTime) {
 $this = $this | 0;
 $aFrom = +$aFrom;
 $aTo = +$aTo;
 $aTime = +$aTime;
 $aStartTime = +$aStartTime;
 var $5 = 0.0;
 HEAP32[$this + 44 >> 2] = 2;
 HEAPF32[$this + 40 >> 2] = 0.0;
 HEAPF32[$this >> 2] = $aFrom;
 HEAPF32[$this + 4 >> 2] = $aTo;
 HEAPF64[$this + 16 >> 3] = $aTime;
 $5 = ($aTo - $aFrom) * .5;
 HEAPF32[$this + 8 >> 2] = $5 < 0.0 ? -$5 : $5;
 HEAPF64[$this + 24 >> 3] = $aStartTime;
 HEAPF64[$this + 32 >> 3] = 6.2831854820251465 / $aTime;
 return;
}
function __ZN5Oryol3Gfx16ApplyScissorRectEiiiib($x, $y, $width, $height, $originTopLeft) {
 $x = $x | 0;
 $y = $y | 0;
 $width = $width | 0;
 $height = $height | 0;
 $originTopLeft = $originTopLeft | 0;
 var $0 = 0, $2 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 282, 45978);
  _abort();
 } else {
  $2 = $0 + 124 | 0;
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
  __ZN5Oryol5_priv10glRenderer16applyScissorRectEiiiib($0 + 416 | 0, $x, $y, $width, $height, $originTopLeft);
  return;
 }
}

function __ZN5Oryol10StringAtom16setupFromCStringEPKc($this, $str) {
 $this = $this | 0;
 $str = $str | 0;
 var $3 = 0, $4 = 0, $5 = 0;
 if ($str | 0) if (HEAP8[$str >> 0] | 0) {
  $3 = __ZN5Oryol15stringAtomTable14threadLocalPtrEv() | 0;
  $4 = __ZN5Oryol15stringAtomTable13HashForStringEPKc($str) | 0;
  $5 = __ZNK5Oryol15stringAtomTable4FindEiPKc($3, $4, $str) | 0;
  HEAP32[$this >> 2] = $5;
  if ($5 | 0) return;
  HEAP32[$this >> 2] = __ZN5Oryol15stringAtomTable3AddEiPKc($3, $4, $str) | 0;
  return;
 }
 HEAP32[$this >> 2] = 0;
 return;
}

function __ZN5Oryol3Gfx13ApplyViewPortEiiiib($x, $y, $width, $height, $originTopLeft) {
 $x = $x | 0;
 $y = $y | 0;
 $width = $width | 0;
 $height = $height | 0;
 $originTopLeft = $originTopLeft | 0;
 var $0 = 0, $2 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 274, 45914);
  _abort();
 } else {
  $2 = $0 + 120 | 0;
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
  __ZN5Oryol5_priv10glRenderer13applyViewPortEiiiib($0 + 416 | 0, $x, $y, $width, $height, $originTopLeft);
  return;
 }
}

function __ZN5Oryol5_priv7glTypes25asGLDepthAttachmentFormatENS_11PixelFormat4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (($c + -11 | 0) >>> 0 >= 2) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(74293, 0, 74335, 169, 74393);
  _abort();
 }
 switch ($c | 0) {
 case 12:
  {
   $$0 = 35056;
   STACKTOP = sp;
   return $$0 | 0;
  }
 case 11:
  {
   $$0 = 33189;
   STACKTOP = sp;
   return $$0 | 0;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74475, sp);
   _abort();
  }
 }
 return 0;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below);
 return;
}

function __ZN5ImGui4TextEPKcz($fmt, $varargs) {
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $1 = 0, $6 = 0, $7 = 0, $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 HEAP32[$args >> 2] = $varargs;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 if (HEAP8[$1 + 116 >> 0] | 0) {
  STACKTOP = sp;
  return;
 }
 $6 = 158506;
 $7 = _vsnprintf($6, 3073, $fmt, $args) | 0;
 HEAP8[161578] = 0;
 __ZN5ImGui15TextUnformattedEPKcS1_($6, 158506 + (($7 | 0) == -1 ? 3073 : $7) | 0);
 STACKTOP = sp;
 return;
}

function ___string_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $0 = 0, $1 = 0, $11 = 0, $2 = 0, $3 = 0, $k$0 = 0, $k$0$len = 0;
 $0 = $f + 84 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $len + 256 | 0;
 $3 = _memchr($1, 0, $2) | 0;
 $k$0 = ($3 | 0) == 0 ? $2 : $3 - $1 | 0;
 $k$0$len = $k$0 >>> 0 < $len >>> 0 ? $k$0 : $len;
 _memcpy($buf | 0, $1 | 0, $k$0$len | 0) | 0;
 HEAP32[$f + 4 >> 2] = $1 + $k$0$len;
 $11 = $1 + $k$0 | 0;
 HEAP32[$f + 8 >> 2] = $11;
 HEAP32[$0 >> 2] = $11;
 return $k$0$len | 0;
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = tempRet0;
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0;
}

function __ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEED0Ev($this) {
 $this = $this | 0;
 var $2 = 0;
 HEAP32[$this >> 2] = 348;
 $2 = HEAP32[$this + 24 >> 2] | 0;
 if (($2 | 0) == ($this + 8 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 255]($2);
  __ZdlPv($this);
  return;
 }
 if (!$2) {
  __ZdlPv($this);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 255]($2);
 __ZdlPv($this);
 return;
}

function __ZN5Oryol21resourceContainerBaseD2Ev($this) {
 $this = $this | 0;
 var $6 = 0;
 if (HEAP8[$this + 112 >> 0] | 0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110015, 0, 110028, 20, 110107);
  _abort();
 }
 __ZN5Oryol5_priv16resourceRegistryD2Ev($this + 24 | 0);
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 $6 = HEAP32[$this >> 2] | 0;
 if ($6 | 0) __ZN5Oryol6Memory4FreeEPv($6);
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 return;
}

function __ZN5Oryol4ArgsC2EiPPKc($this, $argc, $argv) {
 $this = $this | 0;
 $argc = $argc | 0;
 $argv = $argv | 0;
 var $i$01 = 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 16;
 HEAP32[$this + 20 >> 2] = 65536;
 if (($argc | 0) > 0) $i$01 = 0; else return;
 do {
  __ZN5Oryol5ArrayINS_6StringEE3AddIJRPKcEEEvDpOT_($this, $argv + ($i$01 << 2) | 0);
  $i$01 = $i$01 + 1 | 0;
 } while (($i$01 | 0) != ($argc | 0));
 return;
}

function __ZN12MemoryWindow4DrawERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $0 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP8[$this + 21 >> 0] = 1;
 HEAPF32[$0 >> 2] = 512.0;
 HEAPF32[$0 + 4 >> 2] = 256.0;
 __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($0, 2);
 $6 = __ZN12MemoryEditor4DrawEPKcPFhPvtEPFvS2_thES2_($this + 20 | 0, __ZNK5Oryol6String6AsCStrEv($this + 12 | 0) | 0, 19, 5, $kc) | 0;
 HEAP8[$this + 8 >> 0] = $6 & 1;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 var $2 = 0;
 $2 = HEAP32[$this + 24 >> 2] | 0;
 if (($2 | 0) == ($this + 8 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 255]($2);
  __ZdlPv($this);
  return;
 }
 if (!$2) {
  __ZdlPv($this);
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 255]($2);
 __ZdlPv($this);
 return;
}

function __ZN6SoLoud14FilterInstance24oscillateFilterParameterEjffdd($this, $aAttributeId, $aFrom, $aTo, $aTime, $aStartTime) {
 $this = $this | 0;
 $aAttributeId = $aAttributeId | 0;
 $aFrom = +$aFrom;
 $aTo = +$aTo;
 $aTime = +$aTime;
 $aStartTime = +$aStartTime;
 if ($aFrom == $aTo | ($aTime <= 0.0 ? 1 : (HEAP32[$this + 4 >> 2] | 0) >>> 0 <= $aAttributeId >>> 0)) return;
 __ZN6SoLoud5Fader6setLFOEffdd((HEAP32[$this + 16 >> 2] | 0) + ($aAttributeId * 48 | 0) | 0, $aFrom, $aTo, $aTime, $aStartTime);
 return;
}

function __ZN6SoLoud25AudioSourceInstance3dDataC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this + 36 >> 2] = 0;
 HEAPF32[$this + 32 >> 2] = 1.0;
 HEAPF32[$this + 40 >> 2] = 1.0;
 HEAPF32[$this + 28 >> 2] = 1.0e6;
 HEAP32[$this + 44 >> 2] = 0;
 HEAP32[$this + 52 >> 2] = 0;
 HEAP32[$this + 48 >> 2] = 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 return;
}

function __ZN5ImGui21PopAllowKeyboardFocusEv() {
 var $1 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $6 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $3 = $1 + 304 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) <= 0) ___assert_fail(127436, 127226, 833, 125180);
 $6 = $4 + -1 | 0;
 HEAP32[$3 >> 2] = $6;
 if (!$6) {
  $14 = 1;
  $13 = $1 + 276 | 0;
  HEAP8[$13 >> 0] = $14;
  return;
 }
 $14 = HEAP8[(HEAP32[$1 + 312 >> 2] | 0) + ($4 + -2) >> 0] | 0;
 $13 = $1 + 276 | 0;
 HEAP8[$13 >> 0] = $14;
 return;
}

function __ZN5ImGui23ColorConvertFloat4ToU32ERK6ImVec4($in) {
 $in = $in | 0;
 var $0 = 0.0, $15 = 0.0, $23 = 0.0, $7 = 0.0;
 $0 = +HEAPF32[$in >> 2];
 $7 = +HEAPF32[$in + 4 >> 2];
 $15 = +HEAPF32[$in + 8 >> 2];
 $23 = +HEAPF32[$in + 12 >> 2];
 return ($7 < 0.0 ? 0 : ~~(($7 > 1.0 ? 1.0 : $7) * 255.0 + .5) << 8) | ($0 < 0.0 ? 0 : ~~(($0 > 1.0 ? 1.0 : $0) * 255.0 + .5)) | ($15 < 0.0 ? 0 : ~~(($15 > 1.0 ? 1.0 : $15) * 255.0 + .5) << 16) | ($23 < 0.0 ? 0 : ~~(($23 > 1.0 ? 1.0 : $23) * 255.0 + .5) << 24) | 0;
}

function __ZN6SoLoud14FilterInstance18setFilterParameterEjf($this, $aAttributeId, $aValue) {
 $this = $this | 0;
 $aAttributeId = $aAttributeId | 0;
 $aValue = +$aValue;
 var $10 = 0;
 if ((HEAP32[$this + 4 >> 2] | 0) >>> 0 <= $aAttributeId >>> 0) return;
 HEAP32[(HEAP32[$this + 16 >> 2] | 0) + ($aAttributeId * 48 | 0) + 44 >> 2] = 0;
 HEAPF32[(HEAP32[$this + 12 >> 2] | 0) + ($aAttributeId << 2) >> 2] = $aValue;
 $10 = $this + 8 | 0;
 HEAP32[$10 >> 2] = HEAP32[$10 >> 2] | 1 << $aAttributeId;
 return;
}

function __ZNK6ImFont9FindGlyphEt($this, $c) {
 $this = $this | 0;
 $c = $c | 0;
 var $$1 = 0, $0 = 0, $7 = 0;
 $0 = $c & 65535;
 if (($0 | 0) < (HEAP32[$this + 72 >> 2] | 0)) {
  $7 = HEAP32[(HEAP32[$this + 80 >> 2] | 0) + ($0 << 2) >> 2] | 0;
  if (($7 | 0) != -1) {
   if ((HEAP32[$this + 40 >> 2] | 0) <= ($7 | 0)) ___assert_fail(127217, 127226, 806, 127272);
   $$1 = (HEAP32[$this + 48 >> 2] | 0) + ($7 * 40 | 0) | 0;
   return $$1 | 0;
  }
 }
 $$1 = HEAP32[$this + 52 >> 2] | 0;
 return $$1 | 0;
}

function __ZNSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_EclEv($this) {
 $this = $this | 0;
 var $0 = 0, $2 = 0;
 $0 = __ZN5Oryol6Memory5AllocEi(16) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 __ZN5Oryol10FileSystemC2Ev($0);
 HEAP32[$0 >> 2] = 13172;
 if (!$0) return $0 | 0;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
 return $0 | 0;
}

function __ZN6SoLoud5Fader3setEffdd($this, $aFrom, $aTo, $aTime, $aStartTime) {
 $this = $this | 0;
 $aFrom = +$aFrom;
 $aTo = +$aTo;
 $aTime = +$aTime;
 $aStartTime = +$aStartTime;
 HEAP32[$this + 40 >> 2] = HEAP32[$this >> 2];
 HEAPF32[$this >> 2] = $aFrom;
 HEAPF32[$this + 4 >> 2] = $aTo;
 HEAPF64[$this + 16 >> 3] = $aTime;
 HEAPF64[$this + 24 >> 3] = $aStartTime;
 HEAPF32[$this + 8 >> 2] = $aTo - $aFrom;
 HEAPF64[$this + 32 >> 3] = $aTime + $aStartTime;
 HEAP32[$this + 44 >> 2] = 1;
 return;
}

function _enter_fullscreen() {
 var $fsStrategy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $fsStrategy = sp;
 HEAP32[$fsStrategy >> 2] = 0;
 HEAP32[$fsStrategy + 4 >> 2] = 0;
 HEAP32[$fsStrategy + 8 >> 2] = 0;
 HEAP32[$fsStrategy + 12 >> 2] = 0;
 HEAP32[$fsStrategy + 4 >> 2] = 1;
 HEAP32[$fsStrategy + 8 >> 2] = 1;
 HEAP32[$fsStrategy + 12 >> 2] = 6;
 HEAP32[$fsStrategy + 16 >> 2] = 0;
 _emscripten_request_fullscreen_strategy(0, 0, $fsStrategy | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8AppState8ToStringENS0_4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0;
 switch ($c | 0) {
 case 0:
  {
   $$0 = 117249;
   break;
  }
 case 1:
  {
   $$0 = 117234;
   break;
  }
 case 2:
  {
   $$0 = 117223;
   break;
  }
 case 3:
  {
   $$0 = 117218;
   break;
  }
 case 4:
  {
   $$0 = 117210;
   break;
  }
 case 5:
  {
   $$0 = 117202;
   break;
  }
 case 6:
  {
   $$0 = 117194;
   break;
  }
 case 7:
  {
   $$0 = 117186;
   break;
  }
 default:
  $$0 = 117170;
 }
 return $$0 | 0;
}

function ___towrite($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $13 = 0, $2 = 0, $6 = 0;
 $0 = $f + 74 | 0;
 $2 = HEAP8[$0 >> 0] | 0;
 HEAP8[$0 >> 0] = $2 + 255 | $2;
 $6 = HEAP32[$f >> 2] | 0;
 if (!($6 & 8)) {
  HEAP32[$f + 8 >> 2] = 0;
  HEAP32[$f + 4 >> 2] = 0;
  $13 = HEAP32[$f + 44 >> 2] | 0;
  HEAP32[$f + 28 >> 2] = $13;
  HEAP32[$f + 20 >> 2] = $13;
  HEAP32[$f + 16 >> 2] = $13 + (HEAP32[$f + 48 >> 2] | 0);
  $$0 = 0;
 } else {
  HEAP32[$f >> 2] = $6 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZN5ImGui21GetContentRegionAvailEv($agg$result) {
 $agg$result = $agg$result | 0;
 var $0 = 0, $2 = 0, $6 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $2 = HEAP32[38201] | 0;
 __ZN5ImGui19GetContentRegionMaxEv($0);
 $6 = +HEAPF32[$0 + 4 >> 2] - (+HEAPF32[$2 + 168 >> 2] - +HEAPF32[$2 + 24 >> 2]);
 HEAPF32[$agg$result >> 2] = +HEAPF32[$0 >> 2] - (+HEAPF32[$2 + 164 >> 2] - +HEAPF32[$2 + 20 >> 2]);
 HEAPF32[$agg$result + 4 >> 2] = $6;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glRenderer16bindVertexBufferEj($this, $vb) {
 $this = $this | 0;
 $vb = $vb | 0;
 var $2 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 734, 67610);
  _abort();
 }
 $2 = $this + 292 | 0;
 if ((HEAP32[$2 >> 2] | 0) == ($vb | 0)) return;
 HEAP32[$2 >> 2] = $vb;
 _glBindBuffer(34962, $vb | 0);
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 739, 67610);
  _abort();
 }
}

function __ZN5Oryol10ClearState10ClearColorERKN3glm5tvec4IfLNS1_9precisionE0EEE($agg$result, $color) {
 $agg$result = $agg$result | 0;
 $color = $color | 0;
 HEAPF32[$agg$result + 16 >> 2] = 1.0;
 HEAP8[$agg$result + 20 >> 0] = 0;
 HEAP32[$agg$result >> 2] = HEAP32[$color >> 2];
 HEAP32[$agg$result + 4 >> 2] = HEAP32[$color + 4 >> 2];
 HEAP32[$agg$result + 8 >> 2] = HEAP32[$color + 8 >> 2];
 HEAP32[$agg$result + 12 >> 2] = HEAP32[$color + 12 >> 2];
 HEAP8[$agg$result + 21 >> 0] = 1;
 return;
}

function _enter_soft_fullscreen() {
 var $fsStrategy = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $fsStrategy = sp;
 HEAP32[$fsStrategy >> 2] = 0;
 HEAP32[$fsStrategy + 4 >> 2] = 0;
 HEAP32[$fsStrategy + 8 >> 2] = 0;
 HEAP32[$fsStrategy + 12 >> 2] = 0;
 HEAP32[$fsStrategy + 4 >> 2] = 1;
 HEAP32[$fsStrategy + 8 >> 2] = 1;
 HEAP32[$fsStrategy + 12 >> 2] = 6;
 HEAP32[$fsStrategy + 16 >> 2] = 0;
 _emscripten_enter_soft_fullscreen(0, $fsStrategy | 0) | 0;
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv10glRenderer15bindIndexBufferEj($this, $ib) {
 $this = $this | 0;
 $ib = $ib | 0;
 var $2 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 746, 67526);
  _abort();
 }
 $2 = $this + 296 | 0;
 if ((HEAP32[$2 >> 2] | 0) == ($ib | 0)) return;
 HEAP32[$2 >> 2] = $ib;
 _glBindBuffer(34963, $ib | 0);
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 751, 67526);
  _abort();
 }
}

function __ZN5Oryol5_priv10glRenderer10useProgramEj($this, $prog) {
 $this = $this | 0;
 $prog = $prog | 0;
 var $2 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 768, 69252);
  _abort();
 }
 $2 = $this + 300 | 0;
 if ((HEAP32[$2 >> 2] | 0) == ($prog | 0)) return;
 HEAP32[$2 >> 2] = $prog;
 _glUseProgram($prog | 0);
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 772, 69252);
  _abort();
 }
}

function _vsscanf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 var $4 = 0, $f = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 $f = sp;
 dest = $f;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$f + 32 >> 2] = 19;
 HEAP32[$f + 44 >> 2] = $s;
 HEAP32[$f + 76 >> 2] = -1;
 HEAP32[$f + 84 >> 2] = $s;
 $4 = _vfscanf($f, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNK5Oryol6StringeqERKS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $6 = 0, $9 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $1 = HEAP32[$rhs >> 2] | 0;
 if (($0 | 0) == ($1 | 0)) {
  $$0 = 1;
  return $$0 | 0;
 }
 if (($0 | 0) == 0 | ($1 | 0) == 0) {
  $$0 = 0;
  return $$0 | 0;
 }
 $6 = HEAP32[$this + 4 >> 2] | 0;
 $9 = HEAP32[$rhs + 4 >> 2] | 0;
 $$0 = (_strcmp(($6 | 0) == 0 ? 163344 : $6, ($9 | 0) == 0 ? 163344 : $9) | 0) == 0;
 return $$0 | 0;
}

function __ZN6SoLoud27soloud_sdlstatic_audiomixerEPvPhi($userdata, $stream, $len) {
 $userdata = $userdata | 0;
 $stream = $stream | 0;
 $len = $len | 0;
 var $0 = 0, $3 = 0;
 $0 = HEAP32[36710] | 0;
 $3 = $0 >>> 16;
 if (($0 & 65535) << 16 >> 16 == -32480) {
  __ZN6SoLoud6Soloud3mixEPfj($userdata, $stream, ($len >>> 0) / (($3 << 2 & 1020) >>> 0) | 0);
  return;
 } else {
  __ZN6SoLoud6Soloud11mixSigned16EPsj($userdata, $stream, ($len >>> 0) / (($3 << 1 & 510) >>> 0) | 0);
  return;
 }
}

function __ZN5Oryol5_priv8glShader11bindSamplerENS_11ShaderStage4CodeEii($this, $bindStage, $textureIndex, $samplerIndex) {
 $this = $this | 0;
 $bindStage = $bindStage | 0;
 $textureIndex = $textureIndex | 0;
 $samplerIndex = $samplerIndex | 0;
 var $1 = 0;
 $1 = ($bindStage << 4) + $textureIndex | 0;
 if ($1 >>> 0 < 32) {
  HEAP32[$this + 3580 + ($1 << 2) >> 2] = $samplerIndex;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 98, 65127);
  _abort();
 }
}

function __ZN5Oryol5_priv10glRenderer20setupRasterizerStateEv($this) {
 $this = $this | 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 973, 66702);
  _abort();
 }
 HEAP16[$this + 240 >> 1] = 296;
 _glDisable(2884);
 _glFrontFace(2304);
 _glCullFace(1029);
 _glDisable(32823);
 _glDisable(3089);
 _glEnable(3024);
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 986, 66702);
  _abort();
 }
}

function __ZL19rect_height_comparePKvS0_($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $$0 = 0, $1 = 0, $3 = 0, $7 = 0, $9 = 0;
 $1 = HEAP16[$a + 6 >> 1] | 0;
 $3 = HEAP16[$b + 6 >> 1] | 0;
 if (($1 & 65535) > ($3 & 65535)) {
  $$0 = -1;
  return $$0 | 0;
 }
 if (($1 & 65535) < ($3 & 65535)) {
  $$0 = 1;
  return $$0 | 0;
 }
 $7 = HEAP16[$a + 4 >> 1] | 0;
 $9 = HEAP16[$b + 4 >> 1] | 0;
 $$0 = ($7 & 65535) > ($9 & 65535) ? -1 : ($7 & 65535) < ($9 & 65535) & 1;
 return $$0 | 0;
}

function __ZNK5Oryol5_priv14schemeRegistry22IsFileSystemRegisteredERKNS_10StringAtomE($this, $scheme) {
 $this = $this | 0;
 $scheme = $scheme | 0;
 var $1 = 0, $4 = 0;
 do {} while ((HEAP8[$this >> 0] & 1) != 0);
 $1 = $this + 4 | 0;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
 $4 = __ZNK5Oryol3MapINS_10StringAtomENSt3__18functionIFNS_3PtrINS_10FileSystemEEEvEEEE8ContainsERKS1_($this + 8 | 0, $scheme) | 0;
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) - 1;
 return $4 | 0;
}

function __ZN5Oryol3Gfx16DestroyResourcesENS_13ResourceLabelE($label) {
 $label = $label | 0;
 var $0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 $1 = HEAP32[36694] | 0;
 if (!$1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 260, 45851);
  _abort();
 } else {
  HEAP32[$0 >> 2] = HEAP32[$label >> 2];
  __ZN5Oryol5_priv24gfxResourceContainerBase7DestroyENS_13ResourceLabelE($1 + 1168 | 0, $0);
  STACKTOP = sp;
  return;
 }
}

function __ZN5Oryol3App13StartMainLoopEv($this) {
 $this = $this | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if (!(HEAP32[36716] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(116979, 0, 116995, 73, 117047);
  _abort();
 } else {
  __ZN5Oryol4Core5SetupEv();
  __ZN5Oryol3Log4InfoEPKcz(117080, sp);
  _emscripten_set_main_loop(2, 0, 1);
  __ZN5Oryol3Log4InfoEPKcz(117145, sp + 8 | 0);
  __ZN5Oryol4Core7DiscardEv();
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEED2Ev($this) {
 $this = $this | 0;
 var $2 = 0;
 HEAP32[$this >> 2] = 348;
 $2 = HEAP32[$this + 24 >> 2] | 0;
 if (($2 | 0) == ($this + 8 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 255]($2);
  return;
 }
 if (!$2) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 255]($2);
 return;
}

function __ZN5Oryol3Gfx24ApplyDefaultRenderTargetERKNS_10ClearStateE($clearState) {
 $clearState = $clearState | 0;
 var $0 = 0, $2 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 111, 43788);
  _abort();
 } else {
  $2 = $0 + 116 | 0;
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
  __ZN5Oryol5_priv10glRenderer17applyRenderTargetEPNS0_7textureERKNS_10ClearStateE($0 + 416 | 0, 0, $clearState);
  return;
 }
}

function __ZN10FileLoader5StartERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $$0 = 0, $3 = 0;
 if ((HEAP32[$this + 24 >> 2] | 0) != 2) {
  $$0 = 0;
  return $$0 | 0;
 }
 $3 = $this + 28 | 0;
 __ZN10FileLoader4copyEPN4yakc4kc85ERKNS_8FileInfoERKN5Oryol6BufferE($kc, $3, $this + 96 | 0);
 __ZN10FileLoader5patchEPN4yakc4kc85ERKNS_8FileInfoE($kc, $3);
 __ZN10FileLoader5startEPN4yakc4kc85ERKNS_8FileInfoE($kc, $3);
 $$0 = 1;
 return $$0 | 0;
}

function __ZN5Oryol5_priv8ioWorker5startERKNS0_10ioPointersE($this, $ptrs) {
 $this = $this | 0;
 $ptrs = $ptrs | 0;
 var $0 = 0, $3 = 0, $8 = 0, $9 = 0;
 $0 = $this + 108 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  $3 = $ptrs;
  $8 = HEAP32[$3 + 4 >> 2] | 0;
  $9 = $this;
  HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$9 + 4 >> 2] = $8;
  HEAP8[$0 >> 0] = 1;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105669, 0, 105697, 14, 105755);
  _abort();
 }
}

function ___ftello_unlocked($f) {
 $f = $f | 0;
 var $$0 = 0, $10 = 0, $11 = 0;
 if (!(HEAP32[$f >> 2] & 128)) $10 = 1; else $10 = (HEAP32[$f + 20 >> 2] | 0) >>> 0 > (HEAP32[$f + 28 >> 2] | 0) >>> 0 ? 2 : 1;
 $11 = FUNCTION_TABLE_iiii[HEAP32[$f + 40 >> 2] & 31]($f, 0, $10) | 0;
 if (($11 | 0) < 0) $$0 = $11; else $$0 = $11 - (HEAP32[$f + 8 >> 2] | 0) + (HEAP32[$f + 4 >> 2] | 0) + (HEAP32[$f + 20 >> 2] | 0) - (HEAP32[$f + 28 >> 2] | 0) | 0;
 return $$0 | 0;
}

function __ZN5Oryol5_priv7glTypes17asGLPrimitiveTypeENS_13PrimitiveType4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch ($c | 0) {
 case 1:
 case 0:
  {
   $$0 = $c;
   break;
  }
 case 2:
  {
   $$0 = 3;
   break;
  }
 case 3:
  {
   $$0 = 4;
   break;
  }
 case 4:
  {
   $$0 = 5;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74568, sp);
   _abort();
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6SoLoud6Soloud13setVoicePauseEji($this, $aVoice, $aPause) {
 $this = $this | 0;
 $aVoice = $aVoice | 0;
 $aPause = $aPause | 0;
 var $2 = 0, $6 = 0, $7 = 0;
 HEAP8[$this + 109920 >> 0] = 1;
 $2 = HEAP32[$this + 44 + ($aVoice << 2) >> 2] | 0;
 if (!$2) return;
 HEAP32[$2 + 268 >> 2] = 0;
 $6 = $2 + 12 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if (!$aPause) {
  HEAP32[$6 >> 2] = $7 & -5;
  return;
 } else {
  HEAP32[$6 >> 2] = $7 | 4;
  return;
 }
}

function __ZN5Oryol5_priv12emscInputMgr21emscDeviceOrientationEiPK32EmscriptenDeviceOrientationEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 HEAPF32[$userData + 1404 >> 2] = +HEAPF64[$e + 24 >> 3] * .017453292519943295;
 HEAPF32[$userData + 1400 >> 2] = +HEAPF64[$e + 16 >> 3] * .017453292519943295;
 HEAPF32[$userData + 1396 >> 2] = +HEAPF64[$e + 8 >> 3] * .017453292519943295;
 return 1;
}

function __ZN5Oryol5Input7DiscardEv() {
 var $0 = 0, $4 = 0;
 $0 = HEAP32[36706] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 77200, 23, 77314);
  _abort();
 } else {
  __ZN5Oryol5Mouse23clearPointerLockHandlerEv($0 + 624 | 0);
  __ZN5Oryol5_priv12emscInputMgr7discardEv(HEAP32[36706] | 0);
  $4 = HEAP32[36706] | 0;
  __ZN5Oryol5_priv12emscInputMgrD2Ev($4);
  __ZN5Oryol6Memory4FreeEPv($4);
  HEAP32[36706] = 0;
  return;
 }
}

function __ZN5Oryol5Mouse5resetEv($this) {
 $this = $this | 0;
 var $0 = 0, $10 = 0, $15 = 0, $5 = 0;
 $0 = $this + 28 | 0;
 HEAP8[$0 >> 0] = (HEAPU8[$0 >> 0] | 0) & 252;
 $5 = $this + 29 | 0;
 HEAP8[$5 >> 0] = (HEAPU8[$5 >> 0] | 0) & 252;
 $10 = $this + 30 | 0;
 HEAP8[$10 >> 0] = (HEAPU8[$10 >> 0] | 0) & 252;
 $15 = $this + 12 | 0;
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 HEAP32[$15 + 12 >> 2] = 0;
 return;
}

function __ZN5Oryol5Mouse23clearPointerLockHandlerEv($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0;
 $1 = $this + 80 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 | 0) == ($this + 64 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 255]($2);
  HEAP32[$1 >> 2] = 0;
  return;
 }
 if (!$2) {
  HEAP32[$1 >> 2] = 0;
  return;
 }
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 255]($2);
 HEAP32[$1 >> 2] = 0;
 return;
}

function __ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEE7destroyEv($this) {
 $this = $this | 0;
 var $2 = 0;
 $2 = HEAP32[$this + 24 >> 2] | 0;
 if (($2 | 0) == ($this + 8 | 0)) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 255]($2);
  return;
 }
 if (!$2) return;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] & 255]($2);
 return;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below);
 return;
}

function __ZN5ImGui7LogTextEPKcz($fmt, $varargs) {
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $4 = 0, $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 if (!(HEAP8[157996] | 0)) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$args >> 2] = $varargs;
 $4 = HEAP32[39500] | 0;
 if (!$4) __ZN15ImGuiTextBuffer7appendvEPKcPi(HEAP32[39501] | 0, $fmt, $args); else _vfprintf($4, $fmt, $args) | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseISF_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 var $0 = 0, $1 = 0;
 $0 = $this + 4 | 0;
 HEAP32[$__p >> 2] = 1944;
 $1 = $__p + 4 | 0;
 HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
 HEAP32[$1 + 4 >> 2] = HEAP32[$0 + 4 >> 2];
 HEAP32[$1 + 8 >> 2] = HEAP32[$0 + 8 >> 2];
 return;
}

function __ZN5Oryol8GfxSetup11SetPoolSizeENS_15GfxResourceType4CodeEi($this, $type, $size) {
 $this = $this | 0;
 $type = $type | 0;
 $size = $size | 0;
 if ($type >>> 0 >= 4) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(60427, 0, 60293, 82, 60485);
  _abort();
 }
 if (($size | 0) > 0) {
  HEAP32[$this + 84 + ($type << 2) >> 2] = $size;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80935, 0, 60293, 83, 60485);
  _abort();
 }
}

function __ZN5Oryol5Input5SetupERKNS_10InputSetupE($setup) {
 $setup = $setup | 0;
 var $2 = 0;
 if (!(HEAP32[36706] | 0)) {
  $2 = __ZN5Oryol6Memory5AllocEi(3160) | 0;
  _memset($2 | 0, 0, 3160) | 0;
  __ZN5Oryol5_priv12emscInputMgrC2Ev($2);
  HEAP32[36706] = $2;
  __ZN5Oryol5_priv12emscInputMgr5setupERKNS_10InputSetupE($2, $setup);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117531, 0, 77200, 15, 77255);
  _abort();
 }
}

function __Z14ImFormatStringPciPKcz($buf, $buf_size, $fmt, $varargs) {
 $buf = $buf | 0;
 $buf_size = $buf_size | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 HEAP32[$args >> 2] = $varargs;
 $0 = _vsnprintf($buf, $buf_size, $fmt, $args) | 0;
 HEAP8[$buf + ($buf_size + -1) >> 0] = 0;
 STACKTOP = sp;
 return (($0 | 0) == -1 ? $buf_size : $0) | 0;
}

function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function __ZN5Oryol2IO6doWorkEv() {
 if (!(HEAP32[36715] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 100720, 53, 100901);
  _abort();
 }
 if (__ZN5Oryol4Core12IsMainThreadEv() | 0) {
  __ZN5Oryol5_priv8ioRouter6doWorkEv((HEAP32[36715] | 0) + 72 | 0);
  __ZN5Oryol9loadQueue6updateEv((HEAP32[36715] | 0) + 528 | 0);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(100933, 0, 100720, 54, 100901);
  _abort();
 }
}

function __ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEEclESF_OSH_($this, $__arg, $__arg1) {
 $this = $this | 0;
 $__arg = $__arg | 0;
 $__arg1 = $__arg1 | 0;
 var $$idx$val = 0, $$val = 0;
 $$idx$val = HEAP32[$this + 4 >> 2] | 0;
 $$val = HEAP32[$__arg1 >> 2] | 0;
 HEAP32[$$idx$val + 24 >> 2] = 3;
 HEAP32[$$idx$val + 92 >> 2] = $$val;
 return;
}

function __ZN4yakc6z80ctc5ctrg2EPv($userdata) {
 $userdata = $userdata | 0;
 var $0 = 0, $2 = 0, $7 = 0, $9 = 0;
 $0 = $userdata + 96 | 0;
 $2 = HEAPU8[$0 >> 0] | 0;
 if ($2 & 6 | 0) return;
 if ($2 & 64 | 0) {
  $7 = $userdata + 100 | 0;
  $9 = (HEAP32[$7 >> 2] | 0) + -1 | 0;
  HEAP32[$7 >> 2] = $9;
  if (!$9) __ZN4yakc6z80ctc21down_counter_callbackERNS0_13channel_stateE($userdata, $0);
 }
 HEAP8[$userdata + 104 >> 0] = 0;
 return;
}

function __ZN5Oryol5_priv8ioRouter5setupERKNS0_10ioPointersE($this, $ptrs) {
 $this = $this | 0;
 $ptrs = $ptrs | 0;
 __ZN5Oryol5_priv8ioWorker5startERKNS0_10ioPointersE($this + 4 | 0, $ptrs);
 __ZN5Oryol5_priv8ioWorker5startERKNS0_10ioPointersE($this + 116 | 0, $ptrs);
 __ZN5Oryol5_priv8ioWorker5startERKNS0_10ioPointersE($this + 228 | 0, $ptrs);
 __ZN5Oryol5_priv8ioWorker5startERKNS0_10ioPointersE($this + 340 | 0, $ptrs);
 return;
}

function __ZN5Oryol3AppC2Ev($this) {
 $this = $this | 0;
 var $2 = 0;
 HEAP32[$this >> 2] = 13652;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 9;
 $2 = $this + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$this + 28 >> 2] = 16;
 HEAP32[$this + 32 >> 2] = 65536;
 HEAP8[$this + 36 >> 0] = 0;
 HEAP8[$this + 37 >> 0] = 0;
 HEAP32[36716] = $this;
 return;
}

function __ZN11AudioWindowC2EP5Audio($this, $audio_) {
 $this = $this | 0;
 $audio_ = $audio_ | 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this >> 2] = 824;
 HEAP8[$this + 8 >> 0] = 1;
 __ZN5Oryol6StringC2Ev($this + 12 | 0);
 HEAP32[$this >> 2] = 1916;
 HEAP32[$this + 20 >> 2] = $audio_;
 HEAP8[$this + 24 >> 0] = 0;
 HEAP8[$this + 25 >> 0] = 0;
 HEAP8[$this + 26 >> 0] = 0;
 __ZN5Oryol6Memory5ClearEPvi($this + 28 | 0, 1024);
 return;
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function __ZNKSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0;
 $0 = __Znwj(16) | 0;
 $1 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 1944;
 $2 = $0 + 4 | 0;
 HEAP32[$2 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$2 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$2 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 return $0 | 0;
}

function __ZN5Oryol5_priv10glRenderer11commitFrameEv($this) {
 $this = $this | 0;
 var $6 = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 215, 66961);
  _abort();
 } else {
  HEAP8[$this + 32 >> 0] = 0;
  HEAP32[$this + 208 >> 2] = 0;
  HEAP32[$this + 212 >> 2] = 0;
  HEAP32[$this + 216 >> 2] = 0;
  $6 = $this + 204 | 0;
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
  return;
 }
}

function __ZN5Oryol8TouchpadC2Ev($this) {
 $this = $this | 0;
 var $1 = 0, dest = 0, stop = 0;
 $1 = $this + 80 | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP8[$this + 8 >> 0] = 0;
 dest = $this + 12 | 0;
 stop = dest + 68 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$1 >> 2] = 16;
 HEAP32[$this + 84 >> 2] = 65536;
 HEAP8[$this + 88 >> 0] = 0;
 return;
}

function __ZN5Oryol5_priv6glMesh5ClearEv($this) {
 $this = $this | 0;
 HEAP32[$this + 364 >> 2] = -1;
 HEAP8[$this + 368 >> 0] = 1;
 HEAP8[$this + 369 >> 0] = 0;
 HEAP32[$this + 372 >> 2] = 0;
 HEAP32[$this + 376 >> 2] = 0;
 HEAP32[$this + 380 >> 2] = -1;
 HEAP8[$this + 384 >> 0] = 1;
 HEAP8[$this + 385 >> 0] = 0;
 HEAP32[$this + 388 >> 2] = 0;
 HEAP32[$this + 392 >> 2] = 0;
 __ZN5Oryol5_priv8meshBase5ClearEv($this);
 return;
}

function __ZNK5Oryol3URL6SchemeEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $1 = 0, $4 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (($1 & 65535) << 16 >> 16 == -1) {
  __ZN5Oryol6StringC2Ev($agg$result);
  return;
 } else {
  $4 = HEAP32[$this >> 2] | 0;
  __ZN5Oryol6StringC2EPKcii($agg$result, HEAP32[(($4 | 0) == 0 ? 13684 : $4 + 12 | 0) >> 2] | 0, $1 << 16 >> 16, $1 >> 16);
  return;
 }
}

function __ZN5Oryol4IMUI8NewFrameENS_8DurationE($frameDuration) {
 $frameDuration = $frameDuration | 0;
 var $0 = 0, $2 = 0;
 $0 = HEAP32[36707] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 79816, 33, 79934);
  _abort();
 } else {
  $2 = $frameDuration;
  __ZN5Oryol5_priv12imguiWrapper8NewFrameEf($0, (+((HEAP32[$2 >> 2] | 0) >>> 0) + 4294967296.0 * +(HEAP32[$2 + 4 >> 2] | 0)) / 1.0e6);
  return;
 }
}

function __ZN5Oryol5_priv7glTypes15asGLTexWrapModeENS_15TextureWrapMode4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch ($c | 0) {
 case 0:
  {
   $$0 = 33071;
   break;
  }
 case 1:
  {
   $$0 = 10497;
   break;
  }
 case 2:
  {
   $$0 = 33648;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74703, sp);
   _abort();
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol13StringBuilder6FormatEiPKcz($this, $maxLength, $fmt, $varargs) {
 $this = $this | 0;
 $maxLength = $maxLength | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 HEAP32[$args >> 2] = $varargs;
 $0 = __ZN5Oryol13StringBuilder6formatEibPKcPi($this, $maxLength, 0, $fmt, $args) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _copysign($x, $y) {
 $x = +$x;
 $y = +$y;
 var $1 = 0, $5 = 0, $fabs = 0.0;
 HEAPF64[tempDoublePtr >> 3] = $y;
 $1 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $fabs = +Math_abs(+$x);
 HEAPF64[tempDoublePtr >> 3] = $fabs;
 $5 = $1 & -2147483648 | HEAP32[tempDoublePtr + 4 >> 2];
 HEAP32[tempDoublePtr >> 2] = HEAP32[tempDoublePtr >> 2];
 HEAP32[tempDoublePtr + 4 >> 2] = $5;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function __ZNK5Oryol3URL9PathToEndEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $1 = 0, $3 = 0;
 $1 = HEAP16[$this + 24 >> 1] | 0;
 if ($1 << 16 >> 16 == -1) {
  __ZN5Oryol6StringC2Ev($agg$result);
  return;
 } else {
  $3 = HEAP32[$this >> 2] | 0;
  __ZN5Oryol6StringC2EPKcii($agg$result, HEAP32[(($3 | 0) == 0 ? 13684 : $3 + 12 | 0) >> 2] | 0, $1 << 16 >> 16, -1);
  return;
 }
}

function __ZN5Oryol3Gfx4DrawERKNS_14PrimitiveGroupE($primGroup) {
 $primGroup = $primGroup | 0;
 var $0 = 0, $2 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 356, 46372);
  _abort();
 } else {
  $2 = $0 + 148 | 0;
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
  __ZN5Oryol5_priv10glRenderer4drawERKNS_14PrimitiveGroupE($0 + 416 | 0, $primGroup);
  return;
 }
}

function __ZN5Oryol12VertexLayout3AddENS_10VertexAttr4CodeENS_12VertexFormat4CodeE($this, $attr, $format) {
 $this = $this | 0;
 $attr = $attr | 0;
 $format = $format | 0;
 var $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP8[$0 >> 0] = $attr;
 HEAP8[$0 + 1 >> 0] = $format;
 $2 = __ZN5Oryol12VertexLayout3AddERKNS0_9ComponentE($this, $0) | 0;
 STACKTOP = sp;
 return $2 | 0;
}

function __ZN5Oryol5_priv7glTypes15asGLBufferUsageENS_5Usage4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch ($c | 0) {
 case 0:
  {
   $$0 = 35044;
   break;
  }
 case 1:
  {
   $$0 = 35048;
   break;
  }
 case 2:
  {
   $$0 = 35040;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74793, sp);
   _abort();
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5ImGui10BeginPopupEPKc($str_id) {
 $str_id = $str_id | 0;
 var $$0 = 0, $5 = 0;
 if ((HEAP32[38229] | 0) > (HEAP32[38232] | 0)) {
  $$0 = __ZL12BeginPopupExPKci($str_id, 128) | 0;
  return $$0 | 0;
 } else {
  $5 = 152968;
  HEAP32[$5 >> 2] = 0;
  HEAP32[$5 + 4 >> 2] = 0;
  HEAP32[$5 + 8 >> 2] = 0;
  HEAP32[$5 + 12 >> 2] = 0;
  HEAP8[$5 + 16 >> 0] = 0;
  $$0 = 0;
  return $$0 | 0;
 }
 return 0;
}

function ___uflow($f) {
 $f = $f | 0;
 var $$0 = 0, $c = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $c = sp;
 if (!(HEAP32[$f + 8 >> 2] | 0)) if (!(___toread($f) | 0)) label = 3; else $$0 = -1; else label = 3;
 if ((label | 0) == 3) if ((FUNCTION_TABLE_iiii[HEAP32[$f + 32 >> 2] & 31]($f, $c, 1) | 0) == 1) $$0 = HEAPU8[$c >> 0] | 0; else $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol9IORequest7destroyEv($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$this >> 2] = 13588;
 __ZN5Oryol6StringD2Ev($this + 76 | 0);
 $1 = $this + 68 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 | 0) __ZN5Oryol6Memory4FreeEPv($2);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$this + 60 >> 2] = 0;
 HEAP32[$this + 64 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN5Oryol8Touchpad5resetEv($this) {
 $this = $this | 0;
 var $12 = 0, $7 = 0;
 HEAP8[$this + 1 >> 0] = 0;
 HEAP8[$this + 2 >> 0] = 0;
 HEAP8[$this + 3 >> 0] = 0;
 HEAP8[$this + 5 >> 0] = 0;
 HEAP8[$this + 6 >> 0] = 0;
 HEAP8[$this + 8 >> 0] = 0;
 $7 = $this + 28 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 $12 = $this + 36 | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 return;
}

function __ZN10ImDrawList7AddTextERK6ImVec2jPKcS4_($this, $pos, $col, $text_begin, $text_end) {
 $this = $this | 0;
 $pos = $pos | 0;
 $col = $col | 0;
 $text_begin = $text_begin | 0;
 $text_end = $text_end | 0;
 if ($col >>> 0 < 16777216) return;
 __ZN10ImDrawList7AddTextEPK6ImFontfRK6ImVec2jPKcS7_fPK6ImVec4($this, HEAP32[38186] | 0, +HEAPF32[38187], $pos, $col, $text_begin, $text_end, 0.0, 0);
 return;
}

function __ZN6SoLoud5FaderC2Ev($this) {
 $this = $this | 0;
 var $2 = 0;
 HEAPF32[$this + 8 >> 2] = 0.0;
 HEAPF32[$this + 4 >> 2] = 0.0;
 HEAPF32[$this >> 2] = 0.0;
 $2 = $this + 16 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP32[$2 + 28 >> 2] = 0;
 return;
}

function __ZN5Oryol6IORead7destroyEv($this) {
 $this = $this | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$this >> 2] = 13588;
 __ZN5Oryol6StringD2Ev($this + 76 | 0);
 $1 = $this + 68 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 | 0) __ZN5Oryol6Memory4FreeEPv($2);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$this + 60 >> 2] = 0;
 HEAP32[$this + 64 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN5Oryol5_priv10glRenderer22invalidateTextureStateEv($this) {
 $this = $this | 0;
 var dest = 0, stop = 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 779, 66905);
  _abort();
 } else {
  dest = $this + 304 | 0;
  stop = dest + 128 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  return;
 }
}

function ___fseeko($f, $off, $whence) {
 $f = $f | 0;
 $off = $off | 0;
 $whence = $whence | 0;
 var $5 = 0, $6 = 0, $phitmp = 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($f) | 0) == 0;
  $5 = ___fseeko_unlocked($f, $off, $whence) | 0;
  if ($phitmp) $6 = $5; else {
   ___unlockfile($f);
   $6 = $5;
  }
 } else $6 = ___fseeko_unlocked($f, $off, $whence) | 0;
 return $6 | 0;
}

function __ZN15SnapshotStorage13ApplySnapshotEiRN4yakc4kc85E($this, $slotIndex, $kc) {
 $this = $this | 0;
 $slotIndex = $slotIndex | 0;
 $kc = $kc | 0;
 if ($slotIndex >>> 0 < 4) {
  __ZN4yakc13kc85_snapshot14apply_snapshotERKNS0_7state_tERNS_4kc85E($this + ($slotIndex * 262328 | 0) | 0, $kc);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(40357, 0, 40407, 41, 40669);
  _abort();
 }
}

function __ZN15SnapshotStorage12TakeSnapshotERKN4yakc4kc85Ei($this, $kc, $slotIndex) {
 $this = $this | 0;
 $kc = $kc | 0;
 $slotIndex = $slotIndex | 0;
 if ($slotIndex >>> 0 < 4) {
  __ZN4yakc13kc85_snapshot13take_snapshotERKNS_4kc85ERNS0_7state_tE($kc, $this + ($slotIndex * 262328 | 0) | 0);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(40357, 0, 40407, 16, 40459);
  _abort();
 }
}

function __ZN10FileLoader4CopyERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 var $$0 = 0, $3 = 0;
 if ((HEAP32[$this + 24 >> 2] | 0) != 2) {
  $$0 = 0;
  return $$0 | 0;
 }
 $3 = $this + 28 | 0;
 __ZN10FileLoader4copyEPN4yakc4kc85ERKNS_8FileInfoERKN5Oryol6BufferE($kc, $3, $this + 96 | 0);
 __ZN10FileLoader5patchEPN4yakc4kc85ERKNS_8FileInfoE($kc, $3);
 $$0 = 1;
 return $$0 | 0;
}

function __ZN5Oryol5_priv10glRenderer21invalidateShaderStateEv($this) {
 $this = $this | 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 66399, 758, 66850);
  _abort();
 }
 _glUseProgram(0);
 if (!(_glGetError() | 0)) {
  HEAP32[$this + 300 >> 2] = 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 66399, 761, 66850);
  _abort();
 }
}

function __ZN6SoLoud6Soloud7stopAllEv($this) {
 $this = $this | 0;
 var $0 = 0, $i$01 = 0;
 __ZN6SoLoud6Soloud14lockAudioMutexEv($this);
 $0 = $this + 16 | 0;
 if ((HEAP32[$0 >> 2] | 0) > 0) {
  $i$01 = 0;
  do {
   __ZN6SoLoud6Soloud9stopVoiceEj($this, $i$01);
   $i$01 = $i$01 + 1 | 0;
  } while (($i$01 | 0) < (HEAP32[$0 >> 2] | 0));
 }
 __ZN6SoLoud6Soloud16unlockAudioMutexEv($this);
 return;
}

function __ZN5Oryol5_priv12emscInputMgr12emscKeyPressEiPK23EmscriptenKeyboardEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 if (!$userData) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(80101, 0, 79073, 139, 79332);
  _abort();
 } else {
  __ZN5Oryol8Keyboard6onCharEw($userData, HEAP32[$e + 152 >> 2] | 0);
  return 1;
 }
 return 0;
}

function __ZN6SoLoud6Soloud14setVoiceVolumeEjf($this, $aVoice, $aVolume) {
 $this = $this | 0;
 $aVoice = $aVoice | 0;
 $aVolume = +$aVolume;
 var $2 = 0;
 HEAP8[$this + 109920 >> 0] = 1;
 $2 = HEAP32[$this + 44 + ($aVoice << 2) >> 2] | 0;
 if (!$2) return;
 HEAPF32[$2 + 44 >> 2] = $aVolume;
 HEAPF32[$2 + 48 >> 2] = +HEAPF32[$this + 7508 + ($aVoice * 96 | 0) + 60 >> 2] * $aVolume;
 return;
}

function __ZN5Oryol3Gfx4DrawEi($primGroupIndex) {
 $primGroupIndex = $primGroupIndex | 0;
 var $0 = 0, $2 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 347, 46338);
  _abort();
 } else {
  $2 = $0 + 148 | 0;
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
  __ZN5Oryol5_priv10glRenderer4drawEi($0 + 416 | 0, $primGroupIndex);
  return;
 }
}

function __ZN5Oryol5_priv8glShaderC2Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this;
 HEAP32[$0 >> 2] = -1;
 HEAP32[$0 + 4 >> 2] = -1;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol11ShaderSetupC2Ev($this + 16 | 0);
 HEAP32[$this + 3064 >> 2] = 0;
 _memset($this + 3068 | 0, -1, 640) | 0;
 __ZN5Oryol12resourceBaseINS_11ShaderSetupEE5ClearEv($this);
 return;
}

function __ZN6SoLoud6Soloud6deinitEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $3 = 0, $4 = 0;
 $0 = $this + 8 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) FUNCTION_TABLE_vi[$1 & 255]($this);
 HEAP32[$0 >> 2] = 0;
 $3 = $this + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) {
  HEAP32[$3 >> 2] = 0;
  return;
 }
 __ZN6SoLoud6Thread12destroyMutexEPv($4);
 HEAP32[$3 >> 2] = 0;
 return;
}

function __ZN5Oryol3URLC2ERKNS_6StringE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZN5Oryol10StringAtomC2ERKNS_6StringE($this, $rhs);
 HEAP8[$this + 36 >> 0] = 0;
 __ZN5Oryol6StringC2ERKS0_($0, $rhs);
 __ZN5Oryol3URL5crackENS_6StringE($this, $0);
 __ZN5Oryol6StringD2Ev($0);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol3AppD2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $3 = 0;
 HEAP32[$this >> 2] = 13652;
 HEAP32[36716] = 0;
 $0 = $this + 12 | 0;
 HEAP32[$this + 28 >> 2] = 0;
 HEAP32[$this + 32 >> 2] = 0;
 $3 = HEAP32[$0 >> 2] | 0;
 if ($3 | 0) __ZN5Oryol6Memory4FreeEPv($3);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 return;
}

function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $rem = __stackBase__ | 0;
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0;
 STACKTOP = __stackBase__;
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0;
}

function __ZN5Oryol3Gfx17QueryResourceInfoERKNS_2IdE($agg$result, $id) {
 $agg$result = $agg$result | 0;
 $id = $id | 0;
 var $0 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 246, 45775);
  _abort();
 } else {
  __ZNK5Oryol5_priv24gfxResourceContainerBase17QueryResourceInfoERKNS_2IdE($agg$result, $0 + 1168 | 0, $id);
  return;
 }
}

function __ZN5ImGui5BeginEPKcPbi($name, $p_opened, $flags) {
 $name = $name | 0;
 $p_opened = $p_opened | 0;
 $flags = $flags | 0;
 var $0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAPF32[$0 >> 2] = 0.0;
 HEAPF32[$0 + 4 >> 2] = 0.0;
 $2 = __ZN5ImGui5BeginEPKcPbRK6ImVec2fi($name, $p_opened, $0, -1.0, $flags) | 0;
 STACKTOP = sp;
 return $2 | 0;
}

function __ZN5Oryol5_priv12emscInputMgr16emscDeviceMotionEiPK27EmscriptenDeviceMotionEventPv($eventType, $e, $userData) {
 $eventType = $eventType | 0;
 $e = $e | 0;
 $userData = $userData | 0;
 HEAPF32[$userData + 1384 >> 2] = -+HEAPF64[$e + 32 >> 3];
 HEAPF32[$userData + 1388 >> 2] = -+HEAPF64[$e + 40 >> 3];
 HEAPF32[$userData + 1392 >> 2] = -+HEAPF64[$e + 48 >> 3];
 return 1;
}

function __ZN5Oryol21resourceContainerBaseC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 16;
 HEAP32[$this + 20 >> 2] = 65536;
 __ZN5Oryol5_priv16resourceRegistryC2Ev($this + 24 | 0);
 HEAP32[$this + 108 >> 2] = 0;
 HEAP8[$this + 112 >> 0] = 0;
 return;
}

function __ZNK5Oryol6StringltERKS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $$0 = 0, $4 = 0, $7 = 0;
 if ((HEAP32[$this >> 2] | 0) == (HEAP32[$rhs >> 2] | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 $4 = HEAP32[$this + 4 >> 2] | 0;
 $7 = HEAP32[$rhs + 4 >> 2] | 0;
 $$0 = (_strcmp(($4 | 0) == 0 ? 163344 : $4, ($7 | 0) == 0 ? 163344 : $7) | 0) < 0;
 return $$0 | 0;
}

function __ZN5Oryol5_priv7glTypes17asGLTextureTargetENS_11TextureType4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch ($c | 0) {
 case 0:
  {
   $$0 = 3553;
   break;
  }
 case 2:
  {
   $$0 = 34067;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74747, sp);
   _abort();
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol5_priv9glTexture5ClearEv($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv11textureBase5ClearEv($this);
 HEAP32[$this + 748 >> 2] = 0;
 HEAP32[$this + 752 >> 2] = 0;
 HEAP32[$this + 756 >> 2] = 0;
 HEAP32[$this + 760 >> 2] = -1;
 HEAP8[$this + 764 >> 0] = 1;
 HEAP8[$this + 765 >> 0] = 0;
 HEAP32[$this + 768 >> 2] = 0;
 HEAP32[$this + 772 >> 2] = 0;
 return;
}

function __ZN5Oryol5_priv7glTypes15asGLShaderStageENS_11ShaderStage4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch ($c | 0) {
 case 0:
  {
   $$0 = 35633;
   break;
  }
 case 1:
  {
   $$0 = 35632;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74614, sp);
   _abort();
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol5_priv13emscURLLoader9doRequestERKNS_3PtrINS_6IOReadEEE($this, $req) {
 $this = $this | 0;
 $req = $req | 0;
 var $$0 = 0;
 if (!(__ZN5Oryol5_priv13baseURLLoader9doRequestERKNS_3PtrINS_6IOReadEEE($this, $req) | 0)) {
  $$0 = 0;
  return $$0 | 0;
 }
 __ZN5Oryol5_priv13emscURLLoader12startRequestERKNS_3PtrINS_6IOReadEEE(0, $req);
 $$0 = 1;
 return $$0 | 0;
}

function _rand() {
 var $0 = 0, $10 = 0, $14 = 0, $6 = 0, $8 = 0, $9 = 0;
 $0 = 146520;
 $6 = ___muldi3(HEAP32[$0 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0, 1284865837, 1481765933) | 0;
 $8 = _i64Add($6 | 0, tempRet0 | 0, 1, 0) | 0;
 $9 = tempRet0;
 $10 = 146520;
 HEAP32[$10 >> 2] = $8;
 HEAP32[$10 + 4 >> 2] = $9;
 $14 = _bitshift64Lshr($8 | 0, $9 | 0, 33) | 0;
 return $14 | 0;
}

function __ZN5Oryol6StringaSERKS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $1 = 0, $6 = 0;
 if (($this | 0) == ($rhs | 0)) return;
 __ZN5Oryol6String7releaseEv($this);
 $1 = HEAP32[$rhs >> 2] | 0;
 HEAP32[$this >> 2] = $1;
 HEAP32[$this + 4 >> 2] = HEAP32[$rhs + 4 >> 2];
 if (!$1) return;
 $6 = $1;
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
 return;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret | 0;
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0;
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) >> 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0;
 return (HEAP8[cttz_i8 + (x >>> 24) >> 0] | 0) + 24 | 0;
}

function __ZL10write_funcPvth($userdata, $addr, $value) {
 $userdata = $userdata | 0;
 $addr = $addr | 0;
 $value = $value | 0;
 var $0 = 0, $1 = 0, $2 = 0;
 $0 = $userdata + 65908 | 0;
 $1 = $addr & 65535;
 $2 = $1 >>> 11;
 if (!(HEAP8[$0 + 1024 + ($2 << 3) + 4 >> 0] | 0)) return;
 HEAP8[(HEAP32[$0 + 1024 + ($2 << 3) >> 2] | 0) + ($1 & 2047) >> 0] = $value;
 return;
}

function __ZN5Oryol5_priv7glTypes13asGLIndexTypeENS_9IndexType4CodeE($c) {
 $c = $c | 0;
 var $$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 switch ($c | 0) {
 case 1:
  {
   $$0 = 5123;
   break;
  }
 case 2:
  {
   $$0 = 5125;
   break;
  }
 default:
  {
   __ZN5Oryol3Log5ErrorEPKcz(74526, sp);
   _abort();
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN5Oryol5_priv9glTextureC2Ev($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv11textureBaseC2Ev($this);
 HEAP32[$this + 748 >> 2] = 0;
 HEAP32[$this + 752 >> 2] = 0;
 HEAP32[$this + 756 >> 2] = 0;
 HEAP32[$this + 760 >> 2] = -1;
 HEAP8[$this + 764 >> 0] = 1;
 HEAP8[$this + 765 >> 0] = 0;
 HEAP32[$this + 768 >> 2] = 0;
 HEAP32[$this + 772 >> 2] = 0;
 return;
}

function __ZN5Oryol13StringBuilder3SetERKNS_6StringE($this, $str) {
 $this = $this | 0;
 $str = $str | 0;
 var $0 = 0, $3 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0 | 0) HEAP8[$0 >> 0] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 $3 = __ZNK5Oryol6String6AsCStrEv($str) | 0;
 __ZN5Oryol13StringBuilder6AppendEPKcii($this, $3, 0, __ZNK5Oryol6String6LengthEv($str) | 0);
 return;
}

function __ZN5Oryol5_priv14schemeRegistryC2Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 HEAP8[$this >> 0] = 0;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 16;
 HEAP32[$this + 28 >> 2] = 65536;
 HEAP8[$this + 32 >> 0] = 0;
 return;
}

function __ZNK5Oryol13StringBuilder9GetStringEv($agg$result, $this) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 var $0 = 0, $3 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0 | 0) {
  $3 = HEAP32[$this + 8 >> 2] | 0;
  if (($3 | 0) > 0) {
   __ZN5Oryol6StringC2EPKcii($agg$result, $0, 0, $3);
   return;
  }
 }
 __ZN5Oryol6StringC2Ev($agg$result);
 return;
}

function __ZN5Oryol3URLaSERKNS_6StringE($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 __ZN5Oryol10StringAtomaSERKNS_6StringE($this, $rhs);
 __ZN5Oryol6StringC2ERKS0_($0, $rhs);
 __ZN5Oryol3URL5crackENS_6StringE($this, $0);
 __ZN5Oryol6StringD2Ev($0);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv12emscInputMgr7discardEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0;
 __ZN5Oryol5_priv12emscInputMgr16discardCallbacksEv(0);
 $0 = __ZN5Oryol4Core11PostRunLoopEv() | 0;
 $1 = $this + 2128 | 0;
 __ZN5Oryol7RunLoop6RemoveEi($0, HEAP32[$1 >> 2] | 0);
 HEAP32[$1 >> 2] = 0;
 __ZN5Oryol5_priv12inputMgrBase7discardEv($this);
 return;
}

function ___shlim($f, $lim) {
 $f = $f | 0;
 $lim = $lim | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 HEAP32[$f + 104 >> 2] = $lim;
 $2 = HEAP32[$f + 8 >> 2] | 0;
 $4 = HEAP32[$f + 4 >> 2] | 0;
 $5 = $2 - $4 | 0;
 HEAP32[$f + 108 >> 2] = $5;
 if (($lim | 0) != 0 & ($5 | 0) > ($lim | 0)) HEAP32[$f + 100 >> 2] = $4 + $lim; else HEAP32[$f + 100 >> 2] = $2;
 return;
}

function __ZN5ImGui10SetScrollYEf($scroll_y) {
 $scroll_y = +$scroll_y;
 var $1 = 0, $17 = 0.0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 if (!(HEAP32[$1 + 8 >> 2] & 1)) $17 = +HEAPF32[38188] * +HEAPF32[$1 + 568 >> 2] + +HEAPF32[37993] * 2.0; else $17 = 0.0;
 HEAPF32[$1 + 84 >> 2] = $17 + $scroll_y;
 HEAPF32[$1 + 92 >> 2] = 0.0;
 return;
}

function __ZN5Oryol3URLC2EPKc($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$this >> 2] = 0;
 HEAP8[$this + 36 >> 0] = 0;
 __ZN5Oryol6StringC2EPKc($0, $rhs);
 __ZN5Oryol3URL5crackENS_6StringE($this, $0);
 __ZN5Oryol6StringD2Ev($0);
 STACKTOP = sp;
 return;
}

function _sn_write($f, $s, $l) {
 $f = $f | 0;
 $s = $s | 0;
 $l = $l | 0;
 var $2 = 0, $3 = 0, $4 = 0, $l$ = 0;
 $2 = $f + 20 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = (HEAP32[$f + 16 >> 2] | 0) - $3 | 0;
 $l$ = $4 >>> 0 > $l >>> 0 ? $l : $4;
 _memcpy($3 | 0, $s | 0, $l$ | 0) | 0;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + $l$;
 return $l | 0;
}

function __ZN6SoLoud14FilterInstance18getFilterParameterEj($this, $aAttributeId) {
 $this = $this | 0;
 $aAttributeId = $aAttributeId | 0;
 var $$0 = 0.0;
 if ((HEAP32[$this + 4 >> 2] | 0) >>> 0 <= $aAttributeId >>> 0) {
  $$0 = 0.0;
  return +$$0;
 }
 $$0 = +HEAPF32[(HEAP32[$this + 12 >> 2] | 0) + ($aAttributeId << 2) >> 2];
 return +$$0;
}

function __ZN5Oryol5_priv6glMeshD2Ev($this) {
 $this = $this | 0;
 if (!(HEAP32[$this + 372 >> 2] | 0)) if (!(HEAP32[$this + 376 >> 2] | 0)) if (!(HEAP32[$this + 388 >> 2] | 0)) if (!(HEAP32[$this + 392 >> 2] | 0)) {
  HEAP32[$this + 108 >> 2] = 0;
  return;
 }
 __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(63354, 0, 63376, 15, 63433);
 _abort();
}

function __ZN6SoLoud6Soloud9stopVoiceEj($this, $aVoice) {
 $this = $this | 0;
 $aVoice = $aVoice | 0;
 var $1 = 0, $2 = 0;
 HEAP8[$this + 109920 >> 0] = 1;
 $1 = $this + 44 + ($aVoice << 2) | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) return;
 HEAP32[$1 >> 2] = 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 4 >> 2] & 255]($2);
 return;
}

function __ZN5Oryol3Log5ErrorEPKcz($msg, $varargs) {
 $msg = $msg | 0;
 $varargs = $varargs | 0;
 var $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 if (4 <= 0) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$args >> 2] = $varargs;
 __ZN5Oryol3Log6vprintENS0_5LevelEPKcPi(1, $msg, $args);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol3Log4WarnEPKcz($msg, $varargs) {
 $msg = $msg | 0;
 $varargs = $varargs | 0;
 var $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 if (4 <= 1) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$args >> 2] = $varargs;
 __ZN5Oryol3Log6vprintENS0_5LevelEPKcPi(2, $msg, $args);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol3Log4InfoEPKcz($msg, $varargs) {
 $msg = $msg | 0;
 $varargs = $varargs | 0;
 var $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 if (4 <= 2) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$args >> 2] = $varargs;
 __ZN5Oryol3Log6vprintENS0_5LevelEPKcPi(3, $msg, $args);
 STACKTOP = sp;
 return;
}

function __ZN5ImGui13SetCursorPosYEf($y) {
 $y = +$y;
 var $1 = 0, $10 = 0, $11 = 0.0, $8 = 0.0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $8 = +HEAPF32[$1 + 24 >> 2] - +HEAPF32[$1 + 76 >> 2] + $y;
 HEAPF32[$1 + 168 >> 2] = $8;
 $10 = $1 + 192 | 0;
 $11 = +HEAPF32[$10 >> 2];
 HEAPF32[$10 >> 2] = $11 >= $8 ? $11 : $8;
 return;
}

function __ZN5Oryol3Log3DbgEPKcz($msg, $varargs) {
 $msg = $msg | 0;
 $varargs = $varargs | 0;
 var $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 if (4 <= 3) {
  STACKTOP = sp;
  return;
 }
 HEAP32[$args >> 2] = $varargs;
 __ZN5Oryol3Log6vprintENS0_5LevelEPKcPi(4, $msg, $args);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol6StringaSEOS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $2 = 0;
 if (($this | 0) == ($rhs | 0)) return;
 __ZN5Oryol6String7releaseEv($this);
 HEAP32[$this >> 2] = HEAP32[$rhs >> 2];
 $2 = $rhs + 4 | 0;
 HEAP32[$this + 4 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$rhs >> 2] = 0;
 HEAP32[$2 >> 2] = 0;
 return;
}

function __ZN5ImGui11TextColoredERK6ImVec4PKcz($col, $fmt, $varargs) {
 $col = $col | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 HEAP32[$args >> 2] = $varargs;
 __ZN5ImGui12TextColoredVERK6ImVec4PKcPi($col, $fmt, $args);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol8Keyboard16beginCaptureTextEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 588 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  HEAP8[$0 >> 0] = 1;
  HEAP32[$this + 72 >> 2] = 0;
  HEAP32[$this + 68 >> 2] = 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(77743, 0, 77551, 99, 77764);
  _abort();
 }
}

function __ZN5Oryol13StringBuilder15SubstituteFirstERKNS_6StringES3_($this, $match, $subst) {
 $this = $this | 0;
 $match = $match | 0;
 $subst = $subst | 0;
 var $0 = 0;
 $0 = __ZNK5Oryol6String6AsCStrEv($match) | 0;
 return __ZN5Oryol13StringBuilder15SubstituteFirstEPKcS2_($this, $0, __ZNK5Oryol6String6AsCStrEv($subst) | 0) | 0;
}

function __ZNK5Oryol13StringBuilder2AtEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 if (($index | 0) > -1) if ((HEAP32[$this + 8 >> 2] | 0) > ($index | 0)) return HEAP8[(HEAP32[$this >> 2] | 0) + $index >> 0] | 0;
 __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(121207, 0, 120930, 292, 121244);
 _abort();
 return 0;
}

function __ZN6SoLoud14FilterInstance13filterChannelEPfjfdjj($this, $aBuffer, $aSamples, $aSamplerate, $aTime, $aChannel, $aChannels) {
 $this = $this | 0;
 $aBuffer = $aBuffer | 0;
 $aSamples = $aSamples | 0;
 $aSamplerate = +$aSamplerate;
 $aTime = +$aTime;
 $aChannel = $aChannel | 0;
 $aChannels = $aChannels | 0;
 return;
}

function __ZN5Oryol2IO3PutERKNS_3PtrINS_9IORequestEEE($ioReq) {
 $ioReq = $ioReq | 0;
 var $0 = 0;
 $0 = HEAP32[36715] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 100720, 172, 101376);
  _abort();
 } else {
  __ZN5Oryol5_priv8ioRouter3putERKNS_3PtrINS0_5ioMsgEEE($0 + 72 | 0, $ioReq);
  return;
 }
}

function __ZN5Oryol5_priv19pipelineFactoryBaseC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP8[$this + 28 >> 0] = 0;
 return;
}

function __ZNKSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEE7__cloneEPNS0_6__baseISE_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 12844;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZN5OryoleqERKNS_6StringEPKc($s0, $s1) {
 $s0 = $s0 | 0;
 $s1 = $s1 | 0;
 var $2 = 0;
 if (!$s1) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(120839, 0, 120525, 429, 120847);
  _abort();
 } else {
  $2 = HEAP32[$s0 + 4 >> 2] | 0;
  return (_strcmp(($2 | 0) == 0 ? 163344 : $2, $s1) | 0) == 0 | 0;
 }
 return 0;
}

function __ZN5Oryol5_priv16glTextureFactoryC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP8[$this + 28 >> 0] = 0;
 return;
}

function __ZNKSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 12844;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZN5Oryol5_priv13glMeshFactoryC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 HEAP32[$this + 12 >> 2] = 0;
 HEAP32[$this + 16 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 HEAP32[$this + 24 >> 2] = 0;
 HEAP8[$this + 28 >> 0] = 0;
 return;
}

function __ZNKSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEE7__cloneEPNS0_6__baseISI_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 1980;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZNK5Oryol11ShaderSetup21TextureBlockBindStageEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 if ($index >>> 0 < 2) return HEAP32[$this + 2636 + ($index * 204 | 0) + 200 >> 2] | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 62104);
  _abort();
 }
 return 0;
}

function __ZN5Oryol4IMUI7DiscardEv() {
 var $0 = 0;
 $0 = HEAP32[36707] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 79816, 24, 79899);
  _abort();
 } else {
  __ZN5Oryol5_priv12imguiWrapper7DiscardEv($0);
  __ZN5Oryol6Memory4FreeEPv(HEAP32[36707] | 0);
  HEAP32[36707] = 0;
  return;
 }
}

function __ZNK5Oryol11ShaderSetup21UniformBlockBindStageEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 if ($index >>> 0 < 8) return HEAP32[$this + 328 + ($index * 288 | 0) + 280 >> 2] | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 61951);
  _abort();
 }
 return 0;
}

function __ZNK5Oryol11ShaderSetup20UniformBlockBindSlotEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 if ($index >>> 0 < 8) return HEAP32[$this + 328 + ($index * 288 | 0) + 284 >> 2] | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 61951);
  _abort();
 }
 return 0;
}

function __ZNKSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 1980;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function ___stdio_close($f) {
 $f = $f | 0;
 var $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
 $3 = ___syscall_ret(___syscall6(6, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZNK5Oryol11ShaderSetup20FragmentShaderSourceENS_10ShaderLang4CodeE($this, $slang) {
 $this = $this | 0;
 $slang = $slang | 0;
 if ($slang >>> 0 < 5) return $this + 56 + ($slang << 3) | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 61846);
  _abort();
 }
 return 0;
}

function __ZN5ImGui17SetNextWindowSizeERK6ImVec2i($size, $cond) {
 $size = $size | 0;
 $cond = $cond | 0;
 var $1 = 0, $6 = 0, $7 = 0;
 $1 = $size;
 $6 = HEAP32[$1 + 4 >> 2] | 0;
 $7 = 152948;
 HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 + 4 >> 2] = $6;
 HEAP32[38243] = $cond | 0 ? $cond : 1;
 return;
}

function __ZN6Disasm5fetchEtiPv($base, $offset, $userdata) {
 $base = $base | 0;
 $offset = $offset | 0;
 $userdata = $userdata | 0;
 var $2 = 0;
 $2 = ($base & 65535) + $offset | 0;
 return HEAP8[(HEAP32[(HEAP32[$userdata >> 2] | 0) + 66932 + (($2 >>> 11 & 31) << 3) >> 2] | 0) + ($2 & 2047) >> 0] | 0;
}

function __ZN5ImGui10SetTooltipEPKcz($fmt, $varargs) {
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 HEAP32[$args >> 2] = $varargs;
 _vsnprintf(156952, 1024, $fmt, $args) | 0;
 HEAP8[157975] = 0;
 STACKTOP = sp;
 return;
}

function __ZNK5Oryol11ShaderSetup18VertexShaderSourceENS_10ShaderLang4CodeE($this, $slang) {
 $this = $this | 0;
 $slang = $slang | 0;
 if ($slang >>> 0 < 5) return $this + 16 + ($slang << 3) | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 61846);
  _abort();
 }
 return 0;
}

function __ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEEclEv($this) {
 $this = $this | 0;
 var $1 = 0;
 $1 = HEAP32[$this + 24 >> 2] | 0;
 return FUNCTION_TABLE_ii[HEAP32[(HEAP32[$1 >> 2] | 0) + 24 >> 2] & 63]($1) | 0;
}

function __ZN5Oryol7Locator9NonSharedEv($agg$result) {
 $agg$result = $agg$result | 0;
 var $0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($agg$result, $0);
 HEAP32[$agg$result + 4 >> 2] = -1;
 STACKTOP = sp;
 return;
}

function __ZN10ImDrawList12PopTextureIDEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0;
 $0 = $this + 64 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) > 0) {
  HEAP32[$0 >> 2] = $1 + -1;
  __ZN10ImDrawList15UpdateTextureIDEv($this);
  return;
 } else ___assert_fail(127486, 127372, 248, 127511);
}

function __ZN6SoLoud14FilterInstanceD0Ev($this) {
 $this = $this | 0;
 var $1 = 0, $4 = 0;
 HEAP32[$this >> 2] = 13456;
 $1 = HEAP32[$this + 12 >> 2] | 0;
 if ($1 | 0) __ZdaPv($1);
 $4 = HEAP32[$this + 16 >> 2] | 0;
 if (!$4) {
  __ZdlPv($this);
  return;
 }
 __ZdaPv($4);
 __ZdlPv($this);
 return;
}

function __ZNK5Oryol8GfxSetup8PoolSizeENS_15GfxResourceType4CodeE($this, $type) {
 $this = $this | 0;
 $type = $type | 0;
 if ($type >>> 0 < 4) return HEAP32[$this + 84 + ($type << 2) >> 2] | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(60427, 0, 60293, 90, 60547);
  _abort();
 }
 return 0;
}

function __ZN10ImDrawList11PopClipRectEv($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0;
 $0 = $this + 52 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) > 0) {
  HEAP32[$0 >> 2] = $1 + -1;
  __ZN10ImDrawList14UpdateClipRectEv($this);
  return;
 } else ___assert_fail(127450, 127372, 235, 127474);
}

function __ZNK6SoLoud6Soloud18getHandleFromVoiceEj($this, $aVoice) {
 $this = $this | 0;
 $aVoice = $aVoice | 0;
 var $$0 = 0, $1 = 0;
 $1 = HEAP32[$this + 44 + ($aVoice << 2) >> 2] | 0;
 if (!$1) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$0 = HEAP32[$1 + 4 >> 2] << 12 | $aVoice + 1;
 return $$0 | 0;
}

function __ZN5Oryol6StringC2ERKS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $0 = 0, $5 = 0;
 $0 = HEAP32[$rhs >> 2] | 0;
 HEAP32[$this >> 2] = $0;
 HEAP32[$this + 4 >> 2] = HEAP32[$rhs + 4 >> 2];
 if (!$0) return;
 $5 = $0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
 return;
}

function __ZN5Oryol5_priv8ioRouter6doWorkEv($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv8ioWorker6doWorkEv($this + 4 | 0);
 __ZN5Oryol5_priv8ioWorker6doWorkEv($this + 116 | 0);
 __ZN5Oryol5_priv8ioWorker6doWorkEv($this + 228 | 0);
 __ZN5Oryol5_priv8ioWorker6doWorkEv($this + 340 | 0);
 return;
}

function __ZN5Oryol3App9OnCleanupEv($this) {
 $this = $this | 0;
 var $$0 = 0, $1 = 0;
 $1 = HEAP16[$this + 36 >> 1] | 0;
 if (($1 & 255) << 24 >> 24 != 0 | ($1 & 65535) < 256) {
  $$0 = 6;
  return $$0 | 0;
 }
 __ZN5Oryol3App10addBlockerENS_8AppState4CodeE($this, 3);
 $$0 = 3;
 return $$0 | 0;
}

function __ZNK5Oryol11ShaderSetup18TextureBlockLayoutEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 if ($index >>> 0 < 2) return $this + 2636 + ($index * 204 | 0) + 4 | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 62104);
  _abort();
 }
 return 0;
}

function __ZNK5Oryol11ShaderSetup18UniformBlockLayoutEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 if ($index >>> 0 < 8) return $this + 328 + ($index * 288 | 0) + 8 | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105457, 0, 105488, 105, 61951);
  _abort();
 }
 return 0;
}
function __ZN5Oryol5_priv10glRendererD2Ev($this) {
 $this = $this | 0;
 if (!(HEAP8[$this >> 0] | 0)) {
  __ZN5Oryol6StringD2Ev($this + 116 | 0);
  __ZN5Oryol6StringD2Ev($this + 80 | 0);
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110015, 0, 66399, 114, 66460);
  _abort();
 }
}

function __ZZN12MemoryEditor4DrawEPKcPFhPvtEPFvS2_thES2_EN10FuncHolder8CallbackEP25ImGuiTextEditCallbackData($data) {
 $data = $data | 0;
 if ((HEAP32[$data + 36 >> 2] | 0) != (HEAP32[$data + 40 >> 2] | 0)) return 0;
 HEAP32[HEAP32[$data + 8 >> 2] >> 2] = HEAP32[$data + 32 >> 2];
 return 0;
}

function __ZNKSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEE7__cloneEPNS0_6__baseISB_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 13204;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZN6SoLoud6Soloud17updateVoiceVolumeEj($this, $aVoice) {
 $this = $this | 0;
 $aVoice = $aVoice | 0;
 var $1 = 0;
 $1 = HEAP32[$this + 44 + ($aVoice << 2) >> 2] | 0;
 HEAPF32[$1 + 48 >> 2] = +HEAPF32[$1 + 44 >> 2] * +HEAPF32[$this + 7508 + ($aVoice * 96 | 0) + 60 >> 2];
 return;
}

function __ZN5Oryol5_priv8ioRouter7discardEv($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv8ioWorker4stopEv($this + 4 | 0);
 __ZN5Oryol5_priv8ioWorker4stopEv($this + 116 | 0);
 __ZN5Oryol5_priv8ioWorker4stopEv($this + 228 | 0);
 __ZN5Oryol5_priv8ioWorker4stopEv($this + 340 | 0);
 return;
}

function __ZN5Oryol5Clock3NowEv() {
 var $1 = 0.0;
 $1 = +_emscripten_get_now() * 1.0e3;
 tempRet0 = +Math_abs($1) >= 1.0 ? ($1 > 0.0 ? ~~+Math_min(+Math_floor($1 / 4294967296.0), 4294967295.0) >>> 0 : ~~+Math_ceil(($1 - +(~~$1 >>> 0)) / 4294967296.0) >>> 0) : 0;
 return ~~$1 >>> 0 | 0;
}

function __ZN5ImGui11TextWrappedEPKcz($fmt, $varargs) {
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $args = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $args = sp;
 HEAP32[$args >> 2] = $varargs;
 __ZN5ImGui12TextWrappedVEPKcPi($fmt, $args);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 13204;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZN10LoadWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 if (!(HEAP32[$this + 20 >> 2] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(36752, 0, 36765, 21, 36812);
  _abort();
 } else {
  __ZN10WindowBase7setNameEPKc($this, 36857);
  return;
 }
}

function __ZN5Oryol5_priv12inputMgrBase16beginCaptureTextEv($this) {
 $this = $this | 0;
 if (!(HEAP8[$this + 1408 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(110536, 0, 78057, 72, 78293);
  _abort();
 } else {
  __ZN5Oryol8Keyboard16beginCaptureTextEv($this);
  return;
 }
}

function __ZN5Oryol3URLC2Ev($this) {
 $this = $this | 0;
 var dest = 0, stop = 0;
 HEAP32[$this >> 2] = 0;
 HEAP8[$this + 36 >> 0] = 0;
 dest = $this + 4 | 0;
 stop = dest + 32 | 0;
 do {
  HEAP16[dest >> 1] = 65535;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function _sprintf($s, $fmt, $varargs) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsprintf($s, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function _fprintf($f, $fmt, $varargs) {
 $f = $f | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vfprintf($f, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function ___ftello($f) {
 $f = $f | 0;
 var $5 = 0, $6 = 0, $phitmp = 0;
 if ((HEAP32[$f + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($f) | 0) == 0;
  $5 = ___ftello_unlocked($f) | 0;
  if ($phitmp) $6 = $5; else $6 = $5;
 } else $6 = ___ftello_unlocked($f) | 0;
 return $6 | 0;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 672;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 636;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 600;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 564;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function _sscanf($s, $fmt, $varargs) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $0 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $0 = _vsscanf($s, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN5Oryol13StringBuilderC2EPKc($this, $str) {
 $this = $this | 0;
 $str = $str | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 if (!$str) return;
 __ZN5Oryol13StringBuilder6AppendEPKcii($this, $str, 0, _strlen($str) | 0);
 return;
}

function __ZN7YakcApp9OnCleanupEv($this) {
 $this = $this | 0;
 __ZN5Audio7DiscardEv($this + 726552 | 0);
 __ZN2UI7DiscardEv($this + 853056 | 0);
 __ZN5Oryol5Input7DiscardEv();
 __ZN5Oryol3Gfx7DiscardEv();
 __ZN5Oryol2IO7DiscardEv();
 return __ZN5Oryol3App9OnCleanupEv($this) | 0;
}

function __ZN6SoLoud11AudioSourceD0Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 13412;
 $1 = HEAP32[$this + 76 >> 2] | 0;
 if (!$1) {
  __ZdlPv($this);
  return;
 }
 __ZN6SoLoud6Soloud15stopAudioSourceERNS_11AudioSourceE($1, $this);
 __ZdlPv($this);
 return;
}

function __ZN5Oryol5_priv8ioWorker4stopEv($this) {
 $this = $this | 0;
 if (!(HEAP8[$this + 108 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(105824, 0, 105697, 26, 105851);
  _abort();
 } else {
  HEAP8[$this + 109 >> 0] = 1;
  HEAP8[$this + 110 >> 0] = 1;
  return;
 }
}

function _printf($fmt, $varargs) {
 $fmt = $fmt | 0;
 $varargs = $varargs | 0;
 var $1 = 0, $ap = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $ap = sp;
 HEAP32[$ap >> 2] = $varargs;
 $1 = _vfprintf(HEAP32[3487] | 0, $fmt, $ap) | 0;
 STACKTOP = sp;
 return $1 | 0;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 528;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 492;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 456;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 420;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 384;
 HEAP32[$__p + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 672;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 636;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 600;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 564;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZN6SoLoud6Thread11createMutexEv() {
 var $0 = 0, $attr = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $attr = sp;
 $0 = __Znwj(28) | 0;
 _pthread_mutexattr_init($attr | 0) | 0;
 _pthread_mutex_init($0 | 0, $attr | 0) | 0;
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN6SoLoud20BiquadResonantFilterC2Ev($this) {
 $this = $this | 0;
 __ZN6SoLoud6FilterC2Ev($this);
 HEAP32[$this >> 2] = 13356;
 HEAP32[$this + 4 >> 2] = 1;
 HEAPF32[$this + 8 >> 2] = 44100.0;
 HEAPF32[$this + 12 >> 2] = 1.0e3;
 HEAPF32[$this + 16 >> 2] = 2.0;
 return;
}

function __ZN6SoLoud11AudioSource17setSingleInstanceEb($this, $aSingleInstance) {
 $this = $this | 0;
 $aSingleInstance = $aSingleInstance | 0;
 var $0 = 0, $1 = 0;
 $0 = $this + 4 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $aSingleInstance ? $1 | 2 : $1 & -3;
 return;
}

function __ZN5Oryol5_priv14emscDisplayMgrD2Ev($this) {
 $this = $this | 0;
 if (__ZNK5Oryol5_priv14displayMgrBase14IsDisplayValidEv($this) | 0) __ZN5Oryol5_priv14emscDisplayMgr14DiscardDisplayEv($this);
 HEAP32[36695] = 0;
 __ZN5Oryol5_priv14displayMgrBaseD2Ev($this);
 return;
}

function __ZN5Oryol10FileSystem4initERKNS_10StringAtomE($this, $scheme_) {
 $this = $this | 0;
 $scheme_ = $scheme_ | 0;
 var $0 = 0;
 $0 = $this + 8 | 0;
 if (($0 | 0) == ($scheme_ | 0)) return;
 HEAP32[$0 >> 2] = 0;
 __ZN5Oryol10StringAtom4copyERKS0_($0, $scheme_);
 return;
}

function __ZN5ImGui18GetCursorScreenPosEv($agg$result) {
 $agg$result = $agg$result | 0;
 var $3 = 0, $8 = 0, $9 = 0;
 $3 = (HEAP32[38201] | 0) + 164 | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $agg$result;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 return;
}

function __ZNSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEEclEv($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv24gfxResourceContainerBase6updateEv(HEAP32[$this + 4 >> 2] | 0);
 return;
}

function __ZN5Oryol3App13staticOnFrameEv() {
 var $0 = 0;
 $0 = HEAP32[36716] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(116979, 0, 116995, 108, 117105);
  _abort();
 } else {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] & 255]($0);
  return;
 }
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 528;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 492;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 456;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 420;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 384;
 HEAP32[$0 + 4 >> 2] = HEAP32[$this + 4 >> 2];
 return $0 | 0;
}

function __ZNK5Oryol9MeshSetup14PrimitiveGroupEi($this, $index) {
 $this = $this | 0;
 $index = $index | 0;
 if ($index >>> 0 < 8) return $this + 124 + ($index << 3) | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(60786, 0, 60622, 132, 60840);
  _abort();
 }
 return 0;
}

function __ZN5Oryol3Gfx17PushResourceLabelEv() {
 var $0 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 204, 45656);
  _abort();
 } else return __ZN5Oryol21resourceContainerBase9PushLabelEv($0 + 1168 | 0) | 0;
 return 0;
}

function __ZN5Oryol3Gfx12DisplayAttrsEv() {
 var $0 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 90, 43661);
  _abort();
 } else return __ZNK5Oryol5_priv14displayMgrBase15GetDisplayAttrsEv($0 + 160 | 0) | 0;
 return 0;
}

function __ZN5Oryol3Gfx13QuitRequestedEv() {
 var $0 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 62, 43621);
  _abort();
 } else return __ZNK5Oryol5_priv14displayMgrBase13QuitRequestedEv($0 + 160 | 0) | 0;
 return 0;
}

function __ZN5Oryol5_priv12inputMgrBase7discardEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 1408 | 0;
 if (!(HEAP8[$0 >> 0] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(78234, 0, 78057, 34, 78250);
  _abort();
 } else {
  HEAP8[$0 >> 0] = 0;
  return;
 }
}

function __ZN5Oryol3Gfx16PopResourceLabelEv() {
 var $0 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 218, 45716);
  _abort();
 } else return __ZN5Oryol21resourceContainerBase8PopLabelEv($0 + 1168 | 0) | 0;
 return 0;
}

function __ZN5ImGui5PopIDEv() {
 var $1 = 0, $3 = 0, $4 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 $3 = $1 + 424 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (($4 | 0) > 0) {
  HEAP32[$3 >> 2] = $4 + -1;
  return;
 } else ___assert_fail(127436, 127226, 833, 125180);
}

function __ZN5ImGui13GetWindowSizeEv($agg$result) {
 $agg$result = $agg$result | 0;
 var $3 = 0, $8 = 0, $9 = 0;
 $3 = (HEAP32[38201] | 0) + 28 | 0;
 $8 = HEAP32[$3 + 4 >> 2] | 0;
 $9 = $agg$result;
 HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$9 + 4 >> 2] = $8;
 return;
}

function __ZN5Oryol13StringBuilder6AppendERKNS_6StringE($this, $str) {
 $this = $this | 0;
 $str = $str | 0;
 var $0 = 0;
 $0 = __ZNK5Oryol6String6AsCStrEv($str) | 0;
 __ZN5Oryol13StringBuilder6AppendEPKcii($this, $0, 0, __ZNK5Oryol6String6LengthEv($str) | 0);
 return;
}

function __ZN6SoLoud11AudioSource9setFilterEjPNS_6FilterE($this, $aFilterId, $aFilter) {
 $this = $this | 0;
 $aFilterId = $aFilterId | 0;
 $aFilter = $aFilter | 0;
 if ($aFilterId >>> 0 > 7) return;
 HEAP32[$this + 44 + ($aFilterId << 2) >> 2] = $aFilter;
 return;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits;
  return low << bits;
 }
 tempRet0 = low << bits - 32;
 return 0;
}

function __ZNK5Oryol6String4BackEv($this) {
 $this = $this | 0;
 var $$0 = 0, $1 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$0 = HEAP8[$1 + ((HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] | 0) + -1) >> 0] | 0;
 return $$0 | 0;
}

function __ZN5Oryol5Input16BeginCaptureTextEv() {
 var $0 = 0;
 $0 = HEAP32[36706] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 77200, 39, 77350);
  _abort();
 } else {
  __ZN5Oryol5_priv12inputMgrBase16beginCaptureTextEv($0);
  return;
 }
}

function __ZN5Oryol5_priv17glPipelineFactory15DestroyResourceERNS0_8pipelineE($this, $pip) {
 $this = $this | 0;
 $pip = $pip | 0;
 __ZN5Oryol5_priv10glRenderer19invalidateMeshStateEv(HEAP32[$this >> 2] | 0);
 __ZN5Oryol5_priv10glPipeline5ClearEv($pip);
 return;
}

function dynCall_viiiddii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = +a4;
 a5 = +a5;
 a6 = a6 | 0;
 a7 = a7 | 0;
 FUNCTION_TABLE_viiiddii[index & 3](a1 | 0, a2 | 0, a3 | 0, +a4, +a5, a6 | 0, a7 | 0);
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function __ZN5Oryol6StringC2EOS0_($this, $rhs) {
 $this = $this | 0;
 $rhs = $rhs | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = HEAP32[$rhs >> 2];
 $1 = $rhs + 4 | 0;
 HEAP32[$this + 4 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$rhs >> 2] = 0;
 HEAP32[$1 >> 2] = 0;
 return;
}

function __ZNKSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_E7__cloneEPNS0_6__baseIS8_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 312;
 return;
}

function __ZN5ImGui20SetKeyboardFocusHereEi($offset) {
 $offset = $offset | 0;
 var $1 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 HEAP32[$1 + 600 >> 2] = $offset + 1 + (HEAP32[$1 + 584 >> 2] | 0);
 HEAP32[$1 + 604 >> 2] = 2147483647;
 return;
}

function __ZN6SoLoud14FilterInstanceD2Ev($this) {
 $this = $this | 0;
 var $1 = 0, $4 = 0;
 HEAP32[$this >> 2] = 13456;
 $1 = HEAP32[$this + 12 >> 2] | 0;
 if ($1 | 0) __ZdaPv($1);
 $4 = HEAP32[$this + 16 >> 2] | 0;
 if (!$4) return;
 __ZdaPv($4);
 return;
}

function __ZN5Oryol5_priv14emscDisplayMgr24glBindDefaultFramebufferEv($this) {
 $this = $this | 0;
 _glBindFramebuffer(36160, 0);
 if (!(_glGetError() | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(75843, 0, 74860, 76, 75233);
  _abort();
 }
}

function __ZNKSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_E7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 312;
 return $0 | 0;
}

function __ZN6Disasm11DisassembleERKN4yakc4kc85Et($this, $kc, $addr) {
 $this = $this | 0;
 $kc = $kc | 0;
 $addr = $addr | 0;
 HEAP32[$this >> 2] = $kc;
 return (__ZN7z80dasm9z80disasmEPFhtiPvEtPcS0_(5, $addr, $this + 4 | 0, $this) | 0) & 65535 | 0;
}

function __ZN5Oryol5_priv12pipelineBaseD2Ev($this) {
 $this = $this | 0;
 if (!(HEAP32[$this + 344 >> 2] | 0)) {
  HEAP32[$this + 16 >> 2] = 0;
  return;
 } else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(48012, 0, 48033, 12, 48102);
  _abort();
 }
}

function __ZN6SoLoud6Soloud22setVisualizationEnableEb($this, $aEnable) {
 $this = $this | 0;
 $aEnable = $aEnable | 0;
 var $0 = 0, $1 = 0;
 $0 = $this + 4160 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $aEnable ? $1 | 2 : $1 & -3;
 return;
}

function __ZN5Oryol10FileSystem5onMsgERKNS_3PtrINS_9IORequestEEE($this, $ioReq) {
 $this = $this | 0;
 $ioReq = $ioReq | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 __ZN5Oryol3Log4WarnEPKcz(105400, sp);
 STACKTOP = sp;
 return;
}

function __ZN5Oryol5_priv14emscDisplayMgrC2Ev($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv14displayMgrBaseC2Ev($this);
 HEAP32[$this + 240 >> 2] = 0;
 HEAP32[$this + 244 >> 2] = 0;
 HEAP32[$this + 248 >> 2] = 0;
 HEAP32[36695] = $this;
 return;
}

function __ZN5Oryol13StringBuilderD2Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0 | 0) __ZN5Oryol6Memory4FreeEPv($0);
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 return;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function __ZN5Oryol5_priv6glInfo7DiscardEv() {
 if (!(HEAP8[163336] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76383, 0, 75744, 55, 76391);
  _abort();
 } else {
  HEAP8[163336] = 0;
  __ZN5Oryol6Memory5ClearEPvi(146784, 40);
  return;
 }
}

function __ZN6SoLoud14FilterInstanceC2Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 HEAP32[$this >> 2] = 13456;
 $0 = $this + 4 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 return;
}

function __ZNK5Oryol24notifyFileSystemReplaced8isOfTypeEPv($this, $t) {
 $this = $this | 0;
 $t = $t | 0;
 var $3 = 0;
 if (($t | 0) == 163341) {
  $3 = 1;
  return $3 | 0;
 }
 $3 = ($t | 0) == 163338 | ($t | 0) == 163339;
 return $3 | 0;
}

function __ZN6SoLoud11AudioSourceD2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 HEAP32[$this >> 2] = 13412;
 $1 = HEAP32[$this + 76 >> 2] | 0;
 if (!$1) return;
 __ZN6SoLoud6Soloud15stopAudioSourceERNS_11AudioSourceE($1, $this);
 return;
}

function __ZN5Oryol2IO14ResolveAssignsERKNS_6StringE($agg$result, $str) {
 $agg$result = $agg$result | 0;
 $str = $str | 0;
 __ZNK5Oryol5_priv14assignRegistry14ResolveAssignsERKNS_6StringE($agg$result, HEAP32[36715] | 0, $str);
 return;
}

function __ZNK5Oryol21notifyFileSystemAdded8isOfTypeEPv($this, $t) {
 $this = $this | 0;
 $t = $t | 0;
 var $3 = 0;
 if (($t | 0) == 163340) {
  $3 = 1;
  return $3 | 0;
 }
 $3 = ($t | 0) == 163338 | ($t | 0) == 163339;
 return $3 | 0;
}

function __ZNSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEEclEv($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv14displayMgrBase19ProcessSystemEventsEv((HEAP32[36694] | 0) + 160 | 0);
 return;
}

function __ZN5Oryol5_priv6glInfo3IntENS1_4CodeE($c) {
 $c = $c | 0;
 if ($c >>> 0 < 10) return HEAP32[146784 + ($c << 2) >> 2] | 0; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76435, 0, 75744, 69, 76462);
  _abort();
 }
 return 0;
}

function dynCall_viiiidd(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = +a5;
 a6 = +a6;
 FUNCTION_TABLE_viiiidd[index & 1](a1 | 0, a2 | 0, a3 | 0, a4 | 0, +a5, +a6);
}

function __ZNSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEEclEv($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv12inputMgrBase5resetEv(HEAP32[$this + 4 >> 2] | 0);
 return;
}

function __ZL9read_funcPvt($userdata, $addr) {
 $userdata = $userdata | 0;
 $addr = $addr | 0;
 var $1 = 0;
 $1 = $addr & 65535;
 return HEAP8[(HEAP32[$userdata + 65908 + 1024 + ($1 >>> 11 << 3) >> 2] | 0) + ($1 & 2047) >> 0] | 0;
}

function __ZN16kc85_audiosource14createInstanceEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(416) | 0;
 __ZN6SoLoud19AudioSourceInstanceC2Ev($0);
 HEAP32[$0 >> 2] = 732;
 HEAP32[$0 + 408 >> 2] = $this;
 return $0 | 0;
}

function __ZL19rect_original_orderPKvS0_($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $3 = 0;
 $1 = HEAP32[$a + 12 >> 2] | 0;
 $3 = HEAP32[$b + 12 >> 2] | 0;
 return (($1 | 0) < ($3 | 0) ? -1 : ($1 | 0) > ($3 | 0) & 1) | 0;
}

function __ZNSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN10FileLoader12LoadAndStartERN4yakc4kc85ERKNS_4ItemE($this, $kc, $item) {
 $this = $this | 0;
 $kc = $kc | 0;
 $item = $item | 0;
 __ZN10FileLoader4loadEPN4yakc4kc85ERKNS_4ItemEb($this, $kc, $item, 1);
 return;
}

function dynCall_viidddd(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 a6 = +a6;
 FUNCTION_TABLE_viidddd[index & 1](a1 | 0, a2 | 0, +a3, +a4, +a5, +a6);
}

function __ZNKSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEE7__cloneEPNS0_6__baseISA_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 12808;
 return;
}

function __ZN5Oryol3Gfx17RenderTargetAttrsEv() {
 var $0 = 0;
 $0 = HEAP32[36694] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 42914, 97, 43722);
  _abort();
 } else return $0 + 452 | 0;
 return 0;
}

function __ZN11ImFontAtlasC2Ev($this) {
 $this = $this | 0;
 var dest = 0, stop = 0;
 dest = $this;
 stop = dest + 56 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZNKSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 12808;
 return $0 | 0;
}

function __ZNKSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEE7__cloneEPNS0_6__baseISA_EE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 HEAP32[$__p >> 2] = 13504;
 return;
}

function __ZNK5Oryol6IORead8isOfTypeEPv($this, $t) {
 $this = $this | 0;
 $t = $t | 0;
 var $3 = 0;
 if (($t | 0) == 163337) {
  $3 = 1;
  return $3 | 0;
 }
 $3 = ($t | 0) == 163342 | ($t | 0) == 163339;
 return $3 | 0;
}

function __ZNSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_E18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN5Oryol5_priv5glExt19VertexAttribDivisorEjj($index, $divisor) {
 $index = $index | 0;
 $divisor = $divisor | 0;
 if (!(HEAP8[163334] | 0)) return;
 _glVertexAttribDivisor($index | 0, $divisor | 0);
 return;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function __ZNKSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEE7__cloneEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = __Znwj(8) | 0;
 HEAP32[$0 >> 2] = 13504;
 return $0 | 0;
}

function __ZN5Oryol5_priv19pipelineFactoryBaseD2Ev($this) {
 $this = $this | 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 48146, 20, 48222);
  _abort();
 }
}

function __ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN5Oryol5_priv8glShader5ClearEv($this) {
 $this = $this | 0;
 HEAP32[$this + 3064 >> 2] = 0;
 _memset($this + 3068 | 0, -1, 640) | 0;
 __ZN5Oryol12resourceBaseINS_11ShaderSetupEE5ClearEv($this);
 return;
}

function __ZN5Oryol5Input8TouchpadEv() {
 var $0 = 0;
 $0 = HEAP32[36706] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 77200, 74, 77497);
  _abort();
 } else return $0 + 1288 | 0;
 return 0;
}

function __ZN5ImGui7MemFreeEPv($ptr) {
 $ptr = $ptr | 0;
 var $1 = 0;
 if ($ptr | 0) {
  $1 = 147664;
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + -1;
 }
 FUNCTION_TABLE_vi[HEAP32[147072 >> 2] & 255]($ptr);
 return;
}

function __ZNK5Oryol12TextureSetup8HasDepthEv($this) {
 $this = $this | 0;
 var $7 = 0;
 if (HEAP8[$this + 680 >> 0] & 32) {
  $7 = 1;
  return $7 | 0;
 }
 $7 = (HEAP32[$this + 32 >> 2] | 0) != 20;
 return $7 | 0;
}

function __ZN5Oryol5_priv16glTextureFactoryD2Ev($this) {
 $this = $this | 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 72053, 27, 72120);
  _abort();
 }
}

function __ZN10FileLoader4LoadERN4yakc4kc85ERKNS_4ItemE($this, $kc, $item) {
 $this = $this | 0;
 $kc = $kc | 0;
 $item = $item | 0;
 __ZN10FileLoader4loadEPN4yakc4kc85ERKNS_4ItemEb($this, $kc, $item, 0);
 return;
}

function __ZN6SoLoud11AudioSource4stopEv($this) {
 $this = $this | 0;
 var $1 = 0;
 $1 = HEAP32[$this + 76 >> 2] | 0;
 if (!$1) return;
 __ZN6SoLoud6Soloud15stopAudioSourceERNS_11AudioSourceE($1, $this);
 return;
}

function __ZN5Oryol5_priv15glShaderFactoryD2Ev($this) {
 $this = $this | 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 65202, 18, 65268);
  _abort();
 }
}

function __ZN5Oryol4Core11PostRunLoopEv() {
 var $0 = 0;
 $0 = HEAP32[36719] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117747, 0, 117542, 60, 117814);
  _abort();
 } else return $0 | 0;
 return 0;
}

function __ZN5ImGui12IsItemActiveEv() {
 var $$0 = 0, $1 = 0;
 $1 = HEAP32[38211] | 0;
 if (!$1) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$0 = ($1 | 0) == (HEAP32[(HEAP32[38201] | 0) + 220 >> 2] | 0);
 return $$0 | 0;
}

function __ZN5Oryol4Core10PreRunLoopEv() {
 var $0 = 0;
 $0 = HEAP32[36718] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117730, 0, 117542, 53, 117765);
  _abort();
 } else return $0 | 0;
 return 0;
}

function __ZNSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNK5Oryol6String6LengthEv($this) {
 $this = $this | 0;
 var $$0 = 0, $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if (!$0) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$0 = HEAP32[$0 + 4 >> 2] | 0;
 return $$0 | 0;
}

function __ZN5Oryol5_priv13glMeshFactoryD2Ev($this) {
 $this = $this | 0;
 if (!(HEAP8[$this + 28 >> 0] | 0)) return; else {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(111291, 0, 63465, 25, 63529);
  _abort();
 }
}

function __ZN5Oryol5Input5MouseEv() {
 var $0 = 0;
 $0 = HEAP32[36706] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 77200, 60, 77449);
  _abort();
 } else return $0 + 624 | 0;
 return 0;
}

function __ZN5Oryol5Input8KeyboardEv() {
 var $0 = 0;
 $0 = HEAP32[36706] | 0;
 if (!$0) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(117685, 0, 77200, 53, 77395);
  _abort();
 } else return $0 | 0;
 return 0;
}

function __ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN5Oryol13StringBuilder6AppendEPKc($this, $ptr) {
 $this = $this | 0;
 $ptr = $ptr | 0;
 if (!$ptr) return;
 __ZN5Oryol13StringBuilder6AppendEPKcii($this, $ptr, 0, _strlen($ptr) | 0);
 return;
}

function __ZN12DisasmWindowD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 940;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (tempRet0 = h, a - c >>> 0 | 0) | 0;
}

function __ZNSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_ED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN5Oryol5_priv5glExt7DiscardEv() {
 if (!(HEAP8[163328] | 0)) {
  __ZN5Oryol3Log9AssertMsgEPKcS2_S2_iS2_(76383, 0, 75295, 70, 75692);
  _abort();
 } else {
  HEAP8[163328] = 0;
  return;
 }
}

function dynCall_viiddd(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 a4 = +a4;
 a5 = +a5;
 FUNCTION_TABLE_viiddd[index & 1](a1 | 0, a2 | 0, +a3, +a4, +a5);
}

function __ZNSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN9PIOWindowD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 968;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZN5Oryol14HTTPFileSystem7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN6SoLoud6Soloud16unlockAudioMutexEv($this) {
 $this = $this | 0;
 var $1 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) return;
 __ZN6SoLoud6Thread11unlockMutexEPv($1);
 return;
}

function __ZN5Oryol10StackTrace4DumpEPci($buf, $bufSize) {
 $buf = $buf | 0;
 $bufSize = $bufSize | 0;
 _strncpy($buf, 120487, $bufSize) | 0;
 HEAP8[$buf + ($bufSize + -1) >> 0] = 0;
 return;
}

function __ZN5ImGui13GetCursorPosYEv() {
 var $1 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 return +(+HEAPF32[$1 + 168 >> 2] - +HEAPF32[$1 + 24 >> 2] + +HEAPF32[$1 + 76 >> 2]);
}

function __ZN5ImGui13GetCursorPosXEv() {
 var $1 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 return +(+HEAPF32[$1 + 164 >> 2] - +HEAPF32[$1 + 20 >> 2] + +HEAPF32[$1 + 72 >> 2]);
}

function __ZL16Plot_ArrayGetterPvi($data, $idx) {
 $data = $data | 0;
 $idx = $idx | 0;
 return +(+HEAPF32[(HEAP32[$data >> 2] | 0) + (Math_imul(HEAP32[$data + 4 >> 2] | 0, $idx) | 0) >> 2]);
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN5Oryol10FileSystem7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN5ImGui11GetKeyIndexEi($key) {
 $key = $key | 0;
 if ($key >>> 0 < 19) return HEAP32[146932 + ($key << 2) >> 2] | 0; else ___assert_fail(126514, 124187, 2860, 126547);
 return 0;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZNSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_E7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZN15MemoryMapWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN5Oryol5_priv12emscInputMgrC2Ev($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv12inputMgrBaseC2Ev($this);
 HEAP32[$this + 2128 >> 2] = 0;
 HEAP8[$this + 2132 >> 0] = 0;
 return;
}

function __ZN5ImGui8MemAllocEj($sz) {
 $sz = $sz | 0;
 var $0 = 0;
 $0 = 147664;
 HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
 return FUNCTION_TABLE_ii[HEAP32[147068 >> 2] & 63]($sz) | 0;
}

function __ZN14KeyboardWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN5Oryol24notifyFileSystemReplaced7destroyEv($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 13556;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN13CommandWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZN6SoLoud6Soloud14lockAudioMutexEv($this) {
 $this = $this | 0;
 var $1 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 if (!$1) return;
 __ZN6SoLoud6Thread9lockMutexEPv($1);
 return;
}

function __ZN12ModuleWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN12MemoryWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN12DisasmWindowD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 940;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 __ZN10WindowBaseD2Ev($this);
 return;
}

function __ZN12DisasmWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function ___syscall_ret($r) {
 $r = $r | 0;
 var $$0 = 0;
 if ($r >>> 0 > 4294963200) {
  HEAP32[(___errno_location() | 0) >> 2] = 0 - $r;
  $$0 = -1;
 } else $$0 = $r;
 return $$0 | 0;
}

function __ZN5Oryol7LocatorC2EPKc($this, $loc) {
 $this = $this | 0;
 $loc = $loc | 0;
 __ZN5Oryol10StringAtom16setupFromCStringEPKc($this, $loc);
 HEAP32[$this + 4 >> 2] = -2;
 return;
}

function __ZN5Oryol6Memory4CopyEPKvPvi($from, $to, $numBytes) {
 $from = $from | 0;
 $to = $to | 0;
 $numBytes = $numBytes | 0;
 _memcpy($to | 0, $from | 0, $numBytes | 0) | 0;
 return;
}

function __ZN5Oryol13StringBuilder5ClearEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0 | 0) HEAP8[$0 >> 0] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 return;
}

function __ZN11DebugWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN11AudioWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN5Oryol21notifyFileSystemAdded7destroyEv($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 13556;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN10WindowBase7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN10LoadWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function dynCall_vidii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_vidii[index & 1](a1 | 0, +a2, a3 | 0, a4 | 0);
}

function __ZN9PIOWindowD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 968;
 HEAP32[$this + 36 >> 2] = 0;
 HEAP32[$this + 20 >> 2] = 0;
 __ZN10WindowBaseD2Ev($this);
 return;
}

function __ZN9PIOWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZN9CTCWindow7destroyEv($this) {
 $this = $this | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$this >> 2] | 0) + 4 >> 2] & 255]($this);
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0;
}

function __ZNK5Oryol6String7IsValidEv($this) {
 $this = $this | 0;
 var $1 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 return (HEAP8[(($1 | 0) == 0 ? 163344 : $1) >> 0] | 0) != 0 | 0;
}

function __ZN5Oryol5_priv12pipelineBase5ClearEv($this) {
 $this = $this | 0;
 HEAP32[$this + 344 >> 2] = 0;
 __ZN5Oryol12resourceBaseINS_13PipelineSetupEE5ClearEv($this);
 return;
}

function __ZN5ImGui6ButtonEPKcRK6ImVec2($label, $size_arg) {
 $label = $label | 0;
 $size_arg = $size_arg | 0;
 return __ZN5ImGui8ButtonExEPKcRK6ImVec2i($label, $size_arg, 0) | 0;
}

function __ZNSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEE18destroy_deallocateEv($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN6SoLoud6Thread12destroyMutexEPv($aHandle) {
 $aHandle = $aHandle | 0;
 if (!$aHandle) return;
 _pthread_mutex_destroy($aHandle | 0) | 0;
 __ZdlPv($aHandle);
 return;
}

function __ZN4yakc10kc85_video12ctc_blink_cbEPv($userdata) {
 $userdata = $userdata | 0;
 var $0 = 0;
 $0 = $userdata + 393222 | 0;
 HEAP8[$0 >> 0] = HEAP8[$0 >> 0] ^ 1;
 return;
}

function __ZNK5Oryol6String5EmptyEv($this) {
 $this = $this | 0;
 var $1 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 return (HEAP8[(($1 | 0) == 0 ? 163344 : $1) >> 0] | 0) == 0 | 0;
}

function __ZN5ImGui22SetNextWindowPosCenterEi($cond) {
 $cond = $cond | 0;
 HEAP32[38235] = -8388609;
 HEAP32[38236] = -8388609;
 HEAP32[38242] = $cond | 0 ? $cond : 1;
 return;
}

function __ZN10LoadWindow13SetFileLoaderEP10FileLoader($this, $fileLoader) {
 $this = $this | 0;
 $fileLoader = $fileLoader | 0;
 HEAP32[$this + 20 >> 2] = $fileLoader;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN5Oryol13notifyWorkers7destroyEv($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 13556;
 HEAP32[$this + 12 >> 2] = 0;
 __ZN5Oryol6Memory4FreeEPv($this);
 return;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 31](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 return ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
}

function _strchr($s, $c) {
 $s = $s | 0;
 $c = $c | 0;
 var $0 = 0;
 $0 = ___strchrnul($s, $c) | 0;
 return ((HEAP8[$0 >> 0] | 0) == ($c & 255) << 24 >> 24 ? $0 : 0) | 0;
}

function __ZNSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEEclEv($this) {
 $this = $this | 0;
 __ZN5Oryol2IO6doWorkEv();
 return;
}

function __ZNK5Oryol3URL6AsCStrEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 return HEAP32[(($0 | 0) == 0 ? 13684 : $0 + 12 | 0) >> 2] | 0;
}

function __ZN5Audio6UpdateERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 HEAP32[$this + 110044 >> 2] = (HEAP32[$kc + 65536 >> 2] | 0) * 1e3;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function ___cxa_guard_acquire($p) {
 $p = $p | 0;
 var $$0 = 0;
 if ((HEAP8[$p >> 0] | 0) == 1) $$0 = 0; else {
  HEAP8[$p >> 0] = 1;
  $$0 = 1;
 }
 return $$0 | 0;
}

function __ZNSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 7](a1 | 0, a2 | 0, a3 | 0);
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEED0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN5Oryol10FileSystemC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this >> 2] = 13620;
 HEAP32[$this + 8 >> 2] = 0;
 return;
}

function __ZNK5Oryol13StringBuilder6AsCStrEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 return (($0 | 0) == 0 ? 163344 : $0) | 0;
}

function __ZN5Oryol13StringBuilderC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 return;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function ___errno_location() {
 var $$0 = 0;
 if (!(HEAP32[40694] | 0)) $$0 = 162820; else $$0 = HEAP32[(_pthread_self() | 0) + 64 >> 2] | 0;
 return $$0 | 0;
}

function __ZN6SoLoud6Thread11unlockMutexEPv($aHandle) {
 $aHandle = $aHandle | 0;
 if (!$aHandle) return;
 _pthread_mutex_unlock($aHandle | 0) | 0;
 return;
}

function dynCall_viid(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 FUNCTION_TABLE_viid[index & 1](a1 | 0, a2 | 0, +a3);
}

function __ZNK5Oryol6String6AsCStrEv($this) {
 $this = $this | 0;
 var $1 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 return (($1 | 0) == 0 ? 163344 : $1) | 0;
}

function __ZN15MemoryMapWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 __ZN10WindowBase7setNameEPKc($this, 34981);
 return;
}

function __ZN14KeyboardWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 __ZN10WindowBase7setNameEPKc($this, 36557);
 return;
}

function __ZN5Oryol6Memory5ClearEPvi($ptr, $numBytes) {
 $ptr = $ptr | 0;
 $numBytes = $numBytes | 0;
 _memset($ptr | 0, 0, $numBytes | 0) | 0;
 return;
}

function establishStackSpace(stackBase, stackMax) {
 stackBase = stackBase | 0;
 stackMax = stackMax | 0;
 STACKTOP = stackBase;
 STACK_MAX = stackMax;
}

function __ZNSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNK5Audio18GetProcessedCyclesEv($this) {
 $this = $this | 0;
 var $1 = 0;
 $1 = ___atomic_load_8($this + 110048 | 0, 5) | 0;
 return $1 | 0;
}

function __ZN6SoLoud6Thread9lockMutexEPv($aHandle) {
 $aHandle = $aHandle | 0;
 if (!$aHandle) return;
 _pthread_mutex_lock($aHandle | 0) | 0;
 return;
}

function __ZN12ModuleWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 __ZN10WindowBase7setNameEPKc($this, 36296);
 return;
}

function __ZN12MemoryWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 __ZN10WindowBase7setNameEPKc($this, 34930);
 return;
}

function __ZN10WindowBaseD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 824;
 __ZN5Oryol6StringD2Ev($this + 12 | 0);
 __ZdlPv($this);
 return;
}

function __ZN6SoLoud28BiquadResonantFilterInstanceD0Ev($this) {
 $this = $this | 0;
 __ZN6SoLoud14FilterInstanceD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZN11AudioWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 __ZN10WindowBase7setNameEPKc($this, 37624);
 return;
}

function __ZNSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEE7destroyEv($this) {
 $this = $this | 0;
 return;
}

function __ZNK5Oryol13notifyWorkers8isOfTypeEPv($this, $t) {
 $this = $this | 0;
 $t = $t | 0;
 return ($t | 0) == 163338 | ($t | 0) == 163339 | 0;
}

function __ZN9CTCWindow5SetupERN4yakc4kc85E($this, $kc) {
 $this = $this | 0;
 $kc = $kc | 0;
 __ZN10WindowBase7setNameEPKc($this, 36013);
 return;
}

function b14(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = +p3;
 p4 = +p4;
 p5 = p5 | 0;
 p6 = p6 | 0;
 abort(14);
}

function __ZN6SoLoud19AudioSourceInstanceD0Ev($this) {
 $this = $this | 0;
 __ZN6SoLoud19AudioSourceInstanceD2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 31](a1 | 0, a2 | 0) | 0;
}

function _wctomb($s, $wc) {
 $s = $s | 0;
 $wc = $wc | 0;
 var $$0 = 0;
 if (!$s) $$0 = 0; else $$0 = _wcrtomb($s, $wc, 0) | 0;
 return $$0 | 0;
}

function __ZN5ImGui17GetWindowDrawListEv() {
 var $1 = 0;
 $1 = HEAP32[38201] | 0;
 HEAP8[$1 + 114 >> 0] = 1;
 return HEAP32[$1 + 572 >> 2] | 0;
}

function __ZN5Audio9cb_volumeEPvyi($userdata, $0, $1, $vol) {
 $userdata = $userdata | 0;
 $0 = $0 | 0;
 $1 = $1 | 0;
 $vol = $vol | 0;
 return;
}

function __ZNK5Oryol9IORequest8isOfTypeEPv($this, $t) {
 $this = $this | 0;
 $t = $t | 0;
 return ($t | 0) == 163342 | ($t | 0) == 163339 | 0;
}

function dynCall_dii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return +FUNCTION_TABLE_dii[index & 3](a1 | 0, a2 | 0);
}

function __ZN2UI6ToggleEv($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + 1049464 | 0;
 HEAP8[$0 >> 0] = HEAP8[$0 >> 0] ^ 1;
 return;
}

function __ZNK5Oryol12TextureSetup25ShouldSetupAsRenderTargetEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 680 >> 0] & 8) != 0 | 0;
}

function __ZNK5Oryol12TextureSetup24ShouldSetupFromPixelDataEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 680 >> 0] & 2) != 0 | 0;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function __ZN18kc85_audioinstanceD0Ev($this) {
 $this = $this | 0;
 __ZN6SoLoud19AudioSourceInstanceD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNK5Oryol5_priv14displayMgrBase14IsDisplayValidEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 228 >> 0] | 0) != 0 | 0;
}

function __ZNK5Oryol12TextureSetup21IsRelSizeRenderTargetEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 680 >> 0] & 16) != 0 | 0;
}

function __ZNK5Oryol9MeshSetup25ShouldSetupFullScreenQuadEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 188 >> 0] & 8) != 0 | 0;
}

function __ZN6DisasmC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 0;
 __ZN5Oryol6Memory5ClearEPvi($this + 4 | 0, 64);
 return;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 63](a1 | 0, a2 | 0);
}

function _vsprintf($s, $fmt, $ap) {
 $s = $s | 0;
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 return _vsnprintf($s, 2147483647, $fmt, $ap) | 0;
}

function _fseek($f, $off, $whence) {
 $f = $f | 0;
 $off = $off | 0;
 $whence = $whence | 0;
 return ___fseeko($f, $off, $whence) | 0;
}

function __ZNK5Oryol12TextureSetup19ShouldSetupFromFileEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 680 >> 0] & 1) != 0 | 0;
}

function __ZN10WindowBaseD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 824;
 __ZN5Oryol6StringD2Ev($this + 12 | 0);
 return;
}

function __ZN6SoLoud28BiquadResonantFilterInstanceD2Ev($this) {
 $this = $this | 0;
 __ZN6SoLoud14FilterInstanceD2Ev($this);
 return;
}

function b1(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(1);
}

function __ZN6SoLoud19AudioSourceInstance7getInfoEj($this, $aInfoKey) {
 $this = $this | 0;
 $aInfoKey = $aInfoKey | 0;
 return 0.0;
}

function _mbsinit($st) {
 $st = $st | 0;
 var $4 = 0;
 if (!$st) $4 = 1; else $4 = (HEAP32[$st >> 2] | 0) == 0;
 return $4 & 1 | 0;
}

function __ZNK5Oryol12TextureSetup16ShouldSetupEmptyEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 680 >> 0] & 4) != 0 | 0;
}

function __ZN5Oryol7Gamepad5resetEv($this) {
 $this = $this | 0;
 HEAP32[$this + 4 >> 2] = 0;
 HEAP32[$this + 8 >> 2] = 0;
 return;
}

function __ZN5Oryol10FileSystemD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 13620;
 HEAP32[$this + 8 >> 2] = 0;
 return;
}

function __ZNK5Oryol9MeshSetup19ShouldSetupFromFileEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 188 >> 0] & 1) != 0 | 0;
}

function __ZNK5Oryol21resourceContainerBase7isValidEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 112 >> 0] | 0) != 0 | 0;
}

function __ZNK5Oryol12TextureSetup14HasSharedDepthEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 680 >> 0] & 32) != 0 | 0;
}

function __ZN5Oryol14HTTPFileSystemD0Ev($this) {
 $this = $this | 0;
 __ZN5Oryol10FileSystemD2Ev($this);
 __ZdlPv($this);
 return;
}

function _do_read($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 return ___string_read($f, $buf, $len) | 0;
}

function b16(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = +p4;
 p5 = +p5;
 abort(16);
}

function __ZN5ImGui29GetItemsLineHeightWithSpacingEv() {
 return +(+HEAPF32[37996] + (+HEAPF32[38187] + +HEAPF32[37993] * 2.0));
}

function __ZN16kc85_audiosourceD0Ev($this) {
 $this = $this | 0;
 __ZN6SoLoud11AudioSourceD2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_vid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 FUNCTION_TABLE_vid[index & 1](a1 | 0, +a2);
}

function __ZNK5Oryol9MeshSetup16ShouldSetupEmptyEv($this) {
 $this = $this | 0;
 return (HEAP8[$this + 188 >> 0] & 4) != 0 | 0;
}

function __ZN6SoLoudL23soloud_sdlstatic_deinitEPNS_6SoloudE($aSoloud) {
 $aSoloud = $aSoloud | 0;
 _SDL_CloseAudio();
 return;
}

function __ZN5Oryol5_priv12emscInputMgrD2Ev($this) {
 $this = $this | 0;
 __ZN5Oryol5_priv12inputMgrBaseD2Ev($this);
 return;
}

function b18(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 p5 = +p5;
 abort(18);
}

function __ZN5Oryol6StringC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 0;
 HEAP32[$this + 4 >> 2] = 0;
 return;
}

function __ZNK5Oryol11ShaderSetup16NumTextureBlocksEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 2632 >> 2] | 0;
}

function __ZNSt3__110__function6__baseIFN5Oryol3PtrINS2_14HTTPFileSystemEEEvEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNK5Oryol11ShaderSetup16NumUniformBlocksEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 324 >> 2] | 0;
}

function __ZN5ImGui9OpenPopupEPKc($str_id) {
 $str_id = $str_id | 0;
 __ZN5ImGui11OpenPopupExEPKcb($str_id, 0);
 return;
}

function __ZNK5Oryol9MeshSetup18NumPrimitiveGroupsEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 120 >> 2] | 0;
}

function __ZN6SoLoud6Soloud20getBackendSamplerateEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4140 >> 2] | 0;
}

function __ZN6SoLoud6Soloud20getBackendBufferSizeEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4156 >> 2] | 0;
}

function __ZN15MemoryMapWindowD0Ev($this) {
 $this = $this | 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function _strncpy($d, $s, $n) {
 $d = $d | 0;
 $s = $s | 0;
 $n = $n | 0;
 ___stpncpy($d, $s, $n) | 0;
 return $d | 0;
}

function __ZNSt3__110__function6__baseIFvRKN5Oryol3URLENS2_8IOStatus4CodeEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN14KeyboardWindowD0Ev($this) {
 $this = $this | 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 63](a1 | 0) | 0;
}

function _strcpy($dest, $src) {
 $dest = $dest | 0;
 $src = $src | 0;
 ___stpcpy($dest, $src) | 0;
 return $dest | 0;
}

function _vprintf($fmt, $ap) {
 $fmt = $fmt | 0;
 $ap = $ap | 0;
 return _vfprintf(HEAP32[3487] | 0, $fmt, $ap) | 0;
}

function __ZN12ModuleWindowD0Ev($this) {
 $this = $this | 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZN12MemoryWindowD0Ev($this) {
 $this = $this | 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[40831] | 0;
 HEAP32[40831] = $0 + 0;
 return $0 | 0;
}

function __ZNK5Oryol5_priv14displayMgrBase15GetDisplayAttrsEv($this) {
 $this = $this | 0;
 return $this + 116 | 0;
}

function __ZN6SoLoud6Soloud16getBackendStringEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 4152 >> 2] | 0;
}

function __ZN11AudioWindowD0Ev($this) {
 $this = $this | 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function b4(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(4);
}

function _toupper($c) {
 $c = $c | 0;
 var $1 = 0;
 $1 = (_islower($c) | 0) == 0;
 return ($1 ? $c : $c & 95) | 0;
}

function _tolower($c) {
 $c = $c | 0;
 var $1 = 0;
 $1 = (_isupper($c) | 0) == 0;
 return ($1 ? $c : $c | 32) | 0;
}

function __ZN4yakc3z803irqEPv($userdata) {
 $userdata = $userdata | 0;
 HEAP8[$userdata + 3632 >> 0] = 1;
 return;
}

function __ZN10LoadWindowD0Ev($this) {
 $this = $this | 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZN9CTCWindowD0Ev($this) {
 $this = $this | 0;
 __ZN10WindowBaseD2Ev($this);
 __ZdlPv($this);
 return;
}

function __ZNSt3__110__function6__baseIFvN5Oryol9loadQueue6resultEEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __GLOBAL__sub_I_imgui_cpp() {
 __ZN10ImGuiStateC2Ev(146892);
 __ZN11ImFontAtlasC2Ev(161580);
 return;
}

function __ZNK5Oryol13StringBuilder6LengthEv($this) {
 $this = $this | 0;
 return HEAP32[$this + 8 >> 2] | 0;
}

function __ZN15SnapshotStorageC2Ev($this) {
 $this = $this | 0;
 _memset($this | 0, 0, 1049312) | 0;
 return;
}

function _isalnum($c) {
 $c = $c | 0;
 return (($c + -48 | 0) >>> 0 < 10 | (_isalpha($c) | 0) != 0) & 1 | 0;
}

function __ZN5Oryol3App9OnDestroyEv($this) {
 $this = $this | 0;
 _emscripten_cancel_main_loop();
 return 9;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 255](a1 | 0);
}

function b10(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = +p2;
 p3 = +p3;
 p4 = +p4;
 abort(10);
}

function __ZN5Oryol6Memory5AllocEi($numBytes) {
 $numBytes = $numBytes | 0;
 return _malloc($numBytes) | 0;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN5Oryol6StringD2Ev($this) {
 $this = $this | 0;
 __ZN5Oryol6String7releaseEv($this);
 return;
}

function __ZN5Audio7DiscardEv($this) {
 $this = $this | 0;
 __ZN6SoLoud6Soloud6deinitEv($this);
 return;
}

function _cleanup_387($p) {
 $p = $p | 0;
 if (!(HEAP32[$p + 68 >> 2] | 0)) ___unlockfile($p);
 return;
}

function _cleanup_382($p) {
 $p = $p | 0;
 if (!(HEAP32[$p + 68 >> 2] | 0)) ___unlockfile($p);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN5ImGui13IsItemHoveredEv() {
 return (HEAP8[(HEAP32[38201] | 0) + 240 >> 0] | 0) != 0 | 0;
}

function __ZN6SoLoud20BiquadResonantFilterD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNK5Oryol5_priv14displayMgrBase13QuitRequestedEv($this) {
 $this = $this | 0;
 return 0;
}

function __ZN6SoLoud6FilterC2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 13436;
 return;
}

function __ZL34ImeSetInputScreenPosFn_DefaultImplii($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function _isspace($c) {
 $c = $c | 0;
 return (($c | 0) == 32 | ($c + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function b8(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(8);
}

function b17(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(17);
}

function dynCall_i(index) {
 index = index | 0;
 return FUNCTION_TABLE_i[index & 1]() | 0;
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN6SoLoud19AudioSourceInstance6rewindEv($this) {
 $this = $this | 0;
 return 6;
}

function __ZN5Oryol10FileSystemD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function b0(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(0);
 return 0;
}

function __ZN5Oryol5_priv14displayMgrBase7PresentEv($this) {
 $this = $this | 0;
 return;
}

function __ZN5ImGui10GetScrollYEv() {
 return +(+HEAPF32[(HEAP32[38201] | 0) + 76 >> 2]);
}

function __ZNSt3__110__function6__baseIFvvEED2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN6SoLoud6FilterD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN6SoLoud20BiquadResonantFilterD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN18kc85_audioinstance8hasEndedEv($this) {
 $this = $this | 0;
 return 0;
}

function _isalpha($c) {
 $c = $c | 0;
 return (($c | 32) + -97 | 0) >>> 0 < 26 | 0;
}

function __ZN5Oryol3App16OnEnqueuePreloadEv($this) {
 $this = $this | 0;
 return 2;
}

function runPostSets() {}
function _pthread_mutex_lock(x) {
 x = x | 0;
 return 0;
}

function _copysignl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_copysign($x, $y));
}

function __ZNK6Disasm6ResultEv($this) {
 $this = $this | 0;
 return $this + 4 | 0;
}

function _scalbnl($x, $n) {
 $x = +$x;
 $n = $n | 0;
 return +(+_scalbn($x, $n));
}

function b11(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(11);
}

function __ZN5Oryol10FileSystem8initLaneEv($this) {
 $this = $this | 0;
 return;
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 3]();
}

function _frexpl($x, $e) {
 $x = +$x;
 $e = $e | 0;
 return +(+_frexp($x, $e));
}

function __ZN5Oryol3App12OnPreloadingEv($this) {
 $this = $this | 0;
 return 3;
}

function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this | 0;
 return 146440;
}

function __ZN5Oryol3App11OnConstructEv($this) {
 $this = $this | 0;
 return 1;
}

function b13(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = +p2;
 abort(13);
}

function __ZN5Oryol5Input7IsValidEv() {
 return (HEAP32[36706] | 0) != 0 | 0;
}

function __ZL30GetClipboardTextFn_DefaultImplv() {
 return HEAP32[39494] | 0;
}

function _isupper($c) {
 $c = $c | 0;
 return ($c + -65 | 0) >>> 0 < 26 | 0;
}

function _isprint($c) {
 $c = $c | 0;
 return ($c + -32 | 0) >>> 0 < 95 | 0;
}

function _islower($c) {
 $c = $c | 0;
 return ($c + -97 | 0) >>> 0 < 26 | 0;
}

function __ZN5Oryol6Memory4FreeEPv($p) {
 $p = $p | 0;
 _free($p);
 return;
}

function __ZN5Oryol3Gfx7IsValidEv() {
 return (HEAP32[36694] | 0) != 0 | 0;
}

function __ZN5Oryol3App9OnRunningEv($this) {
 $this = $this | 0;
 return 5;
}

function _fmodl($x, $y) {
 $x = +$x;
 $y = +$y;
 return +(+_fmod($x, $y));
}

function __ZN5Oryol2IO7IsValidEv() {
 return (HEAP32[36715] | 0) != 0 | 0;
}

function b2(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(2);
 return 0.0;
}

function b15(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(15);
 return 0;
}

function __ZN10FileLoader7DiscardEv($this) {
 $this = $this | 0;
 return;
}

function __ZN5Oryol3App6OnInitEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZN5ImGui17GetTextLineHeightEv() {
 return +(+HEAPF32[38187]);
}

function __Znaj($size) {
 $size = $size | 0;
 return __Znwj($size) | 0;
}

function __ZN6SoLoud6FilterD2Ev($this) {
 $this = $this | 0;
 return;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function __ZN5ImGui7EndMenuEv() {
 __ZN5ImGui8EndPopupEv();
 return;
}

function __ZdaPv($ptr) {
 $ptr = $ptr | 0;
 __ZdlPv($ptr);
 return;
}

function __ZNSt9type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9exceptionD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZN4Draw7DiscardEv($this) {
 $this = $this | 0;
 return;
}

function ___cxa_pure_virtual__wrapper() {
 ___cxa_pure_virtual();
}

function __ZdlPv($ptr) {
 $ptr = $ptr | 0;
 _free($ptr);
 return;
}

function _ftell($f) {
 $f = $f | 0;
 return ___ftello($f) | 0;
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function b7(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(7);
}

function _pthread_mutex_unlock(x) {
 x = x | 0;
 return 0;
}

function ___cxa_guard_release($0) {
 $0 = $0 | 0;
 return;
}

function b3(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 abort(3);
}

function __ZN5Oryol4Core12IsMainThreadEv() {
 return 1;
}

function b9(p0) {
 p0 = p0 | 0;
 abort(9);
 return 0;
}

function ___unlockfile($f) {
 $f = $f | 0;
 return;
}

function ___lockfile($f) {
 $f = $f | 0;
 return 0;
}

function __ZN5ImGui8GetStyleEv() {
 return 151936;
}

function __ZN5ImGui5GetIOEv() {
 return 146896;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b6(p0) {
 p0 = p0 | 0;
 abort(6);
}

function b5() {
 abort(5);
 return 0;
}

function _pthread_self() {
 return 0;
}

function b12() {
 abort(12);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiii = [b0,___stdout_write,___stdio_seek,_sn_write,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZN6Disasm5fetchEtiPv,__ZN5Oryol5_priv14emscDisplayMgr21emscCanvasSizeChangedEiPKvPv,__ZN5Oryol5_priv12emscInputMgr11emscKeyDownEiPK23EmscriptenKeyboardEventPv,__ZN5Oryol5_priv12emscInputMgr9emscKeyUpEiPK23EmscriptenKeyboardEventPv,__ZN5Oryol5_priv12emscInputMgr12emscKeyPressEiPK23EmscriptenKeyboardEventPv,__ZN5Oryol5_priv12emscInputMgr13emscMouseDownEiPK20EmscriptenMouseEventPv,__ZN5Oryol5_priv12emscInputMgr11emscMouseUpEiPK20EmscriptenMouseEventPv,__ZN5Oryol5_priv12emscInputMgr13emscMouseMoveEiPK20EmscriptenMouseEventPv,__ZN5Oryol5_priv12emscInputMgr9emscWheelEiPK20EmscriptenWheelEventPv,__ZN5Oryol5_priv12emscInputMgr9emscTouchEiPK20EmscriptenTouchEventPv,__ZN5Oryol5_priv12emscInputMgr16emscDeviceMotionEiPK27EmscriptenDeviceMotionEventPv,__ZN5Oryol5_priv12emscInputMgr21emscDeviceOrientationEiPK32EmscriptenDeviceOrientationEventPv,___stdio_write,___stdio_read,_do_read,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0];
var FUNCTION_TABLE_viiiiii = [b1,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b1];
var FUNCTION_TABLE_dii = [b2,__ZN6SoLoud19AudioSourceInstance7getInfoEj,__ZN6SoLoud14FilterInstance18getFilterParameterEj,__ZL16Plot_ArrayGetterPvi];
var FUNCTION_TABLE_vid = [b3,__ZN6SoLoud14FilterInstance12updateParamsEd];
var FUNCTION_TABLE_viiiii = [b4,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZN5Audio8cb_soundEPvyii];
var FUNCTION_TABLE_i = [b5,__ZL30GetClipboardTextFn_DefaultImplv];
var FUNCTION_TABLE_vi = [b6,__ZN5Oryol3App7onFrameEv,__ZNSt3__110__function6__baseIFN5Oryol3PtrINS2_14HTTPFileSystemEEEvEED2Ev,__ZNSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_ED0Ev,__ZNSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_E7destroyEv,__ZNSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_E18destroy_deallocateEv,__ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEED2Ev,__ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEED0Ev,__ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEE7destroyEv,__ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEE18destroy_deallocateEv,__ZNSt3__110__function6__baseIFvN5Oryol9loadQueue6resultEEED2Ev,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv
,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv,__ZN6SoLoud11AudioSourceD2Ev,__ZN16kc85_audiosourceD0Ev,__ZN6SoLoud19AudioSourceInstanceD2Ev,__ZN18kc85_audioinstanceD0Ev,__ZN12MemoryWindow7destroyEv,__ZN10WindowBaseD2Ev,__ZN12MemoryWindowD0Ev,__ZN15MemoryMapWindow7destroyEv,__ZN15MemoryMapWindowD0Ev,__ZN10WindowBase7destroyEv,__ZN10WindowBaseD0Ev,__ZN11DebugWindow7destroyEv,__ZN11DebugWindowD2Ev,__ZN11DebugWindowD0Ev,__ZN12DisasmWindow7destroyEv,__ZN12DisasmWindowD2Ev,__ZN12DisasmWindowD0Ev,__ZN9PIOWindow7destroyEv,__ZN9PIOWindowD2Ev,__ZN9PIOWindowD0Ev,__ZN9CTCWindow7destroyEv
,__ZN9CTCWindowD0Ev,__ZN12ModuleWindow7destroyEv,__ZN12ModuleWindowD0Ev,__ZN14KeyboardWindow7destroyEv,__ZN14KeyboardWindowD0Ev,__ZN10LoadWindow7destroyEv,__ZN10LoadWindowD0Ev,__ZN13CommandWindow7destroyEv,__ZN13CommandWindowD2Ev,__ZN13CommandWindowD0Ev,__ZN11AudioWindow7destroyEv,__ZN11AudioWindowD0Ev,__ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEED0Ev,__ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEE7destroyEv,__ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEE18destroy_deallocateEv,__ZNSt3__110__function6__baseIFvRKN5Oryol3URLENS2_8IOStatus4CodeEEED2Ev,__ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEED0Ev,__ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEE7destroyEv,__ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEE18destroy_deallocateEv,__ZNSt3__110__function6__baseIFvvEED2Ev,__ZNSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEED0Ev,__ZNSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEE7destroyEv,__ZNSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEEclEv,__ZNSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEED0Ev,__ZNSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEE7destroyEv,__ZNSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEEclEv,__ZN5Oryol14HTTPFileSystem7destroyEv,__ZN5Oryol10FileSystemD2Ev
,__ZN5Oryol14HTTPFileSystemD0Ev,__ZN5Oryol10FileSystem8initLaneEv,__ZNSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEED0Ev,__ZNSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEE7destroyEv,__ZNSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEEclEv,__ZN6SoLoud28BiquadResonantFilterInstanceD2Ev,__ZN6SoLoud28BiquadResonantFilterInstanceD0Ev,__ZN6SoLoud20BiquadResonantFilterD2Ev,__ZN6SoLoud20BiquadResonantFilterD0Ev,__ZN6SoLoud19AudioSourceInstanceD0Ev,__ZN6SoLoud11AudioSourceD0Ev,__ZN6SoLoud6FilterD2Ev,__ZN6SoLoud6FilterD0Ev,__ZN6SoLoud14FilterInstanceD2Ev,__ZN6SoLoud14FilterInstanceD0Ev,__ZNSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEED0Ev,__ZNSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEE7destroyEv,__ZNSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEE18destroy_deallocateEv,__ZNSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEEclEv,__ZN5Oryol21notifyFileSystemAdded7destroyEv,__ZN5Oryol13notifyWorkers7destroyEv,__ZN5Oryol24notifyFileSystemReplaced7destroyEv,__ZN5Oryol9IORequest7destroyEv,__ZN5Oryol6IORead7destroyEv,__ZN5Oryol10FileSystem7destroyEv,__ZN5Oryol10FileSystemD0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev
,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZN4yakc10kc85_audio10ctc_write0EPv,__ZN4yakc10kc85_audio10ctc_write1EPv,__ZN4yakc3z803irqEPv,__ZN4yakc6z80ctc5ctrg2EPv,__ZN4yakc10kc85_video11pal_line_cbEPv,__ZN4yakc10kc85_video12ctc_blink_cbEPv,__ZN5Oryol5_priv13emscURLLoader8onFailedEPv,__ZN5Oryol5_priv12imguiWrapper20imguiRenderDrawListsEP10ImDrawData,__ZN6SoLoudL23soloud_sdlstatic_deinitEPNS_6SoloudE,_free,__ZL30SetClipboardTextFn_DefaultImplPKc,_cleanup_387,_cleanup_382,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_vii = [b7,__ZNKSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_E7__cloneEPNS0_6__baseIS8_EE,__ZNKSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEE7__cloneEPNS0_6__baseISD_EE,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE,__ZNSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_,__ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_,__ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_,__ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_,__ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseIS9_EE,__ZNSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEEclEOS8_,__ZN12MemoryWindow5SetupERN4yakc4kc85E,__ZN15MemoryMapWindow5SetupERN4yakc4kc85E,__ZN11DebugWindow5SetupERN4yakc4kc85E,__ZN12DisasmWindow5SetupERN4yakc4kc85E,__ZN9PIOWindow5SetupERN4yakc4kc85E,__ZN9CTCWindow5SetupERN4yakc4kc85E,__ZN12ModuleWindow5SetupERN4yakc4kc85E,__ZN14KeyboardWindow5SetupERN4yakc4kc85E
,__ZN10LoadWindow5SetupERN4yakc4kc85E,__ZN13CommandWindow5SetupERN4yakc4kc85E,__ZN11AudioWindow5SetupERN4yakc4kc85E,__ZNKSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEE7__cloneEPNS0_6__baseISF_EE,__ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEEclEOSE_,__ZNKSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEE7__cloneEPNS0_6__baseISI_EE,__ZNKSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEE7__cloneEPNS0_6__baseISA_EE,__ZNKSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEE7__cloneEPNS0_6__baseISE_EE,__ZN5Oryol10FileSystem4initERKNS_10StringAtomE,__ZN5Oryol14HTTPFileSystem5onMsgERKNS_3PtrINS_9IORequestEEE,__ZNKSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEE7__cloneEPNS0_6__baseISB_EE,__ZNKSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEE7__cloneEPNS0_6__baseISA_EE,__ZN5Oryol10FileSystem5onMsgERKNS_3PtrINS_9IORequestEEE,__ZL34ImeSetInputScreenPosFn_DefaultImplii,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_viiii = [b8,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZN5Audio9cb_volumeEPvyi,__ZN5Audio7cb_stopEPvyi,b8,b8,b8];
var FUNCTION_TABLE_ii = [b9,__ZN5Oryol3App11OnConstructEv,__ZN5Oryol3App16OnEnqueuePreloadEv,__ZN5Oryol3App12OnPreloadingEv,__ZN7YakcApp6OnInitEv,__ZN7YakcApp9OnRunningEv,__ZN7YakcApp9OnCleanupEv,__ZN5Oryol3App9OnDestroyEv,__ZNKSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_E7__cloneEv,__ZNSt3__110__function6__funcIZN5Oryol14HTTPFileSystem7CreatorIJEEENS_8functionIFNS2_3PtrIS3_EEvEEEDpT_EUlvE_NS_9allocatorISC_EES8_EclEv,__ZNKSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEE7__cloneEv,__ZNSt3__110__function6__funcINS_8functionIFN5Oryol3PtrINS3_14HTTPFileSystemEEEvEEENS_9allocatorIS8_EEFNS4_INS3_10FileSystemEEEvEEclEv,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__0NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__1NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__2NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__3NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN7YakcApp8initRomsEvE3__4NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__5NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__6NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__7NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN7YakcApp11initModulesEvE3__8NS_9allocatorIS3_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZN16kc85_audiosource14createInstanceEv,__ZN18kc85_audioinstance8hasEndedEv,__ZN6SoLoud19AudioSourceInstance6rewindEv,__ZNKSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__0NS_9allocatorIS9_EEFvN5Oryol9loadQueue6resultEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEE7__cloneEv,__ZNKSt3__110__function6__funcIZN5Oryol3Gfx5SetupERKNS2_8GfxSetupEE3__0NS_9allocatorIS7_EEFvvEE7__cloneEv,__ZNKSt3__110__function6__funcIZN5Oryol5_priv24gfxResourceContainerBase5setupERKNS2_8GfxSetupERKNS3_11gfxPointersEE3__0NS_9allocatorISB_EEFvvEE7__cloneEv,__ZNKSt3__110__function6__funcIZN5Oryol5_priv12emscInputMgr5setupERKNS2_10InputSetupEE3__0NS_9allocatorIS8_EEFvvEE7__cloneEv
,__ZN6SoLoud20BiquadResonantFilter14createInstanceEv,__ZNKSt3__110__function6__funcIZN5Oryol2IO5SetupERKNS2_7IOSetupEE3__0NS_9allocatorIS7_EEFvvEE7__cloneEv,__ZN5Oryol3App6OnInitEv,__ZN5Oryol3App9OnRunningEv,__ZN5Oryol3App9OnCleanupEv,___stdio_close,__ZNKSt9bad_alloc4whatEv,__ZZN12MemoryEditor4DrawEPKcPFhPvtEPFvS2_thES2_EN10FuncHolder8CallbackEP25ImGuiTextEditCallbackData,_malloc,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
,b9,b9,b9,b9,b9];
var FUNCTION_TABLE_viiddd = [b10,__ZN6SoLoud14FilterInstance19fadeFilterParameterEjfdd];
var FUNCTION_TABLE_viii = [b11,__ZN6SoLoud11AudioSource9setFilterEjPNS_6FilterE,__ZN18kc85_audioinstance8getAudioEPfj,__ZNSt3__110__function6__funcIZN10FileLoader4loadEPN4yakc4kc85ERKNS2_4ItemEbE3__1NS_9allocatorIS9_EEFvRKN5Oryol3URLENSC_8IOStatus4CodeEEEclESF_OSH_,__ZN4yakc4kc856out_cbEPvth,__ZL10write_funcPvth,__ZN5Oryol5_priv13emscURLLoader8onLoadedEPvS2_i,__ZN6SoLoud27soloud_sdlstatic_audiomixerEPvPhi];
var FUNCTION_TABLE_v = [b12,___cxa_pure_virtual__wrapper,__ZN5Oryol3App13staticOnFrameEv,b12];
var FUNCTION_TABLE_viid = [b13,__ZN6SoLoud14FilterInstance18setFilterParameterEjf];
var FUNCTION_TABLE_viiiddii = [b14,__ZN6SoLoud28BiquadResonantFilterInstance13filterChannelEPfjfdjj,__ZN6SoLoud14FilterInstance13filterChannelEPfjfdjj,b14];
var FUNCTION_TABLE_iii = [b15,__ZN12MemoryWindow4DrawERN4yakc4kc85E,__ZN15MemoryMapWindow4DrawERN4yakc4kc85E,__ZN11DebugWindow4DrawERN4yakc4kc85E,__ZN12DisasmWindow4DrawERN4yakc4kc85E,__ZN9PIOWindow4DrawERN4yakc4kc85E,__ZN9CTCWindow4DrawERN4yakc4kc85E,__ZN12ModuleWindow4DrawERN4yakc4kc85E,__ZN14KeyboardWindow4DrawERN4yakc4kc85E,__ZN10LoadWindow4DrawERN4yakc4kc85E,__ZN13CommandWindow4DrawERN4yakc4kc85E,__ZN11AudioWindow4DrawERN4yakc4kc85E,__ZN6SoLoud14FilterInstance10initParamsEi,__ZNK5Oryol21notifyFileSystemAdded8isOfTypeEPv,__ZNK5Oryol13notifyWorkers8isOfTypeEPv,__ZNK5Oryol24notifyFileSystemReplaced8isOfTypeEPv,__ZNK5Oryol9IORequest8isOfTypeEPv,__ZNK5Oryol6IORead8isOfTypeEPv,__ZN4yakc4kc855in_cbEPvt,__ZL9read_funcPvt,__ZL19ChildWindowComparerPKvS0_,__ZL19rect_height_comparePKvS0_,__ZL19rect_original_orderPKvS0_,b15,b15,b15,b15,b15,b15
,b15,b15,b15];
var FUNCTION_TABLE_viiiidd = [b16,__ZN6SoLoud14FilterInstance6filterEPfjjfd];
var FUNCTION_TABLE_vidii = [b17,__ZN6SoLoud19AudioSourceInstance4seekEdPfj];
var FUNCTION_TABLE_viidddd = [b18,__ZN6SoLoud14FilterInstance24oscillateFilterParameterEjffdd];

  return { _main: _main, ___udivdi3: ___udivdi3, _enter_soft_fullscreen: _enter_soft_fullscreen, _bitshift64Lshr: _bitshift64Lshr, ___udivmoddi4: ___udivmoddi4, _llvm_cttz_i32: _llvm_cttz_i32, _i64Add: _i64Add, _memcpy: _memcpy, ___muldi3: ___muldi3, _bitshift64Shl: _bitshift64Shl, ___uremdi3: ___uremdi3, ___divdi3: ___divdi3, _i64Subtract: _i64Subtract, _memset: _memset, _enter_fullscreen: _enter_fullscreen, _pthread_self: _pthread_self, _pthread_mutex_unlock: _pthread_mutex_unlock, ___muldsi3: ___muldsi3, _free: _free, _memmove: _memmove, _malloc: _malloc, _pthread_mutex_lock: _pthread_mutex_lock, __GLOBAL__sub_I_imgui_cpp: __GLOBAL__sub_I_imgui_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_dii: dynCall_dii, dynCall_vid: dynCall_vid, dynCall_viiiii: dynCall_viiiii, dynCall_i: dynCall_i, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_viiii: dynCall_viiii, dynCall_ii: dynCall_ii, dynCall_viiddd: dynCall_viiddd, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_viid: dynCall_viid, dynCall_viiiddii: dynCall_viiiddii, dynCall_iii: dynCall_iii, dynCall_viiiidd: dynCall_viiiidd, dynCall_vidii: dynCall_vidii, dynCall_viidddd: dynCall_viidddd };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var _main = Module["_main"] = asm["_main"];
var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
var _enter_soft_fullscreen = Module["_enter_soft_fullscreen"] = asm["_enter_soft_fullscreen"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _memset = Module["_memset"] = asm["_memset"];
var _enter_fullscreen = Module["_enter_fullscreen"] = asm["_enter_fullscreen"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
var ___divdi3 = Module["___divdi3"] = asm["___divdi3"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _pthread_self = Module["_pthread_self"] = asm["_pthread_self"];
var _pthread_mutex_unlock = Module["_pthread_mutex_unlock"] = asm["_pthread_mutex_unlock"];
var __GLOBAL__sub_I_imgui_cpp = Module["__GLOBAL__sub_I_imgui_cpp"] = asm["__GLOBAL__sub_I_imgui_cpp"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _pthread_mutex_lock = Module["_pthread_mutex_lock"] = asm["_pthread_mutex_lock"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viiddd = Module["dynCall_viiddd"] = asm["dynCall_viiddd"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_viiiddii = Module["dynCall_viiiddii"] = asm["dynCall_viiiddii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_viiiidd = Module["dynCall_viiiidd"] = asm["dynCall_viiiidd"];
var dynCall_vidii = Module["dynCall_vidii"] = asm["dynCall_vidii"];
var dynCall_viidddd = Module["dynCall_viidddd"] = asm["dynCall_viidddd"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===



if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, Runtime.GLOBAL_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, Runtime.GLOBAL_BASE);
      // Delete the typed array that contains the large blob of the memory initializer request response so that
      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.
      // its .status field can still be accessed later.
      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;
      removeRunDependency('memory initializer');
    }
    function doBrowserLoad() {
      Module['readAsync'](memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
    if (Module['memoryInitializerRequest']) {
      // a network request has already been created, just use that
      function useRequest() {
        var request = Module['memoryInitializerRequest'];
        if (request.status !== 200 && request.status !== 0) {
          // If you see this warning, the issue may be that you are using locateFile or memoryInitializerPrefixURL, and defining them in JS. That
          // means that the HTML file doesn't know about them, and when it tries to create the mem init request early, does it to the wrong place.
          // Look in your browser's devtools network console to see what's going on.
          console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);
          doBrowserLoad();
          return;
        }
        applyMemoryInitializer(request.response);
      }
      if (Module['memoryInitializerRequest'].response) {
        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously
      } else {
        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it
      }
    } else {
      // fetch it from the network ourselves
      doBrowserLoad();
    }
  }
}


function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }


  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();


    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  } else if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}

Module["noExitRuntime"] = true;

run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}






